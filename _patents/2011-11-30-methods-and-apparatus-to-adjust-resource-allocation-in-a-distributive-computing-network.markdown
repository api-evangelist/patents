---
title: Methods and apparatus to adjust resource allocation in a distributive computing network
abstract: Methods and apparatus are disclosed to adjust resource allocation in a distributive computing network. An example method includes receiving data representing performance of a first resource allocation provided by the distributive computing network. The example method includes receiving a resource request specifying a second resource allocation to be provided by the distributive computing network. The example method includes simulating the distributive computing network using the data to determine an operating configuration for adjusting the first resource allocation to satisfy the resource request with a third resource allocation, different than the second resource allocation. The example method includes adjusting the first resource allocation based on the operating configuration.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08832249&OS=08832249&RS=08832249
owner: AT&T Intellectual Property I, L.P.
number: 08832249
owner_city: Atlanta
owner_country: US
publication_date: 20111130
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE DISCLOSURE","BACKGROUND","DETAILED DESCRIPTION"],"p":["This disclosure relates generally to distributive computing networks, and, more particularly, to methods and apparatus to adjust resource allocation in a distributive computing network.","Cloud computing platforms are becoming popular with customers by providing flexible, on demand resources at a relatively low cost. A cloud computing network, also known as a distributive or distributed computing network, enables clients to manage web-based applications (e.g., services) and\/or data resources by dynamically leasing resources from service providers. This dynamic leasing of resources creates the appearance and function of a distributive computing network and, thus, can be referred to as virtualization of a computer network. Since cloud computing platforms utilize virtualization of network and\/or computing resources, new resources for a client may be allocated to the client as needed within short periods of time by a service provider. Additionally, cloud computing virtualization enables service providers to dynamically multiplex resources among multiple clients without dedicating individual physical resources to each client.","Example methods, systems, apparatus and\/or computer-readable storage media disclosed herein adjust resource allocation in a distributive computing network. A disclosed example method includes receiving data representing performance of a first resource allocation provided by the distributive computing network. The example method also includes receiving a resource request specifying a second resource allocation to be provided by the distributive computing network. The example method further includes simulating the distributive computing network using the data to determine an operating configuration for adjusting the first resource allocation to satisfy the resource request with a third resource allocation, different than the second resource allocation. In some examples, the example method further includes adjusting the first resource allocation based on the operating configuration.","A disclosed example system includes a data receiver to receive data representing performance of a first resource allocation provided by a distributive computing network. The example system also includes a resource request receiver to receive a resource request specifying a second resource allocation to be provided by the distributive computing network. The example system further includes a cloud resource simulator to simulate the distributive computing network using the data to determine an operating configuration for adjusting the first resource allocation to satisfy the resource request with a third resource allocation, different than the second resource allocation. In some examples, the example system includes a cloud resource adjuster to adjust the first resource allocation based on the operating configuration.","A disclosed example tangible computer-readable medium includes instructions that, when executed, cause a computing device to receive data representing performance of a first resource allocation provided by a distributive computing network. The example instructions also cause the computing device to receive a resource request specifying a second resource allocation to be provided by the distributive computing network. The example instructions further cause the computing device to simulate the distributive computing network using the data to determine an operating configuration for adjusting the first resource allocation to satisfy the resource request with a third resource allocation, different than the second resource allocation. In some examples, the example instructions cause the computing device to adjust the first resource allocation based on the operating configuration.","Distributive or distributed computing networks (e.g., cloud computing networks) enable subscribing clients (e.g., customers and\/or service deployers) to flexibly lease servers and\/or other computing resources based on actual usage. Distributive computing networks are typically used by clients to host services that may be implemented as software-as-a-service (SaaS). SaaS systems may include web-based front-end applications (e.g., online retail businesses) and\/or data processing applications (e.g., online document processing applications). Further, distributive computing networks may be implemented as infrastructure-as-a-service (IaaS) data storage applications and\/or platform-as-a-service (PaaS) customized applications. For example, web-based applications may be designed for customers to purchase goods or services (e.g., an online retail site), enroll in a service (e.g., an online news reporting site), etc. The clients that may deploy web-based services, data processing services, and\/or customized services may range from enterprise level businesses to entrepreneurial individuals. In some examples, a client may subscribe to a distributive computing network that is operated by a service provider. In such examples, the cloud service provider manages the allocation of resources within the distributive computing network for each hosted service.","The cloud service providers (e.g., cloud computing managers) may allocate resources based on, for example, consumer, customer, and\/or client usage to maximize an operating efficiency (e.g., scalability) of multiple services hosted by resources. These resources may be grouped as virtual units (e.g., virtual machines, virtual network resources, etc.) that utilize the computing, storage, and\/or network resources of one or more servers (e.g., processors, data storage databases, etc.) and\/or networks (e.g., local area networks, wide area networks, etc.) to host a service. The service providers may assign respective Internet Protocol (IP) addresses to each virtual unit and\/or to each distributive computing network resource. The IP addresses may then be used by the service provider to route network traffic to the virtual units hosting the requested service.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1","b":["100","102","100","100","100","104","100","100"]},"In another example, the user  may request certain size(s) and\/or type(s) of resources. In some examples, the simulator  may determine a more efficient way to provide the user with the requested service (e.g., using different size(s), type(s), and\/or location(s) of resources). In such examples, the user is provided with the same level of service, but the distributive computing network  is able to optimize the manner with which it provides the service (e.g., in terms of lower cost, increased speed, reduced resource use, etc.).","The distributive computing network  of the illustrated example is implemented in connection with an example network  (e.g., the Internet). The network  of the illustrated example includes any type of network for routing packet-based communications (e.g., data). The network  may be implemented, for example, by any type of public switched telephone network (PSTN) system(s), public land-mobile network (PLMN) system(s), wireless distribution system(s), wired or cable distribution system(s), coaxial cable distribution system(s), fiber-to-the-home network(s), fiber-to-the-curb network(s), fiber-to-the-pedestal network(s), fiber-to-the-vault network(s), fiber-to-the-neighborhood network(s), Ultra High Frequency (UHF)\/Very High Frequency (VHF) radio frequency system(s), satellite or other extra-terrestrial system(s), cellular distribution system(s), power-line broadcast system(s), and\/or combinations and\/or hybrids of these devices, systems and\/or networks.","The distributive computing network  of the illustrated example is accessed by the user . The user  of the illustrated example includes a customer and\/or a user of a service hosted by the example distributive computing network . The distributive computing network  of the illustrated example hosts one or more services for the user  using a resource allocation based on, for example, usage requirements, bandwidth requirements, processor efficiency, etc. The user  of the illustrated example accesses the service from any location via the example network . Further, the example user  may include any individual, organization, and\/or enterprise that may access the network  via any type of network and\/or gateway including a Virtual Private Network (VPN), a Local Area Network (LAN), a Virtual LAN (VLAN), a Multiprotocol Label Switching (MPLS) VPN, etc. The example distributive computing network  may be accessed by multiple users, but for ease of description, reference will be made to the user .","The distributive computing network  of the illustrated example includes an example portal  to interface with the user  and to facilitate communication between the user  and the distributive communication network . The portal  of the illustrated example allows a new and\/or existing customer (e.g., the user ) to request and\/or modify cloud services and\/or resource allocation provided by the distributive communication network . The user  may utilize the portal  of the illustrated example to create requests by providing resource allocation information. The resource allocation information may include information for creating a virtual unit to host a service, information for partitioning the virtual unit into one or more virtualized groups, information defining a framework, environment, and\/or runtime technology for hosting a service, etc, and\/or any combination thereof. In some examples, the resource allocation information may include, but is not limited to, a configuration type (e.g., a virtualized group or domain type), one or more configuration groups within a configuration type, a location for one or more portions of the physical resources grouped together by a virtual unit, a data storage requirement, a bandwidth requirement, a runtime engine requirement, an operating system requirement, an application type, a service type, a hosting environment requirement, a lifecycle environment, and\/or a size requirement for a portion of the distributive computing network .","The distributive computing network  of the illustrated example may provide the user  with basic resource allocation options (e.g., to select among a small, medium, or large number of resources) or may allow the user  to build and\/or design the resource allocation (e.g., from scratch). For example, the user  may select one resource allocation parameter and, based on that selection, the distributive computing network  may provide a second resource allocation parameter for the user  to select, and so on until a complete resource allocation had been determined.","Further, the portal  of the illustrated example facilitates creation and\/or acceptance of a service level agreement (\u201cSLA\u201d) between the user  and the example distributive computing network . The SLA specifies, for example, resource allocations, resource allocation strategies (e.g., at the lowest cost possible), resource conditions which require user intervention and\/or input, and\/or basic performance levels to be provided to the user  by the example distributive computing network .","The distributive computing network  of the illustrated example includes an example business support system\/open source software (\u201cBSS\/OSS\u201d) layer  to implement support functions and\/or services for the user  via the portal . Functions and\/or services offered by the BSS\/OSS  may relate to, for example, sales, service mediation, service assurance, trouble management, usage manager, billing mediation, capacity planning, billing, etc.","The distributive computing network  of the illustrated example includes an example orchestration management and control layer (\u201corchestrator\u201d)  to implement, update, lease, release, and\/or remove resources in the distributive computing network . The orchestrator  of the illustrated example provides orchestration management functions to support static and\/or dynamic executions to host services for the user . Orchestration management functions may include, for example, select, configure, create, preserve, delete, recover, restore, and\/or notify.","The orchestrator  of the illustrated example provides orchestration control functions to control resources used to host services for the user . The orchestrator  may include, for example, one or more of an internal cross domain controller, an external cross domain controller, and an individual domain controller. The internal cross domain controller of the example orchestrator  may use the orchestration management functions to coordinate, monitor, correlate, and\/or request resources among multiple individual domain controllers (e.g., other individual domain controllers within the example orchestrator ). The external cross domain controller of the example orchestrator  may use the orchestration management functions to request, support, and\/or coordinate resources from and\/or to an external cloud resource provider (e.g., internal resources managed by another orchestrator within the example distributive computing network  or resources managed by another distributive computing network or cloud computing provider). The individual domain controller of the example orchestrator  may request, support, monitor, and\/or correlate resources within a single domain. A domain may include, for example, a domain name system (\u201cDNS\u201d), a network domain, a storage domain, a computing domain, etc. Thus, the orchestrator  of the illustrated example may include a computing controller, a storage controller, a network controller, etc.","The distributive computing network  of the illustrated example includes an example virtual unit manager (\u201cVU manager\u201d)  to facilitate the control, creation, allocation, and\/or distribution of services hosted by the resources of the example distributive computing network . In a centralized example, the VU manager  receives instructions from the orchestrator  to create and\/or allocate services and\/or resources within the example distributive computing network . In a decentralized example, the VU manager  assumes these control functions. In the illustrated example, the VU manager  creates and\/or allocates resources based on, for example, the resource request input by the user  and the SLA agreed to by the user .","In the illustrated example, the services and\/or resources created and\/or allocated by the VU manager  are organized into virtual units. A virtual unit may be created for each hosted service or a single virtual unit may host multiple servers. A virtual unit may include any number of servers, computing resources, processors, storage resources, networking resources, etc. Virtual units may be created to support, for example, computing, storage, and network domains. The VU manager  of the illustrated example creates and configures a virtual unit to provide a specific domain resource (e.g., computing, storage, or network resources) as instructed by the example orchestrator . The VU manager  may create, for example, a virtual machine to provide computing and\/or storage resources and\/or a VLAN to provide network resources. The VU manager  of the illustrated example creates and manages resources in any and\/or all of the computing, storage, and network domains.","The VU manager  of the illustrated example also creates a virtual unit agent (\u201cVU agent\u201d) corresponding to each virtual unit. A VU agent is created and utilized to monitor its corresponding virtual unit and to collect statistical data related to the performance of its corresponding virtual unit (e.g., in terms of central processing unit (\u201cCPU\u201d) usage, memory usage, network traffic, etc.), which is also referred to herein as production data. As virtual units are operating (e.g., providing services and\/or resources to the user ), VU agents collect the production data of their corresponding virtual units and forward this production data to the VU manager .","The VU manager  of the illustrated example analyzes the production data to determine resource usage trends and\/or predict resource needs. For example, if the VU manager  determines use of resources is low during a certain time, the VU manager  may inform the example orchestrator  to lease these resources to another cloud computing provider during these times. In another example, the orchestrator  may offer these resources to users (e.g., user ) as part of a promotion (e.g., the resources may be free or offered at a discounted price during low usage times).","In the example of , the VU manager  creates an example virtual unit  to provide virtual resources (e.g., servers, memory, databases, caches, etc.) and an example VU agent  to monitor the virtual unit . The VU manager  of the illustrated example also creates an example virtual unit  to provide physical resources (e.g., servers, computing resources, processors, hardware resources, etc.) and an example VU agent  to monitor the virtual unit . The virtual unit  communicates with an example hypervisor . The hypervisor  is provided to facilitate the use of hardware resources contained in an example data center . The virtual unit , the VU agent , the virtual unit , the VU agent , the hypervisor , and the data center  are collectively referred to herein as resources - included in an example production environment . The production environment  is responsible for providing resources used by the distributive computing network  of the illustrated example to provide services to the user . The resources - in the production environment  may communicate using any type of LAN, VLAN, private LAN, and\/or any other type of routing network included within the distributive computing network , such as the network .","While the production environment  is shown with resources -, the production environment  and\/or the distributive computing network  may include additional physical resources, virtual resources, services, and\/or may allocate the resources differently. The resources - of the example production environment  may be located at a single physical location or, alternatively, the resources - of the example production environment  may be located across different physical locations. Further, the virtual unit  and the VU agent  may be implemented with a single database and\/or memory or, alternatively, with a plurality of databases and\/or memories. Likewise, the virtual unit , the VU agent, the hypervisor , and\/or the data center  may be implemented on a single server and\/or computing resource or, alternatively, on a plurality of servers and\/or computing resources.","The VU manager  of the illustrated example facilitates routing of traffic between appropriate computing resources hosting a plurality of services (e.g., virtual units, virtual agents, etc.) within the example distributive computing network . The example VU manager  may facilitate such routing using routing tables, for example. Routing tables may be distributed to a plurality of routers within the example distributive computing network  and may be updated as resource allocations are modified.","The VU manager  of the illustrated example also facilitates the creation of the simulator  and its respective example VU agent  to adjust resource allocation in the example distributive computing network . The simulator  of the illustrated example uses production data representing current resource usage and demand to simulate the performance and\/or cost of operating and altering the current resource allocation of the distributive computing network . In some examples, the simulator  executes simulations while the example production environment  is providing services and\/or resources to the user . The simulator  of the illustrated example uses results of simulations to optimize the performance of and\/or adjust resource allocation in the example distributive computing network .","The simulator  of the illustrated example receives production data (e.g., production data collected by the VU agents  and ) from the VU manager . The simulator  may receive production data via, for example, an application programming interface (\u201cAPI\u201d). The production data reflects the current resource usage in the example production environment . The simulator  of the illustrated example also receives a resource request. The resource request indicates, defines and\/or otherwise specifies a resource allocation (e.g., a resource allocation different than the resource allocation currently implemented) to be implemented by the example distributive computing network . The resource request may be input, for example, by the user  via the portal  to create a new service and\/or to modify an existing service being performed by the distributive computing network . For example, a new user may enter a request and the simulator  may perform simulations to verify that the distributive computing network  can provide the requested services before implementing the services in the distributive computing network.","Upon receiving the resource request, the orchestrator  of the illustrated example instructs the VU manager  to initiate a simulation to determine a manner in which to implement the requested resource allocation. For example, a resource request might request the use of 100 virtual machines (or some other number of virtual machines). In such an example, the simulator  can be used to determine a manner in which to implement that request (e.g., a location of the virtual machines, a number of the virtual machines (e.g., which may be the same as or different from the 100 virtual machines specified in the request), a time to run the virtual machines, a size of the virtual machines, etc.).","In determining a manner in which to implement a resource allocation request, the simulator  of the illustrated example uses the production data collected from the example production environment , the resource request itself, and possibly policies and\/or rules defined by and\/or applied to the example distributive computing network . In some examples, policies and\/or rules are used to govern the behavior of the distributive computing network . Policies and\/or rules may include, for example, the SLA agreed to by the user , quality of service parameters defined in a product catalog, business rules, cost rules, scheduling rules, etc. For example, a policy might indicate how to react when a virtual machine runs out of capacity based on a subscription and preferences of the user  (e.g., by indicating that more virtual machines can be added without approval from the user ). In another example, a policy might indicate how the orchestrator  should react when there is an overall shortage of resources in the distributive computing network  or there is an excess of those resources. Another policy might indicate under what conditions the virtual machines providing service to the user  should be moved to a different data center.","The distributive computing network  of the illustrated example includes an example policy domain  to gather and\/or store such policies and\/or rules. An example manager  (e.g., a manager of the distributive computing network , such as a person associated with the cloud service provider) implements policies and\/or rules via an example management portal . Additionally, the management portal  of the illustrated example may be used to allow the manager  to monitor the distributive computing network  and\/or to allow the manager  to input a resource allocation request to perform capacity planning. The policies and\/or rules stored in the policy domain  of the illustrated example are passed to the VU manager  via the network  to be used by the simulator  during simulation.","Example manners in which the simulator  of the illustrated example executes simulations are described in greater detail below in connection with . Upon completing a simulation using production data, a resource request, and policies and\/or rules, the simulator  of the illustrated example determines an operating configuration defining a manner (e.g., a possible manner among a set of one or more possible manners, a recommended manner, etc.) in which to implement the resource allocation request. The simulator  of the illustrated example passes the operating configuration to the VU manager  via the VU agent . The VU manager  of the illustrated example may implement the operating configuration itself or may pass the operating configuration to the orchestrator  to approve implementation. In some examples, the operating configuration may be sent to the user  to approve implementation. In some examples, the operating configuration determined by the simulator  of the illustrated example is implemented and the resources of the production environment  are adjusted and\/or allocated accordingly to optimize the distributive computing network .",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 2","FIG. 1","FIG. 2"],"b":["102","100","102","100","100","104","102","102","104","100","100","102","202","204","206","208","210"]},"The production data receiver  of the illustrated example receives production data from a VU manager (e.g., the VU manager ). Production data reflects a current resource usage in the distributive computing network  (e.g. a current resource usage in the example production environment ). Production data is statistical data related to the performance of one or more, or each, virtual unit(s) operating in the production environment  (e.g., in terms of CPU usage, memory usage, network traffic, response times, resource location, etc.) and that is passed to the VU manager . The production data receiver  of the illustrated example receives production data from the VU manager , for example, when the VU manager  receives a resource allocation request. In other examples, the production data receiver  may receive production data from the VU manager  continuously and store the production data in a database for use in simulations performed by the simulator .","The resource request receiver  of the illustrated example receives resource requests from the VU manager . A resource request indicates, defines and\/or otherwise specifies a resource allocation to be implemented by the example distributive computing network . The resource request may be input, for example, by the user  via the portal  to create a new service and\/or to modify an existing service being performed by the distributive computing network . A resource request might request, for example, a new and\/or additional number of virtual machines for use by the user . A resource request may also be input, for example, by a manager of the distributive computing network  (e.g., the manager ). The manager  may input a resource request to implement capacity planning for the distributive computing network . For example, the manager  may wish to investigate how the distributive computing network  would operate with an additional number of virtual machines being implemented (e.g., such as by determining whether performance levels would improve if additional virtual machines were implemented by the production environment ). This capacity planning information is useful in determining whether to offer promotions to users, whether to lease resources to other cloud computing providers, whether to create additional resources, etc.","The cloud resource simulator  of the illustrated example executes a simulation to determine a manner in which to implement the resource allocation request received by the resource request receiver . The cloud resource simulator  enables the optimization of resource allocation such that resources are allocated efficiently (e.g., at the lowest cost, at the highest speeds, with the lowest number of virtual machines, etc.) while still providing the quality of service requested by the user .","To execute a simulation and determine a manner in which to implement a resource allocation request, the simulator  of the illustrated example uses the production data from the example production data receiver , the resource request from the resource request receiver , and policies and\/or rules defined by and\/or applied to the example distributive computing network , which are stored in the cloud policy and rule storer . Policies and\/or rules may include, for example, an SLA agreed to by the user , quality of service parameters defined in a product catalog, business rules, cost rules, scheduling rules, etc. The VU manager  gathers and the cloud policy and rule storer  stores such policies and\/or rules. Policies and\/or rules assist the cloud resource simulator  in selecting a resource allocation that provides the user  with the requested, required, defined or otherwise specified level(s) of service. For example, the user  may request a service that is to be provided by 100 virtual machines (or some other number of virtual machines). The cloud resource simulator  of the illustrated example may execute a simulation and determine that the user's needs will be met with only 75 virtual machines. In another example, the cloud resource simulator  may determine that it is more efficient (e.g., less costly) to implement 50 virtual machines (or some other number of virtual machines) within the distributive computing network  and to lease another 50 virtual machines (or some other number of virtual machines) for the user  from another cloud computing provider. In such examples, the location of resources, type of resources, amount of resources, etc. may be varied while still providing the specified quality of service to the user .","Once the cloud resource simulator  of the illustrated example has executed a simulation, the cloud resource adjuster  adjusts the distributive computing network  according to the simulation. For example, if the cloud resource simulator  determines that 50 virtual machines should be created in the distributive computing network  and 50 virtual machines should be leased from another cloud computing provider, the cloud resource adjuster  implements this resource allocation by sending the appropriate information to the VU manager . The VU manager  may implement the resource allocation or may send the resource allocation to an orchestrator (e.g., the orchestrator ) for approval and\/or implementation. In another example, the cloud resource simulator  may run multiple simulations and provide multiple possible resource allocations to the cloud resource adjuster , which is to select one of the provided resource allocations for implementation. In another example, the VU manager  and\/or the orchestrator  may be provided with multiple resource allocation options.","For ease of description, examples described herein refer to simulations of virtual machines. However, simulations may be performed for any type of virtual unit (e.g., a virtual unit that provides any of computing, storage, and\/or network resources). For example, a simulation may be performed for a virtual unit providing VLAN connections in a network environment.","While an example manner of implementing the simulator  of  has been illustrated in , one or more of the elements, processes and\/or devices illustrated in  may be combined, divided, re-arranged, omitted, eliminated and\/or implemented in any other way. Further, the example production data receiver , the example resource request receiver , the cloud resource simulator , the cloud policy and rule storer , the cloud resource adjuster  and\/or, more generally, the example simulator  of  may be implemented by hardware, software, firmware and\/or any combination of hardware, software and\/or firmware. Thus, for example, any of the example production data receiver , the example resource request receiver , the cloud resource simulator , the cloud policy and rule storer , the cloud resource adjuster  and\/or, more generally, the example simulator  could be implemented by one or more circuit(s), programmable processor(s), application specific integrated circuit(s) (ASIC(s)), programmable logic device(s) (PLD(s)) and\/or field programmable logic device(s) (FPLD(s)), etc. When any of the apparatus or system claims of this patent are read to cover a purely software and\/or firmware implementation, at least one of the example production data receiver , the example resource request receiver , the cloud resource simulator , the cloud policy and rule storer , the cloud resource adjuster  and\/or, more generally, the example simulator  are hereby expressly defined to include a tangible computer readable medium such as a memory, DVD, CD, BluRay, etc. storing the software and\/or firmware. Further still, the example simulator  of  may include one or more elements, processes and\/or devices in addition to, or instead of, those illustrated in , and\/or may include more than one of any or all of the illustrated elements, processes and devices.","Flowcharts representative of example machine readable instructions for implementing the example production data receiver , the example resource request receiver , the example cloud resource simulator , the example cloud policy and rule storer , the example cloud resource adjuster , and\/or the example simulator  of  are shown in . In these examples, the machine readable instructions comprise a program for execution by a processor such as the processor  shown in the example computer  discussed below in connection with . The program may be embodied in software stored on a tangible computer readable medium such as a CD-ROM, a floppy disk, a hard drive, a digital versatile disk (DVD), a BluRay disk, or a memory associated with the processor , but the entire program and\/or parts thereof could alternatively be executed by a device other than the processor  and\/or embodied in firmware or dedicated hardware. Further, although the example program is described with reference to the flowcharts illustrated in , many other methods of implementing the example production data receiver , the example resource request receiver , the example cloud resource simulator , the example cloud policy and rule storer , the example cloud resource adjuster , and\/or the example simulator  may alternatively be used. For example, the order of execution of the blocks may be changed, and\/or some of the blocks described may be changed, eliminated, or combined.","As mentioned above, the example processes of  may be implemented using coded instructions (e.g., computer readable instructions) stored on a tangible computer readable medium such as a hard disk drive, a flash memory, a read-only memory (ROM), a compact disk (CD), a digital versatile disk (DVD), a cache, a random-access memory (RAM) and\/or any other storage media in which information is stored for any duration (e.g., for extended time periods, permanently, brief instances, for temporarily buffering, and\/or for caching of the information). As used herein, the term tangible computer readable medium is expressly defined to include any type of computer readable storage and to exclude propagating signals. Additionally or alternatively, the example processes of  may be implemented using coded instructions (e.g., computer readable instructions) stored on a non-transitory computer readable medium such as a hard disk drive, a flash memory, a read-only memory, a compact disk, a digital versatile disk, a cache, a random-access memory and\/or any other storage media in which information is stored for any duration (e.g., for extended time periods, permanently, brief instances, for temporarily buffering, and\/or for caching of the information). As used herein, the term non-transitory computer readable medium is expressly defined to include any type of computer readable medium and to exclude propagating signals. As used herein, when the phrase \u201cat least\u201d is used as the transition term in a preamble of a claim, it is open-ended in the same manner as the term \u201ccomprising\u201d is open ended. Thus, a claim using \u201cat least\u201d as the transition term in its preamble may include elements in addition to those expressly recited in the claim.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 3","FIGS. 1"],"b":["102","2","102","100","100","104","102","104","102","100","100","104"]},"With the foregoing in mind and with reference to the preceding figures, upon execution of the example machine readable instructions of , the production data receiver  of the simulator  receives production data from the VU manager  (block ). Production data is, for example, statistical data related to the performance and\/or usage of one or more, or each, virtual unit(s) operating in the distributive computing network  (e.g., such as CPU usage data, memory usage data, network traffic data, etc.) that is collected by a VU agent assigned to the respective virtual unit and passed to the VU manager . The production data receiver  of the illustrated example may receive production data from the VU manager  periodically, aperiodically, continuously, and\/or when the VU manager  receives a resource allocation request.","The resource request receiver  of the illustrated example receives a resource request from the VU manager  (block ). A resource request (also referred to herein as a resource allocation request) defines a resource allocation to be implemented by the example distributive computing network . A resource request may be input by the user  to create a new service and\/or to modify an existing service being performed by the distributive computing network . The simulator  may determine a possible or recommended manner of adjusting the resources provided by the distributive computing network  to modify an existing service. The simulator  may determine whether the distributive computing network  is capable of implementing a new service before creating and\/or assigning resources in the distributive computing network  to provide that new service. A resource request may also be input by the manager  of the distributive computing network  to implement capacity planning. Capacity planning information gathered and\/or determined by the simulator  is useful in determining whether to offer promotions to users, whether to lease resources to other cloud computing providers, whether to create additional resources, etc.","The cloud resource simulator  of the illustrated example runs and\/or executes a simulation of the distributive computing network  (block ). The simulation is executed to determine a possible or recommended manner in which to implement the resource allocation request received by the resource request receiver . In some examples, the cloud resource simulator  optimizes resource allocation (e.g., to allocate resources at the lowest cost, at the highest speeds, with the lowest number of virtual machines, etc.) while still providing at least the quality of service requested by the user  in the resource request and\/or defined in an SLA.","At block , the simulator  of the illustrated example uses the production data from the example production data receiver , the resource request from the resource request receiver , and policies and\/or rules defined by and\/or applied to the example distributive computing network  and stored in the cloud policy and rule storer  to execute a simulation and determine a manner in which to implement a resource allocation request. Policies and\/or rules may include, for example, an SLA agreed to by the user , quality of service parameters defined in a product catalog, business rules, cost rules, scheduling rules, etc. Policies and\/or rules assist the cloud resource simulator  in selecting and\/or varying the location of resources, type of resources, amount of resources, etc., while still providing quality service to the user .","After the cloud resource simulator  of the illustrated example has executed a simulation, the cloud resource adjuster  adjusts the distributive computing network  according to the simulation (block ). For example, at block , the cloud resource adjuster  of the illustrated example adjusts the distributive computing network  by directing the VU manager  to implement the possible or recommended resource allocation determined by the cloud resource simulator  at block . The VU manager  may implement the resource allocation or may send the resource allocation to the orchestrator  for approval and\/or implementation. In another example, the cloud resource simulator  may run multiple simulations at block  and provide multiple, possible resource allocations to the cloud resource adjuster , which at block  is to select one of the possible resource allocations by which to adjust the distributive computing network . In another example, the VU manager  and\/or the orchestrator  may be provided with multiple resource allocation options by which to adjust the distributive computing network . After the distributive computing network  has been adjusted, control returns to block .",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 4","FIG. 2"],"b":["206","206","100"]},"With the foregoing in mind and with reference to the preceding figures, upon execution of the example machine readable instructions of , the cloud resource simulator  of the illustrated example receives production data from the example production data receiver  (block ). The production data represents the performance of a resource allocation already being provided by the distributive computing network  (e.g., in terms of CPU usage, memory usage, network traffic, etc.). The resource allocation may include, for example, numbers of virtual machines, types of virtual machines, sizes of virtual machines, and\/or locations of virtual machines being implemented by the distributive computing network . The cloud resource simulator  uses the production data to tailor its simulations to model the production environment .","The cloud resource simulator  of the illustrated example receives a resource request from the example resource request receiver  (block ). The resource request specifies a resource allocation (e.g., a resource allocation different than the one being implemented by the distributive computing network ) to be implemented by the example distributive computing network . The resource request may involve, for example, creating new services, modifying existing services, determining promotions to be offered, leasing services, removing services, etc.","The cloud resource simulator  of the illustrated example uses the production data and resource request to set parameters to be used in an execution of a simulation of the distributive computing network  (block ). The cloud resource simulator  may use the production data to select a model to be used in the simulation. The model may be, for example, a set of certain predetermined resource allocation parameters for use in the simulation. The cloud resource simulator  may select a model with parameters closely resembling the received production data to be used in the simulation. In other examples, the cloud resource simulator  may select a model with parameters closely resembling the received production data and then alter those parameters based on the received production data and the resource request. In other examples, a new model may be created to simulate the received production data and resource request. In other examples, a mathematical expression may be selected to implement the simulation. In such examples, parameters will be selected to be input into the mathematical expression based on the received production data and resource request.","Once parameters have been set, the cloud resource simulator  of the illustrated example runs the simulation (block ). In some examples, running the simulation may include evaluating the output of the aforementioned mathematical expression. For example, a simulation in the form of a mathematical expression may be used for simple resource allocation requests. For example, the distributive computing network may be capable of implementing 5,000 virtual machines (or some other number of virtual machines), but is currently operating only 2,000 virtual machines (or some other number of virtual machines). If a resource request is received to implement an additional 100 virtual machines (or some other number of additional virtual machines), a mathematical expression characterizing the resource request in terms of an operating capacity may be used by the cloud resource simulator to determine whether to implement the additional 100 virtual machines.","In another example, running the simulation at block  may include inputting the selected parameters into a simulated environment of the distributive computing network . A simulated environment is used to simulate the distributive computing network  and determine and\/or compute an impact of the selected parameters on the overall performance of the distributive computing network . For example, a simulated environment may be used to determine a power supply needed to implement selected parameters, memory used when implementing the selected parameters, a cost associated with implementing the selected parameters, etc.","Once the selected parameters have been input into the simulated environment of the distributive computing network , the simulated environment is allowed to operate for a period of time. The period of time may be selected by example cloud resource simulator  based on the complexity of the simulation, the number of simulation parameters, etc. Once the simulated environment has been allowed to operate for the period of time, the cloud resource simulator  may gather and\/or evaluate simulation data. The simulation data represents the performance of the simulated resource allocation implemented in the simulated environment and allows the cloud resource simulator  to assess the effectiveness of the parameters chosen and\/or used in the simulation.","The cloud resource simulator  of the illustrated example gathers and\/or determines rules and\/or policies applicable to the distributive computing network  (block ). Policies and\/or rules may include, for example, an SLA agreed to by the user , quality of service parameters defined in a product catalog, business rules, cost rules, scheduling rules, etc. Policies and\/or rules may be stored, for example, as and\/or in data matrices to allow the cloud resource simulator  of the illustrated example to evaluate their effect on the results of the simulation and\/or to determine whether the parameters used in the simulation should be implemented in the production environment  of the distributive computing network .","The cloud resource simulator  of the illustrated example determines whether the parameters used in the simulation (e.g., the parameters corresponding to the simulated resource allocation) satisfy the resource request and comply with the applicable rules and\/or policies (block ). Resource request information, policies, rules, etc. may be, for example, stored as and\/or in data matrices. The cloud resource simulator  may utilize multiple data matrices related to, for example, performance prediction (e.g., based on historical performance data gathered by the VU manager ), network traffic\/latency (e.g., based on network traffic\/latency data gathered by the VU manager ), scheduling (e.g., based on scheduling data gathered by the VU manager ), industry standards, etc. The cloud resource simulator  of the illustrated example compares results of the simulation (e.g., simulation data) to data stored in the data matrices to determine whether to implement the parameters used in the simulation.","If the parameters used in the simulation fail to satisfy the resource request and\/or fail to comply with any rules and\/or policies applicable to the distributive computing network , control returns to block  where the cloud resource simulator  of the illustrated example sets new parameters for a next simulation. The simulated resource allocation may fail to satisfy the resource request if, for example, the simulation data indicates that the level of service implemented by the simulated resource allocation would be less than or otherwise fail to achieve the level of service stated in the resource request. The simulated resource allocation may fail to comply with a rule and\/or policy applicable to the distributive computing network  if, for example, the simulation data indicates that implementing the simulated resource allocation would require the price of the service to be set to a point higher than that agreed to by the user . The cloud resource simulator  of the illustrative example performs an iterative simulation process until reaching acceptable simulation results. For example, multiple parameters may be set in a simulation and the cloud resource simulator  may adjust (e.g., fine tune) each parameter in a plurality of simulations to achieve and\/or determine a recommended result.","If the parameters used in the simulation satisfy the resource request and comply with the rules and\/or policies applicable to the distributive computing network , the cloud resource simulator  determines an operating configuration to implement the simulated resource allocation used in the simulation. In some examples, the operating configuration is a set of instructions that defines a possible or recommended manner in which to implement the resource allocation request (e.g., such as in the form of a set of instructions to implement the simulation parameters determined to satisfy the resource request and comply with applicable policies and\/or rules). For example, the instructions of the operating configuration may recommend adding 500 (or some other number of) virtual machines to the distributive computing network , using a first number (e.g., 50) of larger virtual machines instead of a larger second number (e.g., 1000) of smaller virtual machines in the distributive computing network , migrating new and\/or existing virtual machines to another cloud computing provider outside of the distributive computing network , etc.","The cloud resource simulator  of the illustrated example sends the operating configuration to the cloud resource adjuster  to adjust the distributive computing network  according to the simulation, as described above (block ). Control then returns to block .",{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 5","FIG. 2","FIG. 5"],"b":["206","100","206","100"]},"With the foregoing in mind and with reference to the preceding figures, upon execution of the example machine readable instructions of , the cloud resource simulator  of the illustrated example receives production data from the example production data receiver  indicating a number (referred to as \u201cX\u201d in ) of virtual machines (referred to as \u201cVMs\u201d in ) currently being implemented by the distributive computing network  (block ). The number of virtual machines currently operating in the distributive computing network  may be, for example, 2,000 (or some other number of virtual machines).","The cloud resource simulator  of the illustrated example receives a resource request from the example resource request receiver  requesting an amount (referred to as \u201cY\u201d in ) of additional virtual machines to be added to the client's service (block ). The resource request may request, for example, 1,000 virtual machines (or some other number of virtual machines) be added to the 2,000 virtual machines currently being implemented by the distributive computing network .","The cloud resource simulator  of the illustrated example uses the production data indicating 2,000 virtual machines are currently being implemented and the resource request requesting an additional 1,000 virtual machines to set parameters to be used in an execution of a simulation of the distributive computing network  (block ). For example, the cloud resource simulator  may set the simulation to run with 3,000 virtual machines.","The cloud resource simulator  of the illustrated example runs and\/or executes a simulation with the parameter set in block  (block ). For example, the cloud resource simulator  simulates the distributive computing network  implementing 3,000 virtual machines for a period of time. When the simulation is complete (e.g., the period of time set by the cloud resource simulator  has lapsed), the cloud resource simulator  of the illustrated example collects simulation data representing the performance of the 3,000 virtual machines in the simulated environment.","The cloud resource simulator  of the illustrated example evaluates policy and\/or rules applicable to the distributive computing network  (block ). For example, a policy of the distributive computing network  may state that the distributive computing network  will attempt to implement resources at a lowest possible cost. The policy and\/or rules applicable to the distributive computing network  will be used by the cloud resource simulator  in determining if the simulation has reached an optimal result.","The cloud resource simulator  of the illustrated example determines if the simulation parameter used in the simulation satisfies the resource request and complies with policy and\/or rules (block ). For example, the cloud resource simulator  determines if implementing 3,000 virtual machines would satisfy the resource request. While implementing the 3,000 virtual machines satisfies the resource request of the illustrated example, this implementation may not provide the resources at the lowest possible cost as defined in the policy applicable to the distributive computing network  in the illustrated example.","If implementing the 3,000 virtual machines satisfies the resource request and complies with policy and\/or rules applicable to the distributive computing network  (e.g., these resources are provided at the lowest possible cost), the cloud resource simulator  of the illustrated example will set an operating configuration to implement the resources used in the simulation (block ). For example, the cloud resource simulator  will set the operating configuration to adjust the distributive computing network  to implement 1,000 additional virtual machines. The cloud resource simulator  of the illustrated example sends the operating configuration to the cloud resource adjuster  to implement the operating configuration. Control then returns to block .","If implementing the 3,000 virtual machines does not satisfy the resource request and\/or does not comply with policy and\/or rules applicable to the distributive computing network  (e.g., these resources are not provided at the lowest possible cost), the cloud simulator  of the illustrated example selects new parameters for a next simulation (block ) and control returns to block . The next simulation may, for example, have parameters set to simulate the implementation of 500 virtual machines (or some other number of virtual machines) in the distributive computing network  and the leasing of 500 virtual machines (or some other number of virtual machines) from another cloud computing provider. The simulation data from this second simulation may indicate that the cost of implementing the resource allocation according to these parameters (e.g., 500 virtual machines in the distributive computing network  and 500 virtual machines from another cloud computing provider) would have a lower cost than implementing all additional 1,000 virtual machines in the distributive computing network  itself. Thus, the cloud simulator  may set and send an operating configuration indicating that the distributive computing network should implement 500 additional virtual machines and lease 500 virtual machines from another cloud computing provider. The leasing of virtual machines from other cloud computing providers is facilitated by, for example, the orchestrator . Control then returns to block .",{"@attributes":{"id":"p-0073","num":"0072"},"figref":["FIG. 6","FIGS. 3-5","FIG. 2","FIG. 1"],"b":["600","202","204","206","208","210","102","100","600"]},"The platform  of the instant example includes a processor  such as a general purpose programmable processor. For example, the processor  can be implemented by one or more microprocessors or controllers from any desired family or manufacturer. The processor  includes a local memory , and executes coded instructions  which may be present in the local memory  and\/or in another memory device (e.g., a volatile memory ). The processor  may execute, among other things, the machine readable instructions represented in .","The processor  is in communication with a main memory including the volatile memory  and a non-volatile memory  via a bus . The volatile memory  may be implemented by Static Random Access Memory (SRAM), Synchronous Dynamic Random Access Memory (SDRAM), Dynamic Random Access Memory (DRAM), RAMBUS Dynamic Random Access Memory (RDRAM) and\/or any other type of random access memory device. The non-volatile memory  may be implemented by flash memory and\/or any other desired type of memory device. Access to the main memory ,  is typically controlled by a memory controller.","The processing platform  also includes an interface circuit . The interface circuit  may be implemented by any type of interface standard, such as an Ethernet interface, a universal serial bus (USB), a peripheral component interconnect (PCI), and\/or a third generation input\/output (3GIO) interface.","One or more input devices  are connected to the interface circuit . The input device(s)  permit a user to enter data and commands into the processor . The input device(s) can be implemented by, for example, a keyboard, a mouse, a touchscreen, a track-pad, a trackball, and\/or an isopoint.","One or more output devices  are also connected to the interface circuit . The output devices  can be implemented, for example, by display devices (e.g., a liquid crystal display, a cathode ray tube display (CRT)). The interface circuit , thus, typically includes a graphics driver card.","The interface circuit  also includes a communication device such as a modem or network interface card to facilitate exchange of data with external computers via a network (e.g., an Ethernet connection, a digital subscriber line (DSL), a telephone line, coaxial cable, a cellular telephone system, etc.).","The processing platform  also includes one or more mass storage devices  for storing machine readable instructions and data. Examples of such mass storage devices  include floppy disk drives, hard drive disks, compact disk drives, digital versatile disk (DVD) drives, flash drives, etc.","Coded instructions  corresponding to  may be stored in the mass storage device , in the volatile memory , in the non-volatile memory , in the local memory  and\/or on a removable storage medium, such as a CD or DVD .","As an alternative to implementing the methods and\/or apparatus described herein in a system such as the processing platform of , the methods and or apparatus described herein may be embedded in a structure such as a processor and\/or an ASIC (application specific integrated circuit).","From the foregoing, it will appreciate that the above disclosed methods, systems, apparatus, and\/or articles of manufacture provide for the adjusting of distributive computing network resources to optimize the performance of the distributive computing network while maintaining levels of service expected by users.","Although certain example methods, apparatus and articles of manufacture have been described herein, the scope of coverage of this patent is not limited thereto. On the contrary, this patent covers all methods, apparatus and articles of manufacture fairly falling within the scope of the claims of this patent."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIGS. 3-5","FIG. 2"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 6","FIGS. 3-4","FIG. 2","FIG. 1"],"b":"5"}]},"DETDESC":[{},{}]}
