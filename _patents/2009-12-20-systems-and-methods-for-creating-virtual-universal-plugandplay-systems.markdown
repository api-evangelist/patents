---
title: Systems and methods for creating virtual universal plug-and-play systems
abstract: Methods and devices enable a device located on a source network to appear as a virtual device on a target network. Agent applications running on computers on the source and target networks communicate over a peer-to-peer network enabled by a super-peer networking server on the Internet. To share a device, the target network agent requests the source network agent to provide access to a device in the source network. The source network agent sends the device name, properties, and service template information to the target network agent. The target network agent uses the received information to announce itself as the device to the target network. Devices on the target network may request device services from the target network agent. Such requests are repackaged by the target network agent and sent to the source network agent. The source network agent redirects the service request to the actual device and redirects received responses to the target network agent. The target network agent receives the processes forwards service response to the requesting device. Thereafter, the requesting device on the first network can directly access services from the device on the second network as if the two devices were on the same network. Using such methods, devices on a local network may access services available on an Internet server as if the server was on the local network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08516071&OS=08516071&RS=08516071
owner: QUALCOMM Incorporated
number: 08516071
owner_city: San Diego
owner_country: US
publication_date: 20091220
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit of priority to U.S. Provisional Patent Application No. 61\/183,761 entitled Systems And Methods For Creating Virtual Universal Plug-And-Play Systems, filed Jun. 3, 2009, the entire contents of which are hereby incorporated by reference.","The present invention relates generally to computer networks, and more particularly to remote control of streaming media selection and authorization between private networks.","Increasingly, people are building up collections of digital media, such as audio files, video files, digital images, etc. While portable memory devices such as thumb drives, CD-R disks, and MP3 players have provided some capability to physically carry such files from place to place for use, often such memory devices are too limited in carrying capacity as well as being too easily lost or stolen for entrusting with sensitive data files. Still, collectors of digital media would benefit from being able to access their collections without the necessity of setting up an elaborate network bridge.","Methods and devices enable a device located on a source network to appear as a virtual device on a target network. Agent applications running on computers on the source and target networks and on a central network server communicate over a peer-to-peer network enabled by a super-peer networking server on the Internet. In order to share a device, the central server agent requests the source network agent to provide access to a device in the source network and directs this information to be sent to a target network. The source network agent sends the device name, properties and service template information to the target network agent. The target network agent uses the received information to announce itself as the device to the target network. Devices on the target network may request device services from the target network agent. Such requests are repackaged by the target network agent and sent to the source network agent. The source network agent redirects the service request to the actual device and redirects received responses to the target network agent. The target network agent receives the response, processes it, and forwards service response to the requesting device. Thereafter, the requesting device on the first network can directly access services from the device on the second network, as if the two devices were on the same network. Using such methods, devices on a local network may also access services available on an Internet server as if the server was on the local network.","The various embodiments will be described in detail with reference to the accompanying drawings. Wherever possible, the same reference numbers will be used throughout the drawings to refer to the same or like parts. References made to particular examples and implementations are for illustrative purposes, and are not intended to limit the scope of the invention or the claims.","The word \u201cexemplary\u201d is used herein to mean \u201cserving as an example, instance, or illustration.\u201d Any implementation described herein as \u201cexemplary\u201d is not necessarily to be construed as preferred or advantageous over other implementations.","As used herein, the terms \u201cmobile device\u201d and \u201chandheld device\u201d refer to any one or all of cellular telephones, personal data assistants (PDA's), palm-top computers, wireless electronic mail receivers, multimedia Internet enabled cellular telephones, Global Positioning System (GPS) receivers, wireless gaming controllers, and similar personal electronic devices that include a programmable processor and memory, are configured to communicate with a wireless communication network, and have a web browser.","As used herein, the terms \u201ccomputer,\u201d \u201cpersonal computer\u201d and \u201ccomputing device\u201d refer to any programmable computer system that is known or that will be developed in the future. In a preferred embodiment a computer will be coupled to a network such as described herein. A computer system may be configured with software instructions to perform the processes described herein.","As used herein, the terms \u201ccomponent,\u201d \u201cmodule,\u201d \u201csystem,\u201d and the like are intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a server and the server can be a component. One or more components may reside within a process and\/or thread of execution and a component may be localized on one computer and\/or distributed between two or more computers.","As used herein, the term \u201cdevice\u201d refers to any electronic device, several examples of which are mentioned or described herein. In a preferred embodiment, a device may be a \u201cuniversal plug-and-play\u201d (UPnP) device that may be coupled to a network.","The term \u201cpeer-to-peer network\u201d is intended to encompass any form of peer-to-peer network technology known or that may be developed in the future. While some embodiments refer to peer-to-peer networks that make use of hypertext transfer protocol (HTTP) messaging, such references are intended merely to serve as examples, and not to limit the scope of the claims to any particular networking technology.","For ease of reference, examples illustrating the functioning of various embodiments may refer to networks as first and second networks or users, or to networks and users A and B. For example, a first user may be referred to as \u201cuser A\u201d and a second user may be referred to as \u201cuser B.\u201d Such references in the figures and the descriptions are arbitrary and used to simplify network and user references, and thus are not intended to limit the scope of the claims to just two networks or just two users, or to limit particular users to particular networks, as the various embodiments support any number of networks and users.","Various aspects will be presented in terms of systems that may include a number of components, modules, and the like. It is to be understood and appreciated that the various systems may include additional components, modules, etc., and may not include all of the components, modules, etc. discussed in connection with the figures. A combination of these approaches may also be used.","The various embodiments described herein provide methods and systems that enable discovery of a device or service running on a first network and create a virtual rendition of that device or service on a second network so that it may be accessed as if it were an actual network device. In a preferred embodiment, the first and second networks are peer networks using Universal Plug-and-Play (\u201cUPnP\u201d, e.g., http:\/\/www.upnp.org) devices linked together with a programmable computer, such as a personal computer. The first and second networks also include a connection to a wide area network, such as via a router or home gateway providing a connection to the Internet, through which communications can be established between each of the programmable computers. The first and second networks may implement Ethernet or 802.11 wireless communications, a combination of both these communications technologies, or another networking technology capable of supporting Internet Protocol (IP). Each of the programmable computers is configured with an agent application which discovers the plug-and-play devices within its local network. The agent application enables each of the computers to join a peer-to-peer network including a super-peer server on the wide-area network, through which connections can be established to other computers having similar agent applications installed. Similar to a social network, users can invite other networks to establish a peer-to-peer network link through which devices and services (e.g., file sharing) may be accomplished via the wide-area network, such as the Internet.","To initiate device or service sharing, a first agent in a first computer in a first network may send a request through the peer-to-peer network link to a second agent in a second computer in a second network for access to one or more devices or services in the second network. The second agent may obtain names, properties, and service templates of the plug-and-play devices on the second network, and send such information to the first agent via the peer-to-peer network link. The first agent uses the received plug-and-play information to mimic the requested device or service on the first network by announcing itself as a UPnP device having the properties and service templates received from the second agent. Thus, the first agent acts as a virtual device or service announcing the properties of the device or service in the second network. UPnP devices on the first network may then request services from the virtual device or service in the ordinary manner of the UPnP network. A request for services to the virtual device or service may be repackaged by the first agent, and sent to the second agent in the second network via the peer-to-peer network link. The second agent in the second network may re-address the service request and send it to the actual device in the second network. That device responds to the second agent in an ordinary manner. The second agent then packages the received response and sends it to the first agent via the peer-to-peer network link. The first agent receives the package, processes the received information, such as to change universal resource locator (URL) or IP addresses to a public IP address for the second network or the actual device, and forwards the service response to the requesting device on the first network. Thereafter, the requesting device on the first network can access services from the device on the second network via the first and second agents, with requested files and services communicated between the first and second agents (as opposed to through the peer-to-peer network) as if the two devices were on the same network. Using such methods, devices on a local network may access services available on a second local network as if the device was on the local network. Further, such methods may enable sending content from a computer or device in a first network for presentation, printing or display on a device on a second network.","An example communication system suitable for implementing the various embodiments is illustrated in . Such a communication system may include two or more local networks , , also labeled and referred to herein as networks A and B, which may be typical home networks. The local area networks ,  may be implemented as Ethernet or 802.11 wireless communications, or a combination of both. The local area networks ,  include one or more UPnP devices , , , , , , , . In the illustrated example communication system both networks ,  are connected to the Internet  via a router , , or home gateway as would be typical in a home network system. The local networks ,  also include programmable computers , , such as personal computers, computer game consoles, or local area network servers. In some implementations the programmable computer ,  and the router ,  or home gateway may be implemented in the same programmable device, such as a personal computer or game console configured to function as a home gateway. In some implementations, one or more of the local networks ,  may not include a router , , such as when one network includes only a programmable computer ,  coupled to the Internet .","A local network ,  may include a variety of UPnP devices, such as televisions , , media players (e.g., a digital video disc (DVD) player ), content sources (e.g., a satellite or cable TV receiver box ), and output devices (e.g., digital photo frame , printers , and multifunction devices ). Any number of different UPnP devices may be implemented, including UPnP devices that may be developed in the future. Additionally, content storage devices, such as computer hard drive systems within computing devices ,  may store digital content (e.g., music, photograph, video and text files) that may be displayed or played on one or more of the UPnP devices on the local networks , .","Optionally, the communication system may include other computing devices, such as personal computers  and mobile devices  with access to the Internet . For example, mobile devices , such as cellular telephones, may access the Internet via a wireless communication network  (e.g., a WIFI or cellular telephone data communication network). Such wireless communication networks  may include a plurality of base stations  coupled to a gateway or Internet access server  coupled to the Internet . Personal computers may be coupled to the Internet  in any conventional manner, such as by wired connections via an Internet gateway (not shown) or by a wireless communication network .","The various embodiments may also include a super-peer networking server , a registration server , and, optionally, a re-routing server  located on the public Internet . The super-peer networking server  may be any commercially available server configured with software instructions according to the various embodiments to enable peer-to-peer communications between Internet-connected computing devices ,  configured with agent applications described herein. The registration server  may be any commercially available server configured with software instructions to host a webpage that can receive requests from web browsers (either on a mobile device  with a suitable browser, or on computing devices , ,  configured with a web browser). The optional re-routing server  may be any commercially available server configured with software instructions to re-route communications between local area networks ,  when both networks do not provide port forwarding functionality.","In various embodiments, the super-peer networking server , the registration server , and, optionally, the re-routing server  are not limited to any configuration or particular number of devices, and may be implemented within a single server, within two servers, or within several servers. Further, several super-peer networking servers  may be located on the Internet to support a large number of peer-to-peer communication links.","The super-peer networking server  may be configured with software instructions to enable various computing devices ,  to locate each other and pass messages and data in a peer-to-peer manner without knowing the Internet Protocol (IP) addresses on the end point devices. The location of each end point computing device ,  may be determined using an addressing scheme of unique names, rather than IP addresses. In such an addressing scheme, each address is known as a domain ID. Therefore, logically, each domain ID technically represents a single network subnet or local network, and may be referred to as a \u201cplace\u201d (for example, my house, my office, etc). To enable peer-to-peer communications, the super-peer networking server  has access to a database of user identities or accounts, and associated domain IDs. This database of accounts may be maintained or added to by the registration server , which users may access via the Internet . A single user may have many associated domain IDs or \u201cplaces\u201d.","Since the super-peer networking server  has access to the IP address of network computing devices configured with an agent application, a peer-to-peer network  can be created when the computing devices ,  are informed of each other's domain ID, and of the IP address of the super-peer networking server . Users can create peer-to-peer networks by inviting others registered with the super-peer networking server  (e.g., via the registration server ) to network with them. In this manner, the creation of peer-to-peer networks via the super-peer networking server  may function like a social network site (e.g., Facebook or MySpace) among users registered with the super-peer networking server . Thus, users may connect \u201cfriends\u201d to their network by indicating that a domain ID or other reference to another system account can communicate with the user's network. When two networks ,  are linked into a peer-to-peer communication link , messages from one network may be directed to the super-peer networking server , which uses the address domain ID to look up and forward messages to the other network.","The various embodiments make use of the functionality of UPnP devices to enable a UPnP-enabled device present on one network  to be available \u201cvirtually\u201d on a second network . UPnP is a well-known protocol for the discovery and access of services provided by devices to one another in a peer-to-peer manner on a network subnet. In a local network of UPnP devices, each device may use a method of IP multicasting to announce their presence on the network (referred to as \u201cadvertisement\u201d or \u201cadvertisement announcement\u201d), and to search for other UPnP devices on the network (referred to as \u201cdiscovery\u201d). In a conventional UPnP network, the IP multicast of UPnP device advertisements and discovery is limited to a single network subnet. Thus, in , device discovery\/advertisement functions are limited to each of the local network A , and network B , and the discovery\/advertisement functions cannot be routed to the Internet or onwards outside the local network in any way. It is therefore impossible for UPnP devices in a first network  to \u201csee\u201d or interact with UPnP devices in a second network  using standard UPnP functionality.","The various embodiments enable a UPnP device and associated services located in a first network  to be \u201cvirtualized\u201d and made available on a second network . To enable such functionality an agent application is deployed on a computing device ,  on each local network , . The agent application is a software program that configures the computing devices ,  to interact with UPnP devices and services on their respective local networks ,  in a number of ways, to communicate with the super-peer networking server  via the Internet , and to respond to or be controlled by external messages received from the super-peer networking server  via the Internet . Control messages may be sent to the super-peer networking server  by the registration server  in response to user interactions with a user interface website hosted by the registration server .","Within each local network , , the agent application may listen for advertisement messages from UPnP devices. Also, from time to time the agent application may send out discovery messages on the local network ,  in order to discover UPnP devices connected to the network. In this manner, the agent application can build up a complete list of all of the UPnP devices and services that are available on its local network , . This list of UPnP available devices and services may be maintained in a cache within the computing device ,  on which the agent application is implemented.","Once users are registered with the system via the registration server , a process which includes downloading the agent application to their computing devices, they may access the registration server  (or another server) via any computing device ,  linked to the Internet  in order to select another registered network with which to share resources. When users sign in to the registration server  by accessing and identifying themselves to a website hosted on the server, they may be presented with a list of their own domain IDs (\u201cplaces\u201d) and a list of their \u201cfriends\u201d (i.e., individuals who the user has indicated can link to the user's network domains), as well as their friends' domains.","In order to share devices or services, a user may access the registration server  from any computing device ,  and use a user interface website hosted on the registration server  to select one of the user's friend's domains as a \u201ctarget\u201d to which a device or file will be made available. Before or after a target network has been selected the user may also be presented with a list of the user's own domains that may be shared (referred to as a \u201csource\u201d domain). When the user selects one of the user's domains as the source domain, the registration server  may send a control message to the super-peer networking server . The super-peer networking server  may relay the control message to the computer  in the selected source network . This control message prompts the agent application running in the computer  to generate a list of UPnP devices that have been discovered by the agent application on its local network . In response, the agent application transmits the list of UPnP devices back to the registration server  via the request path through the super-peer networking server . The registration server  receives the list of UPnP devices on the source network and may generate an information or webpage response to the user's selection which is transmitted to the user's computing device ,  for display to the user. In such a listing of UPnP devices, each device may be uniquely identified by a UPnP property referred to herein as the Universally Unique ID (or UUID). In this manner, the user is able to see all of the UPnP devices located in one of the user's domains, even if the server is not physically present on that network, such as when the user accesses the registration server  via a mobile device  or another computer  linked to the Internet .","As part of a user interface webpage presenting the list of the user's UPnP devices on the source domain, the user may be able to select a particular UPnP device or service, and be provided with an option to \u201cvirtualize\u201d the selected device or service on the target domain. If the user enters a response to virtualize the selected device or service, the registration server  may send a control message via the super-peer networking server  to the computer  in the source domain (i.e., the user's network ). This control message may identify both the UUID of the selected UPnP device, and the target domain ID. The agent application running on the computer  interprets the control message, locates the UPnP device referred to in the message, and builds a response message containing the UPnP device description and the UPnP service descriptions of the device. The agent application may send this response message along with the target domain ID to the super-peer networking server . The super-peer networking server  looks up the IP address of the computer associated with the domain ID (e.g., in a user account database) and relays the message to that IP address (i.e., the IP address of the computer  in the target network ). The agent application in the computer  in the target domain receives the response message and reads the device description and service descriptions stored in the message. Using the received device description and service descriptions, the agent application performs a UPnP device advertisement on the target network . These advertisement messages contain a URL indicating where the device can be accessed by other UPnP devices on the target network . This URL is constructed by the agent application running on the computer  in the target domain to point to itself, in particular to a simple HTTP server running within the agent application. In this manner, the agent application announces itself as the device selected by the user in the source domain (i.e., network ), and thus the agent application appears as the selected device on the target domain (i.e., network ). This is illustrated in  which shows a data store  present on network A appearing as a virtual data store on network B, and a UPnP device  on network B appearing as a virtual UPnP device on network A.","This operation may be illustrated by way of an example with reference to . A first user (user A) may access and sign into the registration server  from a cell phone mobile device , via a browser connecting to the Internet  via a wireless data network . In a webpage generated by the registration server , user A can see his own domains (e.g., network A), along with identifiers of his friends (e.g., user B) and his friends' domains (e.g., network B). The webpage may also display a list of all UPnP devices in his own domain (network A), or such a list may be displayed when user A selects a source domain. Using a user interface within the displayed webpage user A may select the network B of his friend user B as a target domain. User A may then select his domain (network A) as the source domain and receive a display of the UPnP devices on the source domain. Using a user interface including this listing of devices, user A may select his media store  for virtualization. In this example, the media store  is a UPnP media server which contains two UPnP services (ContentDirectory:1 and ConnectionManager:1). Using the user interface hosted by the registration server , user A chooses to virtualize his media store . As described above, this selection causes the agent application running on the computer  in network A to send the device description and service descriptions of the media store  to the agent application running on the computer  in the target network (i.e., network B). On receipt of this message, the agent application in network B sends out UPnP advertisement messages on network B based on the received device description and service descriptions. In these UPnP advertisement messages the agent application sets the control URL in the device description to point to itself. In this way, other UPnP devices in network B are \u201cfooled\u201d into believing that the media store is actually present in network B, as illustrated in . Any device on the target network B can access the services and files of the virtualized media store just as if the device were actually on network B. However, all interactions that devices have with the virtualized media store will actually be sent to the agent application running on the computer  in network B, since the agent was specified in the location URL in the UPnP device advertisement messages.","In the UPnP protocol, once a UPnP device has been discovered by another UPnP-capable device, the services within the selected device may be located and used. This may be accomplished, for example, by obtaining a service description via HTTP and performing interactions using the SOAP protocol over HTTP to a URL specified in the device description (the control URL). Through the service descriptions, UPnP-capable devices are able to \u201cunderstand\u201d the services and UPnP actions available within a discovered device, the parameters such services and actions needed as input, and the form of results that will be returned by such services and actions.","In the various embodiments, once a virtualized UPnP device (e.g., virtualized media store ) has been announced on a network (e.g., network B), other devices , , ,  on the network can attempt to obtain the device description and service descriptions for that device via HTTP GET requests to the specified URL, which is a URL to the agent application running on the computer . The agent application contains a simple HTTP server to handle such requests as if it were an actual device, and to return the device and service descriptions for the virtualized device to the calling UPnP devices , , , . In this manner, for example, a UPnP device  in network B, such as a media player, is able to obtain the device and service descriptions for the virtualized media store , which match those of the actual media store  in network A. In this example, the control URL in the service description will point to the agent application running on the computer  in network B, and therefore all requests for services will be made to the agent application and not the actual device  in network A.","When a device (e.g., media player ) makes a call  to the \u201cvirtual\u201d services provided by a virtualized device (e.g., virtualized media store ), the agent application in computer  accepts the inbound SOAP request, parses the input parameters, tests that it is valid against both the virtualized device and service descriptions, and then sends a request control message  addressed to the endpoint in the agent application in the source network (e.g., the agent application running in computer  in network A, for example). This request control message is passed over the peer-to-peer network  via the super-peer networking server  which relays the message to the IP address of the agent application running on the computer  in the source network A. This request control message includes details of the UPnP device, service, action, and input parameters that were called on the virtualized device. The agent application in the computer  in the source domain (e.g., network A) receives and unpacks the request control message. Using the UUID contained in the received request control message, the agent application locates the correct device (e.g., media store ) on the local network (i.e., network A), sends a SOAP request  to the control URL of the UPnP device in the source network service with the appropriate action and parameters as obtained from the control message. The source device (e.g., media store ) in network A responds to the SOAP request by sending a response message  to the agent application in the computer  in network A. The agent application receives the response message, packs this response message into a response control message and sends this response control message  back to the endpoint of the request control message, which is the agent application running on the computer  in the target domain network B. As with the request control message, the response control message  is sent over the peer-to-peer network via the super-peer networking server  which relays the message to the IP address of the agent application running on the computer  in the target network B. The agent application running on the computer  in the target network B unpacks the response control message , and replies to the original SOAP request from the requesting device  in network B using the received result parameters. Thus, the calling device  in network B appears to be able to call on a virtualized device and service in network B created by the agent application (shown as dashed line ), while the calling device  is actually served responses from the real UPnP device in network A.","In addition to virtualizing a single device or service, these methods may be expanded or implemented so that when two users have linked their respective networks together, their networks appear to include both their own UPnP devices and virtual representations of UPnP devices on the other user's network, as illustrated in .","The UPnP Forum (http:\/\/www.upnp.org) has also created a method for media devices to communicate between one another using UPnP protocols and standards. To this end the UPnP protocol defines several UPnP device types (e.g. Media Server) and services (e.g. ContentDirectory:1 and AVTransport:1). However, conventional UPnP protocol limits such communication to a local network and does not enable communication to external networks via the Internet.","In conventional UPnP networks, media players may call a UPnP action named \u201cbrowse,\u201d defined in the service template in ContentDirectory:1 to locate items of media within a real source device. Once a desired media item has been located, the UPnP protocol specification requires that the content directory return an XML-based description of the media item in a format called DIDL-Lite. The DIDL-Lite definition includes an element called \u2018RES\u2019 or resource. The value of this RES element is a URL pointing to the location of the media to be played by the requesting device. In a normal subnet, this URL would point to the source device providing the ContentDirectory:1 service, with some parameters identifying the media item itself. A requesting media player would then connect to this URL and read from it to obtain the data that makes up the media item (for example an MP3 file).","In a further embodiment, URL mapping is performed which enables media streaming from a real source device in the source network to a requesting device in the target network without passing the data through the peer-to-peer network. In the case where a virtualized device is supporting ContentDirectory:1, and thus the actual media item is located in a remote source network (e.g., network A), the RES URLs are rewritten to point to a correct location in the target network (e.g., network B) where the media can be found. To do this, an agent application running in a computer ,  in either the source or target networks employs several techniques to carry out this URL rewriting, and to thereby optimize the delivery of content from the source device in the source network to a requesting device in the target network.","When the agent application starts up in a local network computer , , it uses multicast domain name service (mDNS), which is another standard protocol for network service discovery, to locate Internet Gateway Devices (IGDs) capable of supporting network port forwarding. If a device, such as an Internet gateway coupled to the router , , is found which does support port forwarding, the agent application obtains the external IP address from the IGD (that is, the IP address of the local network ,  as seen on the public Internet) and creates a port forward on this device to the agent application running in the computer , . The details of this port forward are held in the agent application and passed to the agent application in the target network (e.g., network B) in subsequent control messages. When a RES element is generated by an agent application acting as a virtualized ContentDirectory:1 service as a result of a \u2018browse\u2019 action by a media player (i.e., the agent application running on the computer  in the target network), the RES element is modified by the agent application to point back to the agent application that maintains an HTTP server specifically for this purpose. Media data is then transferred between the agent applications running in the computers ,  in the source and target domains, but the RES URLs are rewritten with additional information so that media data are transmitted via the Internet , as opposed to using the peer-to peer messaging network . The manner in which the RES URLs are rewritten depends upon the port forwarding capabilities of the source and target networks as described below.","If the source domain network supports port forwarding, the media source URL is encoded such that requests from a media player to the target network agent application (e.g., the agent running in the computer  in network B) will be interpreted to allow the target client (e.g., a media player  in the target network B) to make HTTP read requests directly from the agent application in the source domain without going via the peer-to-peer messaging network. Thus, the HTTP read request will be addressed to the agent application running in the computer  in the source network A and be transmitted via the Internet  without passing through the super-peer networking server . This implementation is illustrated in , which shows media data flowing via communication  through the Internet  between the agent applications running in the computers ,  in the source and target domains (i.e., networks A and B), without passing through the peer-to-peer networking server . Thus, while the negotiations that enable accessing media in the source domain are accomplished via the peer-to-peer network, the transmission or streaming of the media data is accomplished directly between the agent applications in the source and target domains via the Internet.","If the source domain does not support port forwarding, but the target domain does, the agent application in the computer  in the target domain may encode the URL so that requests from the media player (e.g., a media player  in the target network B) to the target domain agent application (i.e., the agent application running in the computer  in the target network B) will cause a control message to be sent to the agent application running on the computer  in the source domain. This control message causes that agent application to push media data directly to the target domain via the Internet without utilizing the peer-to-peer messaging network. Thus, an HTTP read-request will be transformed into a control message that causes the agent application in the source domain to obtain the requested media from the media source (e.g., media store ) and to push the obtained media data to the agent application in the target domain via the Internet . The agent application in the target domain then receives the media and provides it to the requesting media player as if the agent application was the media source. This implementation is also illustrated in , which shows media data flowing via communication  through the Internet  between the agent applications running in the computers ,  in the source and target domains (i.e., networks A and B) without passing through the peer-to-peer networking server . Again, while the negotiations that enable accessing media in the source domain are accomplished via the peer-to-peer network, the transmission or streaming of the media data is accomplished directly between the agent applications in the source and target domains via the Internet.","If neither the source nor the target domains support port forwarding, then the agent application running in the computer  in the target domain sends a control message to the agent application running in the computer  in the source domain, which instructs the source agent application to obtain and push the requested media data to an intermediary relay server (referred to herein as the re-routing server ) that exists on the Internet . This re-routing server  acts as an efficient data buffer, allowing uploads and downloads of data to occur. At about the same time, the agent application running in the computer  in the target domain accesses the same re-routing server , and starts reading the media data from the buffer created by the re-routing server . The control message from the target domain agent application to the source domain agent application may be transmitted over the peer-to-peer network via the peer-to-peer networking server ; however, the subsequent media data transmissions are communicated via the re-routing server , thereby bypassing the peer-to-peer network. This implementation is illustrated in , which shows media data flowing through the Internet  via the re-routing server  located within the Internet between the source and target domains (i.e., networks A and B) without passing through the peer-to-peer networking server . Thus, while the negotiations that enable accessing media in the source domain are accomplished via the peer-to-peer network, the transmission or streaming of the media data is accomplished between the agent applications in the source and target domains through the re-routing server  via the Internet.","Regardless of the particular URL mapping performed, the media player reads the requested media data from the agent application in the target domain and renders the data (e.g., plays a song, or displays a video) just as if it were reading the media data from a UPnP device on its local network (e.g., network B).","As mentioned above, users may initiate the virtualization process to make devices and services available on their domains (e.g., network A) from any computing device with access to the Internet , including mobile devices . This capability provides users with the ability to have access to their media files without the need to carry media stores with them; provided they have their cellular telephone with them, users can direct their media to any UPnP device on an available network","Some of the components of the communication system that enable controlling network and device accesses on a mobile device  are illustrated in . To enable a mobile device  to access the Internet , and through the Internet to access the registration server , the mobile device  may communicate with a wireless network . The wireless network  may communicate with the Internet  via a carrier network  through a data link , such as the Internet, a secure LAN, WAN, or other network. The carrier network  controls messages (generally consisting of data packets) sent to a mobile switching center (MSC) , and communicates with the MSC  to transfer data and voice information. The MSC  may be connected to multiple base stations (BTS)  by another network , such as a data network and\/or Internet portion for data transfer and a POTS portion for voice information. A BTS  wirelessly broadcasts messages to and receives messages from the mobile devices , using predetermined voice and\/or data packet services, such as Code Division Multiple Access (CDMA), short messaging service (SMS), or any other over-the-air methods.","Mobile devices  are configured to include a computer platform  having a memory  in communication with a processor , such as via an application programming interface (API)  that enables interaction with any resident applications, (e.g., a \u201cmy media\u201d interface  that works cooperatively with information communicated by the registration server  shown ).",{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 4","b":["400","402","402","400","416","418","420","422","424","426","420","428","431","432"]},"As mentioned above, when a user accesses the registration server  to make devices or services available on a target domain, the registration server  may generate a list of such devices or services which the mobile device may present on a GUI display  (e.g., list items A-D -). Using the GUI functionality, the user may select a particular friend domain as a target domain, a particular listed user domain as a source domain, and a particular device or service to be virtualized on a target domain.","An overview of the processes involved in the various embodiments is illustrated in  which shows method . When a user decides to register a local network for sharing via the various embodiments, the user may access a registration server  by connecting to it via the Internet , step . As part of registering for the service, the user may be prompted to provide identifying information that the registration server can use in the future to confirm the user's identity. Also as part of this process, the registration server may download the agent application to a computer on the user's network. Once registered with the service, a user may invite friends and colleagues to link their local networks with peer-to-peer communication links, step . This process is very similar to a social networking process in which users identify friends and invite others to join their peer-to-peer networks. Once users have identified each other as friends, a user may select a target network for sharing devices and services by identifying that network via the registration server . Once the user has identified the target and source networks for sharing media, the user may initiate the process of virtualizing selected devices or services on the target network, step . UPnP devices on the target network may then access a virtual device or service via the peer-to-peer network link, step . When a media player device on the target network accesses a media file on the source network, the agent applications on computers ,  on the source and target networks cooperate to map media data URLs or virtual content to a URL that enables direct access of the media via the Internet without transmitting the data via the peer-to-peer network link, step .","An example embodiment method  for registering with a registration server  is illustrated in . To initiate the registration process, the user establishes a computer link to a super-peer registration server , step . The user may be prompted to enter information about themselves as required to create a user account, including information sufficient to enable the registration user to confirm the identity of the user in the future, step . Such information may be stored in a user account database. The registration server may also download an agent application to the computer on the user's network and cause that application to be installed, step . As part of this process, the registration server may provide the user with a unique domain ID and store the user's domain ID along with the IP address for the computer on the user's network in the user account database. Using this information, the super-peer networking server  can address control messages to the user's computer and its agent application based upon receiving the user's domain ID. Thus, the domain ID serves as a public address for the user's computer and its agent application that the super-peer networking server  can use to redirect control messages to the appropriate IP address.","Once a user has registered with the registration server, the user can join peer-to-peer networks via the super-peer networking server , step . To establish a peer-to-peer link with another network, the user may access the registration server  to identify other networks and to send or receive an invitation to such other networks to form a peer-to-peer network, step . When two networks have exchanged invitations and the users have agreed to link their respective networks, they can begin sending control messages to one another via the peer-to-peer network established through the super-peer networking server , step . In order to enable the downloading of media from one network to another, the agent applications running on the computers ,  in the users' respective networks may exchange their external IP address information as may be obtained from port forwarding operations as described above, step . At this point, the two networks can begin sharing devices and services, as described more fully below with reference to .",{"@attributes":{"id":"p-0074","num":"0073"},"figref":["FIG. 7","FIG. 6"],"b":["108","126","102","120","702","704"]},"To register a network with the registration server , a user may access a website hosted by the registration server , messages . As part of the registration process, the registration server  downloads the agent application to a computer on the local network, message . Similarly, when another user registers with the network, and they also access the website hosted by the registration server, message , and receive a download of the agent application, message . Sometime later, one user may send an invitation to the other user to join in a peer-to-peer link, which may be transmitted as an invitation message to the peer-to-peer routing server , message , which the peer-to-peer routing server  forwards on to the computer  in the invited network, message . This networking invitation may be accepted in a message  that the peer-to-peer routing server  forwards to the inviting computer, message .","An example process  by which devices and services available on a first network (network A) may be virtualized on a second network (network B) is illustrated in . As described above, the agent application running on the computer  in network A (referred to in the drawings as agent A) may discover the UPnP devices connected to network A, step . As mentioned above, this may be accomplished by monitoring device advertisement messages or by periodically querying devices on the network. As part of this process, the agent application may also obtain the service templates, properties, and addresses of the UPnP devices on the network, step .","When a user seeks to make a device or service on the user's network available to another network (such as by implementing processes described below with reference to ), a registration server  may send a control message to the agent application in network A requesting the agent to send information regarding a particular device or all devices to the agent application in network B (referred to as agent B), step . In some implementations, the request for devices may be received from the agent application in network B via the peer-to-peer network enabled by the super-peer networking server . It should be noted that the step  of obtaining device names, service templates, and properties may be performed in response to receiving a request for such information for particular devices, step . The agent application running in network A then sends the device addresses, service templates, and properties of devices and services (or selected devices) in network A to the agent application in network B, step . The agent application in network B then extracts relevant elements from the received device information, step , and generates UPnP device advertisement messages for each network a device or service for which information was received, step . The process of generating a UPnP device advertisement message follows the UPnP protocol requirements so that the advertisement message can be understood by conventional UPnP devices. The process of generating the UPnP device advertisement message uses the agent application URL as the URL for the device being announced to the network. The agent application in network B then transmits the UPnP device advertisement message on network B, thereby announcing itself as the UPnP device or devices of network A, step . This process thus creates virtual copies of the device or devices of network A on network B with those virtual devices having the same URL as the agent application on network B.","An example embodiment method by which UPnP devices in a target network, such as network B, can access devices, services and media available in a source network, such as network A is illustrated in . This example embodiment is applicable when the source network (e.g., network A) supports port forwarding. UPnP devices on network B will receive the device advertisement messages, such as for a \u201cvirtual device Y,\u201d as described above with reference to , step . A UPnP-capable device on network B, such as \u201cdevice X,\u201d may use the information contained in the device Y advertisement announcement, including the information in the service templates, to format a services call message, such as an HTTP call, step . This service call message is sent on network B addressed to the URL of the virtual device Y which is the URL of the agent application in network B, step . This service call message may include a packet of information complying with the requirements specified in the device service templates in order to obtain the desired service (e.g., a directory of available files or services).","The agent application on network B receives the virtual device Y service call from device X, step . The agent application of network B then repackages this service call into a peer-to-peer message that it transmits to the agent application in network A via the super-peer routing server , step . The agent application in network A receives the service call message, step , re-addresses the service call to the actual device Y, and sends the service call on network A, step . The real device Y then replies to this service call, sending its response message to the agent application in network A including the requested service (e.g., a directory of available media files), step . The agent application in network A receives the response from the device Y and packages the service response into a peer-to-peer message that it sends to the agent in network B, step . As part of packaging the response message, the agent application in network A includes the external IP address for network A that was previously obtained using a port forwarding request.","The agent application in network B receives the service response message, step , and re-maps the service URLs within the information received from device Y to point to its own address but containing parameters which reflects the external IP address of the agent application in network A, before forwarding the service response information to device X in network B, step . Device X then may access the URL for a particular file available in virtual device Y, step . Since the agent application in network B is mapped as the received URL to the external IP address of the device Y in network A, the access by device X is to the agent application in network B. That agent application forwards the URL access request to the agent in network A via the Internet in step . In an alternative embodiment, the device X URL access may be forwarded directly via the Internet to the agent application in network A.","When the device Y in network A receives the URL access request, it begins providing content associated with that URL to the agent application in network A, step . The agent application in network A may buffer the data and provides access to the media data to the agent application in network B which begins receiving and buffering the media data without passing through the peer-to-peer network or the super-peer networking server , step . In an alternative embodiment, the agent in network A may stream the media data directly to the device X in network B without passing through the peer-to-peer network. Device X in network B then begins to render the content, such as playing the received media, step . In some embodiments, media data may be buffered by the agent application in network B to facilitate continuous flow of media data to the device X. In a further embodiment, the URL mapping provided by the agent applications in the source and target networks may enable the requesting device X in network B to directly access the source device Y in network A.","Another example embodiment method by which UPnP devices in a target network (e.g., network B), can access devices, services and media available in a source network (network A) is illustrated in . This example embodiment is applicable when the source network (network A) does not support port forwarding, but the target network (network B) does support port forwarding. In this example embodiment, the process by which a device X in network B can discover media available in a device Y in network A is substantially similar to that described above with reference to  until the agent application in network A packages the service response message for transmission to the agent application in network B, step . Since network A does not support port forwarding in this embodiment, the service response message provided by the agent in network A does not include the external IP address for network A. The service response message is received by the agent in network B, step . Since network B in this embodiment supports port forwarding, the agent application in network B may encode the URL for device Y to be that of the agent application in network B, and forwards the service response message to device X on network B, step . When device X accesses a URL for the virtual device Y, step , this message is received by the agent application in network B which transforms the access request into a control message that is sent via the peer-to-peer network  to the agent application in network A, step . This control message includes the external IP address of network B. The control message causes the agent application in network A to access the URL of the real device Y and receive the media data, step . Device Y receives the URL access and begins providing the media data to the agent application in network A which may buffer the received data, step . The agent application in network A then pushes the media data to network B via the Internet using the external IP address received in the control message, step . In a first embodiment, the agent application in network A pushes the media data via the Internet to the agent application in network B, step . The agent application in network B receives the media data and provides it to the requesting media player, device X, as if the agent application was the media source. Device X in network B then begins to render the content, such as playing the received media, step . The received media data may be buffered by the agent application in network B to facilitate continuous flow of media data to the device X. In an alternative embodiment, the media data may be pushed directly to the IP address of the media player (i.e., device X).","Another example embodiment method by which UPnP devices in a target network (network B) can access devices, services and media available in a source network (network A) is illustrated in . This example embodiment is applicable when neither the source nor the target networks support port forwarding. In this embodiment, the process by which a device X in network B can discover media available in a real device Y in network A is substantially similar to that described above with reference to , until the agent application in network A packages the service response message for transmission to the agent application and network B, step . Since network A does not support port forwarding, the service response message provided by the agent in network A does not include the external IP address for network A. The service response message is received by the agent in network B, step . Since the target network B also does not support port forwarding, the agent application in network B may encode the URL for device Y to be that of the re-routing server , and forwards the service response message to device X on network B, step . When device X accesses a URL for virtual device Y, step , this message is received by the agent application in network B which transforms the access request into a control message that is sent via the peer-to-peer network to the agent application in network A, step . This control message causes the agent application in network A to access the URL of device Y, step , which begins providing the media data to the agent application, step . The control message also causes the agent application in network A to begin pushing the media data to the re-routing server , step . The agent application in network B may also send a control message to the re-routing server  to cause it to begin receiving and buffering media data from network A, . At about the same time, the agent application in network B may access the re-routing server  and start reading media data from the buffer in the re-routing server , step . Device X in network B then accesses the media data from the agent application in network B and begins to render the content, such as playing the received media, step . The agent application in network B may buffer the media data to facilitate continuous flow of media data to the device X.","Using the user interface tools provided by a website hosted by the registration server , the user may select or identify a source network (e.g., network A), and a target or destination network (e.g., network B), step . Having identified the source network, the user may request a menu of devices, services or media available on the source network, step . The registration  receives the user's requests and sends a control message to the agent application in network A requesting a listing of devices, services or media, step . This control message may be sent via the peer-to-peer network through the super-peer networking server . The agent application in network A may reply with a list of devices that it has discovered on network A, step . The registration server receives this information and generates an information message or webpage that lists the devices, services or media, step , which is transmitted to the mobile device via a wireless network, step . The mobile device receives this message and displays the device list, which may be in the form of a user interface for receiving user selections, step . If the user makes a selection, the mobile device receives this information and transmits the user's selection of a device, service or media to the registration server, step . The registration server then sends a control message to the agent application in network A identifying the selected device, service or media, step . Optionally as part of the step, the registration server  may also inform the agent application on network B that device, service or media information may be forthcoming from network A.","The agent application in network A receives the request to virtualize a selected device, service or media, step , and obtains the device's address, service templates and properties, step . The agent network A then formats the received information into a message that is transmitted to the agent application in network B via the peer-to-peer network (i.e., via the super-peer networking server ), step . This message is received by the agent application in network B, which extracts the relevant elements, step , and generates a UPnP device advertisement message for the selected device, step . As mentioned above, this device advertisement message includes a URL for the virtual device corresponding to the agent application on network B. The agent in network B then transmits the device advertisement message on network B, thereby announcing itself as the virtual device, service or media, step . Once the advertisement message is sent on network B, devices on the network may access the virtual device, service or media as described above with reference to .","The process of virtualizing a device, service or media may also be initiated from a computer on the source network (e.g., network A), an example embodiment method  for which is illustrated in . Using a computer  on network A, a user may view a display of devices on the network as well as a list of peer-to-peer network links or \u201cfriend\u201d networks to which the user may establish a link, step . The computer  may receive a user input of a selected device to be shared with a selected target network B, step . For example, the computer  may be configured with a graphical user interface that lists devices and networks and receives user inputs in the form of keystrokes or mouse clicks. With this information obtained from the user, the process may proceed as described above with reference to  for steps  through . Once the advertisement message is sent on network B, devices on the network may access the virtual device, service or media as described above with reference to .","The various embodiments may also enable a user on one network (e.g., network B) to obtain access devices, services or media in another network (e.g., network A), an example embodiment method  for which is illustrated in . Using a computer on network B, a user may view a menu of peer-to-peer network links or networks that have been registered for access by the agent application in network B, step . The computer may receive a user's input selecting a particular source network A, step . The agent application on network B may then send a request message to the agent application in network A for a list of devices, services or media available on network A, step . This request message may be transmitted via the peer-to-peer network via the super-peer networking server . The agent application in network A may receive the request message and reply with a list of UPnP devices, services and media that the agent application has discovered on network A, step . This reply message may also be sent via the peer-to-peer network. The agent application in network B receives the list of devices, services and media, and generates a display of this information for the user, step . This display of network A devices, services and media may be in the form of a graphical user interface to facilitate a user selection. The computer in network B may receive a user input of a selected network a device, service or media to be virtualized on a network B, step . Based on the received user input, the agent application in network B may send a request for access to the selected device, service or media to the agent application in network A, step . This message may be sent via the peer-to-peer network. The agent application in network A receives the request to virtualize a selected device, service or media, step , and obtains the UPnP address, service templates and properties for the selected item, step . The agent in network A then sends the obtained addresses, service templates and properties to the agent application in network B, step . The agent application in network B extracts the relevant elements from the received information, step , and generates an appropriate UPnP device advertisement message for the selected device, service or media, step . As with other implementations, the agent application includes in the advertisement message a URL for the selected device, service or media that corresponds to itself, so that when the agent application transmits the device advertisement message, step , it announces itself as the selected device, service or media. Once the device advertisement message is sent on network B, devices on the network may access the virtual device, service or media as described above with reference to .","Example data messages which may be exchanged among communication system components according to the various embodiments are illustrative in . When a user initiates sharing of devices and services on a network B with another network A from a mobile device , the user may place a data call via a wireless communication network  and the Internet  to a registration server , message . In response, the registration server  may send a control message to the agent application running on a computer  on network A requesting a listing of devices and services available on the network, message . The agent application on network A may reply with a listing of the UPnP devices and services that have been discovered, message .","The registration server  may reply to the mobile device  by sending this information as a list or as a webpage for display, message . The user may then reply to the registration server  with a selected device or service to be virtualized, message . The selection of a particular device or service for virtualization may be communicated to the agent application on a computer  on network A, message . This message may include the domain ID of the target network B. The agent application may then obtain the address, service templates and properties of the selected device or service, processing , and send this information to the agent application on a computer  on network B via the peer-to-peer network , message . The agent application on a computer  on network B may then generate a UPnP device advertisement announcement, processing , and transmit this announcement on network B, message . A UPnP device on network B may then request a service from the virtualized device or service in accordance with the service templates in a message directed to the agent application on a computer  on network B, message . As described above, the process of requesting a service may involve first requesting the service templates from the virtual device, which the agent application provides, and then formatting the service request using information obtained from the service templates. For sake of simplicity, such signaling between a requesting device and the agent application is not included in .","The agent application on a computer  on network B may reformat the service request into a peer-to-peer message, processing , and transmit the message to the agent application on a computer  on network A via the peer-to-peer network, message . The agent application on a computer  on network A processes the received service request message, processing , and issues the request to the selected device, message . The selected device may reply with a service response message, message , which is received by the agent application on a computer  on network A. The agent application on a computer  on network A may process this service response message, processing , such as to include the external IP address of network A when network A supports port forwarding, and forward the service response message to the agent application on a computer  on network B via the peer-to-peer network, message . The agent application on a computer  on network B may process the received service response message, processing , such as to map the device URLs as described herein, and forward the service response message to the requesting device, message . For example, the service response message may be a listing of available media and associated URLs that the requesting device can access in order to obtain media data. The requesting device on network B may then access a particular URL, message , which is directed to the agent application on a computer  on network B. The agent application on a computer  on network B may process the URL access, processing , and forward the URL access to the agent application on a computer  on network A via the peer-to-peer network, message . The agent application on a computer  on network A may process the received URL access, processing , before passing the access to the selected device or service, message . The selected device or service may then begin delivering the media data associated with the URL, message . Depending upon the port forwarding capabilities of the source and target networks, the agent application on a computer  on network A may process media data packets, processing , such as to buffer and push the media data to the agent application on a computer  on network B in message . As a further alternative, the agent application on a computer  on network A may push the media data to a re-routing server  (not shown) from which the agent application on a computer  on network B can access the data (in which case message  would be accomplished in two messages\u2014one from the agent application on a computer  on network A to the re-routing server , and another from the re-routing server  to the agent application on a computer  on network B). Media data may be received by the agent application on a computer  on network B, where it may be buffered or processed, processing , before delivery to the requesting device, message . The messages shown in  are intended to be illustrative of example embodiments. The order of messages may differ from that illustrated, and fewer or more messages may be used to implement the various embodiments. Thus the messages illustrated in  are not intended to limit the scope of the claims in any manner.","While the foregoing examples concerned sharing media among two private networks, the embodiments may be used to enable a device in a first network (referred to as network A in this example) to directly access media hosted on a server  accessible via the Internet .  illustrates an example communication network supporting such an embodiment. The components of this communication network are similar to those illustrated in  with the exception that a media server  is the source domain for media to be rendered by one of the UPnP devices , , , ,  on network A. This embodiment may enable a UPnP media player, such as a digital television, to access media directly from a server, such as a server hosting movies in digital format, without having to process the digital media through a computer .","An example embodiment method  by which a UPnP device may access media directly from an Internet server is illustrated in . An agent application on a computer on network A may display a menu of peer-to-peer networks that may be accessed, step , and may receive a user input of the selected Internet service, step . For example, a user may select a movie rental service that provides movie rentals via an implementation of the various embodiments. In response, the agent application on network A may send a request message to the selected server S requesting a listing of available services, such as a listing of movies available for rental, step . The media server receives this request and may reply with a list of available services, such as a listing of movies for which access may be rented, step . This listing of available services may be received by the agent application in network A and displayed for the user, step . If the user selects a particular service, such as a movie to view, this input may be received by the agent application in network A, step , and used to generate and send a request to the media server for access to the selected service, step . The media server receives the request to virtualize a selected service, such as a particular movie, step , and in response may reply with an address, service template and properties for the selected service, step . The agent application in network A then extracts the relevant elements from the received information, step , and generates a UPnP advertisement message for the selected service, step . The generated UPnP announcement may then be transmitted on network A, step , thereby enabling UPnP devices, such as a digital television, to discover the virtual service. Once the device advertisement message is sent on network B, devices on the network may access the virtual device, service or media in a manner similar to that described above with reference to .","Example messages which may be exchanged among components of the communication system enabling devices on a network to directly access media stored on an Internet server are illustrated in . In order to directly access media data stored on an Internet media server , a user may need to register the user's network with a registration server , message . As part of the registration process, the registration server  may download an agent application and provide user identification information needed to access the media server , message . The registration server  may also inform the media server  when a user has registered for the service, message . Once a user is registered, the agent application on network A may exchange messages with the media server , messages , such as to exchange authentication credentials, provide the agent application with a menu of available services, and receive other service registration information. The media server  may also provide the agent application on network A with information to enable it to generate a device advertisement message, message , identifying the media server  as a virtual device on network A.","A UPnP device on network A, such as a digital television, may issue a service request, message , that the agent application on network A processes, processing , and forwards to the media server , message . This service request message may be processed by the media server , processing , and may involve a data request to a media database , message , and a data response, message , that the media server  processes, processing , before sending the requested information to the agent application in network A, message . The agent application in network A process the received information, such as to re-map URL addresses as described herein, processing , before providing the requested information to the requesting device, message . For example, a digital television might request a program guide of movies available for download from the media server .","A user may select a particular media to be accessed, and the corresponding media URL may be transmitted to the agent application on network A, message . The agent application on network A may process the URL request, processing , before transmitting the URL to the media server , message . The media server  may process this URL request, processing , and access the associated media file in a media database , message . The requested media may then be transmitted from the media database  to the media server , message , which may process the media data, processing , before transmitting the media data via the Internet, message . Media data may be received by the agent application in network A and buffered or re-addressed, processing , before being provided to the requesting device, message . In an alternative embodiment, the media data may be provided to the requesting device in network A, in which case message  may be addressed to the requesting device.","The various embodiments enable a number of useful implementations. For example in an embodiment, dynamic information available on one network may be displayed as a photographic image on a simple display device, such as digital photo frame. Digital photo frame devices are becoming popular for displaying user media, particularly photographs. UPnP digital photo frames are now currently available and widely used for conveniently displaying photographic media stored on a user's network. A digital photo frame may be used, for example, as a display device for rendering media received from a virtual media store according to the embodiments described above. A further implementation of this idea enables dynamic information, such as web pages, and textual information, such as e-mail and twitter messages, to be displayed as photographs on a digital photo frame. Using the various embodiments, such display methods may be very useful to users in a number of applications.","An example embodiment method  for rendering dynamic and textual information on a digital photo frame is illustrated in . This embodiment method may be implemented on a computer with access to the dynamic or textual information to be rendered. Such a computer may access a file or URL to obtain text, image, HTML or other data from a dynamic data source, step . For example, a computer may access a user's e-mail or twitter account to obtain the user's latest messages. The computer then formats the obtained information into a format suitable for display, step . For example, if the obtained information is an e-mail message, the message may be formatted in a manner similar to how it would be presented on a display of e-mail in an e-mail application. The formatted data is then rendered as an in-memory bitmap, step . The bitmap is then converted into a digital photograph data format, such as the JPEG format, and saved in memory, step . The digital photograph data, such as the JPEG file, is then communicated to the digital photo frame display, . For example, the digital photograph data may be stored in the memory of the digital photo frame, or in a data store on the local network, which the digital photo frame accesses. In a further embodiment, the digital photograph data may be stored on a device which has been virtualized on another network as described in the previous embodiments, thereby enabling a digital photo frame on the other network to access and display the image in a manner similar to that described above with reference to , step .","A particular example implementation of this embodiment is illustrated in  in which \u201ctweets\u201d on a user's Twitter account are rendered for display on a digital photo frame. A computer may access the user's Twitter account and obtain the latest message text, step . The Twitter text may then be formatted for display, step , which is rendered as a bitmap, step . The bitmap image is then converted to JPEG format, step , and the resulting JPEG file is provided to a digital photo frame, step . Alternatively, the resulting JPEG file may be stored on a device which has been virtualized on another network, enabling the JPEG file to be displayed in a digital photo frame on that other network in a manner similar to that described above to reference , step .","Another example implementation of this embodiment is illustrated in  in which dynamic web pages, such as news websites, stock quotes, and webcam feeds are rendered for display on a digital photo frame. A computer may access a particular website and obtain the latest HTML scripts and images, step . The obtained HTML and images may then be formatted for display, such as by generating the corresponding webpage using a web browser application, step . The generated webpage is then rendered as a bitmap, step , and the bitmap image is converted to JPEG format, step . The resulting JPEG file may be provided to a digital photo frame, step . Alternatively, the resulting JPEG file may be stored on a device which has been virtualized on another network, enabling the JPEG file to be displayed in a digital photo frame on that other network in a manner similar to that described above to reference , step .","The \u201ccontroller\u201d used to initiate device or file sharing by accessing the registration server  (or other server) in the various embodiments may be any device which hosts or provides a web browser, such as a personal computer , webbook, or mobile device . A mobile device , such as a cellular telephone may be a particularly convenient device for use as the controller since its small size and other utilities mean that users will typically have one with them or nearby. Typical mobile devices  suitable for use with the various embodiments will have in common the components illustrated in . For example, an exemplary mobile device  may include a processor  coupled to internal memory , and a display . Additionally, the mobile device  may have an antenna  for sending and receiving electromagnetic radiation that is connected to a wireless data link and\/or cellular telephone transceiver  coupled to the processor . Mobile devices typically also include a key pad  or miniature keyboard and menu selection buttons or rocker switches  for receiving user inputs.","The embodiments described above may be implemented with any of a variety of server devices, such as the server  illustrated in . Such a server  typically includes a processor  coupled to volatile memory  and a large capacity nonvolatile memory, such as a disk drive . The server  may also include a floppy disc drive and\/or a compact disc (CD) drive  coupled to the processor . The server  may also include network access ports  coupled to the processor  for establishing data connections with network circuits , such as the Internet.","The embodiments described above may also implement a digital photo frame as illustrated in . Such a digital photo frame  typically includes a processor  coupled to memory  and a large display . The digital photo frame  may also include a wireless data link transceiver  coupled to an antenna , as well as a battery  coupled to the processor . The processor  may be configured to announce its plug-n-play parameters and service templates on wireless networks accessed via the wireless data link transceiver .","The processors , ,  in the various devices may be any programmable microprocessor, microcomputer or multiple processor chip or chips that can be configured by software instructions (applications) to perform a variety of functions, including the functions of the various embodiments described herein. In some devices, multiple processors , ,  may be provided, such as one processor dedicated to wireless communication functions and one processor dedicated to running other applications. Typically, software applications may be stored in the internal memory , ,  before they are accessed and loaded into the processor , , . In some mobile devices, the processor , ,  may include internal memory sufficient to store the application software instructions. In some devices, the secure memory may be in a separate memory chip coupled to the processor , , . In many devices the internal memory , ,  may be a volatile or nonvolatile memory, such as flash memory, or a mixture of both. For the purposes of this description, a general reference to memory refers to all memory accessible by the processor , , , including internal memory , ,  removable memory plugged into the device, and memory within the processor , ,  itself.","The foregoing method descriptions and the process flow diagrams are provided merely as illustrative examples and are not intended to require or imply that the steps of the various embodiments must be performed in the order presented. As will be appreciated by one of skill in the art the order of steps in the foregoing embodiments may be performed in any order. Words such as \u201cthereafter,\u201d \u201cthen,\u201d \u201cnext,\u201d etc. are not intended to limit the order of the steps; these words are simply used to guide the reader through the description of the methods. Further, any reference to claim elements in the singular, for example, using the articles \u201ca,\u201d \u201can\u201d or \u201cthe\u201d is not to be construed as limiting the element to the singular.","The various illustrative logical blocks, modules, circuits, and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware, computer software, or combinations of both. To clearly illustrate this interchangeability of hardware and software, various illustrative components, blocks, modules, circuits, and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application, but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.","The hardware used to implement the various illustrative logics, logical blocks, modules, and circuits described in connection with the aspects disclosed herein may be implemented or performed with a general purpose processor, a digital signal processor (DSP), an application specific integrated circuit (ASIC), a field programmable gate array (FPGA) or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform the functions described herein. A general-purpose processor may be a microprocessor, but, in the alternative, the processor may be any conventional processor, controller, microcontroller, or state machine A processor may also be implemented as a combination of computing devices, e.g., a combination of a DSP and a microprocessor, a plurality of microprocessors, one or more microprocessors in conjunction with a DSP core, or any other such configuration. Alternatively, some steps or methods may be performed by circuitry that is specific to a given function.","In one or more exemplary aspects, the functions described may be implemented in hardware, software, firmware, or any combination thereof. If implemented in software, the functions may be stored on or transmitted over as one or more instructions or code on a computer-readable medium. The steps of a method or algorithm disclosed herein may be embodied in a processor-executable software module executed which may reside on a computer-readable medium. Computer-readable media includes both computer storage media and communication media including any medium that facilitates transfer of a computer program from one place to another. A storage media may be any available media that may be accessed by a computer. By way of example, and not limitation, such computer-readable media may comprise RAM, ROM, EEPROM, CD-ROM or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other medium that may be used to carry or store desired program code in the form of instructions or data structures and that may be accessed by a computer. Also, any connection is properly termed a computer-readable medium. For example, if the software is transmitted from a website, server, or other remote source using a coaxial cable, fiber optic cable, twisted pair, digital subscriber line (DSL), or wireless technologies such as infrared, radio, and microwave, then the coaxial cable, fiber optic cable, twisted pair, DSL, or wireless technologies such as infrared, radio, and microwave are included in the definition of medium. Disk and disc, as used herein, includes compact disc (CD), laser disc, optical disc, digital versatile disc (DVD), floppy disk, and blu-ray disc where disks usually reproduce data magnetically, while discs reproduce data optically with lasers. Combinations of the above should also be included within the scope of computer-readable media. Additionally, the operations of a method or algorithm may reside as one or any combination or set of codes and\/or instructions on a machine readable medium and\/or computer-readable medium, which may be incorporated into a computer program product.","The preceding description of the disclosed embodiments is provided to enable any person skilled in the art to make or use the present invention. Various modifications to these embodiments will be readily apparent to those skilled in the art, and the generic principles defined herein may be applied to other embodiments without departing from the spirit or scope of the invention. Thus, the present invention is not intended to be limited to the embodiments shown herein but is to be accorded the widest scope consistent with the following claims and the principles and novel features disclosed herein."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated herein and constitute part of this specification, illustrate exemplary embodiments of the invention, and together with the general description given above and the detailed description given below, serve to explain the features of the invention.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIGS. 2A-2C"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 7","FIG. 6"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIGS. 9A-9C"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 13","FIG. 12"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 16","FIG. 15"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 18","FIG. 17"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 19","FIG. 17"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 22"}]},"DETDESC":[{},{}]}
