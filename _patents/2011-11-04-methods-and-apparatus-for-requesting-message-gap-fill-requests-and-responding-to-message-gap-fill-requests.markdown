---
title: Methods and apparatus for requesting message gap fill requests and responding to message gap fill requests
abstract: Various embodiments are directed to gap fill methods and apparatus. In an exchange system a device in the exchange may request a message gap fill when it detects that it may be missing one or more messages. The gap fill message may include a range of message identifiers or message counter values identifying the messages which are being requested by the multicast gap fill message. A message logging system included in the exchange may include a plurality of message logging devices. A multicast gap fill message may specify a set of messages to be provided which is very large. Multiple devices may respond to the requesting device with the responding device providing one, multiple or all the messages. Replies to multicast gap fill request messages are sent in the form of unicast messages from directed to the device which sent the multicast gap fill request message.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09197428&OS=09197428&RS=09197428
owner: NYSE ARCA LLC
number: 09197428
owner_city: Chicago
owner_country: US
publication_date: 20111104
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION","FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present application claims the benefit of the filing date of U.S. Provisional Patent Application Ser. No. 61\/552,414, filed on Oct. 27, 2011 and titled \u201cMETHODS AND APPARATUS FOR USING MULTICAST MESSAGING IN A SYSTEM FOR IMPLEMENTING TRANSACTIONS\u201d; claims the benefit of the filing date of U.S. Provisional Patent Application Ser. No. 61\/548,691, filed on Oct. 18, 2011 and titled \u201cMESSAGING METHODS AND APPARATUS FOR USE IN AN EXCHANGE SYSTEM\u201d; claims the benefit of the filing date of U.S. Provisional Patent Application Ser. No. 61\/543,798, filed on Oct. 5, 2011 and titled \u201cMESSAGING METHODS AND APPARATUS FOR USE IN AN EXCHANGE SYSTEM\u201d; claims the benefit of the filing date of U.S. Provisional Patent Application Ser. No. 61\/543,804, filed on Oct. 5, 2011 and titled \u201cMETHODS AND APPARATUS FOR USING MULTICAST MESSAGING IN A SYSTEM FOR IMPLEMENTING TRANSACTIONS\u201d; claims the benefit of the filing date of U.S. Provisional Patent Application Ser. No. 61\/543,309, filed on Oct. 4, 2011 and titled \u201cMETHODS AND APPARATUS FOR USING MULTICAST MESSAGING IN A SYSTEM FOR IMPLEMENTING TRANSACTIONS\u201d; claims the benefit of the filing date of U.S. Provisional Patent Application Ser. No. 61\/543,290, filed on Oct. 4, 2011 and titled \u201cMETHODS AND APPARATUS FOR PERFORMING RISK CHECKING\u201d; claims the benefit of the filing date of U.S. Provisional Patent Application Ser. No. 61\/543,304, filed on Oct. 4, 2011 and titled \u201cMESSAGING METHODS AND APPARATUS FOR USE IN AN EXCHANGE SYSTEM\u201d; claims the benefit of the filing date of U.S. Provisional Patent Application Ser. No. 61\/417,197, filed on Nov. 24, 2010 and titled \u201cMETHODS AND APPARATUS FOR PERFORMING RISK CHECKING UNDER BROKER CONTROL\u201d; claims the benefit of the filing date of U.S. Provisional Patent Application Ser. No. 61\/426,490, filed on Dec. 22, 2010 and titled \u201cMESSAGING METHODS AND APPARATUS FOR RESTORING MESSAGE SYNCHRONIZATION BETWEEN A TRADER'S SYSTEM AND AN ELECTRONIC COMMUNICATIONS NETWORK\u201d; all of which are hereby expressly incorporated by reference in their entirety.","The present application relates to methods and apparatus for use in transaction systems, e.g., electronic communications networks, which implementing transactions, e.g., trades, based on received messages and, more particularly, to methods and apparatus for using multicast messaging in a transaction system.","Transaction systems implement a transaction based on one or more received messages. Electronic exchanges, implemented as Electronic Communication Networks (ECNs), are an example of a system used to electronically trade a wide range of commodities, stocks and\/or other items having real world significance. An ECN normally receives messages, e.g., an order from a trader, performs a matching operation, and if a matching order exists, performs a trade. The resulting trade is reported to the traders which placed the matching orders and also to a public system, e.g., for updating published information about the current price of a stock, commodity or other item being traded on the exchange.","Electronic trading on an electronic exchange allows for large numbers of orders to be stored, processed, and executed at relatively low cost. The speed at which a trade can be executed is important since a delay in processing of a message including an order to buy or sell may affect the dollar amount at which the trade is made. While the speed at which a trading system can implement transactions is important, reliability and scalability are often other concerns of major importance.","Traders normally send unicast messages, e.g., orders, to a trading system and receive unicast messages in response to the order messages. To keep various parties aware of transactions, e.g., trades, which are implemented by the trading system, multicast messages may be transmitted advising subscribers to the trading system information on the orders placed and completed on the trading system.","In the case of a multicast message, the message is addressed to a multicast address corresponding to a multicast group. In the case of subscribers to a trading system which are to receive published information, the subscribers may be members of a multicast group to which published information is to be sent. When a order is placed or a trade is completed, the trading system may send a multicast message addressed to a multicast address corresponding to the subscriber group. Switches to which a member of the subscriber group is attached which received the multicast message will forward the message to the multiple group members who listen to the subscriber group multicast address to receive the published trading information to which they subscribe.","For a variety of reasons, multicast messaging is generally considered less reliable than unicast messaging where a message is directed from a source device to a single destination device, e.g., using a unicast address corresponding to the destination device, as opposed to multiple address corresponding to a group of devices which use the same multicast address for receiving messages. While multicast messaging is a convenient way to communicate information from a single source, e.g., a device which publishes trade and order information, it tends to suffer from reliability problems in that members of the group often do not know when to expect a message and\/or may have trouble determining if they missed a message due to network forwarding problems and\/or other reasons. Accordingly, for a variety of reasons, unicast messaging is traditionally used in a trading system for processing and responding to transaction messages while multicast messages may be used to publish information about orders and\/or completed transactions to a list of subscribers.","Trading systems over time may be required to support increasing numbers of transactions while maintaining system reliability. In current trading systems including gateway devices and various servers used to implement a trading transaction, increasing the number of servers or replacing a server often requires changes in the hardware or addressing used by the gateway devices in the system. Similarly, changing or increasing the number of gateway devices often requires a change in the hardware and\/or addressing used by the servers in the trading system. It would be desirable if methods and\/or apparatus could be developed which could allow changes in servers and\/or gateways without requiring changes in hardware or addressing and\/or which could be implemented with reduced hardware\/addressing changes as compared to known systems which use unicast messaging within a trading system to support trading transactions.","In view of the above, it should be appreciated that there is a need for improved methods of providing missing messages to regain message synchronization. In addition, there is a need for improved protocols and method of using sequence numbers. There is also a need for relieving a client gateway system of the obligation to supply a large number of missing messages to a trader system which has lost synchronization with the ECN. While there is much room for improvement it should be appreciated that systems and apparatus which address one or more of the above issues are useful and desirable and that all embodiments need not address all of the above discussed problems.","Methods and apparatus for using multicast messaging to support transactions in a exchange system such as an electronic communication network (ECN) are described. The exchange system is particularly well suited for securities transactions, e.g., stock trading, but may be used to support a wide range of transactions.","Various embodiments are directed to gap fill methods and apparatus. In an exchange system a device in the exchange may request a message gap fill when it detects that it may be missing one or more messages. For example, a device such as a matching engine, gateway, monitor or other device in the exchange may receive a multicast message including a message identifier and determine that a message identifier included in the received multicast message does not match an expected message identifier. The discrepancy may be due to a message counter value includes as the message identifier or as a portion of a received message identifier being higher than the counter value that is expected given the last received message identifier corresponding to the same message stream as the received message. When it is determined that the received message identifier does not match the expected message identifier the device detecting the discrepancy may, and normally does transmit a multicast message requesting a message gap fill. The gap fill message may include a range of message identifiers or message counter values identifying the messages which are being requested by the multicast gap fill message.","A message logging system included in the exchange may include a plurality of message logging devices, e.g., a caching device for storing the most recent messages in the system, a medium term storage for storing messages which were transmitted during a recent time period, e.g., a time period of a few hours or minutes, and a device used for storage of older messages, e.g., messages several days old. More than one device may store the same messages for redundancy, load distribution and\/or other reasons. Each of the message logging device may be members of the same multicast group to which multicast gap fill request messages are addressed. A multicast gap fill message may specify a set of messages to be provided which is very large, e.g.,  thousand messages for example. In such a case, multiple devices may respond to the requesting device with the responding device providing one, multiple or all the messages. Replies to multicast gap fill request messages are sent in the form of unicast messages from directed to the device which sent the multicast gap fill request message.","In some embodiments in addition to including an identifier, e.g., unicast address, corresponding to the device sending the multicast gap fill request message, the multicast gap fill request message may, and often does include a preferred responder, e.g., message provider, or no identification of a preferred responder.","A message logging device which receives a multicast gap fill message request which does not identify a preferred responder and which can provide one or more of the requested messages, responds by sending the available requested message or messages to the requesting device in a unicast message or messages. The requesting device may receive the same requested message from multiple responder devices and thus learn of message logging devices which can respond in a timely manner. Based on how long it took a responder to respond with a requested message and\/or other information the requesting device is able to rank responders which can be used as alternative sources of messages. In one embodiment, based on duplicative message responses, the requesting device selects one of the responders as a preferred responder and includes an identifier of the selected preferred responder in a subsequent multicast gap file request.","In some embodiments, in the case where a multicast gap fill request is received by a message logging device capable of providing the requested message or messages and the multicast gap fill request message indentifies a message logging device other than the receiving device as the preferred responder, the receiving message loggin device will still respond under conditions. For example the non-preferred message logging device will respond if it knows the preferred message logging device does not include the full set of requested messages, the preferred message logging device is unavailable to respond, e.g., due to a system fault or device loading.","A requesting device receiving requested messages from a logging device other than the preferred logging device may update its selection of the preferred logging device to identify the responding device as the preferred responder for purposes of future multicast gap fill request messages. Numerous variations on the gap fill methods are possible.","The above described methods and apparatus facilitate redundancy and scalability within an exchange, e.g., ECN, while still providing for a suitable level of fault tolerance and detection of lost messages in a timely manner. In view of the above discussion, it should be appreciated that use of multicast communications messages to communicate between elements of an exchange offers both implementation and management advantages over other approaches to communicating between elements of an exchange. The multicast methods of the present invention are particularly well suited for facilitating fast transaction and message processing times in an exchange where many or all the components are located physically close to one another, e.g., in the same building or floor of a building and coupled together by one or more switches which support multicast messaging functionality.","Numerous additional benefits, advantages, embodiments and details are discussed in the detailed description which follows.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 1","b":["100","100","1","102","104","1","106","108","110","1","102","112","114","104","116","118","110","120","1","122","124","126","1","128","130","131","132","134","136","1","122","138","140","124","142","144","1","128","146","148","130","152","112","114","116","118","106","108","138","140","142","144","138","140","142","144","146","148","150","152","132","134","136","126"],"sub":["1,1 ","1,1","1,X ","1,X","M,1 ","M,1","M,X ","M,X","1,1 ","1,R ","L,1 ","L,R ","1,1 ","1,G ","L,1 ","1,G "]},{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 2","FIG. 1"],"b":["200","200","138","140","142","144","110","100","200","202","204","206","208","210","211","212","209","206","202","204","210","210","200"]},"The network\/security switch interface  includes the receiver configured to receive and process information, e.g. transaction messages. The transmission and reception through the network\/security switch interface  is controlled under the direction of the processor  which executes one or more of the routines and\/or modules included in memory  to control the operation of gateway .","Memory  includes routines, various modules and data\/information. The processor , e.g., a CPU, may execute the routines  and various modules, and use the data\/information in memory  to implement a method, e.g., a method in accordance with flowchart  of .","The memory  includes a control routines , an incoming message counter , an outgoing message counter , an assembly of modules , a received transaction message , multicast address group information , generated multicast transaction message , received multicast transaction response message , and generated unicast transaction response message . The processor  executes various modules included in the assembly of modules  to perform various operations in accordance with the invention. Included in the memory  is message identification information  which includes a plurality of stream identifier and message counter value pairs, e.g., a first pair ,  and an Nth pair -. The stream and message counter value of an individual pair can, and in some embodiments is, used a message identifier. Some of the stored stream and message counter pairs may serve as message identifiers corresponding to streams being received by the gateway  and may represent the message identifier which was last received in a message corresponding to the identified stream. Other ones of the stored stream and message counter pairs may serve as message identifiers corresponding to streams being transmitted by the gateway  and may represent the message identifier which was last transmitted in a message corresponding to the identified stream.","In accordance with various embodiments, the gateway device  receives a first transaction message, e.g., a unicast order message, from a trader, client or a broker system. Transaction messages sent by a trader and\/or broker are received via a receiver in the network\/security switch interface .","The incoming message counter  keeps track of the incoming messages, e.g., transaction messages from trader systems, while the outgoing message counter  keeps track of the outgoing messages, e.g., transaction response messages to the broker, client and\/or trader system. The assembly of modules  includes a plurality of modules which when executed by the processor , configure the processor, e.g., computer,  to implement the function corresponding to the module. In some embodiments, processor  is configured to implement each of the modules of the assembly of modules  to perform various operations in accordance with the method of flowchart  discussed later. The assembly of modules is illustrated in  and is discussed in detail below.","The received transaction message is a transaction message received from a trader system, e.g., trader system . In some embodiments the received transaction message is a unicast transaction message.","The multicast address group information  includes the multicast address  to be used by the gateway  as a source address for communicating information to matching engine(s). The multicast address group information  further includes security to multicast address mapping information . The information  information mapping securities to particular multicast addresses corresponding to a multicast group which includes a matching engine which is responsible for maintaining the order book in the exchange for a particular security. For example information  indicates that securities  starting with the letter A or B corresponding to a multicast matching engine group which are members of a multicast group which listens to multicast address . In addition information  indicates that securities  starting with the letter X, Y or Z corresponding to a multicast matching engine group which are members of a multicast group which listens to multicast address Q .","In addition to the security to multicast address mapping information , the gateway  can, and does include in some embodiments, information mapping a security to a particular matching engine. Such information can be accessed and the identifier corresponding to the matching engine corresponding to a particular security can be included in a multicast transaction message generated by the gateway  when the multicast transaction message relates to an order corresponding to a particular identified security.","Multicast transaction messages generated by the gateway  may be of the type illustrated in . Generated multicast transaction message  is a first multicast transaction message transaction message generated by a message generation module in the assembly of modules . The multicast transaction message  includes a first multicast address as a destination address and at least some information included in said received transaction message . In some embodiments the gateway  selects, for use as the destination address, a multicast address from a plurality of multicast addresses based on a securities identifier included in the received transaction message . In accordance with various embodiments, the generated multicast transaction message  is transmitted, e.g., multicasted, from the gateway  to multiple members of a first multicast group corresponding to the selected multicast address that was used as a destination address in the multicast transaction message .","The received multicast transaction response message  is a multicast transaction response message received in response to the multicast transaction message  which was transmitted by the gateway .","The unicast transaction response message  is generated by a message generation module in the assembly of modules , from the received multicast transaction response message . In various embodiments a transmitter included in the interface  is configured to transmit the unicast transaction response message  to a trader or broker from which the transaction message  was received. In various embodiments the unicast transaction response message  is an order response message addressed to the broker system or client system from which unicast transaction message  was received.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 2A","FIG. 2","FIG. 2A","FIG. 2","FIG. 2A","FIG. 2","FIG. 2A","FIG. 2A"],"b":["200","222","212","210","200","210","832","834","834","220","832","256","834","258","256"]},"The modules in the assembly of modules  can be implemented in hardware within the processor  of , e.g., as individual circuits. Alternatively, the modules may be implemented in software and stored in the memory  of the gateway  shown in . While shown in the  embodiment as a single processor, e.g., computer, it should be appreciated that the processor  may be implemented as one or more processors, e.g., computers.","When implemented in software the modules include code, which when executed by the processor, configure the processor, e.g., computer,  to implement the function corresponding to the module. In some embodiments, processor  is configured to implement each of the modules of the assembly of modules . In embodiments where the assembly of modules  is stored in the memory , the memory  is a computer program product comprising a computer readable medium comprising code, e.g., individual code for each module, for causing at least one computer, e.g., processor , to implement the functions to which the modules correspond.","Completely hardware based or completely software based modules may be used. However, it should be appreciated that any combination of software and hardware (e.g., circuit implemented) modules may be used to implement the functions. As should be appreciated, the modules illustrated in  control and\/or configure the gateway  or elements therein such as the processor , to perform the functions of the corresponding steps illustrated and\/or described in the exemplary methods of the present invention.","Assembly of modules  includes a multicast message generation module  configured to generate a first multicast transaction message including a first multicast address as a destination address and at least some information included in said first transaction message. In some embodiments the first transaction message is a unicast transaction message.","In some embodiments the multicast message generation module  is further configured to select, for use as said destination address, a multicast address from a plurality of multicast addresses based on a securities identifier included in the first transaction message. In some embodiments the multicast message generation module  is further configured to include, in the said first multicast transaction message, a multicast group identifier corresponding to a multicast group to which said first gateway device corresponds.","In some embodiments the multicast group identifier is a multicast address corresponding to said multicast group to which said first gateway device corresponds. In some embodiments the multicast message generation module  is further configured to include, said multicast address corresponding to said multicast group to which said first gateway device corresponds, as a source address in said first multicast transaction message.","The assembly of modules  further includes an update module  configured to update a multicast message counter value corresponding to the selected multicast address. In some embodiments the multicast message generation module  is further configured to include the updated multicast message counter value in said first multicast transaction message.","The assembly of modules  further includes a null multicast transaction message generation module  configured to generate a null multicast transaction message including an updated message count at predetermined time intervals. In some embodiments the transmitter  is further configured to transmit said null multicast transaction message.","The assembly of modules  further includes a monitoring module  configured to monitor a time lapsed since a last multicast message was sent to said selected multicast address, and a control module  configured to control the transmitter  to transmit, if said lapsed time reaches a maximum time between multicast messages threshold, a null multicast transaction message to said selected multicast address, said null multicast transaction message including an updated multicast message counter value. The assembly of modules  in some embodiments further includes a received transaction storage module .","In some embodiments the transmitter  is configured to transmit the first multicast transaction message to a switch used to communicate said multicast transaction message to multiple members of a first multicast group corresponding to the selected multicast address that was used as a destination address in the first multicast message, said multicast transaction message including at least some information included in said first unicast transaction message.","In some embodiments the first multicast response message includes a destination address which is the same as a multicast address included in said first multicast transaction message as a source address.","In some embodiments the assembly of modules further includes a unicast transaction response message generation module  configured to generate a first unicast transaction response message from the first multicast response message. In some embodiments the transmitter  is further configured to transmit said first unicast transaction response message to a trader or broker from which said first unicast transaction message was received. In various embodiments the first unicast transaction response message is an order response message addressed to the broker system or client system from which said first unicast transaction message was received.","In some embodiments the first multicast address corresponds to a first multicast group including the first matching server and a second matching server. In some embodiments the first multicast group further includes a transaction message logging device. In some embodiments the first multicast transaction response message includes a multicast address as a message source address, the multicast address corresponding to a multicast group including a matching server which performed a matching operation in an attempt to complete an order communicated by said first multicast transaction message. In some embodiments the said first and second multicast groups further includes a market data server used for distributing public order information.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 3","FIG. 1"],"b":["300","300","146","148","150","152","100","300","302","304","306","308","310","312","309","306","302","304","310","308","212","300"]},"The matching engine  performs the matching operation on trade\/transaction orders. The matching engine  maintains an order book to keep track of various trades, stocks, shares etc., on the exchange market that are available for trading, check if a match is available corresponding to a trader's trade order, e.g., a trade order requested in a transaction message from a trader system. For example, if a received trade order indicates that a trader is looking to buy 100 shares from a certain company X, the matching engines , \u2032 look for shares from company X that are available for buying. If there is a match, the trade order can be performed and the transaction corresponding to the trader requested trade order may be completed.","The memory  includes control routines , an order matching module , incoming transaction message counter(s) , an outgoing multicast message counter(s) , stream and message counter value information , multicast address group information , and order book for securities handled by the matching engine . The processor , e.g., a CPU, may execute the routines  and various modules, and use the data\/information in memory  to control the operation of matching engine  in accordance with the invention.","In accordance with various embodiments, the matching engine  receives a transaction message, e.g., a multicast transaction message, from the gateway device . In accordance with one feature, the matching engine  performs a matching operation using the information indicated in the received multicast transaction message.","The incoming transaction message counter  keeps track of the incoming, e.g., received transaction messages, while the outgoing message counter  keeps track of the outgoing messages, e.g., transaction response messages communicated from the matching engine .","The received transaction message  is a transaction message received by the matching engine  from the gateway . In various embodiments the received transaction message is a multicast transaction message communicated from the gateway . The generated multicast transaction response message  is a multicast transaction response message generated by the matching engine  for communicating to one or more gateway devices, e.g., gateway .","The stream and message counter value information  includes stream identifier (ID) and message counter value pairs for a plurality of streams including stream ID  and message counter value   pair, . . . , and stream ID N  and message counter value N  pair. The stream and message counter value of an individual pair can, and in some embodiments is, used a message identifier. Some of the stored stream and message counter pairs may serve as message identifiers corresponding to streams being received by the matching engine and may represent the message identifier which was last received in a message corresponding to the identified stream. Other ones of the stored stream and message counter pairs may serve as message identifiers corresponding to streams being transmitted by the matching engine and may represent the message identifier which was last transmitted in a message corresponding to the identified stream.","The multicast address group information  includes the multicast address  to be used by the matching engine  as a source address for communicating information to one or more gateway devices, e.g., gateway . The order books for securities handled by matching engine  includes order book for securities A-B , order book for securities C-D . The order books list the valid orders, e.g., buy orders and sell orders, for the security listed in the order book. If a buy and sell order are found to match, the matching engine  generates and sends separate multicast transaction reply messages to notify the buyer and seller of the extent to which their orders were completed. The exchange will normally send an acknowledgement message if it places an order on the order book which can not be immediately completed.",{"@attributes":{"id":"p-0074","num":"0073"},"figref":["FIG. 4","FIG. 1"],"b":["400","400","112","118","400","402","404","406","408","410","412","409"]},"The input device  is, e.g., keyboard, keypad, mouse, etc. The network interface  in some embodiments includes a receiver and a transmitter. Via the network interface  the trader system  can receive and\/or send information including, e.g., transmit transaction messages, receive transaction response messages etc. The network interface  includes the receiver which is responsible for receiving and processing information, e.g. transaction response messages, risk check failure messages etc. The transmitter module included in the network interface  is responsible for generating and sending signals and\/or other information. The transmission and reception through the network interface  is controlled under the direction of the processor  which executes one or more of the routines and\/or modules included in memory .","The memory  includes trader system control routines  which control overall trader system operation in accordance with the invention. Control routines  may operate in conjunction with various modules which are used to perform various functions. The memory  includes trader account\/identification information , client information , broker information , generated transaction message , a first counter , a second counter , and a message count comparator .","The trader account\/identification information  in some embodiments includes a trader identifier. A trader identifier identifies the trader and\/or trader system to which the transaction, e.g., order, message corresponds. Client information  includes information regarding one or more clients with which the trader has relationship and that the trader system  uses for performing trades, e.g., for placing trade orders using the client's system. Broker information  includes information regarding one or more broker systems with which the trader has relationship and that the trader system  may use for performing trades, e.g., buying\/selling stocks. Broker information includes broker identifiers corresponding to various different brokers systems. A broker identifier is an identifier of a broker which is responsible for backing the trade order placed by the trader system , e.g., guaranteeing that the order will be honored and, in some cases, making sure that the trader complies with various trading rules implemented by the applicable government and\/or ECN management.","The first counter  keeps track of the outgoing transaction messages during each trading session. The second counter  keeps track of the incoming messages, e.g., transaction acknowledgment and transaction response messages, response messages etc., during each trading session. The message count comparator  is configured to compare incoming and outgoing transaction message count and determine if there are one or more messages that may have been missed. In some embodiments the message comparator  provides information regarding missing\/lost transaction messages to the processor .","The generated transaction message  is e.g., an order message, generated by the transaction message generation module . The transaction message  may, and in some embodiments does, include information such as, for example, a trader identifier, a broker identifier (or combined broker-client identifier), a message number in addition to order or other trade information such as a securities identifier, price information, time period for which the order is to remain in effect and\/or an indicator indicating the particular type of order, e.g., buy, sell or limit. Depending on the embodiment some of the information may be omitted. The trader identifier identifies the trader and\/or trader system to which the transaction, e.g., order, message corresponds. The broker identifier or combined broker-client identifier is an identifier of a broker and\/or broker client combination. The identified broker is responsible for backing the order, e.g., guaranteeing that the order will be honored and, in some cases, making sure that the trader complies with various trading rules implemented by the applicable government and\/or exchange management. One or more traders may work and place order on behalf of a client. In such a case, a trader identifier is often included in the transaction message in addition to the broker-client identifier information. The message number is a unique number that is different for each message sent during a trading session by a trader from which the transaction message is received. The message number is incremented after each message is sent so that messages from the same trader will bear sequential numbers and lost messages can be readily detected and requested from the trader system and\/or a message logging system. The securities identifier identifies a stock or other item or financial instrument to which the transaction message relates. The message type information indicates the type of message being communicated. The message type may indicate one of a variety of different order types and provide price, quantity and\/or duration information relating to the order being communicated. The transaction message may also be an order cancelation type and provide information indicating what previous order that was placed by the trader sending the message is to be canceled.","The transaction messages are transmitted by trader system  to an exchange system, e.g., exchange system  where they are received and processed by the gateway, e.g., gateway device , in accordance with various embodiments.",{"@attributes":{"id":"p-0081","num":"0080"},"figref":["FIG. 5","FIG. 4"],"b":["500","500","414","412","400","500","504","506","508","510","512","500","514","516","518","520","522","500","524","526","528","530","532","500","534"]},{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 5","b":["500","100"]},"The method starts in step  and in step  the system components are powered up and initialized. The system components, after being initialized in step  transmit multicast join messages to make the component interconnect switch  aware of their presence in the system. The component interconnect switch , which may be implemented using a conventional switch which supports multicast messaging, generates and stores multicast group information and, in some cases, acknowledges the multicast join messages transmitted to the switch by the individual devices, e.g., gateways , , , , control device . message logging system , market data communications system , and matching engines , , , . Based on the received join messages, the switch creates a table of routing information so that the switch knows which ports on the interconnect switch  have which group members attached. Thus, when a message directed to a multicast address is received, the interconnect switch has the necessary information to determine which ports a received multicast message should be transmitted out on. For example, if a multicast transaction message is received by switch  addressed to a multicast address to which matching engines ,  belong in addition to the control device , message logging system  and market data system , the switch will replicate the received multicast message and output it on each of the switch ports to which one of the multicast group members , , , ,  is attached.","In step  the system components are operated to monitor, process and\/or respond to messages. As part of this process of ongoing operation, the component interconnect switch will receive and process multicast messages including new join messages transmitted by devices entering the system. For example, if a an additional or replacement matching engine corresponding to a multicast group is added it will send a multicast join message to the switch  so that the switch can update its routing table. The message logging system , which may include multiple message storage components corresponding to different multicast addresses, may, and in various embodiments will, respond to receiving a multicast message by updating a message log corresponding to the multicast source and\/or destination address to that the log includes the received multicast transaction message. The message logging system  will also respond to multicast message back fill requests by transmitting the messages requested to a multicast address, e.g., the multicast address from which the request was received. Devices in the system may then update their internal message logs based on the multicast backfill messages.","In addition to transmitting a multicast join message to the component interconnect switch a newly added monitoring device can, and in some embodiments does, transmit a multicast message back fill message requesting messages it needs to bring its internal message records up to date. The message logging system  will respond as noted above by multicasting the requested messages. Thus, a component added to the system , whether as part of a replacement operation or to add new monitoring functionality can be easily updated and provisioned as part of the normal process of devices requesting and receiving message backfill to complete their internal message logs and\/or system information.","Since devices can join and leave multicast groups without requiring changes in the multicast addresses through the use of simple multicast group management techniques, complicated address configuration changes when devices are added to or removed from the system  are avoided.","As part of operating components to monitor, process and\/or respond to messages performed in step , a client gateway device such as device , corresponding to a multicast gateway group , may receive and process transaction messages from a client, e.g., trader system, and respond to the messages as will be discussed further with reference to . While an exchange  may close for trading, a session with a trader may continue over many days and the system state, e.g., messages and message counters is maintained for the duration of the session.","Operation of the exchange system  continues until it is stopped, e.g., in step  by, e.g., shutting down the exchange.",{"@attributes":{"id":"p-0089","num":"0088"},"figref":["FIG. 6","FIGS. 6A and 6B"],"b":["600","138","122","600","138"]},"The method  normally starts in step  after the gateway has already joined the one or more multicast groups to which it belongs by sending join messages to the switch . Operation proceeds from start step  to step  in which the client gateway  monitors for and receives a message. The received message may be, e.g., a transaction message from a client system such as trader system , a multicast transaction response message from a matching engine such as ME  or some other type of message such as a control or configuration message, e.g., from control device . An exemplary transaction message may be, e.g., a unicast order message from trader system . The unicast order message may include, as a destination address, a unicast address of a gateway serving the first client , e.g., a unicast address corresponding to gateway . However, the transaction message need not be limited to a unicast destination address and may instead use a multicast address corresponding to a gateway group, e.g., gateway group , . The transaction message from a trader system  normally includes a broker and\/or client identifier and may also include a trader identifier where a client has multiple traders working for the client. The transaction message may also include other information, e.g., order information. The order information normally identifies a security to be traded, e.g., brought and\/or sold, and other information such as price per share and\/or the number of shares to be traded. The transaction message from the trader system may also include additional transaction information, e.g., a client order identifier used to identify the particular order and\/or information on the duration the order is to remain valid, e.g., maintained on an order book maintained by a matching engine  if the order can not be completed immediately because there is not a matching order, e.g., offer for sale, on the transaction book corresponding to the security identified in the transaction message.","The message received in step  may also be a response to a transaction message, e.g., a multicast transaction response message received from a multicast engine which is responsible for maintaining the order book for the security to be traded. An exemplary multicast transaction response message is shown in . A multicast transaction response message may include a multicast address corresponding to the multicast group  to which the matching engine which generated the multicast transaction response message corresponds. The multicast transaction message also normally includes as a destination address the multicast address used by the gateway which transmitted a multicast transaction message to which to which the response message corresponds. A multicast message identifier generated by the sending multicast engine is also normally included in the multicast transaction response message. Various fields and content included in the exemplary multicast transaction message  shown in  will be discussed below after a discussion of an exemplary multicast transaction message .","Operation proceeds from step  in response to a message being received by the gateway device  to step  in which a determination is made as to whether the received message is a transaction message, e.g., originating from a device such as a trader system that is located external to the exchange system. The transaction message maybe, e.g., a unicast transaction message from trader system such as trader system . An exemplary unicast transaction message which can be received from a trader system  is shown in .","As shown the unicast transaction message  may include various information such as a gateway identifier , e.g., a gateway unicast address which identifies the particular gateway, e.g., gateway , which is the intended destination of message . Unicast transaction message  also includes a trader system address  which is the source address of message , e.g., an address of trader system .","In addition to the source and destination information, the unicast transaction message  also includes a message identifier . The message identifier  can be used to identify the message and distinguish it from other unicast transaction messages in the system. In some but not necessarily all embodiments, the unicast message identifier  includes a stream identifier portion  and a message counter value . The message identifier  may also include, optionally, an offset value indicating the offset  added to the counter value of the last transaction message sent in the identified stream. The offset value allows incrementing of the counter value by more than one or some non-uniform amount while still allowing a receiving device to accurately generate an expected message counter value from the last message in the identified stream by adding the offset value to the counter value included in the last received transaction message obtained from the identified stream. This allows a receiving device to determine if it is missing any messages whether the message counter value is incremented by the same or different amounts from one message to the next.","In combination the elements of the message identifier field  can identify the unicast message to the trader system, gateway, as well as other devices in the system such as a message logging system . The stream identifier  may identify the stream within the system to which the message identifier corresponds. Streams corresponding to different source and destination devices may be treated as different streams. In some embodiments, streams are defined to the level of an individual stream with an individual stream being between a particular trader system and the particular ME to which an order may be forwarded. Thus, transaction messages from a trader corresponding to different stocks which are handled by different MEs may be treated as different streams. Transaction response message streams may also be defined to a similar level with response messages from different MEs to a trader being treated, at least in some embodiments, as different ME to trader streams. For each stream a different message counter may be maintained. During a session messages corresponding to a stream will normally have their message counter values updated with the sending of each new message. In some embodiments, the message counter value is initially provided by the exchange system, e.g., an ECN, and updated for subsequent messages. Thus, the message identifier  can be used to reliably identify a particular message in the exchange system. A device seeking a message gap fill may indicate the messages it wants provided by providing a range of message identifiers. In some embodiments, the gap fill request message includes a stream identifier and a range of corresponding message counter values which in combination identify a set of messages to be provided in response to the gap fill message.","Referring once again to message , the unicast transaction message  may also include a client-broker identifier  and\/or a trader identifier . The client-broker identifier  identifies the client and\/or broker to which the transaction message  corresponds. Separate values may be used as a client identifier and a broker identifier or a single value with a known mapping to a client and broker may be included in the client-broker identifier field. Message  may include various types of transaction information . The transaction information  may include, e.g., order type information  indicating the type of order the transaction message is communicating, a security identifier  identifying a security to which the order relates, a number  of shares to be traded, price information  indicating the price, e.g., on a per share basis, at which the order is to be implemented, un-interpreted field information , e.g., client information echo field information, and\/or additional transaction information  such as a client order identifier sometimes referred to as an order token which may be used to identify the order and may be included in response messages corresponding to the order.","If the received message is a transaction message from an external device, e.g., trader system , operation proceeds to step . In step  the gateway  generates a multicast transaction message from the received transaction message. Generating a multicast transaction message from a received transaction message includes one or more, and in some embodiments all, of steps , , , ,  , , and  as shown in .","An exemplary multicast transaction message  which may be generated from a received transaction message, e.g., a unicast transaction message from a trader system , is shown in . An exemplary multicast transaction message  which may be generated from a received transaction message, e.g., a unicast transaction message, e.g., message , from a trader system , is shown in . As shown the multicast transaction message  may include various information such as a multicast address  which is used as a message destination address. The multicast destination address corresponds to a group of matching engines where one of matching engines in the group is known to be responsible for handling the order book for a security, identified in the received transaction message. The multicast transaction message  also includes a matching engine identifier  identifying the specific matching engine responsible handling the transaction requested in the transaction message, e.g., a matching engine which handles the order book for the identified security to be traded. Thus, while a multicast address is used as the destination address of the message  the message includes information identifying a specific matching engine entity to which the message is intended to be delivered to. Based on the ME identifier , a receiving matching engine is able to determine whether or not it is to process and\/or respond to the message addressed to the matching engine group identified by the address in field .","The multicast transaction message  also includes a gateway multicast group identifier  corresponding to a multicast group to which the sending gateway belongs. The multicast group identifier  may be, e.g., a multicast group address corresponding to a gateway group. In addition to the gateway multicast group identifier , the message  includes a gateway identifier  identifying the particular gateway, e.g., gateway , sending the specific multicast transaction message. Thus, while the message  includes multicast group addresses corresponding to gateway and matching engine groups, it also includes information identifying the specific sending gateway entity and specific destination matching engine. Thus, while multicast addressing is used, the message includes sufficient information to identify a specific sending gateway, e.g., gateway  and a specific destination matching engine, e.g., ME . In addition to the source and destination information, the multicast transaction message  also includes a multicast message identifier . The multicast message identifier  can be used to identify the message and distinguish it from other multicast transaction messages in the system. In one but not necessarily all embodiments, the multicast message identifier  includes a stream identifier portion  and a message counter value . In combination these elements can identify the multicast message to the gateway, ME as well as other devices in the system such a message logging system . The message identifier  may also include, optionally, an offset value indicating the offset  indicating the offset added to the counter value of the last multicast transaction message sent in the identified stream. The offset value allows incrementing of the counter value by more than one or some non-uniform amount while still allowing a receiving device to accurately generate an expected message counter value from the last message in the identified stream by adding the offset value to the counter value included in the last received transaction message obtained from the identified stream. This allows a receiving device to determine if it is missing one or more previous messages corresponding to the identified stream whether the message counter value is incremented by the same or different amounts from one message to the next. The multicast message counter value  may be the same as the unicast message counter value of the message to which it corresponds. However, in cases where multicast messages are incremented differently from unicast messages they may be different. Also, in some embodiments, NULL multicast transaction messages may be transmitted e.g., by the gateway devices in the exchange on a periodic or other basis to facilitate the rapid detection of the failure of a device to receive a communicated multicast message. In the case of a NULL multicast transaction message generated by a exchange system component, e.g., in response to a recurring timer expiring, the message counter value  will not correspond to a unicast transaction message but will still be higher than the last generated unicast transaction message for the stream identified in the message .","Where unicast transaction messages are incremented by an amount greater than 1, e.g., 2, NULL multicast transaction messages may, and in some embodiments are, generated by incrementing the last received unicast transaction message value by a value less than that used to increment the unicast transaction messages. The NULL transaction messages which do not include any transaction information facilitate the detection, at a receiving device, of a failure to receive a previously transmitted message and are useful as a fault detection mechanism in the exchange system. NULL transaction messages, and corresponding NULL response messages, are not transmitted outside the exchange system, e.g., to a trader system in various embodiments in which they are used.","The stream identifier  may identify the stream within the system to which the multicast message identifier corresponds. Streams corresponding to different source and destination devices may be treated as different streams. In some embodiments, streams are defined to the level of an individual stream with an individual stream being between a particular trader system and the particular ME to which an order may be forwarded. Thus, transaction messages form a trader corresponding to different stocks which are handled by different MEs may be treated as different streams. Transaction response message streams may also be defined to a similar level with response messages from different MEs to a trader being treated, at least in some embodiments, as different ME to trader streams. For each stream a different message counter may be maintained. During a session, messages corresponding to a stream will normally have their message counter values updated with the sending of each new message. Thus, the multicast message identifier  can be used to reliably identify a particular message in the exchange system. A device seeking a message gap fill may indicate the messages it wants providing a range of multicast message identifiers. In some embodiments, the gap fill request message includes a stream identifier and a range of corresponding message counter values which in combination identify a set of messages to be provided in response to the gap fill message.","Referring once again to message , the multicast transaction message  may also include a client-broker identifier  and\/or a trader identifier . The client-broker identifier  identifies the client and\/or broker to which the transaction message  corresponds. This information may be obtained from a received unicast transaction message, e.g., message , from which the multicast transaction message  is generated. Similarly the message  may include various types of transaction information . The transaction information  may include, e.g., order type information  indicating the type of order the transaction message is communicating, a security identifier  identifying a security to which the order relates, a number  of shares to be traded, price information  indicating the price, e.g., on a per share basis, at which the order is to be implemented, un-interpreted field information , e.g., client information echo field information , and\/or additional transaction information  such as a client order identifier sometimes referred to as an order token which may be used to identify the order and may be included in response messages corresponding to the order.","It should be appreciated that while the message  includes multicast group addresses corresponding to gateway and matching engine groups, it also includes information identifying the specific sending gateway entity and specific destination matching engine. Thus, while multicast addressing is used, the message includes sufficient information to identify a specific sending gateway, e.g., gateway  and a specific destination matching engine, e.g., ME .","In addition to the source and destination information, the multicast transaction message  also includes a multicast message identifier. The multicast message identifier can be used to identify the message and distinguish it from other multicast transaction messages in the system.","Referring once again to , as shown in step  of generating a multicast transaction message of the type shown in  may include the step  of identifying a machine engine corresponding to the security identifier included in the received transaction message and including the matching engine identifier in the multicast transaction message being generated. Step  also includes the step  of selecting a multicast address to be used as a destination address from a plurality of multicast destination addressed based on the securities identifier included in the received transaction message. Security to multicast address mapping information  may be used to support this operation with the multicast address, e.g., address , corresponding to the identified security, e.g., a security  starting with the letter A, being selected. Step  involves including the multicast address selected based on the identified security as a destination address of the multicast transaction message, e.g., by placing the selected multicast address in a destination address field  of the multicast transaction message being generated.","In addition to include the selected multicast address corresponding to an ME group in the multicast message being generated, in step  a multicast group identifier corresponding to the multicast group of gateway devices to which the gateway generating the message belongs is included in the multicast transaction message along with a specific sending gateway identifier included in the message in step . Thus, the generated multicast message includes information allowing the receiving multicast engine to identify the specific gateway from which the multicast transaction message was sent.","As part of generating the multicast transaction message a multicast message identifier is incremented in step . This may involve, e.g., incrementing, a multicast message counter value portion of a multicast message identifier so that messages corresponding to a particular stream can be distinguished from one another. While the updating involves a change to a multicast message identifier value it need not be an increment by 1 operation and may involve an increment by more than one or some other modification of the message identifier value so that it differs from previously used message identifier values for a particular message stream. The updated multicast message identifier is included in step  in the multicast transaction message which is generated.","In step  transaction information is included in the generated multicast message. This includes, for example, including order information obtained from the received transaction message and other information such as that already discussed with regard to exemplary transaction information . The transaction information may, but need not include, some information generated by the gateway generating the multicast transaction message.","Having generated the multicast transaction message from a received transaction, e.g., order, message operation proceeds from step  to step  in which the generated multicast transaction message is transmitted, e.g., sent to the to the component interconnect switch  for delivery to the devices, e.g., multicast engines , , ,  and message logging system , which subscribe to the multicast address included in the generated transaction message as a destination address.","With the generation of at least one multicast transaction message operation proceeds to step  via connecting node A  which is followed by step . Steps  and  or performed on a periodic basis, e.g., at regular repeating time intervals and serve as a way of facilitating the detection by a receiving device that it did not receive one or more multicast messages from the gateway. In step  the gateway  generates a null multicast transaction message including an updated multicast message identifier for each stream being handled by the gateway implementing the method, e.g., gateway . Thus in at least some embodiments, a null transaction message is generated on a regular basis for each trader to matching engine stream being handled by the gateway. The null transaction message does not include any meaningful order information and is not generated from a transaction message received from a trader. In step  the generated null transaction messages are transmitted before operation returns to step  at the specified or predetermined interval.","Devices receiving the null message and the updated transaction message identifier included therein are able to compare the received updated transaction message identifier and determine if they received the previously transmitted multicast transaction messages corresponding to the same stream as the received null transaction message. Devices which determine that they did not receive multicast transaction messages based on the message identifier value included in a received multicast transaction message request, as will be discussed further below, the missing messages through the use of a multicast message gap fill request message. Responses to a gap fill request message are, in some embodiments, unicast messages with the unicast gap fill response messages supplying one or more of the requested missing messages.","Referring once again to , if in step , it is determined that the message received by the gateway was not a transaction message, operation proceeds to step  in which the received message is checked to determine if it is multicast transaction response message. While a message type identifier may be included in a received message and used to facilitate identification of the message type, the message type can be determined from the format and\/or fields included in the message in embodiments where a type identifier is not explicitly included in the received messages and is thus not available for use in making the message type determination. Before proceeding further with the description of , an exemplary multicast transaction response message will be explained with reference to .",{"@attributes":{"id":"p-0113","num":"0112"},"figref":"FIG. 10","b":["1000","1000","900","1000","900","1000","900"]},"The multicast transaction response message  includes a multicast address  as a message destination address. The multicast destination address  will normally be the multicast address of the gateway group to which the gateway, that sent the transaction message being responded to corresponds. The message also includes gateway identifier  which identifies the specific gateway which sent the transaction message to which response message  corresponds. The information in fields  and  can, and in some embodiments are, obtained by the matching engine that generates message  from multicast transaction message fields , .","Message  also includes ME multicast group identifier  which identifies a multicast group to which the sending matching engine is a member. The sending matching engine is specifically identified by matching engine identifier  that is also included in message . The message  also includes a multicast message identifier  which is generated by the matching engine sending the message. In some embodiments the multicast message identifier  includes a stream identifier  and a message counter value . The multicast message identifier may also include an offset value indicating the increment added to the message counter value of the last multicast message corresponding to the identified stream to generate the current message counter value  included in the message. Thus, the ME can increment the multicast messages corresponding to a stream by increments which may vary and\/or be greater than a fixed number such as one. The inclusion of the offset value is optional and not used in all embodiments.","The stream identifier  identifies a specific stream, e.g., a matching engine to trader stream. The message counter value  is normally updated, e.g., changed, each time a message corresponding to the identified stream is sent by the matching engine.","In some embodiments the matching engine generates and sends null transaction response messages corresponding to streams that it is using to send messages on a periodic basis to facilitate detection of the failure to receive a multicast message at a gateway. The null transaction message will normally include a multicast message identifier which was updated relative to the last transaction response message of a stream to which the message corresponds allowing a receiving device to easily determine if any message were not received.","In addition to the multicast message identifier , the multicast transaction response message  includes a client-broker identifier , trader identifier  and\/or transaction information . Transaction information , includes in some embodiments, order status and\/or completion information , a security identifier , e.g., stock identifier, information on the number of shares traded , information  on the price at which the trades were completed, un-interpreted field information, e.g., client information echo field information , and\/or additional transaction information  such as a client order ID which may be the same as the client order ID of the original trader transaction message  and multicast transaction message  generated by the gateway there from, to which the multicast transaction reply message  corresponds.","Referring once again to , if in step  it is determined that the message received by the gateway is not a multicast transaction response message, operation proceeds, via connecting node B , to step  shown in . In step , the received message is checked to determine if it is a control message, e.g., a message sent by control node  to provide the gateway with configuration information, parameters and\/or other information or commands. If the received message is a control message operation proceeds to step  in which an action is implemented based on the commands and\/or information communicated by the control message. For example, in step  the gateway may make a configuration change based on control information received in the control message and\/or join a multicast group specified in the control message. A control message may instruct a gateway in a multicast group to take over responsibility for messages, streams, clients and\/or traders previously being handled by another gateway in the same multicast group as the gateway receiving the command. In such a case, the gateway receiving the command will begin handling multicast messages including the gateway identifier corresponding to the specific gateway for which the gateway receiving the message is to take over. Thus, gateways in a multicast group that can be specifically identified in a multicast message can be treated as logical entities with the physical gateway hardware corresponding to a gateway identifier being changed without the need to alter the address to which multicast messages are sent or even the gateway identifier being used by a matching engine at a particular point in time for a transaction message stream or transaction response message stream.","If the message is a message other than a control message, operation proceeds from step  to step  in which the gateway processed the received message in accordance with the type of message that was received and\/or which device was the source of the message. For example, some messages may be ignored if they are from a source which the gateway does not trust.","With the received message being handled in one of steps  or  operation proceeds from these steps to step . While the processing of an individual message may stop in step , the receipt and processing of other messages at the gateway may continue as long as the gateway is powered on and remains operational.","Referring once again to , if in step  it is determined that the received message is a multicast transaction response message, operation proceeds to step  wherein processing of the received multicast transaction response message is passed to a processing subroutine  such as the one shown in  for further handling.","The exemplary multicast transaction response message processing routine  will be discussed in detail.","From start step  operation proceeds to receive step  in which a multicast transaction response message received the gateway is received from the main gateway message handling routine  for processing. In step , a multicast message identifier included in the received multicast transaction response message is checked to see if it matches an expected multicast message identifier. Expected multicast message identifiers may be stored and\/or generated by a gateway on a per message stream basis. Generation of an expected multicast message identifier by the gateway can be based on information included in one or more received messages and information about how the message identifier is to be updated from one message to the next. For example, the gateway can generate an expected message identifier from the message identifier included in the last message corresponding to the same message stream as the received transaction response message being processed.","If the received multicast message identifier does not match the expected message identifier a multicast message backfill request is transmitted in step . The multicast message backfill request may specify a range of multicast message identifiers which are used to identify messages which the gateway believes may not have been received based on the received message identifier differing than the expected message identifier, e.g., the received message identifier including a message counter value higher than an expected message counter value of the expected message identifier. In response to step  the gateway normally receives the requested missing multicast messages from one or more message logging devices which communicate some or all of the requested messages to the gateway. Operation proceeds from step  to step .","Operation proceeds directly from step  to step  if in step  it is determined that the multicast message identifier included in the received multicast message matches the expected multicast message identifier.","In step  a transaction response message to be sent by the gateway to a trader system which sent the transaction message to which the received multicast transaction response message is generated. The transaction response message generated by the gateway to be sent to a trader system is normally a unicast transaction response message. Thus, in many embodiments, step  involves generating a unicast transaction response message from the received multicast response message.",{"@attributes":{"id":"p-0128","num":"0127"},"figref":"FIG. 11","b":["1100","1100","800","1100","1000"]},"The unicast transaction response message  includes a trader system, address  as a message destination address. The destination address  will normally be the address of the trader system, e.g., trader system , to which the transaction message, e.g., unicast transaction message , being responded to corresponds. The message  also includes gateway identifier , e.g., a unicast address of the specific gateway, e.g., gateway , sending the transaction response message .","The message  also includes a message identifier . In some embodiments the message identifier  includes a stream identifier  and a message counter value . The message identifier  may, and in some embodiments does, also include an offset value  indicating the increment added to the message counter value of the last response message corresponding to the identified stream to generate the current message counter value  included in the message . The message counter value  will normally be the same as the message counter value  of the multicast transaction response message from which the unicast transaction response message is generated.","The stream identifier  identifies a specific stream, e.g., a matching engine to trader stream. The message counter value , e.g., obtained from the multicast transaction response message, is normally updated, e.g., changed, each time a message corresponding to the identified stream is sent by the matching engine.","In addition to the message identifier , the unicast transaction response message  includes a client-broker identifier , trader identifier  and\/or transaction information . Transaction information , includes in some embodiments, order status and\/or completion information , a security identifier , e.g., stock identifier, information on the number of shares traded , information  on the price at which the trades were completed, un-interpreted field information , e.g., client information echo field information, and\/or additional transaction information  such as a client order ID which may be the same as the client order ID of the original trader transaction message  to which the unicast transaction reply message  corresponds.","In various embodiments the information supplied by the client device, e.g., trader system , in uninterpreted field  of unicast transaction message  is returned, e.g., echoed back without alteration, in a unicast transaction response message , which is in response to unicast transaction message . In some such embodiments, the information in uninterpreted fields (, , , ) of messages (, , , ) is identical corresponding to the same transaction.","Step  may, and in some embodiments does include steps  and\/or step . Step  includes including in said uncast response message an updated exchange to trader message identifier, e.g., counter value, which is different from the message identifier value sent to the particular trader device in the last exchange to trader message which was sent to the trader to whom the generated transaction response message is being sent. The counter value included as all or a portion of the generated unicast transaction message may be the same or different from the message identifier included in the multicast transaction response message from which the unicast transaction message is generated.","In step , information received from the matching engine regarding the transaction to which the reply message corresponds is included in the generated unicast transaction response message. Such information may include the transaction information  as well as the identifiers ,  and or . The client order ID to which the unicast transaction message corresponds may be included in the generated unicast transaction response message to allow the trader system to which the message is communicated to match it to an order which was sent to the exchange in a transaction message.","In step , the generated unicast transaction response message which was produced by the gateway in step  is transmitted to the client or broker system, e.g., trader system, from which the transaction message to which the transaction response message corresponds, was received. The transmission of the generated unicast transaction response message may be via security switch  which is responsible for sending the message to the trader via the correct communications link to the trader system to which the generated transaction reply message is directed.","Various features relating to the message logging system  and the generation and processing of message gap fill request messages will now be discussed with reference to .",{"@attributes":{"id":"p-0138","num":"0137"},"figref":["FIG. 12","FIG. 1"],"b":["134","100","1","1202","1204","1206","1210","1202","1204","1206","1210","1202","1202","3","1206","1202","2","3","1202","1204","1206","1202","1204","1206","1202","1204","1206","1202","1204","1206"]},"Message logging devices , ,  store information indicating the messages, e.g., number ranges, of messages for the streams they store, capability information with regard to how quickly they can respond to a message request and the same or similar information for the other message logging devices in the system . Device response rate capability information may be, and in some embodiments is, expressed and stored in a simple numerical form, e.g., with high speed cache devices being assigned a 1 for speed, short term memory based storage devices such as message logging device 2 being assigned a 2 for speed and message logging device 3 with relatively slow hard discs being assigned a 3 for speed. Message logging devices , ,  and , can and in some embodiments do, also store information on the status of the other devices in the system. For example, message logging device   may store information about when message logging devices 2 and 3 are available and functioning and\/or information about when they are off-line due to a system fault or some other condition. Message logging device status information may be supplied by control device  or inferred by a failure of a message logging device to respond in a timely manner to a message which it should have received.",{"@attributes":{"id":"p-0140","num":"0139"},"figref":["FIG. 13","FIG. 12"],"b":["1300","134","1300","1302","1304","1310","1306","1300","1300"]},"The processor  under control of one or more routines stored in the memory  controls the message logging device  to operate in accordance with the methods of the present invention, e.g., in accordance with the method shown in .","The I\/O interface  couples the message logging device  and the components included therein to the component interconnect switch  thereby allowing the message logging device  to receive and send, e.g., exchange, a variety of messages and other signals with other components of the system . Memory  includes one or more control routines  which when executed by the processor  cause the message logging device to receive, store, process and respond to messages in accordance with the present invention. For example, the control routine  may cause the message logging device to store unicast and multicast transaction messages corresponding to streams to which the message logging device receives and logs. While the message loggin device may receive multicast messages as part of being a member of a multicast group, it can receive unicast messages by having them forwarded by a device, e.g., a gateway device, sending or receiving a unicast message. Thus, a gateway device may, and in some embodiments does, send copies of multicast messages to one or more message logging devices for logging. In some embodiments, messages are logged on a per stream basis. Multicast messages used within the exchange system  and\/or unicast messages received by or transmitted by the exchange system  may also be logged, e.g., stored in association with a corresponding stream identifier.","Message logs corresponding to different message streams, e.g., message log  corresponding to stream \u2032 and message log  corresponding to stream N are stored in memory . Also stored in memory  is message logging device capability information  which includes device capability information such as that described above for the message logging device  and for one or more message logging device in the system . The device capability information may be expressed in terms of a code or number associated with an identifier corresponding to the device to which the particular stored capability information corresponds. The capability information may indicate the speed of the device and\/or the range of messages it can and\/or does store. The memory  also includes message logging device status information  which indicates, on an individual message logging device basis, whether the message logging device is functional or not. It may also indicate ranges of message which were not stored in a message logging device, e.g., due to a system failure or the particular message logging device being off line, e.g., in the recent past when one or more messages were originally sent.","The message logging device status information  also includes information indicating the status of the other message logging devices in the system. For example, information  may indicate that message logging devices , ,  are operational and that message logging device  is non-operational, e.g., off-line. The status of the message logging devices which is stored in the information  is obtained passively in some embodiments by monitoring messages sent by the devices and\/or a control device in the system. However, in other embodiments the message logging device  periodically polls the other message logging devices to check their status. In some embodiments a combination of monitoring and polling to determine device status is used. The device status information  may include information indicating the period of time one or more of the logging devices for which information is stored is or has been off-line and information on the messages, e.g., the number range of messages corresponding to one or more streams, stored in particular message logging devices.","Message logging devices  can be added to or removed from the system as part of general maintenance, system upgrades or due to faults. A message logging device can update its internal log of messages by sending a message gap fill request to a multicast address and by then having one or more other devices supply the requested messages, e.g., by using unicast messages, just as they would respond to another device in the system requesting a message gap fill. Thus, message logging devices can be added to the system and automatically provisioned through the use of simple gap fill request messages so they can have a proper log of the messages they are assigned to maintain a log for.","As will be discussed below, devices in the system  may discover new message logging devices via the message logging device responding to a multicast gap fill request message which they hear as a result of being a member of one or more multicast groups. Devices can use the responses to gap fill request messages to identify one or more message providers and to update the preferred message provider information as faster devices or newly added devices respond to gap fill request messages.","A message handling process shown in , which comprises the combination of , will now be described. The method shown in  may be implemented by any one of a plurality of devices within the exchange system  included, e.g., the monitoring system , gateways , , , , message logging devices of the message logging system , market communications system  and\/or any one of the matching engines , , , .","The message processing method  may result in the detection that a previously transmitted message was not received, generation and transmission of a message gap fill request message seeking one or more missing message to be supplied, and the processing of one or more received messages including messages supplied in response to a gap fill request message. While the device implementing the method  may not initially have a preferred message logging device set as its preferred source for missing messages, based on one or more responses to gap fill request messages, the device may set and update a message logging device as a preferred source for missing messages. The preference may be based on the responsiveness, e.g., how quickly a particular message logging device responds to a gap fill request message by supplying one or more requested messages. The method  allows for the discovery and selection of new logging devices as preferred message providers in an efficient manner which requires little or no control messaging overhead, e.g., the device implementing the method need not be provided with a separate message indicating the addition of a message logging device to the system to be able to detect and take advantage of the new message logging device's capabilities. This is achieved, in part, by message logging devices belonging to multicast groups to which gap fill request messages are sent and by having message logging devices respond to gap fill request messages as will be explained further with reference to .","The method  starts in step  with the device implementing the method being activated. With the device being active, it monitors for messages. In step  a message is received, e.g., from another device in the system . For example, if the device implementing the method is a matching engine , the received message may be from a gateway .","Operation proceeds from step  to step . In step  a determination is made as to whether the received message is a message received in response to a gap fill request message. If the received message is a response to a gap fill request message operation proceeds to step  via connecting node C .","If in step  it is determined that the received message is not in response to a gap fill request, i.e., that it is a new message, operation proceeds to step . In step  a message count included in the received message is compared to an expected message count. The expected message count may be based on message offset information included in the received message and the message count value of the last message corresponding to the same message stream as the received message. For example, when a message such as the message  is being processed, the stream identifier  is used to identify the stream to which the message corresponds. The message counter value of the last message corresponding to the identified stream is then retrieved from memory and incremented. To generate the expected message counter value, the last message counter value is incremented by a predetermined number, e.g., 1, if an offset value, e.g., offset value , is not included in the received message or by the offset value if such a value is included in the received message.","If the message counter value included in the received message matches the expected message counter value, it indicates that there are no missing messages and that the device received the last message in the stream to which the received message corresponds. However, if the message counter value in the received message does not match the expected message counter value, the difference indicates that one or more messages corresponding to the stream to which the received message corresponds were not received.","If the message counter value in the received message matches the expected message counter value operation proceeds to step  wherein the message is further processed. The processing implemented in step  will depend on the device implementing the method and the type of message being received. Normally however, the processing will include updating the last message counter value stored in the device for the stream identified in the message to match the counter value of the received message. Thus, the last message counter value stored in the device will be current and reflect the value of the most recently received message. For example, if the message is an order message received by a matching engine, the matching engine will normally try to implement the requested order by, e.g., performing a matching operation if it is handling the order book for the security identified in the order message. If the device implementing the method is a gateway device it may generate and forward a message to another device in response to the received message. Other actions are possible depending on the particular device performing the method as well.","If in step  it is determined that the message count value included in the received message does not match the expected message count value, operation proceeds to step . In step  a determination is made as to what messages are to be requested. Normally, this will involve using the counter value of the last received message and the counter value of the most recently received message with the difference between the two counter values indicating the range of missing messages to be requested. The range may be specified in a gap fill request, e.g., by providing the counter value of the last received message corresponding to the stream identified in the received message and a number indicating the difference between the last received message counter value and the most recently received counter value. Alternatively, the last received message counter value and the message counter value included in the received message can, and in some embodiments are, used to indicate the set of message to be requested, i.e., a logging device receiving the lower and higher message counter values corresponding to a stream in a gap fill request message knows that the messages corresponding to the identified stream with message counter values between the lower and higher values are to be supplied to the requesting device.","With the range of messages to be requested having been determined in step , operation proceeds to step . In step  a check is made to determine if the device implementing the method  has stored information  identifying a preferred logging device to supply missing messages, e.g., in response to a gap fill request. In some embodiments different preferred logging devices are set for different streams in which case the check in step  is with regard to the preferred message logging device corresponding to the stream for which the missing message are being sought.","If a preferred source for the missing message is not set, operation proceeds to step  in which a gap fill request message is generated without the inclusion of information identifying a preferred source of the messages.","The gap fill request message generated in step  may be of the type shown in . The gap fill request message  shown in , may, and in various embodiments is, used to request messages from the message logging system. The message  includes a multicast address  indicating the destination of the message and an optional gap fill request message identifier, e.g., a message number, which can be returned in a response message to facilitate matching of a response to the request message to which it corresponds. The multicast address  is, for example, an address of a message storage device group, e.g., a group of message logging devices, which stores the message or messages being requested. In some but not all embodiments, the message  also includes an indicator  used to indicate whether or not the message  includes information identifying a preferred message logging device. In some embodiments the indicator is implemented as a one bit field which is set to one to indicate the presence in the message of a preferred logging device identifier  and is set to zero when a preferred logging device identifier is not included in the message . The flag  can facilitate processing of the message by a device receiving the message since, rather than having to parse the message for a preferred logging device identifier its presence or absence can readily be determined by the value communicated by the flag . The preferred logging device identifier  identifies a preferred message logging device for supplying the requested message(s). This field is omitted from the message or left empty when no preferred logging device is specified. The preferred logging device identifier maybe, and in some embodiments is, a unicast address corresponding to the preferred device. Included as part of the preferred logging device identifier  or in addition to the identifier  may, and in some embodiments is, information indicating what type of logging device, e.g., hard disc, memory device, etc., the indicated preferred message logging device is. The device type may be indicated as a numerical value with the relative speed, e.g., how quickly the logging device can respond, being known from the device time information.","In addition to the preferred logging device identifier field  the message  includes a requesting device identifier  which identifies the device requesting, e.g., sending, the gap fill request message. The requesting device identifier  may be a unicast address corresponding to the requesting device which can be used as the destination address of one or more messages used to communicate the requested messages to the requesting device in response to the message . In addition to the other fields, message  includes information  identifying the messages being requested. The identification information includes, in some embodiments, a stream identifier , a lower message counter value  and a higher message counter value . The counter values ,  are used to indicate a range of messages being sought corresponding to the stream identifier , e.g., it may be interpreted as a request for all messages corresponding to the identified stream having message counter values falling between the lower and higher message counter values. Given that the message counter values may be incremented in some embodiments by non-regular amounts, the precise number of messages being requested or which were not received may not be known to the device generating and sending message .","Referring once again to step , it should be appreciated that generation of the gap fill request message may involve including information corresponding to each of the fields shown in the message  with the exception of the preferred logging device identifier field given that there is no preferred logging device being indicated in the message generated in step . With the generation of the gap fill request message having been completed in step , operation proceeds to step .","If in step  it was determined that the device generating the gap fill request message had stored preference information indicating a preferred source of messages, operation would proceed from step  to step  via step  instead of step . In step  a gap fill request message, e.g., a multicast gap fill request message  is generated with information indicating a preferred message source, e.g., logging device, included in field  and if present, the preferred logging device identifier presence indicator field  would be set to indicate the presence of the preferred logging device indicator.","Once the gap fill request message is generated in step  operation proceeds to step . In step  the generated gap fill request message is transmitted, e.g., to the multicast group address corresponding to the group of message logging devices which store messages corresponding to the stream identified in the transmitted message.","Operation is seen proceeding from step  to step  via connecting node B to represent that the device sending a gap fill request message will monitor for a response message from a message logging device communicating one or more of the messages requested in the transmitted gap fill request message. Such a response message may be received in step .","If a message received in step  is a response to a gap fill request message, message processing proceeds from step  via step  and connecting node  to step . In step  a check is made to determine if one or more requested messages in the received response message were already received in a message received from another message logging device, e.g., a faster more responsive message logging device than the one which sent the received gap fill response message being processed. If it is determined that none of the requested messages included in the received gap fill response message have already been received from another message logging device, operation proceeds to step  wherein the device performing the processing updates its preferred message logging device information to indicate that the responding device is the new preferred message logging device which should be indicated as the preferred message logging device in future gap fill request messages.","Thus, a device requesting a gap fill request will update its preferred logging device information based on which logging device is the quickest to respond to a gap fill request message. If a faster logging device is added and is a member of the multicast group to which a gap fill request is directed, the requesting device will learn of the new message logging device via its response and will update its stored preferred message logging device information accordingly based on the which device provides the fastest response at a particular point in time. Since the preferred message logging device information is updated based on responsiveness of the message logging devices, as a particular message logging device becomes heavily loaded and\/or new devices are added to the system, the requesting device will update its preferred device information over time based on the response messages it receives. Operation proceeds from step  to step .","In step  if it was determined that one or more messages were already received from another message logging device, operation would proceed to step  without passing through step  since there is no need to update the preferred message logging device information.","In step  the requested messages included in the response to the gap fill request messages which have not already been stored and processed are stored and optionally processed. For example, a matching engine may temporally store a received message process the order communicated by the requested message if the order has not already been processed and responded to. On the other hand, if the device which requested the gap fill was a message logging device, the device may store the message in the message log corresponding to the stream to which the message corresponds, thereby filling any gaps that may exist in its copy of the message log it is maintaining.","Operation is seen proceeding from step  to step  via connecting node B to illustrate that message receipt and processing operations are performed on an ongoing basis and that message receipt and processing does not end with the completion of step .",{"@attributes":{"id":"p-0168","num":"0167"},"figref":["FIG. 15","FIG. 16"],"b":["1500","1300","1500"]},"In at least some embodiments when the multicast gap fill request message does not indicate a preferred message logging device identifying a preferred responder, all the message logging devices which hear the message and are capable of responding will do so. However, in some embodiments if a slower message logging device determines that a faster message logging device has already responded, e.g., by being copied on a response message through the use of multicast signaling, the slower message logging device may stop its process of responding without sending a response message which the slower message logging device would send absent knowledge that the faster device has already responded.","The method  begins in start step . In step  a gap fill request message is received by the message logging device implementing the method . The message may be, e.g., a multicast gap fill request message of the type shown in  which is addressed to a multicast group to which the logging device implementing the method belongs. Operation proceeds from step  to a set of steps , , , ,  which in combination operate as a determination module  used to determine if response criteria are satisfied. The individual steps may be implemented as individual modules. Depending on the embodiment, one or any combination of steps , , , ,  may be used to determine if response criteria are satisfied and a unicast reply message should be generated and transmitted, e.g., in step .","In step  a check is made to determine if the gap fill request message indicates one or more preferred storage devices, e.g., the devices the sender prefers for responding to the message. Step  may be implemented by checking the value of the preferred logging device identifier presence indicator field  when such a field is present in the message or by parsing the message to determine if an identifier of preferred logging device is included in the received message.","If in step , it is determined that the received gap fill request message does not indicate one or more preferred message storage devices, operation proceeds to step , otherwise operation proceeds to step . In step  a further check is made on the received gap fill request message to determine if the message logging device implementing the method  which received the gap fill request message, e.g., because it is part of the multicast group to which the received message was addressed, is indicated in the message to be a preferred message storage device, e.g., the requesting device has indicated that the message logging device is the preferred device for responding. If the message logging device processing the received message is indicated to be the preferred device operation proceeds to step  otherwise operation proceeds to step .","In step  a check is made to determine whether the preferred message logging device indicated in the received gap fill request message is unavailable or missing one or more of the requested messages. This may be done by checking device status information and\/or information indicating the range of messages stored by various message logging devices in the system. Such information may be supplied by a control device and\/or determined by monitoring various signals and\/or messages in the exchange system. Operation proceeds from step  to step , if in step  it is determined that the preferred device message logging device indicated in the received message is unavailable or missing one or more requested messages otherwise operation proceeds to step .","In step , a check is made to determine if the message storage device which received the gap fill request message and is implementing the method  is faster than the message logging device indicated in the received gap fill request message to be the preferred message logging device. This determination may be made by checking stored information indicating the type and\/or speed of the preferred message logging device and\/or checking speed or type information included in the preferred message logging device identifier and comparing it to known information about the speed of the message logging device implementing the method. For example, if the preferred message logging device has a speed rating of 3 and the receiving message logging device processing the gap fill request message has a speed rating of 1, with a higher rating number indicating a slower device, step  would determine that the message logging device implementing method  is faster than the preferred message logging device indicated in the gap fill message being processed. If in step  it is determined that the message logging device processing the gap fill request message is faster than the preferred message logging device, operation proceeds from step  to step  otherwise operation proceeds to stop step  without transmission by the logging device processing the gap fill request message of a response to the received gap fill request message.","In step , the logging device determines if it includes any of the requested messages. If the answer is yes, the message logging device responds in step , e.g., with a unicast gap fill message request response message. Step  may include two separate steps, a unicast message generation step and a transmission step. In the unicast message generation step a unicast response message directed to the requester which sent the gap fill request message is generated. In the transmission step the unicast message is transmitted, e.g., to the requester. The message may be of the type illustrated in  and will normally be addressed to the unicast address of the device which sent the gap fill request message requesting one or more messages.","If, however, in step  it is determined that the message logging device processing the received message does not have any of the requested message, operation proceeds to stop step  without a response to the received gap fill request message being sent from the particular message logging device implementing method .","It should be appreciated that the method  when implemented by a particular individual message logging device may result in the message logging device stopping processing of the received gap fill request message without transmitting a response, the system includes multiple message logging devices and another message logging device in the same multicast group and performing the same method  is likely to respond to the message, e.g., because it is indicated to be the preferred message logging device.","As described with regard to , some embodiments are directed to methods and apparatus for responding to gap fill request message, e.g., a multicast gap fill request message, by responding to the sender of the multicast gap fill request message with a unicast message communicating at least one of the requested messages. At least one such embodiment is directed to a method of operating a message logging device, the method comprising: receiving a multicast gap fill request message sent by a requesting device requesting one or more messages; determining if response criteria are satisfied; and if it is determined that response criteria are satisfied, generating a unicast response message communicating at least one requested message; and transmitting the unicast response message to the requesting device. In the particular exemplary embodiment, determining if response criteria are satisfied sometimes includes determining if the multicast gap fill request message indicates a preferred message storage device for supplying the requested one or more messages; and wherein said response criteria are satisfied if is determined that said gap fill request message does not indicate a preferred message storage device and said message logging device includes a requested message.","In some embodiments said response criteria are satisfied if is determined that said gap fill request message indicates a preferred message storage device and said message logging device is the indicated preferred message storage device. Determining if response criteria are satisfied also includes, in some embodiments, checking to determine if said message logging device is faster than a preferred message storage device, and wherein said response criteria are satisfied if is determined that said message logging device is faster than a preferred message storage device. Determining if response criteria are satisfied also includes, in some embodiments, checking to determine if a preferred message storage device is unavailable, with the response criteria being satisfied if is determined that said preferred message storage device is unavailable. A message logging device may, and in some embodiments does, include a module for performing each of the above discussed steps, e.g., checking, determining, message generation, message transmission, etc. The module may be implemented in hardware, software or a combination. In some embodiments the modules are implemented as circuits. In such embodiments the modules may not involve the use of software.","An exemplary gap fill request response message  which may be sent in step  is shown in . The gap fill response message  includes, e.g., as a destination address, a requesting device identifier  such as a unicast address corresponding to the device which sent a gap fill request message to which the response message  corresponds. In some embodiments, the unicast address  is obtained from field  of a gap fill request message which communicates an identifier, e.g., unicast address, of the requesting device. The message  also includes a responding message logging device identifier  which identifies the particular message logging device which generated message . The information in field  is used by the device receiving the response message  to update its preferred message logging device information, e.g., when the message  if the first message providing one or more messages which were requested in a multicast gap fill request message. A gap fill request message identifier  is also included in the response message . The content of this message field may be obtained from the gap fill request message identifier field  which communicates a number identifying the message to which the response corresponds. The content of the gap fill request message identifier field  allows a device receiving the response  to match the response message to the gap fill request message that it transmitted.","The response message  also includes, in some embodiments, an optional multicast address. The optional multicast address, in some embodiments, corresponds to the multicast address of the message storage device group which stores messages to which the response message relates. The multicast address in field  may include the multicast address obtained from gap fill request message field  or be a separate multicast address used to keep message logging devices informed of response which have been sent but to which the message logging devices do not respond. When message logging devices are copied on response messages via the sending of a copy to a multicast address of a group to which the message logging devices belong, the message logging device can be made aware of the responses which have already been transmitted and, in some embodiments, will not respond to a gap fill request message being processed after becoming aware that another message logging device has already responded with the requested message(s).","The gap fill response message  also includes information  identifying messages being provided and, as payload , one or more requested messages. The information  identifying the messages being provided may include, e.g., a stream identifier , identifying the stream to which the messages being supplied correspond and one or more message counter values ,  indicating the range of messages being supplied. In some embodiments the counter values corresponding to one or more of the messages being supplied are indicated in one or more counter value fields of message . For example, lower message counter value may indicate the lowest message counter value number of a message being supplied while the higher message counter value number  may indicate the highest counter value number of the message being supplied. Thus, in combination the stream identifier and one or more values ,  indicate the messages being supplied as the payload of the response message .","Numerous additional variations on the format of the message  are possible.",{"@attributes":{"id":"p-0184","num":"0183"},"figref":"FIG. 18","b":["110","131","138","140","142","144","134","136","146","148","150","152","1800","200","1400"]},"The modules in the assembly  can be implemented in hardware within a processor, e.g., as individual circuits. Alternatively, the modules may be implemented in software and included in the control routines, e.g., of the gateway device .","When implemented in software the modules include code, which when executed by the processor, configure the processor , e.g., a computer, to implement the function corresponding to the module. In some embodiments, processor  is configured to implement each of the modules of the assembly of modules . In embodiments where the assembly of modules  is stored in the memory , the memory  is a computer program product comprising a computer readable medium comprising code, e.g., individual code for each module, for causing at least one computer, e.g., processor , to implement the functions to which the modules correspond.","Completely hardware based or completely software based modules may be used. However, it should be appreciated that any combination of software and hardware (e.g., circuit implemented) modules may be used to implement the functions. As should be appreciated, the modules illustrated in  control and\/or configure the gateway device  or elements therein such as the processor , to perform the functions of the corresponding steps illustrated and\/or described in the method of flowchart  of . For example, module  performs the functions described with regard to step .","The assembly of modules  includes a receiver module  for receiving a message, e.g., from another device in the system . For example, if the device implementing the method is a matching engine , the received message may be from a gateway . The receiver message is stored as message . The assembly of modules  further includes a module  for determining whether the received message is a message received in response to a gap fill request message, a module  for determining if a message count included in the received message  match an expected message count, by comparing to the expected message count, an a module  for processing the received message . In some embodiments the processing is performed in various embodiments based on the type of message being received, e.g., a request message, a response message etc. If the message counter value included in the received message matches the expected message counter value, it indicates that there are no missing messages and that the device received the last message in the stream to which the received message corresponds. However, if the message counter value in the received message does not match the expected message counter value, the difference indicates that one or more messages corresponding to the stream to which the received message corresponds were not received.","In some embodiments the assembly of modules  further includes a module  for determining what one or more messages are to be requested, e.g., based on the difference between expected message count and received message count. The assembly of modules , in some embodiments, further includes a module  for determining if there is a preferred source for the messages to be requested. In some embodiments the module  checks the stored information  identifying a preferred logging device to supply missing messages, to make such determination.","The assembly of modules  further includes a module  for generating a gap fill request message, e.g., a multicast gap fill request message , including information indicating a preferred message source, e.g., logging device, a preferred logging device presence indicator, information indicating message(s) being requested, and an identifier, e.g., a unicast address of device requesting the messages. The assembly of modules further includes a module  for generating a gap fill request message that does not include information identifying a preferred source of the messages. Thus module  is responsible for generating a gap fill request message including multicast address of message storage device group, information indicating message(s) being requested, and an identifier, e.g., a unicast address of device requesting the messages. Assembly of modules  further includes a transmitter module  for transmitting the generated gap fill request message, e.g., to the multicast group address corresponding to the group of message logging devices which store messages corresponding to the stream identified in the transmitted message.","From the above discussion it should be appreciated that numerous variations and embodiments are possible.","The techniques of various embodiments may be implemented using software, hardware and\/or a combination of software and hardware. Various embodiments are directed to apparatus, e.g., gateways, severs, nodes, terminals, etc. Various embodiments are also directed to methods, e.g., methods of performing risk checking. Various embodiments are also directed to non-transitory machine, e.g., computer, readable medium, e.g., ROM, RAM, CDs, hard discs, etc., which include machine readable instructions for controlling a machine to implement one or more steps of a method.","It is understood that the specific order or hierarchy of steps in the processes disclosed is an example of exemplary approaches. Based upon design preferences, it is understood that the specific order or hierarchy of steps in the processes may be rearranged while remaining within the scope of the present disclosure. The accompanying method claims present elements of the various steps in a sample order, and are not meant to be limited to the specific order or hierarchy presented.","In various embodiments nodes described herein are implemented using one or more modules to perform the steps corresponding to one or more methods, for example, signal receiving, processing, generation and\/or transmission steps. Thus, in some embodiments various features are implemented using modules. Such modules may be implemented using software, hardware or a combination of software and hardware. Thus, in at least some embodiments the modules are hardware modules. Many of the above described methods or method steps can be implemented using machine, e.g., computer, executable instructions, such as software, included in a machine readable medium such as a memory device, e.g., RAM, floppy disk, etc. to control a machine, e.g., general purpose computer with or without additional hardware, to implement all or portions of the above described methods, e.g., in one or more nodes. Accordingly, among other things, various embodiments are directed to a machine-readable medium including machine executable instructions for causing a machine, e.g., processor and associated hardware, to perform one or more of the steps of the above-described method(s). Some embodiments are directed to a device, e.g., control node, including a processor configured to implement one, multiple or all of the steps of one or more methods of the invention.","In some embodiments, the processor or processors, e.g., CPUs, of one or more devices, e.g., gateway or other node, are configured to perform one or more of the steps of the methods described herein. The configuration of the processor may be achieved by using one or more modules, e.g., software modules, to control processor configuration and\/or by including hardware in the processor, e.g., hardware modules, to perform the recited steps and\/or control processor configuration. Accordingly, some but not all embodiments are directed to a device, e.g., node, with a processor which includes a module corresponding to each of the steps of the various described methods performed by the device in which the processor is included. In some but not all embodiments a device, e.g., node, includes a module corresponding to each of the steps of the various described methods performed by the device in which the processor is included. The modules may be implemented using software and\/or hardware.","Some embodiments are directed to a computer program product comprising a non-transitory computer-readable medium comprising code for causing a computer, or multiple computers, to implement various functions, steps, acts and\/or operations, e.g. one or more steps described above. Depending on the embodiment, the computer program product can, and sometimes does, include different code for each step to be performed. Thus, the computer program product may, and sometimes does, include code for each individual step of a method, e.g., a method of controlling a node. The code may be in the form of machine, e.g., computer, executable instructions stored on a non-transitory computer-readable medium such as a RAM (Random Access Memory), ROM (Read Only Memory) or other type of storage device. In addition to being directed to a computer program product, some embodiments are directed to a processor configured to implement one or more of the various functions, steps, acts and\/or operations of one or more methods described above. Accordingly, some embodiments are directed to a processor, e.g., CPU, configured to implement some or all of the steps of the methods described herein. The processor may be for use in, e.g., a communications device, control device or other device described in the present application.","While described in the context of an trading system, at least some of the methods and apparatus of various embodiments are applicable to a wide range of systems."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":[{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 2A","FIG. 2"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 6","FIG. 6A","FIG. 6B","FIG. 6C"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 12","FIG. 1"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 13","FIG. 12"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 14","FIGS. 14A and 14B","FIG. 1"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 15","FIG. 12"]},{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 16","FIG. 1"]},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 18"}]},"DETDESC":[{},{}]}
