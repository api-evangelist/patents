---
title: Method and system of data modelling
abstract: A method for modelling a dataset includes a training phase, wherein the dataset is applied to a non-stationary Gaussian process kernel in order to optimize the values of a set of hyperparameters associated with the Gaussian process kernel, and an evaluation phase in which the dataset and Gaussian process kernel with optimized hyperparameters are used to generate model data. The evaluation phase includes a nearest neighbor selection step. The method may include generating a model at a selected resolution.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08768659&OS=08768659&RS=08768659
owner: The University of Sydney
number: 08768659
owner_city: The University of Sydney, New South Wales
owner_country: AU
publication_date: 20090918
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE EMBODIMENTS","1. SYSTEM OVERVIEW","2. OVERVIEW OF MODELLING PROCESS","3. FAST LOCAL APPROXIMATION USING KD-TREES","4. APPLICATION EXAMPLES","5. ADVANTAGES OF THE INVENTION"],"p":["This patent application is a U.S. National Phase application under 35 U.S.C. \u00a7371 of International Application No. PCT\/AU2009\/001235, filed Sep. 18, 2009, entitled A METHOD AND SYSTEM OF DATA MODELLING, which claims priority to Australian patent application number 2008904884, filed Sep. 19, 2008.","This invention relates to the field of data analysis and synthesis. Embodiments of the invention have application to modelling large scale data sets, which may also be a sparse and\/or an uncertain representation of the underlying subject matter. For example embodiments of the invention may have particular application to digital terrain modelling. The digital terrain modelling may be particularly applicable, but not limited to, use in robotic vehicle navigation. Other examples of applications include, but are not limited to, mining, environmental sciences, hydrology, economics and robotics.","Large scale terrain mapping is a difficult problem with wide-ranging applications, from space exploration to mining and more. For autonomous robots to function in such \u201chigh value\u201d applications, it is important to have access to an efficient, flexible and high-fidelity representation of the operating environment. A digital representation of the operating environment in the form of a terrain model is typically generated from sensor measurements of the actual terrain at various locations within the operating environment. However, the data collected by sensors over a given area of terrain may be less than optimal, for a number of reasons. For example, taking many samples may be cost prohibitive, sensors may be unreliable or have poor resolution, or terrain may be highly unstructured. In other words, there may be uncertainty and\/or incompleteness in data collected by sensors. Uncertainty and incompleteness are virtually ubiquitous in robotics as sensor capabilities are limited. The problem is magnified in a field robotics scenario due to the sheer scale of the application such as in a mining or space exploration scenario.","State of the art digital terrain representations generally map surfaces or elevations. However, they do not have a statistically sound way of incorporating and managing uncertainty. The assumption of statistically independent measurement data is a further limitation of many works that have used these approaches. While there are several interpolation techniques known, the independence assumption can lead to simplistic (simple averaging like) techniques that result in an inaccurate modelling of the terrain. Further, the limited perceptual capabilities of sensors renders most sensory data incomplete.","State of the art representations used in applications such as mining, space exploration and other field robotics scenarios as well as in geospatial engineering can be generally categorised as elevation maps, triangulated irregular networks (TIN's), contour models and their variants or combinations. Each approach has its own strengths and preferred application domains.","Grid based methods use a regularly spaced triangular, square (typical), rectangular or angular grid to represent space\u2014the choice of the profile being dependent on the size of the area to be examined. A typical model would represent the elevation data corresponding to such a regularly spaced profile. The resulting representation would be a 2.5D representation of space. The main advantage of this representation is simplicity. The main limitations include the inability to handle abrupt changes, the dependence on the grid size, and the issue of scalability in large environments. In robotics, grid maps have been exemplified by numerous works, however the main weakness observed in most prior work in grid based representations is the lack of a statistically direct way of incorporating and managing uncertainty.","Triangulated Irregular Networks (TIN's) usually sample a set of surface specific points that capture all important aspects of the surface to be modelled\u2014including bumps\/peaks, troughs, breaks etc. The representation typically takes the form of an irregular network of such points (x,y,z) with each point having pointers to its immediate neighbours. This set of points is represented as a triangulated surface (the elemental surface is therefore a triangle). TINs are able to more easily capture sudden elevation changes and are also more flexible and efficient than grid maps in relatively flat areas. Overall, while this representation may be more scalable (from a surveyors perspective) than the grid representations, it may not handle incomplete data effectively\u2014the reason being the assumption of statistical independence between data points. As a result of this, the elemental facet of the TIN\u2014a triangle (plane)\u2014may very well approximate the true nature of a \u201ccomplicated\u201d surface beyond acceptable limits. This however depends on the choice of the sensor and the data density obtained. It has been observed in the prior art that TiN's can be accurate and easily textured, with the main disadvantage being huge memory requirement which grows linearly with the number of scans. Piecewise linear approximations have been used to address this issue.","Other representations discussed in the prior art include probability densities, wavelets and contour based representations. The latter most represents the terrain as a succession of \u201cisolines\u201d of specific elevation (from minimum to maximum). They are naturally suited to model hydrological phenomena, however they require an order of magnitude more storage and do not provide any particular computational advantages.","There are several different kinds of interpolation strategies for grid data structures. The interpolation method basically attempts to find an elevation estimate by computing the intersection of the terrain with the vertical line at the point in the grid\u2014this is done in image space rather than cartesian space. The choice of the interpolation method can have severe consequences on the accuracy of the model obtained.","The problems posed by large scale terrain mapping, associated with the size and characteristics of the data may also be present in other computer learning applications where data needs to be analysed and synthesised to create a model, forecast or other representation of the information on which the data is based.","According to the present invention there is provided, in a first aspect, a method for modelling data based on a dataset, including a training phase, wherein the dataset is applied to a non-stationary Gaussian process kernel in order to optimize the values of a set of hyperparameters associated with the Gaussian process kernel, and an evaluation phase in which the dataset and Gaussian process kernel with optimized hyperparameters are used to generate model data.","The data may be large scale terrain data and the model data may be output at a selected resolution. The data may be a sparse representation of the underlying subject of the model.","In one form of the invention, the method includes a step of sampling the measured terrain data to obtain a training data subset that is applied in the training phase for optimization of the hyperparameters. The sampling may be performed on the basis of uniform, random, and\/or informed heuristic sampling methodologies.","In one form of the invention the measured terrain data or training data subset is organised and stored in a hierarchical data structure for efficient access during the evaluation phase. The hierarchical data structure may comprise a k-dimensional tree (KD-Tree) structure","In another form of the invention, the evaluation phase includes the generation of a probabilistic uncertainty estimate for the terrain model data generated.","The evaluation phase may include a nearest neighbour selection step, wherein only a selected subset of nearest neighbour measured terrain data is used to generate each corresponding terrain model datum.","The Gaussian process kernel can be a non-stationary neural network kernel.","The optimization of hyperparameter values may include a maximum marginal likelihood estimation (MMLE) formulation. In one form of the invention the optimization includes a simulated annealing stochastic search. In another form of the invention the optimization includes a gradient descent method, such as a Quasi-Newton optimization with Broyden-Fletcher-Goldfarb-Shanno (BFGS) hessian update. In another form of the invention the optimization comprises a combination of stochastic search and gradient descent.","In accordance with the present invention, there is provided, in a second aspect, a system for large scale data modelling, including:\n\n","In accordance with the present invention, there is provided, in a third aspect, a method for modelling a dataset with a spatial characteristic, such as an area of terrain, comprising providing measured data to a non-parametric, probabilistic process to derive a model from the dataset, and saving a data set describing the model in a database that preserves the spatial characteristics of the data.","The database may utilise a KD-Tree structure to store the modelled terrain data.","The process utilised may be a Gaussian process, such as a non-stationary Gaussian process, or for example, a neural network.","The data set may include hyperparameters describing the model.","The terrain data may be divided into at least two subsets, wherein each subset is provided to the non-parametric, probabilistic process to derive a terrain model for each of the subsets of the terrain data.","In accordance with the present invention, there is provided, in a fourth aspect, method for determining the topography of an area of terrain, comprising utilising measured terrain data and data derived from a model of the area of terrain to generate terrain model data for a selected region in the area of terrain.","The step of generating terrain model data may further include selecting spatially close model data from a database to generate model data for the selected region.","The model data may be provided in a KD-tree database structure.","The method may comprise the further step of calculating an uncertainty measure, wherein the uncertainty measure provides an indication of the uncertainty regarding the accuracy of the generated model data for the selected region.","The method may also comprise the further step of displaying the terrain model data at a selected resolution.","On receipt of newly acquired measured terrain data, a new model of the area of the terrain may be derived based, at least in part, on the newly acquired terrain data.","Newly acquired terrain data may be incorporated into the database, in addition to being used to derive a new model.","In accordance with the present invention, there is provided, in a fifth aspect a system for modelling an area of terrain, comprising a modelling module arranged to receive measured terrain data and utilise a non-parametric, probabilistic process to derive a model for the area of terrain, and a data structure arranged to receive a data set describing the model wherein the data structure preserves the spatial characteristics of the data.","In accordance with the present invention, there is provided, in a sixth aspect, a system for determining the topography of an area of terrain, comprising an evaluation module arranged to utilise measured terrain data and data derived from a model of the area of terrain to generate terrain model data for a selected region in the area of terrain.","In accordance with the present invention, there is provided, in a seventh aspect, a computer program including at least one instruction arranged to implement the method steps of at least one of the first, third or fourth aspect of the invention.","In accordance with the present invention, there is also provided, in an eighth aspect, a computer readable media incorporating a computer program in accordance with the seventh aspect of the invention.","In accordance with the present invention, there is provided, in a ninth aspect, a navigation system incorporating a computer program in accordance with a seventh aspect of the invention.","In accordance with the present invention, there is provided, in a tenth aspect, a vehicle incorporating a navigation system in accordance with a ninth aspect of the invention.","Further aspects of the present invention and embodiments of the aspects described in the preceding paragraphs will become apparent from the following description.","It will be understood that the invention disclosed and defined in this specification extends to all alternative combinations of two or more of the individual features mentioned or evident from the text or drawings. All of these different combinations constitute various alternative aspects of the invention.","Embodiments of the present invention are described hereinbelow. The embodiments are described with reference to the application of modelling large scale terrain, for example on the scale of an open pit mine, on the basis of measured sensor data. The terrain model can then be applied by autonomous robotic vehicles and the like to navigate within the region of terrain modelled. However, the present invention has application to other machine learning problems, particularly those involving large scale data sets. In particular, the invention may have application to data sets containing 100,000 or more points, 500,000 or more points, or 1,000,000 or more points.","The terrain modelling problem can be understood as follows. Given a sensor that provides terrain data as a set of points (x,y,z) in 3D space, the objectives are to:","1) develop a multi-resolution representation that incorporates the sensor uncertainty in an appropriate manner; and","2) effectively handle the sensing limitations, such as incomplete sensor information due to obstacles.","Furthermore, scalability is also addressed in order to handle large data sets.","Referring to , an embodiment of a terrain modelling system is implemented with the aid of appropriate computer hardware and software in the form of a computing system . The computing system  comprises suitable components necessary to receive, store and execute appropriate computer instructions. The components may include a processing unit , read only memory (ROM) , random access memory (RAM) , an input\/output device such as disk drives , communication links  such an Ethernet port, a USB port, etc. Display  such as a liquid crystal display, a light emitting display or any other suitable display. The computing system  includes instructions that may be included in ROM , RAM  or disk drives  and may be executed by the processing unit . There may be provided a plurality of communication links  which may variously connect to one or more computing devices such as a server, personal computers, terminals, wireless, handheld computing devices or other devices capable of receiving and\/or sending electronic information. At least one of a plurality of communications links may be connected to an external computing network through a telephone line, an Ethernet connection, or any type of communications link. Additional information may be entered into the computing system by way of other suitable input devices such as, but not limited to, a keyboard and\/or mouse (not shown).","The computing system may include storage devices such as a disk drive  which may encompass solid state drives, hard disk drives, optical drives or magnetic tape drives. The computing system  may use a single disk drive or multiple disk drives. A suitable operating system  resides on the disk drive or in the ROM of the computing system  and cooperates with the hardware to provide an environment in which software applications can be executed.","In particular, the data storage system is arranged to store measurement data received from the sensors, in a suitable database structure . The data storage system also includes a terrain model , which is utilised with the measurement data to provide a 2.5D \u201cmap\u201d of the terrain. The data storage system may be integral with the computing system, or it may be a physically separate system.","In more detail, the data storage system is loaded with a terrain modelling module including various sub-modules (not shown). The sub-modules are arranged to interact with the hardware of the computing system , via the operating system , to either receive the data collected by the measurement sensors (generally sent via the communications links ) and\/or process the received data to provide the measured terrain data. In some embodiments, there may be provided a visual display unit, which may be in either local or remote communication with the computing system , and is arranged to display information relating to the programs being run thereon. In other embodiments, the data may be used directly by an autonomous robot (e.g. an automated vehicle) to perform particular tasks, such as navigation of the terrain.",{"@attributes":{"id":"p-0054","num":"0056"},"figref":"FIG. 1","i":"b ","b":["10","20","30","20"]},"In more detail, the sensors  provide spatial data measured from the terrain region  which can be generated by a number of different methods, including laser scanning, radar scanning, GPS or manual survey. One example of an appropriate measurement sensor is the LMS Z420 time-of-flight laser scanner available from Riegl. This form of sensor can be used to scan the environment region and generate a 3D point cloud comprising (x, y, z) data in three frames of reference. In the embodiment described herein, two separate scanners are shown disposed on opposite sides of the terrain to be modelled so as to minimise occlusions and the like.","The measurement sensor data generated by the sensors  is provided to a training module  of the terrain modelling module. The training module  is adapted to organise the sensor data and determine a non-parametric, probabilistic, multi-scale representation of the data for use in terrain modelling, which is stored in the data storage . Details of the specific operational procedures carried out by the training processor are described hereinbelow and particularly with reference to .","The terrain modelling module also implements an evaluation module which is operable to access the data storage  and utilise the data from the data storage  and terrain model data according to a desired modelling grid resolution. Specific operational details of the evaluation module are provided hereinbelow and particularly with reference to . Once the terrain model data has been generated it can be communicated to an autonomous robotic vehicle , operating within the modelled environment, by a suitable communications medium , such as a radio communication link.",{"@attributes":{"id":"p-0058","num":"0060"},"figref":"FIG. 2","b":["100","100","110","120","120"]},"Following the sampling stage, the sampled measurement dataset is stored, at step , in the data storage  for further use. Many different data structures exist, however the embodiment described herein makes use of a KD-Tree hierarchical data structure. The use of such a data structure provides the training and evaluation modules with rapid access to the sampled measurement data on demand. In addition, a KD-Tree hierarchical data structure preserves spatial information.","The data storage step is followed by a Gaussian Process (GP) learning procedure at step , with the objective of learning a representation of the spatial data. Details of the GP learning procedure are provided hereinbelow. This method provides for a non-parametric, probabilistic, multi-scale representation of the data. In other words, while a GP is utilised in the embodiment described herein, any suitable non-parametric, probabilistic process may be utilised to \u201clearn\u201d a representation of the data.","In particular, in the GP learning procedure, a maximum marginal likelihood estimation (MMLE) method is used in order to optimise a set of hyperparameters associated with a GP kernel. By \u2018optimise\u2019 it is meant that the hyperparameters are set at values that are expected to result in reduced error in comparison to other values, but are not necessarily set at the most optimum values. The kernel hyperparameters provide a coarse description of the terrain model, and can be used together with the sampled sensor measurement data to generate detailed terrain model data at a desired resolution. Moreover, as a non-parametric, probabilistic process is utilised, information regarding the uncertainty can also be captured and provided. That is, a statistically sound uncertainty estimate is provided. The optimized kernel hyperparameters are stored, together with the KD-Tree sample data structure, for use by the evaluation module.",{"@attributes":{"id":"p-0062","num":"0064"},"figref":["FIG. 3","FIG. 2"],"b":"200"},"Returning to the evaluation phase , the sensor measurement spatial data stored in the KD-Tree and the Gaussian process model hyperparameters obtained in the learning phase are retrieved from the database (). Since the Gaussian process representation obtained is modelled as a continuous domain, applying the model for a desired resolution amounts to sampling the model at that resolution. This can be performed at step  as outlined below.","A grid in the area of interest, at the desired resolution is formed. The learnt spatial model is utilised to estimate the elevation at individual points in the grid. Each point in the grid is interpolated with respect to the model learnt in the previous step and the nearest training data around that point. For this step, the KD-Tree efficiently provides access to the nearest known spatial data. This together with the learnt model provides an interpolation estimate for the desired location in the grid. The estimate is also accompanied with an uncertainty measure that is simultaneously computed in a statistically sound manner.","The output  of the Gaussian process evaluation from step  is a digital elevation map or grid, which is provided at the chosen resolution and region of interest together with an appropriate measure of uncertainty for every point in the map. The digital elevation map may be used as provided or may be rapidly processed into a digital surface\/terrain model and used thereafter for robotic vehicle navigation and the like in known fashion.","Further details of the terrain modelling method and system of the illustrated embodiment are set forth below, with a particular focus on the details of the Gaussian process and underlying mathematical principles and procedures. This is followed by a description of some example terrain modelling performed by this embodiment of the invention.","The example embodiment employs Gaussian Processes (GPs) for modelling and representing terrain data. GPs provide a powerful learning framework for learning models of spatially correlated and uncertain data. Gaussian Process Regression provides a robust means of estimation and interpolation of elevation information that can handle incomplete sensor data effectively. GPs are non-parametric approaches in that they do not specify an explicit functional model between the input and output. They may be thought of as a Gaussian Probability Distribution in function space and are characterised by a mean function m(x) and the covariance function k(x, x\u2032) where\n\n()=\u0395[\u0192()]\u2003\u2003(1)\n\n(\u2032)=\u0395[(\u0192()\u2212())(\u0192(\u2032)\u2212(\u2032))]\u2003\u2003(2)\n\nsuch that the GP is written as\n\n\u0192()\u02dcGP((),(\u2032))\u2003\u2003(3)\n","The mean and covariance functions together provide a distribution over functions. In the context of the problem at hand, each x\u2261(x, y) and \u0192(x)\u2261z of the given data.","2.1 The Covariance Function in the Gaussian Process","The covariance function models the covariance between the random variables which, here, correspond to sensor measured data. Although not necessary, for the sake of convenience the mean function m(x) may be assumed to be zero by scaling the data appropriately such that it has a mean of zero. There are numerous covariance functions that can be used to model the spatial variation between the data points. A popular covariance function is the squared-exponential covariance function given as",{"@attributes":{"id":"p-0071","num":"0073"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["k","y"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","p"]},{"mi":["x","q"]}],"mo":","}}},{"mrow":[{"msubsup":{"mi":["\u03c3","f"],"mn":"2"},"mo":"\u2062","mrow":{"mi":"exp","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mo":"-","mfrac":{"mn":"1","mrow":{"mn":"2","mo":"\u2062","msup":{"mi":"l","mn":"2"}}}},"mo":"\u2062","msup":{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["x","p"]},{"mi":["x","q"]}],"mo":"-"}},"mn":"2"}}}}},{"msubsup":{"mi":["\u03c3","n"],"mn":"2"},"mo":"\u2062","msub":{"mi":["\u03b4","pq"]}}],"mo":"+"}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"4"}}]}}}},"br":{},"sub":["y ","\u0192","n","pq ","\u0192","n "],"sup":["2 ","2 "]},"Another covariance function is the neural network covariance function. It is specified by",{"@attributes":{"id":"p-0073","num":"0075"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msub":{"mi":["k","y"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"x","mo":",","msup":{"mi":["x","\u2032"]}}}},{"mrow":[{"msubsup":{"mi":["\u03c3","f"],"mn":"2"},"mo":"\u2062","mrow":{"mi":"arcsin","mo":"\u2061","mrow":{"mo":["(",")"],"mfrac":{"mrow":{"mi":"\u03b2","mo":"+","mrow":{"mn":"2","mo":["\u2062","\u2062"],"msup":{"mi":["x","T"]},"mrow":{"mo":"\u2211","msup":{"mi":["x","\u2032"]}}}},"msqrt":{"mrow":{"mrow":[{"mo":["(","\u2062",")"],"mrow":{"mn":"1","mo":["+","+"],"mi":"\u03b2","mrow":{"mn":"2","mo":["\u2062","\u2062"],"msup":{"mi":["x","T"]},"mrow":{"mo":"\u2211","mi":"x"}}},"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mo":["(",")"],"mrow":{"mn":"1","mo":["+","+"],"mi":"\u03b2","mrow":{"mn":"2","mo":["\u2062","\u2062"],"msup":{"mi":"x","mrow":{"mi":["\u2032","T"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},"mrow":{"mo":"\u2211","msup":{"mi":["x","\u2032"]}}}}}],"mo":"\u2062"}}}}}},{"msubsup":{"mi":["\u03c3","n"],"mn":"2"},"mo":"\u2062","msub":{"mi":["\u03b4","pq"]}}],"mo":"+"}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"5"}}]}}}},"br":{},"sub":["\u0192","n "]},"The difference between these two covariance functions is that the squared-exponential covariance function, being a function of |x\u2212x\u2032|, is stationary (invariant to translation) and isotropic (same behaviour in all directions) whereas the neural network covariance function is not so. In practice, the squared exponential covariance function has a smoothing or averaging effect on the data. The neural network covariance function proves to be much more effective than the squared exponential covariance function in handling discontinuous (rapidly changing) data, which may characterise terrain data.","2.2. Selecting a Kernel","When evaluating the GP, different types of kernels can be used. Two types of kernels are described and compared below.","Squared Exponential Kernel","The squared exponential (SQEXP) kernel is a function of |x\u2212x\u2032| and is thus stationary and isotropic meaning that it is invariant to all rigid motions. The SQEXP function is also infinitely differentiable and thus tends to be smooth. The kernel is also called the Gaussian kernel. It functions similarly to a Gaussian filter being applied to an image. The point at which the elevation has to be estimated is treated as the central point\/pixel. Training data at this point together with the those at points around it determine the elevation. As a consequence of being a function of the Euclidean distance between the points and the fact that the correlation is inversely proportional to the distance between them, the SQEXP kernel is prone to producing smoothened (possibly overly) models. Points that are far away from the central pixel contribute less to its final estimate whereas points nearby the central pixel have maximum leverage. The correlation measures of far off points no matter how significant they may be, are diminished. This is in accordance with the \u201cbell-shaped\u201d curve of the kernel.","Neural Network Kernel","The neural network (NN) kernel treats data as vectors and is a function of the dot product of the data points. Hence, the NN kernel is dependent on the coordinate origin and not the central point in a window of points, as explained about SQEXP above. Spatial correlation is a function of the distance of the points from the data origin until reaching a saturation point. In the saturation region, the correlation of points are similar. It is this kernel behaviour that enables the resulting GP model to adapt to rapid or large variations in data.","Neural networks raise an issue of scalability when applied to large scale applications. As described below, scalability is addressed using a local approximation method. The local approximation method also serves to bound the region over which the kernel is applied (hence, enabling effective usage of the kernel) as even two distant points lying in the saturation region of the kernel will be correlated. The effect of using the NN kernel alongside the local approximation leads to a form of locally non-stationary GP regression for large scale terrain modelling. The fact that correlation increases (until saturation) with distance in the NN kernel, although apparently counter intuitive, may be thought of as a \u201cnoise-filtering\u201d mechanism, wherein, a greater emphasis is placed on the neighbourhood data of a point under consideration. Such a behaviour is not seen in the SQEXP kernel. The NN kernel has been able to adapt to fast changing\/large discontinuities in data.","Comparing Kernels","The criteria of importance when comparing kernels is the ability of the GP using the particular kernel to adapt to the data at hand. One aspect of a GP using the NN kernel in comparison with one using an SQEXP kernel is its superior ability to respond to sparse data availability. This is due to the fact that the correlation in the NN kernel saturates. Thus, even relatively far off points could be used to make useful predictions at the point of interest. In the case of the SQEXP kernel however, the correlation decreases with distance towards zero. Thus, far off data in sparse datasets become insignificant and are not useful for making inferences at the point of interest. Such a scenario could occur in large voids due to occlusions or due to fundamental sensor limitations. These aspects of the NN kernel taken together, make it a powerful method for use in complex terrain modelling using GPs.","The Neural Network (NN) covariance function may accordingly meet the demands of modelling large scale and unstructured terrain.","2.3. Training the Gaussian Process","Training the GP for a given dataset is tantamount to optimising the hyperparameters of the underlying covariance function. This training can be done using machine learning. It can also be done manually, for example by estimating the values and performing an iterative fitting process.","For a machine learning method, the hyperparameters are optimised with respect to the relevant covariance function. For the squared-exponential covariance function, this amounts to finding the optimal set of values for \u03b8={l, l, l, \u03c3, \u03c3}. For the neural network covariance function, the optimal values must be determined for \u03b8={l, l, l, \u03c3, \u03b2, \u03c3}. This is done by formulating the problem in a Maximum Marginal Likelihood Estimation (MMLE) framework and subsequently solving a non-convex optimization problem.","A Bayesian procedure is used to maximise the log marginal likelihood of the training output (y) given the training input (X) for a set of hyperparameters \u03b8 which is given by",{"@attributes":{"id":"p-0086","num":"0088"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"log","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":{"mi":["y","X"],"mo":"|"},"mo":",","mi":"\u03b8"}}},{"mrow":[{"mrow":{"mo":"-","mfrac":{"mn":["1","2"]}},"mo":["\u2062","\u2062","\u2062"],"msup":{"mi":["y","T"]},"msubsup":{"mi":["K","y"],"mrow":{"mo":"-","mn":"1"}},"mi":"y"},{"mfrac":{"mn":"1","mrow":{"mn":"2","mo":"\u2062","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},"mo":["\u2062","\u2062"],"mi":"log","mrow":{"mo":["\uf603","\uf604"],"msub":{"mi":["K","y"]}}},{"mfrac":{"mi":"n","mn":"2"},"mo":"\u2062","mrow":{"mrow":{"mi":"log","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"2","mo":"\u2062","mi":"\u03c0"}}},"mo":"."}}],"mo":["-","-"]}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"6"}}]}}}},"br":{},"sub":["y","\u0192","n"],"sup":"2"},"Using this maximum marginal likelihood (MMLE) approach, training the GP model on a given set of data amounts to finding an optimal set of hyperparameters that maximize the log marginal likelihood (Eq. 6). This can be done using standard off-the-shelf optimization approaches. For example, a combination of stochastic search (simulated annealing) and gradient descent (Quasi-Newton optimization with BFGS Hessian update) has been found to be successful. Using a gradient based optimization approach leads to advantages in that convergence is achieved much faster. A description and further information about these optimization techniques and others can be found in the text , by J. Nocedal and S. Wright (Springer, 2006), which is hereby incorporated herein by reference,","2.4. Gaussian Process Evaluation","Applying the GP model amounts to using the learned GP model to estimate the elevation information across a region of interest, characterised by a grid of points at a desired resolution. The 2.5D elevation map can then be used as is or as a surface map for various applications. This is achieved by performing Gaussian Process Regression at the set of query points, given the training dataset and the GP covariance function with the learnt hyperparameters.","For additive independent identically distributed Gaussian noise with variance \u03c3, the prior on the noisy observations becomes\n\ncov()=()+\u03c3\u03b4\u2003\u2003(7)\n\nwhere \u03b4is a Kroeneker Delta defined on p, q and is equal to 1 i\u0192\u0192 p=q and 0 otherwise.\n","The joint distribution of any finite number of random variables of a GP is Gaussian. Thus, the joint distribution of the training outputs \u0192 and test outputs \u0192* given this prior can be specified by",{"@attributes":{"id":"p-0092","num":"0094"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mi":"y"}},{"mtd":{"msub":{"mi":"f","mo":"*"}}}]}},{"mi":"N","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"0","mo":",","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":[{"mi":"K","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["X","X"],"mo":","}}},{"msubsup":{"mi":"\u03c3","mrow":{"mi":"n","mo":"\u2062","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},"mn":"2"},"mo":"\u2062","mi":"I"}],"mo":"+"}},{"mrow":{"mi":"K","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"X","mo":",","msub":{"mi":"X","mo":"*"}}}}}]},{"mtd":[{"mrow":{"mi":"K","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":"X","mo":"*"},"mo":",","mi":"X"}}}},{"mrow":{"mi":"K","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":"X","mo":"*"},{"mi":"X","mo":"*"}],"mo":","}}}}]}]}}}}}],"mo":"~"}},{"mrow":{"mo":["(",")"],"mn":"8"}}]}}}}},"The function values (\u0192*) corresponding to the test inputs (X*) given the training data X, training output y and covariance function K, is given by\n\n ()[()+\u03c3\u2003\u2003(9)\n\nand their uncertainty is given by\n\ncov(\u0192)=()\u2212()[()]()\u2003\u2003(10)\n","Denoting K(X, X) by K and K(X, X*) by K*; for a single test point x*, k(x*)=k* is used to denote the vector of covariances between the test point and the set of all training points. The above equations can then be rewritten for a single query point as:\n\n ()\u2003\u2003(11)\n\nand\n\n()\u2212()\u2003\u2003(12)\n","Equations (11) and (12) provide the basis for the elevation estimation process. The GP estimates obtained are a best linear, unbiased estimate for the respective query points. Uncertainty is handled by incorporating the sensor noise model in the training data. The representation produced is a multi-resolution one in that a terrain model can be generated at any desired resolution using the GP regression equations presented above. Thus, the terrain modelling approach proposed is a probabilistic, multi-resolution one that aptly handles spatially correlated information.","Although the Gaussian process modelling as described above is a powerful method, modelling large-scale stochastic processes still presents some challenges. The difficulty comes from the fact that inference in GPs is usually computationally expensive due to the need to invert a potentially large covariance matrix during inference time which has O(N) cost. For problems with thousands of observations, exact inference in normal GPs is intractable and approximation algorithms are required.","Most of the approximation algorithms employ a subset of points to approximate the posterior distribution of a new point given the training data and hyperparameters. These approximations rely on heuristics to select the subset of points, or use pseudo targets obtained during the optimization of the log marginal likelihood of the model.","As described above, for the embodiment described here, a NN kernel is used for the GP. The next step in the GP modelling process is to estimate the hyperparameters for a given dataset. Different approaches have been attempted including a maximum marginal likelihood formulation (MMLE), generalized cross validation (GCV) and maximum a-posteriori estimation (MAP) using Markov chain Monte Carlo (MCMC) techniques. The MMLE computes the hyperparameters that best explains the training data given the chosen kernel. This requires the solution of a non-convex optimization problem and may possibly be driven to locally optimal solutions. The MAP technique places a prior on the hyperparameters and computes the posterior distribution of the test outputs once the training data is well explained. The state-of-the-art in GP based terrain modelling typically used the latter approach.","For large scale datasets, the GCV and MAP approaches may be too computationally expensive. For the embodiment of the invention described here, the learning procedure is based on the MMLE method, the use of gradients and the learning of the hyperparameters that best explains the training data through optimization techniques. Locally optimal solutions are avoided by combining a stochastic optimization procedure with a gradient based optimization. The former enables the optimizer to reach a reasonable solution and the latter focuses on fast convergence to the exact solution.","The modelling that forms part of this invention also includes a local approximation methodology that addresses scalability issues and is based on a \u201cmoving window\u201d methodology implemented using an efficient hierarchical representation of the data, a KD-Tree.","In this specification the terms nearest neighbour and \u201cmoving window\u201d are used interchangeably and will be understood by a person skilled in the art to refer to the same concept.","Terrain data can be obtained using one or more of numerous different sources (sensors), including 3D laser scanners and GPS surveying. Three-dimensional (3D) laser scanners provide dense and accurate data whereas a GPS based survey typically comprises a relatively sparse set of well chosen points of interest. Typically, for dense and large datasets, not all of the data is required for learning the GP. Indeed, such an approach may not scale due to the computational complexity of the process. Thus, as earlier described, a sampling step may be included that can take a subset of the data. The subset of the data that is to be used for training is stored in a KD-Tree for later use in the inference process. The KD-Tree provides a mechanism for rapid data access in the inference process and addresses scalability issues related to applying the proposed method in the context of large datasets, as spatial information is preserved in the KD-Tree. A description of the KD-Tree data structure can be found, for example, in , by F. P. Preparata and M. I. Shamos (Springer, 1993).","As mentioned earlier, the squared exponential kernel has a smoothing effect on the data whereas the neural-network kernel is much more effective in modelling discontinuous terrain data. In order to achieve a good trade-off between obtaining smooth terrain models and yet preserve the characteristic features in the terrain, a KD-Tree based local approximation methodology is proposed in this work.","During the inference process, the KD-Tree that initially stored the training data is queried to provide a predefined number of spatially closest training data to the point for which the elevation must be estimated. The GP regression process then uses only these training exemplars to estimate the elevation at the point of interest. The number of nearest neighbour exemplars used controls the tradeoff between smoothness and feature preservation and also the time taken for the inference process. The proposed local approximation method also bounds (by selecting a fixed number of data points) the subset of data over which the neural network kernel is applied and thus effectively uses it. Note that the GP model itself is learnt from the set of all training data but is applied locally using the KD-Tree approximation. Particularly, in the case of the neural network covariance function, this amounts to adding the benefits of a stationary covariance function to the highly adaptive power of a non-stationary covariance function. This process provides two advantages\u2014it tends to achieve the locally adaptive GP effect as exemplified in some of the referenced prior art, and it simultaneously addresses the scalability issue that arises when applying this approach to large scale datasets.","The process of local approximation  is shown in . At step  the training and evaluation data in the KD Tree and the GP hyperparameters are obtained from the GP modelling step. At step  a test grid of (x,y) data is prepared over the test area at a desired resolution. For each point in the test grid GP regression is performed at step . At step  the output provided is a 2.5D elevation map with an uncertainty measure. A detailed view of the GP regression step is shown at . The first part is shown at step  where, for each test point, the nearest neighbour is obtained from the training\/evaluation data stored. Then at step  GP regression is performed using the nearest training data and the test point. Finally at step  an elevation estimate and uncertainty is obtained.","By way of example, a dataset of N (for example, 1 million) points may be split into for instance n(say, 3000) training points, n(say, 100000) test points and the remaining n(897000) are evaluation points. The training points are those over which the GP is learnt, the test points are those over which the error, for example the mean square error (MSE), is evaluated and the evaluation points together with the training points are used to make predictions at the test points. The KD-Tree data structure would thus comprise of a total of n+npoints (a total of 900000 training and evaluation data). The complexity in the absence of the approximation strategy would be O(n+n)for each of the npoints. However, with the proposed local approximation strategy, a predefined number m of spatially closest training and evaluation points is used to make a prediction at any point of interest. Typically, m<<n+n. For instance, for the dataset of N a neighbourhood size of 100 points may be used. Thus the computational complexity would significantly decrease to O(m) for each of the npoints to be evaluated.","The KD-Tree is a convenient hierarchical data structure used to implement a fast \u201cmoving window\u201d based local approximation method. Alternative appropriate data structures could be used which support use of the local neighbourhood of a test point.","The local approximation strategy defines the neighbourhood over which the interpolation takes place and hence can serve as a control parameter to balance local smoothness with feature preservation in terrain modelling. The method of choosing the nearest neighbours can also be used to the same effect. For instance, 100 nearest neighbours mutually separated by a point will produce much smoother outputs as compared to the 100 immediate neighbours. The local approximation method can thus be used as a control or tradeoff mechanism between locally smooth outputs and feature preservation.","The local approximation strategy is also useful in the application of the neural network kernel (NN). The NN kernel is capable of seamlessly adapting to rapidly and largely changing data. However, it also has the property that depending on the location of the origin and that of the data points with respect to it, the correlation increases with distance until it saturates. Particularly in the saturation region, the kernel is able to respond to discontinuous data very effectively as the correlation values become similar. However, this also implies that two distant points lying in the saturation region will be correlated. The proposed local approximation method acts as a bounding mechanism for the applicability of the kernel. This is because the NN only acts on the immediate neighbourhood of the data, over which it is extremely effective in adapting. In the case of the neural network kernel, this amounts to adding the benefits of a stationary kernel to the highly adaptive power of a non-stationary kernel. Thus, the proposed local approximation methodology attempts to emulate the locally adaptive GP effect exemplified by the works.","Experiments were performed on three large scale data sets representative of different sensory modalities.","The first data set comprises of a scan from a RIEGL LMSZ420 laser scanner at the Mt. Tom Price mine in Western Australia. The data set consists of over 1.8 million points (in 3D) spread over an area of 135\u00d772 sq m, with a maximum elevation difference of about 13.8 m. The scan has both numerous voids of varying sizes as well as noisy data, particularly around the origin of the scan. The data set used is referred to as the \u201cTom Price\u201d data set.","The second data set comprises a mine planning dataset, that is representative of a GPS based survey, from a large Kimberlite (diamond) mine: This data set is a very hard one in that it contains very sparse information (4612 point in total; the average spread of the data is about 33 m in x and y directions) spread over a very large geographical area (\u22482.2\u00d72.3 sq km), with a significant elevation of about 250 m. The data set is referred to as the \u201cKimberlite Mine\u201d data set.","A third data set also consists of a laser scan but over a much larger area than the first data set. This dataset is referred to as the \u201cWest Angelas\u201d dataset. It comprises of about 534,460 points spread over 1.865\u00d70.511 sq km. The maximum elevation of this dataset is about 190 m. This dataset is both rich in features (step-like wall formations, voids of varying sizes) as well as large in scale; a large part of the dataset is composed of only sparse data.","The focus of the experiments is three-fold. The first part will demonstrate GP terrain modelling and evaluate the non-stationary NN kernel against the stationary SQEXP kernel for this application. The second part will detail results from extensive cross-validation experiments done using all three datasets that aim to statistically evaluate the performance of the stationary and non-stationary GP and also compare them with other methods of interpolating data, even using alternative representations. This part aims at understanding how they compare against each other on the test datasets and which would be more effective in what circumstances. The last part will detail experiments that help understand finer aspects of the GP modelling process and explain some of the design decisions in this work\u2014these include the choice of using two optimization techniques or 100 nearest neighbours for instance.","In all experiments, the mean squared error (MSE) criterion was used as the performance metric (together with visual inspection) to interpret the results. Each dataset was split into three parts\u2014training, evaluation and testing. The former-most one was used for learning the GP and the latter was used only for computing the mean squared error (MSE); the former two parts together were used to estimate the elevations for the test data. The mean squared error was computed as the mean of the squared differences between the GP elevation prediction at the test points and the ground truth specified by the test data subset.","4.1. Stationary Vs Non-Stationary GP Terrain Modelling","In the first set of experiments, the objective was to understand if GPs could be successfully used for a terrain modelling task, the benefits of using them and if the non-stationary (neural network) or stationary (squared exponential) kernel was more suited for terrain modelling.","The results of GP modelling of the three data sets using are summarized in the following 3 tables:",{"@attributes":{"id":"p-0119","num":"0121"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Kernel performance Toni Price dataset"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Mean Squared Error "]},{"entry":[{},"Kernel","(MSE) (sq m)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Squared Exponential (SQEXP)","0.0136"]},{"entry":[{},"Neural Network (NN)","0.0137"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0120","num":"0122"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Kernel performance Kimberlite Mine dataset"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Number of ","Mean Squared Error "]},{"entry":["Kernel","training data","(MSE) (sq m)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Squared Exponential (SQEXP)","1000","13.014 (over 3612 points)"]},{"entry":["Neural Network (NN)","1000","\u20028.870 (over 3612 points)"]},{"entry":["Squared Exponential (SQEXP)","4512","4.238 (over 100 points)"]},{"entry":["Neural Network (NN)","4512","3.810 (over 100 points)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0121","num":"0123"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 3"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Kernel performance West Angeles dataset"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Mean Squaxed Error "]},{"entry":[{},"Kernel","(MSE) (sq m)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Squared Exponential (SQEXP)","0.690"]},{"entry":[{},"Neural Network (NN)","0.019"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"The tests compared the stationary SQEXP kernel and the non-stationary NN kernel for GP modelling of large scale mine terrain data. Overall, the NN kernel outperformed the SQEXP and proved to be more suited to the terrain modelling task. In the case of the Tom Price dataset, as the dataset is relatively flat, both kernels performed relatively well. The Kimberlite Mine dataset being sparse, was better modelled by the NN kernel. The West Angelas dataset was more challenging in that it had large voids, large elevation and sparse data. The NN kernel clearly outperformed the SQEXP kernel.","Further, not only was its MSE lower than that of the SQEXP but the MSE values were comparable to the known sensor noise of the RIEGL scanner.","The experiments successfully demonstrated Gaussian process modelling of large scale terrain. Further, the SQEXP and NN kernel were compared. The NN kernel proved to be much better suited to modelling complex terrain as compared to the SQEXP kernel. The kernels performed very similarly on relatively at data. Thus, the approach can\n\n","The result is a compact, non-parametric, multi-resolution, probabilistic representation of the large scale terrain that appropriately handles spatially correlated data as well as sensor incompleteness and uncertainty.","4.2. Statistical Performance Evaluation, Comparison and Analyses","The next set of experiments that were conducted were aimed at\n\n","The method adopted to achieve these objectives was to perform cross validation experiments on each of the three datasets and interpret the results obtained. The GP modelling using the SQEXP and NN kernels are compared with each other as well as with parametric, non-parametric and triangle based interpolation techniques. A complete list and description of the techniques used in this experiment is included below.","1. GP modelling using SQEXP and NN kernels (the method of the embodiment of this invention as described above).","2. Parametric interpolation methods\u2014These methods attempt to fit the given data to a polynomial surface of the chosen degree. The polynomial coefficients, once found, can be used to interpolate or extrapolate as required. The parametric interpolation techniques used here include linear (plane fitting), quadratic and cubic.\n\n(a) Linear (plane fitting)\u2014A polynomial of degree 1 (plane in 2D) is fit to the given data. The objective is to find the coefficients {a}=0 for the equation\n\n\n\nthat best describes the given data by minimizing the residual error,\n\n(b) Quadratic fitting\u2014A polynomial of degree 2 is fit to the given data. The objective is to find the coefficients {a}=0 for the equation\n\n\n\nthat best describes the given data by minimizing the residual error.\n\n(c) Cubic fitting\u2014A polynomial of degree 3 is fit to the given data. The objective is to find the coefficients {a}=0 for the equation\n\n\n\nthat best describes the given data by minimizing the residual error.\n\n3. Non-parametric interpolation methods\u2014These techniques attempt to fit a smooth curve through the given data and do not attempt to characterize all of it using a parametric form, as was the case with the parametric methods. They include piecewise linear or cubic interpolation, biharmonic spline interpolation as well as techniques such as nearest neighbour interpolation and mean-of-neighbourhood interpolation.\n\n","A 10-fold cross validation was conducted using each dataset. Two kinds of cross validation techniques were considered\u2014using uniform sampling to define the folds and using patch sampling to define the folds. In the uniform sampling method, each fold had approximately the same number of points and points were selected through a uniform sampling process\u2014thus, the cross validation was also stratified in this sense. This was performed for all three datasets. Further to this, the patch sampling based cross validation was conducted for the two laser scanner datasets. In this case, the data was gridded into 5 m (for Tom Price dataset) or 10 m (for West Angelas dataset) patches. Subsequently a 10 fold cross validation was performed by randomly selecting different sets of patches for testing and training in each cycle. The uniform sampling method was meant to evaluate the method as such. The patch sampling method was done with a view of testing the different techniques for their robustness to handling occlusions or voids in data.","The results of the cross validation with uniform sampling experiments are summarized in the following 3 tables.",{"@attributes":{"id":"p-0132","num":"0149"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"center"}},"thead":{"row":{"entry":"TABLE 4"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Tom Price dataset 10-fold cross validation with uniform sampling"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"1000 test data per fold","10000 test data per fold"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"56pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Mean MSE","Std. Dev. MSE","Mean MSE","Std. Dev. MSE"]},{"entry":["Interpolation Method","(sq m)","(sq m)","(sq m)","(sq m)"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["GP Neural Network","0.0107","0.0012","0.0114","0.0004"]},{"entry":["GP Squared Exponential","0.0107","0.0013","0.0113","0.0004"]},{"entry":["Nonparametric Linear","0.0123","0.0047","0.0107","0.0013"]},{"entry":["Nonparametric Cubic","0.0137","0.0053","0.0120","0.0017"]},{"entry":["Nonpararnetric Biharmonic","0.0157","0.0065","0.0143","0.0019"]},{"entry":["Nonparametric","0.0143","0.0010","0.0146","0.0007"]},{"entry":["Mean-of-neighborhood",{},{},{},{}]},{"entry":["Nonparametric","0.0167","0.0066","0.0149","0.0017"]},{"entry":["Nearet-neighbor",{},{},{},{}]},{"entry":["Parametric Linear","0.0107","0.0013","0.0114","0.0005"]},{"entry":["Parametric Quadratic","0.0110","0.0018","0.0104","0.0005"]},{"entry":["Parametric Cubic","0.0103","0.0018","0,0103","0.0005"]},{"entry":["Triangulation Linear","0.0123","0.0046","0.0107","0.0013"]},{"entry":["Triangulation Cubic","0.0138","0.0053","0.0120","0.0017"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0133","num":"0150"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 5"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Kimberlite Mine dataset 10-fold cross validation with "},{"entry":"uniform sampling"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Mean MSE ","Std. Dev. MSE "]},{"entry":["Interpolation Method","(sq m)","(sq m)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["GP Neural Network","\u2002\u20023.9290","0.3764"]},{"entry":["GP Squared Exponential","\u2002\u20025.3278","0.3129"]},{"entry":["Nonparametric Linear","\u2002\u20025.0788","0.6422"]},{"entry":["Nonparametric Cubic","\u2002\u20025.1125","0.6464"]},{"entry":["Nonparametric Biharmonic","\u2002\u20025.5265","0.5801"]},{"entry":["Nonparametric","132.5097","2.9112"]},{"entry":["Mean-of-neighborhood",{},{}]},{"entry":["Nonparametric","\u200220.4962","2.5858"]},{"entry":["Nearest-neighbor",{},{}]},{"entry":["Parametric Linear","\u200243.1529","2.2123"]},{"entry":["Parametric Quadratic","\u200213.6047","0.9047"]},{"entry":["Parametric Cubic","\u200210.2484","0.7282"]},{"entry":["Triangulation Linear","\u2002\u20025.0540","0.6370"]},{"entry":["Triangulation Cubic","\u2002\u20025.1091","0.6374"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0134","num":"0151"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"center"}},"thead":{"row":{"entry":"TABLE 6"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"West Angelas dataset 10-fold cross validation with uniform sampling"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"1000 test data per fold","10000 test data per fold"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"49pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Mean MSE","Std. Dev. MSE","Mean MSE","Std. Dev. MSE"]},{"entry":["Interpolation Method","(sq m)","(sq m)","(sq m)","(sq m)"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["GP Neural Network","0.0166","0.0071","0.0219","0.0064"]},{"entry":["GP Squared Exponential","0.4438","1.0289","0.7485","0.7980"]},{"entry":["Nonparametric Linear","0.0159","0.0075","0.0155","0.0021"]},{"entry":["Neuparametric Cubic","0.0182","0.0079","0.0161","0.0021"]},{"entry":["Nonparametric Biharmonic","0.0584","0.0328","0.1085","0.1933"]},{"entry":["Nonparametric","0.9897","0.4411","0.9158","0.0766"]},{"entry":["Mean-of-neighborhood",{},{},{},{}]},{"entry":["Nonparametric","0.1576","0.0271","0.1233","0.0048"]},{"entry":["Nearest-neighbor",{},{},{},{}]},{"entry":["Parametric Linear","0.1010","0.0951","0.0027","0.0173"]},{"entry":["Parametric Quadratic","0.0468","0.0130","0.0390","0.0059"]},{"entry":["Parametric Cubic","0.0341","0.0109","0.0288","0.0038"]},{"entry":["Triangulation Linear","0.0162","0.0074","0.0157","0.0022"]},{"entry":["Triangulation Cubic","0.0185","0.0078","0.0166","0.0023"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},"The tabulated results depict the mean and standard-deviation in MSE values obtained across the 10 folds of testing performed.","The results of the cross validation with patch sampling experiments performed on the Tom Price and West Angelas datasets are summarized in the following tables.",{"@attributes":{"id":"p-0137","num":"0154"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"thead":{"row":{"entry":"TABLE 7"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Tom Price dataset 10-fold cross validation with patch sampling"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"1000 test data per fold","10000 test data per fold"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"49pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Mean MSE","Std. Dev. MSE","Mean MSE","Std. Dev. MSE"]},{"entry":["Interpolation Method","(sq m)","(sq m)","(sq m)","(sq m)"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["GP Neural Network","0.0104","0.0029","0.0100","0.0021"]},{"entry":["GP Squared Exponential","0.0103","0.0029","0.0099","0.0021"]},{"entry":["Nonparametric Linear","0.0104","0.0047","0.0098","0.0040"]},{"entry":["Nonparametric Cubic","0.0114","0.0054","0.0108","0.0045"]},{"entry":["Nonparametric Biharmonic","0.0114","0.0046","0.0124","0.0047"]},{"entry":["Nouparanwtrie","0.0143","0.0036","0.0142","0.0026"]},{"entry":["Mean-of-neighborhood",{},{},{},{}]},{"entry":["Nonparametric","0.0139","0.0074","0.0132","0.0048"]},{"entry":["Nearest-neighbor",{},{},{},{}]},{"entry":["Parametric Linear","0.0103","0.0029","0.0100","0.0021"]},{"entry":["Parametric Quadratic","0.0099","0.0029","0.0091","0.0022"]},{"entry":["Parametric Cubic","0.0097","0.0027","0.0605","0.1072"]},{"entry":["Triangulation Linear","0.0104","0.0047","0.0098","0.0039"]},{"entry":["Triangulation Cubic","0.0114","0.0054","0.0108","0.0045"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0138","num":"0155"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"thead":{"row":{"entry":"TABLE 8"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"West Angelas dataset 10-fold cross validation with patch sampling"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"1000 test data per fold","10000 test data per fold"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"49pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Mean MSE","Std. Dev. MSE","Mean MSE","Std. Dev. MSE"]},{"entry":["Interpolation Method","(sq m)","(sq m)","(sq m)","(sq m)"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["GP Neural Network","0.0286","0.0286","0.0291","0.0188"]},{"entry":["GP Squared Exponential","0.7224","1.1482","1.4258","2.0810"]},{"entry":["Nonparametric Linear","0.0210","0.0168","0.0236","0.0161"]},{"entry":["Nonparernetric Cubic","0.0229","0.0175","0.0243","0.0165"]},{"entry":["Nonparametric Biharmonic","0.0555","0.0476","0.0963","0.0795"]},{"entry":["Nonparametric","1.6339","0.8907","1.7463","1.2831"]},{"entry":["Mean-of-neighborhood",{},{},{},{}]},{"entry":["Nonparametric","0.1867","0.0905","0.2248","0.1557"]},{"entry":["Nearest-neighbor",{},{},{},{}]},{"entry":["Parametric Linear","0.1400","0.0840","0.1553","0.1084"]},{"entry":["Parametric Quadratic","0.0612","0.0350","0.0658","0.0434"]},{"entry":["Parametric Cubic","0.0380","0.0196","0.0752","0.0880"]},{"entry":["Triangulation Linear","0.0212","0.0169","0.0235","0.0160"]},{"entry":["Triangulation Cubic","0.0232","0.0175","0.0245","0.0164"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},"In each of these tests, the GP representation with its Kriging interpolation technique, stationary or non-stationary kernel and local approximation strategy is compared with elevation maps using various parametric, non-parametric interpolation techniques as well as the exact same local approximation method as the GP and also with TINs using triangle based interpolation techniques. The former two approaches thus operate on exactly the same neighbourhood of training\/evaluation data during the estimation\/interpolation process. In order to compare the proposed GP modelling approach with a TIN representation, the local approximation is not applied on the latter class of interpolation techniques.","From the experimental results presented, many inferences on the applicability and usage of different techniques could be drawn. The results obtained validate the findings from the previous set of experiments. They show that the NN kernel is much more effective at modelling terrain data than the SQEXP kernel. This is particularly true in relatively sparse and\/or complex datasets such as the Kimberlite Mine or West Angelas datasets.","For relatively flat terrain such as the Tom Price scan data, the techniques compared performed more or less similarly. From the GP modelling perspective, the choice of nonstationary or stationary kernel was less relevant in such a scenario. The high density of data in the scan was likely another contributive factor.","For sparse datasets such as the Kimberlite Mine dataset, GP-NN easily outperformed all the other interpolation methods. This is quite simply because most other techniques imposed apriori models on the data whereas the GP-NN was actually able to model and adapt to the data at hand much more effectively. Further, GP SQEXP is not as effective as the GP-NN in handling sparse or complex data.","In the case of the West Angelas dataset, the data was complex in that it had a poorly defined structure and large areas of the data were sparsely populated. This was due to large occlusions as the scan was a bottom-up scan from one end of the mine pit However, the dataset spanned over a large area and local neighbourhoods (small sections of data) were relatively at. Thus, while the GP-NN clearly outperformed the GP-SQEXP, it performed comparably with the piecewise linear\/cubic and triangle based linear\/cubic methods and much better than the other techniques attempted. Thus, even in this case, the GP-NN proved to be a very competitive modelling option. GP-SQEXP was not able to handle sparse data or the complex structure (with an elevation difference of 190 m) effectively and hence performed poorly in relation to the aforementioned methods.","The non-parametric and triangle based linear\/cubic interpolation techniques performed much better than the parametric interpolation techniques, which fared poorly overall. This is expected and intuitive as the parametric models impose apriori models over the whole neighbourhood of data whereas the non-parametric and triangle based techniques basically split the data into simplexes (triangular or rectangular patches) and then operate only one such simplex for a point of interest. Thus their focus is more towards smooth local data fitting. The parametric techniques only performed well in the Tom Price dataset tests due to the at nature of the dataset. Among the nonparametric techniques, the linear and cubic also performed better than the others. The nearest-neighbour and mean-of-neighbourhood methods were too simplistic to be able to handle any complex or sparse data.","The results show that the GP-NN is a very versatile and competitive modelling option for a range of datasets, varying in complexity and sparseness. For dense datasets or relatively at terrain (even locally at terrain), the GP-NN will perform as well as the standard grid based methods employing any of the interpolation techniques compared or a TIN based representation employing triangle based linear or cubic interpolation. For sparse datasets or very bumpy terrain, the GP-NN will significantly outperform every other technique that has been tested in this experiment. When considering the other advantages of the GP approach such as Bayesian model fitting, ability to handle uncertainty and spatial correlation in a statistically sound manner and multi-resolution representation of data, the GP approach to terrain representation seems to have a clear advantage over standard grid based or TIN based approaches.","These experiments compared the GP-Kriging interpolation technique with various other standard interpolation methods. The GP modelling approach can use any of the standard interpolation techniques through the use of suitably chosen\/designed kernels. For instance, a GP-linear kernel performs the same interpolation as a linear interpolator, however, the GP also provides the corresponding uncertainty estimates among other things. The GP is more than just an interpolation technique. It is a Bayesian framework that brings together interpolation, linear least squares estimation, uncertainty representation, non-parametric continuous domain model fitting and the Occam's Razor principle (thus preventing the over-fitting of data). Individually, these are well known techniques; the GP provides a flexible (in the sense of using different kernels) technique to do all of them together.","Thus, this set of experiments statistically evaluated the proposed GP modelling approach, compared stationary and non-stationary GPs for terrain modelling, compared the GP modelling\/Kriging interpolation approach to elevation maps using many standard interpolation techniques as well as TIN representations using triangle based interpolation techniques.","4.3. Further Analysis","These further experiments were mostly conducted on the Kimberlite Mine data set owing to its characteristic features (gradients, roadways, faces etc.). Only small numbers of training data have been used in these experiments in order to facilitate rapid computation. The mean squared error values will thus obviously not be near the best case scenario, however the focus of these experiments was not on improving accuracy but rather on observing trends and understanding dependencies.","Among the experiments performed, three different optimization strategies were attempted\u2014stochastic (simulated annealing), gradient based (Quasi-Newton optimization with BFGS Hessian update) and the combination (first a simulated annealing, followed by the Quasi-Newton optimization with the output of the previous stage being the input to this one). The results obtained are shown in the table below:",{"@attributes":{"id":"p-0151","num":"0168"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 9"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Optimization Strategy-GP-NN applied on "},{"entry":"Kimberlite Mine data set"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Mean Squared Error "]},{"entry":[{},"Optimization Method","(sq m)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Stochastic (Simulated Annealing)","\u200294.30"]},{"entry":[{},"Gradient based ","150.48"]},{"entry":[{},"(Quasi-Newton Optimization)",{}]},{"entry":[{},"Combined","\u2002\u20024.61"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"The objective of this experiment was to start from a random set of hyper-parameters and observe which method converges to a better solution. It was found that the combined strategy performed best. The gradient based optimization requires a good starting point or the optimizer may get stuck in local minima. The stochastic optimization (simulated annealing) provides a better chance to recover from local minima as it allows for \u201cjumps\u201d in the parameter space during optimization. Thus, the combination first localizes a good parameter neighbourhood and then zeros-down on the best parameters for the given scenario.","Three different sampling strategies have been attempted in this work\u2014uniform sampling, random sampling, heuristic sampling (implemented here as a preferential sampling around elevation gradients). All experiments have been performed using a uniform sampling strategy as it performed the best.","The three sampling strategies were specifically tested on the Kimberlite Mine data set owing to its significant elevation gradient. The results obtained are shown in the table below:",{"@attributes":{"id":"p-0155","num":"0172"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 10"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Sampling Strategy-GP-NN applied on Kimberlite Mine data"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Number(Train Data) = 1000","Number(Train Data) = 1500"]},{"entry":["Method","Mean Squared Error (sq m)","Mean Squared Error (sq m)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Uniform","\u20028.87","\u20025.87"]},{"entry":["Random","10.17","\u20027.89"]},{"entry":["Heuristic","32.55","11.48"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Heuristic sampling did poorly in comparison to the other sampling methods because of the fact that the particular gradient based sampling approach applied here resulted in the use of mostly gradient information and little or no face information. Increasing the number of training data increases the number of face related data points and reduces the amount of error. At the limit (number of training data=number of data), all three approaches would produce the same result.","The number of nearest neighbours used for the local approximation step in the inference process is another important factor influencing the GP modelling process. Too many nearest neighbours results in excessive \u201csmoothing\u201d of the data whereas too few of them would result in a relatively \u201cspiky\u201d output. Further, the greater the number of neighbours considered, the more the time it takes to estimate\/interpolate the elevation (an increase in computational complexity). The \u201ccorrect\u201d number of nearest neighbours was determined by computing the MSE for different neighbourhood sizes and interpreting the results. This experiment was conducted on both the Kimberlite Mine and the West Angelas datasets. The results of this experiment are shown in the following two tables:",{"@attributes":{"id":"p-0158","num":"0175"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 11"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"GP-NN applied on Kimberlite Mine data set "},{"entry":"(3000 training data, 1000 test data)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Number of ","MSE"]},{"entry":[{},"Neighbors","(sq m)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"\u200210","4.5038"]},{"entry":[{},"\u200250","4.2214"]},{"entry":[{},"100","4.1959"]},{"entry":[{},"150","4.1859"]},{"entry":[{},"200","4.1811"]},{"entry":[{},"250","4.1743"]},{"entry":[{},"300","4.1705"]},{"entry":[{},"350","4.1684"]},{"entry":[{},"400","4.1664"]},{"entry":[{},"450","4.1652"]},{"entry":[{},"500","4.1642"]},{"entry":[{},"550","4.1626"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0159","num":"0176"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 12"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"GP-NN applied on West Angelas mine data set "},{"entry":"(3000 training data 1000 test data)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Number of ","MSE "]},{"entry":[{},"Neighbors","(sq m)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"\u200210","0.082"]},{"entry":[{},"\u200250","0.017"]},{"entry":[{},"100","0.020"]},{"entry":[{},"150","0.023"]},{"entry":[{},"200","0.026"]},{"entry":[{},"250","0.027"]},{"entry":[{},"300","0.028"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"With an aim of (a) choosing a reasonable sized neighbourhood, (b) obtaining reasonably good MSE performance and time complexity and (c) if possible, using a single parameter across all experiments and datasets, a neighbourhood size of 100 was used in this work.","The size of the training data is obviously an important factor influencing the modelling process. However, this depends a lot on the data set under consideration. For the Tom Price laser scanner data, a mere 3000 of over 1.8 million data points were enough to produce centimeter level accuracy. This was due to the fact that this particular data set comprised of dense and accurate scanner data with a relatively lower change in elevation. The same number of training data also produced very satisfactory results in the case of the West Angelas dataset which is both large and has a significant elevation gradient\u2014this is attributed to the uniform sampling of points across the whole dataset and adaptive power of the NN kernel. The Kimberlite Mine data set comprised of very sparse data spread over a very large area. This data set also had a lot of \u201cfeatures\u201d such as roads, \u201ccrest-lines\u201d and \u201ctoe-lines\u201d. Thus, if the amount of training data is reduced (say 1000 of the 4612), while the terrain was still broadly reconstructed, the finer details\u2014faces, lines, roads etc. were smoothened out. Using nearly the entire data set for training and then reconstructing the elevation\/surface map at the desired resolution provided the best results.","A combination of stochastic (simulated annealing) and gradient based (Quasi-Newton) optimization was found to be the best option to obtain the GP hyperparameters.","For most datasets and particularly for dense and large ones, a uniform sampling procedure was a good option. For feature rich datasets, a heuristic sampling might be attempted but care must be taken to ensure that training data from the non-feature-rich areas are also obtained. The number of nearest neighbours affected both the time complexity as well as the MSE performance. A trade-off between these was applied to empirically determine that the experiments would use 100 nearest neighbours. Finally, the number of training data depends on the computational resources available and on the richness of the dataset. A dataset such as the Kimberlite Mine dataset needed more training data than the Tom Price dataset.","This invention addresses the use of Gaussian Processes for modelling large scale and complex terrain. The GP representation naturally provides a multi-resolution representation of large scale terrain, effectively handles both uncertainty and incompleteness in a statistically sound way and provides a powerful basis to handle correlated spatial data in an appropriate manner. Experiments performed on a simulated and real sensor data validated these aspects.","Prior art digital terrain representations generally do not have a statistically sound way of incorporating and managing uncertainty. The assumption of statistically independent measurement data is a further limitation of many of many works that have used these approaches. While there are several interpolation techniques known, the independence assumption can lead to simplistic (simple averaging like) techniques that result in an inaccurate modelling of the terrain. Further, the limited perceptual capabilities of sensors renders most sensory data incomplete.","The method of this invention incorporates sensor uncertainty and uses it for learning the terrain model. Estimation of data at unknown locations is treated as a regression problem in 3D space and takes into account the correlated nature of the spatial data.","This technique is also used to overcome sensor limitations in that gaps in sensor data can be filled with the best linear unbiased estimates given the model of the data. The representation is a continuous domain, compact and nonparametric representation of the terrain and hence can readily be used to create terrain maps at any required resolution.","The foregoing description shows that a single non-stationary kernel (neural-network) Gaussian Process is successfully able to model large scale and complex terrain data taking into account the local smoothness as well as preserving much of the spatial features in the terrain. A further contribution to this effect is a local approximation methodology based on a \u201cmoving-window\u201d methodology and implemented using KD-Trees. This incorporates the benefits of the use of stationary and non-stationary kernel in the elevation estimation process. The use of the KD-Tree based local approximation technique also enables this work to take into account scalability considerations for handling large scale, complex terrain so that very large datasets can be accommodated. The end-result is a multi-resolution representation of space that incorporates and manages uncertainty in a statistically sound way and also handles spatial correlations between data in an appropriate manner.","Experiments conducted on real sensor data obtained from GPS and Laser scanner based surveys in real application scenarios (mining) clearly suggest the viability of the proposed representation.","Cross validation experiments were used to provide statistically representative performance measures, compare the GP approaches with several other interpolation methods using both grid\/elevation maps as well as TIN's and understand the strengths and applicability of different techniques. These experiments demonstrated that for dense and\/or relatively at terrain, the GP-NN would perform as well as the grid based methods using any of the standard interpolation techniques or TIN based methods using triangle based interpolation techniques. However, for sparse and\/or complex terrain data, the GP-NN would significantly outperform alternative methods. Thus, the GP-NN proved to be a very versatile and effective modelling option for terrain of a range of sparseness and complexity. Experiments conducted on multiple real sensor data sets of varying sparseness, taken from a mining scenario clearly validated the claims made. The data sets included dense laser scanner data and sparse mine planning data that was representative of a GPS based survey. Not only are the kernel choice and local approximation method unique to this work on terrain modelling, the approach as a whole is novel in that it addressed the problem at a scale never attempted before with this particular technique.","The model obtained naturally provided a multi-resolution representation of large scale terrain, effectively handled both uncertainty and incompleteness in a statistically sound way and provided a powerful basis to handle correlated spatial data in an appropriate manner. The Neural Network kernel was found to be much more effective than the squared exponential kernel in modelling terrain data. Further, the various properties of the neural network kernel including its adaptive power and of being a universal approximator make it an excellent choice for modelling data, particularly when no apriori information (eg, the geometry of the data) is available or when data is sparse, unstructured and complex. This has been consistently demonstrated throughout this paper. Where domain information is available (eg. a flat surface), a domain specific kernel (eg. linear kernel) may perform well but the NN kernel would still be very competitive. Thus, this work also suggests further research in the area of kernel modelling\u2014particularly combinations of kernels and domain specific kernels.","In summary, the non-parametric, probabilistic, multi-scale approach to representing and interpolating large scale terrain data presented herein provides a number of advantageous features, including:","(1) The ability to model spatial data on the scale of a mine.",{"@attributes":{"id":"p-0173","num":"0000"},"ul":{"@attributes":{"id":"ul0009","list-style":"none"},"li":{"@attributes":{"id":"ul0009-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0010","list-style":"none"},"li":["The method provides the ability to model spatial data of very large sizes. This ability is exemplified by (but not limited to) the ability of the method to model data that survey mines.\n\n(2) The ability to learn, represent large scale spatial data using only a subset of it.\n","The method uses only a small subset of a very large dataset to learn, represent and interpolate the spatial data. Any of the sampling techniques may be used. Examples include (and are not limited to) random, uniform and informed\/heuristic (sampling around areas of high gradient) sampling techniques.\n\n(3) Use of an efficient data structure for storing spatial data.\n","Data used to learn the terrain model is stored in an efficient data structure for storage of spatial data\u2014KD-Trees. The use of this data structure enables rapid data access during the application of this methodology. Other data structures may also be used as the method is generic.\n\n(4) The ability to learn models of large scale spatial data.\n","The method provides the ability to model and represent large scale terrain data.\n\n(5) A non-parametric, probabilistic, multi-scale representation of data.\n","The method provides a non-parametric representation of the data in that no explicit assumption is made on the underlying functional model of the data. The representation produced is probabilistic in that it explicitly encodes (in a statistically sound way) an uncertainty estimate for all spatial data represented.\n\n(6) The use of non-stationary kernels to model large scale spatial data.\n","The method employs non-stationary kernels to model the spatial variation in the dataset. The use of these kernels provides the ability to work with discontinuities in data.\n\n(7) The ability to interpolate spatial data in regions containing voids.\n","The method provides an ability to interpolate spatial data in regions that contain voids. These voids may occur due to various reasons including (but not limited to) sensor limitations and the configuration of the space to be modeled.\n\n(8) The ability to segment and fuse partial models of the whole model.\n","The method provides a strong and statistically sound framework for the segmentation and fusion of partial\/local models of spatial data.\n\n(9) The ability to handle spatially correlated data.\n","This method provides the ability to incorporate or use spatially correlated data. The method is thus able to account for the fact that data in a region will depend on data from other regions. State of the art algorithms typically assume statistical independence as a way of simplifying the modelling problem.\n\n(10) The ability of handle spatial data from different sensors.\n","The method provides for a statistically sound framework to incorporate and use spatial information from different sensory modalities.\n\n(11) The ability to handle noisy spatial data appropriately.\n","The method incorporates and manages (in a statistically sound way) an uncertainty measure for all modelled spatial data. Thus, this approach can work with any sensor of spatial data\u2014noisy or good quality ones. Further, the approach also has the ability to filter out noise in the output (digital elevation\/surface maps) it generates."]}}}},"Although not required, the embodiments described herein can be implemented as an application programming interface (API) or as a series of libraries for use by a developer, or can be included within another software application, such as a terminal or personal computer operating system or a portable computing device operating system. Generally, as program modules include routines, programs, objects, components and data files which work together to perform particular functions, it will be understood that the functionality of the embodiment and of the broader invention claimed herein may be distributed across a number of routines, programs, objects components or data files, as required.","It will also be appreciated that where the method and system in accordance with at least an embodiment of the present invention are implemented with the aid of a computing system, or partly implemented by a computing system, any appropriate computing system architecture may be utilised. This includes stand alone computers, network computers, dedicated computing devices, or any device capable of receiving and processing information or data. Where the terms \u201ccomputing system\u201d and \u201ccomputing devices\u201d are utilised throughout the specification, these terms are intended to cover any appropriate arrangement of computer hardware and\/or software required to implement at least an embodiment of the invention.","It will be appreciated by a person skilled in the art that numerous variations and\/or modifications may be made to the invention as shown in the specific embodiments without departing from the spirit or scope of the invention as broadly described and claimed. The present embodiments are, therefore, to be considered in all respects as illustrative and not restrictive. In particular, the embodiments are presented by way of example only and are not intended to limit the scope of the invention, which may include any suitable combination of novel features herein disclosed."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention in its detail will be better understood through the following description of an embodiment and example applications thereof, together with the illustrations in the accompanying drawings in which:",{"@attributes":{"id":"p-0041","num":"0043"},"figref":"FIG. 1","i":"a "},{"@attributes":{"id":"p-0042","num":"0044"},"figref":"FIG. 1","i":"b "},{"@attributes":{"id":"p-0043","num":"0045"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0044","num":"0046"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0045","num":"0047"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
