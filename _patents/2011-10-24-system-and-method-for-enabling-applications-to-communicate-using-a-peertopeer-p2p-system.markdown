---
title: System and method for enabling applications to communicate using a peer-to-peer (P2P) system
abstract: A method and system are provided for enabling applications on a mobile device to utilize a peer-to-peer platform on the mobile device. The method comprises providing an interface between an application and a peer-to-peer (P2P) platform on the mobile device; obtaining data from the application; using the P2P platform to include the data from the application in a P2P message; and sending the P2P message to another mobile device to enable a complementary application on the other mobile device to utilize the data from the application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08762467&OS=08762467&RS=08762467
owner: BlackBerry Limited
number: 08762467
owner_city: Waterloo
owner_country: CA
publication_date: 20111024
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application claims priority from U.S. Provisional Patent Application No. 61\/406,386 filed Oct. 25, 2010, the contents of which are incorporated herein by reference.","The following relates to systems and methods for enabling applications to communicate using a P2P system.","Many applications that can be installed on an electronic communication device involve interactions with other devices. Such applications include, without limitation, multi-player gaming, social media applications, mobile commerce applications, online auctions, file sharing applications, music sharing applications, location based applications, etc.","Typically, the types of applications discussed above are developed such that a central server is used to store a repository of data that is used by the respective applications and, often, to download and install the applications themselves. Such a central server can be seen as burdensome due to the additional administrative overhead, additional network infrastructure and sometimes the need for additional protocols to enable devices to communicate with each other via the server.","It has been recognized that network efficient applications can be developed and deployed on electronic communication devices, particularly mobile devices, by enabling such applications to utilize a P2P platform on the device. An application platform is described below, which can interface with the P2P platform on the device to provide access to contacts, user profiles, and P2P messaging capabilities that already exist in the P2P platform. In this way, various applications can be developed on a platform that enables the applications to communicate in a P2P manner without requiring a dedicated central server to maintain both the applications and application specific data.","Turning to , an example communication system  is shown. The communication system  in this example, at least in part, enables mobile devices, commonly referred to by numeral  (or using numeral  as a prefix\u2014e.g. mobile device A, also denoted by A and mobile device B, also denoted by B), to communicate via a peer-to-peer (P2P) system  via a wireless network . It will be appreciated that two mobile devices A, B shown in  are for illustrative purposes only and many other mobile devices  (not shown) may also be capable of communicating with or within the communication system . The P2P system  is, in this example, a component of a wireless infrastructure  associated with the wireless network . The wireless infrastructure  in this example comprises, in addition to the P2P system , an application distribution service  that enables mobile devices  to download and install applications, and an administration (admin) server , which provides administrative access to an administrator (admin) , e.g. for controlling various aspects of the communication system  and the mobile devices , for example, by way IT policies, control messages, and the like.","In addition to the application distribution service  which, in this example, is a component of the wireless infrastructure , a trusted third party application service  may also be accessible to the mobile devices  in order to download and install applications developed by 3party developers . It can be appreciated that, as shown in , the 3party developers  may also be permitted by the wireless infrastructure  to develop and deploy new applications to the application distribution service . It can also be appreciated that, although not shown, other 3party services may also be capable of developing applications that can be downloaded and installed on the mobile devices  and may be verified or otherwise approved for use by the wireless infrastructure  and\/or mobile device .","In the example shown in , the mobile device A may communicate with the admin server  and vice versa via the P2P system , in order to register applications and to enable the admin server  to control applications on the mobile device A, as will be explained in greater detail below. The mobile device A may also communicate with the application distribution service  and vice versa via the P2P system , in order to download an application to be installed thereon. The mobile device A may also communicate with the mobile device B and vice versa via the P2P system , in order to perform P2P messaging as will be explained in greater detail below. The 3party application service  in this example may be accessed via the wireless network  (e.g. using a browser). As noted above, it has been found that by leveraging a P2P platform on the mobile devices , an application platform can be used to enable various applications to exchange data and otherwise utilize the P2P system  as a transport mechanism to exchange data between devices . For example, the mobile devices  may have an existing instant messaging (IM) system that operates using a P2P protocol and this protocol can be made available to other applications which may include, without limitation, multi-player gaming, social media applications, mobile commerce applications, online auctions, file sharing applications, music sharing applications, location based applications etc. By using a P2P system  rather than a central server, the applications can perform in a more efficient manner.","For example, as shown in , the P2P system  can be operable to enable a single P2P message  to be sent to multiple recipients by addressing the P2P message  to multiple corresponding P2P addresses, and having the P2P system  multicast the message  to those recipients. In the example shown in  a multicast approach enables the sender (mobile device A) to only require one message  in order to send the same data to multiple recipients (mobile devices B, C, and D for example). As such, the P2P system  not only eliminates the need for a central server and repository to maintain application data, each mobile device  can manage such application data for its own sphere of contacts in an efficient manner, in particular by taking advantage of the multicast abilities of the P2P system . In other words, each mobile device  can be provided with a platform to share information and data with a finite number of other \u201ccontacts\u201d whereby collectively, the platforms of all mobile devices  provide the capabilities of a central server without requiring the inherent additional network overhead.","Turning now to , an example configuration is shown for enabling applications  on each of mobile devices A and B to access a respective P2P platform . In this example, the P2P platform  comprises a P2P messaging component or module , which enables P2P messages  to be sent to corresponding P2P platforms  of other mobile devices . In this example, the P2P platform  is normally utilized by a P2P application , e.g. an IM application. The P2P platform  also comprises or otherwise has access to a contact list  comprising one or more contacts that correspond to other users of a P2P application (e.g. an IM application). The contacts in the contact list  are often commonly referred to as \u201cbuddies\u201d, in particular in IM environments. The P2P platform  also comprises user profile data  which may include, for example, avatars, status\/presence information, a current status message, location, barcode, preferences\/options, etc.","An application platform  interfaces with the P2P platform  (e.g. via one or more application programming interfaces (APIs)) to enable one or more applications  to have access to P2P messaging , contact list , and user profiles  managed and used by the P2P platform . For example, the P2P platform  may be utilized and\/or provided by an IM application with the P2P messaging  and P2P messages  normally providing IM capabilities for communicating with the contacts in the contact list . The application platform  would then leverage the existing capabilities of the IM platform to use an IM messaging protocol as a transport mechanism for application data. As will be explained in greater detail below, this enables mobile devices  to obtain information regarding their contacts with respect to applications  on the application platform , for example to determine who has what applications. By having the application platforms  continually update each other via their respective P2P platforms , such information and other \u201cplatform data\u201d can be immediately available to the applications , even upon installation.","In order to provide some control over the distribution of applications  amongst mobile devices , e.g. to prevent malicious code from spreading, the application platform  may be required to register applications  that are downloaded with the admin server . As shown in , a register request message  can be sent to the admin server  by the application platform  via the P2P platform . The admin server  in this example stores a list  or other repository of registered applications and associated unique identifiers (IDs) to enable the registration to occur. As will be explained in greater detail below, by assigning a unique ID to each application, upon installing an application , the application platform  can use the P2P system  to provide an application ID for the application whereupon the admin server  can verify its credentials and match the ID with those in its list . Similarly, the admin server  can use the P2P system  to send application control messages  down to the mobile devices  in order to control the applications , e.g. to terminate a troublesome application, suspend operation during fixes, apply upgrades, etc. The registration and control messages ,  may therefore typically be considered as being in the same format as the P2P messages  and are only shown with different reference numerals for ease of explanation.","A P2P message  is shown in greater detail in , and has a format that is particularly suitable for a PIN-to-PIN based system. In a typical P2P protocol  (see also ), each P2P message  has associated therewith a source corresponding to the mobile device  which has sent the P2P message  and includes a destination identifying the one or more intended recipients. Each P2P message  in this example comprises a body , which contains the content for the P2P message  (e.g. text or other data), and a header , which contains various fields used for transmitting and processing each P2P message . In this example, the header  includes a message type field  to specify the type of transmission (e.g. chat, registration, block, presence, etc.), a source field  to specify the device address for the sender, a destination field  to specify the device address(es) for the one or more intended recipients, an ID field  to identify the application , , and a timestamp field  to indicate the time (and if desired, the date) at which the P2P message  was sent by the designated sender.","It can be appreciated that in this example, the ID field  can be used to specify the application ID to identify an application  on the application platform , as well as the P2P application . Where the P2P platform  provides, for example, an IM system, the message type field  can also be used to designate an IM communication, and the ID field  would then correspond to a conversation ID, i.e. a conversation thread the message  corresponds to (e.g. such that each message  is identified by the conversation in which it was sent). However, it can be appreciated that the ID field  can also be structured to indicate both that an IM application (e.g. P2P application ) is being used and what conversation it relates to. Therefore, the header fields - can be used to identify the application, system or platform that is utilizing the P2P message  as well as to what device or devices the P2P message  is to be sent. In this way, the P2P message  and P2P platform  can be leveraged to allow other applications installed on the mobile device  to operate in a \u201cserverless\u201d manner.","It will be appreciated that other information or attributes may be included in the P2P message , such as a subject field (not shown) to enable a subject for part or all of a conversation (in an IM embodiment) to be transported with the P2P message  (e.g. to create new subjects, modify subjects, notify others of subjects, etc.), or application details field (not shown) to provide application-specific information such as the version and capabilities of the application.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 5","FIG. 5"],"b":["34","34","64","36","32","64","36","22","66","32","68","18","70","34","18","16","70","32","64","72","72","76","36","78","10","34","42","80","34","34","34","42"]},"Various message types can be sent as P2P messages . As shown by way of example in , these may include invite messages, update messages, and permission control messages (which may also be considered a type of update message). Details of these various message types will be provided below.","In order to protect the platform data  and data associated with the contact list  from being exposed to the applications  supported by the application platform  (e.g. PIN numbers), a contact selector  can be provided. The contact selector  can be provided by the application platform  to the applications  when an application  requires selection of one or more contacts (e.g. to prepare an invitation to join, etc.). In this way, the capabilities and data provided by the P2P platform  which enable the application platform  to operate can be kept transparent to the applications  and users thereof in order to avoid compromising the P2P platform  and in turn the P2P system  and wireless infrastructure . Further details of the contactor selector  will be provided later.","Turning now to , a configuration is shown that is suitable for a user of mobile device A, hereafter referred to as mobile device A, to conduct a P2P communication (e.g. instant messaging, application on application platform , etc.) with buddies included in their contact list . It can be seen in  that the P2P system  is incorporated into the wireless infrastructure  of the wireless network . The P2P system  can utilize any suitable P2P protocol  operated by a P2P router , in this example as part of the wireless infrastructure . It can be appreciated however that a stand-alone P2P configuration (i.e. that does not rely on the wireless infrastructure \u2014not shown) may equally apply the principles herein. The example configuration shown in  is particularly suitable for implementing a PIN-based messaging system. As can be seen, the P2P messaging router  may also enable mobile devices  to communicate with desktop computers  thus facilitating, for example, communications such as instant messaging (IM) between mobile applications and desktop applications on the desktop computer .","In the embodiment illustrated in , a P2P-based messaging system such as a PIN-based messaging system can be implemented using a router-based communication infrastructure, such as one that provides email, SMS, voice, Internet and other communications. Particularly suitable for hosting the P2P messaging router , is a wireless router or server used in systems such as those that provide push-based communication services. In , the wireless infrastructure  facilitates P2P communications such as instant messaging between mobile device A and mobile devices for User B, User C and User D, denoted by B, C and D respectively using the P2P messaging router . It will be appreciated that the number of users participating in the example shown in  is for illustrative purposes only. P2P messaging, such as IM, is provided by an associated application stored on each mobile device A-D which can be initiated, for example, by highlighting and selecting an icon from a display as is well known in the art. The P2P messaging router  routes messages between the mobile devices A-D according to the P2P protocol . For example, the P2P protocol may define a particular way in which to conduct IM or other types of messaging.","In general, in a P2P protocol , the sender of the P2P message  knows the address of the intended recipient, e.g. a PIN. This may be established when the two devices request to add each other to their respective contact or buddy lists. It can be seen in the example shown in  that mobile device A can communicate directly with any of the mobile devices B-D through the P2P messaging router  as indicated by the short-dashed line without requiring a dedicated server for facilitating communications. In other words, the P2P messaging router  enables the mobile devices  to communicate with each other directly over the wireless infrastructure  in accordance with the P2P protocol .","When conducting a P2P session according to the embodiment shown in , the mobile devices A-D can communicate directly with the wireless infrastructure  in a client based exchange where, as noted above, an intermediate server is not required. A P2P message  sent by one mobile device  is received by the wireless infrastructure , which obtains the address for the intended recipient from information associated with the message  (e.g. a data log) or from the message  itself. Upon obtaining the recipient's address according to the P2P protocol , the wireless infrastructure  then routes the message  to the recipient associated with the mobile device  having such address. The wireless infrastructure  typically also provides a delivery confirmation to the original sender, which may or may not be displayed to the user. The destination device can also provide such delivery information. The wireless infrastructure  should be capable of routing messages  reliably and hold onto the messages  until they are successfully delivered. Alternatively, if delivery cannot be made after a certain timeout period, the wireless infrastructure  may provide a response indicating a failed delivery. The wireless infrastructure  may choose to expire a message  if a certain waiting period lapses.","Referring now to , shown therein is a block diagram of an example embodiment of a mobile device . The mobile device  comprises a number of components such as a main processor  that controls the overall operation of the mobile device . Communication functions, including data and voice communications, are performed through a communication subsystem . The communication subsystem  receives messages from and sends messages to a wireless network . In this example embodiment of the mobile device , the communication subsystem  is configured in accordance with the Global System for Mobile Communication (GSM) and General Packet Radio Services (GPRS) standards. The GSM\/GPRS wireless network is used worldwide and it is expected that these standards will be superseded eventually by 3G and 4G networks such as Enhanced Data-rates for Global Evolution (EDGE), Universal Mobile Telecommunications System (UMTS) and High-Speed Downlink Packet Access (HSDPA), Long Term Evolution (LTE), Worldwide Interoperability for Microwave Access (Wi-Max), etc. New standards are still being defined, but it is believed that they will have similarities to the network behaviour described herein, and it will also be understood by persons skilled in the art that the embodiments described herein are intended to use any other suitable standards that are developed in the future. The wireless link connecting the communication subsystem  with the wireless network  represents one or more different Radio Frequency (RF) channels, operating according to defined protocols specified for GSM\/GPRS communications. With newer network protocols, these channels are capable of supporting both circuit switched voice communications and packet switched data communications.","The main processor  also interacts with additional subsystems such as a Random Access Memory (RAM) , a flash memory , a display , an auxiliary input\/output (I\/O) subsystem , a data port , a keyboard , a speaker , a microphone , GPS receiver , short-range communications  and other device subsystems .","Some of the subsystems of the mobile device  perform communication-related functions, whereas other subsystems may provide \u201cresident\u201d or on-device functions. By way of example, the display  and the keyboard  may be used for both communication-related functions, such as entering a text message for transmission over the network , and device-resident functions such as a calculator or task list.","The mobile device  can send and receive communication signals over the wireless network  after required network registration or activation procedures have been completed. Network access is associated with a subscriber or user of the mobile device . To identify a subscriber, the mobile device  may use a subscriber module. Examples of such subscriber modules include a Subscriber Identity Module (SIM) developed for GSM networks, a Removable User Identity Module (RUIM) developed for CDMA networks and a Universal Subscriber Identity Module (USIM) developed for 3G networks such as UMTS. In the example shown, a SIM\/RUIM\/USIM  is to be inserted into a SIM\/RUIM\/USIM interface  in order to communicate with a network. The SIM\/RUIM\/USIM component  is one type of a conventional \u201csmart card\u201d that can be used to identify a subscriber of the mobile device  and to personalize the mobile device , among other things. Without the component , the mobile device  may not be fully operational for communication with the wireless network . By inserting the SIM\/RUIM\/USIM  into the SIM\/RUIM\/USIM interface , a subscriber can access all subscribed services. Services may include: web browsing and messaging such as e-mail, voice mail, SMS, and MMS. More advanced services may include: point of sale, field service and sales force automation. The SIM\/RUIM\/USIM  includes a processor and memory for storing information. Once the SIM\/RUIM\/USIM  is inserted into the SIM\/RUIM\/USIM interface , it is coupled to the main processor . In order to identify the subscriber, the SIM\/RUIM\/USIM  can include some user parameters such as an International Mobile Subscriber Identity (IMSI). An advantage of using the SIM\/RUIM\/USIM  is that a subscriber is not necessarily bound by any single physical mobile device. The SIM\/RUIM\/USIM  may store additional subscriber information for a mobile device as well, including datebook (or calendar) information and recent call information. Alternatively, user identification information can also be programmed into the flash memory .","The mobile device  is typically a battery-powered device and includes a battery interface  for receiving one or more batteries  (typically rechargeable). In at least some embodiments, the battery  can be a smart battery with an embedded microprocessor. The battery interface  is coupled to a regulator (not shown), which assists the battery  in providing power V+ to the mobile device . Although current technology makes use of a battery, future technologies such as micro fuel cells may provide the power to the mobile device .","The mobile device  also includes an operating system  and software components  to  which are described in more detail below. The operating system  and the software components  to  that are executed by the main processor  are typically stored in a persistent store such as the flash memory , which may alternatively be a read-only memory (ROM) or similar storage element (not shown). Those skilled in the art will appreciate that portions of the operating system  and the software components  to , such as specific device applications, or parts thereof, may be temporarily loaded into a volatile store such as the RAM . Other software components can also be included, as is well known to those skilled in the art.","The subset of software applications  that control basic device operations, including data and voice communication applications, may be installed on the mobile device  during its manufacture. Other software applications include a message application  that can be any suitable software program that allows a user of the mobile device  to send and receive electronic messages. Various alternatives exist for the message application  as is well known to those skilled in the art. Messages that have been sent or received by the user are typically stored in the flash memory  of the mobile device  or some other suitable storage element in the mobile device . In at least some embodiments, some of the sent and received messages may be stored remotely from the mobile device  such as in a data store of an associated host system that the mobile device  communicates with.","The software applications can further comprise a device state module , a Personal Information Manager (PIM) , and other suitable modules (not shown). The device state module  provides persistence, i.e. the device state module  ensures that important device data is stored in persistent memory, such as the flash memory , so that the data is not lost when the mobile device  is turned off or loses power.","The PIM  includes functionality for organizing and managing data items of interest to the user, such as, but not limited to, e-mail, contacts, calendar events, voice mails, appointments, and task items. A PIM application has the ability to send and receive data items via the wireless network . PIM data items may be seamlessly integrated, synchronized, and updated via the wireless network  with the mobile device subscriber's corresponding data items stored and\/or associated with a host computer system. This functionality creates a mirrored host computer on the mobile device  with respect to such items. This can be particularly advantageous when the host computer system is the mobile device subscriber's office computer system.","The mobile device  may also comprise a connect module , and an IT policy module . The connect module  implements the communication protocols that are required for the mobile device  to communicate with the wireless infrastructure and any host system, such as an enterprise system, that the mobile device  is authorized to interface with.","The connect module  includes a set of APIs that can be integrated with the mobile device  to allow the mobile device  to use any number of services associated with the enterprise system. The connect module  allows the mobile device  to establish an end-to-end secure, authenticated communication pipe with a host system (not shown). A subset of applications for which access is provided by the connect module  can be used to pass IT policy commands from the host system to the mobile device . This can be done in a wireless or wired manner. These instructions can then be passed to the IT policy module  to modify the configuration of the device . Alternatively, in some cases, the IT policy update can also be done over a wired connection.","The IT policy module  receives IT policy data that encodes the IT policy. The IT policy module  then ensures that the IT policy data is authenticated by the mobile device . The IT policy data can then be stored in the flash memory  in its native form. After the IT policy data is stored, a global notification can be sent by the IT policy module  to all of the applications residing on the mobile device . Applications for which the IT policy may be applicable then respond by reading the IT policy data to look for IT policy rules that are applicable.","Other types of software applications or components  can also be installed on the mobile device . These software applications  can be pre-installed applications (i.e. other than message application ) or third party applications, which are added after the manufacture of the mobile device . Examples of third party applications include games, calculators, utilities, etc.","The additional applications  can be loaded onto the mobile device  through at least one of the wireless network , the auxiliary I\/O subsystem , the data port , the short-range communications subsystem , or any other suitable device subsystem . This flexibility in application installation increases the functionality of the mobile device  and may provide enhanced on-device functions, communication-related functions, or both. For example, secure communication applications may enable electronic commerce functions and other such financial transactions to be performed using the mobile device .","The data port  enables a subscriber to set preferences through an external device or software application and extends the capabilities of the mobile device  by providing for information or software downloads to the mobile device  other than through a wireless communication network. The alternate download path may, for example, be used to load an encryption key onto the mobile device  through a direct and thus reliable and trusted connection to provide secure device communication.","The data port  can be any suitable port that enables data communication between the mobile device  and another computing device. The data port  can be a serial or a parallel port. In some instances, the data port  can be a USB port that includes data lines for data transfer and a supply line that can provide a charging current to charge the battery  of the mobile device .","The short-range communications subsystem  provides for communication between the mobile device  and different systems or devices, without the use of the wireless network . For example, the subsystem  may include an infrared device and associated circuits and components for short-range communication. Examples of short-range communication standards include standards developed by the Infrared Data Association (IrDA), Bluetooth, and the 802.11 family of standards developed by IEEE.","In use, a received signal such as a text message, an e-mail message, or web page download may be processed by the communication subsystem  and input to the main processor . The main processor  may then process the received signal for output to the display  or alternatively to the auxiliary I\/O subsystem . A subscriber may also compose data items, such as e-mail messages, for example, using the keyboard  in conjunction with the display  and possibly the auxiliary I\/O subsystem . The auxiliary subsystem  may comprise devices such as: a touch screen, mouse, track ball, infrared fingerprint detector, or a roller wheel with dynamic button pressing capability. The keyboard  is an alphanumeric keyboard and\/or telephone-type keypad. However, other types of keyboards may also be used, such as a virtual or \u201csoft\u201d keyboard rendered as images on a touch screen. A composed item may be transmitted over the wireless network  through the communication subsystem .","For voice communications, the overall operation of the mobile device  in this example is substantially similar, except that the received signals are output to the speaker , and signals for transmission are generated by the microphone . Alternative voice or audio I\/O subsystems, such as a voice message recording subsystem, can also be implemented on the mobile device . Although voice or audio signal output is accomplished primarily through the speaker , the display  can also be used to provide additional information such as the identity of a calling party, duration of a voice call, or other voice call related information.","It will be appreciated that any module or component exemplified herein that executes instructions may include or otherwise have access to computer readable media such as storage media, computer storage media, or data storage devices (removable and\/or non-removable) such as, for example, magnetic disks, optical disks, or tape. Computer storage media may include volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data. Examples of computer storage media include RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by an application, module, or both. Any such computer storage media may be part of the mobile device , any component of or related to the wireless infrastructure , etc., or accessible or connectable thereto. Any application or module herein described may be implemented using computer readable\/executable instructions that may be stored or otherwise held by such computer readable media.","Turning now to , example computer executable instructions are shown that may be executed by the parties indicated for developing, registering and deploying a new application  to operate on the application platform . At , the admin server  provides a software development kit (SDK) and access to APIs and other data that enables development of a P2P compatible application  to be used on the application platform . It can be appreciated that the SDK and APIs can also or instead be provided by the application distribution service  or any other suitable entity. At , a developer  obtains the SDK and APIs, e.g. by purchasing a license therefor, and develops the P2P application  at . As shown in , a subroutine A may be included in the development stage at .  illustrates the subroutine A, which enables the developer  to obtain a temporary application ID at . This allows the developer  to temporarily run the application  using the wireless infrastructure  in order to test or perform other tasks associated with the development process. As will be discussed later, the subroutine A may also be invoked by the P2P platform  or admin server  if an application  that has been downloaded does not have a registered application ID. Use of the application  may then be permitted at , e.g. for testing, and the temporary ID would expire at , e.g. after a predetermined number of days or months. The temp ID may be issued and obtained from the admin server  and the admin server  can stored the temp ID and track the expiry date so that the temp ID goes out of service at the appropriate time or after a particular number of uses, number of users, etc.","Returning to , once the application  has been developed, the developer  may then initiate a registration process with the admin server  at . The registration process enables the admin server  to verify the integrity of the application , scan the application  for malicious code or viruses, and perform any other validation or verification procedures required by the wireless infrastructure  and P2P system . The registration process also enables the admin server  to control the generation of application IDs to ensure that they are unique. Moreover, by keeping track of application IDs in the list , the admin server  can enable application platforms  to register newly downloaded copies of the application . The application  is verified and registered at  and a new unique application ID is assigned and recorded in the list  at . The unique application ID is then also released to the developer  at  to enable the developer  to include or provide an indication of the application ID in the download. The developer  thus obtains the application ID at  and provides the application  and its unique ID to the application distribution service  at . The application distribution service  then obtains the application  and unique ID at  and makes them available for distribution (e.g. download through a service or browser) at . It can be appreciated that the developer  may also or instead provide the application  and unique ID to a trusted 3party application service  or other entity.","Once the application  becomes available (e.g. via the application distribution service ), it may be downloaded by a mobile device , e.g. mobile device A as shown in . In the example shown in , the new application  is downloaded and installed at  while being provided for download by the application distribution service  at . Once downloaded and installed, the mobile device  may then launch the new application  at , e.g. upon detection selection of an icon displayed by the mobile device . The mobile device  then verifies if the application is valid at . This may be done by having the application platform  and\/or the P2P platform  verify the application details it has from the download with the admin server at . The application platform  may also use the P2P platform  to obtain information to verify that the application  is valid for use with the P2P system . This may be done by the P2P platform  obtaining application details from the application distribution service . For example, the application platform  may check a hashcode to ensure that the application has not be tampered with. If the application is not valid at , e.g. the application is not recognized by the application distribution service  (or is not yet released for common use\u2014e.g. beta testing phase, etc.), a temp ID may be issued by initiating subroutine A described above and shown in . If the application  is valid at , the unique ID is provided by the admin server  at  and obtained by the application platform  via the P2P platform  at .","Downloading a new application  may be considered an event which changes or updates the platform data  and thus triggers an update to be sent by the application platform  to other application platforms  for those contacts in the contact list . It can be appreciated that, using the P2P platform , the application platform  can determine the version of the P2P platform  running on the contacts' mobile devices  as well as whether or not they have an application platform  installed. This enables the application platform  to minimize the number of P2P messages  and thus the traffic in the wireless infrastructure . As shown in , upon installing and registering a new application , routines B and C may be initiated.","Routine B is shown in , however it can be appreciated that other events may trigger the operations shown therein. In this example, the event that triggers a platform data synchronization at  is the addition of the new application  in . Other events that can trigger the operations beginning at  include, without limitation: uninstalling an existing application , back-up restore operation, addition or removal of a contact, permission updates, device switch (i.e. migration to new mobile device ), etc. By continually updating other application platforms  within the mobile device's sphere of contacts, the platform data  can be kept up-to-date to allow, among other things, the user to quickly (and perhaps automatically) see who in their contact list  has the same application  that they just downloaded. This enables that user to immediately invite others to join, for example, a multi-player game, a group (file sharing, music sharing, etc.), participate in mobile commerce (e.g. fund transfer), etc. Conversely by knowing which of the contacts in the contact list  do not have the application  just downloaded, the user can also determine who may wish to have that application  and can initiate an invitation to download the application  as will be explained in greater detail below.","Upon detecting an event which triggers a synchronization of the platform data  at , the application platform  then determines one or more of the current contact list , list of applications , and permissions  at . This allows the application platform  to identify what needs to be updated. It can be appreciated that each change to the platform data , contact list , or user profiles  may trigger an update as shown in , or multiple updates can be included in the same message. For example, certain changes may immediately trigger updates whereas others may be cached until a higher priority update is detected in order to minimize the number of P2P messages  being sent. A P2P message  comprising updated platform data  is then generated at . If such data is available, the application platform  may then determine at , which of the contacts in the contact list  have an application platform  and thus need to be updated. The P2P message  is then addressed to the appropriate contacts at  and the update is sent to the contacts at  to enable their application platforms  to synchronize their platform data . By utilizing the P2P system , only one P2P message  needs to be sent and can be multicast to the set of recipients as shown in . The other mobile devices  would thus receive the update at  and apply the one or more changes to the platform data  (which would pertain to the contact that provides the update) at .","In addition to triggering an update by invoking routine B, which initiates the set of instructions shown in , by installing a new application  as shown in , the application platform  can also initiate routine C in order to enable the user of the mobile device  to prepare invites, since the P2P platform  and\/or application platform  should already known which of their contacts already has the same application  that has just been installed. It can be appreciated that an invite can also be initiated manually by the user, which causes the application platform  to detect a request at  to invite a contact to a particular application . An invite procedure that may be initiated through routine C or through detecting a user input at  is shown in . As shown in , upon determining that a new application  has been installed, or detecting an invite request, the application platform  can use the platform data  to determine contacts in the contact list  that have the same application  at . This information may then be used to enable the user to choose whether to invite those contacts that also have the application  to join in the application  or to invite those contacts that do not have the application  to download it at . If the user selects to invite one or more contacts to join the application  at , the contacts with the application  are displayed, e.g. as shown in .","It can be appreciated that in some circumstances, e.g. when triggered by routine C, the application platform  can be operable to automatically perform operations  and  to enable the user to immediately determine which if any of those contacts they wish to invite to join. In either case, upon displaying those contacts who already have the application  at , the application platform  then enables the user to select one or more contacts at . For example, as shown in , a filtered list  of those contacts with the application  can be displayed with checkboxes. A filter button  can also be provided to enable the user to instead change to a filtered list  of contacts without the application as shown in , which indicates this in the filter button . The application platform  then determines at  if an invite is to be sent (e.g. if the user has confirmed their selections). If not, the process ends at . If an invite is to be sent, the application platform  then generates an invite to join at  and enables the invite to be sent at . It can be appreciated that the filtered lists ,  shown in  may be automatically chosen based on a selection detected at  (e.g. from a menu or other UI providing such an option). In other embodiments, a contact selector UI  shown in  may be invoked at  to enable the user to utilize a filter tool  to select either contacts with the application  or contacts not having the application , which effectively determines what type of invite to send. In the example shown in , a list of contacts  is displayed (according to the filtered selection or all contacts if no filtering is selected). Each contact in the list  has a checkbox  to enable the user to select specific contacts. A Show selected contacts only checkbox  may also be provided to further reduce the list  based on which contacts have been checked. A done button  is then used to confirm the selections.","Returning to , if the user has selected to send an invite to download to one or more contacts that do not have the application , the contacts without the application  may displayed at  (e.g. as shown in  or ). The application platform  may then enable selection of one or more of these contacts at . Operations , , , and  may then be repeated, however, the invite would provide the contact with an invite to download the application  rather than join in its activities.","It can be appreciated that if the application platform  is enabling the invite to be initiated from within the application , to protect the platform data , the application platform  can utilize the contact selector UI  of , as shown in . The contact selector  is loaded at  and provided to or within the application  at  to enable the UI  to be presented to the user, e.g. as shown in . The selections detected from the contact selector UI  would then be provided to the P2P platform  in generating the invite at . In this way, the application  does not need to know any information other than that the particular contacts exist in the contact list  and that they either have or do not have that particular application . In other words, the contact list data provided by the contact selector can include limited information associated with each of the contacts, such as by restricting such information to a contact identifier (e.g., name), and an indication that the contact has one or more applications on their corresponding mobile device.","Further detail of one example process to generate the invite is shown in . At , the application ID for the particular application  is determined (e.g. by the application platform ). The application ID is then added to the ID field  in the P2P message  that is to transport the invite at . The appropriate invite text is then added to the P2P message  at . For example, if an invite to join is being sent, the body  of the message  may include a message such as: \u201cUser A invites you to play game X\u201d. For an invite to download, the message may indicate: \u201cUser A invites you to download game X\u201d. It be appreciated that since each application  comprises a unique ID in the ID field , no link or executable file needs to be sent with an invite to download, thus reducing bandwidth in the wireless infrastructure . Using the application ID, the recipient application platform  can generate its own link or selection mechanism to then initiate a download by contacting the application distribution service .","In addition to continually updating each other's application platforms , users may also wish to impose various permissions. For example, a user may wish to block notifications or invites for particular applications and\/or from particular contacts.  illustrates an example process for updating a permission to prohibit communications for a particular application. In the example shown in , it is assumed that Mobile Device A has downloaded and installed an application at , and this information is provided as an update to their contacts at . Having received this information at , Mobile Device B may initiate various invites or begin sending notifications or other data, depending on the nature of the application . Several dashed lines are shown in  to illustrate that in this example, the communications from Mobile Device B are frequent and thus undesirable in this case. The communications are received by Mobile Device A at .","At some point, typically after at least one notification or other communication has been received in connection with the application , Mobile Device A detects, for example, the initiation of a permissions UI (not shown) to enable permissions to be modified at . In this example, Mobile Device A determines at  that a request to block notifications from contact B (e.g. for all applications  or just that particular application ). The application platform  for Mobile Device A may then determine whether or not the user wishes to have all notifications in all applications  applied to Mobile Device B. If so, a block request is prepared at  for all applications . If not, a block request is prepared at  for that particular application. It can be appreciated that the block request may be considered an event that triggers the operations in  and\/or may otherwise utilize one or more of these operations in preparing a P2P message  to update Mobile Device B regarding a change in permissions. It can be appreciated that, although the example in  illustrates a block request being prepared for a particular contact, similar block requests can also be prepared that are applied to multiple contacts. For example, a user may wish to block all notifications from all contacts for a particular application, in which case the block request would be sent to each contact in the contact list  and applied accordingly.","The block request that has been prepared at either  or  is then sent as an update, using a P2P message  at . It can be seen that rather than have Mobile Device A continually drop messages  received from Mobile Device B for that application , by using the application platforms , the messages  originating from Mobile Device B for the application  can be stopped at the source. As such, Mobile Device B receives the update at  and detects a block request therein at . The application platform  at Mobile Device B updates its permissions  at  and thereafter blocks contact B from seeing that application for user A. By simply removing user A from the list of those contacts for B that have the application , user A's intentions do not need to be explained, contact B would simply not be able to send messages for that application . It can be appreciated that other mechanisms can be used to convey to contact B that they are blocked from communicating with user A for the application or applications . For example, a notification may be displayed to contact B when they attempt to invite or otherwise communicate with user A.","In addition to enabling users to specify permissions for communicating with their contacts, the admin server  can also exercise control over the applications  via the P2P system .  illustrates an example process, wherein the admin server  receives a request or otherwise determines at  that there is a need to control a particular application . For example, the admin server  may discover that the application has corrupt or malicious code that they wish to stop from spreading. In addition to disabling or unregistering the associated application ID to prevent further copies from being registered, the P2P system  can be used to push down control messages to the application platforms  to control the existing downloads. The admin server  would determine the application ID for that application  at  and prepare the application control message at . The control message is then sent to the P2P platforms  at , which can pass the control message to the application platform  or other entity such as the IT policy module . The mobile devices  having application platforms  then receive the control message at  and apply the control message at  which would initiate an action such as an uninstall, temporary disablement, upgrade, etc. In this example, the mobile device  issues an acknowledgement of the outcome of applying the control message at , which is received and logged by the admin server  at .","It can be appreciated that the admin server  can determine which mobile devices  to send the control message to in various ways. For example, the admin server  can have the P2P system  determine which mobile devices  have an application platform  and, if available, which have that application . If this is not known, each mobile device  associated with the P2P system  can be pinged or simply given the control message and if it is applicable (i.e. that device has the application ), it would be applied or dropped.","In some embodiments, in order to reduce the burden on the admin server , i.e. to avoid the admin server  having to maintain any list or otherwise have to acquire this information, the P2P system  may be used to determine when a control message is required to be sent. For example, the P2P network transport layer can be operable to block any P2P messages  which indicate a particular ID in the ID field . A block list can be maintained, which can be updated, for example, by receiving requests to block certain applications. In such cases, when the P2P system  detects a blocked ID in the ID field , it can send a termination command to the associated mobile device  via the admin server .","Various permissions can be applied not only to block incoming messages  for a particular application, but also to hide the existence of a particular application  from a user's contacts.  illustrates an example process for hiding an application . At , the application platform  detects a request to hide a particular application  and at  the application platform  updates the platform data  to block inclusion of the presence of that application  from being included in platform data synchronizations. Alternatively, or in addition (if required) as shown in dashed lines, the application platform  can prepare and send an update at  to other application platforms to indicate that the application  should be hidden to those contacts. This may be required, for example, if the application  was previously visible to the contacts. In this case, the update sent at  can cause the application platforms  to immediately remove this information (or otherwise suppress it) to effectively hide this information across the contact list .","Therefore, a method and system are provided for enabling applications on a mobile device to utilize a peer-to-peer platform on the mobile device. The method comprises providing an interface between an application and a peer-to-peer (P2P) platform on the mobile device; obtaining data from the application; using the P2P platform to include the data from the application in a P2P message; and sending the P2P message to another mobile device to enable a complementary application on the other mobile device to utilize the data from the application. The system may provide a computer readable storage medium or memory in a mobile device with instructions for performing the above method.","Although the above has been described with reference to certain specific embodiments, various modifications thereof will be apparent to those skilled in the art without departing from the scope of the claims appended hereto."],"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","DETAILED DESCRIPTION OF THE DRAWINGS"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Embodiments will now be described by way of example only with reference to the appended drawings wherein:",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 5","FIG. 3"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 6","FIG. 1"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 20"}]},"DETDESC":[{},{}]}
