---
title: Application certification and search system
abstract: In one embodiment, a method searches a plurality of application marketplaces for applications where each application marketplace includes a plurality of applications available for download to a mobile device. The method then compares a set of applications in different marketplaces to determine certified instances of applications and uncertified instances of applications. Information is stored for the certified instances of the applications that are found in different marketplaces in a database. The method indexes the information for the certified instances of the applications in the database and stores an index based on the indexing. The index is used to provide a search result for a search query for an application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09020925&OS=09020925&RS=09020925
owner: TrustGo Mobile, Inc.
number: 09020925
owner_city: Menlo Park
owner_country: US
publication_date: 20130104
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present disclosure claims priority to U.S. Provisional App. No. 61\/582,910, entitled \u201cSecure Application Distribution Platform\u201d, filed Jan. 4, 2012, the contents of which is incorporated herein by reference in its entirety.","The present disclosure is related to U.S. patent application Ser. No. 13\/734,467, entitled \u201cDETECTING APPLICATION HARMFUL BEHAVIOR AND GRADING APPLICATION RISKS FOR MOBILE DEVICES\u201d, and U.S. patent application Ser. No. 13\/734,550, entitled \u201cAPPLICATION RECOMMENDATION SYSYEM\u201d, filed concurrently, the contents of which is incorporated herein by reference in its entirety.","As mobile electronic devices, such as smartphones, tablet computers, and smart televisions, are more commonly used, providing security on these devices becomes more important. For example, with the advent of \u201csmart\u201d devices, the mobile electronic devices allow users to download applications from application marketplaces. Some application marketplaces screen the applications that are offered. However, the screening process may not always perform comprehensive tests on the applications for security risks. Further, some application marketplaces are not regulated and allow any companies to place applications in the marketplace for download. This may increase the risk that some of these applications may include security risks because applications are not pre-screened.","Many marketplaces exist that carry many applications. When a user searches for an application, the search engine may return a search result that includes a large amount of applications in different marketplaces. Some of these applications may be legitimate applications, but some may be either malicious or an application that does not function the same way as the real application. However, the user cannot readily tell which applications are the real application the user may desire or which applications are malicious or fake. In some cases, the user may use his\/her judgment based on the application description to decide which application to download. However, if the user downloads the wrong application, the application may compromise the security of the mobile electronic device and possibly the data stored by the mobile electronic device. Even worse, the applications may also compromise the security of private enterprise networks if the networks are accessed from a compromised mobile electronic device.","In one embodiment, a method searches a plurality of application marketplaces for applications where each application marketplace includes a plurality of applications available for download to a mobile device. The method then compares a set of applications in different marketplaces to determine certified instances of applications and uncertified instances of applications. Information is stored for the certified instances of the applications that are found in different marketplaces in a database. The method indexes the information for the certified instances of the applications in the database and stores an index based on the indexing. The index is used to provide a search result for a search query for an application.","In one embodiment, a non-transitory computer-readable storage medium is provided containing instructions, that when executed, control a computer system to be configured for: searching a plurality of application marketplaces for applications, wherein each application marketplace includes a plurality of applications available for download to a mobile device; comparing a set of applications in different marketplaces to determine certified instances of applications and uncertified instances of applications; storing information for the certified instances of the applications that are found in different marketplaces in a database; indexing the information for the certified instances of the applications in the database; and storing an index based on the indexing, wherein the index is used to provide a search result for a search query for an application.","In one embodiment, a method is provided comprising: searching, by a computer system, a plurality of application marketplaces, wherein each application marketplace includes a plurality of applications available for download to a mobile device; determining, by the computer system, a set of applications in different marketplaces as certified instances of applications and uncertified instances of applications; indexing, by the computer system, the certified instances of the applications that are found in different marketplaces; receiving a search query for an application; searching, by the computer system, an index based on the indexing to determine certified instances of applications that are associated with the search query; and returning, by the computer system, a search result for search query that includes at least a portion of the determined certified instances.","The following detailed description and accompanying drawings provide a better understanding of the nature and advantages of particular embodiments.","Described herein are techniques for an application certification and search system. In the following description, for purposes of explanation, numerous examples and specific details are set forth in order to provide a thorough understanding of particular embodiments. Particular embodiments as defined by the claims may include some or all of the features in these examples alone or in combination with other features described below, and may further include modifications and equivalents of the features and concepts described herein.","Particular embodiments provide a certification and search system for applications offered from application marketplaces. The certification system may analyze applications in various marketplaces and determine certified instances of applications. The analyzing may also identify uncertified copies of the application. Then, when a user searches for applications, the search results returned may include certified instances of applications and possibly not the uncertified instances. This may improve security as users are less likely to download uncertified applications, which may include security risks, malicious code, or be fake copies of applications.","System Overview",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1","b":["100","100","102","104","102","104","108","106"]},"Mobile devices  may be computing devices that can download applications , such as smartphones, tablet computers, smart televisions, laptop computers, and personal computers. Mobile devices  include a front-end security system  that may analyze applications  for security risks on mobile device . Front-end security system  evaluates applications  on mobile device  according to multiple independent aspects of security. In some examples, front-end security system  may interact with back-end security system  to send results of analysis of applications  on mobile device . For example, front-end security system  may analyze the use of applications , scan mobile device  for security risks, and then send information related to the analysis to back-end security system .","In one embodiment, back-end security system  includes a risk assessment manager , an application recommendation manager , and an application certification manager . Risk assessment manager  may assess the risk of applications  and provide a security rating based on the assessment. In one embodiment, the security rating may be tailored to how applications  are used on mobile devices . For example, the security ratings may include certified, malicious, high-risk, and low-risk\/noisy ratings. These security ratings will be described in more detail below.","Application recommendation manager  may recommend new applications to users. In one embodiment, application recommendation manager  may communicate with front-end security system  to determine the new application recommendations. For example, application recommendation manager  may use user preferences and user behaviors that are determined based on actions performed on mobile device  in addition to information from similar users, such as a user's friends in a social network, to determine the application recommendations. In one embodiment, application recommendation manager  may provide the application recommendations based on communication with front-end security system . In other embodiments, front-end security system  may determine the application recommendations without communication with back-end security system .","Application certification manager  provides certification that an instance of an application  in a marketplace  is an authentic copy. For example, an instance of an application  may be found in multiple application marketplaces . However, specific instances of the application may not be certified copies. That is, other application developers (e.g., individuals or companies) may copy an application  and\/or modify an application . Application certification manager  scans applications  in application marketplaces , and can determine whether applications  are a certified copy. Thus, when a user wants to download an application  from a specific application marketplace , the user can review the application certification to determine whether to download the application. Additionally, the application certification may indicate to users, organizations, enterprises, application stores, device providers, networks, and\/or any other interested party, that the application has adequate security. The security certification may be unique to each certified application so that users can validate its authenticity.","Application Certification","Particular embodiments evaluate applications  in various application marketplaces . For example, different application marketplaces  may include different applications . However, marketplaces  may offer the same instance of an application . For example, different marketplaces  may be offering the same instance of a video game. That is, each marketplace  is offering a video game of the title \u201cGame #\u201d. However, some of these instances may be malicious or invalid copies of the correct instance. For example, some application developers may copy the video game and add certain malicious code to the instance. That is, Game # is offered by an \u201cApplication developer #\u201d. However, a second application developer \u201cApplication developer #\u201d may copy the game and offer Game # itself. However, Application developer # may add malicious code to its copy of Game #. Then, Application developer # offers its copy of Game # in an application marketplace  for download. When a user downloads this instance and executes the application, the malicious code in the application may harm the user's mobile device .","Particular embodiments search for (e.g., crawl) applications  stored in multiple application marketplaces  to determine certified instances of an application and uncertified instances of an application. This provides better security as application marketplaces  can know which applications are certified in their marketplaces and also users can see which applications have been certified. Additionally, particular embodiments provide a search engine to mobile devices  where a user can search for an application. A search query processor can then search the certified applications and return a search result to the user that includes the certified applications or includes both certified and uncertified applications, but with security ratings that may indicate to users that some applications may be uncertified and possibly malicious or harmful. In one embodiment, the search query processor may not return uncertified applications to the user. Thus, security is improved as users are not provided search results that include uncertified applications that may perform malicious behavior if downloaded to mobile devices . In other embodiments, the search query processor can provide a search result with uncertified applications, but may mark the uncertified applications as being uncertified so that a user can see which ones are certified and uncertified.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2","b":["200","108","106","102","202","106","1","106","202","108","106","204","202","108","106","108","204"]},"In an embodiment, download agent  includes 2 layers: a market specific layer, which handles the differences in application stores or markets. For example, different application markets may have different access protocols; different structures and layouts of application data, and include information unique to different application markets, geographic regions, languages, and categories. This helps identify the same application that may have slightly different application data in different marketplaces .","Conversely, some application data may not change between different application markets or stores, such as an application name, description, author, price, download count, review score, review users, comments, category, version, operating system, icons, thumbnail, release date, update date. In an embodiment, a market independent layer of download agent  identifies and parses this information.","Additionally, download agent  may include a scheduler to coordinate the application data retrieval from multiple application stores. For example, download agent  may continuously scan marketplaces  for changes (e.g., added, deleted, or updated applications ).","Once applications are downloaded, an application certification engine  analyzes applications  to certify instances of applications . As described above, different instances of the same application may exist in different application marketplaces . Application certification engine  determines which instances are certified and which instances are uncertified. Certified instances may be instances that are valid or associated with an originating developer (e.g., company) that released the application. A certified instance may also be a clone of the application that does not include malicious software. For example, particular embodiments communicate with the application developer may be performed to receive an original copy of the certified instance. The certified instance is then stored and used in the subsequent analysis. An uncertified instance may be an instance of the application that has not been released by the original developer or an instance that has been altered and includes malicious code.","An instance of an application  may be a discrete offering of an application in a specific application marketplace . In some cases, the instances in different application marketplaces  may be the same exact application. In other cases, different marketplaces  may claim to be offering the same application , but the instance is an invalid copy or includes malicious code. For example, a Game # may have different instances in different marketplaces  that are offered by the same developer. Based on application data, application certification engine  associates these instances together. For example, application data, such as application certificates, application package name, titles and developer information, is used by application certification engine  to associate instances of an application together. The application certificate may be a digital certificate within the application that indicates the actual publisher of the application, the title is the name of the application, and the developer is a company or person that developed or released the application. In one example, for each instance of an application , a hash code, for example, MD5, is generated to uniquely identify an app. When two instances on different application marketplaces  have the same hash code, they are considered to be the same application. For example, if two applications have different package names, they are different applications. If two applications have same package name, but have different certificates, this means the applications are actually developed by different developers, although claimed to be same application. These two applications may have different hash codes and thus are different applications due to the different certificates.","Application certification engine  then stores information for certified applications in a storage . Also, uncertified applications may be stored and identified as uncertified. The information may be structured data that describes the certified and uncertified applications. Then, as will be described in more detail below, the information for the certified and uncertified applications  may be indexed to allow for a user to search for an application. In this case, uncertified applications  may be or may not be indexed with certified applications . As discussed above, the uncertified applications may or may not be provided in search results to a user.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 3","b":["1","2","3","106","1","106","4","204","102","106","1","106","4"]},"Application certification engine  receives instances A, A, A, and A of applications ---. Application instance A has a title of \u201cTitle #\u201d and is developed by a \u201cApplication developer #\u201d. This may be the certified copy of application . That is, this instance has been released by the correct application developer, has the correct title, and has no malicious code. Also, an independent application developer may have certified this instance and a certificate is included in application data in the application package for this instance. Instance A includes the title of \u201cTitle #\u201d and is developed by \u201cApplication developer #\u201d. This instance may be the exact same instance as instance A, but is offered in a different application marketplace.","Instance A may have the title of \u201cTitle #\u201d, but is developed by \u201cApplication developer # that is different from Application developer #. In this case, Application developer # may have copied the same application as instances A and A, but Instance A has a different certificate from the different Application developer. Instance A has the title \u201cTitle #\u201d and is developed by an \u201cApplication developer #\u201d. In this case, Application developer # may have changed the title slightly from Title #, but is trying to trick users into downloading this copy instead of the certified copy. Instance A also includes a certificate for Application developer #.","In analyzing the above instances, application certification engine  determines that instance A equals instance A. In this case, the same application developers are offering the same application in different marketplaces. However, application certification engine  determines that instance A does not equal instance A and instance A does not equal instance A. For example, application certification engine  may determine that instance A is developed by a different developer or includes malicious code and thus does not equal instance A. Also, application certification engine  may determine that instance A is developed by another application developer or has a different title. After the analysis, application certification engine  thus labels instances A and A as certified and instances A and A as uncertified.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 4","b":["108","206","402","402","108","106","108","106","402","108"]},"Additionally, clean-up manager  may identify if an instance of application  is unique or merely an update to an existing application . For example, when application content or information such as the price, description, or version has changed, clean-up manager  may determine that an update has been performed. Additionally, in some embodiments, clean-up manager  analyzes the uniform resource locator (URL) associated with an instance of application  in application marketplace  to determine if the URL is consistent across different instances. If the URL is the same, then this instance may be determined to be the same instance as a prior instance. Clean-up manager  then may provide the URL, application name, and author to identify the instance.","A conversion manager  may convert various application data into a consistent format. For example, a price in local currency, local language, category, and other information may be converted into a consistent format. In one example, currencies may be converted into a single currency, languages may be converted into a single language, and different categories may be converted into a default category. This makes different information from different application marketplaces  consistent.","An alignment manager  aligns application data for different instances. Different application marketplaces  may provide different sets of application data for an instance of application . For example, the synopsis of an instance may be different in different application marketplaces . Alignment manager  performs an alignment process that constructs a unified application data payload. Typical data that is aligned may include application names, author, description, category, price, access link, download link, version, release date, update date, icons, thumbnails, supported operating system, operating system version, history versions, download count, reviews by users, user comments, and review scores. The alignment process is a normalization procedure that makes the comparison of different application instances from different market places possible. Once the instances of applications have been extracted, cleaned, converted, and\/or aligned, structured application data that describes the applications is stored in storage . The structured application data may be stored in a database format that can be queried.","A security ratings analyzer  may then analyze applications  in storage . In one embodiment, a series of security analyzers will perform various security scans and analyses on the applications to classify applications based on one or more aspects of security, such as risk of malicious behavior; application performance including battery, processor and memory, network data usage; and privacy violations including tracking location, accessing contacts, accessing messages, turning on a camera or taking video. For example, different security ratings may be assigned to applications . The application ratings may classify each instance of an application. More details for assigning security ratings to instances of applications  are described in U.S. patent application Ser. No. 13\/734,467, entitled \u201cDetecting Application Harmful Behavior and Grading Application Risks for Mobile Devices\u201d, filed concurrently, the contents of which is incorporated herein by reference in its entirety. Applications  may be stored with the security ratings in storage .","In addition to the processing the applications for security risks, additional processing may be performed. For example, a regional separation manager  may organize applications by regions. This processing is performed because some applications  may not be available in certain geographic regions. Additionally, an aggregation manager  may aggregate instances of the same application  from different application marketplaces . For example, instances with consistent or slightly different application names, descriptions, versions, price, category, download count, reviews by users, review scores, access links, may be analyzed and then aggregated into a single entry. In this case, only a single entry for the same instance may be returned in a search result. In one embodiment, aggregation manager  may check information to determine if two or more instances of an application  are merely different instances of the same application or two different instances. The information may be an application package name, application name, and developer. In another embodiment, if an application is updated in one or more application marketplaces , or retired, aggregation manager  determines this and maintains a mapping relationship between the updated applications or retired applications. For example, if two instances have a same application package name, they will be aggregated by aggregation manager . For an instance not having the application package name information, aggregation manager  will compare its application name and developer name against another instance's application name and developer name. If they are same, they will be aggregated.","After aggregation, a structured application data set for an aggregated instance may include an application name, application description, version (e.g., the highest version from instances of applications  that are aggregated together), category, security rating (e.g., the lowest security rating may be used if multiple instances of application  are rated differently), icons, thumbnails, review comments, and review counts. Additionally, each instance may include application instance-specific data. For example, the application instance-specific data may include an instance application name, specific instance description, associated application marketplace  where the specific instance is stored, associated price, version, an access link, and specific security rating.","An index manager  may then index both the aggregated application data and instance-specific application data. An index for the data is then stored in storage  and made available to a search engine . For example, only certified instances of aggregated applications and instance-specific applications may be indexed in storage  or both certified and uncertified are stored.","Once index manager  indexes applications  in storage , particular embodiments can provide search results to users.  depicts an example of the search process according to one embodiment. Back-end security system  includes a search query processor  and storage . Storage  may include certified instances of applications . For example, instances A and A of an application are stored in storage . Additionally, storage  includes other applications , such as instances B, C, and D of different applications and also uncertified applications A and A.","As described above, application certification engine  determines various instances of applications  that are uncertified in application marketplaces . For example, as shown in application marketplaces - and -, instances A and A of application  are available. Search query processor  does not provide search results that include instances A and A, or provide search results that includes instances A, A, but with their security ratings marked.","A mobile device  may include a search engine  that allows a user to perform searches. In a further example, front-end security system  may include an application store enabling users to optionally purchase, download, and install applications and content. In an embodiment, the application store may restrict access to applications based on one or more aspects of security. For example, the application store may not allow applications with low security ratings in one or more security aspects to be distributed to users. The application store may be a standalone system or integrated into other front-end systems, such as a search query tool  and\/or an application recommendation system. In this example, the application store may be provided as part of search query tool .","Similarly, another example of front-end security system  may include support for one or more third-party application stores. In this example, enterprises, organizations, device manufacturers and vendors, and network providers may present their own application stores to users. A third-party application store may utilize the application store support system to implement the application store functionality using the front-end and\/or back-end systems. For example, a company may want to have its own internal application store to provide screened and approved applications to their employees. In this example, the company could utilize the application store support system and the back-end systems to implement their application store.","In one example, a user may search for an application \u201cA\u201d. Search query tool  may then send the search query to search query processor . Using indexed applications in storage , search query processor  determines applications that match the search query for application \u201cA\u201d. In this case, the applications may be instances A and A. Search query processor  returns a search result that includes instances A and A. Then, a user of mobile device  may download instance A or A from application marketplaces - or -, respectively. Thus, a user is not returned a search result that includes uncertified instances A and A and is not provided the opportunity to download these applications. This protects a user from downloading applications that are not certified and may include malicious code or not be an instance of an application the user is looking for.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 6","b":["602","502","104"]},"At , search query processor  determines certified applications that match the search query. At , search query processor  determines application marketplaces  that include the certified applications. At , search query processor  returns a search query result that includes the certified applications and the respective marketplaces and possibly uncertified applications. In another example, search query processor  returns a search result that includes an aggregated instance of an application. A user may select this instance and then be provided multiple links to each application marketplace  that is offering an application  that is associated with this aggregated instance.","Accordingly, particular embodiments evaluate applications according to multiple independent aspects of security. This may be used for a variety of purposes, including providing application search engines to users or third-parties, providing application recommendations, protecting user devices from applications that violate one or more security aspects, providing a store for users to download pre-screened certified applications, and enabling application developers to submit applications for certification.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 7","b":["700","700","702","704","706","708","710","712"]},"Bus  may be a communication mechanism for communicating information. Computer processor  may execute computer programs stored in memory  or storage device . Any suitable programming language can be used to implement the routines of particular embodiments including C, C++, Java, assembly language, etc. Different programming techniques can be employed such as procedural or object oriented. The routines can execute on a single computer system  or multiple computer systems . Further, multiple processors  may be used.","Memory  may store instructions, such as source code or binary code, for performing the techniques described above. Memory  may also be used for storing variables or other intermediate information during execution of instructions to be executed by processor . Examples of memory  include random access memory (RAM), read only memory (ROM), or both.","Storage device  may also store instructions, such as source code or binary code, for performing the techniques described above. Storage device  may additionally store data used and manipulated by computer processor . For example, storage device  may be a database that is accessed by computer system . Other examples of storage device  include random access memory (RAM), read only memory (ROM), a hard drive, a magnetic disk, an optical disk, a CD-ROM, a DVD, a flash memory, a USB memory card, or any other medium from which a computer can read.","Memory  or storage device  may be an example of a non-transitory computer-readable storage medium for use by or in connection with computer system . The computer-readable storage medium contains instructions for controlling a computer system to be operable to perform functions described by particular embodiments. The instructions, when executed by one or more computer processors, may be operable to perform that which is described in particular embodiments.","Computer system  includes a display  for displaying information to a computer user. Display  may display a user interface used by a user to interact with computer system .","Computer system  also includes a network interface  to provide data communication connection over a network, such as a local area network (LAN) or wide area network (WAN). Wireless networks may also be used. In any such implementation, network interface  sends and receives electrical, electromagnetic, or optical signals that carry digital data streams representing various types of information.","Computer system  can send and receive information through network interface  across a network , which may be an Intranet or the Internet. Computer system  may interact with other computer systems  through network . In some examples, client-server communications occur through network . Also, implementations of particular embodiments may be distributed across computer systems  through network .","Particular embodiments may be implemented in a non-transitory computer-readable storage medium for use by or in connection with the instruction execution system, apparatus, system, or machine. The computer-readable storage medium contains instructions for controlling a computer system to perform a method described by particular embodiments. The computer system may include one or more computing devices. The instructions, when executed by one or more computer processors, may be operable to perform that which is described in particular embodiments.","As used in the description herein and throughout the claims that follow, \u201ca\u201d, \u201can\u201d, and \u201cthe\u201d includes plural references unless the context clearly dictates otherwise. Also, as used in the description herein and throughout the claims that follow, the meaning of \u201cin\u201d includes \u201cin\u201d and \u201con\u201d unless the context clearly dictates otherwise.","The above description illustrates various embodiments along with examples of how aspects of particular embodiments may be implemented. The above examples and embodiments should not be deemed to be the only embodiments, and are presented to illustrate the flexibility and advantages of particular embodiments as defined by the following claims. Based on the above disclosure and the following claims, other arrangements, embodiments, implementations and equivalents may be employed without departing from the scope hereof as defined by the claims.","The above description illustrates various embodiments along with examples of how aspects of particular embodiments may be implemented. The above examples and embodiments should not be deemed to be the only embodiments, and are presented to illustrate the flexibility and advantages of particular embodiments as defined by the following claims. Based on the above disclosure and the following claims, other arrangements, embodiments, implementations and equivalents may be employed without departing from the scope hereof as defined by the claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2","b":"106"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
