---
title: Method and system for remote television replay control
abstract: A method, system, computer medium, and other embodiments for integrating unrelated web hosted services with stand-alone media-based devices are provided. Users can access and control the media-based device conveniently with a web-browser through various portals on the Internet. In one embodiment, users access the media-based device through one or more unrelated web portals, so as to control and to program the media-based device in a single web session, and to see information both stored on the media-based device and originating from third-party online sources of information and services in a single integrated presentation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09520956&OS=09520956&RS=09520956
owner: The DIRECTV Group, Inc.
number: 09520956
owner_city: El Segundo
owner_country: US
publication_date: 20110801
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF DESCRIBED EMBODIMENTS","DETAILED DESCRIPTION OF EMBODIMENTS","Introduction"],"p":["This application claims priority under 35 U.S.C. \u00a7119(e) from commonly assigned U.S. Provisional Application No. 60\/223,856, filed on Aug. 8, 2000 by Jeff Hastings, et al., entitled \u201cMethod and System for Remote Television Replay Control\u201d the subject matter of which is herein incorporated by reference in its entirety.","This application claims priority under 35 U.S.C. \u00a7119(e) from commonly assigned U.S. Provisional Application No. 60\/248,313, filed on Nov. 14, 2000, by Jeff Hastings, et al., entitled \u201cMethod and System for Remote Television Replay Control\u201d the subject matter of which is herein incorporated by reference in its entirety.","This application claims priority under 35 U.S.C. \u00a7119(e) from commonly assigned U.S. Provisional Application No. 60\/258,937, filed on Dec. 29, 2000, by Philippe Pignon, entitled \u201cMethod and System for Remote Television Replay Control\u201d the subject matter of which is herein incorporated by reference in its entirety.","This application claims priority under 35 U.S.C. \u00a7119(e) from commonly assigned U.S. Provisional Application No. 60\/258,940, filed on Dec. 29, 2000, by Millard E. Sweatt, III, entitled \u201cRecording Television Programming via Remote Control the subject matter of which is herein incorporated by reference in its entirety.","The subject matter of this application is related to commonly-owned U.S. patent application Ser. No. 09\/925,120, by Millard E. Sweatt, III, et al., entitled \u201cMethod and System for Remote Television Replay Control,\u201d which was filed on Aug. 8, 2001, the content of which is hereby incorporated by reference in its entirety.","The subject matter of this application is related to commonly-owned U.S. patent application Ser. No. 09\/925,109, by Millard E. Sweatt, III, et al., entitled \u201cMethod and System for Remote Television Replay Control,\u201d which was filed on Aug. 8, 2001, the content of which is hereby incorporated by reference in its entirety.","The subject matter of this application is related to commonly-owned U.S. patent application Ser. No. 11\/518,117, by Millard E. Sweatt, III, et al., entitled \u201cMethod and System for Remote Television Replay Control,\u201d which was filed on Sep. 8, 2006, the content of which is hereby incorporated by reference in its entirety.","The present invention relates generally to enabling web users easy access and control of media-based devices and appliances over computer networks, and more specifically, to a method, system and computer medium for remote control of a digital video recorder from a client user interface both in communication with the Internet.","Conventional techniques provide for control input of a media-based device either directly or with a short-ranged remote controller. That is, typically the media-based device may be directly programmed using the control panel disposed on the device itself or with a remote controller (i.e., typically handheld) in communication with the media-based device. The hand-held remote controller provided control input from short-ranged distances about the device usually by direct hardwired extension cable, or by some wireless medium, like for example, infrared and radio frequency. While these conventional techniques work well for those situations where the user is physically located within the vicinity (e.g., typically in the same room as the media-based) of the device, they do not address the situation where the user is at a different physical location and is thereby unable to access the device at such short-ranges. Although there exists numerous reasons and situations as to why the user would be physically away from the device, the details of such are less important as opposed to the overriding drawback that the user is unable to control the media-based device from a location remote to the physical location of the media-based device. It will be apparent to those skilled in the art that the handheld remote controller may be designed to accommodate an increased range of hardwired and\/or wireless transmission; however, this alternative is still unsatisfactory as it is cost prohibitive in proportion to an increase in the transmission distance.","Consequently, what is needed is a solution to enable user control and programming of media-based devices and appliances from remote locations. It would be desirable if the device could be accessed and controlled from anywhere in the world, like from a web browser in a manner that is convenient, familiar, and relatively simple to use. Furthermore, it would be advantageous if a web-based solution could be provided in a manner that seamlessly integrates information from multiple sources, like for example, from the media-based device and various media content providers as well as other online service providers so that the combination of information is available to a user in a single web session. It would be beneficial if the devices and appliances could communicate with such providers of information and content, so as to automatically receive and send information there between. Finally, the method, system, and computer medium that is needed, for enabling remote control of a media-based device and for accessing related information, should also be available to various web servers including portals in a uniform manner such as through an application program interface.","The described embodiments of the present invention utilize the world wide web to overcome the limitations of the current state of the art concerning access and control of stand alone media-based devices. Web users, content providers of the subject-matter being utilized with the media-based device, and web-hosted service providers who typically provide ancillary services, system administration and system maintenance of the media-based devices may benefit from the described embodiments of the present invention, which enable the integration of stand-alone applications for media-based devices and appliances with web-hosted services that by themselves do not necessarily work well with each other. To this end, the described embodiments of the present invention are beneficial in creating a web application, which may be offered as a web-hosted service, for enabling existing stand-alone media-based devices to be more effective to a user.","The described embodiments of the present invention comprise a method, system, computer medium, and other embodiments for integrating unrelated web-hosted services with stand-alone media-based devices and appliances, and for allowing users to access and control the media-based device and\/or appliance conveniently with a client user interface such as a web-browser through various portals on the Internet. One technical aspect of the present invention enables users to access the media-based device and appliance through one or more unrelated web portals, so as to control and to program the media-based device in a single web session. With this aspect of the present invention, users are provided with an integrated presentation that includes information both stored on the media-based device and appliance and that in one embodiment may originate from third-party online sources of information and services. That is, rather than having to be in the same room as the media-based device and appliance to provide control input thereto, the described embodiments of the present invention overcome the limitations associated with conventional programming techniques and enables users to access the media-based device from remote locations throughout the world via the Internet.","Another aspect of the present invention simulates an operational standalone media-based device and appliance over a network, whether the device or appliance is in periodic communication or continuous continuation with the network. According to one embodiment of the present invention, a virtual representation of the media-based device and appliance is created over the network and presented to the client user interface to simulate the operation of the media-based device. In another embodiment of the present invention, the media-based device and appliance communicates over the network in real-time and on-the-fly with the client user interface.","According to yet another aspect of the present invention, when the information both stored on the media-based device and originating from unrelated online sources are combined into an integrated presentation and presented to a user through a single web session, users can access and view the combined information through one web presentation, and select and manipulate particular information of interest. These otherwise unrelated and disparately-located sources of information include, but are not limited to, web-hosted and online services concerning television, satellite-based, pay-per-view and cable-based television guide information, user preferences and authentication information and other related and ancillary services.","The described embodiments are implemented with a client\/server architecture embodied in a computer-based communication system. By enabling access and control of the media-based device and appliance over the Internet using a \u201cweb paradigm,\u201d the described embodiments of the present invention provide users with a convenient and efficient manner for programming the media-based device and appliance. In one embodiment, the media-based device and appliance comprises an interactive television device in the nature of a digital video recorder (DVR), also known as a personal video recorder (PVR). By porting the local control interface typically utilized on the stand-alone DVR to enable control input from a client user interface over a network, the described embodiment of the present invention provides a context for control input in which users are increasing becoming familiar with due to the growing popularity of the Internet. The world-wide appeal of the Internet coupled with the web application to control the DVR allow a scalable solution without the intensive high-end costs for tooling and manufacturing.","One technical advantage of the present invention is that it includes a computer-based communication system that is enabled to: (1) extract information from the stand-alone media-based device and appliance through a back end client-server subsystem; (2) extract information from online and unrelated web hosted services through yet another server subsystem; (3) combine the extracted information from the various sources mentioned; (4) maintain a local representation of the combined data on a database; (5) create an integrated presentation based on combining the information extracted to simulate the operation of the media-based device in either a virtual or real-time manner; (6) allow multiple portals to make requests to a front end subsystem and to receive the integrated presentation via an API (Application Program Interface); (7) transfer the integrated presentation to a client user interface; (8) accept instructions from the client user interface in response to receiving the presentation in order to update the database and the media-based device and appliance; (9) combine the instructions received with further information obtained from the online and web-hosted services; and (10) update the media-based device and appliance with the instructions and further information combined.","One aspect of the computer-based communication system of the present invention enables the communication between a network computing system, a network\/media-based data integration system, and a media-based computing system. In order for the network computing system to communicate with the media-based computing system through the data integration system, a set of processes embodied in an API is provided. In one embodiment, the network computing system includes web-hosted services provided over the Internet, the web-hosted services being external to the data integration system. In the same embodiment, the standalone DVR is connected to a network in the media-based computing system. The API provided in the data integration system enables a flexible approach to allow various external web portals in the network computing system to communicate with the DVRs in the media-based computing system. Furthermore, the API enables clients on the network computing system to request and to obtain the integrated presentation at the client user interfaces in unique arrangements distinctive to the local environment of the web portal. Accordingly, the API exposes the integrated presentation to be utilized by a wide range of websites for millions of users in a simple and easily accessible manner. The API encapsulates a variety of functions that facilitate creating a user account, user login, user preferences, adding a request, obtaining programming guide information, finding television programs of interest, and others to be described more specifically herein.","In yet another technical aspect of the present invention, the media-based computing system enables the communication of requests, data and other control input information across various networks from a DVR. The DVR is also enabled to receive commands and to send out data and status information based on commands and data received across the various networks. In particular, the DVR is enabled to be programmed from an external source (e.g., preferably through a computer-based communication system having multiple web servers) in a uniform manner. That is, instead of a conventional hand-held remote controller and the control panel disposed on the DVR being the mechanisms used to program the DVR, an external source may be used to facilitate the programming.","The features and advantages described in this summary and the following detailed description are not all-inclusive, and particularly, many additional features and advantages will be apparent to one of ordinary skill in the art in view of the drawings, specification and claims hereof. Moreover, it should be noted that the language used in the specification has been principally selected for readability and instructional purposes, and may not have been selected to delineate or circumscribe the inventive subject matter, resort to the claims being necessary to determine such inventive subject matter.","The figures depict a preferred embodiment of the present invention for purposes of illustration only. One skilled in the art will readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles of the invention described herein.","A system, method, computer medium and other embodiments for accessing, reviewing and providing selective control input over a computer-based communications system to media-based devices and appliances from client user interfaces are described. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the invention. It will be apparent, however, to one skilled in the art that the invention can be practiced without these specific details. In other instances, structures and devices are shown in block diagram form in order to avoid obscuring the invention with unnecessary details.","Reference in the specification to \u201cone embodiment\u201d or to \u201can embodiment\u201d means that a particular feature, structure, or characteristic described in connection with the embodiments is included in at least one embodiment of the invention. The appearances of the phrase \u201cin one embodiment\u201d in various places in the specification are not necessarily all referring to the same embodiment.","Some portions of the detailed description that follows are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here, and generally, conceived to be a self-consistent sequence of steps (instructions) leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical, magnetic or optical signals capable of being stored, transferred, combined, compared and otherwise manipulated. It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like. Furthermore, it has also proven convenient at times, to refer to certain arrangements of steps requiring physical manipulations of physical quantities as (modules) code devices, without loss of generality.","It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated and otherwise as apparent from the following discussion, it is appreciated that throughout the description, discussions utilizing terms such as \u201cprocessing\u201d or \u201ccomputing\u201d or \u201ccalculating\u201d or determining\u201d or \u201cdisplaying\u201d or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system memories or registers or other such information storage, transmission or display devices.","One aspect of the present invention includes an embodiment of the process steps and instructions described herein in the form of a computer program. Alternatively, the process steps and instructions of the present invention could be embodied in firmware or hardware, and when embodied in software, could be downloaded to reside on and be operated from different platforms used by real time network operating systems and applications.","The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus. Furthermore, the computers referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.","The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general-purpose systems may also be used with programs in accordance with the teachings herein, or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition, the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the present invention as described herein, and any references below to specific languages are provided for disclosure of enablement and best mode of the present invention.","Moreover, the present invention is claimed below as operating on or working in conjunction with an information system. Such an information system as claimed may be the entire information system for providing remote control of a digital video recorder and other media-based devices and\/or appliances from browser and user interface applications in communication with a network as detailed below in the described embodiments or only portions of such a system. For example, the present invention can operate with an information system that need only be a communications network in the simplest sense to facilitate the review of program data and selections existing at the media-based devices and appliances. At the other extreme, the present invention can operate with an information system that locates, extracts and stores data from a variety of unrelated data sources and integrates such data with user control input to program and update the media-based devices and appliances as detailed below in the described embodiments or only portions of such a system. Thus, the present invention is capable of operating with any information system from those with minimal functionality, to those providing all of the functionality disclosed herein.","System Overview","Reference will now be made in detail to several embodiments of the present invention, examples of which are illustrated in the accompanying drawings. Wherever practicable, the same reference numbers will be used throughout the drawings to refer to the same or like parts.","One aspect of the present invention addresses the situation where the media-based devices and appliances may not always be continuously connected to a network. To address this situation, all of the information, that is necessary for the replication of what a user would experience as if the media-based device acting as a stand-alone unit, is stored in a database. This information stored on the database, along with other sources of related information, allows the construction of an integrated presentation to be sent to a client user interface, like a browser, to simulate the operation of the media-based device functioning as if it were in a \u201clive\u201d (i.e., stand-alone) mode, that is, for viewing and control input. Accordingly, the present invention enables access to and control of the media-based device and\/or appliance from a remote location and over a network whether or not the media-based device is participating in a communication session with a network in a peer-to-peer or periodic mode.","In one embodiment discussed below, when the media-based device and\/or appliance periodically establishes a connection with a network and database, information is pushed and pulled between the client, database and media-based device in a \u201cbatched\u201d processing mode. In this embodiment, the replication of data necessary to simulate using the media-based device at a client can be analogized to virtualizing the media-based device over a network.","With another embodiment discussed below, where the media based device establishes a peer-to-peer communication session with the client, the control input and update of the media-based device and\/or appliance from a client is executed \u201con-the-fly\u201d, that is, in real time enabling near instantaneous results.","1. An Embodiment for Remote Control of Media-Based Devices and Appliances Through Batched Processing","Referring now to the block diagram of , there is shown an example of a computer-based communications system  that enables the remote control of media-based devices and appliances over a communication network in accordance with the present invention. In the example of , communications system  includes a network computing system  coupled to a network\/media-based data integration system  (henceforth \u201cintegration system \u201d), which in turn, is communicatively coupled to a media-based computing system . The network computing system  enables multiple users to communicate over a communications system  in order to access and control the media-based devices and appliances of media-based computing system  from a remote location. Media-based computing system  enables the media-based devices and appliances to be accessed through a network system, thereby further enhancing stand-alone capabilities of the devices and appliances. Integration system  provides the interface between the different networks where users and media-based devices may be in communication, and additionally provides a centralized repository for capturing, combining and integrating data from multiple sources of data and for providing the data captured to the client user interfaces and the media-based devices.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 2","FIG. 1A","FIG. 2","FIG. 2"],"b":["10","10","10","12","14","16","12","12","18","18","18","20","22","24","24","26","28","1","28","28","1","28","2","28","28","1","28","2","28","14","30"],"i":["a ","a","a","a ","a ","n ","n","n ","a"]},"Also shown in the embodiment of , media-based computing system is similarly based upon a client-server computer model. For convenience and ease of understanding the present invention, the media-based computing system will be referenced interchangeably herein as the \u201cback end sub-system ,\u201d and \u201cback end .\u201d As seen in the embodiment of , the back end sub-system includes a plurality of RNS servers  coupled  to a plurality of media-based devices and appliances . For ease of understanding the invention and convenience, reference to \u201cmedia-based devices and appliances \u201d will interchangeably be made to \u201cmedia-based devices .\u201d As will be described more specifically later, media-based devices  additionally include functionality to perform communication tasks similar to client computers, and RNS servers  are additionally designed to operate similarly to the server computers in the client-server computer model. As will be described subsequently in further detail, the RNS servers  may communicate with the media-based devices  over network .","In between the network computing system and the back end sub-system , the network\/media-based data integration system provides a centralized interface there-between. For convenience and ease of understanding the present invention, system will be referenced interchangeably as the \u201cfront end sub-system ,\u201d and \u201cfront end ,\u201d relative to the back end sub-system . Collectively, the front end and the back end comprise the \u201cMy Replay TV\u201d (MRTV) system in accordance with the present invention. In general, front end extracts, captures, stores, and integrates information from a variety of disparate data sources and transmits the information assembled to the client user interfaces, like at browser , and to the media-based devices . Additionally, front end enables data from a variety of sources to be shared across systems and , and in doing so, facilitates user control input for media-based devices  over communications system A. In the embodiment of , the front end includes a middle tier server  coupled  to a database  and to servers -, . . . , -, over data lines . The database  is communicatively coupled  to a batch request server , and other online sources of data, such as database  over data line  and an online service  over data line , by way of example. Batch request server  is capable of communication with RNS server  over data line , and directly over line  with media-based devices .","One embodiment of network  in accordance with the present invention includes the Internet. However, it will be appreciated by those skilled in the art that the present invention works suitably-well with a wide variety of computer networks over numerous topologies, so long as network  connects the distributed clients  to servers - to -. For convenience and ease of understanding the present invention, at times, reference will be made to network  as the Internet . However, it is noted that the present invention is not limited by the type of network described. Thus, to the extent the discussion herein identifies a particular type of network, such description is purely illustrative and is not intended to limit the applicability of the present invention to a specific type of network. For example, other public or private communication networks that can be used for network  include Local Area Networks (LANs), Wide Area Networks (WANs), intranets, extranets, Virtual Private Networks (VPNs), and wireless networks (i.e., with the appropriate wireless interfaces as known in the industry substituted for the hardwired communication links). Generally, these types of communication networks can in turn be communicatively coupled to other networks comprising storage devices, server computers, databases, and client computers that are communicatively coupled to other computers and storage devices.","Clients , servers - to -, servers ,  and  and media-based devices  may beneficially utilize the present invention, and may contain an embodiment of the process steps and modules of the present invention in the form of a computer program. Alternatively, the process steps and modules of the present invention could be embodied in firmware, or hardware, and when embodied in software, could be downloaded to reside on and be operated from different platforms used by real time network operating systems and applications.","A. Exemplary Embodiment for Clients","Each user at client  works with communications system A to seamlessly access one or more of servers - through -through network . Referring now to the block diagram of , one embodiment for the client computer  is shown. The client computer  comprises a control unit  coupled to a display device , a keyboard , a control input device , a network controller , and an Input\/Output (I\/O) device  by a bus .","Control unit  may comprise an arithmetic logic unit, a microprocessor, a general purpose computer, a personal digital assistant or some other information appliance equipped to provide electronic display signals to display device . In one embodiment, control unit  comprises a general purpose computer having a graphical user interface, which may be generated, for example, by a program written in the Java language running on top of an operating system like the WINDOWS\u00ae or UNIX\u00ae based operating systems. In the embodiment of , one or more applications, electronic mail applications, spreadsheet applications, database applications, and web browser applications, generate the displays, store information, and retrieve information as part of communications system A (and B as will be described in detail subsequently). The control unit  also has other conventional connections to other systems such as a network for the distribution of files (e.g., media objects) using standard network protocols such as TCP\/IP, HTTP, LDAP and SMTP as will be understood by those skilled in art.","It should be apparent to those skilled in the art that control unit  may include more or less components than those shown in , without departing from the spirit and scope of the present invention. For example, control unit  may include additional memory, such as, for example, a first or second level cache, or one or more application specific integrated circuits (ASICs). Similarly, additional components may be coupled to control unit  including, for example, image scanning devices, digital still or video cameras, or other devices that may or may not be equipped to capture and\/or download electronic data to control unit .","Also shown in the embodiment of , the control unit  includes a central processing unit (CPU)  (otherwise referred to interchangeably as a processor ), a main memory unit , and a data storage device , all of which are communicatively coupled to a system bus .","CPU  processes data signals and may comprise various computing architectures including a complex instruction set computer (CISC) architecture, a reduced instruction set computer (RISC) architecture, or an architecture implementing a combination of instruction sets. Although only a single CPU is shown in , multiple CPUs may be included.","Main memory unit  can generally store instructions and data that may be executed by CPU . Generally, main memory unit  may be a dynamic random access memory (DRAM) device, a static random access memory (SRAM) device, or some other memory device known in the art, by way of example.  shows further details of a particular embodiment of a main memory unit A for a client computer , by way of example. In the embodiment of , the memory unit A preferably includes an Internet (web) browser application  () being of conventional type that provides access to the Internet and processes HTML, DHTML, XML, XSL, or other mark-up language to generate images on the display device . As is known in the art, a web browser facilitates the viewing of a web page on the Internet, wherein a user enters a Uniform Resource Locator (URL) of the web page or clicks on a hyperlink to the web page. By doing so, the web page itself is fetched from the appropriate web server. Several examples of web browser applications  include the Netscape Navigator or Microsoft Internet Explorer browser. The main memory unit A also includes a network application program  and optionally a client program  to enable communication between the client computer  and the servers - to -. Network application  functions with network controller  to establish communication between client  and network . Client program  may function with browser  for creating, editing, moving, adding, searching, removing and\/or viewing information related to the media-based devices  (unless browser  includes such functionality) described in accordance with the present invention. The memory unit A may also include one or more application programs , including without limitation, word processing applications, electronic mail applications, and spreadsheet applications. Also, main memory unit A includes an Operating System (OS) . For example, OS  may be of conventional type such as WINDOWS\u00ae 98\/2000 based operating systems. In other embodiments, the present invention may additionally be used in conjunction with any computer network operating system (NOS), which is an operating system used to manage network resources. A NOS may manage multiple inputs or requests concurrently and may provide the security necessary in a multi-user environment. An example of an NOS that is completely self-contained includes WINDOWS\u00ae NT manufactured by the Microsoft Corporation of Redmond, Wash. Those skilled in the art will recognize that, in general, main memory unit A may include other features than those illustrated. The instructions and data may comprise code devices for performing any and all of the techniques described herein.","Referring back to , data storage device  stores data and instructions for CPU  and may comprise one or more devices including a hard disk drive, a floppy disk drive, a CD-ROM device, a DVD-ROM device, a DVD-RAM device, a DVD-RW device, a flash memory device, or some other mass storage device known in the art.","System bus  represents a shared bus for communicating information and data through control unit . System bus  may represent one or more buses including an industry standard architecture (ISA) bus, a peripheral component interconnect (PCI) bus, a universal serial bus (USB), or some other bus known in the art to provide similar functionality.","Additional components coupled to control unit  through system bus  will now be described, and which include display device , a keyboard , a control input device , a network controller , and an I\/O device . Display device  represents any device equipped to display electronic images and data as described herein. Display device  may be a cathode ray tube (CRT), a liquid crystal display (LCD), or any other similarly equipped display device, screen or monitor. Alternatively, other embodiments of display device  corresponding to the alternative embodiments of client , can include by way of example, the touch panel Liquid Crystal Display (LCD) of a Personal Digital Assistant (PDA), and the display screen of a cellular phone.","Keyboard  represents an alpha-numeric input device coupled to control unit  to communicate information and command selections to CPU . Control input device  represents a user input device equipped to communicate positional data as well as command selections to CPU . Control input device  may include a mouse, a trackball, a stylus, a pen, a touch screen, cursor direction keys, joystick, touchpad, or other mechanisms to cause movement of a cursor. Network controller  links control unit  to network  and may include network I\/O adapters for enabling connection to multiple processing systems. The network of processing systems may comprise a LAN, WAN, and any other interconnected data path across which multiple devices may communicate.","One or more input\/output devices  are coupled to system bus . For example, I\/O device  could be an audio device equipped to receive audio input and transmit audio output. Audio input may be received through various devices including a microphone within I\/O device  and network controller . Similarly, audio output may originate from various devices including CPU  and network controller . In one embodiment, I\/O device  is a general purpose audio add-in expansion card designed for use within a general purpose computer. Optionally, I\/O device  may contain one or more analog-to-digital or digital-to-analog converters, and\/or one or more digital signal processors to facilitate audio processing.","Having described one embodiment for the hardware of client computer , it will be appreciated by those skilled in the art that alternative embodiments exist for client , besides the computer hardware shown in . Such alternative embodiments that may be substituted for client  can include portable hand held devices that are processor-based, as will be recognized by those skilled in the art. By way of example, several portable hand held devices that may be substituted for client  include PDAs, two-way pagers, email terminals, Global Positioning Systems (GPS), and mobile\/cellular phones. When such alternative embodiments are utilized with the present invention, it will be recognized by those skilled in the art that the user interface, communication medium and protocol adapters described for the embodiment of  should be modified to comply with the corresponding media-enabled portable wireless devices. For example, the present invention also has described embodiments for a set of protocol adapters that interface to a variety of Internet protocols, including but not limited to, HTML, DHTML, POP3, SMTP, SNMP, FTP, NFS, IMAP, NNTP, and WAP. It will be recognized by those skilled in the art that web browsers ,  may be modified to be used on media-enabled portable wireless devices in connection with the corresponding communication protocol. Further, it will be apparent that data flow lines  would correspondingly represent a wireless communication medium (e.g., radio frequency signals, infrared signals) as appropriate for wireless transmission of signals.","B. Exemplary Embodiment for Server Computers","Referring now to the block diagrams of , the servers - through -included in the embodiment of network computing system will be described in more detail. For convenience and ease of understanding the invention, reference will interchangeably be made to \u201cservers \u201d to generically describe features of servers - through -. Also for convenience, like reference numerals have been used for similar components used in both the client computer , and the servers . Servers  are generally responsible for presenting the front end of computer system A to a user at the client . In one embodiment, servers  may be web portals, which is defined to mean a web \u201csupersite\u201d that provides a variety of online services. Alternatively, servers  may be web-sites provided by and\/or web-hosted by unrelated entities and system administrators. These particular embodiments are well-suited for the situation when network  is the Internet.","In the embodiment of , server  preferably includes a display , a keyboard , a control input device , a first network controller and interface (I\/F) , an I\/O device , and a second network controller and interface (I\/F) , coupled together via bus . Server  further includes a control unit  having a processor , memory unit , and a data storage device  also coupled to bus . As shown in , the first network controller and I\/F  is communicatively coupled via  to the network , and ultimately to client . The second network controller and I\/F  is communicatively coupled to the front end , and as shown in , by data line . The processing unit  processes data signals and may comprise various computing architectures including CISC or RISC architecture, or an architecture implementing a combination of instruction sets. In one embodiment, server  includes a multiple processor system having a main memory unit B, as will be described in . As an example, a WINDOWS\u00ae NT\/2000 server can be used for server , while other multiple processor systems may work suitably well with the present invention, including the Dell  made and sold by Dell Computer Corporation.","Referring now to ; further details of a particular embodiment of a main memory unit B for a server  are shown, by way of example. In the embodiment of , the memory unit B preferably comprises an operating system , other applications , server application programs  (\u201cservers \u201d), and a \u201cfront end\u201d server application , all communicatively coupled together via system bus . Server  may be any conventionally, known server application, like for example, an Apache HTTP server. Front end server application  is an interface for establishing communication with the middle tier server  by sending and receiving requests and data to the API, which will be described subsequently. In general, servers  may host front end and are typically external websites relative to systems and . Because servers  can represent a variety of general purpose websites, some functioning as a \u201csupersite\u201d that provide various online services, while others being for more limited purposes, for convenience and to avoid obscuring the invention with unnecessary details, reference to servers  will interchangeably be made herein to \u201cweb portals .\u201d The memory unit B may also include one or more other application programs  including, without limitation, word processing applications, electronic mail applications, and spreadsheet applications. A network application module  is part of network controller  which enables server  to communicate with network  over lines . Optionally, a browser  may be included. As noted above, the memory unit B stores instructions and\/or data that may be executed by processing unit . The instructions and\/or data may comprise code for performing any and\/or all of the techniques described herein. These modules , , , , and  in addition to others not specifically shown, are coupled by system bus  to the processing unit  for communication and cooperation to provide the functionality of the server . Those skilled in the art will recognize that while the present invention will now be described as modules or portions of the memory unit B of a computer system, the module or portions may also be stored in other media such as permanent data storage and may be distributed across a network having a plurality of different computers such as in a client\/server environment.","Referring back to , in accordance with the present invention, network  enables the communication between multiple components of servers  and clients , as well as other devices, which may or may not be co-located, but may be distributed for convenience, security or other reasons. To facilitate the communication between client  and server , a client-server computer network operating system (NOS) may be used for operating system  in memory unit B of  to manage network resources. An NOS can manage multiple inputs or requests concurrently and may provide the security necessary in a multi-user environment. Operating system  can include, for example, a NOS of conventional type such as a WINDOWS\u00ae NT\/2000, and UNIX\u00ae used with the Microsystem SOLARIS\u00ae computing environment. Another conventional type of operating system that may be used with the present invention includes LINUX\u00ae based operating systems.","C. Exemplary Embodiment for the Front End","Still referring to the block diagram of , more details about an embodiment of the front end will now be discussed. Front end includes a middle tier server , to which servers  communicate with. Front end further includes a database  coupled  to the middle tier server , which in turn, is coupled  to a server  for providing information from the front end to the back end in \u201cbatches,\u201d (i.e., periodically). Various other databases  and online data sources  are in communication ( and , respectively) with database .","Prior to describing other aspects of the present invention in detail, several definitions will now be introduced in the context of a particular embodiment of the present invention, where the media-based devices  are DVRs . By way of example, in a particular implementation where media-based devices  are DVRs , database  stores at least: 1) for every DVR , a list of configured channels; and 2) Electronic Program Guide (EPG) data for all channels by national broadcasters. Although the particular embodiment of DVR  will be discussed in more detail subsequently with reference to , the following definitions are now provided by way of illustration and for ease of understanding the invention.","The Electronic Program Guide (EPG) is defined to mean television (TV) guide data represented in electronic form, and provided from an online data source, like for example, Tribune Media Services (TMS), as will be discussed subsequently with respect to the TMS FTP server  of . As conventionally known, FTP is defined to mean File Transfer Protocol. In general, the EPG includes a broadcast schedule of television, cable, and pay-per-view shows offered by national broadcasters. An exemplary representation of the EPG data is the Replay Guide that is shown in .","The Channel Guide is defined to mean a listing of all shows assembled from the EPG that will be broadcast, as will be discussed in further detail subsequently with reference to , showing one exemplary list of configured channels includes the Channel Guide . The Channel Guide contains a list of channel lineup indicating the actual channels to be selected by the user to appear in the Replay Guide. In general, the Channel Guide is an interactive on-screen program guide that lists upcoming and past programs broadcast.","The Replay Guide is defined to mean those shows that have been selected by the user to be recorded as they are broadcast, and that are either stored or to be stored in memory, as will be further described with reference to . In general, the Replay Guide includes user-created record channels and current recorded shows. Replay Show is defined to mean a particular view of the Replay Guide, wherein for each program to be recorded, a distinct Replay Channel is assigned, as will be further described with reference to .","Replay Channel is defined to mean a particular view of the Replay Guide, indicating descriptions associated with pending and completed program recording requests invoked according to either a search-based criteria or the Channel Guide criteria, as will be further described with reference to . A Replay Channel may include a collection of Replay Shows.","The Replay Zone is defined to mean television and video programming organized by categories selected by the user.","i. Middle Tier Server","Referring back to , the middle tier server  is communicatively coupled to least one database , as indicated by data line . Furthermore, middle tier server  is communicatively coupled to servers  as indicated by data lines . User requests originated by clients  and communicated through servers  are received at the middle tier server . The requests are processed by server  according to a set of functions preferably embodied in an API , as will be discussed with respect to . For convenience and to provide further clarification in distinguishing between multiple sets of APIs used throughout system A, reference to the API residing on the middle tier server  will interchangeably be made to the MyReplayTV (MRTV) API . In general, the API  can be accessed by servers  through HTTP calls that are received by the middle tier server . As will be described in more detail subsequently, the API  includes the: (1) procedural and functional calls, parameters, and formatting specifications to enable data transfers amongst the interactive media-based devices  and  and the web portals  through the front end subsystem ; and (2) the software used on the middle tier server  to create a virtual representation of an operational DVR B in an integrated presentation to be presented to a client . The API  also enables the external devices in the network computing system to access information throughout the front end and to communicate with the back end ","More details of the particular implementation of the middle tier server  shown in  are illustrated in . The middle tier server  may have the general hardware structure described with respect to client  and server  as seen in . It will become apparent to those skilled in the art that like reference numerals are used in  for describing the general hardware of the middle tier server  primarily for convenience and so as not to obscure the invention with unnecessary details. To this end, server  includes a control unit  having a processor , main memory , and data storage device . Control unit  is coupled via bus  to a display device , keyboard , control input device , one or more network controllers  and , and I\/O device .","A particular embodiment of main memory unit C is shown in  for the middle tier server . Main memory C includes an operating system  as already described, and includes server tools, such as, Java servlets  running on an Apache web server  with a Tomcat (servlet) server. Tomcat, is a reference implementation combining the Java servlet  and JavaServer Pages\u2122 (JSP)  specifications which can run in standalone mode or be integrated into the Apache web server . By using Tomcat, an operational definition for the Enterprise Java\u2122 JSP  and servlet  drives the Application Programming Interface (API)  provided in accordance with the present invention. Java servlets  can be written to run on middle tier server  that accept requests via HTTP format and to transmit data in XML format to and from database . These Java servlets  provide functionality for converting the XML files into data that can be stored in database , and for extracting data from database , converting the extracted data into XML before sending the converted data to an external client  via web servers . It is preferable that the Java servlets , incorporating the functions of database interactions and the conversion of data format to XML, be shared between the Java applications that run on the RNS servers  and the Java servlets  that run on the middle tier server . The memory unit C for the middle tier server  can further include applications in the nature of Java applets , CGI scripts , database interface applications  and other applications  (as previously described). Generally, the API  executes under the control of the Java servlets . The Apache web server  is capable of generating an HTTP page having a virtual representation of the control-input interface of DVR  and for display on browser  and .","The database interface applications  are one or more programs that include functionality for accessing, storing, and extracting data from a wide variety of relational computing systems such as databases, and which may be implemented by conventionally known techniques. For example, the database interface applications module  can be embodied as a program for extracting and defining schema from any relational data sources that can be reached using Object Linking and Embedding DataBase (OLE DB), Open DataBase Connectivity (ODBC), and\/or Java DataBase Connectivity (JDBC) software drivers.","It should be apparent to one skilled in the art that memory unit C may include more or less components than those shown in  without departing from the spirit and scope of the present invention.","ii. Online Services and Databases","The database  in  will now be described more specifically. Database  represents any relational database system, table or view. Preferably, any OLE DB, ODBC, or JDBC compliant database is well-suited to work with the present invention. Although a single database  is shown in , multiple heterogeneous databases may be included. Examples of such databases include: Microsoft SQL server, Oracle, Informix, DB2, Sybase and Microsoft Access. Both the middle tier server  and the batch request server  may store and extract data from database . For example, one manner of extracting information as indicated by data flow line  is using JDBC to access user profile information from the database .","Database  stores information received from various sources, like for example, an online service  coupled thereto by line . One particular online service is provided by Tribune Media Services (TMS), and is shown in the embodiment of , where a TMS FTP server  provides a feed to the MPREG module  of electronic programming guide (EPG) data into database , as will be described in more detail subsequently. A Cruncher module  may be provided to load selected EPG data into the DVR  via RNS server . Optionally, other databases may be coupled to database  to provide specific types of information to database , as indicated by data line . For example, a user authentication database  may be included in front end to authenticate users against a collection of personal profile information. One particular proprietary user authentication database  that may work suitably well with the present invention is a Silknet\u2122 database. It will become apparent to those skilled in the art that additional online sources of data, including third-party search engines and other online content-providers, may provide additional information (e.g., content, broadcast, show and movie clips, chat rooms, etc. . . . ) to database  for integration with existing information, functions, features and services. As shown in , database  is coupled to a batch request server  as shown by line . It will be appreciated that numerous configurations of databases may work suitably well with the present invention, in addition to the particular implementation shown in , where database  is configured as a hub that is communicatively coupled to other sources of information for receiving information to be combined with other data stored therein.","iii. Batch Request Server","Referring to , server  will now be discussed in detail, with occasional reference made to . For convenience and ease of understanding the invention, server  will be referenced interchangeably with the \u201cbatch request server .\u201d Server  is provided for \u201cbatching\u201d requests, meaning that periodically a communication session is established between database  and server  to pull data from the database  to the server  and\/or to push data from server  to database . Additionally, periodic sessions are established between batch request server  and the RNS servers  to exchange data there between. As will be recognized by those skilled in the art, the particular embodiment of server  in  provides \u201cbatched\u201d communications between the front end and the back end , rather than a continuous real-time communication session directly between media-based devices  and the database  in a load-balanced distributed communication system as will be described in another embodiment subsequently.","One aspect of providing \u201cbatch\u201d communications with server  is to minimize the possibility of impacting the reliability of the RNS servers  as the number of media-based devices  scales upward. It is noted that there are a variety of ways to preserve the reliability of the RNS servers . As will become apparent to those skilled in the art, batch request server  can include similar components in , a description of which has already been described.","One particular implementation of batch request server  will now be discussed, by way of example, with reference to . In , a block diagram of a main memory unit  is shown of a batch request server  having software modules therein that facilitate the \u201cbatch\u201d processing functions described herein. As seen in , main memory unit  includes a first module  for \u201cpushing\u201d data to the media-based devices  through the RNS servers . In order to accomplish this function, module  can be designed to query  the database  in order to extract  data in the nature of all of the media-based devices  that have been registered to use systems A and B. A convenient parameter for discerning the registration data extracted is by way of tracking serial numbers associated with each device .","To provide further illustration, an implementation of module  will now be discussed. Module  may be embodied as a script and invoked as a CRON job, resulting with the extracted data placed into a BereklyDB file. More specifically, with this particular example, the CRON job can run a Java program: that periodically queries database  for transaction information concerning the devices  that converts each transaction into an XML snippet; and that constructs a single-indexed BerkelyDB file containing all transactions since the last query arranged by serial number of the media-based devices . The BerkelyDB file preferably includes the transactions for all devices  formatted in XML. Once the data has been extracted, module  pushes  the BereklyDB file to all RNS servers  using the RSYNC command and as described further during a discussion regarding Load Sharing Servers.","Referring back to , batch request server  may further include a second module  for pushing transactions to the RNS servers . Second module  can be designed to query database  for a list of pending transactions for all of the media-based devices . Similar to module , module  can be embodied as a script and invoked as a CRON job, having the extracted data being placed in a BerkelyDB file. The file can then be pushed to all of the RNS servers .","Main memory unit  can include a third module  that functions to monitor a particular folder for a file that the batch request server  pulls from the RNS servers . The particular folder preferably includes all of the transaction result files assembled from all of the RNS servers . Third module  preferably includes a Java program to convert the format of the result files into XML formatted data, which may be stored in database . Similar to modules  and , third module  can be embodied as a script and invoked as a CRON job that periodically collects the transaction result files using the RSYNC command.","D. Exemplary Embodiment for the Back End","Referring to , communicatively coupled to the front end is a backend sub-system which in one embodiment comprises one or more media-based devices  coupled to the front end . In another embodiment, a plurality of media-based devices  are coupled to at least one of a plurality of load sharing servers , which in turn, communicate with the front end . More details of these embodiments are discussed below.","i. Load Sharing Servers","Referring to , one embodiment is shown of a back end having a plurality of media-based devices  each being communicatively coupled to the front end as indicated by control data line . This embodiment works suitably well for a limited number of media-based devices. As larger volumes of media-based devices  are provided, back end must be modified to accommodate the increased communication traffic and loads.","With another embodiment of back end , a mechanism for undertaking load-balancing of the communication between front end and a plurality of media-based devices  will now be discussed in detail gill referring to . As shown in , the back end sub-system includes a plurality of media-based devices  that are in communication with at least one of a plurality of load sharing servers . For convenience and by way of example, reference will be made interchangeably to the load sharing servers  as Replay Network Service (RNS) servers . As will become evident from the discussion below, one technical benefit of RNS servers  is that they enable the system A to scale to large volumes of media-based devices  while providing flexibility and the expandability required for deploying a diverse set of applications.","With regard to control\/data line , although each media-based device  can be directly coupled to an RNS server , a preferred manner is to communicatively couple media-based devices  over a network  (shown in broken line) to the RNS servers . By doing so, back end functions as a distributed sub-system of media-based devices . Data communication line  indicates that the RNS servers  are coupled to the front end through the batch request server . It is noted that the present invention works suitably well without servers , but as the number of media-based devices  increases, servers  become beneficial for providing load balancing. That is, as the number of media-based device  and DVRs  increase, a single RNS server  can easily become overloaded, and thereby result in a failure of network communications.","In the same embodiment, back end sub-system can be analogized to a client-server computer model which enables the media-based devices  to access the RNS servers  over a network , which in one implementation may be the Internet. Back end sub-system comprises a distributed set of RNS servers , which are load-balanced, for example, by using a load balancing Domain Naming Service (DNS) server. A DNS server is a directory service whose general function is to facilitate a mapping of Internet host names to Internet Protocol (IP) addresses with a complete fault tolerance system, as is known in the art. Furthermore, a plurality of load-balanced DNS servers can be web-hosted at different server farms on the Internet; and DVRs  can be directed to the appropriate server farm on the Internet based on a random algorithm which is intended to be replaced with one that is geographically optimized.","As described herein, there are several ways the communication between the RNS servers  and the DVRs  may be established. The flow of data there between may be categorized based on the pull, push or broadcast models. The pull model is defined to mean that each DVR  connects (e.g., dials into) periodically to a RNS server  looking to upload requests being transmitted from the front end . The requests received by the DVR  may be placed in a \u201cto do\u201d list. Although an exemplary particular implementation of the pull model will be discussed subsequently, the implementation of the pull model at a higher level of abstraction may generally include the following interactions between the DVR  and the RNS servers : modem negotiation between the DVR  and the RNS servers  to establish a session; a Peer-to-Peer Point negotiation; a URL request being made by the DVR ; data transfer; and conclusion of the session. By contrast, the push model is defined to mean that RNS servers  initiate contact with the DVR  to download requests transmitted from the front end in the nature of recording instructions. For example, using the same PPP connection as in the pull model, when called, the DVR  can engage in a session with the RNS server , for example, if a caller identification matches a predetermined RNS server . Alternatively, broadcast tagged recording instructions may be used. For example, the Vertical Blanking Interval (VBI) can be used to embed instructions into the broadcast datastream. If a DVR  detects its tag (e.g., serial number), the DVR  stores associated instructions in its \u201cto do\u201d list. In this embodiment, the DVR  should preferably be constantly tuned to a specific broadcast channel in order to receive the data broadcast by the RNS servers .","There are several ways in which the RNS servers  may obtain information from front end or from other online data sources, the information being ultimately provided to the DVRs . These alternatives will now be discussed. First, referring to the communication system of , the front end may push data through the batch request server  to the RNS servers  over data line . On a periodic basis, the batch request servers  push a database of all of the pending requests to all of the RNS servers . In one implementation, the pending requests can be contained in a BerkelyDB file. Additionally, another BerkelyDB file can include a list of all of the users who have registered their corresponding DVR  for use over systems A and B. When a DVR  sends an HTTP request with a corresponding serial number embedded therein to an RNS server , a determination is made as to whether the DVR  has been configured to intemperate with systems A and B. As described herein, the DVR  is capable of instructing the RNS server  to provide a list of pending requests by sending a URL to the RNS server .","As will become apparent to those skilled in the art, RNS request server  can include similar components in , a description of which has already been described. One particular implementation of a main memory unit  for RNS server  will now be discussed, by way of example, with reference to . When a DVR  first establishes a session with the RNS server , a URL is sent from the DVR  with the serial number embedded therein to the RNS server . As seen in , main memory unit  includes a first module  providing the functionality of verifying whether the DVR  is properly registered to interoperate with the systems A and B. By way of example, module  can be implemented as a CGI written in Perl script that analyzes the BereklyDB file (containing a list of serial numbers for all DVRs that have registered) to match the serial number embedded in the HTTP request therewith.","Additionally, the DVR  can send another URL to the RNS server  requesting a list of responses. A second module  provides the functionality of determining and extracting the pending requests for the particular DVR . By way of example, module  can be implemented as a CGI written in Peri script that analyzes the BereklyDB file to match the serial number embedded in the HTTP request with a list of pending requests. Upon locating the pending requests, module  extracts the relevant information and transmits it to the DVR  of interest.","Also, the DVR  can send another URL to a particular RNS server  indicating a list responses to the requests received from the RNS server . When the list of responses is received by the RNS server , another module  is included to concatenate the responses into a response log file. Third module  may also be implemented as a CGI written as a Perl script. It will be appreciated that the response log file concatenates responses from many DVRs , and can grow considerably large in as the distributed back end scales upward. Accordingly and periodically, the RNS server  pushes the response log file to the database  through the batch request server . This enables database  to be updated with responses, that can include by way of example, a new channel lineup, a new Replay Guide, a list of requests that the particular DVR  has successfully processed, and corresponding errors. To implement the push function, by way of example, a standard UNIX command that invokes a CRON job can be included to execute periodically (e.g., every 15 minutes), thereby pushing the concatenated list to the batch request server . As is conventionally, known by those familiar with UNIX, a CRON job handles the execution of shell command lines at specified intervals.","Referring to , another embodiment of the communications system B is shown.  is similar to , except for the addition of the TMS FTP server  coupled to the converter module  (referred to interchangeably as the Cruncher module ) and to the MREPG module . The TMS FTP Server  is an online data source of programming data which is translated into a localized EPG format. The EPG retrieved from server  is transmitted to database , while selected portions of the EPG are transmitted to the DVR  via the Cruncher module  and the RNS server .","Referring to the block diagram of , the data flow of selected EPG data from the TMS FTP server  to DVR  is shown, wherein such EPG data is pushed from TMS FPT server  towards the RNS server  through the Cruncher . In one implementation, the Cruncher module  periodically collects EPG data from the TMS FTP server , constructs the Channel Guide and ReplayZone data, and feeds such information to the RNS servers . In the particular implementation, the Cruncher  can be designed to run a CRON job that periodically wakes up and downloads TMS data files from server . The Cruncher  can be implemented using scripts (e.g., Perl scripts) that \u201ccrunch\u201d (i.e., decompose) the EPG files into many individual files in a format suitable for the DVR . These formatted files can also include SUZUKI data inserted therein. SUZUKI data includes a collection of genre-based shows having identification tags associated therewith. These tags can in turn be used by system B to filter certain genres of show for the user to select, referenced for convenience as the Replay Zones feature. Under the control of the Cruncher , an RSYNC command known in UNIX can be used to distribute these files to the RNS servers . As conventionally known, the RSYNC command allows the transfer of data using a secure channel.","With either the push, pull or broadcast models described herein, the RNS servers  are a distributed load-balanced set of servers that receive these files from the Cruncher  and receive requests from front end . When an Internet connection is established between the DVRs  and the corresponding RNS server , the DVRs  receive the data stored in the RNS server . For example, every show in the Channel Guide is associated with a unique definition specified therewith that is pushed from the front end to DVR . The DVR  matches this data based on other data it receives from the Cruncher module . The DVR  includes a list of program data in its Channel Guide, and based upon the matching and the data received from the Cruncher , constructs its Channel Guide.","Regarding the upload of EPG data to the database , the MREPG module  comprises a batched process implemented by software and that extracts data from the TMS FTP server  to update database . The MREPG module  is responsible for providing the TV program guide content to the database . Module  also provides a search feature allowing users to find shows based on their title, description and\/or credits. Furthermore, module  also is responsible for maintaining the EPG data in database  and keeping such data up-to-date based on the TMS feed. The Channel Guide that is sent to browser  is constructed from EPG data from database , and that is loaded by the MREPG module . The DVR  has a Channel Guide that is constructed by the Cruncher module  and loaded through the RNS server . Accordingly, there are two versions of the Channel Guide, one in database  and the other in the DVR , albeit both originating from the TMS FTP server . The reason for this dual loading of TMS data in database  and in the DVR  for the Channel Guide is for the purpose of providing only necessary Channel Guide data to the DVR  so as to prevent unnecessary memory allocation thereon.","Reference is now made to an implementation shown in , where a Log-Mill module  collects all of the logs from the DVRs , each of which includes a system log file that accumulates administrative system tasks. As this system log file grows in size, it is archived from the data storage of the DVR  to free up memory space. An application can be included on DVR  to upload the system log file to the RNS server . Once the system log file is uploaded to the RNS server , Log-Mill application module  can archive it (,  in ) to a database . One example of doing so is for the Log-Mill module  to execute a CRON job that periodically wakes up to use the RSYNC routine to retrieve the system log files distributed across all RNS servers , that coalesces them, and that feeds them to database . It will be appreciated that database  may be separate from database . In one example where database  is provided from Oracle, a SQL*Load command is invoked by the Log-Mill module  to archive the system log files in the database as entries. Archiving the system log file enables usage tracking, that is, tracking the number of users utilizing certain features of the DVR . The Log-Mill is also useful for collecting information used for statistical calculations, billing, establishing projections, and targeting advertising, products, and content.","ii. Media-Based Devices and Appliances","The media-based devices and appliances  will now be discussed in more detail by referring to a general embodiment of the hardware shown in , by way of example, and occasionally to . For convenience and ease of understanding the invention, like reference numerals are referenced for similar components previously described regarding , a portion of which are applicable to media-based device and appliances . In the embodiment of , media based device  includes a control input device , a first network controller and interface (I\/F) , and an I\/O device , coupled together via bus . Optionally, media-based device  can optionally be coupled to or include a display device , and can optionally include a second network controller and interface (I\/F) , and a keyboard  coupled together via bus . It will be appreciated that device  can include more or less components than those explicitly described here. Media-based device  further includes a control unit  having a processor , memory unit , and a data storage device  also coupled to bus .","According to one implementation of , a first network controller and I\/F  may facilitate the communicative coupling of the media based device  to the batch request server  of front end over data line . Optionally, a second network controller and I\/F  may be coupled to other network and devices not explicitly shown. The processing unit  processes data signals and may comprise various computing architectures as already discussed with respect to clients  and servers .","Referring now to , further details of a particular embodiment of a main memory unit D for a media-based device  are shown. In the embodiment of , the memory unit D preferably comprises an operating system , other applications , and a network application , the functions of which have already been described. Main memory unit D further includes a video capture engine , a transaction handler (application) program , and a request handler (application) program  all communicatively coupled together via system bus . Optionally, a browser  may be included.","As noted above, the main memory unit D stores instructions and\/or data that may be executed by processing unit . The instructions and\/or data may comprise code for performing any and\/or all of the techniques described herein. These modules , , , , , , and , in addition to others not specifically shown, are coupled by system bus  to the processing unit  for communication and cooperation to provide the functionality of the media-based device . Those skilled in the art will recognize that while the present invention will now be described as modules or portions of the memory unit D of a computer-based system, the module or portions may also be stored in other media such as permanent data storage and may be distributed across a network having a plurality of different computers such as in a client\/server environment.","In general, it is noted that media-based device  may include the functionality described with respect to , or equivalent, as well as additional functionality not explicitly shown. The present invention can be implemented in a wide range of devices and is not limited to the embodiments described herein. Examples of media-based devices  can include, but are not limited to home appliances, interactive televisions, portable network televisions, portable networked devices having television functionality, or set-top applications and devices.","Referring to , one type of set-top device that is well-suited for use with the present invention is shown and embodied as an interactive television sub-system  comprising a Digital Video Recorder (DVR) , such as those available from ReplayTV, Inc. of Mountain View, Calif., by way of example. For convenience, the DVR  will be interchangeably used with a \u201cvideo replay system .\u201d In the example of , the DVR  is coupled to television-based display device  for viewing broadcast content (i.e., programs) from a broadcast provider . Program  (e.g., a television program) is received from a national broadcaster  and is passed to the display device , along with other content, data and control data  (e.g., such as ads, programming guides, and control input from a network).","Referring back to , the DVR  is a client-based system having similar functionality to that previously described with client . For example, DVR  includes a data storage device , such as a hard drive, which is used to store the incoming program signal . The saved signal can then be viewed at a later time or can be viewed immediately from the storage medium . The DVR  includes a processor  and a memory unit D (or similar components used to direct the functionality of the unit) and implements the described functions for the particular device . Further, DVR  can make decisions when disconnected from the initial source of content , that is, when functioning as a stand-along device.","In one embodiment in accordance with the present invention, the DVR  receives control information  over a network as indicated by data line  from a network server, which in a particular embodiment is described herein as the load-sharing \u201cRNS\u201d servers . Control lines  indicate that a communication link is present coupling the DVRs  to the respective RNS server . Content information  can include, but is not limited to, electronic advertisements, electronic program guides, authentication information, control input originating from a client , and other types of data from online sources and databases described herein. In response, DVR  can transmit control information , such as advertisement impressions, accounting information, and updated programming and profile information to the servers  and . It should be understood that the sub-system  can receive various types of programming, including but not limited to cable content, television content, high definition TV content, digital TV content, pay per view content, and content broadcasted over a network, including the Internet. It should also be understood that display device  can be any appropriate type of display device, including but not limited to a digital or analog television set, an Internet appliance, a cellular device, or a wireless device. The DVR  and the display device  may be separate physical devices as shown, integrated together, or broken into even more functional units than shown.","It will be understood that one implementation of the DVR  includes a telephone line to implement one or more of control lines  and . For example, such control lines  and  can include an RJ-45 (Registered Jack-45) connector, and in other implementations, can include an Ethernet connection or Token Ring Type 3 communications. In the system A shown in , the information  is passed to and from the DVR  on a regular basis (e.g., such as every 24 hours) as will be described in the \u201cbatched\u201d mode operation. Other implementations use an Internet connection as data control line  and  and connect regularly or on a more frequent basis. For example, in the additional embodiment of system B shown in , the information  is passed between the DVR  and the client  in a real-time mode, with near instantaneous results. Still, other embodiments of control lines  and  may be a wireless communication medium as will be known in the art.",{"@attributes":{"id":"p-0150","num":"0149"},"figref":"FIG. 10","b":["170","160","37","36","10","10","160"]},"The context in which the described embodiment operates is with an individual user's DVR , although the invention is not intended to be limited to interactive-television sub-systems . For example, other types of media devices and appliances  are shown in . Generally though, with a DVR , a user selects program content by replaying previously recorded \u201ctaped\u201d content from a hard drive or similar storage medium  or by turning on his television (or other content source) and selecting a program or show to watch. As the selected program content is received by the DVR , it is first stored on the storage medium  and then displayed on a display device  such as a television set or monitor .","Referring back to , the various modules representing software applications and programs executing in main memory unit D of a DVR  will now be discussed in detail with occasional reference to , for ease of understanding the present invention. The DVR  receives signals from a national broadcaster , such as a television, cable, or pay-per-view broadcaster that broadcasts one or more programs  (such as a video broadcast). The broadcast is received by the video capture engine  in memory unit D. The video capture engine  passes the captured programming content to a storage medium  as it is received and to a display device  upon user selection. Video capture engine  can be coupled to a tuner (if needed, but not explicitly shown) to indicate which of the possible broadcast programs  the user has selected, i.e., by changing the channel. The user can then choose to either display the program  as it is being received or save the program  for playback at a later time (or both).","The user at client  generally is provided with functions to: add a program listing to the guide; delete a program from the guide; update the program listing on the guide; obtain the guide from the DVR ; and obtain the channel guide from the DVR . In one implementation, and by way of example, these types of control input requests, commands and instructions provided by the user at client  can be stored in a transaction file in the front end , and pushed to the back end , ultimately being transmitted to the DVR  through the RNS servers .","Reference will occasionally be made to the sequence diagram of  when describing the \u201cbatched\u201d mode implementation. Periodically, the DVR  dials ,  into a network (e.g., Internet) to communicate with RNS servers , and requests the transaction file to be downloaded ,  to the DVR . To facilitate this communication, DVR  includes a network application module  that generally controls the frequency and time that connections to the RNS servers  are made. The network application module  also controls what data is transmitted to and received from the RNS servers .","In one implementation, the DVR  can obtain requests from the RNS servers  by parsing a request list and creating a file for each request. The file can be appropriately named according to the contents, and can be formatted in XML. The request handler  is notified when new requests have arrived at the DVR . To perform these functions, and by way of example, when control line  and  are interpreted to be a network connection, like communicating with the Internet, DVR  can establish a point-to-point protocol (PPP) connection to the Internet to communicate via http commands with the RNS servers . DVR  includes a HTTP\/PPP client module  as shown in the main memory module D of , which under the control of the network application module , generally enables the DVR  to establish a PPP connection with RNS servers  by using a communications protocol for enabling dial-up access to the Internet. By doing so, http transmissions  may be made from DVR  to the RNS servers . More specifically, a PPP connection uses an Internet protocol that provides a standard way of transporting datagrams from many other protocols over point-to-point links, as is conventionally known in the art. A PPP connection between the DVR  and server  allows the connection over a regular telephone line, thereby enabling the DVR  to be a network participant. Module  can be provided with additional functionality to enable the PPP connection by establishing and terminating a session, in addition to hanging-up and redialing functions with the gateway to the Internet. From the perspective of each DVR  functioning as a client, there is one RNS server , namely corresponding to the URL rns.replaytv.net, by way of example. One benefit of the PPP connection is that it permits direct file transfers between DVRs  and servers , as opposed to transferring a file to a dial-up computer and downloading the file into the system. Alternatively, the PPP connection can be implemented on a full-duplex link by dialing into high-speed DS1 and DS3 lines.","The DVR  establishes a session ,  with the RNS servers  to enable the transaction file to be downloaded to the DVR . For example, several exemplary features under the control of the network application module  include: (1) downloading the Channel Guide data from the front end ; (2) downloading the ReplayZone data from the front end ; (3) downloading new software upgrades from the front end ; and (4) uploading log file information from the DVR  to the front end . One manner of implementing these four functions is for the DVR  to provide http requests to the RNS server , which in response uses a CGI-gateway to invoke Peri scripts that fulfill the requests received from the DVRs .","Upon receiving the transaction file, the DVR  includes a transaction handler module , as seen in . The transaction handler  parses the transaction file into requests and calls a request handler  for each request.","The request handler  executes the request, checking for a possible conflict and returns a response for each request. Each of these responses can be formatted with XML in the same embodiment. The transaction handler  compiles the responses into a transaction response file and returns the file to a RTVS Communicator module . The RTVS Communicator module  functions to upload the transaction response file to the RNS servers  when the network application  controls the periodic automatic dial-up to the Internet to communicate with the RNS servers .","In a particular implementation, a set of routines may be included in the other applications . One such routine gets requests by parsing a request list under the control of the request handler  and creates a corresponding file. The information that may be contained in the request file can include a request identifier, the command to execute, and the target interface on which to perform the command. For example, the request file may contain a unique identifier associated with the command \u201cAddReplayChannel\u201d on the Replay Guide interface. When new requests arrive at the DVR , the request handler  is notified and processes each request and places the results in a \u201cresults\u201d file. By way of example, the \u201cresults\u201d file can be designed to include an indication of the success of the command for the unique identifier, the particular results generated by performing the command, and a timestamp associated therewith. It will be appreciated, that the described request and results files are merely exemplary and that other implementations would work suitably well with the present invention.","Various features that may be included in the other applications module  will now be described. Module  can be designed to accommodate a request to add a single show. This module is used to add record events as specified after checking for conflicts or free disk space availability. Table 1 below lists exemplary data that can be helpful in creating a data structure to be used by such a module.",{"@attributes":{"id":"p-0161","num":"0160"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Start time"]},{"entry":[{},"Duration (e.g., in minutes)"]},{"entry":[{},"Encoder Quality Level"]},{"entry":[{},"Source of Input of Show"]},{"entry":[{},"Index of channel in Channel Guide"]},{"entry":[{},"TMS ID used for sanity check"]},{"entry":[{},"Indicator to force a raw record mode for"]},{"entry":[{},"time-based record requests"]},{"entry":[{},"Indicator of a guaranteed record"]},{"entry":[{},"Indicator to record all episodes"]},{"entry":[{},"Indicator of the number of episodes"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The application module  can further include the capability to add a show-based Replay Channel using the quality and guaranteed status from the show. Based on the number of episodes and duration of the show, the calculation of available memory space  should preferably be performed. In addition to the exemplary data listed in Table 1, the following additional data can be included in the data structure: 1) the name of the Replay show to be added; and 2) the name of the Replay Channel to be added. This same combination of exemplary data can be used to accommodate a request received by the DVR  to add multiple shows.","When the request received involves adding a theme-based Replay Channel, application module  can include functionality to calculate available memory space , based upon the duration of the theme-based show, the encoder quality level, and the indicator of guaranteed values. Table 2 below lists exemplary data that is desirable in creating a data structure to be used by such a module.",{"@attributes":{"id":"p-0164","num":"0163"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Name of Replay Theme"]},{"entry":[{},"Name of Replay Channel"]},{"entry":[{},"Duration (e.g., in minutes)"]},{"entry":[{},"Encoder Quality level"]},{"entry":[{},"Flag defining what is searched"]},{"entry":[{},"Source of Input of Show"]},{"entry":[{},"Indicator to force a raw record mode for"]},{"entry":[{},"time-based record requests"]},{"entry":[{},"Indicator of a guaranteed record"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Requests received at the DVR  can also be directed to deleting scheduled record requests that are maintained in a record list. Accordingly, application module  can include functionality to delete a scheduled show from the record list on the Replay Channel. Table 3 below lists exemplary data that can be helpful in creating a data structure to be used by module  to provide this functionality.",{"@attributes":{"id":"p-0166","num":"0165"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 3"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Start time"]},{"entry":[{},"Index of channel in Channel Guide"]},{"entry":[{},"Indicator to force a raw record mode for"]},{"entry":[{},"time-based record requests"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Application  can also include functionality to accommodate a request received at DVR  directed to deleting a Replay Channel. To enable this functionality, the Replay Channel id corresponding to a show should be provided in the request.","Furthermore, application  can include functionality that enables the user to change the parameters of the channel, like for example, the hours guaranteed. Once the parameters are changed, the Replay Channel is updated, including checking for conflicts and available memory space , providing notification of the success of the update.","Additionally, application  can provide functionality to change a static Replay Channel to a show-based Replay Channel. Exemplary data that can facilitate this function includes: 1) the name of the Replay show; and 2) the name of the Replay Channel.","Other functionality for application  includes accommodating requests received to obtain the Replay Guide from the DVR , as well as the Channel Guide. Given the described functionality of the application module , one technical advantage that will be appreciated by those skilled in the art is that the corresponding requests received at the DVR  may be treated as though originating from standard interactions, and incorporated into a \u201cto do\u201d list. Whether the pull, push or broadcast flow of data is used, the DVR  does not require added infrastructure, and thus additional custom software is not required.","E. An Exemplary Method for Batched Processing of the Communication System","The process of a preferred method for the user to control the DVR  or to access related information is now described. The process begins with user authentication on the Internet initiated by a user requesting a home page such as  shown in . Those skilled in the art will readily appreciate that a URL (Uniform Resource Locator) on the world wide web is utilized in order to locate the home page . If the user is a new user to systems A and B, he is provided the opportunity to register through a web server - . . . -. For the user who has already registered, he may log in by entering personal information (e.g. user name  and password ) from home page . More details of the authentication process are described later.","Once the authentication is successfully accomplished, the web server - . . . -initiates one or more steps through the API to generate the first web page of information representing the user interface of DVR  that a user sees after login. An example of this first page of information is shown in . It will be appreciated by those skilled in the art that this information may be generated based on state information, which may be indicated by a default value, by the system administration, or by the cookie information (i.e. information related to how certain web pages have been used in the particular browser stored in small data files, or cookies, residing locally in the browser computer) embedded in the HTTP request originating from the browser . For example, the information that is eventually returned to a user who has just completed the login process could include an EPG (electronic program guide of channels) as seen in , a Replay Guide, a \u201cfind shows\u201d page, and a \u201cmanual record\u201d page. The latter are further described below.",{"@attributes":{"id":"p-0174","num":"0173"},"figref":["FIG. 13A","FIG. 13B","FIG. 13A","FIGS. 2 and 5","FIG. 11","FIG. 13B","FIG. 12A","FIG. 12B","FIG. 12A"],"b":["230","10","10","230","10","10","229","28","1","28","231","230","232","10","10","180","232","234","236","190","240","238","242","20","190","192","192","20","28","1","232"],"i":"n"},"Once the HTTP request is received at server -; the server - will initiate the appropriate steps, or make the appropriate function calls, within the context of the API on the middle tier server , as indicated in flow line . The step further involves communication  between the middle tier server  and the database . Flow line  illustrates the steps in which the middle tier server  obtains the requested information from or stores instructions into the database . One manner for doing so is with JDBC (Java DataBase Connectivity, otherwise known as the Java\u2122 database API) wherein raw data is sent from the middle tier server  to database . The database  will return the requested data preferably, although not required, in a raw format to the middle tier server  as indicated by flow line .","The middle tier server  then assembles the retrieved data and updated information into formatted data, which are forwarded  to the web server -. It is noted that the API on the middle tier server  includes that programmable logic to package (i.e., format) data received in a raw format into a form that is well-suited for flexibly defining data structures. One format that is advantageous is XML because it allows the tagging of data in a manner that is not tightly coupled together, thereby providing more flexibility in defining data structures. Other formats, though, will work suitably well with the described embodiments of the present invention, including HTML. The above step  is followed by step , whereby the server - in turn assembles and forwards a presentation, having a format that is well-suited for the client browser  (e.g., in HTML, Java, JavaScript), to browser . In an alternative embodiment, another format that works well with this presentation is WML (or Wireless Markup Language, an XML language used to specify content and user interface for wireless device such as mobile phone browser), provided that the system A and B is modified for wireless media client-server access when using WML. It will become readily apparent to those skilled in the art that the process steps shown in  are flexible in the nature of accommodating a variety of contexts related to user requests, e.g., requests for information and for recording specified programs. Steps \u2032, \u2032, \u2032, \u2032 and \u2032 indicate further communication between the client , server , middle tier server , and database , similar to those steps already described.","The middle tier server  enables communication between various web portals - . . . -and the database  through an API, which facilitates the communication of user instructions and operations for controlling the DVR  with the front end . One technical advantage of the API is that it allows a portal (e.g., -) to cache information received from the middle tier server  locally within the environment of the particular portal such as - with a frequency based upon when a user is interested in the information. Furthermore, the API of the described embodiment of the present invention is flexible so as to permit a portal - to present the content of information from the middle tier server  in a manner that enables display of information using proprietary types of graphical user interfaces (i.e., GUIs) distinctive to those system administrators operating the particular portal (e.g., -). Business logic (e.g., checking of time conflicts for recording, disk space) may be included in the middle tier server  to form a part of the API that provides a standardized mechanism for receiving requests forwarded from the portals - . . . -, and for sending back a corresponding response.","In order for the web server -, . . . , -such as portal - to present the interactive television device data at the web browser , each web portal is enabled to use, copy, encode, store, archive, distribute, transmit, modify, translate, render into an audible format, publicly display and publicly perform the content received from database , in whole or in part in connection with the property of the web portals -, . . . , -. The API enables the web portals to allow users at the browser  to download and print or perform the content. This content includes the interactive television device data, like for example, a top watched shows list. The API of the described embodiments of the present invention permits the content to fit the format and look-and-feel of the particular web portal.","As evident from the above discussion, the API plays an important role in the front end of the described embodiments of the present invention. The API includes data structure definitions, functions that facilitate communication between the middle tier server  and the portals -, . . . , -, as well as a series of routines that retrieve and manipulate data in the database . A routine is defined to mean a callable algorithm or sequence of steps residing in and forming part of the API that can be invoked to perform various tasks involving communication with the database . The routines of the API may be invoked by the servers -, . . . , -to operate the DVR  or to access related information stored in the database . A list of such routines as implemented in the described embodiments of the invention is given in . The corresponding input parameters and output files are listed in . The names of the routines, and of the parameters and files, are designed to be indicative of their respective functions, most of which will become apparent to those skilled in the art. Some less intuitive terms have been previously described with the description of front end ","One aspect of the present invention is to enable a user to operate a media-based device  remotely by communicating with one or more databases through a computer network. Referring to an embodiment of the present invention shown in , a user request  is first received and processed, for example, by a web server such as portal -. The portal - translates the request into function call  to the API . The routines embedded in the API  are then invoked and the middle tier server  on which the API  is implemented proceeds accordingly to communicate ,  with at least one database . This step  involves providing instructions to control the media-based device  and\/or retrieving  related data from the database . The database  itself may be configured as a hub that is in communication with the media-based device  and other sources of information, which have been previously described in . After all the routines called by the portal - are executed, the portal - responds to the user request by incorporating the results of the execution of the routines residing in the API.",{"@attributes":{"id":"p-0181","num":"0180"},"figref":["FIG. 16B","FIG. 2","FIG. 5","FIG. 16B","FIG. 16B"],"b":["28","2","268","260","44","280","282","284","286","264","268","268","280","288","290","292","10","10","28","1","40","282","282","294","296","37","284","54","284","298","300","286","37","37","286","40","304","306","302"]},"The GetEPG routine  provides the function of retrieving an EPG that has been customized for a particular user. One particular manner of doing so is for module  to accept user input from the instruction received from client , and to return a document of the user's EPG. By way of example, the user can include various identifiers, like the user id, the id of the particular DVR, the start time and duration of the EPG being requested, the staring channel, and the number of channels to be displayed.","The GetChannelLineUp routine  provides the function of retrieving the channel lineup of a particular DVR . This lineup may be retrieved if the user provides, for example, the user id and the id of the particular DVR . This information retrieved may depend on the availability of various program channels to the DVR  because of the service subscribed (e.g. cable or satellite disk service) and on the preference of the user who may have customize the lineup (e.g. by deleting certain channels). In some embodiments, a call to the GetChannelLineUp routine  may be embedded in the GetEPG routine  so that a single call to the latter can retrieve an EPG customized for a particular user as well as a particular DVR .","The ShowGuide routine  provides the function of retrieving the detailed description of a show as available, for example, from a commercial source providing EPG information (e.g. TMS feed), based on the user id, the id of the DVR, the start time, and the level of detail requested. Additionally, the routine  can search the detailed information of all available shows to find shows that fit the user's interest as suggested by attributes such as the show title, the actors, the director, etc. In that case, the user can provide the query criteria including attributes and word or phrase to match, and the ShowGuide routine  will return a list of shows as the search result. As for the GetEPG routine , the ShowGuide routine  may include a call to the GetChannelLineUp routine , depending on the implementation.","The function and mechanics of most other routines illustrated in  will become apparent to those skilled in the art in light of the description provided in . However, the AddRequest routine  is now further described in , and includes a set of routines that allow the user to make different types of requests. As illustrated in , these requests may range from those simple for updating of the status of the DVR  (i.e., Reqtype=none) to those for program recording (Reqtype=show or Reqtype=theme) and deletion (Reqtype=update). The recording requests can be specified by show or by time and program channel (i.e. manual recording requests). They can also be based on themes corresponding to specific search criteria or corresponding to ReplayZones, as for example identified by Suzuki identifiers.","The above discussion outlines a basic structure for the front-end operations of an embodiment of the present invention. This structure provides a web server such as portal - with a series of options for responding to requests made by users. These options are based on the API  implemented preferably in the middle tier server . In what follows, several exemplary methods to invoke the various routines will be described, taking into account elements of user interface design. For example, reference is made to the Channel Guide, as illustrated in . A user presented with this page  may view the Channel Guide for different time span and different set of channels. He can either jump to the desirable time and channel by selecting the appropriate options in the menu bars , , and , and select the \u201cgo\u201d button , or he can navigate through the Channel Guide using the buttons  and . Once the user sees a show of interest to him, he may select that show and access a pull-down menu such as  in  to see detailed description of the show or to record the selected show. He may also search for other shows similar to the selected one and\/or record them as he wishes.",{"@attributes":{"id":"p-0187","num":"0186"},"figref":["FIG. 18","FIG. 12A","FIGS. 19A-B"],"b":["320","28","1","28","1","322","37","28","1","322","328","28","1","324","296","326","298","328","37","37","330","332","300","334","336","28","1","338","304","340","37"]},"It must be emphasized that the ways in which the server - may accommodate the user and the options available to the user depend on the implementation of the user interface. The method in  and the options discussed above, for example, correspond to the channel lineup display implemented according to , including the drop-down menus as illustrated in . A different implementation of the user interface will result in other request options available to the user. For example, implementing the drop-down menu  or  will allow the user to change the recording options in the channel lineup display page. The same dependence on the user interface implementation applies to all the exemplary methods and the corresponding flow charts discussed below.","The Replay Guide shown in  illustrate one method to present the Replay Guide information. The presentation  in  shows the information as organized by Replay Channels, which may be based on individual shows or on specific themes, as discussed above. An alternative way to present the Replay Guide information is shown in , where the recorded shows are displayed in a Replay Show page. In either case, one main option available to the user is to delete one or more shows. In the case of the presentation of MG. B, another option is to delete one or more requests to record future shows. Again, the actual implementation of the Replay Guide determines what options are available to the user.",{"@attributes":{"id":"p-0190","num":"0189"},"figref":["FIG. 20","FIGS. 19A-B"],"b":["360","28","1","28","1","362","302","364","304","366","368","28","1","370","28","1","372","304","286","374","376","28","1","378","306","380","44","48","44","37"]},"The flow chart of  corresponds to the case when the Replay Guide information is presented in the Replay Show form illustrated in . In this case, a method  where a user may request the deletion only of recorded shows since he does not have access to the pending requests. First, the web server - determines  whether it possesses up-to-date Replay Guide information. If not, GetReplayGuide  is called  before the Replay Guide in the form of  is displayed . The user may request  to see the detailed description of a show listed in the Replay Guide or to see a collection of similar shows. If so, the web server - calls  the API routine ShowGuide  to retrieve the information and displays  the result. If the user requests  the deletion of a selected show from the list of recorded shows, the server - calls  AddRequest  (with Reqtype=Update and Updatetype=DeleteShow or DeleteChannel) to forward the request to the DVR  through the box transaction database .",{"@attributes":{"id":"p-0192","num":"0191"},"figref":["FIG. 22","FIG. 23"],"b":["420","28","1","422","424","28","1","426","296","428","300","430","434","436","28","1","438","304","286","37","440","430","432"]},"Next consider the example \u201cmanual record\u201d page shown in . From this page  in , a user can specify the date and time of a future recording session, as well as the program channel from which the DVR  should be recording. Although not shown, an alternative implementation of the manual record page  in  may allow the request of repeated recordings at a specified time on selected days of the week. As illustrated in , a method  for displaying the manual record page is shown. The server - first displays  the manual record page and receives  the required information for processing the manual recording requests. Then, it calls  the AddRequest routine  (with Reqtype=show and Showtype=SingleManual or RepeatManual) to forward the request to the DVR  through the box transaction database  and returns  updated information to the user.","Rounding up this discussion of exemplary methods for the web server - to respond to user requests, a preferred method  for implementing the user login to systems A and B is illustrated in . The flow chart in  represents a method that may be used with any web based services. A homepage is displayed , followed by a determination  of whether the user is a new user initiating the communication. For information gathered  on a new user, the web server - calls  the CreateAccount routine . If the user's input information is valid , then a call  is made to GetProfile , from which a default page  is determined, otherwise an error page is displayed . For information in the nature of a username and password is gathered  for an existing user, a call  is made to the Login routine . Upon authentication  of the user information, the server - determines the default page  (e.g., an EPG guide) to display next after calling  the GetProfile  routine. Otherwise, an error page is displayed .","2. An Embodiment for Remote Control of Media-Based Devices and Appliances Through on-the-Fly (Real Time) Processing","Referring now to the block diagram of , there is shown another example of a computer-based communications system  that enables the remote control of media-based devices and appliances over a communication network in accordance with the present invention. In the example of , communications system  includes a network computing system  coupled to a media-based\/data integration system  (referred to as \u201cintegration system \u201d). The network computing system  enables multiple users to communicate over a communications system  in order to access and control the media-based devices and appliances of integration system  from a remote location. Integration system  enables the media-based devices to be accessed through the communications system , thereby further enhancing stand-alone capabilities of the devices and appliances.",{"@attributes":{"id":"p-0196","num":"0195"},"figref":["FIG. 27","FIG. 1B","FIG. 27"],"b":["19","19","19","15","17","15","17"],"i":["a ","a","a ","a "]},"A. Exemplary Embodiments for the Front End and Back End Sub-Systems","Referring to , an alternative embodiment of a communications system A is shown. One technical aspect of this embodiment allows a browser  on client  to communicate  over a network , such as the Internet, to a media-based device  with near real-time communication response. In this embodiment, the front end subsystem and backend subsystem have been modified to relocate the logic therein into a middle tier server  within integration system . By doing so, the network computing system and the integration system can be embodied as two client-server subsystems, which are communicatively coupled together. Network computing system includes one or more client computers  preferably having web browser  running thereon. System further includes one or more server computers -, . . . , -, which are in communication with network , as indicated by lines . For convenience and ease of understanding the invention, like reference numerals of  have been used in .","Integration system includes media-based devices  and DVRs , which are communicatively coupled to one of a plurality of middle tier servers  via a communications link ,  and . DVR  and media-based devices  and servers  operate in a client-server relationship. The servers -, . . . , -are in communication with the servers  as indicated by data flow lines . One or more databases  are coupled to servers . Database  is similar to database  in the nature of storing a compilation of data from various online and web hosted sources similar to sources , , and , although this is not shown explicitly in . Furthermore, client computers , servers - through -, and media-based device  (and DVR ) include similar exemplary hardware as described previously with regard to . Accordingly, a detailed discussion of each of these devices is not provided so as to focus on other aspects of system A.","Referring to , an alternative embodiment of  is shown, by way of example, to include a load-balanced replicated set of databases  and an application server. The Cruncher and Log-Mill modules are rewritten as application server modules, not standalone modules as in , to enable the rapid development and deployment of diverse applications. One particular implementation that is well-suited for load-balancing includes a WebLogic Application server  provided by BEA Systems, and which may be used for server  in .","As shown in , the WebLogic Application server  includes a Cruncher application  for extracting data from the TMS FTS server  and converting the extracted data into a localized format. The Cruncher application  is no longer a standalone module as in , although it functions to transmit the TMS data to a module for aggregating data into a pool  for storage in database . Furthermore, server  includes an application module  enabling communication with the RNS servers . Another application module  enables server  to communicate with a web servers . Both modules  and  are coupled to DB Connection pool  to provide and receive data to and from database .","Reference is now made to  to describe another embodiment of the communications system , that uses the WebLogic application server  but in a manner different than that shown in . In the embodiment of , the WebLogic application server  is coupled to database , which in turn, is coupled to a Silknet database  already described herein. A portion of the network computing system includes web servers , which are coupled to server . The RNS server  is communicatively coupled to database  in , unlike the embodiment of . In this embodiment of , communications is staged through database . In general, this configuration uses less server resources due to servicing only one means of accessing the database . In this embodiment, the database  is tuned to perform database functions, as opposed to processing many transactions over numerous protocols. The application server  effectively shields the database server from such transactional tasks. According to the particular implementation, server  generally includes an Enterprise Java Bean container, which facilitates the development of client and server components in an easy manner. Also, an Apache Xerces and SAX Java class libraries  can be used for parsing XML documents received at web servers .","Turning to , another embodiment of the communications system  will now be discussed. In the embodiment of , a series of layers are depicted, where each layer performs a particular function in the data pipeline. Components shown in each layer communicate with its neighboring layers through well-defined interfaces. A first layer , referred to interchangeably as the \u201cpresentation layer ,\u201d produces the HTML pages viewed by the user. Layer  receives data in XML format from a second layer . Layer  is referred to interchangeably as the \u201cexternal interface layer .\u201d The external interface layer  presents an externally accessible interface to those web portals . To this end, layer  serves as an intermediary between the presentation layer  and a third layer , which is referred to interchangeably as the \u201cdata management layer .\u201d The data management layer  encapsulates all data access and management functionality. Using the Enterprise Java Beans services of the WebLogic application server, layer  handles the connection pools to databases , , manages transactions, manages server component lifecycles, and provides another layer of load-balancing, if necessary.","Referring to , the computer-based communication systems described herein can be designed to provide a high degree of fault tolerance and scalability. As shown in , a network infrastructure  operates with multiple network centers (or pods)  and a global load balancer , which directs traffic to the pods. Although only one pod  (e.g., associated with the West Coast) is shown, it will be appreciated that other pods (e.g., on the East Coast, or elsewhere in the world) can be included, under the management and control of the global load balancer . To provide data management to support database needs, a local database  can be included in each pod. Additionally, a main database  (e.g., databases  and  of ) can be located at the corporate office of the enterprise. The databases may be kept synchronized by using built-in facilities of the databases, and by local caching techniques. The main database  is used for archiving purposes and for communicating with external data sources like TMS, and internal data sources like SilkNet.","B. An Exemplary Method for Real-Time Processing of the Communication System","Referring back to , by coupling two client-server systems and back-to-back, communication between the client browser  and the media-based device  may be accomplished in near real-time fashion because the device  is no longer communicating in a periodic manner (i.e., batched) with middle tier server  and database , but is enabled to send and receive commands (e.g., HTTP) to and from servers , and - through -","As shown in , media-based device  communicates with the middle tier server , which also handles requests from external devices - through -. By doing so, a request made from browser  would be transmitted directly to the middle tier server  through web servers , and would be provided to the media-based devices  on-the-fly with near real-time response.","One benefit of middle tier server  is that it provides real-time access to database  without exposing the schema in the database, along with the provision of conflict checking and other data manipulation functions. Web servers  do not need to directly access the database , but through a set of APIs on middle tier server . This is advantageous because the architecture of system A is not dependent on the schema nor the database . As such, the database  and schema may be changed while not necessarily impacting the rest of system A. Additional functionality, such as conflict checking, can be easily added to system A. For example, the additional functionality can be programmed with Java code. Media-based device  can also communicate directly with the database  through an API, and no longer have to communicate with servers  and  as in . This aspect of media-based devices  being able to engage in real-time communications also enables them to communicate with one another. For example, devices  and  may communicate with each other through middle tier server . In one implementation, device  may want to establish an online \u201cchat session\u201d with or send an email to DVR . In general, there will be two parts of the middle tier server . The first part of the middle tier server  handles external requests (i.e., to web servers ), and the second part of the middle tier server  handles requests from the media-based devices  and DVR .","Referring to the particular embodiment of , several technical advantages of the WebLogic application server  are now discussed. Server  is capable of providing a single method of accessing a database  through an API for a diverse set of clients, and that it is a mechanism for achieving high scalability for millions of clients. For convenience, like reference numerals have been used for similar components appearing in . In , for ease of understanding the present invention, a single server  being representative of an Enterprise Application server is shown to be communicatively coupled to a single database . However, it will be appreciated by those skilled in the art that the implementation of  supports multiple load-balanced application servers  providing access to multiple mirrored databases .","The exemplary API routines discussed previously in detail work suitably well with this alternate embodiment with minor changes. The most important difference in this case is that the API routines are no longer required to access one or more databases, in this case database . Rather, the routines should be programmed to recognize the additional option of accessing the DVR , preferably through the RNS server . For example, in one implementation, the database may be configured with an \u201cinsert trigger\u201d which notifies a networked DVR of a new request when the request is inserted. Upon receiving a function call from a web server , the application server  decides whether communication should be established with the database , or the DVR , or neither of the two if the information requested is already under storage in some storage module within the application server. Any changes required in the API routines, however, do not affect the general logical schemes according to which the routines enable the remote control of the media-based device.","Other advantages to using server  are discussed as follows. First, no software change is required for the media-based device  and DVR . Second, communication between the external web servers  and the and server  may be facilitated through HTTP requests, Java servlets, or Java applications employing the application modules  and . Accordingly, the RNS servers  will either redirect HTTP requests directly to server  or will utilize Java servlets to perform the required communication with server . Third, the RNS servers  no longer need to maintain the large collection of files which are mirrored across the RNS servers  as in the embodiment of . Instead, with the alternate embodiment shown in , all of the data requested and provided by the device  and DVR  are brokered by the RNS servers  to the server . Fourth, since all data is stored on database , the Cruncher application  running on server  no longer needs to process and to distribute the files amongst the RNS servers . With the embodiment of , the Cruncher application  retrieves EPG data from the TMS server , constructs the Channel Guide using the retrieved EPG data and stores the constructed Channel Guide in database . Fifth, multiple applications can be developed to access the data stored in database , using server  as a single point of access thereto. This not only improves scalability and security, but also the ability to easily and rapidly develop new applications for the media-based devices  and DVR .","By contrast with the embodiment shown in , the web servers  no longer need to communicate with the Tomcat server, but to a WebLogic server  in order to load-balance the API. Additionally, these embodiments are beneficial for providing system redundancy, that is, in the event that one or more servers becomes inoperative or that congestion arises with a particular server. Accordingly, HTTP requests from web servers  and from media-based devices  would be directed to the WebLogic server , which would then disperse the request accordingly.","Although the invention has been described in considerable detail with reference to certain embodiments, other embodiments are possible. As will be understood by those of skill in the art, the invention may be embodied in other specific forms without departing from the essential characteristics thereof. Accordingly, the present invention is intended to embrace all such alternatives, modifications and variations as fall within the spirit and scope of the appended claims and equivalents."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The teachings of the present invention can be readily understood by considering the following detailed description in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 1B","FIG. 1A"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 2","FIG. 1A"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4D"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 5","FIG. 1A"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 12A"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 12B","FIG. 12A"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 13A","FIG. 1A"]},{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 13B","FIGS. 2 and 5"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 16A"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 16B","FIG. 16A"]},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 18","FIG. 12A"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 19A"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 19B"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 20","FIG. 19A"]},{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 21","FIG. 19B"]},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 23","FIG. 22"]},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 24A"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 24B"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 25","FIG. 24A"]},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 27","FIG. 1B"]},{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 28","FIG. 1B"]},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 30","FIG. 28"]},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 31"}]},"DETDESC":[{},{}]}
