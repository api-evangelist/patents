---
title: Methods and architecture for indexing and editing compressed video over the world wide web
abstract: A system and method is provided for editing and parsing compressed digital information. The compressed digital information may include visual information which is edited and parsed in the compressed domain. In a preferred embodiment, the present invention provides a method for detecting moving objects in a compressed digital bitstream which represents a sequence of fields or frames of video information for one or more captured scenes of video.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09330722&OS=09330722&RS=09330722
owner: THE TRUSTEES OF COLUMBIA UNIVERSITY IN THE CITY OF NEW YORK
number: 09330722
owner_city: New York
owner_country: US
publication_date: 20110401
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","NOTICE OF GOVERNMENT RIGHTS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This application is a continuation of U.S. patent application Ser. No. 12\/874,337, filed Sep. 2, 2010, which is a divisional of U.S. patent application Ser. No. 10\/728,345, filed Dec. 4, 2003, which is a divisional of U.S. patent application Ser. No. 09\/423,769 filed on Nov. 12, 1999, now U.S. Pat. No. 6,735,253, issued May 11, 2004, which is a U.S. National Stage application of PCT\/US97\/08266, filed May 16, 1997, the contents of which are hereby incorporated by reference in their entirety and from which priority is claimed.","The U.S. Government has certain rights in this invention pursuant to the terms of the National Science Foundation CAREER award IRI-9501266.","I. Field of the Invention","The present invention relates to techniques for editing and parsing compressed digital information, and more specifically, to editing and parsing visual information in the compressed domain.","II. Description of the Related Art","With the increasing use of local area, wide area and global networks to spread information, digital video has become an essential component of many new media applications. The inclusion of video in an application often gives the application not only increased functional utility, but also an aesthetic appeal that cannot be obtained by text or audio information alone. However, while digital video greatly increases our ability to share information, it demands special technical support in processing, communication, and storage.","In order to reduce bandwidth requirements to manageable levels, video information is generally transmitted between systems in the digital environment the form of compressed bitstreams that are in a standard format, e.g., Motion JPEG, MPEG-1, MPEG-2, H.261 or H.263. In these compressed formats, the Discrete Cosine Transform (\u201cDCT\u201d) is utilized in order to transform N\u00d7N blocks of pixel data, where n typically is set to eight, into the DCT domain where quantization is more readily performed. Run-length encoding and entropy coding (i.e., Huffman coding or arithmetic coding) are applied to the quantized bitstream to produce a compressed bitstream which has a significantly reduced bit rate than the original uncompressed source signal. The process is assisted by additional side information, in the form of motion vectors, which are used to construct frame or field-based predictions from neighboring frames or fields by taking into account the inter-frame or inter-field motion that is typically present.","In order to be usable by a receiving system, such coded bitstreams must be both parsed and decoded. For example, in the case of an MPEG-2 encoded bitstream, the bitstream must be parsed into slices and macroblocks before the information contained in the bitstream is usable by an MPEG-2 decoder. Parsed bitstream information may be used directly by an MPEG-2 decoder to reconstruct the original visual information, or may be subjected to further processing.","In the case of compressed digital video, further processing of video information can occur either in the normal, uncompressed domain or in the compressed domain. Indeed, there have been numerous attempts by others in the field to realize useful techniques for indexing and manipulating digital video information in both the uncompressed and compressed domains.","For example, in the article by S. W. Smoliar et al., \u201cContent-Based Video Indexing and Retrieval,\u201d IEEE Multimedia, summer 1994, pp. 62-72, a color histogram comparison technique is proposed to detect scene cuts in the spatial (uncompressed) domain. In the article by B. Shahraray, \u201cScene Change Detection and Content-Based Sampling of Video Sequences,\u201d SPIE Conf. Digital Image Compression: Algorithms and Technologies 1995, Vol. 2419, a block-based match and motion estimation algorithm is presented.","For compressed video information, the article by F. Arman et al., \u201cImage Processing on Compressed Data for Large Video Databases,\u201d Proceedings of ACM Multimedia '93, June 1993, pp. 267-272, proposes a technique for detecting scene cuts in JPEG compressed images by comparing the DCT coefficients of selected blocks from each frame. Likewise, the article by J. Meng et al., \u201cScene Change Detection in a MPEG Compressed Video Sequence,\u201d IS&T\/SPIE Symposium Proceedings, Vol. 2419, February 1995, San Jose, Calif., provides a methodology for the detection of direct scene cuts based on the distribution of motion vectors, and a technique for the location of transitional scene cuts based on DCT DC coefficients. Algorithms disclosed in the article by M. M. Yeung, et al. \u201cVideo Browsing using Clustering and Scene Transitions on Compressed Sequences,\u201d IS&T\/SPIE Symposium Proceedings, February 1995, San Jose, Calif. Vol. 2417, pp. 399-413, enable the browsing of video shots after scene cuts are located. However, the Similar et al., Shahraray, and Arman et al. references are limited to scene change detection, and the Meng et al. and Yeung et al. references do not provide any functions for editing compressed video.","Others in the field have attempted to address problems associated with camera operation and moving objects in a video sequence. For example, in the spatial domain, H. S. Sawhney, et al., \u201cModel-Based 2D & 3D) Dominant Motion Estimation for Mosaicking and Video Representation,\u201d Proc. Fifth Int'l conf. Computer Vision, Los Alamitos, Calif., 1995, pp. 583-390, proposes to find parameters of an affine matrix and to construct a mosaic image from a sequence of video images. In similar vain, the work by A. Nagasaka et al., \u201cAutomatic Video Indexing and Full-Video Search for Object Appearances,\u201d in E. Knuth and L. M. Wegner, editors, Video Database Systems, II, Elsevier Science Publishers B. V., North-Holland, 1992, pp. 113-127, proposes searching for object appearances and using them in a video indexing technique.","In the compressed domain, the detection of certain camera operations, e.g., zoom and pan, based on motion vectors have been proposed in both A. Akutsu et al., \u201cVideo Indexing Using Motion Vectors,\u201d SPIE Visual Communications and Image Processing 1992, Vol. 1818, pp. 1522-1530, and Y. T. Tse et al., \u201cGlobal Zoom\/Pan Estimation and Compensation For Video Compression\u201d Proceedings of ICASSP 1991, pp. 2725-2728. In these proposed techniques, simple three, parameter models are employed which require two assumptions, i.e., that camera panning is slow and focal length is long. However, such restrictions make the algorithms not suitable for general video processing.","There have also been attempts to develop techniques aimed specifically at digital video indexing. For example, in the aforementioned Smoliar et al. article, the authors propose using finite state models in order to parse and retrieve specific domain video, such as news video. Likewise, in A. Hampapur, et al., \u201cFeature Based Digital Video Indexing,\u201d IFIP2.6 Visual Database Systems, III, Switzerland, March, 95, a feature based video indexing scheme using low level machine derivable indices to map into the set of application specific video indices is presented.","One attempt to enable users to manipulate image and video information was proposed by J. Swartz, et al., \u201cA Resolution Independent Video Language,\u201d Proceedings of ACM Multimedia '95, pp. 179-188, as a resolution independent video language (Rivl). However, although Rivl uses group of pictures (GOPs) level direct copying whenever possible for \u201ccut and paste\u201d operations on MPEG video, it does not use operations in the compressed domain at frame and macroblock levels for special effects editing. Instead, most video effects in Rivl are done by decoding each frame into the pixel domain and then applying image library routines.","The techniques proposed by Swartz et al. and others which rely on performing some or all video data manipulation functions in the uncompressed domain do not provide a useful, truly comprehensive technique for indexing and manipulating digital video. As explained in S.-P. Chang, \u201cCompressed-Domain Techniques for Image\/Video Indexing and Manipulation,\u201d IEEE Intern. Conf. on Image Processing, ICIP 95, Special Session on Digital Image\/Video Libraries and Video-on-demand, October 1995, Washington D. C., the disclosure of which is incorporated by reference herein, the compressed-domain approach offers several powerful benefits.","First, implementation of the same manipulation algorithms in the compressed domain is much cheaper than that in the uncompressed domain because the data rate is highly reduced in the compressed domain (e.g., a typical 20:1 to 50:1 compression ratio for MPEG). Second, given most existing images and videos stored in the compressed form, specific manipulation algorithms can be applied to the compressed streams without full decoding of the compressed images\/videos. In addition, because that full decoding and re-encoding of video are not necessary, manipulating video in the compressed domain avoids the extra quality degradation inherent in the reencoding process. Thus, as further explained in the article by the present inventors, I. Meng and S.-F. Chang, \u201cTools for Compressed-Domain Video Indexing and Editing,\u201d SPIE Conference on Storage and Retrieval for Image and Video Database, Vol. 2670, San Jose, Calif., February 1996, the disclosure of which is incorporated by reference herein, for MPEG compressed video editing, speed performance can be improved by more than 60 times and the video quality can be improved by about 3-4 dB if a compressed-domain approach is used rather than a traditional decode-edit-reencode approach.","A truly comprehensive technique for indexing and manipulating digital video must meet two requirements. First, the technique must provide for key content browsing and searching, in order to permit users to efficiently browse through or search for key content of the video without full decoding and viewing the entire video stream. In this connection, \u201ckey content\u201d refers to key frames in video sequences, prominent video objects and their associated visual features (motion, shape, color, and trajectory), or special reconstructed video models for representing video content in a video scene. Second, the technique must allow for video editing directly in the compressed domain to allow users to manipulate an specific object of interest in the video stream without having to fully decode the video. For example, the technique should permit a user to cut and paste any arbitrary segment from an existing video stream to produce a new video stream which conforms to the valid compression format.","Unfortunately, none of the prior art techniques available at present are able to meet these requirements. Thus, the prior art techniques fail to permit users who want to manipulate compressed digital video information with the necessary tools to extract a rich set of visual features associated with visual scenes and individual objects directly from compressed video so as not only to enable content based query searches, but also to allow for integration with domain knowledge for derivation of higher-level semantics.","An object of the present invention is to provide comprehensive techniques for indexing and manipulating digital video in the compressed domain.","Another object of the present invention is to provide techniques for key content browsing and searching of compressed digital video without decoding and viewing the entire video stream.","A further object of the present invention is to provide techniques which allow for video editing directly in the compressed domain","A still further object of the present invention is to provide tools that permit users who want to manipulate compressed digital video information to extract a rich set of visual features associated with visual scenes and individual objects directly from compressed video.","Yet another object of this invention is to provide an architecture which permits users to manipulate compressed video information over a distributed network, such as the Internet.","In order to meet these and other objects which will become apparent with reference to further disclosure set forth below, the present invention provides a method for detecting moving video objects in a compressed digital bitstream which represents a sequence of fields or frames of video information for one or more previously captured scenes of video. The described method advantageously provides for analyzing a compressed bistream to locate scene cuts so that at least one sequence of fields or frames of video information which represents a single video scene is determined. The method also provides for estimating one or more operating parameters of a camera which initially captured the video scene, by analyzing a portion of the compressed bitstream which corresponds to the video scene, and for detecting one or more moving video objects represented in the compressed bitstream by applying global motion compensation with the estimated camera operating parameters.","In a preferred process, the compressed bitstream is a bitstream compressed in accordance with the MPEG-1, MPEG-2, H261, or H263 video standard. In this preferred embodiment, analyzing can beneficially be accomplished by parsing the compressed bitstream into blocks of video information and associated motion vector information for each field or frame of video information which comprises the determined sequence of fields or frames of video information representative of said single scene, performing inverse motion compensation on each of the parsed blocks of video information to derive discrete cosign transform coefficients for each of the parsed blocks of video information, counting the motion vector information associated with each of the parsed blocks of video information, and determining from the counted motion vector information and discrete cosign transform coefficient information whether one of the scene cuts has occurred.","In an alternative embodiment, analyzing is performed by parsing the compressed bitstream into blocks of video information and associated motion vector information for each field or frame of video information which comprises the determined sequence of fields or frames of video information representative of the scene, and estimating is executed by approximating any zoom and any pan of the camera by determining a multi-parameter transform model applied to the parsed motion vector information. In an especially preferred process, the frame difference due to camera pan and zoom motion may be modeled by a six-parameter affirm transform which represents the global motion information representative of the zoom and pan of the camera.","The detecting step advantageously provides for computing local object motion for one or more moving video objects based on the global motion information and on one or more motion vectors which correspond to the one or more moving video objects. In addition, thresholding and morphological operations are preferably applied to the determined local object motion values to eliminate any erroneously sensed moving objects. Further, border points of the detected moving objects are determined to generate a bounding box for the detected moving object.","The present invention also provides for an apparatus for detecting moving video objects in a compressed digital bitstream which represents a sequence of fields or frames of video information for one or more previously captured scenes of video. Usefully, the apparatus includes means for analyzing the compressed bistream to locate scene cuts therein and to determine at least one sequence of fields or frames of video information which represents a single video scene, means for estimating one or more operating parameters for a camera which initially viewed the video scene by analyzing a portion of the compressed bitstream which corresponds to the video scene, and means for detecting one or more moving video objects represented in the compressed bitstream by applying global motion compensation to the estimated operating parameters.","A different aspect of the present invention provides techniques for dissolving an incoming scene of video information which comprises a sequence of fields or frame of compressed video information to an outgoing scene of video information, which comprises a sequence of fields or frame of compressed video information. This technique advantageously provides for applying DCT domain motion compensation to obtain DCT coefficients for all blocks of video information which make up a last frame of the outgoing video scene and the first frame of the incoming video scene, and for creating a frame in the dissolve region frame from the DCT coefficients of the last outgoing frame and the first incoming frame.","In an especially preferred arrangement, an initial value for a weighting function is selected prior to the creation of a first frame in the dissolve region and is used in the creation of the first frame in the dissolve region. The weighting value is then incremented, and a second dissolve frame from the DCT coefficients is generated.","In yet another aspect of the present invention, a technique for masking a compressed frame of digital video information is provided. The technique first determines whether the frame to be masked is intra-coded, predictive coded or bi-directionally predictive-coded. If the frame is intra-coded, the technique provides for extracting DCT coefficients for all blocks within the frame, examining a block to determine where in the frame the block is located, setting DCT coefficients for the block to zero if the block is outside the mask region, and applying a DCT cropping algorithm to the DCT coefficients if the block is on the boundary of the mask region.","If the frame is predictive-coded or bi-directionally predictive-coded, the technique provides for examining motion vectors associated with block, to determine whether they point to blocks outside or on the mask region, and reencoding the block if a motion vector points to blocks outside the boundary, or on, the mask region.","In still another aspect of the present invention, a technique for generating a frozen frame of video information from a sequence of frames of compressed video information is provided. The technique attractively provides for selecting a frame of compressed video information to be frozen, determining whether the frame to be frozen is intra-coded, predictive-coded or bi-directionally predictive-coded, and if the frame is not intra-coded, converting it to become intra-coded, creating duplicate predictive-coded frames, and arranging the intra-coded frame and the duplicate predictive-coded frames into a sequence of compressed frames of video information.","In yet a further aspect of the present invention, a system for editing compressed video information over a distributed network is provided. The system includes a client computer, a network link for permitting said client computer to search for and locate compressed video information on said distributed network, and tools for editing a compressed bitstream of video information over the distributed network.","The accompanying drawings, which are incorporated and constitute part of this disclosure, illustrate a preferred embodiment of the invention and serve to explain the principles of the invention.","Referring to , an exemplary embodiment of our invention which permits a user to edit and parse visual information in the compressed domain is provided. The architecture of the system  is broadly arranged into three functional modules, a parsing module , a visualization module , and an authoring and editing module .","In the parsing module, an incoming bitstream of compressed video information  which may be, for example, an MPEG-2 compressed bitstream is examined for scene cuts  and broken into shot segments, where each segment includes one or more fields or frames of compressed video information. In an MPEG-2 bitstream, the shot segments will be made of three types of fields or frames, i.e., Intra-coded (\u201cI\u201d) fields which are coded independently and entirely without reference to other fields, Predictive-coded (\u201cP\u201d) fields which are coded with reference to temporally preceding I or P fields in the sequence, and Bi-directionally predictive-coded (\u201cB\u201d) fields which are coded with reference to the nearest preceding and\/or future I or P fields in the sequence. The bistream will also include associated motion vector information for the P and B fields which \u201cpoint\u201d to blocks of video information in a preceding or succeeding field or frame which are needed to reconstruct the compressed field or frame of video information.","The parsing module compiles a list of scene cuts which are useful for indexing the compressed video information. The individual shot segments are next analyzed  in order to derive camera operation parameters. In , the vector field  is representative of the pan of the camera which originally captured the video information which is being analyzed. Histogram  is used to detect the pan of the camera. Based on the derived operating parameters, moving objects  within the compressed video information  are detected and shape and trajectory features for such moving objects are extracted.","In the visualization module , the complied list of scene cuts and the derived camera zoom and pan information are used to extract key frames  which represent each video shot. The key frames  are placed in a hierarchical arrangement  so that they may be readily browsed with a hierarchical video scene browser, such as the browser described in D. Zhong et al., \u201cClustering Methods for Video Browsing and Annotation,\u201d Storage and Retrieval for Still Image and Video Databases IV, IS&T\/SPIE's Electronic Images: Science & Tech. 96, Vol 2670 (1996). A content-based image query system  may then be used to index and retrieve key frames or video objects based on their visual features and spatial layout.","In the authoring and editing module , software tools are provided to not only enable a user to cut and past arbitrary compressed video segments to form new video segments, but also to add special effects to such video segments, such as dissolve, key, masking and motion effects.","The parsing module  is explained in further detail with reference to the . Although the preferred steps executed e.g. on a computer  to locate scene cuts in a compressed bitstream are fully disclosed in the above referenced article by Meng et al., the disclosure of which is incorporated by reference herein, that technique is now described with reference to .","An MPEG-1 or MPEG-2 compressed bitstream  that is received by the parsing module  is first subjected to parsing . Such a bitstream represents an arrangement of N\u00d7N blocks of video information that are broadly organized into macroblocks, where each macroblock is defined by four blocks of luminance information and one block of chrominance information, and further organized into slices which represent contigous sequences of macroblocks of video information in raster scan order. The N\u00d7N blocks of video information are preferably 8\u00d78 blocks. The bitstream also represents associated motion vector information and prediction error difference information which are needed to reconstruct original blocks of video information.","In the parsing stage , the bitstream, is parsed down to the fundamental block level by parsing techniques known to those skilled in the art . The parsed blocks of video information are still in compressed format and are thus represented by Direct Cosign Trasform (\u201cDCT\u201d) coefficients which have been quantized, Zig-Zag nm-length encoded and variable length coded, as those skilled in the art will appreciate.","In the inverse motion compensation stage , the parsed blocks of video information which belong to P and B frames are then subjected to inverse motion compensation  by using the associated motion vector information to locate reference blocks of video information and reconstruct the DCT coefficients of blocks of video information in the B and P frames. In this step , only the first (the \u201cDC\u201d) DCT coefficients are used. Motion vectors associated with the B and P frames are counted  for each frame in the sequence.","In the Statistical Stage , three ratios, i.e., the number of intra-coded macroblocks to the number of forward motion vectors, the number of backward motion vectors to the number of forward motion vectors, and the number of forward motion vectors to the number of backward motion vectors, are calculated  in order to detecting direct scene cuts in P, B, and I frames, respectively. In this stage, the fact that most video shots of compressed MPEG video are formed by consecutive P, I and B frames that have a high degree of temporal correlation is taken advantage of. For P and B frames, this correlation is characterized by the ratio of the number of backward motion vectors, or intracoded macroblocks, to the number of forward motion vectors. For example, when a direct scene cut occurs on a P-frame, most macroblocks will be intracoded (i.e., no interframe prediction).","Also in the statistical stage  the variance of the DCT DC coefficients of Luminance in the I, P and B frames is determined . As those skilled in the art will appreciate.","Next, in the detection stage , the ratios calculated in  are compared to local adaptive thresholds in order to detect the peak values . For P frames, the ratio of the number of intra-coded macroblocks to the number of forward motion vectors is examined. For B frames, the ratio of the number of backward motion vectors to the number of forward motion vectors is examined.","Also in the detection stage , the variance of DCT DC coefficients calculated for I and P frames in  is used in two ways. For I frames, this variance information is used together with the ratio of the number of forward motion vectors to the number of backward motion vectors determined in  in order to detect candidate scene changes . If the ratio is above a predetermined threshold, the frame is marked as containing a suspected scene cut. If the variable information is much different than was the variance information for the immediately preceding I frame, a suspected scene cut is likewise detectable. The variance information is also used directly to detect dissolve regions, i.e. regions where one scene is fading out and a second is fading in  by examining the parabolic curve of the variance information.","In the decision stage , duplicate detections of scene cuts are eliminated  before list of scenes  is determined. In addition, if a suspected scene change occurs within a time threshold T rejection of a previously detected scene change, no scene change is recorded.","With scene cuts detected, the bitstream is broken into scenes or \u201cshots\u201d which represent different sets of visual information that may be of interest to a user. The next block of our parsing module , camera operating estimation , examines the individual shots for recognizable information which is highly useful in indexing the different shots which have been parsed.","In particular, certain low level visual features such as camera zoom and pan, and the presence of moving visual objects are useful information for video indexing. Camera zoom and pan, which give the global motion of the shot being analyzed, can be estimated with a 6-parameter affine transform model by using the actual motion vectors from the MPEG compressed stream.","The motion vectors in MPEG are usually generated by block matching: finding a block in the reference frame so that the mean square error of prediction is minimized. Although the motion vectors do not represent the true optical flow, it is still good in most cases to estimate the camera parameters in sequences that do not contain large dark or uniform regions.","When the distance between the object or background and the camera is large, a 6 parameter affine transform can be used to describe the global motion of the current frame:",{"@attributes":{"id":"p-0069","num":"0068"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mi":"u"}},{"mtd":{"mi":"v"}}]}},{"mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mn":"1"},{"mi":"x"},{"mi":"y"},{"mn":"0"},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mi":"x"},{"mi":"y"}]}]}},"mo":"\u00b7","msup":{"mrow":{"mo":["[","]"],"mtable":{"mtr":{"mtd":[{"msub":{"mi":"a","mn":"1"}},{"msub":{"mi":"a","mn":"2"}},{"msub":{"mi":"a","mn":"3"}},{"msub":{"mi":"a","mn":"4"}},{"msub":{"mi":"a","mn":"5"}},{"msub":{"mi":"a","mn":"6"}}]}}},"mi":"T"}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"1"}}]}}}},"br":{},"sup":["T ","T "],"sub":["1 ","2 ","3 ","4 ","5 ","6"]},"U for [u, v]",{"@attributes":{"id":"p-0071","num":"0070"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mi":"X","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mrow":{"mi":"for","mo":["\u2062","[","]"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mtable":{"mtr":[{"mtd":[{"mn":"1"},{"mi":"x"},{"mi":"y"},{"mn":"0"},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mi":"x"},{"mi":"y"}]}]}}},"mo":","}}}},"and  for [aaaaaa].","Given the motion vector for each macroblock, a global parameter can be determined using Least Squares (\u201cLS\u201d) estimation by finding a set of parameters to  minimize the error between the motion vectors estimated in (1) and the actual motion vectors obtained from the MPEG stream:",{"@attributes":{"id":"p-0074","num":"0073"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"S","mo":"\u2061","mrow":{"mo":["(",")"],"mover":{"mi":["a","_"]}}},{"munder":{"mo":"\u2211","mi":"X"},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mi":"Y"},"mo":"\u2062","mrow":{"mo":["[","]"],"mrow":{"msup":[{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mover":{"mi":"u","mo":"^"},"mi":"xy"},{"mi":["u","xy"]}],"mo":"-"}},"mn":"2"},{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mover":{"mi":"v","mo":"^"},"mi":"xy"},{"mi":["v","xy"]}],"mo":"-"}},"mn":"2"}],"mo":"+"}}}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"2"}}]}}}},"br":{},"sup":"T ","img":[{"@attributes":{"id":"CUSTOM-CHARACTER-00003","he":"3.13mm","wi":"1.78mm","file":"US09330722-20160503-P00001.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00004","he":"3.13mm","wi":"1.78mm","file":"US09330722-20160503-P00001.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}]},{"@attributes":{"id":"p-0075","num":"0074"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mrow":[{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mi":"N"},{"mi":"A"},{"mi":"B"}]},{"mtd":[{"mi":"A"},{"mi":"C"},{"mi":"E"}]},{"mtd":[{"mi":"B"},{"mi":"E"},{"mi":"D"}]}]}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"a","mn":"1"}}},{"mtd":{"msub":{"mi":"a","mn":"2"}}},{"mtd":{"msub":{"mi":"a","mn":"3"}}}]}}],"mo":"\u00b7"},{"mrow":[{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"U","mn":"1"}}},{"mtd":{"msub":{"mi":"U","mn":"2"}}},{"mtd":{"msub":{"mi":"U","mn":"3"}}}]}},{"mrow":[{"mi":"and","mo":["\u2062","[","]"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mtable":{"mtr":[{"mtd":[{"mi":"N"},{"mi":"A"},{"mi":"B"}]},{"mtd":[{"mi":"A"},{"mi":"C"},{"mi":"E"}]},{"mtd":[{"mi":"B"},{"mi":"E"},{"mi":"D"}]}]}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"a","mn":"4"}}},{"mtd":{"msub":{"mi":"a","mn":"5"}}},{"mtd":{"msub":{"mi":"a","mn":"6"}}}]}}],"mo":"\u00b7"}],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"V","mn":"1"}}},{"mtd":{"msub":{"mi":"V","mn":"2"}}},{"mtd":{"msub":{"mi":"V","mn":"3"}}}]}}],"mo":"="}],"mo":"="},{"mi":"N","mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"x"},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mi":"y"},"mo":"\u2062","mn":"1"}}},{"mi":"A","mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"x"},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mi":"y"},"mo":"\u2062","mi":"x"}}},{"mi":"B","mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"x"},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mi":"y"},"mo":"\u2062","mi":"y"}}},{"mi":"C","mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"x"},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mi":"y"},"mo":"\u2062","msup":{"mi":"x","mn":"2"}}}},{"mi":"D","mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"x"},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mi":"y"},"mo":"\u2062","msup":{"mi":"y","mn":"2"}}}},{"mi":"E","mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"x"},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mi":"y"},"mo":"\u2062","mrow":{"mi":["x","y"],"mo":"\u00b7"}}}},{"msub":{"mi":"U","mn":"1"},"mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"x"},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mi":"y"},"mo":"\u2062","msub":{"mi":["u","xy"]}}}},{"msub":{"mi":"U","mn":"2"},"mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"x"},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mi":"y"},"mo":"\u2062","mrow":{"msub":{"mi":["u","xy"]},"mo":"\u00b7","mi":"x"}}}},{"msub":{"mi":"U","mn":"3"},"mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"x"},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mi":"y"},"mo":"\u2062","mrow":{"msub":{"mi":["u","xy"]},"mo":"\u00b7","mi":"y"}}}},{"msub":{"mi":"V","mn":"1"},"mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"x"},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mi":"y"},"mo":"\u2062","msub":{"mi":["v","xy"]}}}},{"msub":{"mi":"V","mn":"2"},"mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"x"},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mi":"y"},"mo":"\u2062","mrow":{"msub":{"mi":["v","xj"]},"mo":"\u00b7","mi":"x"}}}},{"msub":{"mi":"V","mn":"3"},"mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"x"},"mo":"\u2062","mrow":{"munder":{"mo":"\u2211","mi":"y"},"mo":"\u2062","mrow":{"msub":{"mi":["v","xy"]},"mo":"\u00b7","mrow":{"mi":"y","mo":"."}}}}}],"mo":["\u2062","\u2062",",","\u2062",",",",",",","\u2062",",",",",",","\u2062",",",",",",","\u2062",",",","],"mstyle":[{"mtext":{}},{"mtext":{}},{"mtext":{}},{"mtext":{}},{"mtext":{}}],"mi":"where"}},{"mrow":{"mo":["(",")"],"mn":"3"}}]}}}}},"All summations are computed over all valid macroblocks whose motion vectors survive after the nonlinear noise reduction process. (For example, median filter.) This process is used to eliminate obvious noise in the motion vector field. After the first LS estimation, motion vectors that have large distance from the estimated ones are filtered out before a second LS estimation. The estimation process is preferably iterated several times to refine the accuracy.","Referring to , the foregoing process to determine a global motion parameter is illustrated in flow diagram . In step , each motion vector associated with the B and P frames contained in the shot are decoded. The intermediate variables N, A, B, C, D, and E are interactively calculated using the x and y coordinates for each macroblock in the current frame of video being analyzed , Next, intermediate transform parameters u, u, u, v, v, vare calculated using the decoded motion vectors and the x and y coordinates for such macroblocks . Finally, the vector  is solved for by solving for the matrix inverse operation .","After the global camera parameters  are found, object motion can be extracted by applying global motion compensation. Referring to , if an object located at (x, y) in the current frame moves from (x, y) to (x, y) in the reference frame with motion vector U, then U+M=X\u00b7. Thus, the motion of the local object can be recovered from its associated motion vectors as follows:\n\n\u2003\u2003(4)\n","This is referred to as the global motion compensation (\u201cGMC\u201d). With reference to , a moving ballerina is shown against a largely stagnant background. In , the original motion vectors for an exemplary frame of compressed video is illustrated. In , the vector map for the exemplary frame is shown after GMC has been applied. As illustrated in , for motion vectors of the background, GMC gives mostly zero values, while for motion vectors of the foreground moving objects, GMC reveals the local motion of objects.","The moving objects themselves can be detected by comparing the magnitude of the local motion to a predetermined threshold value and by performing simple morphological operations to delete small false objects and to fill noisy spots. For example, in  there is shown an extracted moving object.","The DCT coefficients of the moving object are extracted from the compressed video information to provide for later querying of the object. Extraction of the DCT coefficient is done by the DCT domain motion compensation algorithm, as disclosed in U.S. Pat. No. 5,408,274 to Chang et al., the disclosure of which is incorporated by reference herein. The outermost points of the extracted object are used to form a bounding box, as illustrated in .","Again referring to , in the visualization module , the location and size of each extracted bounding box is saved in a database  for later browsing and indexing by a user. Likewise, visual features of extracted objects, such as color, textures, and shape, are used to provide content-based visual querying  of these and associated video scenes.","The extraction of moving video objects from a compressed bitstream will now be described with reference to the flow diagram  of . First, GMC is applied to the present frame of video . Second, each globally motion compensated motion vector is compared to a predetermined threshold value  in order to eliminate non-moving parts of the frame from further consideration. Next, for blocks of information which still have non-zero motion vectors, the number of contiguous blocks are counted . For each contiguous area, the number of associated blocks are compared to a predetermined minimum threshold value  in order to eliminate false small objects from being detected. Finally, the border points for the remaining objects are identified and saved in a database, e.g. database , for later use , together with corresponding DCT coefficients for all blocks within the border. In this way, the important moving video object can be extracted and indexed for later viewing by a user.","With reference to , useful techniques for directly editing compressed digital video will now be described. In general, editing of compressed video is directed to permitting a user to cut a first segment of video  from a first video sequence  and a second segment of video  from a second sequence of video  to form a new bitstream of video information . Such techniques have been described in the art, including in the article by the present inventors, J. Meng et al., \u201cTools for Compressed-Domain Vide Indexing and Editing,\u201d SPIE Conf. on Storage and Retrieval for Image and Video Database, Vol. 2670 (1996), the disclosure of which is incorporated by reference herein.","In addition to the basic editing function \u201ccut and paste\u201d, several more advanced visual effects can be created in the compressed domain. For I frames, the basic compression component is the Discrete Cosine Transform (DCT), which can be written in the following form:\n\n()=DCT(())\u2003\u2003(5)\n","Given the DCT, linear operations such as intensity addition and scaling can performed in accordance with equations (6) and (7):\n\nDCT(()+())=()+()\u2003\u2003(6)\n\nDCT(\u03b1\u00b7())=\u03b1\u00b7()\u2003\u2003(7)\n","Algorithms for other operations such as spatial scaling, translation, and filtering in DCT domain are well known in the art. Generally, the DCT of the output video Y can be obtained by linear matrix operations of the input DCT, P, as follows:",{"@attributes":{"id":"p-0088","num":"0087"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"Y","mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"i"},"mo":"\u2062","mrow":{"msub":[{"mi":["W","i"]},{"mi":["P","i"]},{"mi":["H","i"]}],"mo":["\u00b7","\u00b7"]}}}},{"mrow":{"mo":["(",")"],"mn":"8"}}]}}}},"br":{},"sub":["i ","i "]},"One of the most important tools used in film editing is dissolve. As illustrated in , dissolve refers to the technique where an outgoing video scene  is faded out while an incoming video scene  is faded in. In order to perform a dissolve on two different scenes of video, the actual DCT coefficients for each block of compressed video in the last frame of the outgoing video scene, and the DCT coefficients for each block of compressed video in the first frame of the incoming video scend, must be extracted. One technique for extracting such DCT coefficients is described in the above-mentioned Chang et al. patent. The Chang et al. patent describes a technique which uses DCT domain inverse motion compensation to obtain the DCT coefficients for all blocks of video information which make up the needed frames of video.","When there is no or little motion in the two videos scenes, the dissolve effects can be approximated by the linear combination of the two video scenes Fand F:\n\n()=\u03b1()\u00b7()+(1\u2212\u03b1())\u00b7()\u2003\u2003(9)\n\nv and v are coordinates within a frame, t is the frame index value which may range from 1 to N, a being the total number of frames in the dissolved region, and \u03b1(t) is a weighing function that is variable from 100% to 0%, Fis the composite of the derived DCT coefficients for all blocks which make up the last frame of the outgoing video scene and Fis the composite of the derived DCT coefficients for all blocks which make up the first frame of the incoming video scene. The resulting effect is a dissolve transition from a particular frozen frame of the outgoing video scene to another frozen frame of the incoming video scene.\n","Thus, to smooth out the dissolve where one or both of the dissolving scenes contain moving video objects, it is desirable to re-encode several dissolving frames over a transitional period t-t. The reader is referred to the Appendix of this patent document for our preferred source code for implementing a dissolve.","Referring to , a method for dissolving an incoming scene and an outgoing scene of video is now described by way of a flowchart . In step , DCT domain motion compensation is used to obtain the DCT coefficients for all blocks of video information which make up the last frame of an outgoing video scene F. In step , DCT domain motion compensation is used to obtain the DCT coefficients for all blocks of video information which make up the first frame of an incoming video scene F. In step , the initial value for the weighing function, \u03b1(t), is chosen. In step , equation 9 is applied to create a first frame in the dissolve region. The value oft is then incremented until a final value n is obtained . The process - is repeated to create all dissolve frames for the duration t=1 to n.","A second important tool used in film editing is masking. As illustrated in , the film effect of masking video refers to transforming an original video scene having e.g. a 4:3 aspect ratio to different aspect ratios such as 1:1.66, 1:1.85, 1:2.35, or 16:9. Masking can also be used to crop part of the frame region to a different frame size. For I frames, the DCT coefficients for blocks outside of the desired region are set to 0, and the coefficients for blocks that lie on the masking boundaries can recalculated using a simplified DCT cropping algorithm:",{"@attributes":{"id":"p-0094","num":"0093"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mrow":[{"mi":"DCT","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"B"}},{"mrow":[{"mi":"DCT","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"H"}},{"mi":"DCT","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"A"}}],"mo":"\u00b7"}],"mo":"="},{"mrow":[{"mi":["where","H"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"msub":{"mi":["I","h"]}}]}]}}],"mo":"="}],"mo":","}},{"mrow":{"mo":["(",")"],"mn":"10"}}]}}}},"br":{},"sub":"h ","figref":"FIG. 9","i":"a. "},"For P and B frames, only macroblocks with motion vectors pointing outside of the masking region need to be re-encoded. Macroblocks with motion vectors pointing inside do not need any modification. Efficient algorithms for reencoding macroblocks are well known in the art and are described in, for example, the above-referenced Chang et al. patent.","Referring to , a method for performing masking is now described. In step , the frame to be masked is examined in order to determine whether it is an I, P or B frame. If the frame is an I frame , all DCT coefficients for all blocks within the frame are extracted . Block, is examined  to determine where in the frame it is located. If the block is inside the mask region , the DCT coefficients for the block are unchanged . If the block is outside the make region , the DCT coefficients for the block are set to zero . If the block is on the boundary of the masked region , the DCT cropping algorithm, i.e., equation 10, is applied . The block index n is incremented  and the process repeated - until all blocks have been examined.","If, however, the frame to be masked is either a P or B frame , motion vectors associated with block, are examined  to determine whether they point to blocks outside or on the mask region . If a motion vector points to blocks outside or on the mask region , the macroblock is reencoded . The block index n is incremented  and the process repeated - until all blocks have been examined.","A third important tool used in film editing is the freeze effect. Since the freeze effect is usually longer than 1 second, simply repeating duplicate frames is not desirable if interactive playback (e.g. random search) is desired. Instead, the film effect of freeze frame requires the use of periodic I frames.","Thus, in order to ensure interactive playback capabilities, if the frozen frame is a P or B frame, it should be converted to an I frame. In order to convert a P or B frame into an I frame, every block of video information for the frame that has an associated motion vector is converted into a pure array of DCT coefficients, without motion vector information. The above-mentioned DCT domain motion compensation algorithm described in the Chang et al. patent is advantageously used to effect such conversion. The converted blocks can be referred to as intracoded blocks. Thereafter, the group of pictures which represent the frozen frame are filled with duplicated P frames, with all macroblocks in the duplicated P frames being to Motion Compensation Not Coded (i.e., 0 motion vector, and 0 residue error). Duplicate P frames can easily be created independently and inserted after I or P frames, as those familiar with digital compression techniques will easily understand.","A method for generating a frozen frame of video information is now described with reference to flowchart  in . In step , a user-defined frame of compressed video information is selected for the freeze-frame effect. In step , the frame is examined in order to determine whether it is an I, P or B frame. If the frame is not an I frame , it is converted into an I frame . Finally, original  or converted  I frames are then used as to create duplicate P frames . Periodical I frames can be inserted to increase interactivity, and to maintain a compatible bitrate.","A fourth important tool used in film editing is variable speed playback. Faster than normal playback, e.g., fast forward, is simply realized by dropping B, P, and then I frames according to the variable speed desired.","With respect to slow motion, depending on the slow motion rate, there are two possible approaches. With reference to , one approach is to simply insert duplicate B frames (B\u2032) whenever an original B frame appears. Duplicate B frames are frames which copy all DCT coefficient, and associated motion vectors from previous B frame. There is no decoding or re-encoding involved in this approach. However, this approach has a drawback since the I\/P frame delay is increased by a factor equal to the inverse of the motion rate. For example, in the illustrative sequence of frames shown in , the reference frame Imust be transmitted 4 frames earlier. This limitation makes this approach suitable for slow playback up to about \u00bd normal frame rate. This will require an increased decoder buffer size.","In approach 2, original P\/B frames are converted to I frames using the DCT domain techniques described above, and duplicated P frames are inserted between I frames, as in the case with freeze frame. This approach reduces frame delay, although requiring extra DCT domain manipulations.","Another interesting tool used in film editing is the special effect of strobe motion, which is simply a combination of freeze frame and variable speed playback. Strobe motion is effected by dropping original B and\/or P frames and inserting duplicated P frames.","Referring to , a system for enabling distributed clients to browse and manipulate digital video by way of a distant server or host computer is now described. A master server  or a group of distributed servers is linked to distant sewers , ,  and several clients , . From their client workstations, users are empowered to browse and edit compressed vide images in the manner described above.","Moving to , the master server  acts as the content aggregator  to collect video content, and as a content analyzer  to analyze the visual content for efficient indexing . Thus, the server  may accept the functions performed by the parsing module  described above. The server  also provides an editing engine  with basic editing tools, such as the tools described above, for rendering basic editing functions and various special effects. Distributed clients ,  access the video archives of the server through heterogeneous networks with interoperable interfaces, such as JAVA or MPEG MSDL manipulation tools.","The video server  can be linked with other distributed servers , ,  that have video search engines which search for image and video over a network, e.g., the World Wide Web. Once a video file is found on any other hosts or online content providers, it will be downloaded and preprocessed by the video server  to extract \u201ckeyframes,\u201d i.e., frames  stored in the above described visualization module , and associated visual features such as camera motion, moving objects, color, texture, and temporal features. The Universal Resource Location (\u201cURL\u201d) of the video and the extracted features will be stored on the video server . This client-server model empowers clients ,  with much richer resources beyond that provided by the client's local system.","The client  may open any video shot stored at the server  and browse  the keyframes hierarchically using any one of numerous different viewing models, including sequential view, feature-based view, and story-based view. A sequential view arranges the video shots according to the sequential time order; a feature-based view clusters video shots with similar visual features to the same group; a story view presents video shots according to the story structures in the semantic level. For example, for news applications, the story model may use the anchorperson shot as the criterion for automatic segmentation of video into semantic-level stories. The client can also perform shot-level editing or frame level editing  using the above discussed editing tools. The clients may also submit their own videos which may be analyzed and indexed by the server .","To view or to further refine retrieved video shots, the client  may choose different levels of resolution for the video shots sent by the server . There are three broad levels of video rendering. At the first level, the client  can render only straight cuts at low resolution without any special effects. At the second level, the client may send information to the server defining low-resolution video with desired special effects to be generated. Finally, when the client  no longer wishes to perform editing, the master server  will generate a full-resolution video with all the effects requested by the client from the highest quality source video which is located at either the matter server  or the distributed remote content servers , , . In this way, the user is given the flexibility to tradeoff between quality and speed.","In order to obtain a reduced resolution video sequence, for each video sequence stored on a server, a low resolution icon stream video must be extracted from the full resolution video. The icon stream is an 8:1 down sampled version of the original video. For I frames, DCT DC coefficients are obtained directly. For B and P frames, DCT domain inverse motion compensation is applied to the DCT coefficients. Finally, the extracted coefficients are converted into a smaller sized, e.g., 8:2:1, I frame as those skilled in the art will appreciate.","The foregoing merely illustrates the principles of the invention. Various modifications and alterations to the described embodiments will be apparent to those skilled in the art in view of the inventors teachings herein. For example, while the above description was directed to indexing and editing digital vide which has been compressed in accordance with the MPEG format, the foregoing is equally applicable to other compressed bitstreams, e.g., Motion JPEG, H.261 or H.263, or any other algorithm based on transform coding and motion compensation. It will thus be appreciated that those skilled in the art will be able to devise numerous systems and methods which, although not explicitly shown or described herein, embody the principles of the invention and are thus within the spirit and scope of the invention.",{"@attributes":{"id":"p-0112","num":"0111"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"APPENDIX"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"int do_dissolve(int duration)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"{"]},{"entry":[{},"\u2003int i, j, k, s, cc;"]},{"entry":[{},"\u2003int blks;"]},{"entry":[{},"\u2003double alpha;"]},{"entry":[{},"short (*tmp[3])[64];"]},{"entry":[{},"ld = &S1;"]},{"entry":[{},"initbits( );"]},{"entry":[{},"ld\u2212>end = roundtoP(ld\u2212>end);"]},{"entry":[{},"do_cut(ld\u2212>begin, ld\u2212>end);"]},{"entry":[{},"getDCTframe(ld\u2212>end, GETDCT);"]},{"entry":[{},"\/* copy the first DCT to tmpDCT *\/"]},{"entry":[{},"for (cc=0; cc<3; cc++) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (cc==0)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"blks = (coded_picture_width*coded_picture_height)>>6;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"blks = (chrom_width*chrom_height)>>6;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"memcpy(tmpDCT[cc], refDCT[cc], blks * sizeof(short [64]));"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003}"},{"entry":"\u2003ld = &S2;"},{"entry":"initbits( );"},{"entry":"ld\u2212>begin = roundtoP(ld\u2212>begin);"},{"entry":"getDCTframe(ld\u2212>begin, GETDCT);"},{"entry":"\/* first prediction is based on tmpDCT *\/"},{"entry":"for (cc=0; cc<3; cc++) {"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (cc==0)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"blks = (coded_picture_width*coded_picture_height)>>6;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"blks = (chrom_width*chrom_height)>>6;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"memcpy(auxDCT[cc], tmpDCT[cc], blks * sizeof(short [64]));"]},{"entry":[{},"}"]},{"entry":[{},"for(s=1;s<=duration;s++) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"alpha=s\/(double)duration;"]},{"entry":[{},"for (i=0; i<3; i++) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tmp[i] = oldrefDCT[i];"]},{"entry":[{},"oldrefDCT[i] = auxDCT[i];"]},{"entry":[{},"auxDCT[i] = tmp[i];"]},{"entry":[{},"newDCT[i]= auxDCT[i];"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"for (cc=0; cc<3; cc++) {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (c==0)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"blks ="]},{"entry":[{},"(coded_picture_width*coded_picture_height)>>6;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"blks = (chrom_width*chrom_height)>>6;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"for (j=0; j<blks; j++) {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"for (k=0; k<64; k++)"]},{"entry":[{},"newDCT[cc][j][k] = (short)"]},{"entry":[{},"CLAMP(\u22122048,(1-alpha)*tmpDCT[cc][j][k]"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"+alpha*refDCT[cc][j][k],2047);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/* use refoldDCT as reference frame for DPCM of P *\/"]},{"entry":[{},"putpictDCT(0);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}}],"GOVINT":[{},{}],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 8","FIG. 8()"]},{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 9","FIG. 9()"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 13","FIG. 12"]}]},"DETDESC":[{},{}]}
