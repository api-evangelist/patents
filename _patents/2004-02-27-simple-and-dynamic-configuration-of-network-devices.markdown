---
title: Simple and dynamic configuration of network devices
abstract: The present invention relates to a system and method for configuring and managing network devices. The arrival (and departure) of devices on a network can be detected by a monitor. Upon detection, network devices can be simply and dynamically configured with little or no end-user intervention, for instance by automatically loading device drivers and allocating resources for the devices. Furthermore, network devices can be associated with other network devices such as a personal computer to facilitate seamless integration of network devices with a computer operating system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08151280&OS=08151280&RS=08151280
owner: Microsoft Corporation
number: 08151280
owner_city: Redmond
owner_country: US
publication_date: 20040227
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit of U.S. Provisional Application Ser. No. 60\/514,867, entitled \u201cIntegration of UPnP Devices as PnP Devices within Windows,\u201d filed Oct. 27, 2003, the entirety of which is incorporated herein by reference.","The present invention relates generally to computers and more particularly toward control and management of networked devices.","Plug and Play (PnP) technology allows locally connected devices to be automatically detected and configured to operate on a computer. PnP functionality is integrated into a computer's operating system to allow a computer to detect a newly connected peripheral device as well as install and register such device with a computer system. Prior to PnP technology, it was necessary for users to manually set up peripheral devices, for instance, by specifying communication channels and interrupt request values (IRQs). PnP allows a computer to detect newly connected devices upon system boot, identifies the device and automatically assigns resources, and configures the device to work with the computer system. Additionally, under PnP, operating systems can detect peripheral devices that are added or disconnected to a hot bus (e.g., Universal Serial Bus (USB), PCMCIA bus . . . ) after system boot. Devices connected to local or hot buses can be available immediately for use with the computer system after they are set up a first time. The operating system may contain particular information and drivers with respect to particular devices. In such case, the operating system can simply automatically set up a device upon arrival to the system. In other instances, drivers and information may have to be retrieved from alternate sources such as a CD-ROM or the Internet to facilitate setting up a device. Once a device is set up, the settings can be saved in a registry so that if a device is removed and later reconnected the system can retrieve the device settings and load the appropriate driver to enable interaction between the operating system and the device.","Networked devices both wired and wireless are becoming increasingly prevalent. Conventionally, a number of different networking technologies have been employed for managing and controlling networked devices. For example, network printers are commonly implemented utilizing network-printing protocols over Ethernet. Another example is the X10 network protocol, which is utilized to remotely control devices (e.g., light switches, video cameras . . . ) using a power line network. While these technologies allow devices to be accessed and controlled remotely, many consumers have not availed themselves of the benefit of network devices. One possible reason that consumers have not taken advantage of network devices, may be that potential users perceive setting up a home network (e.g., for automation, network computing, or network printing) as simply too complicated.","Accordingly, a simple and efficient system and method for connecting and controlling networked devices is desired. Such a system and method would be advantageous in ensuring that networked devices are just as easy to find, associate and use as locally connected devices utilizing PnP.","The following presents a simplified summary of the invention in order to provide a basic understanding of some aspects of the invention. This summary is not an extensive overview of the invention. It is not intended to identify key\/critical elements of the invention or to delineate the scope of the invention. Its sole purpose is to present some concepts of the invention in a simplified form as a prelude to the more detailed description that is presented later.","A network device configuration system and method are disclosed. The network device configuration system dynamically and automatically installs or configures network devices thereby reducing or altogether eliminating the burden on end-users. According to one aspect of the present invention a monitor component is provided to detect the arrival and departure of network devices. To facilitate such functionality the monitor component can utilize a plurality of discovery protocols such as Simple Service Discovery Protocol (SSDP) and Web Service Discovery (WS-Discovery) Protocol to actively seek out existing network devices or monitor a network for newly arriving network devices.","According to another aspect of the subject invention, network devices can be associated with one or more other network devices such as a personal computer (e.g., desktop, laptop, personal digital assistant (PDA). Hence, the subject invention can be viewed, according to one aspect, as a collection of components for enabling peripherals to be remotely connected to a personal computer (PC). Therefore, the system can utilize a computers local area network connection (wired or wireless) for tunneling I\/O. Furthermore, according to another aspect of the invention the system disclosed herein can be configured to extend the PC peripheral space to non-conventional devices (e.g., consumer electronics, home automation . . . ). Accordingly, the personal computer can act to manage and control a plethora of network devices including non-traditional devices.","According to another aspect of the subject invention, an operating system's existing plug and play system established for directly connected peripherals can be leveraged to enable simple and robust configuration of network devices with little or no user interaction. To that end, the present invention, according to an aspect thereof, enables Universal Plug-and-Play (UPnP\u2122) compliant devices to be integrated into an operating system Plug-and-Play subsystem. UPnP\u2122 is merely a wire protocol or architecture defining how information is to be transferred among networked devices.","In addition to device discovery and association, several aspects of the subject invention also support channel security, authentication, device control and streaming or isochronous behavior.","According to yet another aspect of the invention a graphical user interface is provided to facilitate robust network device management and configuration. The interface provides a graphical mechanism for associating, searching, and organizing local network devices.","To the accomplishment of the foregoing and related ends, certain illustrative aspects of the invention are described herein in connection with the following description and the annexed drawings. These aspects are indicative of various ways in which the invention may be practiced, all of which are intended to be covered by the present invention. Other advantages and novel features of the invention may become apparent from the following detailed description of the invention when considered in conjunction with the drawings.","The present invention is now described with reference to the annexed drawings, wherein like numerals refer to like elements throughout. It should be understood, however, that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed. Rather, the intention is to cover all modifications, equivalents, and alternatives falling within the spirit and scope of the present invention.","As used in this application, the terms \u201ccomponent\u201d and \u201csystem\u201d are intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a server and the server can be a component. One or more components may reside within a process and\/or thread of execution and a component may be localized on one computer and\/or distributed between two or more computers.","Furthermore, the present invention may be implemented as a method, apparatus, or article of manufacture using standard programming and\/or engineering techniques to produce software, firmware, hardware, or any combination thereof. The term \u201carticle of manufacture\u201d (or alternatively, \u201ccomputer program product\u201d) as used herein is intended to encompass a computer program accessible from any computer-readable device, carrier, or media. Of course, those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the subject invention.","Turning to , a network device interaction system  is depicted in accordance with an aspect of the subject invention. The system  comprises application component(s) , device configuration system , and network device(s) . Application component(s)  can be any software program including both system and application software (e.g., operating system, word processing application . . . ). Valuable application components  often utilize peripheral networked devices. For example, a word processing program can utilize a network printer to print documents and\/or reports. However, it should be noted that network device(s)  could correspond to any physical entity that can be connected to a network. Accordingly, typical network devices can include such things as printers, scanners, copiers, personal digital assistants (PDAs), and computers of all types (e.g., desktop, laptop, pocket PC . . . ). Nevertheless, network devices can also include other types of consumer electronics including but not limited to clocks, dishwashers, refrigerators, electronic picture frames, washers, dryers, light switches, a thermostat, television sets, set top boxes, DVD players, and gaming machines or consoles (e.g. XBox). Application component(s)  can seek to provide I\/O control commands to network devices. For example, when a user arrives home from work at 5:30 p.m. turn the kitchen lights on, set the thermostat to 70\u00b0 Fahrenheit, turn on the television, and tune in to a particular channel. To enable communication between application component(s)  and network devices  the network devices must be configured to function with the application components.","Device configuration system  configures network devices  to operate with application components . According to one aspect of the subject invention the configuration system  can load device drivers. Drivers are software components that facilitate communication with associated devices. Network devices have their own specialized instructions or command set while application programs employ different commands than devices to specify the same functionality. Accordingly, a device driver component acts as a translator by mapping application commands to particular device instructions. Device drivers (also referred to herein as device driver packages) can be loaded from a computer's local data store, downloaded from the Internet, retrieved from a computer readable media (e.g., CD-ROM, floppy disk), or retrieved from a network device. Configuration system  can also set registry keys or the like in computer systems. A registry can simply be a database containing keys (files) holding configuration information about applications. For example, keys can be associated with user preferences, file associations, objects links, and settings for applications among other things. Configuration system  can also automatically and dynamically allocate resources for a network device(s)  for example selecting and setting an interrupt request line (IRQ) for requesting service from a central processing unit (CPU), selecting and setting a communication channel and a dynamic memory access (DMA) channel, as well as allocating a portion of memory for use by the device. Furthermore, it should be appreciated that the configuration system  can also execute tasks such as updating device firmware to a newer firmware version packaged with the device driver. Once a network device is installed and configured (e.g., by copying drivers to the device), associated application components can utilize the devices. After the initial configuration, network device settings (e.g., IRQ, DMA channel, allocated memory . . . ) can be saved, for instance in a registry or elsewhere. If and when a device departs from the network and then later reconnects, the saved information can be located, retrieved, and utilized by the configuration system  to expeditiously and automatically re-enable the device to operate with particular application components  on a computer system for example.","Moving on to , a network device configuration system  is disclosed in accordance with an aspect of the subject invention. Configuration system  comprises a monitor component , a network , network device(s)  (DEVICEthrough DEVICE, where N is an integer greater than or equal to 1), and configuration component . Monitor component  detects the arrival and\/or departure of a network device . Upon arrival, a network device  is detected and configuration component  automatically configures the device  to operate on a computer system. For example, configuration component  can load a device driver or driver package, dedicate a communication channel, save a registry key, and allocate memory for use with the device . Upon departure, the configuration component  can free up memory locations and the communication channel for use by other devices . Subsequently, upon reconnection of a network device the configuration component  can automatically and expeditiously configure the device to operate properly. The system  thereby facilitates seamless integration of network devices  into a computer system. Through this integration, users can more easily configure, manage, and access networked devices  from their personal computer, for example. Thus, end-users may be able to purchase networked devices and connect them to their home or enterprise network with little or no configuration. The network devices will simply work when connected to a network.","Monitor component  queries a network  to analyze the network devices  connected thereto. Network  can be a wired and\/or wireless local area network (LAN). A LAN is a network of moderate geographic size that is often used for office buildings, homes, warehouses, and campuses to name but a few. Network devices  can be any electronic or like device capable of being networked (e.g., alarm clock, phone, camera, television set, refrigerator, washer, dryer, DVD player, digital audio receiver (DAR), personal digital assistant (PDA), computer (desktop, laptop, palmtop), pager, mobile phone, printer, scanner, copier, set-top box, gaming machine, electronic picture . . . ). Networked devices  can communicate with network  either via wire (e.g., twisted pair, optical fiber, coaxial cable, power lines . . . ) and\/or wirelessly (e.g., IEEE 802.11a, 802.11b, 802.11g, infra red, radio, Bluetooth, satellite . . . ). Monitor component  can detect the arrival and\/or departure of a network device  by utilizing or querying one or more discovery protocols or plug-ins. For instance, the monitor component can employ Simple Service Discovery Protocol (SSDP) to detect UPnP devices and Web Services Discovery (WS discovery) Protocol to identify WS-Discovery\/WS-Description devices. It should be appreciated that discovery protocols can be used in either an active or a passive manner or a combination thereof. When used in an active manner a discovery protocol searches for existing devices connected to the network . In a passive monitoring system the discovery protocol can simply listen for a newly arrived device announcing its presence on the network . Furthermore, these and other protocols can not only indicate the presence of a networked device, but also collect metadata about the devices (e.g., utilizing SSDP, HTTP, and XML parsing) that can be utilized in configuring the device(s).","Configuration component  receives notification and metadata concerning connected network devices  from the monitor component . Network device metadata can include but is not limited to information such as hardware id, compatibility ids, instance id, friendly name, transport addresses, authentication parameters, and parent instance id. The hardware id and compatibility ids can be used by the configuration component  to identify the file(s) to use for device installation. The instance id uniquely identifies the network device. The friendly name (e.g., master bedroom television) can be employed in user interactions with the device. Transport addresses can be utilized by drivers and middleware to contact the device. Authentication parameters can be used to determine what for of authentication must be performed (discussed in further detail in later sections). Upon notification of a recently added network device and receipt of associated metadata, the configuration component can proceed to automatically install and configure the network device. Using metadata information such as hardware id and compatibility ids the configuration component can locate a device file on a computer system and retrieve configuration information including but not limited to driver files and registry keys to be copied. If the computer system has the appropriate driver files, the files will automatically be loaded. If the files are not locatable on the computer system (e.g., hard drive) then the driver files can be downloaded from the Internet (if connected) or the user may be asked to insert a computer readable media (e.g., compact disk (CD) or floppy disk) that contains the desired files. Subsequently the driver files are loaded and device properties and settings are configured (e.g., assign system resources, IRQs, communication ports . . . ).",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 3","b":["230","230","310","320","330","322","332","310","310","312","312","312","320","322","322","322","322","320","322","330","330","322","330","322","332"]},"Turning to  a system  for locating a network device driver is illustrated in accordance with an aspect of the present invention. System  includes a driver installation management component , a device PDO component , an information component , a driver store , and a located driver component . Driver component  contains information relating to the proper installation and configuration of a network device associated therewith. Driver components  can include dynamically linked libraries (DLLs), installers, co-installers, applications or any other type of file. Driver installation management component  retrieves the driver component(s)  associated with a particular device. Driver installation management component  receives or retrieves a device PDO component . The device PDO component , as discussed previously, can be generated upon detection of the arrival of a device on a network. The PDO component  represents the device on the network bus. The PDO component can include unique information regarding a device such as a hardware id and\/or a compatibility id. Upon receipt of the PDO component , installation management component  can retrieve such unique device information such as the hardware id from the PDO component . The driver installation management component  can then utilize the unique information and the information component  to determine the appropriate configuration for a device. Information component  (e.g., .INF file or database) can act as a repository for device configuration information. Configuration information can include but is not limited to driver components and registry keys. Such configuration information can be arranged in a manner that facilitates expeditious location of information. For example, configuration can be stored associated with a hardware id. Accordingly, installation management component  can utilize or supply the retrieved hardware id to the information component  can retrieve the appropriate configuration information for a device. For instance, installation management component can be notified of the identity of an appropriate driver component. The installation management component can subsequently retrieve a driver from a driver store . Driver store  can be located locally or remotely from a computer. In some cases a computer can store such drivers locally, however one cannot guarantee that all drivers for every possible network device will be stored locally, for example by an operating system manufacturer. Accordingly, driver store can be located remotely for example on a central server or on a server associated with the device manufacturer. The driver installation management component  is operable to retrieve driver components and other installation or configuration information (e.g., patches, registry keys) from remotely located servers. Furthermore, according to an aspect of the present invention, installation management component  can locate drivers store on local network devices. For example, another computer on a network could have the necessary driver component(s), while the computer associated with the device being installed does not. In such a situation the management component  can receive or retrieve such driver component(s) from the other computer. Additionally, it should be noted that the device being installed or configured can store the necessary drivers locally and the driver installation management component can retrieve driver component(s) therefrom. Furthermore, it should also be appreciated that the driver store  can also be a computer readable medium (e.g., CD, DVD, floppy disk, memory card . . . ) housing the appropriate driver component(s) .",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 5","FIG. 4"],"b":["500","500","210","510","320","520","450","530","210","510","510","510","510","320","530","530","410","530","450","530","450","530","530","530"]},"Turning to , a system  for associating network devices in depicted in accordance with an aspect of the present invention. System  includes a monitor component , association interface component , and association component . Devices connected locally via universal serial bus (USB) or some other bus (e.g., PCI, PMCIA) are inherently associated with a computer. Thus, if a printer is connected directly to a computer by way of a USB cable it is associated with that computer. The same is not true for network devices. Accordingly, when a network device is connected to the network a user can be given the opportunity to select an associated network device such as a computer. After detecting the arrival of a new network device on a network (e.g., utilizing network discovery protocols) monitor component  can employ association interface component  to determine another network device with which to associate the newly arrived device. Association interface component  can also be utilized to collect authentication data out-of-band with respect to the network. For example, in order to associate a printer, a user might need to verify that such association should be done by entering a 4-digit number. This is an example of using shared key. However, a subsequent bootstrapping process could exchange more robust secrets that could be employed to establish secure, authenticated channels. For instance, one could employ certificate-based credentials such as a device certificate (e.g., trusted certificated authority (CA), manufacturer, network administrator, self signed) or computer certificates (e.g., trusted CA, network administrator, self signed). Furthermore, where security is a real issue a secure channel or virtual cable can be established via encryption. The association interface component  can depend on the negotiated authentication method between device and computer. However, the association interface component , according to an aspect of the invention, can be designed to be as uniform as possible across all authentication methods and protocols. According to an aspect of the present invention, the association interface component can be a graphical user interface as is known the art. In particular, a graphical user interface can have graphical objects (e.g., buttons, menus, progress bar . . . ) for, inter alia, user selections including but not limited to association of discovered device(s). However, it should be appreciated that the interface could also simply be text based or a combination of graphics and text. Association interface component  can provide association information to the association component to store and properly executed; Furthermore, it should be appreciated that a user can go through some steps upon initial authentication. Once done successfully, the device can authenticate itself without additional user intervention in the future. The device can be considered trusted and the respective credentials can be stored on the associated computer, for example, and the device. Thus, if monitor component  determines that the device has not been seen before, for example by checking its own internal database or that of association component  then association interface component  can be employed to set up one or more associations. However, if the device is marked \u201ctrusted\u201d (i.e., it was previously successfully authenticated) then no user interaction will be required, at least because the device was successfully authenticated and authorized at a previous time. Such a situation can occur when a network device is installed and configured, removed from the network and then later reconnected. On the other hand if the device is found marked as distrusted or failed authentication or installation the device can be marked ignored and any association proposal abandoned.","Furthermore, it should be appreciated that device sharing may be enabled, for instance with two or more computers sharing a network device (e.g., printer, camera . . . ). The system of the present invention can also be configured to allow device associations to be changed on demand (e.g., for multifunction printers and cameras). Still further yet, the system can be configured to perform device aggregation. For instance, multiple devices can be aggregated to create richer end-user experiences. Thus, multiple web cameras could be aggregated into a single larger virtual web camera (i.e., with a single large image formed from the smaller individual web camera images).","Turning to , an exemplary graphical user interface  is depicted in accordance with an aspect of the subject invention. If network devices are associated with a computer than an operating system can display to a user the available network devices (e.g., those that are online). Interface  illustrates one manner in which network devices can be displayed to a user. Network devices  can be displayed under an associated network device header in a windowpane along with other information such as locally removable storage devices  and hard disk . The displayed icons indicate that on this exemplary system network devices include a printer, a palm pilot, and a laptop. It should be appreciated that network devices can be shown individually or logically grouped (e.g., printer group, camera group). Furthermore, device icons can then be selected using a pointing device (e.g., mouse, touch pad, trackball, touch screen, stylus . . . ). Upon selection, device properties can be displayed including but not limited to name, type, model, location, and status. The displayed icons can act as proxies for network devices, accordingly device associations can be manipulated for example by deleting or removing a device icon. Additionally, it should be appreciated that the graphical user interface  can support ghosting and un-ghosting. For example, when a user takes his laptop from home to the office then that device will no longer be available to the local home network. Consequently, the user interface  can show the network device in the home network but give it a ghosted visual appearance. When the user brings his laptop back within the home network the icon can be un-ghosted to indicate the laptop's availability to the network. Still further yet the interface  can provide a mechanism to facilitate searching for network devices (not shown). For example, assume a user has just bought a new Bluetooth mobile phone and wants to pair or associate it with his personal computer. He accesses the user interface but does not see the device displayed. The user can utilize a search mechanism or task to locate phone. The system can then begin to populate the interface with available devices apply a filter to ensure that just mobile phones are displayed. Thereafter, the user can locate his phone in the search results can add it to his default devices, for example.","Interface  has been presented to facilitate discussion of a graphical user interface. It should be noted and appreciated by those of skill in the art that there are various ways of designing a graphical interface. For example, network devices can be displayed in a carousel arrangement where network devices rotate or pivot into view upon selection. Accordingly, the disclose interface is exemplary and is not meant in any way as a limitation on the scope of the present invention.","In view of the exemplary system(s) described supra, a methodology that may be implemented in accordance with the present invention will be better appreciated with reference to the flow charts of . While for purposes of simplicity of explanation, the methodology is shown and described as a series of blocks, it is to be understood and appreciated that the present invention is not limited by the order of the blocks, as some blocks may, in accordance with the present invention, occur in different orders and\/or concurrently with other blocks from what is depicted and described herein. Moreover, not all illustrated blocks may be required to implement the methodology in accordance with the present invention.","Additionally, it should be further appreciated that the methodologies disclosed hereinafter and throughout this specification are capable of being stored on an article of manufacture to facilitate transporting and transferring such methodologies to computers. The term article of manufacture, as used, is intended to encompass a computer program accessible from any computer-readable device, carrier, or media.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 8","b":["800","810","830"]},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 9","b":["900","910","920","930","940"]},"Turning to , a flow chart is illustrated depicting a methodology  for configuring and installing network devices in accordance with an aspect of the present invention. At , the arrival of a network device is detected. As discussed supra, a network can be scrutinized to determine the arrival of devices utilizing one several discovery protocols such as SSDP or WS Discovery. Furthermore, detection can either be active or passive. At , the device is associated with one or more other active network devices (e.g., a personal computer). At , a physical device object component is generated. A physical device object component represents the network device to drivers and other software. A physical device object provides information including but not limited to vendor name, device friendly name, and device id. The provided information is sufficient to locate an associated driver component. At , a driver component associated with the network device is located based at least in part upon the information provided by the physical device object component. At , the driver component is utilized to generate a functional device object component that exposes the device's functionality to applications and\/or application programming interfaces (APIs). Finally, at , a secure channel of communication is established between the network device and associated network devices (e.g., personal computer). For example, various encryption techniques can be employed to ensure the security of communication.","In order to provide a context for the various aspects of the invention,  as well as the following discussion are intended to provide a brief, general description of a suitable computing environment in which the various aspects of the present invention may be implemented. While the invention has been described above in the general context of computer-executable instructions of a computer program that runs on a computer and\/or computers, those skilled in the art will recognize that the invention also may be implemented in combination with other program modules. Generally, program modules include routines, programs, components, data structures, etc. that perform particular tasks and\/or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the inventive methods may be practiced with other computer system configurations, including single-processor or multiprocessor computer systems, mini-computing devices, mainframe computers, as well as personal computers, hand-held computing devices, microprocessor-based or programmable consumer electronics, and the like. The illustrated aspects of the invention may also be practiced in distributed computing environments where task are performed by remote processing devices that are linked through a communications network. However, some, if not all aspects of the invention can be practiced on stand-alone computers. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","With reference to , an exemplary environment  for implementing various aspects of the invention includes a computer . The computer  includes a processing unit , a system memory , and a system bus . The system bus  couples system components including, but not limited to, the system memory  to the processing unit . The processing unit  can be any of various available processors. Dual microprocessors and other multiprocessor architectures also can be employed as the processing unit .","The system bus  can be any of several types of bus structure(s) including the memory bus or memory controller, a peripheral bus or external bus, and\/or a local bus using any variety of available bus architectures including, but not limited to, 11-bit bus, Industrial Standard Architecture (ISA), Micro-Channel Architecture (MSA), Extended ISA (EISA), Intelligent Drive Electronics (IDE), VESA Local Bus (VLB), Peripheral Component Interconnect (PCI), Universal Serial Bus (USB), Advanced Graphics Port (AGP), Personal Computer Memory Card International Association bus (PCMCIA), and Small Computer Systems Interface (SCSI).","The system memory  includes volatile memory  and nonvolatile memory . The basic input\/output system (BIOS), containing the basic routines to transfer information between elements within the computer , such as during start-up, is stored in nonvolatile memory . By way of illustration, and not limitation, nonvolatile memory  can include read only memory (ROM), programmable ROM (PROM), electrically programmable ROM (EPROM), electrically erasable ROM (EEPROM), or flash memory. Volatile memory  includes random access memory (RAM), which acts as external cache memory. By way of illustration and not limitation, RAM is available in many forms such as synchronous RAM (SRAM), dynamic RAM (DRAM), synchronous DRAM (SDRAM), double data rate SDRAM (DDR SDRAM), enhanced SDRAM (ESDRAM), Synchlink DRAM (SLDRAM), and direct Rambus RAM (DRRAM).","Computer  also includes removable\/non-removable, volatile\/non-volatile computer storage media.  illustrates, for example disk storage . Disk storage  includes, but is not limited to, devices like a magnetic disk drive, floppy disk drive, tape drive, Jaz drive, Zip drive, LS-100 drive, flash memory card, or memory stick. In addition, disk storage  can include storage media separately or in combination with other storage media including, but not limited to, an optical disk drive such as a compact disk ROM device (CD-ROM), CD recordable drive (CD-R Drive), CD rewritable drive (CD-RW Drive) or a digital versatile disk ROM drive (DVD-ROM). To facilitate connection of the disk storage devices  to the system bus , a removable or non-removable interface is typically used such as interface .","It is to be appreciated that  describes software that acts as an intermediary between users and the basic computer resources described in suitable operating environment . Such software includes an operating system . Operating system , which can be stored on disk storage , acts to control and allocate resources of the computer system . System applications  take advantage of the management of resources by operating system  through program modules  and program data  stored either in system memory  or on disk storage . It is to be appreciated that the present invention can be implemented with various operating systems or combinations of operating systems.","A user enters commands or information into the computer  through input device(s) . Input devices  include, but are not limited to, a pointing device such as a mouse, trackball, stylus, touch pad, keyboard, microphone, joystick, game pad, satellite dish, scanner, TV tuner card, digital camera, digital video camera, web camera, and the like. These and other input devices connect to the processing unit  through the system bus  via interface port(s) . Interface port(s)  include, for example, a serial port, a parallel port, a game port, and a universal serial bus (USB). Output device(s)  use some of the same type of ports as input device(s) . Thus, for example, a USB port may be used to provide input to computer , and to output information from computer  to an output device . Output adapter  is provided to illustrate that there are some output devices  like monitors, speakers, and printers, among other output devices  that require special adapters. The output adapters  include, by way of illustration and not limitation, video and sound cards that provide a means of connection between the output device  and the system bus . It should be noted that other devices and\/or systems of devices provide both input and output capabilities such as remote computer(s) .","Computer  can operate in a networked environment using logical connections to one or more remote computers, such as remote computer(s) . The remote computer(s)  can be a personal computer, a server, a router, a network PC, a workstation, a microprocessor based appliance, a peer device or other common network node and the like, and typically includes many or all of the elements described relative to computer . For purposes of brevity, only a memory storage device  is illustrated with remote computer(s) . Remote computer(s)  is logically connected to computer  through a network interface  and then physically connected via communication connection . Network interface  encompasses communication networks such as local-area networks (LAN) and wide-area networks (WAN). LAN technologies include Fiber Distributed Data Interface (FDDI), Copper Distributed Data Interface (CDDI), Ethernet\/IEEE 802.3, Token Ring\/IEEE 802.5 and the like. WAN technologies include, but are not limited to, point-to-point links, circuit switching networks like Integrated Services Digital Networks (ISDN) and variations thereon, packet switching networks, and Digital Subscriber Lines (DSL).","Communication connection(s)  refers to the hardware\/software employed to connect the network interface  to the bus . While communication connection  is shown for illustrative clarity inside computer , it can also be external to computer . The hardware\/software necessary for connection to the network interface  includes, for exemplary purposes only, internal and external technologies such as, modems including regular telephone grade modems, cable modems and DSL modems, ISDN adapters, and Ethernet cards.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 12","b":["1200","1200","1210","1210","1200","1230","1230","1230","1210","1230","1000","1250","1210","1230","1210","1260","1210","1230","1240","1230"]},"What has been described above includes examples of the present invention. It is, of course, not possible to describe every conceivable combination of components or methodologies for purposes of describing the present invention, but one of ordinary skill in the art may recognize that many further combinations and permutations of the present invention are possible. Accordingly, the present invention is intended to embrace all such alterations, modifications and variations that fall within the spirit and scope of the appended claims. Furthermore, to the extent that the term \u201cincludes\u201d is used in either the detailed description or the claims, such term is intended to be inclusive in a manner similar to the term \u201ccomprising\u201d as \u201ccomprising\u201d is interpreted when employed as a transitional word in a claim."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing and other aspects of the invention will become apparent from the following detailed description and the appended drawings described in brief hereinafter.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
