---
title: Real-time collaboration and communication in a peer-to-peer networking infrastructure
abstract: Methods that enable real-time communication and collaboration in a peer-to-peer (P2P) network are provided. More specifically, methods for the creation and access of an underlying graph and/or group structure to pass collaboration/real-time communication data and other functions such as the retrieval of node/member and graph/group information, the addition, modification, deletion and management of records (data), the direct communication between graph/group nodes/members, the registering for event notifications, and other functions are used to pass real-time communication/collaboration data between nodes in a graph or members of a group.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07454465&OS=07454465&RS=07454465
owner: Microsoft Corporation
number: 07454465
owner_city: Redmond
owner_country: US
publication_date: 20040326
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This invention relates generally to peer-to-peer networking collaboration and real-time communication and, more particularly to application programming interfaces and methods for the creation of peer-to-peer collaborations and real-time communication using records in a peer-to-peer graph or a peer-to-peer group.","Despite the technological advances realized in recent years, many traditional business activities still have a prominent place in today's workplaces. One such activity is the meeting or conference. Often, such a collaborative effort will involve a presentation of material by one participant to a number of other participants. Traditional means for presenting information include projection on a screen, display on a monitor or other optically active device, or presentation in hard copy form, such as on a white board, chalkboard or easel. While each of these methods has benefits and drawbacks in terms of cost, complexity, and effectiveness, projection and display are typically best suited for rapidly changing data such as may be presented via slides or video.","In recent years, various communication technologies on the Internet have been created that allow users with common interest to collaborate, share files, and \u201cchat\u201d with one another. Currently, however, most communication on the Internet takes place in a server centric environment whereby all communication flows to or through large central servers to which individuals may connect to join and participate in such communication.","With the reemergence of peer-to-peer technology, the current server centric model of Internet communication is quickly being replaced. Indeed, peer-to-peer technologies enable users to contact one another in a serverless environment, free from the constraints of server based Internet communication. In a peer-to-peer based system, a users anonymity and privacy may be maintained since communication occurs directly between peers within the network. However, while individual communication and file sharing is relatively well established in peer-to-peer networks, establishing, joining, and sharing information real-time in a group peer-to-peer environment is not well established. However, individuals have grown accustomed to the benefits provided by such grouping technology in the server centric environment.","The present invention provides a method to establish, join, and share information collaboratively and communicate real-time to other members of a peer-to-peer group or graph. A peer-to-peer graph allows applications to pass data between peers efficiently and reliably. A peer-to-peer group provides the capability to pass data of multiple graphs between peers efficiently and reliably.","In one embodiment of the present invention, an API and method are exposed to allow applications to establish peer-to-peer collaborations such as whiteboards and the like to be established in a graph or group such that each node in the graph or group has a consistent view of the data in the graph. A node represents a particular instance of an individual on the network. Data is sent between nodes in the form of records. Records are essentially pieces of data flooded (sent) to all nodes in a graph where the data is the text being written in real-time communications, the co-ordinate locations of mouse (e.g., pen) movement of a whiteboard and the like. Once a node has received a record, the node places the record in a database or data store. The application retrieves the record and processes the data.","In one embodiment of the present invention, application programming interfaces (APIs) are provided that provide creation and access to a collaboration or real-time event. These APIs create a new event in the form of a graph, open an existing graph for connection, open a specific port listening for connections, initiate a connection to a listening port at the specified IP address, allow a user to specify the security provider for the graph, add a collaboration event (e.g., a whiteboard) or communication event in the form of a record to the graph, update an event in the graph, and delete an event from the graph. Each of these interfaces utilizes various parameters that are passed in from an application program that uses these interfaces to manage the events that utilize graphs. The interfaces return a value that indicates the success or failure of the function. For failures, the interfaces provide an indication as to the problem resulting in the failure.","Additional features and advantages of the invention will be made apparent from the following detailed description of illustrative embodiments which proceeds with reference to the accompanying figures.","Turning to the drawings, wherein like reference numerals refer to like elements, the invention is illustrated as being implemented in a suitable computing environment. Although not required, the invention will be described in the general context of computer-executable instructions, such as program modules, being executed by a personal computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multi-processor systems, microprocessor based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1","b":["20","20","22","30"]},"Associated with each node is a data table . Information is added to the data table  in the form of a record. Records are propagated to each node - in the graph. For example, if node  adds a record, the record is sent to the other nodes -. Nodes receive notification of incoming records through an event notification. Further details of the event notification and record propagation can be found in U.S. patent application Ser. No. 10\/309,865, entitled \u201cPeer-to peer graphing interfaces and methods\u201d and Ser. No. 10\/351,905, entitled \u201cPeer-to peer grouping interfaces and methods,\u201d both assigned to the same assignee of the instant application, the teachings and disclosure of which are hereby incorporated by reference in their entireties.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2","b":["100","100","100","100"]},"The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to: personal computers, server computers, hand-held or laptop devices, tablet devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and the like.","The invention may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in local and\/or remote computer storage media including memory storage devices.","With reference to , an exemplary system for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus also known as Mezzanine bus.","Computer  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, and removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of the any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk  such as a CD ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media, discussed above and illustrated in , provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers hereto illustrate that, at a minimum, they are different copies. A user may enter commands and information into the computer  through input devices such as a keyboard , a pointing device , commonly referred to as a mouse, trackball or touch pad, a microphone , and a tablet or electronic digitizer . Other input devices (not shown) may include a joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus, but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . The monitor  may also be integrated with a touch-screen panel or the like. Note that the monitor and\/or touch screen panel can be physically coupled to a housing in which the computing device  is incorporated, such as in a tablet-type personal computer. In addition, computers such as the computing device  may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface  or the like.","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet. For example, the computer system  may comprise the source machine from which data is being migrated, and the remote computer  may comprise the destination machine. Note however that source and destination machines need not be connected by a network or any other means, but instead, data may be migrated via any media capable of being written by the source platform and read by the destination platform or platforms.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","In the description that follows, the invention will be described with reference to acts and symbolic representations of operations that are performed by one or more computers, unless indicated otherwise. As such, it will be understood that such acts and operations, which are at times referred to as being computer-executed, include the manipulation by the processing unit of the computer of electrical signals representing data in a structured form. This manipulation transforms the data or maintains it at locations in the memory system of the computer, which reconfigures or otherwise alters the operation of the computer in a manner well understood by those skilled in the art. The data structures where data is maintained are physical locations of the memory that have particular properties defined by the format of the data. However, while the invention is being described in the foregoing context, it is not meant to be limiting as those of skill in the art will appreciate that various of the acts and operation described hereinafter may also be implemented in hardware.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 3","b":["200","200","202","204","206","208","201","212","214","216","202","214","218","220"]},"The searching component  provides a mechanism for locating data within the group. There are two different search models, the local search and the distributed search. A local search searches the store , which contains the set of local records for the group. In a local search, a group member does not send search queries to other group members. A distributed search sends queries to group members.","The graphing component  is responsible for maintaining a set of connected nodes and providing flooding and replication of data across the graph. The grouping component  is the security layer provided on top of a graph. The security layer defines the security model behind group creation, invitation, and connection to the group. The NSP component  provides a mechanism to access an arbitrary name service provider. The identity manager  enables the creation and management of peer-to-peer identities. The store  is the set of records associated with a graph. The store represents the view of the graph and\/or group data, which should be the same for all nodes in a particular graph or group. When a new member joins, they automatically receive all the records for the graph (or group) from the current member to which they attach. After the initial synchronization, members periodically resynchronize their replicated stores to ensure that all members consistently have the same view. The discovery component  provides peer-to-peer name resolution and discovery of other peers within the peer-to-peer network.","Now that the overall environment has been described, the process to perform collaboration and real-time communication will be described. An example of such collaboration and real-time communication is as follows: A user residing in England realizes her husband's 50birthday is coming up. The user observes a friend is online and at home in the United States, and starts chatting with him using the teachings of the present invention. They decide that they would give the user's husband a \u201chand drawn\u201d birthday card. After all the relevant family members are in the same session, the user starts a whiteboard activity that starts up on everyone's machine. The user starts drawing and other members start coloring the drawing itself. Other scenarios include gaming, document collaboration (such as editing documents, commenting on documents, etc.), on-line presentations, and the like.","In the description that follows, a whiteboard scenario shall be used to describe the process. The same steps are used in the other scenarios. In the description, node  shall be used as the creator of the whiteboard. The whiteboard is created as a graph. The graph may be an isolated graph or a graph that is in a group. The functions that node  uses to create a whiteboard in a graph are PeerGraphCreate and PeerGraphListen. The PeerGraphCreate function creates a new peer-to-peer graph. An application can specify information about a peer-to-peer graph and the type of security that a peer-to-peer graph uses. One of the parameters specified is the name of the graph. Node  can also specify a security provider if the node wants the graph to be limited to invited members. A handle to a peer-to-peer graph is returned. The PeerGraphListen function indicates that a peer-to-peer graph should start listening for incoming connections.","Nodes - receive the name of the graph out-of-band of the graph from node . For example, the name could be sent over a phone line, via an e-mail, etc. Nodes - connect to the graph using PeerGraphOpen and PeerGraphConnect functions. Once connected the nodes - also use the PeerGraphListen function to start listening for incoming connections. The PeerGraphOpen function opens a peer-to-peer graph that is created previously by either the node or a remote node. A handle to the peer-to-peer graph is returned. The PeerGraphConnect function attempts to make a connection to a specified node in the peer-to-peer graph.","Once connected, the nodes register for events of interest using the PeerGraphRegisterEvent function. The nodes sign up for events such as notifications that a record type or a specific record has been changed, notifications that data has been received, notifications that a specific record type has been synchronized, and notifications that the graph's status has changed (e.g., the node has synchronized with the graph) in order to collaborate or communicate in real-time.","As previously indicated, nodes send data to each other in the form of records. Applications such as a whiteboard application capture data and package the data into a record. For a new whiteboard \u201cpage,\u201d a new record is allocated. For example, shows a graph in a whiteboard application. An application  tracks movement on the whiteboard (e.g., lines , , ) and sends the movement data in a record to other nodes. illustrates a real-time chat window where an application  captures the text  and sends the text in a record to other nodes.","Applications use the PeerGraphAddRecord function to add a new record to the peer-to-peer graph. The captured data (e.g., lines , , , text ) is placed in the data field of the record. A record added with this function is then flooded to the other nodes in the peer-to-peer graph. The PeerGraphGetRecord function is called to retrieve the specific record. In one embodiment, only the graph creator can add a record to the graph.","Data in a graph can be deleted in one of two ways. The first way is to delete the record containing the data. Applications use PeerGraphDeleteRecord to delete the record containing the data. The second way, which is also used to remove portions of data in a record, is to specify that data of the \u201copposite type\u201d (e.g., a line having the whiteboard background color, text with a color that is the background color, etc.). Once a collaboration session or real-time communication session is finished, the graph is closed. The PeerGraphClose function is used to close the graph.","Creating a collaboration event or real-time communication event in a group involves calls to similar functions. The PeerGraphOpen, PeerGraphConnect, PeerGraphRegisterEvent, PeerGraphAddRecord, PeerGraphGetRecord, PeerGraphDeleteRecord, and PeerGraphClose functions correspond to PeerGroupOpen, PeerGroupConnect, PeerGroupRegisterEvent, PeerGroupAddRecord, PeerGroupGetRecord, PeerGroupDeleteRecord, and PeerGroupClose functions respectively.","If a group hasn't been created, the group creator (e.g., node ) calls a PeerGroupCreate function to create a new group. The creator sends certificates out-of-band to other nodes. Each of the other nodes call PeerGroupIdentityGetInfo that returns a description of the node that is needed for a node to be invited into a group and this information is passed to the creator out-of-band. A node uses the information to invite another node into the group using the PeerGroupCreateInvitation function. This function returns a string that is used by the other node to join the group. The inviting node sends this string out-of-band to the other node. The other node joins the group by calling the PeerGroupJoin function and specifies the string received from the inviting node.","Once a node has joined a group, the node connects to the group using the PeerGroupConnect function. Once connected, the node can communicate with other nodes. The PeerGroupOpen, PeerGroupRegisterEvent, PeerGroupAddRecord, PeerGroupGetRecord, PeerGroupDeleteRecord, and PeerGroupClose functions perform the same functions as described above for the PeerGraphOpen, PeerGraphRegisterEvent, PeerGraphAddRecord, PeerGraphGetRecord, PeerGraphDeleteRecord, and PeerGraphClose functions for a group.","In one embodiment of the interfaces and methods of the present invention that is particularly well suited for the Microsoft Windows XP operating system, the functions may be as follows:",{"@attributes":{"id":"p-0044","num":"0043"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT WINAPI PeerGraphCreate("]},{"entry":[{},"\u2003\u2003\u2003IN PPEER_GRAPH_PROPERTIES pGraphProperties,"]},{"entry":[{},"\u2003\u2003\u2003IN PCWSTR\u2003\u2009pwzDatabaseName,"]},{"entry":[{},"\u2003\u2003\u2003IN PPEER_SECURITY_INTERFACE pSecurityInterface,"]},{"entry":[{},"\u2003\u2003\u2003OUT PHGRAPH\u2003\u2009phGraph);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":{"@attributes":{"id":"ul0001-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":"where pGraphProperties specifies all of the properties of a peer-to-peer graph, pwzDatabaseName specifies the name of a record database to associate with a peer-to-peer graph when it is created, pSecurityInterface specifies the information about a security provider, and phGraph receives a handle to the peer-to-peer graph that is created."}}}},{"@attributes":{"id":"p-0045","num":"0045"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI PeerGraphOpen("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003IN PCWSTR","\u2002pwzGraphId,"]},{"entry":[{},"\u2003\u2003\u2003IN PCWSTR","\u2002pwzPeerId,"]},{"entry":[{},"\u2003\u2003\u2003IN PCWSTR","\u2002pwzDatabaseName,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003\u2003\u2003IN PPEER_SECURITY_INTERFACE pSecurityInterface,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003IN ULONG","\u2002cRecordTypeSyncPrecedence,"]},{"entry":[{},"\u2003\u2003\u2003IN GUID *","pRecordTypeSyncPrecedence,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003OUT PHGRAPH","\u2003\u2003phGraph);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":{"@attributes":{"id":"ul0003-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0004","list-style":"none"},"li":"where pwzGraphId specifies the ID of the peer-to-peer graph to open, pwzPeerId specifies the unique ID of the peer opening the graph, pwzDatabaseName specifies the name of the database that is associated with this peer-to-peer graph at the time the graph was created or opened for the first time, pSecurityInterface specifies the security provider for a peer-to-peer graph, cRecordTypeSyncPrecedence specifies the number of record types in the pRecordTypeSyncPrecedence parameter, pRecordTypeSyncPrecedence points to an array of record types. This array specifies the order in which records of the specified record types are synchronized, phGraph receives a handle to the peer-to-peer graph that is opened."}}}},{"@attributes":{"id":"p-0046","num":"0047"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI PeerGraphListen("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003IN HGRAPH","\u2002hGraph,"]},{"entry":[{},"\u2003\u2003\u2003IN DWORD","\u2002dwScope,"]},{"entry":[{},"\u2003\u2003\u2003IN DWORD","\u2002dwScopeId,"]},{"entry":[{},"\u2003\u2003\u2003IN WORD","wPort);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0005","list-style":"none"},"li":{"@attributes":{"id":"ul0005-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0006","list-style":"none"},"li":"where hGraph specifies the peer-to-peer graph to listen on, dwScope specifies the IPv6 scope to listen on, dwScopeId specifies the IPv6 scope ID to listen on, wPort specifies the port to listen on."}}}},{"@attributes":{"id":"p-0047","num":"0049"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI PeerGraphConnect("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003IN HGRAPH","hGraph,"]},{"entry":[{},"\u2003\u2003\u2003IN PCWSTR","pwzPeerId,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003IN PPEER_ADDRESS pAddress,"]},{"entry":[{},"\u2003\u2003\u2003OUT ULONGLONG * pullConnectionId);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0007","list-style":"none"},"li":{"@attributes":{"id":"ul0007-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0008","list-style":"none"},"li":"where hGraph is the handle of the peer-to-peer graph, pwzPeerId specifies the unique ID of a peer to connect to at pAddress, pAddress is a pointer to a Peer_Address structure that identifies the node to connect to, and pullConnectionId receives the pointer to a ULONGLONG that contains the connection ID."}}}},{"@attributes":{"id":"p-0048","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT WINAPI PeerGraphClose("]},{"entry":[{},"\u2003\u2003\u2003IN HGRAPH\u2003hGraph);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0009","list-style":"none"},"li":{"@attributes":{"id":"ul0009-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0010","list-style":"none"},"li":"where hGraph is the handle to the peer-to-peer graph to close."}}}},{"@attributes":{"id":"p-0049","num":"0053"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI PeerGraphGetRecord("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003IN HGRAPH","\u2003hGraph,"]},{"entry":[{},"\u2003\u2003\u2003IN GUID *","pRecordId,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003OUT PPEER_RECORD * ppRecord);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0011","list-style":"none"},"li":{"@attributes":{"id":"ul0011-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0012","list-style":"none"},"li":"where hGraph is a handle to the peer-to-peer graph, pRecordId is a pointer to record ID to retrieve, and ppRecord receives the requested record."}}}},{"@attributes":{"id":"p-0050","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI PeerGraphAddRecord("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003\u2003\u2003IN HGRAPH","\u2002\u2009hGraph,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003\u2003\u2003IN PPEER_RECORD pRecord,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003OUT GUID","* pRecordId);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0013","list-style":"none"},"li":{"@attributes":{"id":"ul0013-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0014","list-style":"none"},"li":"where hGraph is the handle to the peer-to-peer graph, pRecord is a pointer to the record to add, and pRecordId specifies the record ID that uniquely identifies this record in a peer-to-peer graph."}}}},{"@attributes":{"id":"p-0051","num":"0057"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI PeerGraphDeleteRecord("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003IN HGRAPH","\u2003hGraph,"]},{"entry":[{},"\u2003\u2003\u2003IN GUID *","pRecordId,"]},{"entry":[{},"\u2003\u2003\u2003IN BOOL","fLocal);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0015","list-style":"none"},"li":{"@attributes":{"id":"ul0015-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0016","list-style":"none"},"li":"where hGraph is the handle to the peer-to-peer graph, pRecordId is a pointer to record ID to delete, and fLocal is a flag."}}}},{"@attributes":{"id":"p-0052","num":"0059"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI PeerGraphRegisterEvent("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003IN HGRAPH","\u2002hGraph,"]},{"entry":[{},"\u2003\u2003\u2003IN HANDLE","\u2002hEvent,"]},{"entry":[{},"\u2003\u2003\u2003IN ULONG","cEventRegistrations,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003IN PPEER_GRAPH_EVENT_REGISTRATION"]},{"entry":[{},"\u2003\u2003\u2003pEventRegistrations,"]},{"entry":[{},"\u2003\u2003\u2003OUT HPEEREVENT * phPeerEvent);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0017","list-style":"none"},"li":{"@attributes":{"id":"ul0017-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0018","list-style":"none"},"li":"where hGraph is the handle to the peer-to-peer graph, hEvent is the handle that the application is signaled on when an event is triggered, cEventRegistrations specifies the number of PEER_GRAPH_EVENT_REGISTRATION structures in pEventRegistrations, pEventRegistrations points to an array of PEER_GRAPH_EVENT_REGISTRATION structures that specify what events the application requests notifications for phPeerEvent receives a HPEEREVENT handle."}}}},{"@attributes":{"id":"p-0053","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"typedef enum peer_graph_event_type_tag"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003\u2003PEER_GRAPH_EVENT_STATUS_CHANGED,"]},{"entry":[{},"\u2003\u2003\u2003PEER_GRAPH_EVENT_PROPERTY_CHANGED,"]},{"entry":[{},"\u2003\u2003\u2003PEER_GRAPH_EVENT_RECORD_CHANGED,"]},{"entry":[{},"\u2003\u2003\u2003PEER_GRAPH_EVENT_DIRECT_CONNECTION,"]},{"entry":[{},"\u2003\u2003\u2003PEER_GRAPH_EVENT_NEIGHBOR_CONNECTION,"]},{"entry":[{},"\u2003\u2003\u2003PEER_GRAPH_EVENT_INCOMING_DATA,"]},{"entry":[{},"\u2003\u2003\u2003PEER_GRAPH_EVENT_CONNECTION REQUIRED,"]},{"entry":[{},"\u2003\u2003\u2003PEER_GRAPH_EVENT_NODE_CHANGED,"]},{"entry":[{},"\u2003\u2003\u2003PEER_GRAPH_EVENT_SYNCHRONIZED"]},{"entry":[{},"\u2003\u2003\u2003} PEER_GRAPH_EVENT_TYPE;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0019","list-style":"none"},"li":{"@attributes":{"id":"ul0019-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0020","list-style":"none"},"li":"where PEER_GRAPH_EVENT_STATUS_CHANGED indicates that the peer-to-peer graph status has changed in some manner, PEER_GRAPH_EVENT_PROPERTY_CHANGED indicates that a field in the peer-to-peer graph property structure has changed, PEER_GRAPH_EVENT_RECORD_CHANGED indicates that a record type or specific record has changed in some manner, PEER_GRAPH_EVENT_DIRECT_CONNECTION indicates that a peer's direct connection has changed, PEER_GRAPH_EVENT_NEIGHBOR_CONNECTION indicates that a connection to a peer neighbor has changed, PEER_GRAPH_EVENT_INCOMING_DATA indicates that data has been received from a direct or neighbor connection, PEER_GRAPH_EVENT_CONNECTION_REQUIRED indicates that the peer-to-peer graph has become unstable, PEER_GRAPH_EVENT_NODE_CHANGED indicates that a node's presence status has changed in the peer-to-peer graph, and PEER_GRAPH_EVENT_SYNCHRONIZED indicates that a specific record type has been synchronized."}}}},{"@attributes":{"id":"p-0054","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT WINAPI PeerGroupCreate("]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003IN PPEER_GROUP_PROPERTIES pProperties,"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003OUT HGROUP\u2003\u2003* phGroup);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0021","list-style":"none"},"li":{"@attributes":{"id":"ul0021-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0022","list-style":"none"},"li":"where pProperties is a pointer to a PEER_GROUP_PROPERTIES structure that specifies the specific details of the group, such as the peer-to-peer group names, invitation lifetimes, and presence lifetimes, and phGroup returns the handle pointer to the peer-to-peer group."}}}},{"@attributes":{"id":"p-0055","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI PeerGroupJoin("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003\u2003IN PCWSTR","pwzIdentity,"]},{"entry":[{},"\u2003\u2003\u2003\u2003IN PCWSTR","pwzInvitation,"]},{"entry":[{},"\u2003\u2003\u2003\u2003IN PCWSTR","pwzCloud,"]},{"entry":[{},"\u2003\u2003\u2003\u2003OUT HGROUP","\u2002* phGroup);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0023","list-style":"none"},"li":{"@attributes":{"id":"ul0023-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0024","list-style":"none"},"li":"where pwzIdentity is a pointer to a Unicode string that contains the identity that a peer uses to join a peer-to-peer group, pwzInvitation is a pointer to a Unicode string that contains the XML invitation granted by another peer, pwzCloud is a pointer to a Unicode string that contains the name of the PNRP cloud where a group is located, and phGroup is a pointer to the handle of the peer-to-peer group."}}}},{"@attributes":{"id":"p-0056","num":"0067"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT WINAPI PeerGroupConnect("]},{"entry":[{},"\u2003\u2003\u2003\u2003IN HGROUP\u2003\u2003hGroup);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0025","list-style":"none"},"li":{"@attributes":{"id":"ul0025-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0026","list-style":"none"},"li":"where hGroup is the handle to the peer-to-peer group to which a peer intends to connect."}}}},{"@attributes":{"id":"p-0057","num":"0069"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT WINAPI PeerGroupClose("]},{"entry":[{},"\u2003\u2003\u2003\u2003IN HGROUP\u2003\u2003hGroup);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0027","list-style":"none"},"li":{"@attributes":{"id":"ul0027-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0028","list-style":"none"},"li":"where hGroup is the handle to the peer-to-peer group to close."}}}},{"@attributes":{"id":"p-0058","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI PeerGroupDelete("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003\u2003IN PCWSTR","pwzIdentity,"]},{"entry":[{},"\u2003\u2003\u2003\u2003IN PCWSTR","pwzGroupPeerName);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0029","list-style":"none"},"li":{"@attributes":{"id":"ul0029-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0030","list-style":"none"},"li":"where pwzIdentity is a pointer to a Unicode string that contains the identity opening the specified peer-to-peer group, and pwzGroupPeerName is a pointer to a Unicode string that contains the peer name of the peer-to-peer group whose data is deleted."}}}},{"@attributes":{"id":"p-0059","num":"0073"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI PeerGroupCreateInvitation("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003\u2003IN HGROUP","hGroup,"]},{"entry":[{},"\u2003\u2003\u2003\u2003IN PCWSTR","\u2009pwzIdentityInfo,"]},{"entry":[{},"\u2003\u2003\u2003\u2003IN FILETIME *","\u2009\u2009pftExpiration,"]},{"entry":[{},"\u2003\u2003\u2003\u2003IN ULONG","cRoles,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003\u2003\u2003\u2003IN PEER_ROLE_ID*\u2003\u2002pRoles,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003\u2003OUT PWSTR","* ppwzInvitation);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0031","list-style":"none"},"li":{"@attributes":{"id":"ul0031-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0032","list-style":"none"},"li":"where hGroup is the handle to the peer-to-peer group for which this invitation is issued, pwzIdentityInfo is a pointer to a Unicode string that contains the XML blob (including the GMC) returned by a previous call to PeerIdentityGetXML with the identity of the peer, pftExpiration specifies a UTC FILETIME structure that contains the specific date and time the invitation expires, cRoles specifies the count of roles in pRoleInfo, pRoles is a pointer to a list of GUIDs that specifies the combined set of available roles, and ppwzInvitation is a pointer to a Unicode string that contains the invitation from the issuer."}}}},{"@attributes":{"id":"p-0060","num":"0075"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI PeerGroupRegisterEvent("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003\u2003IN HGROUP","hGroup,"]},{"entry":[{},"\u2003\u2003\u2003\u2003IN HANDLE","hEvent,"]},{"entry":[{},"\u2003\u2003\u2003\u2003IN DWORD","cEventRegistration,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003\u2003IN PPEER_GROUP_EVENT_REGISTRATION"]},{"entry":[{},"\u2003\u2003\u2003\u2003pEventRegistrations,"]},{"entry":[{},"\u2003\u2003\u2003\u2003OUT HPEEREVENT * phPeerEvent);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0033","list-style":"none"},"li":{"@attributes":{"id":"ul0033-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0034","list-style":"none"},"li":"where hGroup is the handle of the peer-to-peer group on which to monitor the specific peer events; hEvent is a pointer to a Windows event handle, which is signaled when a peer event is fired; cEventRegistration contains the number of PEER_GROUP_EVENT_REGISTRATION structures listed in pEventRegistrations; pEventRegistrations is a pointer to a list of PEER_GROUP_EVENT_REGISTRATION structures that contains the peer event types for which registration occurs; and phPeerEvent is a pointer to the returned HPEEREVENT handle."}}}},{"@attributes":{"id":"p-0061","num":"0077"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"typedef enum peer_group_event_type_tag"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\u2003\u2003\u2003PEER_GROUP_EVENT_STATUS_CHANGED,"]},{"entry":[{},"\u2003\u2003\u2003\u2003PEER_GROUP_EVENT_PROPERTY_CHANGED,"]},{"entry":[{},"\u2003\u2003\u2003\u2003PEER_GROUP_EVENT_RECORD_CHANGED,"]},{"entry":[{},"\u2003\u2003\u2003\u2003PEER_GROUP_EVENT_DIRECT_CONNECTION,"]},{"entry":[{},"\u2003\u2003\u2003\u2003PEER_GROUP_EVENT_NEIGHBOR_CONNECTION,"]},{"entry":[{},"\u2003\u2003\u2003\u2003PEER_GROUP_EVENT_INCOMING_DATA,"]},{"entry":[{},"\u2003\u2003\u2003\u2003PEER_GROUP_EVENT_MEMBER_CHANGED,"]},{"entry":[{},"\u2003\u2003\u2003\u2003PEER_GROUP_EVENT_CONNECTION_FAILED"]},{"entry":[{},"\u2003\u2003\u2003\u2003} PEER_GROUP_EVENT_TYPE;"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0035","list-style":"none"},"li":{"@attributes":{"id":"ul0035-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0036","list-style":"none"},"li":"where PEER_GROUP_EVENT_STATUS_CHANGED indicates that the status of the group has changed, PEER_GROUP_EVENT_PROPERTY_CHANGED indicates that a member in the PEER_GROUP_PROPERTIES structure has changed, PEER_GROUP_EVENT_RECORD_CHANGED indicates that a group record has changed, PEER_GROUP_EVENT_DIRECT_CONNECTION indicates that the status of a direct connection has changed, PEER_GROUP_EVENT_NEIGHBOR_CONNECTION indicates that the status of a neighbor connection has changed, PEER_GROUP_EVENT_INCOMING_DATA indicates that an incoming direct connection data from a member is detected, PEER_GROUP_EVENT_MEMBER_CHANGED indicates that the status of a member has changed, and PEER_GROUP_EVENT_CONNECTION_FAILED indicates that the connection to the peer-to-peer group has failed."}}}},{"@attributes":{"id":"p-0062","num":"0079"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI PeerGroupGetRecord("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003IN HGROUP","\u2003hGroup,"]},{"entry":[{},"\u2003\u2003\u2003IN GUID *","pRecordId,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003OUT PPEER_RECORD * ppRecord);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0037","list-style":"none"},"li":{"@attributes":{"id":"ul0037-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0038","list-style":"none"},"li":"where hGroup is a handle to a group that contains a specific record, pRecordId specifies the GUID value that uniquely identifies a required record within a peer-to-peer group, and ppRecord is a pointer to the address of a PEER_RECORD structure that contains a returned record."}}}},{"@attributes":{"id":"p-0063","num":"0081"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"HRESULT WINAPI PeerGroupAddRecord("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003\u2003\u2003\u2003IN HGROUP","\u2003hGroup,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003\u2003\u2003\u2003IN PPEER_RECORD pRecord,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003\u2003\u2003\u2003OUT GUID","* pRecordId);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0039","list-style":"none"},"li":{"@attributes":{"id":"ul0039-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0040","list-style":"none"},"li":"where hGroup is the handle to the peer-to-peer group, pRecord is a pointer to a PEER_RECORD structure that is added to the peer-to-peer group specified in hGroup, and pRecordId is a pointer to a GUID that identifies the record."}}}},{"@attributes":{"id":"p-0064","num":"0083"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"HRESULT WINAPI PeerGroupDeleteRecord("]},{"entry":[{},"\u2003\u2003IN HGROUP\u2003hGroup,"]},{"entry":[{},"\u2003\u2003IN GUID *\u2003pRecordId);"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0041","list-style":"none"},"li":{"@attributes":{"id":"ul0041-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0042","list-style":"none"},"li":"where hGroup is thehandle to the peer-to-peer group that contains the record and PRecordId, specifies the GUID value that uniquely identifies the record to be deleted."}}}},"A process for collaborating and communicating real-time in a peer-to-peer network has been described. Scenarios such as instant messaging, collaboration on documents, images, etc., collaborative gaming, whiteboarding, on-line business presentations, and the like.","All of the references cited herein, including patents, patent applications, and publications, are hereby incorporated in their entireties by reference.","In view of the many possible embodiments to which the principles of this invention may be applied, it should be recognized that the embodiment described herein with respect to the drawing figures is meant to be illustrative only and should not be taken as limiting the scope of invention. For example, those of skill in the art will recognize that the elements of the illustrated embodiment shown in software may be implemented in hardware and vice versa or that the illustrated embodiment can be modified in arrangement and detail without departing from the spirit of the invention. Therefore, the invention as described herein contemplates all such embodiments as may come within the scope of the following claims and equivalents thereof."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["While the appended claims set forth the features of the present invention with particularity, the invention, together with its objects and advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings of which:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4","i":"a "},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4","i":"b "}]},"DETDESC":[{},{}]}
