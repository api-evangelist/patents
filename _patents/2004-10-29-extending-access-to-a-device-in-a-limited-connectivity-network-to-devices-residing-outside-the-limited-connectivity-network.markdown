---
title: Extending access to a device in a limited connectivity network to devices residing outside the limited connectivity network
abstract: The invention makes possible remote control of devices in a piconet by remote users communicating over the Internet and the like by providing a proxy-bridge device. The proxy-bridge device is a bridge for sending packets to and from between an external device and a device in the piconet. Moreover, the proxy-bridge device also serves as a proxy for the external device to devices in the piconet and as a proxy for devices in the piconet accessing an external device. The proxy-bridge wireless device's protocol stack allows communications with the piconet devices within the piconet. In addition, the protocol stack allows an application to communicate with a remote device e.g., via the Internet Protocol. Thus, the proxy-bridge device, using two protocols, enables remote users discover the presence of a service offered by a device in a piconet as a logical embedded device within the proxy-bridge device and vice-versa.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07733885&OS=07733885&RS=07733885
owner: Microsoft Corporation
number: 07733885
owner_city: Redmond
owner_country: US
publication_date: 20041029
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application is a divisional of U.S. patent application Ser. No. 09\/784,474 filed on Feb. 15, 2001 now abandoned by the present inventors and assigned to the present assignee, said application entitled \u201cA Proxy-Bridge Connecting Remote Users to a Limited Connectivity Network.\u201d Said application (Ser. No. 09\/784,474) claims the benefit of U.S. Provisional Patent Application 60\/199,581 filed on Apr. 25, 2000.","Said application (Ser. No. 09\/784,474) is a continuation-in-part of U.S. patent application Ser. No. 09\/556,565 filed on Apr. 24, 2000 now U.S. Pat. No. 6,922,548 by the present inventors and assigned to the present assignee, entitled \u201cProviding Remote Network Driver Interface Specification Services Over a Wireless Radio-Frequency Medium\u201d which claims the benefit of U.S. Provisional Patent Application No. 60\/184,116, filed on Feb. 18, 2000.","The present application is related to U.S. patent application Ser. No. 10\/977,021, filed concurrently herewith by the present inventors and assigned to the present assignee, said application entitled \u201cManaging Packet Transmissions Between a Device in a Limited Connectivity Network and a Device Residing Outside the Limited Connectivity Network.\u201d","This invention relates generally to networking computing devices extending the reach of a network formed by devices with limited connectivity to allow remote users and networks access services offered by the limited connectivity network. In particular, the invention relates to network bridging devices communicatively coupling heterogeneous networks.","A class of stripped wireless devices operate within computer networks and typically communicate over small distances and relatively low bandwidths. Such stripped down wireless devices, while mobile, are capable of directly communicating with a rather small number of other devices. Such devices have limited resources and are significantly limited in comparison to wireless devices. For instance, the BLUETOOTH (\u201cBT\u201d) specifications, version 1.0 B, which are herein incorporated by reference in its entirety, describe stripped down wireless devices at different levels of complexity. A BT device has limited range and connectivity, typically within thirty feet of another BT device and to no more than seven other such devices.","The BT system provides for communications between two devices over a common channel using a point-to-point connection or communications between several devices over a common channel via a point-to-multipoint connection. Two or more devices sharing the same channel form a piconet. During communications in a piconet, typically, one device assumes the role of a master device controlling the small number of devices within the piconet. A particular device can participate in more than one piconet, of course, with each piconet having its own channel.","The profile of a BT device provides information about the services available at the device. Thus, a BT compliant cell phone discloses its possible settings, state and other relevant information in its profile. Further, the cell phone may be controlled within a piconet by commands issued by another device. However, it is not presently feasible for remote users, who are outside the reach of the piconet, to control or query the cell phone due to the different protocols employed for operating stripped-down devices, e.g., BT, as opposed to wireless devices in general, e.g., IEEE 802.11. Similarly, a BT device cannot discover services available at a new server device joining a piconet without periodically polling for service discovery.","Discovery and control of devices over the expanse of large networks is possible, e.g., in accordance with the Universal Plug and Play specification (\u201cUPnP\u201d). A copy of the specification is attached to this application for incorporation herein by reference in its entirety. UPnP specifies a method for control and data transfer based on the IP protocol. Specifically UPnP enables a controller or control point to communicate with devices to be controlled over a network. In order to enable such communications, each device to be controlled is required to have an IP address and a Dynamic Host Control Protocol (\u201cDHCP\u201d) client. In the absence of a DHCP server, a UPnP compliant device obtains an IP address via Auto IP.","Given UPnP compliant devices with their own IP addresses, a control point can discover them using a discovery message. The control point obtains the capabilities of a discovered device and logical devices within it by retrieving the description of the device provided in the Extensible Markup Language (\u201cXML\u201d). Following the acquisition of the description, the control point can send actions to the device, e.g., using XML with the aid of the Simple Object Access Protocol (\u201cSOAP\u201d).","UPnP compliant devices and control points advertise their capabilities using multicast discovery messages, i.e., messages addressed to more than one recipient, to which all devices are required to listen and respond. For instance, in response to a multicast discovery message sent by a control point, responding devices send unicast messages addressed to the control point. Furthermore, UPnP allows a physical device to include several logical devices. In such instance a root device description may include several embedded device descriptions in a single description. Alternatively, the several embedded devices may provide their own distinct descriptions.","The device description provided by the device vendor is based on a template for the particular device type. Service descriptions, also in XML and provided by the vendor, include a list of commands that the device responds to and arguments in the commands. A control point obtains these service and device descriptions by issuing a \u201cGET\u201d command, in accordance with the hypertext transfer protocol (HTTP), to the relevant device. Similarly, a control point obtains the value of one or more state variables for a device by querying it.","UPnP also allows a control point to track changes in a state variable by subscribing to an eventing service. Event messages provided by a publisher disclose any change in the state variable to the subscribers. Thus, both polling and broadcasting facilitate communications between devices and control points in accordance with UPnP.","Stripped down wireless devices usually cannot support the overhead required for compatibility with UPnP. The UPnP requirement for IP addresses, support for HTTP and extendable markup language (XML) and the like are not readily met by all stripped down wireless devices, although, some stripped down wireless devices offer support for HTTP and XML. Such limitations on stripped down wireless devices result in incompatibility between devices that can be controlled via the Internet and stripped down wireless devices limited to a piconet in various degrees.","The invention makes possible remote access to and\/or control of wireless devices including those forming a piconet, e.g., BT compliant devices, without requiring extensive changes to existing devices by introducing a proxy-bridge wireless device.","The proxy-bridge wireless device has a stack enabling communications with the wireless devices in accordance with standard wireless device specifications. In addition, the stack allows a remote application to communicate with a device over the Internet or a subnet. Thus, the proxy-bridge device can communicate using two protocols. Within the piconet the proxy-bridge device assumes the role of the master device. Thus, to devices in the piconet requests for services appear to be made by the proxy-bridge device acting as a proxy for remote devices and applications. Devices outside the piconet can view the capabilities of individual piconet devices with the proxy-bridge device acting as a bridge.","In an embodiment of the invention, the capabilities of wireless devices are made available in accordance with the universal plug-and-play (UPnP) specification to enable queries to the proxy-bridge device by users communicating over the Internet or a subnet to discover the presence of a suitable wireless device. The proxy-bridge device maintains a table to map IP addresses to particular wireless devices to facilitate specific control of the wireless devices by a remote user through IP addresses. Thus, the proxy-bridge device is a bridge forwarding requests from outside the piconet to a device in the piconet. The proxy-bridge device is also a proxy for the remote devices since it represents them to piconet devices.","In addition, some embodiments of the invention provide UPnP services directly over a BT device's stack without requiring support for IP. This enables such a device to discover and advertise its services in accordance with UPnP while communicating with other similar devices or while communicating with external devices via a proxy-bridge device. Extension of UPnP to a limited connectivity network such as a BT piconet via a suitable bridge requires transparent management UPnP features such as discovery, description, control and eventing into commands in the limited connectivity network.","Additional features and advantages of the invention will be made apparent from the following detailed description of illustrative embodiments, which proceeds with reference to the accompanying figures.","It is desirable to provide users with the ability to interconnect devices with no more effort than placing the devices at a desired location. For instance, a toaster close to a coffee machine and an air conditioner should be able to interconnect with them to form a network to allow centralized control and monitoring. In part, wireless connections between devices enable inter-device interaction without physical wires. In some applications it is desirable to provide more extensive connectivity to allow remote control of the devices from across the Internet or discovery of remote services by devices in such networks. Presently, this is not possible without using more sophisticated devices with significantly more resources.","The invention described herein provides such remote control of devices in small networks, e.g., piconets conforming to the BT specification without requiring extensive changes to existing devices by providing a proxy-bridge wireless device.","In particular, the proxy-bridge wireless device implements a protocol stack such that the proxy-bridge device is just another device in the piconet to other devices in the piconet. To devices outside the piconet the proxy-bridge device appears to have several embedded individually addressable logical devices, typically corresponding to the devices in the piconet. To devices within the piconet, the proxy-bridge device offers services available outside the piconet as if the proxy-bridge device provides them itself. Hence, the proxy-bridge device serves as a proxy both ways and a bridge between external devices and the piconet.","Moreover, the invention includes modifying the protocol stack of piconet devices to enable plug and play capability without requiring support for IP by using piconet compatible packets to carry data and actions using XML and HTTP.","Some of the devices, whether in the piconet or remote to the piconet, provide computing environments similar to the computing environment illustrated in . Of course, the invention does not require the resources and sub-devices illustrated in . In fact, the piconet devices will not include many of the components depicted in  such as a hard drive for data storage.","Turning to the drawings, wherein like reference numerals refer to like elements, the invention is illustrated as being implemented in a suitable computing environment. Although not required, the invention will be described in the general context of computer-executable instructions, such as program modules, being executed in a computing environment. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multi-processor systems, microprocessor based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 1","b":["100","100","100","100"]},"The invention is operational with numerous other general-purpose or special-purpose computing system environments or configurations. Examples of well-known computing systems, environments, and configurations that may be suitable for use with the invention include, but are not limited to, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, and distributed computing environments that include any of the above systems or devices.","The invention may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices.","With reference to , an exemplary system for implementing the invention includes a general-purpose computing device in the form of a computer . Components of the computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus, also known as Mezzanine bus.","The computer  typically includes a variety of computer-readable media. Computer-readable media can be any available media that can be accessed by the computer  and include both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer-readable media may include computer storage media and communications media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer-readable instructions, data structures, program modules, or other data. Computer storage media include, but are not limited to, random-access memory (RAM), read-only memory (ROM), EEPROM, flash memory, or other memory technology, CD-ROM, digital versatile disks (DVD), or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage, or other magnetic storage devices, or any other medium which can be used to store the desired information and which can accessed by the computer . Communications media typically embody computer-readable instructions, data structures, program modules, or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communications media include wired media such as a wired network and a direct-wired connection and wireless media such as acoustic, RF, optical, and infrared media. Combinations of the any of the above should also be included within the scope of computer-readable media.","The system memory  includes computer storage media in the form of volatile and nonvolatile memory such as ROM  and RAM . A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within the computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and program modules that are immediately accessible to or presently being operated on by processing unit . By way of example, and not limitation,  illustrates an OS , application programs , other program modules , and program data . Often, the OS  offers services to applications programs  by way of one or more application programming interfaces (APIs) (not shown). Because the OS  incorporates these services, developers of applications programs  need not redevelop code to use the services. Examples of APIs provided by OSs such as Microsoft's \u201cWINDOWS\u201d are well known in the art.","The computer  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk interface  that reads from and writes to non-removable, nonvolatile magnetic media, a magnetic disk drive , which may be internal or external, that reads from and writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from and writes to a removable, nonvolatile optical disk  such as a CD ROM. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, DVDs, digital video tape, solid state RAM, and solid state ROM. The hard disk drive , which may be internal or external, is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in  provide storage of computer-readable instructions, data structures, program modules, and other data for the computer . In , for example, hard disk drive  is illustrated as storing an OS , application programs , other program modules , and program data . Note that these components can either be the same as or different from the OS , application programs , other program modules , and program data . The OS , application programs , other program modules , and program data  are given different numbers here to illustrate that they may be different copies. A user may enter commands and information into the computer  through input devices such as a keyboard  and pointing device , commonly referred to as a mouse, trackball, or touch pad. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, and scanner. These and other input devices are often connected to the processing unit  through a user interface  that is coupled to the system bus, but may be connected by other interface and bus structures, such as a parallel port, game port, or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . In addition to the monitor, computers may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device, or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN) , personal area network (PAN) and a wide area network (WAN) , and a wireless interface  complete with an antenna, but may also include other networks. Some examples of contemplated networking protocols include those compliant with BLUETOOTH\u2122, UPnP\u2122, JINI\u2122, SALUTATION\u2122 and IETF SLP. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet or are expected to be introduced in the near future.","A computing device with both wireless and LAN\/PAN connectivity, as depicted in , is suitable for implementing a proxy-bridge device in accordance with the invention. However,  is an exemplary depiction of a proxy-bridge device and does not limit the possible embodiments of the claimed invention as is apparent to one of ordinary skill in the art.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user-input interface , or via another appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in a remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on memory device , which may be internal or external to the remote computer . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","In the description that follows, the invention will be described with reference to acts and symbolic representations of operations that are performed by one or more computers, unless indicated otherwise. As such, it will be understood that such acts and operations, which are at times referred to as being computer-executed, include the manipulation by the processing unit of the computer of electrical signals representing data in a structured form. This manipulation transforms the data or maintains them at locations in the memory system of the computer, which reconfigures or otherwise alters the operation of the computer in a manner well understood by those skilled in the art. The data structures where data are maintained are physical locations of the memory that have particular properties defined by the format of the data. However, while the invention is being described in the foregoing context, it is not meant to be limiting as those of skill in the art will appreciate that several of the acts and operations described hereinafter may also be implemented in hardware.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 2","b":["200","210","205","200","215","220","225","230","235","205","205","210","215","235","210","200","205","210","205","240","210","205"]},"Turning to , BT devices provide an example of piconet devices. Some BT devices include IP support while other BT devices, with far more limited computing resources, lack IP support. Both kinds of BT devices are capable of communicating with each other and forming a piconet. BT devices lacking IP support are likely to have limited computing capabilities. In an embodiment of the invention the BT stack within such devices is modified to provide support for the UPnP functionality.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 3","FIG. 3"],"b":["300","305","310","315","315","320","330","325","300","305","300","305","315"]},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 4","b":["400","405","410","415","405","420","405","415"]},"SDP  does not provide a mechanism for a BT environment to announce the availability of new services. Therefore, a polling routine updates the list of available services within its BT environment. L2CAP  layer provides connection-oriented and connectionless data services between BT devices over Asynchronous Connection-Less (ACL) links. SDP  uses L2CAP 's connection-oriented (CO) transport protocol to communicate with other BT devices within a piconet. Since L2CAP  does not support networking functions between piconets, it limits the discovery of services to the active BT devices in a given piconet. Service discovery is extended by the UPnP  functionality.","UPnP functionality  provides seamless, media independent, peer-to-peer device connectivity and control. UPnP is a computing, electronics, telephony and networking industry initiative enabling connectivity among stand-alone devices and PCs from many different vendors. These UPnP characteristics make it suitable as a BT extended service discovery protocol (ESDP) for providing an enhanced mechanism for service discovery and control beyond a piconet domain. Accordingly, SDP  provides service records indicating the availability of UPnP functionality in a BT device. Since BT devices lack IP support, the UPnP functionality  is supported over the L2CAP layer.","Since the proposed BT devices have UPnP functionality , they can engage in seamless peer-to-peer device connectivity, service discovery, and control within their piconet. ESDP includes UPnP functionality  to augment SDP  in the proposed BT devices. However, UPnP functionality includes a Simple Service Discovery Protocol (SSDP), an IP multicast based discovery protocol, HTTP and XML. Native BT L2CAP layer  does not provide IP or the multicast channel support. Therefore, in order to adapt UPnP functionality, the SSDP functions are supported over the L2CAP layer along with HTTP and XML functioning over the L2CAP layer to enhance BT devices with UPnP functionality layered over the native BT L2CAP layer.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 5","b":["505","500","515","505","505","510","510","515","510","510","515","525","520","530","515","520","575"]},"In an embodiment of the invention, the connections to remote devices are provided through Network Device Interface Specification (NDIS) conforming driver software. As is known by those skilled in the art, NDIS provides a library of interfaces between various levels of driver software components and the corresponding hardware components to define a fully abstracted environment for network interface card (NIC) driver development. Thus, NDIS provides and standardizes the interfaces for communication between a NIC driver, an overlying protocol driver, and the underlying NIC hardware itself. An NDIS driver accepts requests and creates responses that conform to the NDIS interfaces.","To enable the use of NDIS interfaces over a broad range of networking hardware, the Remote Network Device Interface Specification (RNDIS) carries NDIS messages over a number of different transport mechanisms. As described in more detail in co-pending application, Ser. No. 09\/302,735, entitled \u201cMethod and System for Abstracting Network Device Drivers\u201d by Hyder et al., filed on Apr. 30, 1999, which is incorporated herein by reference in its entirety, and assigned to the assignee of the present application, RNDIS provides extensibility without changing the bus specific message transport mechanisms. RNDIS also provides a reliable driver architecture for both networking and external bus device models.","When UPnP Device Control Protocols  address multiple devices, then a Multicast Emulator  manages multicasting by sending a sequence of unicast messages to the various devices in a piconet. This is an efficient strategy because a piconet only has a few devices, and consequently the overhead of managing multicast messages by multiple messages is relatively insubstantial. However, this is an implementation detail in the aforementioned exemplary embodiment and is not intended to be a limitation. Other embodiments of the invention implement multicasting as a message to a master device in the piconet that sends a global message recognized by all the devices in the piconet or even a true multicast message to which each device in the piconet responds if required.","The UPnP Device Control Protocols  and an underlying UPnP Device Architecture  interact with the BT protocol stack using Hypertext Transfer Protocol Multicast (HTTPMU) , Hypertext Transfer Protocol Unicast (HTTPU)  and Hypertext Transfer Protocol (HTTP) . This interaction enables implementation of Simple Service Discovery Protocol (SSDP) and General Event Notification Architecture (GENA) , just GENA  and Simple Object Access Protocol (SOAP)  of UPnP in a BT protocol stack. The BT protocol stack supports functions required by HTTP without supporting TCP\/IP frames for sending and receiving HTTP compliant information packets. This scheme suits wireless devices because the TCP guarantees of packet delivery, and hence HTTP compliant information contained therein, are less significant since wireless connections normally include acknowledgment of packet delivery, just as the Connection Management  layer ensures data integrity to upper layers of the stack.","If two BT devices communicate, each device supporting the protocol stack depicted in , then logical connections can be established between different modules. Thus, the LM  in one device is able to communicate with the LM  in the other device using the underlying layers in a manner known to those of ordinary skill in the art. Accordingly, the UPnP functionality is able to use the BT stack to provide UPnP functionality over the logical connection between the respective UPnP Device Control Protocols  on each device and the like. Moreover, prior to using the UPnP functionality a BT device discovers another BT device providing support for the UPnP functionality via SDP . SDP  merely provides information about the existence of the requested service. Therefore, the application level modules, UPnP Device Control Protocols , and UPnP Device Architecture  handle subsequent operations via the BT protocol stack.","Turning to , a system generally illustrating the structure of an RNDIS networking stack is shown. An RNDIS miniport driver  receives and responds to NDIS requests from higher-level protocols , communicated through NDIS . However, the miniport driver  is bus independent because of the existence of bus-specific microport drivers, such as microport drivers  and . Microport driver  provides a USB-specific implementation for translating communication between the underlying USB software and hardware and the RNDIS miniport . Similarly, microport driver  provides a BT-specific implementation for translating between the underlying BT software and hardware and the RNDIS miniport . In such a manner, the RNDIS miniport can be bus-independent, merely requiring a small microport to provide bus-specific functionality. Such a system provides significant efficiencies because the same miniport can be used with many different networking environments, so long as a specific microport exists.","HTTP  of  is one of the higher level networking protocols  in . The connection management layer  is implemented in RNDIS miniport driver , and the L2CAP layer  is implemented in the RNDIS microport driver for BT . Alternatively, the connection management layer  is implemented solely in the RNDIS microport driver for BT , or through processes performed in both the microport driver  and the RNDIS miniport driver . The BT specific aspects are provided by the RNDIS microport driver for BT . Thus, the RNDIS miniport driver  remains connection neutral.","As known to those having ordinary skill in the art, the BT L2CAP layer does not provide flow control to prevent the overflow of data buffers, nor does it enforce a reliable channel to ensure data integrity. In this exemplary embodiment, the connection management layer , contained within the BT-specific microport , performs such functions. The connection management layer  limits itself to a single connection simplifying connection and buffer management. Alternatively, the connection management layer  supports multiple connections\u2014though with less efficiency. The connection management layer  and the BT-specific microport  communicate with the higher-level RNDIS miniport driver . Communication at the lower level occurs through the L2CAP channel established between a BT device and a host device. Such communication takes, by the way of example, the form of L2CAP packets of  herein.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 7","FIG. 2","FIG. 3","FIG. 5"],"b":["205","315","700","705","610","715","705","720","725","715","730","735","740","745"]},"Each BT compatible device has a unique identifier (BT ID). This identifier is mapped into an IP address by a proxy-bridge device. In an embodiment of the invention a table  provides a ready reference to the mapping between the IP address and the BT ID. Table  can be accessed via the HTTP and XML  layer or the UPnP functionality . This, however, is not intended to be a limitation on the intended scope of the invention. For instance, alternative embodiments of the invention implement table  such that it has additional or fewer interfaces. The mapping in table  allows external devices to interact with a proxy-bridge device to access BT compatible devices lacking IP support with the aid of the IP address without having the BT device being aware of the mapping. Such transparent services reduce the number of devices and software that need to be modified to provide outside access to BT devices via the proxy-bridge. Furthermore, the proxy-bridge device represents the external device to the BT devices, thus permitting the BT devices lacking IP support to access external devices.","An external device accessing a piconet via the proxy-bridge device is presented with services offered by the devices in the piconet and corresponding IP addresses for requesting the same without the piconet devices being aware of the IP address assignment.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 8","b":["800","805","810","810","815","815","810","820"]},"If during step  the polled device is a proxy-bridge device, then control flows to step . During step , in a manner similar to step , if the proxy-bridge device supports the requested service, then control flows to step , during which a message is sent indicating that the service is available. On the other hand, if the proxy-bridge device does not provide the requested service then the control flows to step  from step . During step  the proxy-bridge device queries external device(s) to determine if the requested service is available outside the piconet. This query is possible since the proxy-bridge device provides support for the piconet protocol and the TCP\/IP suite with UPnP on top of the stack providing SSDP. Therefore, the availability of the UPnP SSDP protocol enables querying external devices supporting UPnP functionality for a service of interest.","During step  if the external device can provide the requested service, then control flows to step . The proxy-bridge device receives a message from an external device during step  indicating that the requested service is available outside the piconet. A service availability message is sent to the requesting device during step  such that the service appears to be provided by the proxy-bridge device. In other words, the proxy-bridge device acts as a proxy for the external device actually providing the service.","Failure to receive a response at the proxy-bridge device results in timing out the query to the external device and the control returns to step  from step  resulting in a denial of service.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 9","FIG. 7","FIG. 7","FIG. 7"],"b":["900","905","910","905","745","915","750","920"]},"In response to the service request, during step , the BT device sends data to the proxy-bridge device. To the BT device the proxy-bridge device is just a BT device functioning as the master device in the piconet. In order to forward the data to the service-requesting device, the proxy-bridge device, during step , identifies the IP address corresponding to the BT ID of the BT device that sent the data during step . Next, during step , the data is sent to the external device as if it originated from an embedded device in the proxy-bridge device with the IP address determined during step . This IP address should be same as the IP address used for the device from which the service was requested during step .","On the other hand, if during step  the service request is not directed to an IP address, then the BT protocol stack, for example the BT protocol stack in , handles the service request during step . During step  the proxy-bridge device determines whether the service is available locally. If the service is available locally, then the proxy-bridge device provides the service during step . On the other hand, if the service is not available locally, then control passes to step . During step  an action request for the service is sent to an external device using the BT device's IP address, as assigned by the proxy-bridge device. From the point of view of the external device, the service request originates from an embedded device within the proxy-bridge device. Thus, the proxy-bridge device acts as a proxy for the requesting BT device during the aforementioned interactions with external devices.","The proxy-bridge device receives the response from the external device during step  and determines, during step , the BT identifier of the requesting BT device followed by forwarding the response to the BT device during step . It should be noted that the step of converting from an IP address to a corresponding BT address and vice versa is similar to the steps  and .",{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 10","b":["1010","1012","1014","1016","1014","1016","1020","1022","530"]},"As shown in the example of , the PDU  contains a header  and a data payload . Two different PDU structures are used. One PDU structure carries both data and acknowledgements, and another returns acknowledgements when there is no other data being transmitted with which the acknowledgement can be sent.","An information PDU carrying both data and acknowledgements is shown in  as PDU . As can be seen, a header  consists of a four-bit type field , an unused four bits , an eight bit sequence number , and an eight bit request number . The first bit of the type field  is used to indicate whether the PDU is an information PDU or a control PDU. For example, a binary 0 indicates that the PDU is an information PDU, and a binary 1 indicates that the PDU is a control PDU. As might be appreciated, other embodiments of the invention employ alternative values for the type field. Similarly, the second bit of the type field  indicates whether the PDU contains both data and an acknowledgement, or only an acknowledgement. Thus, a binary 1 indicates that the PDU only carries an acknowledgement of receipt of the previous packet, and a binary 0 indicates that the PDU contains both an acknowledgement and additional data. The eight-bit sequence number  is an identifier of the data contained in the packet, and is incremented each time another packet of data is sent. The eight-bit request number  also implicitly acknowledges proper receipt of all of the data with sequence numbers less than the request number. Sending the request number to both specify the next frame and acknowledge received frames results in greater efficiency.","Should it be necessary to acknowledge receiving a packet, without the need to send additional data, an information PDU carrying only an acknowledgement suffices. An information acknowledgement PDU , as shown in , contains a header , but no data field and maintains a BT channel when there is no data to be transmitted by providing activity to keep the channel open. The header  of the information acknowledgement PDU  contains a type field  four bits long, an unused field , also four bits long, another unused field  of eight bits in length, and a request number field  eight bits long. The type field  is analogous to type field , described in detail above. The unused field  replaces the sequence field , which is not necessary for PDU , as there is no data being carried which needs to be sequenced properly. The request number field  carries the identifier of the data that is sent in return, and, more importantly, acts as the implicit acknowledgement of the proper receipt of all of the packets with sequence numbers less than the request number.","In a manner analogous to information PDUs  and  described above, control PDUs  and  transmit information regarding the flow control of the packets. Control data PDU  contains the PDU header  and a data field , while control acknowledgement PDU , contains only the header . The header  for the control PDUs  and  is identical in format to that of the information PDUs  and , described in detail above. However, unlike the information PDU data field , the control PDU data field  is only eight bits in length since it carries the size of the transmission window. Should a receive buffer for data information PDUs become full, a window size of zero can be requested as a stop indication.","Both information and control PDUs are segmented and reassembled in the connection management layer , shown in . Given a window size of n, at most n information PDUs can be outstanding in the piconet. Each time a request number is received, indicating the proper receipt of each PDU with a sequence number less than the request number, the number of outstanding PDUs in the piconet decreases. If a particular information PDU times out without having received an acknowledgment then the go back n auto repeat request (ARQ) protocol initiates the retransmission of information PDUs starting with the sequence number of the information PDU that timed out.","The flow control for control PDUs is similar to the information PDU flow control described in detail above, except that the transmit and receive window sizes for control PDUs are set to 1 and cannot be changed. Thus, control PDU transmissions use a go back 1 ARQ protocol. This ensures that there is only one control PDU outstanding at any given time.","Briefly, if the external device sends an action request for a service to a piconet device identified by an assigned IP address, the proxy-bridge device forwards the request, to the corresponding BT device. To the BT device the action request appears to have been generated by the proxy-bridge device itself. Thus, the proxy-bridge device acts as a proxy for the external device. This step ensures that the limit on the number of devices that BT devices actively connected to a given BT device is not violated.","Similarly, data sent by the BT device in response to an action request is forwarded to an originating external device by the proxy-bridge device. Thus, to the external device the proxy-bridge device appears to have several logically embedded devices. To the devices in the piconet the proxy-bridge device hides the presence of an external device and instead provides services offered by external devices as well as serving as a bridge between the BT frames and the IP frames for sending and receiving data to and from an external device.","The invention includes modification of the BT protocol stack to provide UPnP functionality without requiring support for IP. BT devices with aforementioned modifications to their protocol stacks can participate in piconets, use UPnP to discover services from each other and use polling to update the state of other BT devices lacking UPnP. Moreover, the invention includes proxy-bridge BT devices. A proxy-bridge device acts as a bridge to the extent it allows UPnP compliant requests to be forwarded onto a piconet using BT compliant frames rather than IP and vice versa. The proxy-bridge device acts as a proxy for an external device requesting services from one or more BT devices in a piconet while the proxy-bridge device can also act as a proxy for a BT device in the piconet for accessing external devices and services.","The proxy-bridge device functions as a proxy for a piconet device accessing services external to the piconet by presenting such services as part of its own profile. Thus, the piconet device does not need to obtain an IP address to communicate with an external device because the proxy-bridge device manages addresses transparently. To the external device the piconet device has an IP address while to the piconet device the services, actually provided by the external device, are provided by the proxy-bridge device and discovered by polling the proxy-bridge device. Consequently, the invention allows all BT devices to interact transparently with external services and each other.","Still another feature of the present invention is a computer-readable medium having computer-executable instructions for performing a plurality of the steps illustrated in, for instance,  and  in the course of practicing the invention.","In view of the many possible embodiments to which the principles of this invention may be applied, it should be recognized that the embodiment described herein with respect to the drawing figures is meant to be illustrative only and should not be taken as limiting the scope of invention. For example, those of ordinary skill in the art will recognize that elements of the illustrated embodiment shown in software may be implemented in hardware and vice versa or that the illustrated embodiment can be modified in arrangement and detail without departing from the spirit of the invention. Therefore, the invention as described herein contemplates all such embodiments as may come within the scope of the following claims and equivalents thereof.","All of the references cited herein, including patents, patent applications, and publications, are hereby incorporated in their entireties by reference."],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["While the appended claims set forth the features of the present invention with particularity, the invention, together with its objects and advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings of which:",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
