---
title: Extensible framework for capturing feature information in a neutral format
abstract: Flexible framework within a CAD application program is described that serves as a neutral format for feature information relating to modeling data for a solid body. The framework is hierarchical in nature to allow for ease of use and universal access to the design data. The hierarchical framework is independent of the underlying feature information as well as independent of the underlying CAD program.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06961684&OS=06961684&RS=06961684
owner: Autodesk, Inc.
number: 06961684
owner_city: San Rafael
owner_country: US
publication_date: 20010515
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["\u201cThis application is a Continuation of application Ser. No. 09\/107,888, filed Jun. 30, 1988\u201d, entitled \u2018EXTENSIBLE FRAMEWORK FOR CAPTURING FEATURE INFORMATION IN A NEUTRAL FORMAT\u2019 which issued Jul. 3, 2001 as U.S. Pat. No. 6,256,596.","1. Field of the Invention","The present invention relates generally to handling feature information in a parametric feature-based solid modeler, and in particular, to a method, apparatus, and article of manufacture for providing an extensible framework for capturing feature information in a neutral format for computer programs that build three d models based on form features.","2. Description of the Related Art","The use of Computer Aided Design (CAD) application programs is well known in the art. Some CAD programs provide standard objects that help users create documents, graphical presentations, etc. However, these standard objects provide only limited assistance and do little to help the user connect standard CAD components, define new components, or define methods of manipulating the components within the CAD program.","Further, most CAD programs have representations of objects that are unique to that CAD program. Each CAD designed part has features that are accessed by various people throughout the design and manufacturing process. However, designers, manufacturers, and users typically use different software programs with different formats to analyze and access the CAD data, creating confusion as well as incomplete data retrieval for all parties concerned.","Consequently, there is a need in the art for improved techniques to access CAD designed part data. Further, there is a need in the art for improved techniques for formatting the data such that the various parties that desire access to the CAD part data can obtain the information desired.","To address the requirements described above, the present invention discloses a method, apparatus, and article of manufacture for executing an extensible schema or framework for representing feature data in a computer, wherein the flexible framework provides data in a neutral format. The flexible framework serves as a database for users of multiple disciplines and multiple end products to access and use the CAD data.","All of the design intent represented in the feature model is accessible by the flexible framework in order to provide more capabilities to each user.","In the following description, reference is made to the accompanying drawings which form a part hereof, and which is shown, by way of illustration, several embodiments of the present invention. It is understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the present invention.","Overview","The present invention is a Computer Aided Design (CAD) program that includes an Application Programming Interface (API) that allows for features in a parametric solid modeling system to be represented in a neutral, extensible format. The representation is independent of the particular underlying feature implementation. Enhancements to the underlying feature representations can be accomplished without impacting the user of the framework, thus supporting the development of systems which can evolve without compromising the binary compatibility of interacting applications.","The framework of the present invention allows information to be retrieved at different levels for optimal performance. It can be used for purposes of creating, querying, or editing features and can be seen as a representation-neutral language for the manipulation of features in parametric feature based solid modeling systems. The framework is particularly suitable for use in an API as it insulates the client of the API from internal details of the modeling system. It is applicable to any CAD program that supports built-in features in the context of a parametric feature based solid modeler. It defines a hierarchy of objects, and methods on these objects, which together contain all the information used in the creation and regeneration of any feature in the system. The information represented includes the type of feature, hierarchical characterization of the feature, the parameters driving how the feature is located and terminated on the part.","The basic classes used in the framework fall under the groupings of feature descriptors and feature informers. For each type of feature all defining parameters are properly represented. Feature informers are further subdivided into feature locators, feature terminators, and feature combiners. The following diagram illustrates how different classes in the framework are related. The framework can be easily extended to accommodate new types of features, different ways of locating features, etc.","The framework of the present invention allows for seamless transitions between developers of CAD drawings and other programs or users that need to access the parts that the CAD drawings represent. Each person that must access the drawing can access the information he or she wants because the framework allows for multiple levels of access.","Hardware Environment",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1","b":["100","102","104","106","108","110","112","114","100","100"]},"The personal computer  usually operates under the control of an operating system . One or more computer programs  that operate under the control of the operating system  are typically accessed via an Application Programming Interface (API) . Typically with the present invention, computer program  is a CAD program, but any program can implement the present invention. API  allows other programs and users to access computer program . Application  uses API  to interface and use computer program . Application  is representative of one or more applications or other interfaces that use API  to access computer program .","The API  provides a uniform referencing mechanism for all applications of the computer program . The API  allows application developers to refer to objects within the computer program  in a uniform manner without requiring the application to account for specific details of which application created the object referred to. For example, designer interface  can create an object to be used with computer program  through the API  that application  has access to and can use without conversion of the details of the representation of the object or details of the creation of the object being attached to the object created.","Within the computer program , a modeling framework  is used to represent the solid body that is being modeled. Within the API , the present invention adds a hierarchical framework  that converts or maps the modeling framework  to a framework that is easily accessed by application .","Generally, the computer program , API , application , hierarchical framework , and modeling framework  comprise instructions and\/or data that are embodied in or retrievable from a computer-readable device, medium, or carrier, e.g., the data storage device , a remote device coupled to the computer  via the data communications device , etc. Moreover, these instructions and\/or data, when read, executed, and\/or interpreted by the computer  cause the computer  to perform the steps necessary to implement and\/or use the present invention.","Thus, the present invention may be implemented as a method, apparatus, or article of manufacture using standard programming and\/or engineering techniques to produce software, firmware, hardware, or any combination thereof. The term \u201carticle of manufacture\u201d (or alternatively, \u201ccomputer program product\u201d) as used herein is intended to encompass a computer program accessible from any computer-readable device, carrier, or media. Of course, those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope of the present invention.","Those skilled in the art will recognize that any combination of the above components, or any number of different components, including computer programs, peripherals, and other devices, may be used to implement the present invention, so long as similar functions are performed thereby.","Modeling the Object",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2","b":["1","122","118","118","202","202","204","202","204","204"]},"Located within each object  is a feature . A feature  may be a form feature, such as a hole, extrusion or fillet, or a work or datum feature, such as work axis or work plane. Further, object  can contain many features , and one feature  is illustrated for ease of presentation.","The hierarchical framework  of the present invention uses the information relating to the feature  of the modeling framework  and organizes it in a different manner. The hierarchical framework generates a neutral representation of the feature  and stores the neutral representation in defined classes to allow for ease of access to the information for purposes of query, creation, or editing.","As modeling of a solid body takes place, lines, geometric shapes, fillets, through and blind holes, and other qualities and features of the solid body are created that will be used for analysis and production later in the design process. As these features  are stored in an object-oriented sense in the modeling framework , the hierarchical framework  of the present invention provides the design data to application  through API  in a different format. The feature  is unchanged, but is now more readily accessible to application  on demand.","Hierarchical Framework","The hierarchical framework  of the present invention allows different applications to access CAD drawing information at different levels in a format that is not biased towards any of the potential applications, i.e., a \u201cneutral\u201d format. Each level of the hierarchical framework  is derived from the information stored in the level above itself.","As shown in , once application  is utilizing the computer program  to model the solid body, the framework  of the features  of the solid body is further broken down into descriptors  and informers . Descriptors  provide information on the data defining the shape of the feature , independent of the feature  location or termination. A specific descriptor , such as a hole descriptor or a fillet descriptor, is derived from a descriptor , and usually contains specific feature elements , such as the diameter of a circle, the length of a line, the angle that a line takes with respect to the horizontal or vertical axes, etc.","For example, a corner on an object is rarely exactly sharp; there is usually some rounding of the corner. There will be in the framework a specific feature element  that allows the application  to retrieve or specify values for the fillet radius. This specific feature element  (the radius) is accessed through a specific descriptor , in this case, a fillet descriptor. The descriptor  does not have a concrete instance within the hierarchical framework ; instead, it is an abstract class that allows for uniform access to all specific descriptors . The hierarchical framework  can be extended into deeper levels if desired.","The informer  class allows the application  to specify information about the feature  that relate the feature  to external parameters. Locator , which is derived from informer , allows the application  to determine where the feature  will be placed on the drawing. Specific locator , such as a concentric locator or a co-linear locator, is derived from a locator , and usually contains locator elements , such as angles and distances.","For example, a hole can be placed on a modeled body concentrically with a cylindrical surface. Thus, the hierarchical framework  provides a specific locator , namely a concentric locator that corresponds to this type of hole location procedure. Using this specific locator , the user can query or set the hole position through the locator element , which represents a reference to the cylindrical surface in positioning the hole. The locator element  is accessed through the specific locator .","The locator  does not have a concrete instance within the hierarchical framework ; instead, it is an abstract class that allows for uniform access to all specific locators . The hierarchical framework  can be extended into deeper levels if desired.","Specific locator  can also specify a relative location which allows the application  to determine where the feature  will be placed relative to another feature, whether tangent to, concentric with, aligned with, angled with respect to, or any other location information that draws on items external to the feature  itself.","Terminator  allows an application  to determine the termination characteristics of a feature . Terminator  allows for blind, through, planar, and from\/to terminations, as well as other terminations of feature .","For example, a hole in a modeled body can have a certain depth, which is referred to as a blind hole. Thus, the hierarchical framework  provides a specific terminator  called a blind terminator. There will be in the hierarchical framework  a specific terminator element  which corresponds to the depth of the blind hole that allows application  to retrieve or specify values for the blind hole depth. This specific terminator element  (the depth) is accessed through a specific terminator , in this case, a blind terminator. The terminator  does not have a concrete instance within the hierarchical framework ; instead, it is an abstract class that allows for uniform access to all specific terminators . The hierarchical framework  can be extended into deeper levels if desired.","Combiner  allows the application  to combine feature  with other features , whether joining, intersecting, cutting, basal, or other combinations.","The framework  can be easily extended to accommodate new types of features, different ways of locating features, etc. Further, additional classes, specific instances of classes, and features of the specific instances of each class are available for descriptor , informer , and any additional extended class that the framework is designed for.","As applications traverse the framework , applications can access the information stored in each class (descriptor  and informer ) as well as each subclass (specific descriptor , feature descriptor elements , locator , specific locator , locator element , terminator , specific terminator , terminator element , and combiner ) differently so each application can obtain the information they need to complete their task. Different levels of access can be given to allow some applications to only access class information, where other applications can be given full access to access any information within the framework . Further, some applications can be given read-only access to allow for limited entry access into the framework .","Flowchart",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 3"},"Block  represents performing the step of creating a hierarchical framework, the hierarchical framework distinct from the modeling framework.","Block  represents performing the step of creating at least one class within the hierarchical framework.","Block  represents performing the step of generating a neutral representation of the feature of the parametrically modeled solid body.","Block  represents performing the step of storing the neutral representation as an entry in the hierarchical framework.","This concludes the description of the preferred embodiment of the invention. The following describes some alternative embodiments for accomplishing the present invention.","For example, any type of computer, such as a mainframe, minicomputer, workstation or personal computer, could be used with the present invention. In addition, any software program, application or operating system having a user interface could benefit from the present invention.","The above teaching also supports additional functions that may also be implemented using the hierarchical framework of the present invention. In addition, the hierarchical framework can be integrated closely with each application program by any number of different methods.","In summary, the present invention discloses a method, apparatus, and article of manufacture for executing an extensible schema or framework for representing feature data in a computer, wherein the flexible framework provides data in a neutral format. The flexible framework serves as a database for users of multiple disciplines and multiple end products to access and use the CAD data. All of the properties of the modeled solid body are accessible by the flexible framework in order to provide more capabilities to each user.","The foregoing description of the preferred embodiment of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description, but rather by the claims appended hereto."],"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS","CONCLUSION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Referring now to the drawings in which like reference numbers represent corresponding parts throughout:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
