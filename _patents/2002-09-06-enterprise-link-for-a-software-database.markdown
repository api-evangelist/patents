---
title: Enterprise link for a software database
abstract: An enterprise link for a software database is coupled to existing enterprise systems within an organization and also to an active data cache. The enterprise link contains an active designer whereby a user is able to create one or more data flow definitions on how to operate on data stored in the enterprise systems as the data in those systems changes. The transformed data is transmitted to a data flow service in the enterprise link in real-time where it is made available to end-users in the active data cache.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07454423&OS=07454423&RS=07454423
owner: Oracle International Corporation
number: 07454423
owner_city: Redwood Shores
owner_country: US
publication_date: 20020906
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND","DETAILED DESCRIPTION"],"p":["The present invention relates generally to information technology in an enterprise, more particularly, to a system and method for acquiring and integrating data from disparate sources in an enterprise and for making the data continuously available, in real-time, to users.","A paramount concern in a modern enterprise is the ability to quickly access changing information located on disparate systems and platforms within the enterprise. In order to properly maintain a comprehensive view of the operations and business processes within an organization, however, information on these systems needs to be integrated. For example, as an enterprise grows it requires increased flexibility of data sharing throughout its various automated business systems, such as customer relations management (CRM), enterprise resource planning (ERP), accounting, inventory control, and other systems. A practice known as enterprise application integration (EAI) enables an organization to share data throughout applications and data sources in an organization. EAI may include database linking, application linking, and data warehousing.","Nevertheless, there have been numerous shortcomings in the integration and data sharing in information technology (IT) environments. Independent configuration for disparate technologies and industry standards often make integration requirements difficult to meet. Integrating an existing inventory control system to a new ERP software package, for instance, may be difficult due to the fact that both systems contain unique features that are customized to fit the requirements of particular areas within an organization. Moreover, many EAI solutions contain a confusing web of point-to-point connections between different applications, procedure calls, file transfers, and e-mail-type messaging to transmit organizational data. These solutions are thus high-risk because of their complexity. Moreover, the data within the individual systems is often locked up, sometimes in proprietary form, difficult to access, and not correlated with other systems and platforms. This makes it difficult to get a consistent, coherent view of all the business data across the enterprise.","Yet another major shortcoming of prior EAI systems is that they are unable to source data from anywhere in the enterprise and to provide automated, in-depth analysis of events in the organization that happen as the events occur. Although some business processes are able to function with slow access to information, the availability of access to real-time information regarding the status and operation of business processes can greatly impact the profitability and efficiency of an organization. What is needed is a comprehensive business platform that enables companies to gather, organize, and deliver in real-time the disparate data driving their businesses","The present invention provides an enterprise link for a software database. In the following description numerous specific details are set forth, such as the particular configuration of message queues to handle continuous, real-time data acquisition, the architecture of the enterprise link, and the details regarding specific enterprise systems in order to provide a thorough understanding of the present invention. However, persons having ordinary skill in the communication arts will appreciate that these specific details may not be needed to practice the present invention.","Referring now to  there is shown a block diagram of an enterprise link connected to existing enterprise systems and to an active data cache according to one embodiment of the present invention. The existing enterprise systems may include legacy systems such as existing hardware and software packages, for example, single-purpose and\/or multi-purpose applications designed to perform various functions within an organization (e.g., inventory, finance, accounting, sales force automation, human resources, etc.). There is shown in  a simplistic view of an enterprise computing runtime environment  containing a plurality of enterprise systems including packaged software applications such as \u201cback office\u201d applications  for enterprise resource planning (ERP), \u201cfront-office\u201d applications  for customer relationship management (CRM), customized legacy systems , and multidimensional\/relational database management systems (RDBMS) . Of course, a variety of other applications (not shown in this view) may also exist in the enterprise computing runtime environment . These disparate systems may be coupled to one another using a local area network (LAN) , a wide area network (WAN) or any other such networking environments commonplace in offices, enterprise-wide computer networks, the intranet, and the Internet. Further, network may include a wireless network, such that one or more computers may operate over a wireless LAN.","As is known in the art, the existing enterprise systems contain a variety of different data about the organization. For example, the ERP system  may contain data regarding essential business functions including payroll, manufacturing, general ledger, and human resources whereas the CRM system  may contain core information regarding the organization's customers. As data in these various systems changes (e.g., a sale is made, a new employee is hired, payroll is processed, etc.), one or more message queueing systems  may be used to allow these various applications ,, , etc., to exchange information on the data being stored in their systems. To this end, one implementation of the present invention employs a message queue server (e.g., the Microsoft RTM message Queue Server (MSMQ) although other message queuing systems may be used as well), to provide loosely-coupled and reliable network (across servers) communication services based on a message-queueing model. In MSMQ, messages are sent to a queue, where the message will stay until it is removed and used by another application. In this manner, loosely-coupled applications can share data to provide an enterprise-wide view of information, such as data and business transactions.","An enterprise link  is coupled to the enterprise computing runtime environment  through a network connection, such as the Internet . Of course, as is noted above, the network connection may also be a LAN, a WAN, a wireless network, or any other system of connections that allows one or more computers to exchange information. The enterprise link  integrates, in real-time, the disparate data in the message queues. The enterprise link  of the present invention is always active. It continuously accepts raw data feeds , , , etc., from the existing enterprise systems, and then reformats, synchronizes, and consolidates the data. In a traditional model, the data in the message queues would only be processed through the dataflow system when a specified number of records had built up within the message queues (i.e., the data would be transmitted in batch mode). According to an algorithm contained within the data flow system of the present invention, however, individual records are processed through to the enterprise link  the moment that they appear (i.e., the program continuously checks for messages). In this manner, real-time data flow is transmitted through the raw data feeds , ,  via the message queues. It should be noted that although a message queueing system is used in one embodiment, the enterprise link  may also obtain data from the enterprise computing runtime environment  in a variety of other ways. These sources of data may be, for example, HyperText Transport Protocol (\u201cHTTP\u201d) requests and\/or Application Programming Interface (\u201cAPI\u201d) calls and\/or Web Services calls. In these alternative embodiments, the enterprise link  contains a web server to process the HTTP requests and\/or another application or server to process the API and\/or Web Service calls.","Regardless of how the enterprise link  receives the raw data feeds , , , etc., the enterprise link  transmits the data it receives from the enterprise computing runtime environment  via a network connection  or through some other connection (not shown in this view) to an active data cache (ADC) . The ADC  is a high-performance, memory-based persistent cache which stores the data , ,, etc., it receives from the enterprise link . The ADC  contains code which may be implemented in software such as Java\u2122, Perl, C++, or other types of programming languages that can be stored on a computer-readable medium (e.g., a disk) to manage the data , ,, etc., that is actively changing within the enterprise computing runtime environment  and to make the data accessible to the end-user (not shown in this view) in real-time. In this manner, the data , , , etc., in the ADC  is constantly changing in that it is synchronized in real-time with the data in the enterprise runtime computing environment . The data , , , etc., in the ADC  is persistent to disk , but this disk  is only used for backup, restore, and recovery purposes.","An active designer  is the component of the enterprise link  that determines what data will be contained within the ADC  and also the process by which the data , , , etc., will be transmitted to the ADC . As is shown in , the active designer  is also connected to the enterprise computing runtime environment  via the Internet . Active designer is also shown coupled with ADC  via a network connection . In essence, the active designer  contains one or more lists of data flow definitions (not shown in this view) on how to operate on the data that is transmitted to the active designer  through the network connection . Again, the code for the data flow definitions may be implemented in software such as JAVA, Perl, C++, C#, or other types of programming languages that can be stored on a computer-readable medium. For example, when sales data arrives at the ERP , the active designer  contains a set of data flow definitions on how to retrieve, transform, and display this data (i.e., each data flow definition includes executable software code instructing the enterprise link  to retrieve the salesperson field whenever a sale is made, to describe how many sales that salesperson has made for the day, and then to transmit this data to the ADC ). This mapping process (i.e., the process by which the enterprise link  is able to express data from multiple sources through various transformations and to transmit the transformed data to specified destinations) will be described in more detail in reference to .","Referring now to  there is shown a block diagram of message queue processing system using the enterprise link of . As is noted above, a variety of message queuing systems may be used in practicing the present invention (e.g., Microsoft RTM Message Queue Server). As data changes in the plurality of enterprise systems in the enterprise computing runtime environment , the data is sent to the enterprise link  in data feeds through message queues . The data that comes through the message queues  may come from disparate sources (i.e., the ERP system , the CRM , customized legacy systems , etc.). The active designer  divides the data into transaction channels  (i.e., the method by which the data arrives) and transaction formats  (i.e., the method by which the data is interpreted). In the embodiment illustrated by , Extensible Markup Language (XML) is used to specify the format of the records (as well as the values to be used in those records). It should be noted, however, that other types of data formats may be used as well. The data is then interpreted as logical instances of transaction sources  and transmitted to a data flow service . The data flow service  is part of the enterprise link . As is noted above, the data may also be transmitted to the enterprise link through HTTP requests and\/or API calls and\/or Web Services.  illustrates a web server  in the enterprise link  receiving data through HTTP requests  and API calls .","According to the embodiment illustrated by , the data flow service  contains a plurality of data flow plans , ,, as well as a data repository  which contains one or more lists of data flow definitions on how to operate on the data. As is described above, the active designer  creates the lists of data flow definitions which are stored in the data repository . However, it is the data flow service  that actually executes or edits the data flow plans , , , etc., when it is time to do so. One exemplary data flow service that can be utilized is the one described in U.S. Pat. No. 6,243,698 entitled \u201cExtensible Database Retrieval and Viewing Architecture,\u201d which is incorporated herein by reference. Of course, other types of data flow services may be used as well. The data flow plans , , , etc., include executable code for accessing, manipulating, and\/or outputting data received from the enterprise computing runtime environment . A plan monitoring service  is connected to the data flow service . The plan monitoring service  examines all the data flow plan links to datasets  that are defined in the ADC  and causes the data flow service  to run the plans associated with each dataset. The plan monitoring service  also includes a user interface  to monitor the data flow service  to ensure that all of the data flow plans , , , etc., are being executed properly. In one embodiment, the user interface  allows the data flow plans ,,, etc., to be extensible. That is, through the user interface  new steps can be defined without having to change the application to support the new steps. The user interface  can thus extend the application (i.e., create a new set of transaction channels and transaction formats) without having to recompile the enterprise runtime computing environment . The enterprise link  is also able to replicate existing metadata in the enterprise runtime computing environment  by importing datasets definitions from the existing enterprise systems into the active designer  through network link . In this manner, whenever an enterprise link  is installed in an organization, an entirely new set of metadata conforming to the existing enterprise systems within the organization does not need to be defined by the active designer .",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 3","FIG. 3","FIG. 2A"],"b":["190","191","192","193","194"]},"Of course, although data stored in tabular form for a casino business is shown in , it should be noted that the tabular form of the present invention may contain a variety of different data entry fields to keep an end-user appraised in real-time about the events occurring anywhere across the enterprise in the course of conducting the business of the enterprise. For example, a chemical plant could specify database entry fields tailored to monitor dangerous changes within the chemical plant. In a second example, health care providers could specify database fields for a patient's medical history, diagnosis, and drug treatment plans. In yet another example, retail organizations could specify database fields for product sales and increases and decreases in inventory. In all of these examples, access to real-time recognition of business events in the database format would lead to heightened profitability and give the business a competitive edge.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 4","b":["201","202","203","204","205","206","207","208","209"]},"Referring now to  there is shown a flow chart illustrating the steps of utilizing an enterprise link system to obtain real-time data from disparate systems in an organization according to one embodiment of the present invention. An event occurs in an enterprise system within an organization (processing block ). Data about the event is entered into an existing enterprise system within the organization (e.g., a CRM system) (processing block ). The data is transmitted over the Internet to an enterprise link through the message queuing system (processing block ). A data flow service in the enterprise link executes one or more data flow plans to operate on the data that is transmitted by the existing enterprise systems (processing block ). The data is transmitted to an ADC (processing block ) where it is made accessible to an end-user (processing block ).","Referring now to  there is shown an example of a computer system on which the present techniques may be implemented according to one embodiment of the present invention. The computer system  includes a processor  coupled through a bus  to a random access memory (RAM) , a read only memory (ROM) , and a mass storage device . Mass storage device  could be a disk or tape drive for storing data and instructions. A display device  for providing visual output is also coupled to processor  through bus . Keyboard  is coupled to bus  for communicating information and command selections to processor . Another type of user input device is cursor control unit , which may be a device such as a mouse or trackball, for communicating direction commands that control cursor movement on display . Many other input devices well known in the art may also be used. Further coupled to processor  through bus  is an input\/output (I\/O) interface  which can be used to control and transfer data to electronic devices connected to computer , such as other computers, tape records, and the like. The processor  may also be connected to a telephony interface  through bus . It should be noted that although display device , keyboard , and cursor control unit  may be included in the computer system , they are typically not essential for the computer system  to operate after the software has been installed.","Network interface device  is coupled to bus  and provides a physical and logical connection between computer system  and the network medium (not shown in this view). Depending on the network environment in which computer  is used, this connection is typically to a server computer, but it can also be to a network router to another client computer. Note that the architecture of  is provided only for purposes of illustration, and a client computer used in conjunction with the present invention is not limited to this specific architecture.","In the foregoing, an enterprise link for a software database has been described. Although the present invention has been described with reference to specific exemplary embodiments, it should be understood that numerous changes in the disclosed embodiments can be made in accordance with the disclosure herein without departing from the spirit and scope of the invention. The preceding description, therefore, is not meant to limit the scope of the invention. Rather, the scope of the invention is to be determined only by the appended claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention will be understood more fully from the detailed description that follows and from the accompanying drawings, which however, should not be taken to limit the invention to the specific embodiments shown, but are for explanation and understanding only.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 2A","FIG. 1"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 2B","FIG. 1"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
