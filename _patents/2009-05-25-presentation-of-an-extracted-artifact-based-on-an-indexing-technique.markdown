---
title: Presentation of an extracted artifact based on an indexing technique
abstract: A system and method of presentation of an extracted artifact based on an indexing technique are disclosed. In an embodiment, the method includes indexing a database of a captured network characteristic data using a processor and a memory to form an indexed capture data. The method includes enhancing a query response time with the indexed capture data. The method further includes searching the indexed capture data to generate a capture query result. The capture query result includes an extracted artifact. The method also includes graphically presenting the capture query result as at least one of an artifact list and an artifact image.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08521732&OS=08521732&RS=08521732
owner: Solera Networks, Inc.
number: 08521732
owner_city: South Jordan
owner_country: US
publication_date: 20090525
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CLAIM OF PRIORITY","FIELD OF TECHNOLOGY","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit of U.S. Provisional Application No. 61\/055,873, filed on May 23, 2008.","This disclosure relates generally to technical fields of software and, in one example embodiment, presentation of an extracted artifact based on an indexing technique.","A database of information acquired through monitoring network traffic may include multiple files, programs, and data types. A user may lack sufficient skill or information to formulate a query to search the database effectively. In addition, each search of the database may consume a significant amount of time. The use of the significant amount of time may deter a user from developing a complete query or a thorough set of queries. The user may be encouraged to take shortcuts in generating a query. As a result, the quality of a query generated by a user and\/or a number of queries may be limited, and a desired information may be unavailable.","A system and method of presentation of an extracted artifact based on an indexing technique are disclosed. In an aspect, a method includes indexing a database of a captured network characteristic data using a processor and a memory to form an indexed capture data. The method also includes enhancing a query response time with the indexed capture data. The method further includes searching the indexed capture data to generate a capture query result. The capture query result includes an extracted artifact. In addition, the method includes graphically presenting the capture query result as at least one of an artifact list and an artifact image.","The method may include aggregating a payload data from different network packets. The method may also include matching the payload data with an entry of library of known artifacts. The method may also include determining a type of the payload data based on a match with the entry of the library of known artifacts. The method may further include separating the payload data from a header data in a network packet and acquiring the extracted artifact from a network traffic.","The method may also include analyzing one or more of a data content, a file content, a file name, a directory name, a file metadata, and an extracted artifact when the database of the captured network characteristic data is indexed. The method may also include discovering an event comprised of at least one of an initial installation, a user command, and an indexing time period. The method may include, responsive to the event, indexing the database of the captured network characteristic data. Indexing the database of the captured network characteristic data is performed locally.","The method may include providing a visual user option through a graphical user interface. The visual user option includes a user selectable query parameter determined by one or more of a radio button, a pull-down menu, a check box, a check list, a button, and a selectable image. The method also includes presenting a customizable query box through the graphical user interface. The method may also include receiving a selection based on at least one of the visual user option and the customizable query box. The method may include generating a search parameter based on the selection.","The method may further include graphically presenting the capture query result through a web browser when the capture query result is received. In addition, the method may include reconstructing an artifact image of the extracted artifact using a virtual client application and acquiring a snapshot of the artifact image. The method may include forming a thumbnail view of the snapshot and displaying the thumbnail view through a graphical user interface. The virtual client application may include a virtual web browser. The extracted artifact may include one or more of a word processing document, a spreadsheet document, a database, an image, a video, a multimedia file, an email, an instant message communication, an audio file, a compressed file, an executable file, a web page, a presentation, a program file, and a data package.","In another aspect, a system includes a processor to index a database of a captured network characteristic data using a memory to form an indexed capture data. A query response time is enhanced through the indexed capture data. The system includes a field module to search the indexed capture data to generate a capture query result. The capture query result includes an extracted artifact. The system further includes a graphical user interface module to present the capture query result as at least one of an artifact list and an artifact image.","The system may include an additional processor to aggregate a payload data from different network packets. The system may further include a database to store a library of known artifacts, wherein the additional processor and the database are used to match the payload data with an entry of library of known artifacts, determine a type of the payload data based on a match with the entry of the library of known artifacts, and separate payload data from a header data in a network packet. The system may also include an additional memory to acquire the extracted artifact from a network traffic.","The system may further include a network characteristic database to store the extracted artifact. The system may also include an index module to analyze at least one of a data content, a file content, a file name, a directory name, a file metadata, and an extracted artifact when the database of the captured network characteristic data is indexed. The system may include a network characteristic database index module to store a result of an index module analysis.","The system may include a network visibility module to discover an event comprised of at least one of an initial installation, a user command, and an indexing time period, wherein responsive to the event, the database of the captured network characteristic data is indexed using the index module and the processor. Indexing the database of the captured network characteristic data may be performed by a desktop computer communicatively coupled to the network characteristic database and a network characteristic database index.","The system may further include a criteria module to generate a search parameter using at least one of a visual user option and a customizable query box. The visual user option may be comprised of a user selectable query parameter determined by at least one of a radio button, a pull-down menu, a check box, a check list, a button, and a selectable image. The system may include a web browser to graphically presenting the capture query result when the capture query result is received.","In yet another aspect, a method includes aggregating a payload data from different network packets. The method also includes matching the payload data with an entry of library of known artifacts. The method further includes determining a type of the payload data based on a match with the entry of the library of known artifacts. The method also includes separating the payload data from a header data in a network packet and acquiring an extracted artifact from a network traffic. The method also includes storing the extracted artifact in a database of a captured network characteristic data. The method further includes analyzing at least one of a data content, a file content, a file name, a directory name, a file metadata, and an extracted artifact when the database of the captured network characteristic data is indexed.","In the aspect, the method also includes discovering an event comprised of at least one of an initial installation, a user command, and an indexing time period. The method also includes, responsive to the event, indexing the database of the captured network characteristic data using a processor and a memory of a desktop computer communicatively coupled to a network characteristic database and the network characteristic database index. The method also includes enhancing a query response time with an indexed capture data and searching the indexed capture data to generate a capture query result. The capture query result may include an extracted artifact. The method also includes graphically presenting the capture query result as at least one of an artifact list and an artifact image.","The method may include providing a visual user option through a graphical user interface. The visual user option may include a user selectable query parameter determined by at least one of a radio button, a pull-down menu, a check box, a check list, a button, and a selectable image. The method may further include presenting a customizable query box through the graphical user interface. The method may also include receiving a selection based on at least one of the visual user option and the customizable query box. The method may also include generating a search parameter based on the selection. The method may include reconstructing an artifact image of the extracted artifact using a virtual client application. The method may include acquiring a snapshot of the artifact image, forming a thumbnail view of the snapshot, and displaying the thumbnail view through a web browser when the capture query result is received.","The methods, systems, and apparatuses disclosed herein may be implemented in any means for achieving various aspects, and may be executed in a form of a machine-readable medium embodying a set of instructions that, when executed by a machine, cause the machine to perform any of the operations disclosed herein. Other features will be apparent from the accompanying drawings and from the detailed description that follows.","Other features of the present embodiments will be apparent from the accompanying Drawings and from the Detailed Description that follows.","A system and method of presentation of an extracted artifact based on an indexing technique are disclosed. In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the various embodiments. It may be evident, however, to one skilled in the art that the various embodiments may be practiced without these specific details.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 1","FIG. 1"],"b":["112","102","100","100","102","104","106","108","110","112","114","116","118","120","122","124","126"]},"In an example embodiment,  may illustrate the flow of data in the network A-N that may be monitored by the network visibility module . The storage volume A-N may communicate with the network visibility module . The user device A-N may include a data processing unit that communicates with the other devices in the network A-N. The network A-N (e.g., LAN, WAN, mobile, telecommunications, internet, intranet, Bluetooth, WiFi, WiMax, and\/or ZigBee network, etc.) may enable communication between the user device A-N and other devices.","The network visibility module  may access, acquire, and store information included within the monitored network traffic . The network visibility module  may be a hardware and\/or software application that stores captured data transmitted through a computer network, such as the network A-N. The information may be stored within the storage volumes A-N, and the information may include one or more extracted artifacts  acquired from the monitored network traffic . The network visibility module  may store the data in the network characteristic database module .","In an embodiment, the extracted artifact  may be acquired from network traffic by aggregating a payload data from different network packets. The payload data may be matched with an entry of a library of known artifacts. A type of the payload data may be determined based on a match with the entry of the library of known artifacts. The payload data may be separated from the header data in a network packet.","In the embodiment, an extracted artifact may include a word processing document, a spreadsheet document, a database, an image, a video, a multimedia file, an email, an instant message communication, an audio file, a compressed file, an executable file, a web page, a presentation, a program file, and a data package. The extracted artifact may include any file type, raw data, or other information communicated through a network.","In an embodiment, the desktop search module  may index a database of a captured network characteristic data using the processor  and the memory  to enhance a query response time and to form an indexed capture data stored within the network characteristic database index module , according to one embodiment. The desktop search module  may use the index module  to search and\/or generate the database index for the relevant content of the user's search. The index module  may operate in conjunction with an artifact index module  and\/or file index module  to search, build and\/or maintain an index database of network data. Building an index of the captured network data may improve a search response speed in comparison to a direct search of stored data.","After the initial indexing is completed, the desktop search module  may continue to index files as needed, such as when a user command is received or on a periodic and\/or continuous basis. An indexing time period may be a time delay after which an indexing operation is performed and\/or a time period determined using an algorithm. Indexing may also be suspended for a specified period of time.","The user may start searching for files immediately after installing the desktop search module . After performing searches, results may also be returned in an Internet browser on the Google\u00ae Desktop Home Page much like the results for Google\u00ae Web searches. When indexing the data, the artifact and\/or the file, the desktop search module  may collect types of information about the data, the artifact and\/or the file (e.g., file and directory names, metadata, data content, file contents, titles, authors, comments in file types such as Mp3, PDF and JPEG documents, extracted artifacts, etc.). The desktop search module  may index several different types of data, including email, web browsing history (e.g., Internet Explorer, Mozilla Firefox, etc.), office documents (e.g., in the Open Document and Microsoft Office\u00ae formats), instant messenger transcripts (e.g., from AOL\u00ae, Google\u00ae, MSN\u00ae, Skype\u00ae, Tencent QQ, etc.) and several multimedia file types for enabling a user to search the data faster. Additional file types may be indexed through the use of plug-ins (e.g., an auxiliary computer program). The desktop search module  may allow the user to control which types of data (e.g., artifacts and\/or files) are indexed by the program.","Indexing may be performed locally, such as on a desktop computer of a particular user, on a laptop, on a mobile device, in a client device, or with respect to a particular virtual machine. Indexing may therefore be associated with a particular user, machine, and\/or entity. In an embodiment, indexing may be performed locally using hardware and\/or software associated with a particular network that is separate from a monitored network. Indexing locally may also refer to performing an indexing operation using cloud computing resources that are separate from those of a monitored network. Indexing may also be performed within a monitored network, using resources, storage devices, memory, and processors of the monitored network.","The desktop search module  may utilize the field module  to search the contents of the computer files and\/or data that may be stored in the network characteristic database module  and\/or indexed in the network characteristic database index module . The field module  may conduct a search based on a set of network traffic characteristics, which may include web browser histories, e-mail archives, text documents, sound files, images and\/or video. The desktop search module  may include the ability to search the contents of image files, sound files and video by context. In an embodiment, the indexed capture data is searched to generate a capture query result  that includes an extracted artifact. After initial installation, the desktop search module  may complete an indexing of all the data, artifacts and files in the network characteristic database module  and\/or storage volumes A-N (e.g., data stored in raw form in the network characteristic database module  and\/or data indexed by the network characteristic database index module ). The indexing may include the content of the file and\/or the file name.","The field module  may conduct a search based on a particular string of data found within a file (e.g., a particular word or phrase in a Microsoft Word\u00ae document or an email). The set of network characteristics searched for may include a source and destination of addresses, a source and destination of port, and\/or a port protocol network interface. The set of characteristics may be extensible and include other elements. To search within documents, the field module  may parse many different types of artifacts and\/or files (e.g., a word processor program file). This may be achieved by using a set of filters that may interpret selected file formats (e.g., using the filter module  of ). For example, a Microsoft Office\u00ae Filter may search inside Microsoft Office\u00ae documents.","The graphical user interface module  may provide realtime control in a separate program in order to reduce or limit the need to refresh an HTML based web browser. The graphical user interface module  may use a multi-screen interface (e.g., an interface that may employ a set of multiple displays to provide a flexible interaction).","The graphical user interface module  may enable generation of a search parameter using one or more of a visual user option and a customizable query box. The visual user option may be a radio button, a pull-down menu, a check box, a check list, a button, or a selectable image. The customizable query box may display a query generated by a user's selection of a visual user option. The customizable query box may allow a user to directly enter a query.","The graphical user interface module  may graphically present the capture query result as an artifact list and\/or an artifact image. The artifact list may be a text based description of extracted artifacts that were located, and the artifact image may be a graphic representation of the type of artifact located based on a software type and\/or the contents of the extracted artifact. Additional examples of the graphical user interface may be better understood from .","In an embodiment, the capture query result may include an extracted artifact that is reconstructed using a virtual client application to be presented using the graphical user interface module . For example, a web page may include images, html code, javascript, flash animation, and\/or text. A virtual web browser may be used to interpret the extracted artifact of the capture query result and to reconstruct the web page as it would appear to a client side application based on the captured data.","The artifact image may be a snapshot of the appearance of the webpage based on the data that was captured from network traffic. The snapshot may be taken at a particular time that the information was accessed, or it may be derived from the information that was monitored and captured. The snapshot may be an algorithmically selected time period to present a representative image based on the content of different parts of the image. For example, a portion of a video may be selected to illustrate action, text, particular colors, trademark names, or information corresponding to individuals or confidential information. A flash animation image may be chosen based on a selected time period after a beginning. An audio clip may be presented as a media icon that allows all or a portion of the captured content to be played.","The artifact image may be a thumbnail image of the captured content, and the graphical user display may illustrate a table view of multiple images that were captured. The artifact image may be interactive based on a user's interaction with the artifact image, nearby images, and\/or other artifact images that are determined to be related to the artifact images. For example, a user may use a pointer to point at different artifact images or parts of the artifact images. The graphical user interface may respond by expanding the artifact image and\/or allowing the user to access the artifact image and\/or related content, such as text and\/or audio files that were captured as part of the monitored network traffic. The graphical user interface may allow a user to choose to view a webpage based on the extracted artifact and\/or the current data presented by the webpage.","The order of artifact images presented by the graphical user interface may be temporal, sorted by relevance to a query, organized by similarity to other artifact images, and\/or any other order. An example of an artifact image presented using a graphical user interface may be illustrated in .","The graphical user interface may display query building options, capture query results, extracted artifacts, and\/or reconstructed visual images to a user through the user interface .",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 2","FIG. 1","FIG. 2"],"b":["102","200","214","216","230","232","234","236"]},"The desktop search module  may index several different types of data, including email, web browsing history (e.g., Internet Explorer, Mozilla Firefox, etc.), office documents (e.g., Open Document, Microsoft Office\u00ae, etc.), instant messenger transcripts (e.g., from AOL\u00ae, Google\u00ae, MSN\u00ae, Skype\u00ae, Tencent QQ, etc.) and several multimedia file types. Additional file types may be indexed through the use of plug-ins (e.g., an auxiliary computer program). The desktop search module  may allow the user to control types of data (e.g., artifacts and\/or files) that are indexed by the program.","The network sharing module  may share the artifacts and\/or other different types of files that may be flowing over the different networks. The network characteristic database module  may store the captured data locally and\/or a separate storage volume (e.g., storage volumes A-N of ). The network characteristic database index module  may be a database of an index of network traffic characteristics.","In an example embodiment, the desktop search module  may communicate with the network characteristic database index module , the network sharing module  and with network characteristic database module  to fetch the data stored in the database (e.g., the source and the destination addresses, source and destination ports, files and artifacts extracted from the network traffic etc.).","The search parameter A may be generated using a query generated by the graphical user interface module  and\/or the field module , and it may be used to search the network characteristic database module . The search parameter B may be generated using a query generated by the graphical user interface module  and\/or the field module  to search the network characteristic database index module .",{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 3","FIG. 1","FIG. 3"],"b":["100","300","306","308","110","340","342","344","346","348","350","352","354"]},"In an example embodiment, the graphical user interface module  may communicate with the deskbar shortcut module , the criteria module , the fields of search tools module , and the browser generator module . The quick find module  may communicate with the deskbar shortcut module  and the sidebar module . The criteria module  may communicate with the index module . The artifact index module  may communicate with the index module  and the file index module . The filter module  may communicate with the field module .","The desktop search module  may include a browser generator module . The browser generator module  may accept input and provide output by generating a web page which may be transmitted via a computer network (e.g., the Internet) and viewed by the user using a web browser program (e.g., Java\u00ae, AJAX\u00ae, Adobe\u00ae Hex, Microsoft .NET\u00ae, etc.).","The desktop search module  may include a sidebar module . The sidebar may display various forms of information to the side of an application or desktop user interface. The sidebar may hold several common gadgets and resides off to one side of a desktop of a graphical user interface generated using a graphical user interface module . The sidebar module may be available with the Microsoft Windows version of Google Desktop. Another feature of the sidebar module may be an alert function that may automatically alert a user when a specified type of network artifact is observed and\/or stored by the network visibility module.","The desktop search module  may include a quick find application (e.g., quick find module  of ). The quick find application may generate a quick find window on the graphical user interface. The quick find window may be filled with specified number of relevant results from a search which may assist with obtaining a desired network information without opening another browser window.","The desktop search module  may include a deskbar (e.g., the deskbar shortcut module  of ). The deskbar shortcut module  may generate a set of deskbars (e.g., illustrative example of a deskbar in ). A deskbar may be a box which may enable the user to type in a search query directly from a user's desktop. A Web result may open in a browser window, and selected computer results may be displayed in the quick find box. A deskbar may be a fixed deskbar, which sits in a Windows taskbar, and\/or a floating deskbar, which the user may position anywhere on the user's desktop.","The deskbar shortcut module  may include a capability to create an application which may be a short string set to open a set of different applications. The quick find module  may include a quick find application that update the user as the user types such that the user may obtain desired network information without having to open another browser window. The criteria module  may provide the user (e.g., may include the network administrator) various search criteria to find a document in a form of a questionnaire.","The desktop search module may include a set of plugins that allow the user to index and search through the contents of a computer application (e.g., local Microsoft Outlook\u00ae, IBM Lotus Notes\u00ae, and Mozilla Thunderbird\u00ae email databases, etc.). These databases may be outside of the user's applications' built-in search functions. The desktop search module's email indexing feature may also be integrated with a web-based email service (e.g., Gmail\u00ae). The desktop search module may be able to index and search the email messages in an email account of a network user.","The desktop search module  may use a Google\u00ae desktop search software made by Google\u00ae for Mac OS X\u00ae, Linux\u00ae, and Microsoft Windows\u00ae. The program may allow text searches (e.g., a text search of a set of e-mails, computer files, music, photos, chats, and Web pages) transmitted through the network monitored by the network visibility module. The Google\u00ae desktop search software may include \u201cGoogle Gadgets\u201d (e.g., interactive mini-applications that can be placed anywhere on the user's desktop).","The desktop search module  may use Windows\u00ae desktop search software. The desktop search module  may be an implementation of a Windows\u00ae Search (e.g., an indexed desktop search platform released by Microsoft for the Windows\u00ae operating system) for Windows XP\u00ae and Windows Server 2003\u00ae. The desktop search module  may offer word wheeling (e.g., incremental find) of searches that may specify an advanced query syntax (AQS) (e.g., may provide advanced query operations as well). The desktop search module  may include a number of IFilters (e.g., a plugin that may allow an indexer such as Windows Indexing Service\u00ae) for a common file types (e.g., documents, audio, video as well as protocol handlers for Microsoft Outlook e-mails). Other protocol handlers and IFilters may be installed and\/or integrated into the desktop search module as needed.","The desktop search module  may include a functionality (e.g., Windows Desktop Search) that may be exposed via a taskbar mounted deskbar. The desktop search module  may provide a text field to type the query. A set of results may be presented in a flyout pane. The desktop search module  may also integrate as a Windows Explorer\u00ae window (e.g., the window of ). On selecting a file in the Windows Explorer\u00ae window, a preview of the file may be shown in the right hand side of the window, without opening the application which created the file. The search may be initiated from both interfaces. The search may open the browser to search the terms using a default search engine.","The deskbar (e.g., Windows Desktop Search deskbar of ) generated by the desktop search module  may include a capability to create an application alias. An application alias may be a short string which may be set to open a set of different applications. This functionality may be accessed by prefixing the character (e.g., !) to a predefined string (e.g., a sequence of symbols or digits). For example \u201c!calc\u201d may open a calculator application (e.g., Windows Calculator). This feature may be used to create shortcut for a uniform resource locator (URL) and\/or a network database file, which when entered, may open the particular URL and\/or network database file in a browser. It may be used to send parametrized information over the URL and\/or network database file, which may be used to create search aliases. For example, \u201cw text\u201d may be configured to search \u201ctext\u201d in Wikipedia.","The desktop search module  may support natural language searches. The natural language search may allow the user to search for things like \u201cphoto received by Tom last month\u201d or \u201cemail sent from Robert\u201d. However, the natural language search may be disabled by default. The natural language search may express the queries in Natural Query Syntax (NQS) (e.g., a natural language equivalent of AQS).","The desktop search module  may produce a preview plane that may display thumbnails (e.g., a reduced-size versions of pictures, used to make it easier to scan and recognize them, serving the same role for images as a normal text index does for words) of search results. The desktop search module  may use an indexed search platform (e.g., the indexed search platform in Windows Vista\u00ae, the indexed search platform in Windows Server 2008\u00ae, etc.). The indexed search platform may offer a superset of features provided by desktop search module. The indexed search platform may be an application programming interface (API) compatible. The desktop search module  may search indexed as well as non-indexed locations (e.g., the storage volumes A-N of , the network characteristic database module  of , the network characteristic database index module  of ). For an indexed location the index may be used and for a non-indexed location. The property handlers and IFilters may be invoked on an as needed as the search is being performed. The desktop search module  may use Windows Search. The desktop search module  may use Group Policy (e.g., a feature an operating system that provides centralized management and configuration of a computer and a remote user in an active directory environment) for centralized management.","The desktop search module  may use a combination of virtual and real folders. The search functionality may be exposed by using a search bar in a start menu (e.g., user interface elements in the operating system which may serve as a central launching point for application and tasks). When searching from the start menu, the results may be shown in the start menu itself. This may overlap a recently used program. From the start menu, it may also be possible to launch an application by searching for its executable image name or display name. Searching from the search bar in a window may replace the content of the current folder with the search results. The window may render a set of thumbnails in the search results. A thumbnail handler may be registered for a particular file type. The window may produce an enhanced preview of items in a preview pane without launching a default application. This may provide functionality such as file type-specific navigation (e.g., a browsing a presentation using next\/previous controls and\/or seeking inside a media file). The preview handlers may allow edits (e.g., highlighting a text snippet) to be performed from the preview pane. The desktop search module  may use a control panel (e.g., a control panel metaphor to allow the user control of software and hardware features). In a control panel, the search bar in the window may search for control panel options.","The desktop search module  search may be saved to create a virtual folder (e.g., a saved search, etc.) with the same query string as the original search. The desktop search module  may use a search explorer (e.g., an integrated Windows Explorer window that is used for searches). The search explorer may use the graphical user interface (e.g., the graphical user interface of , ,  and ) to specify the search parameters (e.g., a location and\/or file types that should be searched, a specified operator, etc.) without crafting an AQS query by hand.","A search query may be saved as a virtual folder (e.g., a saved search, a search folder) which, when accessed, may run the search with the saved query and return the results as a folder listing. A search folder may be an XML file (e.g., a .search-ms extension) which stores a search query (e.g., an AQS, a NQS, etc.), including a set of search operators. The desktop search module may support a query composition, where a saved search (e.g., a scope) may be nested within the query string of another search. A search folder may be distributable via really simple syndication (RSS) (e.g., a family of Web feed formats used to publish frequently updated content such as blog entries, news headlines, and podcasts in a standardized format). A search folder may be shared as a searchmelt (e.g., a Windows Vista\u00ae search folder that has been changed to be generic and able to be shared). A search folder may be accessible over the network (e.g., the networks A-N of ). Accessing a searchmelt over the network, like a regular search folder may make the results of the search available as a virtual shared folder. The search may be performed on a machine which may share the searchmelt, and may return only the results accessible from the network. The search folder may be scoped for local use only (e.g., before sharing, the search folder may be configured for remote access). The searchmelt may be created using Microsoft's SearchMelt Creator tool.","The desktop search module  may include a federation of searches to remote indexes, support for an electronic filing system (EFS), encrypted files and\/or Windows Vista-style preview handlers that may allow document-type specific browsing of documents in the preview pane. The desktop search module  may also include the search federation capabilities of a desktop search program (e.g., a Windows\u00ae Live Search Center), which may allow searches to be delegated to remote web services using an open search specification (e.g., Microsoft Search Server). The desktop search module  may be supported on, but not limited to, Windows XP\u00ae, Windows Server 2003\u00ae, Windows Vista\u00ae, Windows Server 2008\u00ae, as well as Windows Home Server\u00ae).","The desktop search module  may contain a database index (e.g., the network characteristic database index module  of , the index module  of ). The database index may index the network data stored in a database where network data is stored (e.g., the network characteristic database module  of ). The database index may determine which network data is relevant to a user's query. The database index may index offline caches of network shares, in addition to the file systems (e.g., an e-mail store, Microsoft OneNote stores indexed by Windows Desktop Search, etc.). The database index may index removable drives. The database index module may support a query against a remote index (e.g., if the file server, on which a network file share is hosted, is running a computer system such as Windows Vista or Windows Server 2008, any searches against the share will be queried against the server's index and present the results to the client system, filtering out the limited accessibility files). This procedure may be transparent to the user.","The database index may perform the I\/O operations with any priority (e.g., high and\/or low priority). Whenever other processes require the I\/O bandwidth or processor time, the other process may be able to pre-empt the database index module, thereby significantly reducing the performance hit associated with the database index module running in the background.","The desktop search module  may use a graphical user interface (e.g., the graphical user interface module  of ). The user may use the graphical user interface (e.g., a type of user interface which allows people to interact with a computer and computer-controlled devices) enable control of the desktop search module  and assess the state of the desktop search module  in a manner readable by the user. The user may use the elements of the graphical user interface (e.g., check boxes, radio boxes, menus, side bars, etc. as shown in ) to generate a search query that may then be employed by the desktop search module  to perform a search of the indexed and\/or network data. The graphical user interface may display the search query in its raw form, which may enable the user to preserve or reuse the query without rebuilding the query using the graphical user interface. The graphical user interface may employ an auto-completion function.","The graphical user interface may be any human-machine interface (HMI) (e.g., the graphical, textual and auditory information a computer program may present to the user and a set of control sequences such as keystrokes with a computer keyboard, movements of a computer mouse, and\/or selections with a touchscreen that the user may employs to control the computer program). The graphical user interface may expose several user interfaces to serve different kinds of users (e.g., a computerized library database might provide two user interfaces, one for a specified group of users and be limited to set of functions, and\/or another user interface for another group of users with wider set of functions).","The graphical user interface may use a set of programs that accept input via devices such as computer keyboard and\/or a mouse and provide articulated graphical output on a computer monitor. The graphical user interface may use, but is not limited to, an object-oriented user interface (OOUI) and\/or an application oriented interfaces. The graphical user interface may employ an HTML based web browser. The graphical user interface module  may employ a Web-based user interface (e.g., an interface that may accept input and provide output by generating a web page which is transmitted via a computer network (e.g., the Internet) and viewed by the user using a web browser program (e.g., Java\u00ae, AJAX\u00ae, Adobe\u00ae Flex, Microsoft .NET\u00ae, etc.).","The graphical user interface module  may provide realtime control in a separate program in order to eliminate the need to refresh an HTML based web browser. The graphical user interface module  may use a multi-screen interface (e.g., an interface that may employ a set of multiple displays to provide a flexible interaction). The graphical user interface module  may use a non-command user interface (e.g., an interface that may observe the user to infer the user's needs and intentions, without requiring that the user formulate explicit commands). The graphical user interface module  may use a reflexive user interface (e.g., an interface that the user may control and redefine the entire system via the user interface alone). The graphical user interface module  may employ several redundant input modalities and output modalities. The graphical user interface may allow the user to choose which ones to use for interaction.","The graphical user interface may be a visual front to a piece of software that links the user to the internal workings of a computer, or piece of software. The graphical user interface may use a pointer (e.g., a graphical image on a screen that indicates the location of a pointing device, and can be used to select and move objects or commands on the screen). The graphical user interface pointer may employ a pointing device (e.g., the mouse, a tracker ball, a touchpad, a pointing stick, a lightpen, and\/or various other kinds of digitizing tablets).","The graphical user interface may be a window (e.g., an area on the screen that displays information, with its contents being displayed independently from the rest of the screen as shown as an illustrative example in ). The window may be placed in front or behind another window, its size may be adjusted, and scrollbars may be used to navigate the sections within it. Multiple windows may be open at one time, in which case each window may display a different application or file. The window may be a browser window (e.g., web browser, a terminal window, a child window, a message window) (e.g., as shown by illustrative example in ) that may allows the user to move forward and backwards through a sequence of documents or web pages.","The graphical user interface may employ a menu (e.g., an on-screen list of alternatives) that may allow the user to execute commands by selecting from a list of choices (e.g., as shown by illustrative example in ). The options may be selected with a mouse or other pointing device within the graphical user interface. A keyboard may be used. A menu bar may be displayed horizontally across the top of the screen and\/or along the tops of some or all windows. A pull-down menu may be associated with a menu. When a user clicks on a menu option the pull-down menu may appear. A context menu may be used and may be invisible until the user performs a specific mouse action, (e.g., a press of the right mouse button). When the software-specific mouse action occurs the menu will appear under the cursor.","The graphical user interface may use an icon (e.g., a graphical image, a small picture, an object that represents a file, program, web page, or command). The graphical user interface may use a widget (e.g., a component of a graphical user interface with which a user interacts) as an interface element. The widget may be a window (e.g., a paper-like rectangle that represents a \u201cwindow\u201d into a document, form, or design area), a pointer (e.g., a spot where the mouse \u201ccursor\u201d is currently referencing), a text-box (e.g., a box in which to enter text or numbers), a button (e.g., an equivalent to a push-button as found on mechanical or electronic instruments), a hyper-link (e.g., a text with some kind of indicator that indicates that clicking it will take one to another screen or page), a drop-down list (e.g., a list of items from which to select), a check-box (e.g., as shown by illustrative example in ) (e.g., a box which indicates an \u201con\u201d or \u201coff\u201d state via a check-mark or an \u201cx\u201d), a radio button (e.g., a button, similar to a check-box, except that only one item in a group can be selected and selecting a new item from the group's buttons also deselects the previously selected button) (e.g., as shown by illustrative example in ), a data grid (e.g., a grid view, a spreadsheet-like grid that allows numbers or text to be entered in rows and columns).","The graphical user interface may use a tab (e.g., a visual marker in a computer application, a box which usually contains a text label and\/or graphical icon associated with a view pane). When activated a view pane, a window and\/or a displays of widget associated with that tab may allow the user to switch quickly between different widgets and\/or browser pages. The tabs may be placed in a group anywhere on the graphical user interface.","The radio buttons may be arranged in a group and displayed on screen as, for example, as a list of circular holes that can contain white space (for unselected) or a dot (for selected) (e.g., as shown by illustrative example in ). Adjacent to each radio button may be a caption that may describe a choice that the radio button represents. When the user selects a radio button, any previously selected radio button in the same group may be becomes deselected. Selecting a radio button may be done by clicking the mouse on the button, or the caption, or by using a keyboard shortcut. Initially, none of the radio buttons in a group may be selected.",{"@attributes":{"id":"p-0090","num":"0089"},"figref":["FIG. 4","FIG. 4"],"b":["406","408","410","460","462","464","466","468","470"]},"The harvesting module  may manage (e.g., harvest) data, search queries, results associated to the queries. The scoring module  may include a counter that increments a count based on a number of files that move in network traffic associated with each of the client devices. The desktop search indexing module  may enable the user to search for data communicated to external networks and\/or devices through the network. The database  may process (e.g., hold, store, etc.) the data (e.g., search queries, results, scores, etc.) obtained from the network. The querying module  may enable the user to search for data using queries.","The indexes  may be organized by an analysis of the content and subject matter of a document. The indexing analysis may identify the concepts represented in the document and\/or the allocation of descriptors to assist with retrieval of documents according to concepts included or related to the documents. The graphical user interface  may enable communication between a user and a computer by visual images, such as buttons, pictures, or icons and\/or command lists. The graphical user interface  may be controlled using a mouse. The field module  may enable the user to search for specific data through the web\/desktop\/indexing, etc.","In an example embodiment,  may illustrate the graphical user interface  and the field module  to search the database . The harvesting module  may communicate with the database . The scoring module  may communicate with the database . The desktop search indexing module  may communicate with the database , and the indexes . The querying module  may communicate with the indexes , and the field module . The graphical user interface  may communicate with the harvesting module .",{"@attributes":{"id":"p-0094","num":"0093"},"figref":["FIG. 5","FIG. 1","FIG. 5"],"b":["102","500","502","506","508","514","516","572","574","576","578","580"]},"The operating system  may be a software component of a computer system that may be responsible for the management and\/or coordination of activities and the sharing of the resources of the computer. The operating system  may offer a number of services to application programs and the users (e.g., the user device A-N). The search cache  may search the contents of the cache memory at several levels of operation, including cache memory and a disk cache. The crawler  may be a program and\/or automated script which may browse the World Wide Web in a methodical and\/or automated manner. The database search coordinator  may coordinate to search the set of network characteristics that may be stored in network characteristic database module  and\/or the network characteristic database index module . The plugin module  may allow detecting the various plugin components by the network visibility module  that may be plugged in the network A-N.","In an example embodiment, the desktop search module  may communicate with the operating system , the search cache , the network characteristic database module , and the network characteristic database index module  to make the required search. The desktop search module  may include the database search coordinator  which may communicate with the plugin module , the index module  and the graphical user interface module . The plugin module  may communicate with the index module .",{"@attributes":{"id":"p-0097","num":"0096"},"figref":["FIGS. 6-12","FIG. 6","FIG. 6"],"b":["602","604","606","608","610","612","614"]},"In an example embodiment, an advanced search may be performed using various advanced tools and\/or methods (e.g., a questionnaire). The option  may illustrate various saved searches and may provide delete, update, and search options to perform on a selected search. The option  may illustrate a customized search based on the visual inputs of the advanced search . The option  may allow a user to enter search terms and instructions directly rather than through visual options such as pull down menus, radio buttons, or other options. The option  may illustrate various search options, such as all of a group of words, an exact phrase, at least one of the words, or none of the words. The option  may allow a user to select time frames of a search, such as within a selected time period, using a particular interface, involving a particular user and\/or IP address, or involving a particular domain or IP. The option  may allow a user to customize a presentation of the output of the search of the extracted artifacts. The output options may include a number of artifacts illustrated per page, a limit to a particular file type. The option  may allow a user to search for emails involving particular people, email addresses, or including attachments, particular attachments, or with particular subject lines.",{"@attributes":{"id":"p-0099","num":"0098"},"figref":["FIG. 7","FIG. 7","FIG. 7"]},{"@attributes":{"id":"p-0100","num":"0099"},"figref":["FIG. 8","FIG. 8"],"b":["802","804","806","808"]},"The email search results  may be emails obtained from an indexed database of extracted artifacts. The email search results  may be obtained in accordance with search parameters entered through a graphic user interface, and the email search results  may be categorized by date, sender, receiver, attachments, or any other category. The document search results  may include documents identified in accordance with a search, and may include documents such as text files, word processing files. In another embodiment, any type of program file, raw data, executable file, encrypted data, or other data associated with an extracted artifact may be displayed when relevant to a search result.","The web search results  may include web pages that were accessed using a network monitored to obtain and record network traffic. The web search results may include the content data of the web pages that were accessed as of the time and date of access, including videos, advertisements, data transfers, audio, date stamps, and other information that may change over time. The display  may illustrate the search results by name, category, an index identifier, a rendered image, a summary, or any parameter used to generate and\/or sort the search results.",{"@attributes":{"id":"p-0103","num":"0102"},"figref":["FIG. 9","FIG. 9"],"b":["902","904","906","908","910","902","904","906","908","910"]},{"@attributes":{"id":"p-0104","num":"0103"},"figref":["FIG. 10","FIG. 10"],"b":["1000","1000","1000"]},{"@attributes":{"id":"p-0105","num":"0104"},"figref":["FIG. 11","FIG. 11"]},{"@attributes":{"id":"p-0106","num":"0105"},"figref":["FIG. 12","FIG. 12"],"b":["1202","1204","1206","1208","1210","1212","1214","1216"]},"The search by the network administrator  may be performed to identify word processor documents that were communicated across a network, monitored, and acquired within a selected time frame. The time range  may provide the option to the user (e.g., network administrator) to select a particular time range (e.g., one month prior to the search, two weeks prior to the search until the present, etc.) to view and\/or search network traffic that occurred in the past.","The emails sent by IP address X  may list the total number of emails sent by the computer associated with the IP address X in a particular network during the given time range. The word processor documents sent  may list the total number of documents sent by the computer associated with an IP address in the given time range. The pull down menu of sent IP addresses  may provide a list of destination IP addresses of emails and other artifacts that were communicated over the network by the identified IP address. The pull down menu of word processor documents sent  may list the names of word processor documents that communicated over the network.","The word processor documents received  may list a part of the word processor documents received by the machines connected to the network. The pull down menu of word processor documents received  may list a substantial portion of the word processor documents received by software or hardware that was connected for some time period to the network.",{"@attributes":{"id":"p-0110","num":"0109"},"figref":["FIG. 13","FIG. 13"],"b":["1302","1304","1306"]},"The target application  may be an application program that may be used for searching. The operating system or other applications  may be any of the related operating system or other applications required to execute and\/or operate the data\/files sent by the switch . The switch  may enable the communication between the different virtual machines by analyzing the profile (e.g., of the client device). In an embodiment, the switch  may be a hardware switch or a virtual software switch.","In an example embodiment, the switch  may include an AFS application (e.g., a file system), a hook application, an analysis application and various profiles. The switch  may communicate with the target application  and\/or the operating system or other applications . The switch  may be used to transfer data between different ports of the switch , which may be used to limit and\/or distribute data between applications and\/or hardware devices connected to the network.",{"@attributes":{"id":"p-0113","num":"0112"},"figref":["FIG. 14","FIG. 14"],"b":["1400","1402","1404","1406","1408","1410","1412","1414","1416","1418","1420","1422","1424","1426"]},"The diagrammatic system view  may indicate a personal computer and\/or the data processing system in which one or more operations disclosed herein are performed. The processor  may be a microprocessor, a state machine, an application specific integrated circuit, a field programmable gate array, etc. (e.g., Intel\u00ae Pentium\u00ae processor). The main memory  may be a dynamic random access memory and\/or a primary memory of a computer system.","The static memory  may be a hard drive, a flash drive, and\/or other memory information associated with the data processing system. The bus  may be an interconnection between various circuits and\/or structures of the data processing system. The video display  may provide graphical representation of information on the data processing system. The alpha-numeric input device  may be a keypad, a keyboard and\/or any other input device of text (e.g., a special device to aid the physically handicapped).","The cursor control device  may be a pointing device such as a mouse. The drive unit  may be the hard drive, a storage system, and\/or other longer term storage subsystem. The signal generation device  may be a bios and\/or a functional operating system of the data processing system. The network interface device  may be a device that performs interface functions such as code conversion, protocol conversion and\/or buffering required for communication to and from the network . The machine readable medium  may provide instructions on which any of the methods disclosed herein may be performed. The instructions  may provide source code and\/or data code to the processor  to enable any one or more operations disclosed herein.",{"@attributes":{"id":"p-0117","num":"0116"},"figref":"FIG. 15","b":["1502","1504","1506","1508","1510"]},"In an example embodiment, the user interface may illustrate the results of the search. A save option may enable a user to save the results of a search. A search option may enable the user to search for more results associated to the query. An image results display may include the results (e.g., images) that are obtained from the search. A file results display may include the result (e.g., may be word processing documents, PDF files, etc.) that are obtained as a result of the search. Examples of search results may include a button save image or a text file discussing plans for an activity.",{"@attributes":{"id":"p-0119","num":"0118"},"figref":"FIG. 16","b":["1600","1602","1600","1604","1608","1600","1612","1610","1608"]},{"@attributes":{"id":"p-0120","num":"0119"},"figref":"FIG. 17","b":["1700","1702","1704","1706","1704","1706","1706","1708","1710","1700","1712","1706"]},{"@attributes":{"id":"p-0121","num":"0120"},"figref":"FIG. 18","b":["1802","1804","1806","1808","1810","1814","1816","1810","1814","1816","1812","1810","1814","1818","1816","1818"]},{"@attributes":{"id":"p-0122","num":"0121"},"figref":"FIG. 19","b":["1900","1902","1904","1906","1908","1910","1912","1914","1908","1912","1910","1914","1916","1914","1912","1916","1902"]},{"@attributes":{"id":"p-0123","num":"0122"},"figref":["FIG. 20A-C","FIG. 20A","FIG. 20B"],"b":["2002","2004","2006","2008","2010","2012","2014","2016"]},"In operation , responsive to the event, the database of the captured network characteristic data is indexed using a processor and a memory of a desktop computer communicatively coupled to a network characteristic database and the network characteristic database index. In operation , a query response time is enhanced with an indexed capture data. In operation , a visual user option is provided through a graphical user interface. In operation , a customizable query box is presented through the graphical user interface. In operation , a selection is received based on one or more of the visual user option and the customizable query box. In operation , a search parameter is generated based on the selection. In operation , the indexed capture data is searched to generate a capture query result. In operation , an artifact image of the extracted artifact is reconstructed using a virtual client application. The process flow of  and  continues through .","In operation , a snapshot of the artifact image is acquired. In operation , a thumbnail view of the snapshot is formed. In operation , the capture query result is graphically presented as one or more of an artifact list and an artifact image. In operation , the thumbnail view is displayed through a web browser when the capture query result is received.","In an example embodiment, a dynamic database that indexes network traffic characteristics is queried. A database of an index of network traffic characteristics may be stored in a network visibility module that may be an appliance and\/or a software application. The index content may include source and destination of addresses, source and destination of ports, as well as files and artifacts extracted from the network traffic.","A particular user may be allowed to query the database for a set of specific content parameters by using a graphical user interface (e.g., example user interface view of ). It may perform this function with the field of search tools (e.g., the field module  of ). This field module  may be a commercial desktop search module  such as the Google desktop software (e.g., example user interface view of ), Microsoft's Windows desktop software and\/or any other desktop search software (e.g., example user interface view of ). The search tools and the index database may be local to the network visibility module.","A graphic user interface may be generated in a Hyper Text Markup Language (HTML) webpage (e.g., example user interface view of ) for the user to access the resources of the index and perform a query of the index. This webpage may provide several options for the user to perform the index search in a user-centric fashion by utilizing user friendly graphical user interface elements such as check boxes, browser windows, message windows, dropdown menus, radio buttons, icons, info bars etc. (e.g., illustrative examples as found in ). The user may build the search criteria by interacting with the graphical user interface elements and inputting query text where applicable. The graphics may be presented to the users in a way such that the user can also view the search criteria and store it so as to include the ability to later not use the graphical interface to build the same search criteria. For example, as the user selects and\/or inputs information into certain graphical interface elements, the query may appear in its raw form in a particular graphical interface element.","The database of the index (e.g., network characteristic database index module  of ) and\/or a database index generated by the desktop search module  (e.g., the index module , the artifact index module  and the file index module  of ) may be searched for the relevant content of the user's search. The results of this search may then be presented to the user in an intuitive format via the HTML web page (e.g., ).","For example, John, a human resources administrator at Solera Networks may suspect that a current employee has emailed a trade secret to a competitor in a Microsoft Word document in the past two days. In an embodiment, John may query a network database of an index of network traffic for a network partially controlled by Solera Networks. The index may contain a historic database of the source and destination of email addresses transmitted on the Solera local area network (LAN). John may call up the interface HTML webpage of the embodiment and then enter a set of query parameters including the internet protocol (IP) address of the current employee and a query seeking one or more destination email addresses and any artifact attachments to the emails within the prior two days.","The desktop search module of the embodiment located on the apparatus may then generate a list of all applicable indexed data and present the data to John in a user-friendly manner. For instance, the embodiment may order the destination address chronologically with an icon indicating an appurtenant artifact. The icon may also identify the artifact as a particular application such as Microsoft Word. John may scan this list and\/or open and review artifact files until the pertinent Microsoft Word document containing the trade secret is located. John may then access and review the pertinent Microsoft Word document as well as upload it onto his user computer.","Network data may be shared between a set of users (e.g., the network sharing module  of ). For example, a particular user may share the results of a network data search with a set of other users without those users having also to perform a similar search. The network sharing may employ a server based network model (e.g., centralized resources where a number of servers provide the core value to a service or application.) and\/or peer-to-peer based network model (e.g., a network characterized by a use of a diverse connectivity between a set of participants in a network and a cumulative bandwidth of network participants) to share data.","Although the present embodiments have been described with reference to specific example embodiments, it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the various embodiments. For example, the various devices, modules, analyzers, generators, etc. described herein may be enabled and operated using hardware circuitry (e.g., CMOS based logic circuitry), firmware, software and\/or any combination of hardware, firmware, and\/or software (e.g., embodied in a machine readable medium). For example, the various electrical structure and methods may be embodied using transistors, logic gates, and electrical circuits (e.g., application specific integrated (ASIC) circuitry and\/or in Digital Signal Processor (DSP) circuitry).","Particularly, the desktop search module , the network visibility module , the graphical user interface module , the index module , the field module , the network characteristic database module , the network characteristic database index module , the desktop search module , the network characteristic database module , the network characteristic database index module , the network sharing module , the graphical user interface module , the index module , the field module , and the artifact index module  of  may be enabled using software and\/or using transistors, logic gates, and electrical circuits (e.g., application specific integrated ASIC circuitry).","In addition, the file index module , the criteria module , the filter module , the browser generator module , the deskbar shortcut module , the quick find module , the the sidebar module , the graphical user interface module , the index module , the field module , the harvesting module , the scoring module , the desktop search indexing module , the querying module , the desktop search module , the network visibility module , the graphical user interface module , the index module , the network characteristic database module , and the network characteristic database index module , and the plugin module  of  may be enabled using software and\/or using transistors, logic gates, and electrical circuits (e.g., application specific integrated ASIC circuitry). Examples circuits may include a network visibility circuit, a desktop search circuit, a desktop search circuit, a network sharing circuit, a network characteristic database circuit, a network characteristic database index circuit, a graphical user interface circuit, a desk bar shortcut circuit, a quick find circuit, a criteria circuit, a field circuit, a filter circuit, a index circuit, a artifact index circuit, a file index circuit, a browser generator circuit, a sidebar circuit, a plugin circuit, a harvesting circuit, a scoring circuit, a desktop search indexing circuit, and a querying circuit and other circuits.","In addition, it will be appreciated that the various operations, processes, and methods disclosed herein may be embodied in a machine-readable medium and\/or a machine accessible medium compatible with a data processing system (e.g., a computer system), and may be performed in any order (e.g., including using means for achieving the various operations). Accordingly, the specification and drawings are to be regarded in an illustrative rather than a restrictive sense."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Example embodiments are illustrated by way of example and not limitation in the Figures of the accompanying drawings, in which like references indicate similar elements and in which:",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 5","FIG. 1"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIGS. 6-12"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIGS. 20A-C"}]},"DETDESC":[{},{}]}
