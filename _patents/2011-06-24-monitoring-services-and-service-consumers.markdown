---
title: Monitoring services and service consumers
abstract: A monitoring service may receive, from a plurality of service providers, log information pertaining to access calls made by service consumers to services or APIs provided by the service providers. The monitoring service aggregates and analyzes the log information for use in monitoring performance of the services, identifying anomalies, and the like. In some instances, the monitoring service may identify multiple services that are behaviorally interrelated based on at least one performance metric, and may group these services together into service groups for monitoring purposes. A service relationship model may be generated for each of the service groups that predicts how each service will behave relative to the other services in the service group. The monitoring service may monitor performance and use of the services based, at least in part, on the one or more service groups and the service relationship model for each group.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08625757&OS=08625757&RS=08625757
owner: Amazon Technologies, Inc.
number: 08625757
owner_city: Reno
owner_country: US
publication_date: 20110624
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION","CONCLUSION"],"p":["Some types of businesses or enterprises may use a number of applications that interact with one another to carry out functions connected with enterprise activities. Thus, some of these applications provide services that are utilized by other applications employed by the enterprise. These internal services are often provided to the other applications as part of an enterprise's business operations. Further, because internal services are typically provided within an enterprise's own network, intranet, or the like, interactions are often assumed to be secure. Consequently, the provision and consumption of internal services may not always be well monitored, which can affect the enterprise's efficiency and security.","Additionally, some internal services may be used by many different service consumers for many different purposes, and internal services tend to change or evolve at a faster rate than public services. Thus, internal service providers may not be able to easily monitor how their services are performing, how their services are being used, who is using their services, or how ongoing changes in their services affect users and overall security concerns. Further, on the other side, the applications of service consumers may not always receive their requested services in a timely manner due to latency or interrupts at the service providers. However, the causes of such latencies or interrupts are not always easy to identify.","Monitoring Services and Service Consumers","This disclosure includes techniques and arrangements for monitoring services and service consumers. In some implementations, a monitoring service may receive copies of log data pertaining to a plurality of services. The log data may include details of service requests or calls made to the services by the service consumers, such as calls made to one or more application programming interfaces (APIs) provided by each service. For example, the monitoring service herein can receive log information from each service and maintain log files pertaining to service consumer usage of each service. The monitoring service may perform aggregation and analysis on the logs to determine various types of information pertaining to performance of the services and usage of the services by service consumers. For example, information that may be determined regarding the performance of the services may include latency times in responding to calls from service consumers, average latency times for a service, which service consumers may have contributed to an increase in latency or call volume, peak call volumes, size of outgoing data, average number of calls over a period of time, number of calls at different times of day or during different days of the week, and the like. Information that may be determined regarding the service consumers may include the identity of each service consumer that called each service, how many times each service consumer called each service, latencies for each service consumer in receiving responses to each call, changes in latency experienced by various service consumers, changes in timeouts experienced by various service consumers, aggregate change in performance over a period of time, and the like. The aggregated log information may be rendered for display and\/or monitored for detecting abnormal call volumes or latencies, access anomalies, security breaches, excessive usage of a service by a service consumer, and the like. For example, the monitoring service may issue an alert to a service provider when usage anomalies are detected and\/or take direct action to address a detected anomaly.","In some implementations, a user interface may display the aggregated information extracted from the log data. For example, the aggregated log information may be rendered in graphical form for viewing by an administrator at the monitoring service or at a service provider. For instance, the user interface may display various types of information such as which service consumers called a particular service most often, which service consumers consumed the most service time over a particular time window, which service consumers may have contributed to an increase in latency times for a particular service, and the like. Further, the aggregated log information may be automatically analyzed using analysis techniques to detect anomalies or other problems. For example, for each service, call volume and several different types of latencies may be monitored, e.g., the amount of time to respond to each request, the average amount of time to respond to a plurality of requests, the amount of time required to respond to a certain percentage of the requests, and so forth. Furthermore, in some implementations, the aggregated log information for each service may be provided directly to the corresponding service provider of that service to enable the service provider to view, analyze and\/or address any issues presented by the aggregated log information for that service.","Some implementations may establish a one or more service relationships for detecting abnormalities, excessive service consumer usage, or the like. For example, some or all of the service applications for the enterprise may be observed over a first period of time to detect which services are interrelated to one another based on utilization or behavior patterns of the services with respect to one or more performance metrics. For example, based on global observation of the relative performances of all services, the monitoring service can identify one or more subsets of services that are interdependent or behaviorally related to one another. Based on this observed behavior, the monitoring service creates one or more service groups from the plurality of services and each service group may be monitored for anomalies. Thus, each service group may be made up of a subset of the services that have been determined to have performance that is interrelated or codependent, at least in part, on performance of the other services in that group. As one example, when one of the services in a particular service group experiences an increase in traffic or an increase in latency, the other services in the group might also be expected to experience a similar increase in traffic or latency.","In addition, one or more service relationship models may be established for each of the subsets or groups of interrelated services based on the observed performance patterns. For example, the service relationship model may be a statistical model that predicts how each member of a particular service group will behave in response to performance of other members of the particular service group.","Following identification of the service groups and generation of the corresponding service relationship models, the services in each group may be monitored over subsequent time periods to determine whether the services in each group are performing in an expected manner, such as may be indicated by the service relationship models. As one example, spikes in service calls for some types of services may occur on a frequent basis. However, according to implementations herein, such spikes do not necessarily indicate an anomaly or a problem for concern when other services in the same group are also observed to spike in a similar manner. Consequently, some implementations enable avoidance of spurious alarms by using the service relationship models to determine whether a spike in call volume, latency, or other metric for a service is an anomaly that needs to be addressed, or merely part of normal enterprise operations, such as may be caused by a spike in real-world traffic.","Additionally, in some implementations, the user interface may provide an administrator at the monitoring service or at a service provider with the ability to address anomalies, detected security breaches, or excessive use of a service by a service consumer. For example, the user interface may enable implementation of a remedial action contingency or control to slow down overall traffic at a particular service or block one or more particular service consumers causing the anomaly. In some implementations, overall traffic may be slowed down using various techniques such as by implementing a captcha or asking a security question, thereby requiring human interaction from the service consumers for each call to a service. Additionally, in some implementations, the user interface may provide a single control that can be activated by a service provider or by the monitoring service to block calls received from a particular service consumer, thereby blocking the particular service consumer from accessing a particular service or multiple services. For example, the blocking of one or more selected service consumers may occur at the service level, such as when an anomaly or excessive usage is detected. In some implementations, a particular service consumer may be blocked from accessing a particular API when the rate at which the service consumer calls the API exceeds a predetermined threshold or quota established for the service consumer.","Example Architecture",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1","b":["100","102","102","104","1","104","2","104","106","1","106","2","106","104","108","1","108","2","108","110","1","110","2","110","112","1","112","2","112","106","106","110","104","110","106","108","110","106","112","110","104"]},"Additionally, in some instances, one or more of the service consumers  may provide services to end users , such as internal users (e.g., employees of an enterprise) or external users such as customers, potential customers and other members of the public. For example, the users  may access one of the service consumers , such as service consumer -, using any of a variety of devices, such as personal computers or workstations -, e-book readers and tablet devices -, laptop computers -, cellular telephones and smart phones -, or any other suitable devices. The service consumer - may access one or more service providers  when providing a service itself to the users . Thus, in some implementations, the service providers  may provide internal services to the service consumers , and one or more service consumers  may provide an external service to one or more users .","The monitoring service  may include a monitoring module  to perform the functions and features described herein for monitoring services and service consumers. For example, the monitoring module  may receive log information  from the service providers  for enabling monitoring of the services  and the service consumers  by the monitoring service . Thus, the monitoring service  may receive the log information  from each service  monitored by the monitoring service , and the received log information  may be stored in logs . For example, the logs  may be stored at the monitoring service  or at a remote location, such as on a storage array, network attached storage, storage area network, storage service, or the like. The information in the logs  may be subsequently aggregated and analyzed, as described additionally below, to generate aggregated log data  that is used during monitoring of the services and service consumers.","The monitoring module  may further include a user interface  that may be used by an administrator at the monitoring service  for performing functions in association with the monitoring. An instance of the user interface  may also be made available to one or more of the service providers  for enabling the service providers to view the aggregated log data for monitoring and managing their own services . The user interface  may provide the aggregated log data  for review by an authorized party, such as the administrator at the monitoring service, an administrator at one or more associated service providers , or other authorized third parties. Additional details and functions of the user interface  are discussed below.","The monitoring module  may automatically review and monitor the aggregated log data , such as by utilizing one or more service relationship models , which may be applied to identify any anomalies or use conditions that may warrant providing an alert to the administrator at the monitoring service or at a particular service provider. Furthermore, as described additionally below, the monitoring module  may also generate and continually refine the one or more service relationship models  for monitoring the actions and interactions of each service  and each service consumer . In some implementations, the one or more service relationship models  may be based on groupings of services that have performance metrics that are interrelated to one another, such as a plurality of APIs that show some performance metric interdependence or relationship.","The service providers  may communicate with the monitoring service  through one or more communication links ; the service providers  may communicate with the service consumers  through one or more communication links ; and the service consumers  may communicate with the users  through one or more communication links . Further, while not shown for clarity, the monitoring service , service providers , service consumers  and users  may all be able to communicate with one another through the various communication links. Each of these communication links , ,  may be the same communication link or different communication links. For example, the communications links - may be any of a direct connection, a local area network (LAN), a wide area network (WAN), a virtual private network (VPN), or any combination thereof, and may include both wired and wireless communication technologies using any suitable protocols and communication techniques. In some implementations, the monitoring service , service providers  and service consumers  may be located at a data center, server farm or other single physical location, while in other implementations, the monitoring service , service providers , service consumers  and users  may be located in diverse and disparate locations that are physically remote from one another, and the communication links - may include the Internet or other long range communication network.","Example Roles and Relationships",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2","b":["200","202","204","206","204","202","202","208","210","210","212","208","208","202","214","216","216","218","214","202"]},"Furthermore, the second entity  may include a consumer of service C  as a service consumer that accesses services provided by a fourth entity , such as to enable the service A  to provide the service A to the consumer of service A . The fourth entity  may include a service C  that provides information or other services to the consumer of service C  to enable functionality of the service A . Similarly, the third entity  includes a consumer of service C  as a service consumer that obtains information or other services from the service C  of the fourth entity  for use by the service B  when providing the service B to the consumer of service B .","From this example, it will be apparent that certain entities or applications may adopt different roles as service consumer (client) and\/or service provider during performance of their functions. Further, each of the services ,  and  may communicate log information  to the monitoring service . For example, the services ,  and  may provide log information  to the monitoring service  on a periodic basis, such as in a batch delivery, or may provide the log information  to the monitoring service  as the log information  is accumulated at each service ,  and . Further, the example of  is just one nonlimiting example of the numerous types of service consumer and service interactions that may be monitored according to the implementations disclosed herein.","Example Service Groups and Service Relationship Models",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 3","b":["300","300","118","118","302","124","118","304","128","124","304","124","118","306","128","124"]},"Each of the services -, -, . . . , -K may include one or more respective APIs -, -, . . . , -H that may provide the associated services to service consumers when called by a service consumer application . Furthermore, each service  provides log information  that is aggregated by the data aggregation module  to generate aggregated log data . For example, the data aggregation module may aggregate received log data on at predetermined intervals, such as every minute, every five minutes, every ten minutes, etc. Numerous different types of aggregated log data  may be generated from the log information , such as call volume of each service as a function of time, latency of each service as a function of time, average latencies, number of cache hits, how many times each client called each service, and a comparison of the performance of one service with the performance of another service, to name a few nonlimiting examples. In some implementations, the data aggregation module  may be operated across a distributed computing system such as by using a map reduce process for aggregating the log data, or the like. Furthermore, the data aggregation module may aggregate the log data into the discrete intervals of time to determine the various metrics of the services and service consumers mentioned above.","Initially, in order to group the plurality of services  into subsets of interrelated services and\/or generate the service relationship models , the monitoring module  may receive log information  from the plurality of the services  over a first period of time. The data aggregation module  may aggregate this log information to generate aggregated log data . In the example of , a plurality of service groups and service relationship models are generated based on call volume as a function of time, although service groups and\/or service relationship models may be generated based on numerous other aspects of service metrics, such as response times, average latency, and so forth.","For example, each service  may receive calls from service consumers  to the one or APIs  provided by each service . This is generally referred to as call volume or traffic. Each service  generates log information  about the calls from each service consumer , and provides this log information  to the monitoring module . In the illustrated example, the data aggregation module  aggregates the call volume data from a plurality of services, as represented by graph  (although other suitable data structures may be used, depending at least in part on the metric being examined). In this example, each curve - in the graph  maps changes in the call volume of a different service  over time. Furthermore, while the curves of six different services are shown in the example of  for discussion purposes, in some implementations there may be several orders of magnitude greater number of services.","The modeling module  may apply statistical analysis to identify those services or particular APIs that demonstrate an interrelationship with respect to call volume. Services or particular APIs that are determined to be interrelated may be grouped into one or more service groups, such as a first service group -, a second service group -, a third service group -, . . . , and so forth. For example if the call volume of a first service goes up when the call volume of a second service goes up, and likewise, goes down, when the call volume of the second service goes down, as demonstrated by curves  and , then those two services may be grouped together in a service group such as first service group -. As another example, if the call volume of a first service goes down when the call volume of a second service goes up, and vice versa, those services might also be considered to be interrelated, as demonstrated for example, by curves  and  in the graph . As yet another example, as indicated by the curves  and , when a service receives call volumes for a longer period of time or at more frequent intervals, as indicated by curve , when another service goes up in call volume, as indicated by curve , then those services might also be considered interrelated. The modeling module may take these and other relationships into consideration when grouping the services into service groups , such as service groups -, - and - in this example. Each of the service groups  may include identification of a plurality of services or APIs that have been identified by the modeling module  as being related to one another for purposes of monitoring call volume. Service groups may be similarly generated for other service metrics such as various types of latency or the like.","The modeling module  may generate a service relationship model  based on each of the service groups  that predicts how each API in each service group  will perform relative to the other APIs in the service group. For example, various statistical modeling techniques may be used to generate the service relationship models , examples of which may include regression models, Markov chain models, hidden Markov models, Bayesian models, or the like. The service relationship model  for each service group establishes statistical probabilities regarding predicted relative behaviors of members of the group with respect to one another for the relative performance metric.","As a simple example, suppose that a first service group  includes ten services, and observed behavior has shown that as the latency of one of the services increases, the latency of the other nine services increases generally proportionally, and as the latency of one of the services decreases, the latency of the other nine services also decreases generally proportionally. Accordingly, a service relationship model  may be generated for this service group  that predicts the proportional amount of change in latency expected for each service in the group in response to changes in latency of one or more of the other services in the group. The service relationship model may further include a predicted deviation from the observed changes for each member of the group  to account for variations in day-to-day operations of the services. Various other statistical modeling techniques may also be employed for generating the service relationship model. Further, while the foregoing provides a simple description of an example service relationship model, the service relationship models  may become substantially more complex when attempting to account for more unusual behaviors, such as those demonstrated by the curves , , , and , which may take into account inverse relationships, relate time of performance to quantity of performance, and so forth, or when a plurality of performance metrics are used to relate the services in a group to one another. Nevertheless, once generated, the service relationship model  for each service group  may be applied to subsequent aggregated log data  to predict whether a member of the service group  is out of range with respect to other members of the service group . When a determination is made that a member of a service group  is out of range, an alert may be provided to an administrator at the monitoring service or at the service provider itself.","Furthermore, the modeling module  may continually refine the service groups  and\/or the service relationship models  as new log information  is received from the services . For example, if a first service - changes its algorithm so that it no longer shows a performance correspondence to other services in a particular service group related to a particular metric, then the modeling module  will subsequently remove the first service - from the particular service group, as there will no longer be sufficient statistical association between the performance of the first service - and the other services in the service group for the particular performance metric. Services may subsequently be added to service groups on inverse similar reasoning.","In the illustrated example of , the modeling module  has generated a first service relationship model - for the first service group -, which includes at least the first API -, the second API -, and the third API -. Similarly, a second service relationship model - for a second service group - includes at least a fourth API -, a fifth API -, and a sixth API -. Further a third service relationship model - for a third service group - includes at least the first API -, the fourth API -, and a seventh API -. Accordingly, the APIs  may be grouped into more than one service group , with a limitation being that they show a behavioral interrelationship with the other APIs included in that particular service group  for a particular service metric.","Following generation of the service relationship models , the analysis module  of the monitoring module  may apply the service relationship models  when performing analysis of subsequently received log information . For example, as new log information is received and aggregated by the data aggregation module , the log information for the APIs  of each service group  may be aggregated together to determine compliance with the service relationship model  for that service group . When a service relationship model  for a particular service group  indicates that a member of the service group  is out of range as compared to the other members of the service group , an alert may be issued.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 4","b":["400","324","400","324","402","404","406","408","402","410","404","406","408","306","128","402","404","406","408","412","414","416","306","410","402","404","406","408","410"]},{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 5","FIG. 4"],"b":["500","402","408","502","500","408","402","404","406","306","408","128","324","306","102","408","306","102","104","408","126","408"]},"For example, upon determining that an alert should be issued, the analysis module  may next examine the service consumers  that are accessing the fourth API  during the interval in question. For example, the aggregated log data  may provide information with the granularity of each call to each API by each service consumer, which enables the data aggregation module  to identify how many calls each service consumer makes to each API. Accordingly, the data aggregation module is able to isolate and identify the service consumers currently and recently calling the fourth API . The analysis module  may access this information to determine whether one or several of those service consumers are causing the spike at  and may include this information with the alert provided to the administrator. If a particular service consumer is causing the increased activity, the administrator may block the particular service consumer using a control in the user interface , as described additionally below. As another example, if a particular service consumer cannot be identified as the cause, the administrator may be able to take other remedial action to slow traffic to the API, if necessary. For example, if the service type is conducive, the administrator may use the user interface  to implement a captcha or security question that causes all service consumers to include human interaction when making requests to the fourth API . This type of remedial action may be effective during a denial of service attack, thereby slowing traffic to the fourth API , although this may not be practical for all types of services. However, numerous other options will be apparent to those of skill in the art in view of the disclosure herein. In the example of , following the remedial action, the traffic to the fourth API recedes to an expected level as indicated at .","Example Monitoring Framework",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 6","b":["600","102","602","1","602","2","604","1","604","6","604","606","602","602","608","610","606","604","602","604","606","602","606","604"]},"In some implementations, each service -, - may include a respective agent -, -, such as a runtime client, that records the log information  and provides the log information  to the monitoring service . For example, the agent  for a service  may keep track of each access call  received by the service  from each service consumer , determine the response time to each access call , the API that was the subject of each access call , the information provided to a service consumer for each access call , and the like. In some instances, when each service provider  registers a service  with the monitoring service , or otherwise becomes a member of or subject to the monitoring service , the agent  may be provided to each service provider . For example, each service provider  may download the agent  from the monitoring service , or the like. In the illustrated example, the agent - provides log information - from the first service -, while the agent - provides log information - from the second service -.","Accordingly, each agent  on each service  may act independently to store log information  and periodically provide the log information  to the monitoring service  for storage in the logs . For example, the logs  may include separately stored logs for each separate service, such as logs from the first service -, logs from the second service -, and so forth. Furthermore, each agent  may provide an instance of the user interface  to an administrator at the service provider , which may provide the service provider  with the ability to view aggregated log data  pertaining to at least the corresponding the service of the service provider. For example, as the data aggregation module  aggregates the logs  to generate aggregated log data  the aggregated log data  may be provided to each service provider . In the illustrated example, aggregated log data - related to first service - is provided to the first service provider -. Similarly, aggregated log data - related to the second service - is provided to the second service provider -. Thus, administrators at each service provider  are able to view the aggregated log data  relating to their services . Further, in some implementations, administrators at the service providers may also be able to view the aggregated log data  of other services that are not their own.","In some implementations, the user interface  may provide a remedial action control  that may be implemented by an administrator to address abuse of service, security breaches, software glitches and\/or system failures according to some implementations herein. For instance, it may happen that a service consumer  is exceeding an authorized usage quota set for a particular service . For example, when a service consumer  substantially exceeds an authorized usage quota, this can cause latency or service-interrupt problems at the service , denial of service to other service consumers , and the like. Accordingly, implementations herein may provide the remedial action control  with the capability to block access calls  of a particular service consumer  to one or more APIs  and\/or service applications . For example, each instance of the user interface  may include the remedial action control , which may identify a particular API  and a particular service consumer  that may be blocked from accessing the particular API . In some instances, the user interface  may display each of the APIs and each of the service consumers to enable an administrator to select a particular service consumer to block from accessing one or more selected APIs.","As an example, suppose that service consumer - begins to make a large number of access calls  to the service -. For instance, the service consumer - may be the subject of a security breach that causes the service consumer - to make an abnormally high number of access calls , or the service consumer - may have suffered a software glitch causing an abnormally high number of access calls . The service provider - for the service - may become aware of this situation in any of several manners, such as through monitoring the user interface , or by an alert  issued by the monitoring service  in view of the log information - received by the monitoring service  from the service -. In response, an administrator at the service provider - may activate the remedial action control  to block access of the particular service consumer - to the API - and\/or the service application -. Additionally, because the blocking of a particular service consumer  may take place at a service or API level, when a service provider  provides multiple different services, the service provider may block access of the particular service consumer  to a particular service  or API , while still permitting access of this particular service consumer  to other services  or APIs  provided by the service provider or other service providers.","In other implementations, the remedial action control  may perform a different action than blocking access of one or more service consumers. For example, in some instances, the remedial action control  may instruct the service to pause for a predetermined period of time before responding to each request. Alternatively, the remedial action control  may instruct the service to error-out calls from one or more service consumers. For example, if a particular service consumer is noted to be 100 percent over the expected request rate allowed for that particular service consumer, the remedial action control  may be activated to error-out a certain percentage (e.g., 50 percent) of the calls received from that particular service consumer. As another example, activation of the remedial action control  may cause instructions to be sent to one or more of the registered service consumers requesting that the service consumers throttle their access calls to the service to a specified level or frequency. As yet another example, the remedial action control , when activated, may cause a captcha or security question to be activated in conjunction with a particular service. This option might be implemented when excessive traffic cannot be attributed to any particular service consumers and the service provider desires to slow down overall traffic for a service. Accordingly, by implementing a captcha or security question, it is possible to reduce the amount of traffic to a service because human interaction is required to make access calls to the service. However, this solution may work in only a limited number of service scenarios, as some types of services are not conducive to requiring human interaction, such as where the typical number of calls from each service consumer may number in multiple transactions per second, and the like.","Furthermore, an administrator at the monitoring service  may also be authorized to execute the remedial action control  at the monitoring service  when an alert is received for a particular service. For example, a command to block a particular service consumer may be transmitted from the user interface  at the monitoring service  to the agent - at the first service - for instructing the agent  to execute the blocking of the service consumer -. Accordingly, implementations herein provide the service provider  and\/or the monitoring service  with the ability to block an individual service consumer  at the host level, at the service application level, or at the API level, without blocking access of other service consumers  to the API - or the service application -. Consequently, rather than resulting in a denial of service to all authorized service consumers , an unexpected or abnormally high number of access calls from a particular service consumer  can be curtailed without loss of service to the other service consumers . Further, in some implementations, the remedial action control  can be automated so as to act independently to block an offending service consumer  whenever the service consumer's peak access call rate exceeds the service consumer's established quota or a predetermined threshold, as established for example, by the service relationship models .","Furthermore, in some implementations, the monitoring service  may monitor the behavior of each service consumer  with respect to a particular service  to determine whether there are any anomalies, apparent improper use, unauthorized access calls, and so forth. For example, when the monitoring service  determines that there is an anomaly, the monitoring service  may send an alert to the corresponding service provider . Additionally, in some implementations, rather than the monitoring service  monitoring and reviewing the logs , the logs  and\/or aggregated log data  for a particular service, or for all services, may be provided to an authorized third party to review the logs  and\/or aggregated log data  for anomalies or other areas of concern.","Example User Interface",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 7","FIGS. 1"],"b":["700","102","104","700","126","3","6","700"]},"In the illustrated example, the user interface portion  is configured to display information on the granularity of individual APIs for a particular service A. In this example, the user interface portion  includes a list  of APIs for the service A including a first API , and a second API . For each API provided by the service A, the user interface portion  may display information such as call volume as a function of time , response time as a function of time , number of calls made over time by a first service consumer , and so forth. Similarly, for the second API  similar information may be displayed such as call volume as a function of time , response time as a function of time , number calls made over time by the first service consumer , and so forth. Further, the example information illustrated in  provides just several non-limiting examples of the large variety of aggregated information  that may be provided by the user interface . Numerous other types of information may be displayed, as described above.","Additionally, in some implementations, the user interface  may include other functionality to enable administrators at the monitoring service  and or service providers  to obtain desired information. In some implementations, the user interface  may include one or more a query boxes  that a user may employ to submit a query to obtain desired information. For example, the user interface  may accept information such as the name of an API or service and a first and second timestamp, as inputs may return, for example, the top K service consumers that used the service over the time period between the first time stamp and the second timestamp, which service consumers contributed to an overall service latency change over the time period, which service consumers contributed most to the call volume over the time period, or the like.","Additionally, the monitoring service  may provide history information regarding each service that subscribes to the monitoring, such as date at which the service was first added to the monitoring service, the date that a particular metric was added for a particular service, performance numbers for the particular service over the course of time since the service was added, and the like. Similarly, user interface  may provide views of particular service consumer metrics, such as a list of all services accessed by a particular service consumer, the total number of calls made by a particular service consumer to each service, the overall request rate for a particular service consumer to a single service, several services, or all services, and the like.","Accordingly, the user interface  and the user interface portion  may provide service providers with the ability to obtain a large amount of information regarding how their services are being used, who is using their services, and the like. For example, the user interface  enables the service provider to determine whether the service consumers are using their services correctly and efficiently. In addition, as mentioned above, the user interface  may enable service providers and\/or the monitoring service  to restrict access of particular service consumers who violate access policies, usage quotas, or the like, such as when the service consumers exceed their maximum allowed call rate, or the like. The restriction of access may be executed at a granularity of restricting access of a particular service consumer at the service level and or an individual API level.","Furthermore, the monitoring service  may enable service providers to efficiently manage and monitor the service consumers that are authorized to access their services. For example, a service provider may view a history of who has accessed a particular service. Additionally, the monitoring service  may notify a service provider of abnormalities in service consumer call patterns, determine which service consumers have called which APIs, determine which service consumers no longer require access to particular APIs, allocate costs of operation back to particular service consumers, determine whether a particular service is meeting service level agreements for particular service consumers, and monitor other information that assists the service providers in the management and provision of their services.","Example Processes",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIGS. 8 and 9"},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 8","b":"800"},"At block , the monitoring service  receives log information related to a plurality of services. For example, the agent  at each service provider may collect log information regarding each access by a service consumer to the one or more services provided by the service provider. The agent may forward this log information to the monitoring service  as the log information is accumulated, or as a batch on a periodic basis. The log information may provide numerous details relating to the calls to each service (e.g., each API), such as total calls to a service, latency of each service, which service consumer has called which service, the frequency with which a service is called by each service consumer, and the like.","At block , the aggregation module  may aggregate the log information related to the plurality of services. For example, the aggregation module may cross-reference the log information from each of the plurality of services for determining various performance metrics related to the plurality of services, such as total call volume, response time or latency, average latency, average amount of data returned, and so forth. The aggregation module may also aggregate and cross reference the log information with respect to the service consumers to determine calls made by each service consumer to each service, rate at which the calls were made, time between making a call and receiving a response, and the like.","At block , the modeling module  may group the plurality of services into one or more service groups based on observed interrelationships between various different services. For example, the modeling module  may apply statistical analysis to identify those services (e.g., particular APIs) that demonstrate an interrelationship with one another for one or more performance metrics of interest, such as total call volume, latency, or the like.","At block , the modeling module  may generate a service relationship model  corresponding to each identified service group . For example, the modeling module  may generate a service relationship model for a corresponding service group, which predicts how each service in the service group will perform relative to the other services in the service group for the relative performance metric that interrelates the services in the service group. Various statistical modeling techniques may be used to generate the service relationship models , examples of which may include regression models, Markov chain models, hidden Markov models, Bayesian models, or the like. The service relationship model  for each service group  establishes statistical probabilities regarding predicted relative behaviors of members of the service group with respect to one another for one or more relative performance metrics. Following establishment of one or more service groups  and one or more corresponding relationship models  for the plurality of services, the process  may return to block . The process  may be repeated periodically to update the service groups  and\/or the service relationship models  as existing services change and\/or new services are added.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 9","b":"900"},"At block , the monitoring service  receives log information related to a plurality of services. For example, the agent  at each service provider may collect log information regarding each access by a service consumer to the one or more services provided by the service provider. The agent may forward this log information to the monitoring service  as the log information is accumulated, or as a batch on a periodic basis. The log information may provide numerous details relating to the calls to each service (e.g., each API), such as total calls to a service, latency of each service, which service consumer has called which service, the frequency with which a service is called by each service consumer, and the like.","At block , the aggregation module  may aggregate the log information related to the plurality of services. For example, the aggregation module may cross-reference the log information from each of the plurality of services for determining various performance metrics related to the plurality of services, such as total call volume, response time or latency, average latency, average amount of data returned, and so forth. The aggregation module  may also aggregate and cross reference the log information with respect to the service consumers to determine calls made by each service consumer to each service, rate at which the calls were made, time between making a call and receiving a response, and the like.","At block , the analysis component  may apply one or more service relationship models  to the aggregated log data for each corresponding service group. For example, the aggregated log data may be aggregated according to the service groups  into a suitable data structure such as a graph, matrix or the like. The analysis component  may then examine the behavior of each service that is a member of a particular service group  to determine whether the behavior of each service in the particular service group conforms to the expected behavior, as predicted by the corresponding service relationship model  for that particular service group .","At block , when the analysis component  detects that one or more of the services in a particular service group are not behaving in a manner that corresponds to the service relationship model  for the particular service group, the analysis component  may identify the actions of one or more of the services in the particular service group as an anomaly.","At block , in response to identifying an anomaly in a service group, the analysis component  may provide an alert to an administrator at the monitoring service, at the service provider, or the like. For example, in some implementations, the alert may be provided to the service provider, and an administrator at the service provider may take appropriate remedial action in response, such as blocking access of a particular client, slowing traffic to the service, or the like. However, in other implementations, the alert may be provided to an administrator at the monitoring service and the administrator at the monitoring service may take remedial action, such as blocking access of a particular client, slowing traffic to the service, or the like. Furthermore, in some implementations, the analysis component  may also determine which service consumer is a top contributor to the anomaly noted in the particular service, and provide this information with the alert.","The example processes described herein are only examples of processes provided for discussion purposes. Numerous other variations will be apparent to those of skill in the art in light of the disclosure herein. Further, while the disclosure herein sets forth several examples of suitable frameworks, architectures and environments, implementations herein are not limited to the particular examples shown and discussed.","Example Computing Devices",{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 10","b":["1000","102","102","102","102","102"]},"In the illustrated example, the monitoring service computing device  includes one or more processors , a memory , and one or more communication interfaces . The memory  may include volatile and nonvolatile memory and\/or removable and non-removable media implemented in any type of technology for storage of information, such as computer-readable instructions, data structures, program modules or other data. Such memory includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, RAID storage systems, storage arrays, or any other medium which can be used to store the desired information and which can be accessed by a computing device. Depending on the configuration of the computing device , the memory  may be a type of computer readable storage media and may be a non-transitory storage media.","The memory  may be used to store any number of functional components that are executable by the processors . In many implementations, these functional components comprise instructions or programs that are executable by the processors  and that, when executed, implement operational logic for performing the actions attributed above to the monitoring service . Functional components stored in the memory  may include the monitoring module  as described above, which may be executed on the processors  for implementing the various functions and features of the monitoring service  described herein. In some implementations, the monitoring module  may include the data aggregation module , the modeling module , and the analysis module , as described above. Other components included in the monitoring module  may include the user interface  and the remedial action control , described above. Additional functional components stored in the memory  may include an operating system  for controlling and managing various functions of the monitoring service computing device . The memory  may also store the aggregated blog data , the service relationship models , and the logs . The computing device  may also include many other logical, programmatic and physical components, of which those described above are merely examples that are related to the discussion herein. Furthermore, while multiple modules have been described for performing various functions for convenience of discussion in some implementations, in other implementations, a single module may perform all the functions described herein, or multiple different modules may perform some or all of the functions described herein.","The communication interface(s)  may include one or more interfaces and hardware components for enabling communication with various other devices, such as service provider computing devices, service consumer computing devices, and\/or user devices over communication links -. For example, communication interface(s)  may facilitate communication through one or more of the Internet, cable networks, cellular networks, wireless networks (e.g., Wi-Fi, cellular) and wired networks. Various different approaches to implementations described herein can be implemented in various environments. For example, the communication links - may include any appropriate network, including an intranet, the Internet, a cellular network, a LAN, WAN, VPN or any other such network or combination thereof. Components used for such a system can depend at least in part upon the type of network and\/or environment selected. Protocols and components for communicating via such networks are well known and will not be discussed herein in detail.","Monitoring service computing device  may further be equipped with various input\/output devices . Such devices may include a display, various user interface controls (e.g., buttons, joystick, keyboard, touch screen, etc.), audio speakers, connection ports and so forth.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 11","b":["1100","1100","1102","1104","1106","1102","1104","1002","1004"]},"The memory  may be used to store any number of functional components that are executable on the processors . In many implementations, these functional components comprise instructions or programs that are executable by the processors  and that implement operational logic for performing the actions attributed above to the service providers. In addition, the memory  may store various types of data that are referenced by the executable components.","The memory  may store one or more service applications  and one or more APIs , which may be executed on the processors  to provide one or more services, as discussed above. The memory  may also store the agent , including an instance of the user interface  and the remedial action control , as described above. Memory  may also store an operating system  that may manage and coordinate the various functions of the service provider computing device .","The communication interface(s)  may include one or more interfaces and hardware components for enabling communication with various other devices, such as service provider computing devices, service consumer computing devices, and\/or user devices over communication links -. For example, communication interface(s)  may facilitate communication through one or more of the Internet, cable networks, cellular networks, wireless networks (e.g., Wi-Fi, cellular) and wired networks.","The service provider computing device  may further be equipped with various input\/output devices . Such devices may include a display and various user interface controls (e.g., buttons, joystick, keyboard, touch screen, etc.), audio speakers, connection ports and so forth.","Furthermore, this disclosure provides various example implementations, as described and as illustrated in the drawings. However, this disclosure is not limited to the implementations described and illustrated herein, but can extend to other implementations, as would be known or as would become known to those skilled in the art. Reference in the specification to \u201cone implementation,\u201d \u201cthis implementation,\u201d \u201cthese implementations\u201d or \u201csome implementations\u201d means that a particular feature, structure, or characteristic described is included in at least one implementation, and the appearances of these phrases in various places in the specification are not necessarily all referring to the same implementation.","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described. Rather, the specific features and acts are disclosed as example forms of implementing the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The detailed description is set forth with reference to the accompanying figures. In the figures, the left-most digit(s) of a reference number identifies the figure in which the reference number first appears. The use of the same reference numbers in different figures indicates similar or identical items or features.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
