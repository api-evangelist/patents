---
title: Malware family identification using profile signatures
abstract: A potential malware sample is received from a security device at a server associated with a security cloud service. The sample is executed in a sandbox environment on the server, including by monitoring interaction of the sample with an application program interface (API), provided by the sandbox environment, in order to obtain an API log. It is determined whether the sample is associated with a known malware family including by determining, based at least in part on the API log, if the sample created an executable file and if the sample registered the executable file in a run key. If it is determined that the sample is associated with a known malware family, then an alert is generated.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09542556&OS=09542556&RS=09542556
owner: Palo Alto Networks, Inc.
number: 09542556
owner_city: Santa Clara
owner_country: US
publication_date: 20150915
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO OTHER APPLICATIONS","BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This application is a continuation of co-pending U.S. patent application Ser. No. 13\/754,789, entitled MALWARE FAMILY IDENTIFICATION USING PROFILE SIGNATURES filed Jan. 30, 2013 which is incorporated herein by reference for all purposes.","Malware is a general term commonly used to refer to malicious software (e.g., including a variety of hostile, intrusive, and\/or otherwise unwanted software). For example, malware is software used or created by attackers or hackers to disrupt computer and\/or computer network operation, steal proprietary information (e.g., confidential information, such as identity, financial, and\/or intellectual property related information), and\/or gain access to private\/proprietary computer systems and\/or computer networks. Malware can be in the form of code, scripts, active content, and\/or other software.","Malware includes computer viruses, worms, Trojan horses, rootkits, key loggers, spyware, adware, and\/or other malicious programs. Malware typically does not refer to simply defective software, which is software that has a legitimate purpose but can include harmful bugs and\/or vulnerabilities that were not corrected before release of the software. However, some malware is disguised as genuine software and can come from an official company website. For example, otherwise legitimate software can be improperly packed with additional tracking software that gathers user information without user permission.","The invention can be implemented in numerous ways, including as a process; an apparatus; a system; a composition of matter; a computer program product embodied on a computer readable storage medium; and\/or a processor, such as a processor configured to execute instructions stored on and\/or provided by a memory coupled to the processor. In this specification, these implementations, or any other form that the invention may take, may be referred to as techniques. In general, the order of the steps of disclosed processes may be altered within the scope of the invention. Unless stated otherwise, a component such as a processor or a memory described as being configured to perform a task may be implemented as a general component that is temporarily configured to perform the task at a given time or a specific component that is manufactured to perform the task. As used herein, the term \u2018processor\u2019 refers to one or more devices, circuits, and\/or processing cores configured to process data, such as computer program instructions.","A detailed description of one or more embodiments of the invention is provided below along with accompanying figures that illustrate the principles of the invention. The invention is described in connection with such embodiments, but the invention is not limited to any embodiment. The scope of the invention is limited only by the claims and the invention encompasses numerous alternatives, modifications and equivalents. Numerous specific details are set forth in the following description in order to provide a thorough understanding of the invention. These details are provided for the purpose of example and the invention may be practiced according to the claims without some or all of these specific details. For the purpose of clarity, technical material that is known in the technical fields related to the invention has not been described in detail so that the invention is not unnecessarily obscured.","Malware is a general term commonly used to refer to malicious software (e.g., including a variety of hostile, intrusive, and\/or otherwise unwanted software). For example, malware is software used or created by attackers or hackers to disrupt computer and\/or computer network operation, steal proprietary information (e.g., confidential information, such as identity, financial, and\/or intellectual property related information), and\/or gain access to private\/proprietary computer systems and\/or computer networks. Malware can be in the form of code, scripts, active content, and\/or other software.","Malware includes computer viruses, worms, Trojan horses, rootkits, key loggers, spyware, adware, and\/or other malicious programs. Malware typically does not refer to simply defective software, which is software that has a legitimate purpose but can include harmful bugs and\/or vulnerabilities that were not corrected before release of the software. However, some malware is disguised as genuine software and can come from an official company website. For example, otherwise legitimate software can be improperly packed with additional tracking software that gathers user information without user permission.","Various types of antimalware products are commercially available that attempt to block or prevent infection of computers and\/or computer networks of various types of malware. Example antimalware products include antivirus (AV) software products (e.g., host based AV software) and firewalls, such as security appliances that include firewalls (e.g., next-generation firewall solutions from Palo Alto Networks, Inc.). Such commercially available products are commonly used by personal users and\/or corporate users (e.g., on their computing devices) as well as corporate networks to attempt to protect such users and\/or networks from unauthorized access by other computer users and\/or infection and spreading of malware on such computing devices and\/or computer networks.","A variety of strategies are typically utilized by antimalware products. Signature-based detection is an antimalware technique that generally involves searching for known patterns of data within executable code (e.g., performing a static analysis of the executable file(s) to determine whether the signature can be matched based on the static analysis of the executable file(s)). Such signatures can be generated for specific malware that has been previously identified and analyzed (e.g., by a security analyst, who can determine unique features files that can be statically detected that can subsequently be used for signature-based detection of that particular malware).","It is also possible for a computer to be infected with new malware for which no signature is yet known or disseminated. To counter such so-called zero-day threats, various non-signature based techniques, such as various types of heuristic based techniques, can be used as an attempt to identify potential malware. One type of heuristic approach includes using generic signatures that can identify new viruses or variants of existing viruses by looking for known malicious code in files.","Another type of antimalware technique is sometimes referred to behavior analysis or dynamic analysis techniques. For example, dynamic analysis techniques attempt to predict what an executable file will do by running it in a sandbox (e.g., a virtual environment (VM)) and analyzing what it does within that sandbox to determine if it performs any malicious or potentially malicious actions.","However, such non-signature based approaches can fail to identify malware and\/or can improperly identify legitimate software as malware (e.g., also referred to as false positives). Also, such non-signature based approaches can fail to determine if the potentially malicious software is a variant of a known malware family. For example, merely determining that a file is malware or potentially malicious using such non-signature based approaches does not identify whether that malware is a member of a particular malware family (e.g., a variant of a known malware family that is a member of such malware family).","Modern malware also often use several different types of techniques to avoid detection and hide their core functionality. For example, malware can use polymorphic packers (e.g., a polymorphic packer is a software tool that can roll up several kinds of malware into a single package, such as an e-mail attachment, and also can provide the ability to make its signature mutate over time, so it is more difficult to detect and remove using typical antimalware solutions) and\/or other polymorphic or mutation related techniques (e.g., custom packers). Also, the number of different malware samples is continually increasing. Thus, providing techniques for identifying malware and, more specifically, identifying that such malware is part of a particular malware family presents significant challenges.","As discussed above, some antimalware approaches focus on artifacts of the actual payload of a malware sample to attempt to group malware samples together (e.g., identifying strings in the binary or structure of malicious code). However, polymorphic and custom packers hinder this effort as also discussed above. Non-signature based anti-malware techniques can sometimes detect such malware, but fail to identify whether such malware is a member of a known malware family as also discussed above.","What are needed are techniques for identifying malware and, more specifically, identifying that such malware is part of a particular malware family. In particular, identifying that such malware is part of a particular malware family provides additional information to an information technology (IT), network, and\/or security admin(istrator) and a security vendor (e.g., knowing a modus operandi of attackers can assist in defensive responses to an attack). For example, certain malware families can present more significant risks or threats to users and\/or enterprises, such as Zeus (e.g., also known as Zbot, is a malware toolkit that allows a cybercriminal to build their own Trojan Horse, and, in particular, Zeus is a Trojan horse that can be used to steal banking information by man-in-the-browser keystroke logging and form grabbing, and was first identified in July 2007 when it was used to steal information from the United States Department of Transportation, and it became more widespread in March 2009). Thus, a security solution that can inform IT of an enterprise that one or more of their devices was infected with malware and\/or attempted to download malware (e.g., Zeus is commonly delivered using drive-by-download techniques) that is a member of the Zeus malware family can provide IT with valuable information on how to respond based on the known threats and\/or risks associated with the Zeus malware family (e.g., or other malware families that can pose similar or different risks or threats).","Accordingly, techniques for malware family identification using profile signatures are disclosed. For example, using various techniques for malware family identification using profile signatures as disclosed herein can facilitate detection and remediation of malware by identifying that such malware is part of a particular malware family (e.g., to assist in accurately naming malicious samples at time of discovery).","In some embodiments, malware family identification using profile signatures includes executing a potential malware sample in a virtual machine (VM) environment (e.g., a sandbox); and determining whether the potential malware sample is associated with a known malware family based on a profile signature. In some embodiments, the VM environment is an instrumented VM environment for monitoring potential malware samples during execution.","In some embodiments, malware family identification using profile signatures further includes performing a dynamic analysis of the potential malware sample to determine whether the potential malware sample is associated with a known malware family. In some embodiments, malware family identification using profile signatures further includes performing a dynamic analysis of the potential malware sample to classify the potential malware sample based on a modus operandi of the potential malware sample (e.g., instead of merely using features contained within the potential malware sample itself). For example, using these techniques it is extremely difficult for malware authors to hide their modus operandi to avoid detection.","In some embodiments, malware family identification using profile signatures further includes receiving the potential malware sample from a security device (e.g., a host-based or gateway\/appliance\/server based firewall or security appliance providing inline firewall functionality) for performing a dynamic analysis of the potential malware sample using an instrumented VM to determine whether the potential malware sample is associated with a known malware family based on profile signatures. For example, a security cloud service can receive one or more potential malware samples from one or more firewalls and\/or security appliances from various customers of the security cloud service), and the security cloud service can perform the dynamic analysis of the potential malware samples using an instrumented VM(s) to determine whether the potential malware sample is associated with a known malware family based on profile signatures as further described herein. Also, a source identifier (e.g., a source uniform resource identifier (URI) or uniform resource locator (URL)) for the potential malware sample can be used by the security cloud service (e.g., the host-based or gateway\/appliance\/server based firewall or security appliance providing the potential malware sample can provide such URI\/URL information based on where that particular potential malware sample was downloaded from on the Internet or world-wide web). The security cloud service can provide feedback to the firewalls, security appliances, and\/or IT admins of such customers of the security cloud service and\/or to security vendors to inform them of any detected known malware family results (e.g., feedback can be provided programmatically using application programming interfaces (APIs) or other mechanism, alerts, and\/or notifications can be provided using e-mail, text messaging, voice communications, and\/or other notification techniques), so that appropriate responses can be implemented by such security vendor(s) and\/or security devices and\/or such customers (e.g., if malware associated with the Zeus family is detected, then a customer may implement a more aggressive IT\/security response).","In some embodiments, malware family identification using profile signatures further includes performing a dynamic analysis of the potential malware sample to classify the potential malware sample as associated with a malware family.","In some embodiments, malware family identification using profile signatures further includes performing a dynamic analysis of the potential malware sample to classify the potential malware sample as associated with a malware family, including monitoring application programming interface (API) activities performed by the potential malware sample during execution time in the virtual machine environment (e.g., generating an API log that can be used to assist in automatically classifying the potential malware sample as associated with a known malware family).","In some embodiments, malware family identification using profile signatures further includes performing a static analysis (e.g., analyzing files of the potential malware sample not during execution time) and performing a dynamic analysis of the potential malware sample to classify the potential malware sample as associated with a malware family.","In some embodiments, malware family identification using profile signatures further includes performing a dynamic analysis of the potential malware sample to classify the potential malware sample as associated with a malware family, including monitoring network activities performed by the potential malware sample during execution time in the VM environment.","In some embodiments, the profile signature includes an intrusion prevention system (IPS) signature, and the malware family identification using profile signatures further includes performing a dynamic analysis of the potential malware sample to classify the potential malware sample as associated with a malware family, including monitoring network activities performed by the potential malware sample during execution time in the VM (e.g., instrumented VM environment).",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 1","b":["102","104","110","112","114","102","110","112","114","104"]},"For example, the security cloud service can provide for integration of such inline firewalls with the cloud by making use of a customer's on-premises firewalls in conjunction with a cloud-based security analysis engine that can deliver both protection and performance. The inline firewall on one or more customer premises can capture unknown files and can perform inline enforcement (e.g., using signature detection and\/or other techniques locally on the security device) while maintaining high network throughput and low latency. The analysis of unknown files, sometimes referred to herein as potential malware samples, can then be offloaded to the security cloud service that provides a secure cloud-based engine to identify unknown malware and subsequently deliver protections to all locations of the security cloud service. The customer's on-premises firewalls can be configured to securely communicate with the security cloud service (e.g., using secure communication protocols, such as SSL, VPNs, and\/or using other secure communication techniques). An example security cloud service includes the Wildfire\u00ae security cloud service provided by Palo Alto Networks.","Further, the security cloud service can provide a virtualized sandbox (e.g., virtual machine engine) for performing dynamic analysis on the potential malware samples using various techniques described herein. For example, when an inline firewall encounters an unknown file, the file can be submitted to the security cloud service (e.g., source identifier information, such as URI\/URL, can also be submitted with the file as described herein). Such submissions of the potential malware samples can be provided manually or automatically based on a security policy configured for each security device and\/or customer. In particular, the security cloud service can perform the dynamic analysis of the file (e.g., an executable file in this example) using an instrumented virtual machine(s) to determine whether the file (e.g., potential malware sample) is associated with a known malware family based on profile signatures as further described herein.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 2","b":["202","220","218","220","224","222","222","220","222","202","204","208","220","212","214","216","202","208","212","216","214"]},"As also shown, an IT\/security admin can use a computing device  (e.g., desktop computer, workstation, laptop, tablet, smart phone, and\/or other computing device) to communicate with the security cloud service  via a communication  through the Internet  or through a local communication . For example, an IT\/security admin can use a computing device  to send a potential malware sample for further analysis to the security cloud service . As another example, an IT\/security admin can use computing device  to send a profile signature to the security cloud service .",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 3","b":["302","304","306","308","304","306","308","310","312"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 4","b":["402","404","406","408","410","404","406","408","404","406","408","410","412"]},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 5","b":["502","504","504","502","506","522","524","502","504","506","524","522","506","508","510","512","514","522","506","514"]},"For example, the security cloud service can include a sandbox environment (e.g., instrumented virtual machine environment) that executes a potential malware sample in the sandbox environment to build a series of run-time contexts (e.g., source identifier (URI\/URL), API log, packer information, network activity, etc.). In particular, the sandbox environment can be an instrumented environment that executes a dynamic analysis engine such as shown in  that includes an API monitoring engine that logs monitored APIs for a potential malware sample during runtime, a packer monitoring engine that determines packer related information for the potential malware sample during runtime, a network monitoring engine that can monitor network activities of the potential malware sample during runtime, and\/or various other runtime context monitoring information can be monitored and logged using the dynamic analysis engine. A source URL can include a location where a sample was downloaded from (e.g., www.malware-source-website.com, which can be provided by a security device that provided the sample to the security cloud service). An API log can provide a recording of various high-level API calls that the potential malware sample performs while executing in the sandbox (e.g., Windows API calls observed and logged by monitoring API calls to Microsoft Windows\u00ae operating system in the emulated Windows VM environment). Packer information can include determining a packer based on static analysis and\/or using dynamic analysis to identify one or more packers associated with a sample that is monitored during runtime in the sandbox. In some embodiments, network traffic activity is also monitored during runtime using a network monitoring engine (e.g., a traffic monitoring agent in the instrumented VM environment that can record monitored network traffic in, for example, a pcap format or some other format and analyze that captured packet traffic data using an IPS engine to identify malware including network threats or other malicious activities as further described herein).","For example, using various techniques described herein for monitoring a potential malware sample during runtime in a sandbox environment, the potential malware sample's behavior (e.g., runtime context information, including, for example, files created\u2014names of files\/location of such files etc., registry key changes, processes launched, packer names and packer related information, network activity, memory usage, etc.) can be monitored and logged, and then compared with profile signatures as a finger print (e.g., set of rules for matching or identifying that potential malware sample based on previously identified characteristics or patterns associated with a given malware family) to not only identify that such is malware but can associate such malware as being in a particular, known malware family. As discussed above, determining that a particular malware sample is a member of a known malware family provides valuable information to security vendors and customers.","In some embodiments, the security cloud service  can perform other security analysis techniques on the potential malware samples. For example, such other security analysis techniques can include scanning memory in the sandbox (e.g., instrumented VM) to identify unique memory usage features using a memory monitoring engine (not shown), and\/or other features that can be monitored during runtime of the potential malware sample in the sandbox. In addition, such other security analysis techniques can include static analysis techniques and can be performed on the potential malware samples using a static analysis engine (not shown) (e.g., binary code analysis of a sample, and in some cases, further including decompilation for source code based analysis) and used as another input to the profile signature engine  for facilitating a determination of a malware family of the potential malware sample.","An example profile signature is provided below. In some embodiments, signature profiles are compiled and executed using the profile signature engine to match potential malware sample(s). As shown in the below example profile signature, if matches (e.g., and operations) of API log and packer information, then the security cloud service can identify the sample as associated with that known malware family. In some embodiments, profile signatures are implemented in an extensible markup language (XML) format to provide a simple mechanism to update signatures using the security cloud service. In particular, in this example, this profile signature is matched if there is both an API log match and packer name match, and specifically, a pattern match in an API log runtime context (e.g., RegSetValueEx.*\\\\Policies\\\\Explorer\\\\Run, .*, [a-fA-F0-9]*\\.exe$ as well as a packer name pattern match (e.g., ASPack.*). As discussed above, in addition to dynamic features, various static features can also be used to facilitate identification of the malware family of samples.","Example Signature Profile:",{"@attributes":{"id":"p-0048","num":"0047"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003","<Profile>"]},{"entry":[{},{},"\u2003<and>"]},{"entry":[{},{},"\u2003\u2003<match>"]},{"entry":[{},{},"\u2003\u2003\u2003\u2003\u2003<context>wf-api-log<\/context>"]},{"entry":[{},{},"\u2003\u2003\u2003\u2003\u2003<pattern>"]},{"entry":[{},{},"\u2003\u2003\u2003(RegSetValueEx,"]},{"entry":[{},{},"\u2003\u2003\u2003.*\\\\Policies\\\\Explorer\\\\Run,"]},{"entry":[{},{},"\u2003\u2003\u2003.*,"]},{"entry":[{},{},"\u2003\u2003\u2003[a-fA-F0-9]*\\.exe$ )"]},{"entry":[{},{},"\u2003\u2003\u2003\u2003<\/pattern>"]},{"entry":[{},{},"\u2003\u2003<\/match>"]},{"entry":[{},{},"\u2003\u2003\u2003<match>"]},{"entry":[{},{},"\u2003\u2003\u2003\u2003\u2003<context>wf-pe-packer-name<\/context>"]},{"entry":[{},{},"\u2003\u2003\u2003\u2003\u2003<pattern>"]},{"entry":[{},{},"\u2003\u2003\u2003\u2003\u2003( ASPack.*)"]},{"entry":[{},{},"\u2003\u2003\u2003\u2003\u2003<\/pattern>"]},{"entry":[{},{},"\u2003\u2003\u2003\u2003<\/match>"]},{"entry":[{},{},"\u2003<\/and>"]},{"entry":[{},{},"<\/Profile>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"A portion of another example profile signature that includes an IPS signature is provided. In this example, this IPS signature portion of the profile signature is matched if there is a pattern match of >\\nUser-Agent: Opera\/9\\(Windows NT 5.1; [A\\Z]*;x86\\)\\r\\n in the context of http-req-headers.","Example IPS Signature Profile Excerpt:",{"@attributes":{"id":"p-0051","num":"0050"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003","<Profile >"]},{"entry":[{},"..."]},{"entry":[{},"\u2003\u2003<entry>"]},{"entry":[{},"\u2003\u2003\u2003<pattern-match>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<ignore-case>no<\/ignore case>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003<pattern>\\nUser-Agent: Opera\/9\\(Windows NT 5.1;"]},{"entry":[{},"[A\\Z]*;x86\\)\\r\\n<\/pattern>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003<context>http-req-headers<\/context>"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003<pattern-match>"]},{"entry":[{},"\u2003\u2003<\/entry>"]},{"entry":[{},"\u2003<\/and>"]},{"entry":[{},"..."]},{"entry":[{},"<\/Profile>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"For example, profile signatures can provide heuristic based analysis (e.g., developed by a security analyst to determine features to uniquely identify features of malware and differentiate that malware as being part of a particular malware family, such as based on patterns of file names created in a user's directory that always end in a particular pattern\/file naming conventions, such as bad.exe, but can be aaa.bad.exe or bbb.bad.exe, etc., which can be determined based on code analysis to determine consistent\/constant behaviors of malware samples known to be part of a particular malware family). For example, profile signatures can be generated for malware families based on observation of unique actions\/behaviors determined to be associated with samples discovered in the wild that have been determined to be associated with a particular family. Thus, profile signatures provides for additional information for security vendors, IT\/security admins, and\/or other computer users by not only identifying malware but identifying that such detected malware is associated with a particular family, which can then be used by security vendors, IT\/security admins, and\/or other computer users to perform appropriate, specific responsive actions based on the identified malware family for a given malware sample.","As will be apparent to one of ordinary skill in the art in view of the various embodiments disclosed herein, various other profile signatures can be provided using similar or other formats based on runtime contexts that can be monitored in a sandbox environment, such as described herein with respect to various embodiments. In some embodiments, profile signatures include various API runtime context information, network activity runtime context information, source identifier information, packer related context information, static information, and\/or various other information, such as described herein with respect to various embodiments.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 6","b":["602","604","606","608","610","612","614","616","618"]},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 7","b":["702","704","706","708"]},"While Intrusion Detection System (IDS) and Intrusion Prevention System (IPS) are existing security technologies, such IDS\/IPS security technologies have generally not been utilized in sandbox environments. Accordingly, techniques are disclosed for implementing IDS\/IPS engines in a sandbox, such as an instrumented VM environment, such as similarly described above, to facilitate malware detection and\/or malware family identification, as similarly described herein with respect to various embodiments. In some embodiments, a sandbox environment captures and logs monitored network traffic activity from the potential malware sample during execution in the sandbox, such as similarly described herein. By capturing such network traffic activity of a potential malware sample during runtime in a sandbox, whether the potential malware sample is malicious can be determined using IPS profile signatures, such as similarly described herein. In addition, by capturing such network traffic activity of a potential malware sample during runtime in a sandbox, whether the potential malware sample is a member of a known malware family can be determined using IPS profile signatures, such as similarly described herein. This approach can be used by a security cloud service, such as described herein, to use sandbox techniques for detecting malware using IPS based techniques without host instrumentation.","For example, captured network traffic activity information (e.g., in pcap form or another form) can be provided to an IPS engine, which can determine whether such network traffic activity is associated with malware (e.g., matches a known threat or malicious network behavior) based on IPS signatures used by the IPS engine. In some embodiments, the IPS engine is an IPS engine (e.g., or a subset thereof) such as that implemented on integrated security appliances that provide inline filtering and IPS functionality.","In some embodiments, IPS based malware analysis techniques are used in addition to or in combination with other dynamic analysis techniques and\/or static analysis techniques to identify malware and determine whether such malware is a member of a known malware family, as similarly described herein with respect to various embodiments.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 8","b":["802","804","806","808"]},"Below are profile signature and IPS signature examples that can utilize the various techniques described herein to identify malware and determine whether the malware is associated with a known malware family based on runtime context information collected in a sandbox environment in accordance with various embodiments disclosed herein.","Profile Signature Example:","The following is a Mydoom.o example API log and profile signature that matches it.","Mydoom.o Example",{"@attributes":{"id":"p-0063","num":"0062"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<profile>"},{"entry":"\u2003<and>"},{"entry":"\u2003\u2003\u2003<match>"},{"entry":"\u2003\u2003\u2003\u2003<context>"},{"entry":"\u2003\u2003\u2003\u2003\u2003wf-api-log"},{"entry":"\u2003\u2003\u2003\u2003<\/context>"},{"entry":"\u2003\u2003\u2003\u2003<pattern>"},{"entry":"\u2003\u2003\u2003\u2003\u2003(CreateFileW,"},{"entry":"\u2003\u2003\u2003\u2003\u2003C:\\\\WINDOWS\\\\services.exe)"},{"entry":"\u2003\u2003\u2003\u2003<\/pattern>"},{"entry":"\u2003\u2003\u2003<\/match>"},{"entry":"\u2003\u2003\u2003<match>"},{"entry":"\u2003\u2003\u2003\u2003<context>"},{"entry":"\u2003\u2003\u2003\u2003\u2003wf-api-log"},{"entry":"\u2003\u2003\u2003\u2003<\/context>"},{"entry":"\u2003\u2003\u2003\u2003<pattern>"},{"entry":"\u2003\u2003\u2003\u2003\u2003(RegSetValueEx,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\\\\REGISTRY\\\\MACHINE\\SOFTWARE\\\\Microsoft\\\\Windows\\\\"},{"entry":"\u2003\u2003\u2003\u2003\u2003CurrentVersion\\\\Run,"},{"entry":"\u2003\u2003\u2003\u2003\u2003Services,"},{"entry":"\u2003\u2003\u2003\u2003\u2003C:\\\\WINDOWS\\\\services.exe)"},{"entry":"\u2003\u2003\u2003\u2003<\/pattern>"},{"entry":"\u2003\u2003\u2003<\/match>"},{"entry":"\u2003\u2003<\/and>"},{"entry":"<\/profile>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0064","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"315pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"SetFileAttributes, C: \\Documents and Settings\\Administrator\\Local Settings\\Temporary Internet"},{"entry":"Files"},{"entry":"api, 2476, SetFileAttributes, C: \\Documents and Settings\\Administrator\\Local Settings\\Temporary"},{"entry":"Internet Files"},{"entry":"SetFileAttributes, C: \\Documents and Settings\\Administrator\\Local Settings\\Temporary Internet"},{"entry":"Files\\Content.IE5"},{"entry":"RegCreateKeyEx, HKEY_CURRENT_USER, Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User"},{"entry":"Shell Folders"},{"entry":"RegCreateKeyEx, HKEY_CURRENT_USER, Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell"},{"entry":"Folders"},{"entry":"RegCreateKeyEx, HKEY_CURRENT_USER, Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User"},{"entry":"Shell Folders"},{"entry":"RegCreateKeyEx, HKEY_CURRENT_USER, Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell"},{"entry":"Folders"},{"entry":"RegSetValueEx, \\REGISTRY\\USER\\S-1-5-21-1004336348-362288127-725345543-"},{"entry":"500\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell\u2003Folders, History, C: \\Documents"},{"entry":"and Settings\\Administrator\\Local Settings\\History"},{"entry":"SetFileAttributes, C: \\Documents and Settings\\Administrator\\Local Settings\\History"},{"entry":"SetFileAttributes, C: \\Documents and Settings\\Administrator\\Local Settings\\History"},{"entry":"file, 2468, CreateFileW, C: \\WINDOWS\\services.exe"},{"entry":"SetFileAttributes, C: \\Documents and Settings\\Administrator\\Cookies\\"},{"entry":"CreateMutexW, Local\\c: !documents\u2003\u2003\u2003\u2003and\u2003\u2003\u2003\u2003settings!administrator!local"},{"entry":"settings!history!history.ie5:"},{"entry":"SetFileAttributes, C: \\Documents\u2003\u2003\u2003\u2003and\u2003\u2003\u2003\u2003\u2003Settings\\Administrator\\Local"},{"entry":"Settings\\History\\History.IE5\\"},{"entry":"RegSetValueEx, \\REGISTRY\\MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run, Services, C: \\"},{"entry":"WINDOWS\\services.exe"},{"entry":"LoadLibraryExW, ws2_32"},{"entry":"CreateMutexW, Local\\WininetConnectionMutex"},{"entry":"LoadLibraryExW, wininet.dll"},{"entry":"SleepEx, 1566804069"},{"entry":"LoadLibraryExW, RASAPI32.dll"},{"entry":"LoadLibraryExW, RTUTILS.DLL = 0x76e80000, NULL,0"},{"entry":"RegCreateKeyEx, HKEY_LOCAL_MACHINE,Software\\Microsoft\\Tracing"},{"entry":"LoadLibraryExW, SHELL32.dll"},{"entry":"RegCreateKeyEx, HKEY_LOCAL_MACHINE,Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell"},{"entry":"Folders"},{"entry":"RegSetValueEx, \\REGISTRY\\MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell"},{"entry":"Folders, Common AppData, C: \\Documents and Settings\\All Users\\Application Data"},{"entry":"RegCreateKeyEx, \\REGISTRY\\USER\\S-1-5-21-1004336348-362288127-725345543-"},{"entry":"500, Software\\Microsoft\\Windows\\CurrentVersion\\Explorer.\\User Shell Folders"},{"entry":"RegCreateKeyEx, \\REGISTRY\\USER\\S-1-5-21-1004336348-362288127-725345543-"},{"entry":"500, Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon"},{"entry":"RegCreateKeyEx, \\REGISTRY\\USER\\S-1-5-21-1004336348-362288127-725345543-"},{"entry":"500, Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders"},{"entry":"RegSetValueEx, \\REGISTRY\\USER\\S-1-S-21-1004336348-362288127-725345S43-"},{"entry":"500\\Software\\Microsoft\\windows\\CurrentVersion\\Explorer\\Shell\u2003Folders, AppData, C: \\Documents"},{"entry":"and Settings\\Administrator\\Application Data"},{"entry":"LoadLibraryExW, sensapi.dll"},{"entry":"connect, 15.244.192.143:1034"},{"entry":"RegSetValueEx, \\REGISTRY\\MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run, Services, C: \\"},{"entry":"WINDOWS\\services.exe"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In this example, the profile signature looks for services.exe being created in the Windows folder and then being registered in the run key (e.g., applicable lines shown in bold). This is a known behavior of the mydoom family (i.e., mydoom.o to be exact). For purposes of illustration of this example and brevity, the API log size has been reduced.","The next is an example of a variant of the same malware family.",{"@attributes":{"id":"p-0067","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Mydoom.q example"},{"entry":"<profile>"},{"entry":"\u2003<and>"},{"entry":"\u2003\u2003<match>"},{"entry":"\u2003\u2003\u2003<context>"},{"entry":"\u2003\u2003\u2003\u2003wf-api-log"},{"entry":"\u2003\u2003\u2003<\/context>"},{"entry":"\u2003\u2003\u2003<pattern>"},{"entry":"\u2003\u2003\u2003\u2003(CreateFileW,"},{"entry":"\u2003\u2003\u2003\u2003C:\\\\WINDOWS\\\\lsass\\.exe)"},{"entry":"\u2003\u2003\u2003<\/pattern>"},{"entry":"\u2003\u2003<\/match>"},{"entry":"\u2003\u2003<match>"},{"entry":"\u2003\u2003\u2003<context>"},{"entry":"\u2003\u2003\u2003\u2003wf-api-log"},{"entry":"\u2003\u2003\u2003<\/context>"},{"entry":"\u2003\u2003\u2003<pattern>"},{"entry":"\u2003\u2003\u2003\u2003(RegSetValueEx,"},{"entry":"\\\\REGISTRY\\\\MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\"},{"entry":"CurrentVersion\\\\Run,"},{"entry":"\u2003\u2003\u2003\u2003Traybar,"},{"entry":"\u2003\u2003\u2003\u2003C:\\\\WINDOWS\\\\lsass\\.exe)"},{"entry":"\u2003\u2003\u2003<\/pattern>"},{"entry":"\u2003\u2003<\/match>"},{"entry":"\u2003<\/and>"},{"entry":"<\/profile>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0068","num":"0067"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"308pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"SleepEx, 20000"},{"entry":"LoadLibraryExW, KERNEL32.DLL"},{"entry":"LoadLibraryExW, ADVAPI32.dll"},{"entry":"LoadLibraryExW, MSVCRT.dll"},{"entry":"LoadLibraryExW, USER32.dll"},{"entry":"LoadLibraryExW, WS2_32.dll"},{"entry":"RegCreateKeyEx, HKEY_LOCAL_MACHINE, Software\\Microsoft\\Windows\\CurrentVersion\\POSIX"},{"entry":"RegCreateKeyEx, HKEY_CURRENT_USER, Software\\Microsoft\\Windows\\CurrentVersion\\POSIX"},{"entry":"CreateFileW, C: \\WINDOWS\\lease.exe"},{"entry":"registry, 2472, RegSetValueEx, \\REGISTRY\\MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\"},{"entry":"Run, Traybar, C: \\Windows\\lease.exe"},{"entry":"RegCreateKeyEx, HKEY_LOCAL_MACHINE, System\\CurrentControlSet\\Services\\Tcpip\\Parameters"},{"entry":"RegCreateKeyEx, HKEY_LOCAL_MACHINE, System\\CurrentControlSet\\Services\\Tcpip\\Parameters"},{"entry":"RegCreateKeyEx, HKEY_LOCAL_MACHINE, System\\CurrentControlSet\\Services\\Tcpip\\Parameters"},{"entry":"RegCreateKeyEx, HKEY_LOCAL_MACHINE, System\\CurrentControlSet\\Services\\Tcpip\\Parameters"},{"entry":"LoadLibraryExW, rasadhlp.dll"},{"entry":"CreateFileW, C: DOCUME~1\\ADMINI~1\\LOCALS~1\\Temp\\lifsmh.txt, 2"},{"entry":"LoadLibraryExW, C: \\WINDOWS\\system32\\mcwsock.dll"},{"entry":"LoadLibraryExW, hnetcfg.dll"},{"entry":"LoadLibraryExW, C: \\WINDOWS\\System32\\mswsock.dll"},{"entry":"LoadLibraryExW, C: \\WINDOWS\\System32\\wshtcpip.dll"},{"entry":"bind, 1042"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The above sample is very similar to the mydoom.o example as an executable is created in the windows directory and then registered in run key (e.g., applicable lines shown in bold). However, after analysis it was discovered that the file names differ between the variants.","IPS Example","A Fosniw.gen command and control signature example is provided below.",{"@attributes":{"id":"p-0072","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003","<and>"]},{"entry":[{},{},"<entry>"]},{"entry":[{},{},"<pattern-match>"]},{"entry":[{},{},"\u2003<context>http-req-params<\/context>"]},{"entry":[{},{},"\u2003<pattern>r_autoidcnt\\.asp\\?mer__seq=<\/pattern>"]},{"entry":[{},{},"<\/pattern-match>"]},{"entry":[{},{},"<\/entry>"]},{"entry":[{},{},"<\/and>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Network traffic collected from the sample is provided below.",{"@attributes":{"id":"p-0074","num":"0073"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003","GET"]},{"entry":[{},"iekeyword.com\/app\/?prj=3&pid=:jjhl&mac=002564335a16&logdat"]},{"entry":[{},"a=MacTryCnt:0&code=default&ver=1.0.0.10 Mozilla\/4.0"]},{"entry":[{},"\u2003(compatible; MSIE 7.0; Windows NT 5.1; .NET CLR"]},{"entry":[{},"2.0.50727)"]},{"entry":[{},"GET"]},{"entry":[{},"\u2003\u2003p.iekeyword.comhttp:\/\/p.iekeyword.com\/receive\/r_auto"]},{"entry":[{},"idcnt.asp?mer_seq=3&realid=jjh1&mac=002564335a16&logdata= "]},{"entry":[{},"MacTryCnt:0"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Based on security analysis, it can be determined that fosniw samples use a pattern in the URI (r_autoident.asp?mer_seq=). As apparent from the above request, this will match and, thus, this signature verifies that this is malicious command and control (C&C) network traffic.","Also, these malware detection techniques illustrated by the above profile signature and IPS profile signature examples can occur without actually analyzing the samples themselves (e.g., static analysis is not required), rather these examples illustrate that such malware and malware family determinations can be performed by using the runtime monitoring and profile signature analysis techniques using a sandbox environment as described herein with respect to various embodiments. As will now be apparent, these and other malware and main\/are families can be determined using the runtime monitoring and profile signature analysis techniques using a sandbox environment as described herein with respect to various embodiments.","Although the foregoing embodiments have been described in some detail for purposes of clarity of understanding, the invention is not limited to the details provided. There are many alternative ways of implementing the invention. The disclosed embodiments are illustrative and not restrictive."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various embodiments of the invention are disclosed in the following detailed description and the accompanying drawings.",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
