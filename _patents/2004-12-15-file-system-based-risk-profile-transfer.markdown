---
title: File system based risk profile transfer
abstract: File system based risk profile transfer is disclosed. A request to access an object stored in memory is received from a requesting service, application, or other process. An object risk profile associated with the object, which profile comprises data indicating a level of risk associated with a prior service, application, or other process that previously created or modified the stored object, is accessed. The level of risk reflected in the object risk profile is factored into a process risk profile associated with the requesting service, application, or other process. A security measure to protect the requesting service, application, or other process is deployed based at least in part on the process risk profile.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07895650&OS=07895650&RS=07895650
owner: Symantec Corporation
number: 07895650
owner_city: Mountain View
owner_country: US
publication_date: 20041215
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO OTHER APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION"],"p":["Co-pending U.S. patent application Ser. No. 10\/677,730 entitled RISK PROFILING FOR OPTIMIZING DEPLOYMENT OF SECURITY MEASURES filed Oct. 1, 2003 is incorporated herein by reference for all purposes.","The present invention relates generally to security software. More specifically, file system based risk profile transfer is disclosed.","Using a risk profile associated with a service, application, and\/or other process to optimize deployment of security measures is disclosed in co-pending U.S. patent application Ser. No. 10\/677,730 (the '730 Application), which is incorporated by reference above. The '730 Application describes, inter alfa, calculating a risk profile for a host service based on such factors as which, if any external ports the service communicates on and, if applicable, the risk profile of services, applications, and\/or other processes with which the service interacts and through which the service to be protected may be vulnerable to indirect attack, e.g., by virtue of the fact that such other services, applications, and\/or processes communicate via external ports.","However, certain services, applications, or processes may be exposed to indirect attack through asynchronous interaction with objects created, modified, accessed, or otherwise affected at a prior time by another service, application, or process that has a higher level of risk associated with it. For example, a first application may be configured to generate as output a file, data, or other object that is stored in memory (e.g., in the file system, a database, and\/or otherwise) by the first application, and a second application configured to access the stored object from memory at a later time, such that no direct, live connection between the first and second applications ever exists. For such asynchronous interactions, a system or process configured to monitor for live interactions and adjust the risk profile of one or the other of the applications (or services or other processes) accordingly would not observe an asynchronous interaction such as through a stored file, data, or other object. Therefore, there is a need for a way to factor risks to which a service, application, or other process may be exposed through asynchronous interaction with objects stored by another service, application, or other process.","The invention can be implemented in numerous ways, including as a process, an apparatus, a system, a composition of matter, a computer readable medium such as a computer readable storage medium or a computer network wherein program instructions are sent over optical or electronic communication links. In this specification, these implementations, or any other form that the invention may take, may be referred to as techniques. In general, the order of the steps of disclosed processes may be altered within the scope of the invention.","A detailed description of one or more embodiments of the invention is provided below along with accompanying figures that illustrate the principles of the invention. The invention is described in connection with such embodiments, but the invention is not limited to any embodiment. The scope of the invention is limited only by the claims and the invention encompasses numerous alternatives, modifications and equivalents. Numerous specific details are set forth in the following description in order to provide a thorough understanding of the invention. These details are provided for the purpose of example and the invention may be practiced according to the claims without some or all of these specific details. For the purpose of clarity, technical material that is known in the technical fields related to the invention has not been described in detail so that the invention is not unnecessarily obscured.","Using an object risk profile to secure a host service, application, or other process is disclosed. In one embodiment, a request to access an object stored in memory is received from a requesting service, application, or other process. An object risk profile associated with the object, the object risk profile comprising data indicating a level of risk associated with a prior service, application, or other process that previously created or modified the stored object, is accessed. The level of risk reflected in the object risk profile is factored into a process risk profile associated with the requesting service, application, or other process. A security measure is deployed to protect the requesting service, application, or other process based at least in part on the process risk profile.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1","b":["100","102","104","106","108","110","102","102","112","118","120","126","102","128","112","118","102","130","120","126","112","118"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2","b":["200","202","204","204","206","208","210","208","210","206","208","206","208","200","208","200"]},"Risk profiling module  assesses risk using logic module  and data stored in repository . The stored data may include samples from binaries of executable files, API bit stream data, or other data packets sent by a remote system to a host. API bit stream data may include values intercepted or hooked from API calls to other systems (e.g., operating system ). Status information from a running system may also be included in API bit stream data. It is also possible to determine system information without hooking into system processes such as calling an API or hooking operating system . The stored data provide indications to risk profiling module  of external communications, either directly or over inter-process communications. External port interface  can determine whether an external call or request has occurred to a host service. Incoming data packets can be sampled and stored by risk profiling module  using external port interface .","In other embodiments, these modules may be implemented apart from communications module . Regardless of implementation, external port interface module  provides samples from incoming data traffic directly to external applications (e.g., services - communicating over ports -, information about which ports are being used). In some embodiments, determining that a port is being used may be as useful as determining the actual data transmitted over the port. Likewise, inter-process communications module  provides samples from data communications between an internal host service (i.e., internal application ) communicating externally via an external application (i.e., services -).","Risk profiling module  develops risk profiles host services to determine risks to host services and optimization of deployment of security measures to protect them. Security measures may include host-based behavior blocking and related hardening techniques. Risks can include remote systems conducting direct attacks on external applications or indirect attacks on internal host services using inter-process communications (e.g., attacking a common out-of-proc corn object). Inter-process communications refers to one host service indirectly communicating with an external application.","For indirect communication, inter-process communications module  can determine if a host service is at risk. Logic module  receives data from inter-process communications module  and can develop a profile if an internal application is communicating with an external application. In this example, logic module  identifies the host service and assembles a risk profile based on data it is receiving from inter-process communications module  and\/or external port interface . Risk profiling module  can assign a security measure and store a risk profile for a particular host service.","By evaluating external ports for direct communication or calls from external applications, risk profiling module  creates a profile for each host service engaged in external communication. The identified host services are then protected by various types of security measures.","In inter-process communications, an internal host service (i.e., one that does not have direct access over a communications port) can exchange data with an external application in order to send or receive data from a remote system. For example, a spreadsheet application can be run on a host, but may not have external communication with another remote system or host running a similar spreadsheet. By transferring data using inter-process communications with an e-mail application, the spreadsheet application, in this example, is able to send data to a remote system. After assessing direct and indirect attack risks, risk profiling module  can determine what security measures should be applied to host services based on the risk profiles.","In one embodiment, inter-process communications may occur asynchronously, such as occurs when a service, application, or other process accessed a file, data, or other stored object created, accessed, modified, or interacted with otherwise by another service, application, or other process. In one embodiment, an object risk profile is associated with at least a subset of the files, data, and\/or other objects stored on a system and data comprising the object risk profile is factored in to the determination of the risk profile of services, applications, and\/or processes that subsequently access and\/or otherwise interact with the object.","Risk profiling module  can categorize and prioritize host services based on user-configurable rules, performance criteria, or other factors set or selected by the user or the host. Security measures such as anti-virus, behavior blocking, vulnerability assessment, encryption, encoding, hardening, and other related techniques can be used to protect host services. Further, risk profiling module  can target the application of security measures to a set of host services having greater risks than others. Risk profiling can be used to determine what security measures should be applied and how they should be applied to host services. The discriminate application of security measures using risk profiles eliminates the need for large storage and processing requirements on the host. By using risk profiles of host services, the deployment of security measures can improve host performance and protection.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 3A","FIG. 3B"],"b":["200","302","304","306","200","308","310"]},"Using risk profiles enables both the protection of host services as well as the optimization of host resources and performance while implementing security measures. A risk profile is an assessment of the type of risk and\/or the level of risk associated with a process. In general, attributes of a risk profile are defined based on the host service and type of vulnerability. For example, if a particular host service is available on port  for 20 minutes to enable remote administration of the host operating system, then a risk profile might be high. Assigned attributes could include the period of vulnerability (20 minutes), priority for protection because the operating system is exposed (priority=high), and the port number (port=10). Thus a security measure (e.g., personal firewall software) may be implemented based on the risk profile in order to prevent an attack on the host operating system.","A risk profile can also be developed using user or system-specified rules. These configurable rules may specify particular types of host services for protection, modify or specify default priorities, or the type of security measure to be used for specific host services (e.g., suppression of OS responses to a probe or scan).","Once profiled, host services can be protected using security measures. Using risk profiles to dynamically implement a security measure for a host service provides comprehensive protection while reducing system resource and processing requirements on the host. In other words, security measures may be dynamically deployed to protect host services if and when they are needed. This reduces the burden on the host, eliminating resource requirements typically required by if simultaneously applying security measures to all host services. In order to implement security measures, a risk profile can be assembled using sample data from a variety of sources.","Risk profiling involves identifying host services that may include external applications or internal host applications engaged in inter-process communications. Some examples of inter-process communications may include services listening on local ports, RPC\/out of process COM objects, shared memory, named pipes, Windows\/operating system messaging, service messaging, device input\/output control messaging, and other forms not specifically listed. In one embodiment, sample data can be taken from binary executable files or run-time hooking of host services via application programming interfaces (APIs). In one embodiment, inter-process communication may occur asynchronously, e.g., through interaction by one process with an object (e.g., a file, data, or some other object) stored previously by another process. In this manner, inter-process communication can occur without any observable connection being established between the two processes.","Preferably, risk profiling gathers sample data related to host service attributes. Host service attributes are detected and weighed in order to generate a risk profile. A given weight determines how much and in what order a particular host service is to be protected. By detecting or evaluating these attributes, a risk level can be determines and assigned to a risk profile. In this example, based on comparing the risk level to a configurable risk-level, security measures can be assigned an implemented.","The identification of host service attributes can be implemented using a combination of static analysis of binary executable files of the host services (e.g., examining import tables for calls to APIs related to inter-process communication), run-time hooking of host services, and\/or an analysis of stored objects with which the service interacts and the identity and\/or risk profile associated with the service, application, or other process that created each such object.","Run-time examination may be necessary to determine dynamically established communications and to full determine direct and indirect communications among host services. In other words, risk profiling can be performed by identifying all host services exhibiting evidence (i.e., sample data) of listening on an external port and\/or hosting any type of inter-process communication, thereby assuming that external vulnerabilities to remote systems exists and, therefore, requires protective security measures.","Sample data taken in the above examples provide an indication to risk profiling module  that a particular host service is at risk. Risk levels can be assigned to a risk profile if a host service is communicating externally. Risk levels can also be assigned to a risk profile if a host service is listening on a port, although it is not receiving data. Probes, scans, connection requests, and other incoming data traffic provide indication that a host service is listening on an external port and vulnerable to attack. However, via hooking, it may be possible to determine whether a port is open, regardless of whether any data traffic is flowing over the port.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 3B","b":["200","312","314","316"]},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 4A","b":["200","401","402","200"]},"In other embodiments, other factors can be taken into account when developing a risk profile. Factors such as the type of host service, the importance (to either the user or the host) of the host service, attributes such as the name of the service or data accessible to the service, and other user-specified criteria can provide default or overriding values when assembling and using risk profiles. After prioritizing host services requiring protection, security measures can be implemented, based on each risk profile ().",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 4B","FIG. 2"],"b":["200","404","405","200","406","200","200","408","410"]},"Sampled incoming data traffic may indicate a risk of attack, both direct and indirect, from a remote system or the existence of a channel, regardless of whether or not it is in use. By monitoring incoming data traffic, risk profiling module  can determine if a security measure should be applied. Risk profiles also aid in determining the priority of a host service when applying a security measure. As not all host services may be engaged in external communications at the same moment, security measures do not need to be applied to all host services at the same moment. Subsequently, system resources such as processor time are not over burdened by security measures, if assigned and implemented based on risk profiling as described above. Further profiling can include determining the type of specific risk and other details. In another embodiment, the same result may be achieved by monitoring APIs using integration with a monitoring routine with each API of every application.","If risk profiling module  determines that either sampled binaries or APIs have revealed a threat, then a priority code is assigned to the host service. Based on the priority code, security measures are invoked. Priority codes may be implemented as a tag, field, bit string, or other indicator in the repository of risk profiling module  in order to generate an order in which host services are protected. Other techniques for assigning priority codes are used in other embodiments.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 5","FIG. 5"],"b":["502","502","504"]},"In one embodiment,  includes determining if the object already has an object risk profile associated with it, such as might be the case if the object being saved was stored previously by another application and is currently being saved by an application that subsequently accessed and modified the object. If a preexisting object risk profile is found, the preexisting object risk profile is adjusted to reflect the level of risk associated with the application (or other process) currently saving the object. If the risk level associated with the saving application is greater than that of the application(s) and\/or other process(s) that has\/have created and\/or accessed the object previously, the object risk profile is changed to reflect the higher level of risk. If, one the other hand, the level of risk associated with the application currently saving the object is lower or the same as that of the most risky application to have created and\/or accessed the object previously, the object risk profile remains unchanged in one embodiment. In one embodiment, an audit trail of the applications and\/or other processes that modify a stored object is maintained, even if the level of risk does not increase as a result of the most recent interaction with the object. If there is no preexisting object risk profile, an object risk profile is created in  for the object. In one embodiment, an object risk profile is created and\/or updated only under prescribed circumstances. For example, in one embodiment only objects created and\/or modified by a service, application, or process having a prescribed threshold level of risk associated with it, e.g., one that communicates via external ports and\/or ones running as SYSTEM (a user account having special privileges on certain Microsoft\u2122 platforms) or root (a user account having special privileges on a UNIX based system, e.g.), have an object risk profile created and\/or updated for them. SYSTEM and root are examples of accounts that have associated with them a special, in some cases the highest possible, level of privileges with respect to a system, enabling a user and\/or process having the associated privileges to perform sensitive operations potentially affecting the hardware or software configuration of the system, access confidential data, add users, and\/or crash or otherwise tamper with or damage the system. In one embodiment, an object risk profile is created only for objects created and\/or modified by an application or other process that stores a prescribed threshold number of objects within a prescribed period in the same storage area, e.g., in the same directory tree or other location, to limit the creation of object risk profiles to objects likely to have been created by applications or other processes that use stored objects to communicate data asynchronously to other applications and\/or processes, which applications often store many objects in the same area. In one embodiment, the object risk profile reflects a composite or union of information of the risk profiles of all of the services, applications, and\/or processes that have interacted with the object. In one embodiment, the object risk profile associates with the object the level of risk of the highest risk service, application, and\/or process that has interacted with the object. In one embodiment, an audit trail of the services, applications, and processes that have interacted with the object is maintained in the object risk profile. In one embodiment, an object risk profile is created (or updated) based at least in part on a portable risk profile associated with a service, application, or process that created (or modified) the object. For example, for an SMTP daemon the portable risk profile in one embodiment comprises a data structure indicating that port  is open for receive and the process is running as SYSTEM. In one embodiment, a directory may have a risk profile associated with it and each of the files in the directory is assigned a risk level that reflects the risk level associated with the directory.","The object and associated object risk profile are stored (). In one embodiment, if the object is being stored in a Microsoft Windows\u2122 system using the NTFS file system, the object risk profile is stored as an alternate data stream associated with the file, similar to the manner in which the Windows\u2122 operating system tags files downloaded via a network with the origin zone from which the file was downloaded. For other objects and\/or operating systems, any suitable technique may be used to store object risk profiles and associate each with its corresponding object, including without limitation a database, table, linked list or any other suitable data structure or tool. In one embodiment, the object risk profile is stored in a manner that prevents tampering with the profile, e.g., by using a behavior blocking system, application, or process to prevent unauthorized access.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 6","b":["602","604","606","608"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 7","FIG. 7","FIG. 6"],"b":["608","702","704","706","708"]},"In one embodiment, the risk profile of a service, application, or other process is modified dynamically, as described above in connection with , e.g., and the security measures applied with respect to the service, application, or process are changed dynamically to reflect the current level of risk associated with the service, application, or process, i.e., as adjusted dynamically as the service, application, or other process interacts with stored objects. In one embodiment, a more static approach is used in which a service, application, or other process is observed during an observation or learning period to learn the objects (or types of objects) with which the service, application, or process regularly interacts. The object risk profiles associated with these objects (or classes of object) are then used to determine the risk profile of the service, application, or other process.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 8","b":["802","804","806"]},"Although the foregoing embodiments have been described in some detail for purposes of clarity of understanding, the invention is not limited to the details provided. There are many alternative ways of implementing the invention. The disclosed embodiments are illustrative and not restrictive."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various embodiments of the invention are disclosed in the following detailed description and the accompanying drawings.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
