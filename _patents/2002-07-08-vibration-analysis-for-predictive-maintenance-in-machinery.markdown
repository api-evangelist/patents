---
title: Vibration analysis for predictive maintenance in machinery
abstract: A method for detecting vibration signatures in a reversible drive is disclosed. The method includes the steps of acquiring digital data representative of vibrations in the reversible drive and identifying and grouping together portions of data in a plurality of groups. The identified portions of data relate to a particular direction of travel of the reversible drive and the plurality of groups relate to travel in different directions of the reversible drive. The method can include the further step of processing at least one of the groups of data using signal processing techniques. A system and computer program product for practicing the method for detecting vibration signatures in a reversible drive are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07099782&OS=07099782&RS=07099782
owner: Shell Oil Company
number: 07099782
owner_city: Houston
owner_country: US
publication_date: 20020708
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The present invention relates generally to vibration analysis in machinery and more specifically to vibration analysis, for purposes of predictive maintenance, in rotating, reciprocating and cyclic machinery.","Predictive maintenance aims to sustain the availability of equipment and avoid catastrophic failures, which may cause severe consequential damage to other components of the equipment before the equipment can be shut down. The avoidance of catastrophic failures often reduces the number of components to be replaced. Predictive maintenance is further beneficial in that equipment down time can be predicted and scheduled. Thus, unscheduled down time can be minimised and delays that may be incurred due to procurement of spare parts can be avoided.","Rotating and reciprocating machinery represent very commonly found types of equipment found in industry and it is for this reason that extensive work has been conducted on techniques to aid predictive maintenance programs on such equipment, including vibration analysis, infra-red thermography and oil analysis.","Two known techniques used in vibration analysis include Time Synchronous Averaging (TSA) and Order Tracking. Both techniques are used in conjunction with a conventional Fast Fourier Transform (FFT) to produce a frequency spectrum of the vibration data for analysis to detect vibration signatures indicative of actual or potential fault conditions.","Various vibration analysis techniques are well documented and have a proven record in predicting catastrophic failures. However, an area that has attracted little attention is that of the analysis of frequently reversing drives, particularly such as found in rotating and reciprocating machinery. No techniques are currently known for the successful analysis of equipment vibrations whilst that equipment is accelerating or decelerating and for differentiation between vibration signatures in the forward and reverse directions. One reason is that system dynamics change with speed, direction, and more importantly, with load. Another reason for the limited analysis of frequently reversing drives is that the period during which the equipment runs at a constant speed is normally insufficient for vibration analysis to be performed.","A need thus exists for a vibration analysis technique that can be applied to frequently reversing, rotating, reciprocating and cyclic machinery. Draglines, shovels, winders and cranes, are just some examples of rotating and reciprocating machinery that would clearly benefit from a successful predictive maintenance strategy incorporating advanced vibration analysis techniques such as TSA and Order Tracking.","According to a first aspect of the present invention, there is provided a method for detecting vibration signatures in a reversible drive, the method including the steps of:","acquiring digital data representative of vibrations in the reversible drive;","identifying portions of the data using a processor means; and","grouping together the identified portions of data in a plurality of groups;","wherein each of the identified portions of data relate to travel in a particular direction of travel of the reversible drive and the plurality of groups relate to different directions of travel of the reversible drive.","According to a further aspect of the present invention, there is provided a system for detecting vibration signatures in a reversible drive, including:","transducer means for acquiring digital data representative of vibrations in the reversible drive;","processor means for identifying portions of the data; and","processor means for grouping together the identified portions of data in a plurality of groups;","wherein each of the identified portions of data relate to travel in a particular direction of travel of the reversible drive and the plurality of groups relate to different directions of travel of the reversible drive.","According to a further aspect of the present invention, there is provided a computer program product having a computer readable medium having a computer program recorded therein for detecting vibration signatures in a reversible drive, including:","computer program code means for acquiring digital data representative of vibrations in the reversible drive;","computer program code means for identifying portions of the data; and","computer program code means for grouping together the identified portions of data in a plurality of groups;","wherein each of the identified portions of data relate to travel in a particular direction of travel of the reversible drive and the plurality of groups relate to different directions of travel of the reversible drive.","According to an embodiment of the present invention, the identified portions of data are representative of substantially constant speed of operation of the reversible drive. The digital data may include data sampled at either a fixed time interval sampling rate or a variable sampling rate synchronised to the speed of the drive. Data sampled at a fixed time interval sampling rate can be resampled such that each successive sample of the resampled data corresponds to a successive position of the reversible drive and the distance between each of the successive portions is a constant amount. The distance may be an angular distance.","Preferably, each successive sample of each group of identified portions of data corresponds to a successive sample position of the reversible drive.","Preferably, at least one of the groups of identified portions of data are processed to produce data representative of one or more vibration signatures. The processing step may include one or more of the following:","accumulating the average, in the time domain, of the data comprising one of the groups;","accumulating the average, in the angle domain, of the data comprising one of the groups;","accumulating the average, in the frequency domain, of the data comprising one of the groups;","accumulating the average, in the orders domain, of the data comprising one of the groups;","computing a time synchronised average time waveform of the data comprising one of the groups;","computing a frequency spectrum of a time synchronised average of the data comprising one of the groups;","computing an order tracked frequency spectrum of the data comprising one of the groups;","computing the kurtosis of an accumulated time domain average;","computing the kurtosis of an accumulated angle domain average;","computing the kurtosis of a time synchronised average time waveform; and","computing a demodulated frequency spectrum of the data comprising one of the groups.","According to a further aspect of the present invention, there is provided a method for detecting vibration signatures in a rotating and\/or cyclic machinery, which method includes the steps of:","acquiring digital data representative of vibrations in the machinery, wherein the data includes data acquired at different speeds of the machinery;","identifying portions of the data relating to a predetermined speed and acceleration range of the machinery and for identifying portions of the data outside the predetermined speed and acceleration range, wherein a processor means is used for identifying the portions of the data; and","grouping together the identified portions of data relating to the predetermined speed and acceleration range in a group relating to data in the predetermined speed and acceleration range, by appending successive portions to an accumulation of previous data portions also relating to the predetermined speed and acceleration range.","According to a further aspect of the present invention, there is provided a system for detecting vibration signatures in a rotating and\/or cyclic machinery according to the method of claim , which system includes:","transducer means for acquiring digital data representative of vibrations in the machinery;","processor means for identifying portions of said data relating to a predetermined speed and acceleration range of the machinery and for identifying portions of the data outside the predetermined speed and acceleration range; and","processor means for grouping together said identified portions of data relating to the predetermined speed and acceleration range in a group relating to data in the predetermined speed and acceleration range by appending successive portions to an accumulation of previous data portions also relating to the predetermined speed and acceleration range.","According to a further aspect of the present invention, there is provided a computer program product having a computer readable medium having a computer program recorded therein for detecting vibration signatures in a rotating and\/or cyclic machinery for use in the method according to claim , wherein the computer program product includes:","computer program code means for acquiring digital data representative of vibrations in the machinery;","computer program code means for identifying portions of said data relating to a predetermined speed and acceleration range of the machinery and for identifying portions of the data outside the predetermined speed and acceleration range; and","computer program code means for grouping together said identified portions of data relating to the predetermined speed and acceleration range in a group relating to data in the predetermined speed and acceleration range by appending successive portions to an accumulation of previous data portions also relating to the predetermined speed and acceleration range.","A method, an apparatus and a computer program product for vibration analysis in machinery are disclosed hereinafter. The principles of the method, apparatus and computer program product, in accordance with embodiments of the invention, have general applicability to rotating and\/or cyclic machinery that typically incorporates reversible drives. However, it is not intended that the present invention be limited to the described method, apparatus and computer program product. For example, aspects of the invention have application to variable speed drives that have multiple settings of constant speed and to drives of varying speed wherein the analysis includes periods of acceleration and deceleration of such drives. Aspects of the invention also have application to equipment that changes direction in a number of different orientations. For example, the equipment may move left, right, up, down, forwards and backwards. A reversible drive is defined as a piece of equipment that contains one or more elements that change direction in either a linear, angular or rotational manner.","In a preferred embodiment of the system of the present invention, said identified portions of data are representative of substantially constant speed of operation of said reversible drive.","In the system of the present invention, said digital data preferably includes data sampled at a variable sampling rate synchronised to the speed of said reversible drive.","In another embodiment of the system of the present invention, said digital data includes data sampled at a fixed time interval sampling rate.","In a preferred embodiment of the system of the present invention, said system further includes processor means for resampling said digital data, wherein each successive sample of the resampled digital data corresponds to a successive position of said reversible drive and the distance between each of said successive positions is a constant amount.","Preferably, in the system of the present invention, each successive sample of each of said one or more groups of identified portions of data corresponds to a successive sample position of said reversible drive.","In another preferred embodiment of the system of the present invention, said system further includes processor means for processing at least one of said groups of identified portions of data to produce data representative of one or more vibration signatures.","Said processor means includes one or more processor means selected from the group consisting of:","processor means for accumulating the average, in the time domain, of the data comprising one of said groups;","processor means for accumulating the average, in the angle domain, of the data comprising one of said groups;","processor means for accumulating the average, in the frequency domain, of the data comprising one of said groups;","processor means for accumulating the average, in the orders domain, of the data comprising one of said groups;","processor means for computing a time synchronised average time waveform of the data comprising one of said groups;","processor means for computing a frequency spectrum of a time synchronised average of the data comprising one of said groups;","processor means for computing an order tracked frequency spectrum of the data comprising one of said groups;","processor means for computing the kurtosis of an accumulated time domain average;","processor means for computing the kurtosis of an accumulated angle domain average;","processor means for computing the kurtosis of a time synchronised average time waveform; and","processor means for computing a demodulated frequency spectrum of the data comprising one of said groups.","In one embodiment of the computer program product of the present invention, said identified portions of data are representative of substantially constant speed of operation of said reversible drive.","In a further embodiment of the computer program product of the present invention, said digital data includes data sampled at a variable sampling rate synchronised to the speed of said reversible drive.","In another embodiment of the computer program product of the present invention, said digital data includes data sampled at a fixed time interval sampling rate.","The computer program product of the present invention, may further include computer program code means for resampling said digital data, wherein each successive sample of the resampled digital data corresponds to a successive position of said reversible drive and the distance between each of said successive positions is a constant amount.","In a further embodiment of the computer program product of the present invention, each successive sample of each of said one or more groups of identified portions of data corresponds to a successive sample position of said reversible drive.","In one embodiment, the reversible drive changes its direction of travel (such as its direction of rotation) while the data is acquired.","In another embodiment of the computer program product of the present invention, the computer program product further includes computer program code means for processing at least one of said groups of identified portions of data to produce data representative of one or more vibration signatures.","Said computer program code means includes one or more computer program code means selected from the group consisting of:","computer program code means for accumulating the average, in the time domain, of the data comprising one of said groups;","computer program code means for accumulating the average, in the angle domain, of the data comprising one of said groups;","computer program code means for accumulating the average, in the frequency domain, of the data comprising one of said groups;","computer program code means for accumulating the average, in the orders domain, of the data comprising one of said groups;","computer program code means for computing a time synchronised average time waveform of the data comprising one of said groups;","computer program code means for computing a frequency spectrum of a time synchronised average of the data comprising one of said groups;","computer program code means for computing an order tracked frequency spectrum of the data comprising one of said groups;","computer program code means for computing the kurtosis of an accumulated time domain average;","computer program code means for computing the kurtosis of an accumulated angle domain average;","computer program code means for computing the kurtosis of a time synchronised average time waveform; and","computer program code means for computing a demodulated frequency spectrum of the data comprising one of said groups.","Directional Normalisation","For the successful analysis of vibrations in reversible drives, it is advantageous that samples in the forward and reverse directions are separated and processed individually. This is due to the existence of differing speed and loading conditions in the forward and reverse directions. For the specific case of gears, different teeth faces are in contact when moving or rotating in different directions.","A fundamental limitation in vibration analysis of reversing drives is the time available to collect data in a particular direction before the drive reverses. A solution that permits data acquisition whilst the equipment is in commercial operation is to separate the samples collected into the forward and reverse directions and then group together all the samples collected for each direction of travel. This process is referred to as \u201cdirectional normalisation\u201d. For the case of equipment that changes direction in a number of different orientations, the data is direction normalised into each direction or orientation separately.","Speed Variations and Fluctuation","It is also necessary to detect the rotational speed of the shaft of interest and normalise speed fluctuations. Minor speed fluctuations are of minimal effect, provided that the data is sampled in or transformed into the angle domain. TSA and Order Tracking require a fixed number of samples per revolution, in the angle domain, so that each sample corresponds to a specific position on the shaft. If the shaft rotational speed changes, and the data is collected in the time domain, the frequency spectrum shows smeared spectral components, particularly for the higher shaft orders. On the other hand, a frequency spectrum of data collected in the angle domain will maintain sharp peaks irrespective of fluctuations in speed. Smearing of spectral components occurs because the data samples collected in the time domain do not correspond to a specific position on the shaft that is generating the vibration, but rather to a time from the beginning of the shaft rotation.","The foregoing description concerns TSA performed on rotating machinery by ensuring the data is sampled or transformed into the angle domain. This concept can equally be applied to equipment that moves in any other fashion. Essentially the data must be sampled or transformed into the position domain, where the position relates to a physical point in the cycle rather than a time from the beginning of the cycle. For example if a piece of equipment moves in a linear fashion it would be important that the data is either sampled or transformed into the linear domain such that each sample relates to a specific distance from the beginning of each cycle.","The effects of varying speeds of operation, as opposed to mere speed fluctuations, can be substantially eliminated by the identification and use of constant speed portions of the data. It is particularly beneficial in most cases to use constant speed data because the system dynamics remain the same at a particular speed. However, in some cases, it may be beneficial to analyse data collected during periods of acceleration and\/or deceleration. This data can also be speed normalised and\/or direction normalised and then processed by means of various techniques.","Data Sampling and Resampling with Interpolation","Two methods of obtaining vibration signals in the angle domain include sampling the data in the angle domain directly, by means of a phase locked frequency multiplier, and resampling of vibration data originally sampled in the time domain.","A phase locked frequency multiplier adjusts the sampling frequency in sympathy with changes in the shaft rotational frequency and attempts to collect the same number of sample points for each revolution of the shaft. The sampling frequency is effectively synchronised with the frequency of the gear rotation to compensate for machine speed increases or decreases. Thus, a sufficient number of equally spaced pulses, in the angle domain, can be generated for each revolution of the gear. The required sampling frequency is determined by the time between the pulses. As the shaft speeds up, and the time between each pulse becomes shorter, the sampling frequency increases at a suitable rate to maintain the same number of data samples per revolution. The phase locked technique can also be applied to situations where the shaft of interest can not be accessed but another shaft in the gear train can. In such a case, a suitable frequency multiplier is selected to produce a pulse train corresponding to the shaft of interest. One potential problem with the phase locked technique is the difficulty of generating more than a few pulses per revolution on equipment in commercial operation because of the shaft of interest not being easily accessible and there being an insufficient number of revolutions of an appropriately accessible shaft. Thus, it is best to incorporate the device at the design stage. Furthermore, if changes in speed occur too quickly, the phase detector may not be able to track the changes in shaft speed fast enough. The time lag that results when changes in frequency or phase occur creates errors that limit the accuracy of the averaged time signal. Other potential disadvantages include susceptibility to false triggering and a finite time necessary to lock on to the input signal that can often be too long. The result is that only a small proportion of a large number of samples can be used for time synchronous averaging. This is further exacerbated for the case of reversing machinery with a particularly short cycle time.","A simpler and more accurate method of allowing for variations in rotational speed is to digitally resample the data acquired at a fixed sampling rate so that each sample corresponds to a specific angular position on the shaft of interest. This effectively results in a variable sampling rate that changes with changes in the rotational speed of the shaft to ensure a fixed number of sample points for each revolution of the shaft. An advantage is that this method does not require additional hardware apart from a standard data acquisition device that samples at a constant rate and a digital computer to post process and resample the data. Resampling of the data can occur as data is acquired (i.e. online, with the use of buffering) or offline. Offline resampling allows more time for filtering and processing to remove interference and noise in the signal. An advantage of offline resampling is that more recorded data can be processed and more revolutions can be used in the averaging process. The major advantage of this method is the ease with which the pulse sequence can be manipulated to perform an average on a hidden shaft. Simple linear interpolation can be applied to determine the new arrival times of the pulse train as opposed to complex loop filters required for the phase locked loop frequency multiplier.","It is imperative that the spectral characteristics, which describe the dynamic nature of the signal, are preserved in the conversion from the time domain to the angle domain. This can be achieved by using linear interpolation to determine the desired time from the reference pulse to each desired sample, which is a suitable method, provided the function being interpolated is highly band limited. Together with the desired resample times (corresponding to specific angle positions), interpolation techniques are used to resample the vibration data. There are a number of different interpolation techniques that can be applied. Increasing the order of interpolation decreases the amplitude of side lobes, thus producing a better stop band performance, a flatter pass band, and a sharper cut off rate. The cubic function provides a good frequency response, although the higher order increases computation times.","Signal Processing","A number of different known signal processing techniques can be applied to the vibration signal(s) after they have been directionally normalised and\/or speed normalised. Time synchronous averaging (TSA), Order Tracking and Demodulation are some of the techniques applied to the directionally normalised data. It will be apparent to those skilled in the art that variations to the processing of appended or grouped directionally normalised data can be made without departing from the scope and spirit of the invention. In particular any known signal processing techniques may be used in conjunction with or in addition to those described herein.","Time Synchronous Averaging (TSA)","Time Synchronous Averaging produces a cumulative average of a signal in the angle domain. The technique can also be applied to produce a cumulative average of a signal in either the time domain or the position domain. It is preferable to sample or resample the signal in the position domain (angle domain for rotating shafts) to ensure that each sample relates to a specific location in the cycle rather than a set time from the beginning of the cycle. If the data is sampled in the time domain and the speed of the drive fluctuates, smearing of the frequency spectrum will occur. However, if the data is sampled or resampled into the position domain, the smearing of the frequency spectrum will be minimised, if not eliminated. TSA requires a reference trigger that is synchronous with the particular cycle being analysed to determine the beginning of each sampling window. The reference trigger may be a single trigger relating to the beginning of every cycle or a multitude of triggers, each relating to a specific position in the cycle. In vibration analysis, TSA enhances the synchronous vibration components, whilst the non-synchronous components and noise are substantially reduced. Isolation of a specific machine component such as an individual roll on a paper machine or a specific shaft in a complex gearbox is thus possible and the effects of external excitation such as forcing frequencies from adjacent machines are minimised. As a consequence, TSA has proved to be successful for detection of repetitive shaft synchronous faults such as shaft cracks, misalignment, unbalance and tooth damage. However, when conducted over one revolution of a shaft, TSA averages out most frequencies associated with bearing faults due to the fact that such faults are not synchronous with the shaft rotation. By comparison, Order Tracking does not remove non-synchronous frequencies and will therefore show bearing faults.","In TSA, uniformly distributed wear (i.e. where the tooth profile remains unmodified) only increases the tooth-meshing frequency, and its harmonics, and does not give rise to side bands. Non-uniformly distributed faults will give rise to components at other frequencies, including low harmonics caused by periodically repeated impulses, and side bands that in turn cause amplitude and frequency modulation to occur. Furthermore, TSA may produce a \u2018ghost frequency\u2019, which is essentially a clean line that appears in the frequency domain after performing a Fast Fourier Transform (FFT) on the time domain data and does not correspond to any known components of the shaft. The \u2018ghost frequency\u2019 is believed to be due to the type of cutter used in the manufacture of gears.","When conducting TSA with an averaging window of one revolution, the frequency spacing between the lines of the spectrum is always the rotational frequency of the shaft, or one order. Thus, the resolution of the spectrum can not be improved by increasing the sample rate\u2014this will only improve the maximum order that can be represented. If a higher resolution is required, the average should be conducted over more revolutions. For example, if a two-revolution window is used for the average, the frequency spacing in the spectrum will be half an order.","Order Tracking","Order Tracking is similar to TSA in that a frequency response analysis of data in the angle domain is involved. However, Order Tracking differs from TSA in that signal averaging occurs in the frequency or orders domain, after transformation of the data by means of an FFT, rather than in the time or angle domain. Order Tracking is different to Order Normalisation in that the analysis is conducted in the angle domain, rather than in the time domain. Order Tracking can successfully detect a multitude of problems, including lubrication problems, unbalance, misalignment and bearing faults. Essentially, Order Tracking can be used in the same way as standard frequency analysis on data collected in the time domain. The main advantages of Order Tracking are that it allows for speed fluctuations and that vibrations are always reported relative to the shaft rotational speed.","In an orders spectrum, orders or harmonic components remain fixed in position despite speed changes or fluctuations. This constitutes a clear advantage when comparing the characteristics of variable speed machines over a period of time. The disadvantage of an orders spectrum is that fixed frequency components can move, thus making it difficult to recognise speed dependent amplitude changes. In particular, as resonance is directly related to shaft speed, the resulting amplitudes will remain fixed in the time domain but not in the angle domain. These frequencies move when plotted on an orders spectrum, whereas, if plotted on a frequency spectrum their position would remain fixed. This is especially obvious in an orders waterfall display.","Demodulation","Modulation is the variation in the value of a parameter which characterises a periodic oscillation. Thus, amplitude modulation of a sinusoidal oscillation is a variation in the amplitude of the sinusoidal oscillation. Phase modulation of a sinusoidal oscillation is a variation in the phase of the sinusoidal oscillation. Amplitude and phase modulation occur in vibration signals from most equipment.","Demodulation is the process of extracting the original modulating signal(s). Consequently, demodulation is necessarily incorporated in the processing of the appended data.","Typically, in vibration analysis, demodulation is used to-predict incipient failure in bearings and gears. The most common techniques incorporate band pass filtering and enveloping to assist in the detection of such faults.","The Kurtosis","Calculation of the Kurtosis, otherwise known as the normalised fourth statistical moment, is a useful analysis technique for determination of the condition of a gearbox. The Kurtosis, K, may be calculated using the following formula:",{"@attributes":{"id":"p-0134","num":"0133"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"K","mo":"=","mfrac":{"mrow":{"mo":["[","]"],"mrow":{"mo":"\u2211","msup":{"mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["X","i"]},"mo":"-","mi":"M"}},"mn":"4"}}},"msup":{"mi":"NS","mn":"4"}}}}},"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":["where: N=number of samples","\u2003M=mean value","\u2003S=standard deviation","\u2003X=isample"]}},"The Kurtosis is larger for cases where single large peaks exist, as opposed to a normal gaussian distribution for which a kurtosis of three can be expected. Thus, the Kurtosis can be used as an indication of the extent to which large peaks dominate the time waveform. The actual value should be monitored and compared to the value calculated when the gearbox was new or at least in good condition.","Use of the Kurtosis to detect a fatigue crack in a gearbox has been successfully demonstrated. The Kurtosis was calculated after enhancement of the TSA time waveform by band pass filtering around the dominant gear mesh harmonic and subsequent removal of the meshing harmonic. The resulting time waveform had a distinct peak at the location of the fatigue crack and the Kurtosis value rose from three to around seven.","General Embodiment",{"@attributes":{"id":"p-0137","num":"0140"},"figref":"FIG. 1"},"Vibration data from a transducer, such as an accelerometer, and shaft speed, direction and position data from one or more transducers, such as a tachometer, are acquired at step .","At step , a data processing trigger is extracted from the acquired data. The trigger relates to a reference point on the shaft of interest and facilitates further data processing. Specifically, the trigger facilitates identification of portions of the data relating to each direction of travel of the shaft of interest and identification of constant speed data. Determination of the trigger and direction of rotation of the shaft of interest are further described later in this document.","At step , the data is speed normalised. This includes resampling of the data for transformation from the time domain into the angle domain. At the same time, samples relating to periods of acceleration and deceleration are identified and eliminated from the data. Both resampling and determination of constant speed data are further described later in this document.","Steps ,  and  constitute the process of direction normalisation. At step , portions of the speed normalised data in the angle domain, relating to the forward and reverse directions, are identified. Then, at step , successive portions of data relating to the forward direction are grouped together by appending successive portions to an accumulation of previous data portions also relating to the forward direction. Similarly, at step , successive portions of data relating to the reverse direction are grouped together by appending successive portions to an accumulation of previous data portions also relating to the reverse direction. The portions of data are grouped in such a way that the first sample of each successive portion appended corresponds to the position of the reversible drive immediately following the position of the reversible drive corresponding to the last sample of the data portion last appended.","At steps  and , the data grouped in the forward and reverse directions, respectively, undergoes signal conditioning. Signal conditioning of the data is performed to eliminate the effects of aliasing and spectral leakage. During resampling, the number of samples is increased relative to the number of original samples (i.e. upsampling using cubic interpolation). A digital low-pass filter is thus applied to the data to remove any frequencies above those that can be accurately represented by data sampled at the original sampling rate, in accordance with the Nyquist criterion. However, aliasing errors due to resampling will be attenuated by the time synchronous averaging process. The resampled waveform is filtered by a low pass 9order Butterworth filter to remove frequencies above half the original sampling frequency, thus avoiding errors due to aliasing.","Leakage occurs when performing a Fast Fourier Transform (FFT) and is due to the fact that the data is sampled over a finite time period and the frequency components are cut in mid-cycle. Leakage is reduced by the technique known as windowing the signal. Windows used include Hanning, Hamming, seven Term B-Harris, four Term B-Harris, Flat Top, Blackman, Exact Blackman and Blackman-Harris.","At steps  and , the data accumulated in the respective directions undergoes signal processing. The signal processing typically comprises standard vibration analysis techniques. One technique of analysis involves averaging the filtered time waveform in the time domain to produce a Time Synchronised Average. Then, an orders FFT is computed on the digital TSA time waveform, thus identifying the spectrum of frequencies that are integer multiples of shaft rotation frequency. The Kurtosis can also be computed, using the data of the digital TSA time waveform.","Another technique of analysis involves use of the resampled data to produce an Order Tracked spectrum that is averaged in the frequency domain. This requires transformation of the data to the frequency domain, by means of an FFT, prior to signal averaging.","At steps  and , the data processed in the forward and reverse directions, respectively, is output to a display monitor or printer for human visual analysis. The interpretation of vibration signals is a highly skilled art that requires extensive machinery knowledge and a detailed understanding of mechanical vibrations. Certain known correlations can be applied to predict incipient failures. For example, a specific type of fault condition may be identifiable by a specific vibration signature. Furthermore, the extent of existing damage may be related to the magnitude of one or more specific frequency components.","However, it will be apparent to those skilled in the art that variations to the manner of output of the processed data can be made without departing from the scope and spirit of the invention. For example, the processed data may undergo further processing to facilitate classification of predefined fault conditions by machine-based correlation of acquired vibration signatures with stored vibration signatures, where characteristics of the stored signatures are representative of specific fault conditions.","The further processed data can be used to provide alarm levels by means of visual and\/or audible indicators. The alarm levels can be categorised into warning, danger and shutdown categories. The shutdown category may be the level at which the machine is automatically shutdown to avoid catastrophic failure.","Direction and Trigger Determination",{"@attributes":{"id":"p-0149","num":"0152"},"figref":"FIG. 2"},"A software program is used to calculate the arrival times of each pulse by locating the leading edge (positive slope) of each pulse. Linear interpolation is used to more accurately determine the arrival times. The time between a pulse from laser A and a successive pulse from laser B (dt) is determined by the difference between the arrival times of those pulses. However, when a change in direction occurs a pulse from laser A will be followed by another pulse from laser A before a pulse from laser B occurs. Thus, a valid time between two consecutive pulses must always correspond to dt as opposed to dy or dx. In other words the time being compared must be less than half the rotational speed of the reference shaft, hence dt<dT\/2. After determining that the correct dt is being used the direction is determined by the sign of dt. If dt is negative, rotation of the shaft is in one direction and if dt is positive, rotation of the shaft is in the opposite direction.","The software program mechanism used to determine dt, rather then dx or dy is a set of \u201cif\u201d statements that find each case where dt<dT\/2. The arrival times are evaluated in a logical sequence to ensure the correct pulse arrival time is found in as short a time as possible. The relative position of a pulse from laser B will only change if there is a change in direction where the shaft stops between the two pulses. In order to avoid the search for the reference position for every segment of constant speed, the software program remembers the position for the next comparison.","It is important to note that the first laser (laser A) is used to determine the beginning and end of each revolution. The software program uses this information to convert the vibration data from the time domain to the angle domain. It is critical this pulse is accurate and repeatable, as the angle domain data resampled from each revolution must correspond to the exact same position on the shaft. The second laser (laser B) is only used to determine direction and has nothing to do with resampling of the data.","If the shaft of interest is buried in a gearbox, a determination of the shaft arrival time is more difficult. The arrival times of the buried shaft are calculated using the first reference pulse to indicate the beginning of the revolution. The gear ratio is then used to determine exactly how many revolutions of the reference shaft relates to one revolution of the shaft of interest. This ratio is used with the reference shaft arrival times to linearly interpolate the arrival times of the shaft of interest. In cases where the reference shaft changes direction more than once, it is important to track the relative position of the buried shaft and ensure the first sample always corresponds to the same position on the buried shaft.","The foregoing method of determining arrival times of a buried shaft can be applied to perform TSA on any component that has a rotational speed, which is either a fraction of rotational speed, an integer multiple of rotational speed or a non-integer multiple of rotational speed. A good example of where this may be applied is to a bearing cage rotation. The rotational speed of the cage can be directly related to the rotational speed of the reference shaft, therefore a TSA could be performed on the bearing cage provided limit slip occurs between the balls and the races.","Constant Speed Determination","The software program compares each revolution time (dT) to identify data portions of constant speed. If the revolution time dTn, for a particular revolution n, is within a certain percentage of the revolution time dTof the previous revolution n\u22121, the speed is determined to be constant. The time for each successive revolution is compared with that of the previous revolution until the percentage variation is greater than a certain threshold. This threshold can be set in the software program and typically has a default of 1%. A minimum of three consecutive constant speed revolutions are required for resampling. Thus, in the absence of three consecutive revolutions of constant speed, the relevant samples are discarded and the program advances to the next arrival time. This process is repeated until all the arrival times of constant speed revolutions are determined.","Resampling","Samples of vibration data collected over each revolution, for each constant speed portion with a fixed sample rate, are resampled to provide a fixed number of samples per revolution. The minimum number of samples per revolution to avoid aliasing is the quotient of original sampling rate (H) and the minimum shaft speed (H). After resampling of each constant speed portion, using cubic interpolation, all the portions relating to each particular direction of travel of the drive are appended together. This results in a continuous set of samples in respect of each direction of travel, with a fixed number of samples per revolution. The total number of samples in each direction of travel is the number of samples per revolution multiplied by the number of revolutions of constant speed identified in each respective direction. These samples sets are treated as continuous data that can be processed using various vibration analysis techniques.","Software Implementation","The software program was developed in the Matlab and Labview environments. Labview was primarily used to interface the Matlab script files with the data acquisition card used in the Personal Computer (PC).","Tables 1 to 7 at the end of the Detailed Description contain Matlab script files used to practice embodiments of the invention:","Table 1: Arrival Times Script 1 (main program)","Table 2: Arrival Times. Script 2 (function used in Arrival Times Script 1)","Table 3: Shaft of Interest Arrive Time Script","Table 4: Resampling vibration data into forward and reverse directions script","Table 5: Pulse reference check script (direction determination)","Table 6: Resampling script (including interpolation)","Table 7: Kurtosis Calculation Script","Further Detail Relating to the General Embodiment",{"@attributes":{"id":"p-0166","num":"0169"},"figref":["FIGS. 26 to 30","FIG. 1"]},"The data is acquired in blocks, the size of which are selected to ensure that data relating to at least two complete revolutions are captured in each block. An SD-Section is a section of data that is continuous in the time domain and which relates to a specific speed and acceleration range and direction. The following variables are defined:\n\n",{"@attributes":{"id":"p-0168","num":"0178"},"figref":["FIG. 26","FIG. 1","FIG. 26","FIG. 1","FIG. 26","FIG. 1"],"b":["110","120","101","104","105","119","110","201","204","120"]},"At step , the following variables are each initialised to zero:\n\n","If a direction is not initialised, the SD-Sections for that direction will not be collected.","The reference trigger data is collected at step  and the directional trigger data is collected at step . The actual vibration data for channels ,  and N are acquired at steps ,  and , respectively. The number of channels for acquiring actual vibration data is typically limited by the data acquisition hardware or the data processing requirements. Steps  to  and  typically occur simultaneously due to parallel implementation in of the sampling hardware for each channel.","At step , the data acquisition block number is incremented for collecting a subsequent set of samples at steps  to  and step .","At steps  and , the Kblock of data is read for the reference and directional triggers, respectively.","At steps  and , the tachometer arrival times A(t) and A(t), for tachometers  and , respectively, are computed for the Kblock of data. These values are used to determine the speed, acceleration and direction for each revolution. Processing continues at step  of  after step  of , at step  of  after step  of , and at step  of  after step  of .",{"@attributes":{"id":"p-0175","num":"0189"},"figref":["FIGS. 27 and 28","FIG. 29","FIG. 1","FIGS. 27 and 28"],"b":["361","371","381","362","372","382","142","130"]},"Referring firstly to , the trigger information is interpreted to determine the direction of the revolutions that occur during the Kblock, at step . Step  follows on from step  of .","Then, at step  the total number of revolutions in the Kblock (R) is calculated. This value is used to track the total number of revolutions in each direction and provides information that is required to determine the relative position of any hidden shafts.","If the revolutions in the Kblock are in the forward direction, at decision step , the number of revolutions in the forward direction is incremented by the number of revolutions in the current block, at step . Alternatively, if the revolutions in the Kblock are in the reverse direction, at decision step , the number of revolutions in the reverse direction is incremented by the number of revolutions in the current block, at step . For both foregoing cases, processing continues at step  of . Determination of the trigger and direction of rotation of the shafts of interest are further described elsewhere in this document.","Referring now to , the trigger information is interpreted to determine the speed and acceleration of the revolutions that occur during the Kblock, at step . Step  follows on from step  of .","The speed, acceleration and directional information are analysed at step . If the current direction is not required and\/or the speed and acceleration values are not within the desired range (NO), at decision step , the Kblock for each channel is deleted from memory at step . Then, the data acquisition block number (K) is incremented at step . Processing subsequently continues at steps  and , of , for processing of the next block (K+1).","The first time that the data collected falls within the specified speed and acceleration range and is in a direction that is required (YES), at decision step , the data is stored in memory. Every subsequent block of data that is adjacent in the time domain to the previous block of data within the desired speed, acceleration and direction parameters will be appended to the end of the previous block at step .","This process results in a continuous segment of data (in the time domain) that is within the acceleration, speed and directional requirements. This segment is referred to as an SD-Section (Speed & Direction Section). When the consecutive blocks no longer have the same direction and\/or no longer fall within the same speed and acceleration conditions a new SD-Section is started. This process is controlled by steps ,  and .","Step  checks whether the previous valid block was adjacent (in the time domain) to the current block. If not, the previous SD-Section is exported at step  to step  in  for additional processing. Thereafter, the SD-Section number (L) is incremented at step  and continues at step .","After each block is appended to the current SD-Section at step , the number of useable revolutions of each shaft is computed at step . The number of useable revolutions of the hidden shafts is computed using an algorithm that tracks the shafts relative position and determines the number of complete and continuous revolutions of the hidden shaft.","At step  the actual number of revolutions of each shaft in each direction is tested. If the number of lo revolutions in the current direction exceeds the total number required for that direction (YES), the direction parameter will be changed at step  to \u201cno longer required\u201d. This signifies to the control program not to process any more data in the particular direction as sufficient revolutions have been collected.","Next, at step , it is determined whether sufficient revolutions for each direction and each shaft been been collected. If YES, the process stops collecting data at step  and moves on to step  of , where the program waits for all the SD-Sections to be resampled and appended to the appropriate SDNU (Speed Direction Normalised Unit). If NO, additional revolutions are still to be collected and the block number (K) is incremented at step . Processing then continues at steps  and , of , in respect of the next block.",{"@attributes":{"id":"p-0187","num":"0201"},"figref":["FIG. 29","FIG. 27"],"b":"307"},"At step , the arrival times (ie. the times at which a shaft passes the shaft's original trigger point) are computed for each of the shafts.","At steps ,  and  the current SD-Section data for each respective channel is recalled from memory. Then, at steps ,  and , the SD-Section data for each respective channel is resampled into the angle domain. The resampling process is further discussed elsewhere in this document.","At steps ,  and , the time domain SD-Section data for each respective channel is deleted from memory, leaving only the resampled angle domain SD-Section data in memory.","Steps ,  and  of , steps  to  of  and steps ,  and  of  constitute the process of Direction Normalisation. The direction of the data in the current SD-Section was identified at steps  to  of .","Returning now to , the successive portions of data relating to the same direction are grouped together by appending successive portions to an accumulation of previous data portions also relating to that direction, at steps ,  and . The data in this format is referred to as a Speed Direction Normalised Unit (SDNU).","Similarly, when an SD-Section has a different direction (ie. forward in the first case and reverse in the second case), as shown in  as steps  and , the successive portions of data relating to that direction are grouped together by appending successive portions to an accumulation of previous data portions also relating to that direction.","A SDNU will exist for every channel and every direction available for that channel. The portions of data are grouped in such a way that the first sample of each successive portion appended corresponds to the position of the reversible drive immediately following the position of the reversible drive corresponding to the last sample of the data portion last appended.","The synchronous components of each SDNU are continuous because each SD-Section is continuous in both the angle and time domains and when each SD-Section is appended to form an SDNU, the angle domain continuity (ie. synchronous components) is maintained. As explained elsewhere in this document, such continuity is imperative for the process of time synchronous averaging.","The appending of SD-Sections to create an SDNU does, however, cause discontinuities in any non-synchronous components. These discontinuities occur at the point where two SD-Sections are appended and occur as a result of non-synchronous components not repeating over each revolution. Hence, the phase of these non-synchronous components will change when a break in the time domain data collection process occurs (ie. when SD-Sections are appended).","If all the components of the signal are not continuous, the order tracking or demodulation process may result in spurious components in the FFT spectrum. This is due to the fact that the FFT process assumes a signal to be continuous over the period of the signal analysed.","At steps ,  and  the length of the current SD-Section is written to the header of that SD-Section. This information is used to track the location of any discontinuities and can either be used to avoid discontinuities when processing the SDNU's, smooth the discontinuities, remove the discontinuities, or understand the effect of the discontinuity on the FFT. Subsequent processing continues at step  of .","Referring now to , the program waits for all revolutions in every required direction on every shaft to be collected & resampled into the angle domain, at step . This program step is subsequent to step  of . When all the data is available, signal conditioning occurs on every SDNU at steps  and  for the respective directions. Signal conditioning of the data is performed to eliminate the effects of aliasing and spectral leakage. During resampling, the number of samples is increased relative to the number of original samples (ie. upsampling using cubic interpolation). A digital low-pass filter is thus applied to the data to remove any frequencies above those that can be accurately represented by data sampled at the original sampling rate in accordance with the Nyquist criterion. However, aliasing errors due to resampling will be attenuated by the time synchronous averaging process. The resampled waveform is filtered by a low pass 9order Butterworth filter to remove frequencies above half the original sampling frequency, thus avoiding errors due to aliasing.","Leakage occurs when performing a Fast Fourier Transform (FFT) and is due to the fact that the data is sampled over a finite time period and the frequency components are cut in mid-cycle. Leakage is reduced by the technique known as windowing the signal. Windows used include Hanning, Hamming, seven Term B-Harris, four Term B-Harris, Flat Top, Blackman, Exact Blackman and Blackman-Harris.","At steps  and  of  and steps  and  of , the data accumulated in the respective directions undergoes signal processing. The signal processing is typically comprised of standard vibration analysis techniques. One technique of analysis involves averaging the filtered time waveform in the time domain to produce a Time Synchronised Average. Then, an orders FFT is computed on the digital TSA time waveform, thus identifying the spectrum of frequencies that are integer multiples of shaft rotation frequency. The Kurtosis can also be computed, using the data of the digital TSA time waveform.","Another technique of analysis involves use of the resampled data to produce an Order Tracked spectrum that is averaged in the frequency domain. This requires transformation of the data to the frequency domain, by means of an FFT, prior to signal averaging.","At steps  and  of  and steps  and  of , the data processed in the forward and reverse directions, respectively, is output to a display monitor or printer for human visual analysis. The interpretation of vibration signals is a highly skilled art that requires extensive machinery knowledge and a detailed understanding of mechanical vibrations. Certain known correlations can be applied to predict incipient failures. For example, a specific type of fault condition may be identifiable by a specific vibration signature. Furthermore, the extent of existing damage may be related to the magnitude of one or more specific frequency components.","However, it will be apparent to those skilled in the art that variations to the manner of output of the processed data can be made without departing from the scope and spirit of the invention. For example, the processed data may undergo further processing to; smooth any discontinuities within SDNUs, remove discontinuities within SDNUs, or to facilitate classification of predefined fault conditions by machine-based correlation of acquired vibration signatures with stored vibration signatures, where characteristics of the stored signatures are representative of specific fault conditions.","The further processed data can be used to provide alarm levels by means of visual and\/or audible indicators. The alarm levels can be categorised into warning, danger and shutdown categories. The shutdown category may be the level at which the machine is automatically shutdown to avoid catastrophic failure.","Shaft Tracking",{"@attributes":{"id":"p-0206","num":"0220"},"figref":"FIGS. 31","b":["32","33"]},"The zero degree position of the buried shaft is the point at which the reference shaft is at its zero degree position for the first time in the data acquisition window. The zero degree position of the buried shaft will not always occur when the reference shaft is at its zero degree position because the buried shaft rotates at a different speed to the reference shaft, and it is for this reason that it is imperative that the number of forward and reverse rotations of the reference shaft are tracked to determine the nett position of the buried shaft. The nett position of the buried shaft references where the zero degree location of the buried shaft occurs in relation to the reference shaft. Tracking of the zero degree position of the buried shaft ensures that, in cases where the shaft changes direction more than once, the first sample after resampling into angle domain will always correspond to the same position of the buried shaft.","The inputs to this portion of program code are the arrtime array, the Nett Revolutions at end of First Valid Cycle, the Speed Ratio and the Directionality. The arrtime array is an array of arrival times for the reference shaft (trigger shaft) that relate to the zero degree position of the reference shaft in the SD_Section. As stated elsewhere in this document the SD_Section is a section of vibration data that is collected under specific desirable speed, acceleration and direction conditions. The variable Nett Revolutions at end of First Valid Cycle represents the nett revolutions that the reference shaft (trigger shaft) has undergone from the beginning of the entire data acquisition process. This includes the first cycle in the current SD_Section (ie. the cycle from the first arrival time to the second arrival time). The Speed Ratio is the ratio of the buried shaft speed to the reference shaft speed (Buried Shaft Speed\/Reference Shaft Speed). The directionality input is a boolean control variable that states the direction of rotation of the SD_Section: True for Forward and False for Reverse.","Referring to , the directionality of the current SD_Section is read and interpreted at step . If the current direction is forward (True), case  outputs a value 1 and if reverse, case  outputs a is value of \u22121. The output value is used at step  to set up an array of indexes that relate the arrival times (arrtime) to the position of the buried shaft. This is achieved by multiplying the relative rotation position of the reference shaft by the Speed Ratio. The indices that relate the arrival times to the relative position of the buried shaft are then sent to steps  and .","The code between steps  and  (comprising steps  to ) essentially extracts the maximum and minimum values in the array. These maximum and minimum values are then used at step  to determine the beginning and end of the SD_Section. Whether the maximum value is the beginning or the end of SD_Section depends on the directionality of the current SD_Section. If the direction is forward, case  is true and case  is processed to determine if the reference to the first revolution should be incremented by 1 or not. If the remainder of the division at step  is zero then the first value will not need to be incremented at step , however, if the remainder of the division at step  is not zero then the first value will need to be incremented by 1 at step . This is due to the fact that the result of the integer quotient at step  is 1 below the first complete revolution of the buried shaft, in the case. A similar process is followed at step  if the directionality of the current SD_Section is reverse.","The output from step  is a start and end integer that is used in step  to generate an array of integers that relate to the zero degree position of the buried shaft. These values are used to interpolate the results of step  and to find the arrival times of the zero degree position of the buried shaft.","At case , the cluster containing the arrival times and the index of relative positions of the buried shaft will be reversed if the direction of the current SD_Section is reverse. If the direction of the current SD_Section is forward then there is no need to reverse the cluster as the relative positions of the buried shaft are already in ascending order.","The final step in the program is to interpolate the arrival times and relative positions of the buried shaft to determine the times at which the buried shaft is at a zero degree position. The buried shaft arrival times are referred to in the program code as the shaft of interest arrival times (shoiarrtime) and are later used in conjunction with the vibration data sampling times to resample the vibration data into the angle domain where the angle domain for these cases relates to the buried shaft (ie. 0 to 360 degrees of the buried shaft).","Harrison Lathe Example","TSA was performed on a 30-year-old Harrison lathe, using an embodiment of the invention, to demonstrate the effect of minor faults on the time waveform and frequency spectrum.","The gearbox of the lathe includes a drive shaft, an intermediate shaft and an output shaft with three gears thereon. The first analysis is of the reverse direction side of gear , which is located on the output shaft and has 49 teeth. Gear  is the output gear for the most common machining speed in the gearbox and therefore represents the most well used gear in the gearbox.",{"@attributes":{"id":"p-0216","num":"0230"},"figref":["FIGS. 3 and 4","FIG. 4","FIG. 3","FIG. 4","FIG. 4"],"b":["2","310","410","420","430"]},"Deviations from a perfect tooth profile result in smeared and uneven peaks in the TSA time waveform due to the contact between the two meshing teeth no longer being smooth. Additional vibrations are introduced as the uneven surfaces slide past each other. The TSA waveform of , after 500 averages, clearly shows a spike in energy between 180 and 200 degrees and  shows the teeth that these spikes correspond to.","The teeth corresponding to the spike in energy between 180\u00b0 and 200\u00b0 demonstrate characteristics that likely contribute to the increased vibration magnitude seen in . The first is a very deep groove , as shown in . As the gear box has no clutch, and the gears simply slide into each other during changing, it is most likely that the groove  resulted from a gear change that occurred whilst the gears were still rotating. It appears that the corner of the meshing gear has collided with this gear, whilst trying to lock mesh. As rotation continued, and the gear moved further in towards full mesh, the angle on the tooth shown in  has been scratched. This represents non-localised adhesive wear. Localised adhesive wear damage  and  and rolling contact fatigue damage  is also shown in . The wear likely contributes to the spikes of energy shown in .",{"@attributes":{"id":"p-0219","num":"0233"},"figref":"FIG. 7"},"A spectrum for a perfect tooth profile would approximate a sine wave with frequency corresponding to the tooth meshing frequency or one of its harmonics. However, as no gear is perfect, there will always be deviations from the perfect profile. The time synchronous average of gear  in the reverse direction, after 500 averages, is shown in . Gear  has 81 teeth and is also located on the output shaft.  has a much smoother profile, compared to , and provides a good example of a time waveform for a gear in relatively good condition.","The TSA time waveform of  has very distinct peaks on either side of 100\u00b0. The tooth just before 100\u00b0 is the 22tooth, therefore the peaks  and  on either side correspond to the 21and 23teeth, respectively. Distinct rolling contact fatigue damage or possibly hard particle ingress damage on the 21tooth  and the 23tooth  is shown in .  shows an enlarged view of rolling contact fatigue damage or possibly hard particle ingress damage  and  sustained on the 23tooth  of . The 22tooth, located between the 21tooth  and the 23tooth  appears to be in good condition.","The TSA time waveform in  also shows a distinct peak  corresponding to the 9tooth. This peak is most likely attributable to the small hard particle indentation  shown in . It is possible that the indentation was caused by a piece of the mating gear that may have been chipped off whilst attempting to change gears in motion.",{"@attributes":{"id":"p-0223","num":"0237"},"figref":"FIG. 12","b":["3","3"]},"Friction Winder Gearbox Example","A further analysis was conducted on a six-month-old gearbox of a friction winder capable of lifting 10 tonnes of ore from an underground gold mine. The skip is counter balanced with a 10 tonne mass, therefore the gearbox is under the greatest load when the skip is empty and travelling down.","The analysis was of the input shaft drive. An accelerometer was initially mounted in the vertical direction above the drive end bearing (output end). The resulting TSA time waveform for the reversing direction, after 500 averages, is shown in , which exhibits distinct peaks  around 90\u00b0. An inspection of the gear, which has 17 teeth, revealed minor defects on the tooth that corresponds to this position. The tooth that corresponds to the peaks  around 90\u00b0 has a large indentation  on the ridge, as shown in .  shows an enlarged view of the indentation  shown in , which most likely occurred during installation of the gear.",{"@attributes":{"id":"p-0226","num":"0240"},"figref":["FIG. 16","FIG. 13","FIG. 16"]},"The orders spectrum for gear  is shown in . It can be seen that the dominant meshing harmonics for gear  are the 4harmonic  and the 5harmonic  of the tooth meshing frequency. This explains why there are so many peaks, in fact there are between 4 and 5 peaks for each tooth. The tooth that corresponds to 180\u00b0 also has a minor defect in that a very small spot exists where minor abrasive wear has occurred. It is further likely that there are defects on other teeth in the gearbox, as there are other definite spikes at 5\u00b0 and 290\u00b0.","Convergence","The optimum number of Time Synchronised Averages corresponds to the minimum number of averages that are required to remove sufficient noise and non-synchronous vibrations and display the essential characteristics of the TSA time waveform. There is a trade off between the number of averages and the cost of data collection. Essentially the more averages that are collected, the longer it will take to collect the data and the greater the cost of performing the analysis will be. This is particularly the case with reversible drives as some data collected whilst the drive is decelerating, changing direction and then accelerating can not be processed.","In practice, the minimum acceptable number of averages will vary according to the characteristics of a particular machine. However, it has been shown that doubling the number of averages reduces the signal to noise ratio by a factor of \u221a2. Thus, the minimum acceptable number of averages will also depend on the gearbox, itself, as the signal to noise ratio is different for every gearbox.","A known algorithm can be used to determine the number of averages necessary before the TSA time waveform begins to stabilise. The algorithm analyses a simplified correlation coefficient between the cumulative average (after N averages) and the cumulative average after N\/2 averages, where N is generally every number of averages that is a power of 2. The algorithm is shown below:","Stop averaging if:",{"@attributes":{"id":"p-0231","num":"0245"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"L","mo":">","mrow":{"mn":"1","mo":"-","mfrac":{"mrow":[{"munderover":{"mo":"\u2211","mrow":{"mi":"j","mo":"=","mrow":{"mi":"N","mo":"-","mn":"50"}},"mi":"N"},"mo":"\u2062","mrow":{"msub":[{"mi":"x","mrow":{"mi":["n","j"],"mo":","}},{"mi":"x","mrow":{"mrow":{"mi":"n","mo":"\/","mn":"2"},"mo":",","mi":"j"}}],"mo":"\u00d7"}},{"munderover":{"mo":"\u2211","mrow":{"mi":"j","mo":"=","mrow":{"mi":"N","mo":"-","mn":"50"}},"mi":"N"},"mo":"\u2062","msubsup":{"mi":"x","mrow":{"mi":["n","j"],"mo":","},"mn":"2"}}]}}}}},"ul":{"@attributes":{"id":"ul0006","list-style":"none"},"li":["where: L=leakage rate (by definition)","\u2003x=jpoint in the current average at n revs","\u2003x=jpoint in the average at n\/2 revs","\u2003N=number of points in the average"]}},"The algorithm was tested by conducting TSA on a noisy gearbox, as more averages are required for the case of a high signal to noise ratio. The algorithm predicted that convergence for a particular gear had occurred after 4 to averages. This was because after 4 averages the leakage factor was 0.037, which is less than a leakage factor of 0.05 as calculated according to the algorithm.",{"@attributes":{"id":"p-0233","num":"0251"},"figref":"FIG. 18"},"In order to determine a more appropriate leakage value, the TSA time waveform correlation coefficient between every average and the TSA after 4000 averages was calculated. As the TSA time waveform approaches that of the 4000 average TSA, the correlation coefficient will approach a value of one. How quickly this occurs indicates the effect each additional average has on the characteristics of the TSA time waveform.",{"@attributes":{"id":"p-0235","num":"0253"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0236","num":"0254"},"figref":["FIG. 20","FIG. 20"]},"The foregoing algorithm assumed that the mean for each set of data points was zero. This assumption was presumably made to simplify the calculation of the correlation coefficient and reduce the computation time. Whilst the foregoing algorithm only analysed the last 50 samples to allow for \u2018droop\u2019, the modified version described hereinafter uses all the sample points in the calculation to ensure that the correlation coefficient is affected by any deviations in the time waveform regardless of where the deviations occur. Furthermore, the modified version of the algorithm described hereinafter eliminates the assumption that the mean value for each set of data is zero.","The modified version of the algorithm is as follows: Stop averaging if:",{"@attributes":{"id":"p-0239","num":"0257"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"L","mo":">","mrow":{"mn":"1","mo":"-","mfrac":{"mrow":[{"munderover":{"mo":"\u2211","mrow":{"mi":"j","mo":"=","mn":"1"},"mi":"N"},"mo":"\u2062","mrow":{"mrow":[{"mo":["(",")"],"mrow":{"msub":{"mi":"x","mrow":{"mi":["n","j"],"mo":","}},"mo":"-","mover":{"msub":{"mi":"x","mrow":{"mi":["n","j"],"mo":","}},"mi":"_"}}},{"mo":["(",")"],"mrow":{"msub":{"mi":"x","mrow":{"mrow":{"mi":"n","mo":"\/","mn":"2"},"mo":",","mi":"j"}},"mo":"-","mover":{"msub":{"mi":"x","mrow":{"mrow":{"mi":"n","mo":"\/","mn":"2"},"mo":",","mi":"j"}},"mi":"_"}}}],"mo":"\u00d7"}},{"msqrt":[{"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"j","mo":"=","mn":"1"},"mi":"N"},"mo":"\u2062","msup":{"mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":"x","mrow":{"mi":["n","j"],"mo":","}},"mo":"-","mover":{"msub":{"mi":"x","mrow":{"mi":["n","j"],"mo":","}},"mi":"_"}}},"mn":"2"}}},{"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"j","mo":"=","mn":"1"},"mi":"N"},"mo":"\u2062","msup":{"mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":"x","mrow":{"mrow":{"mi":"n","mo":"\/","mn":"2"},"mo":",","mi":"j"}},"mo":"-","mover":{"msub":{"mi":"x","mrow":{"mrow":{"mi":"n","mo":"\/","mn":"2"},"mo":",","mi":"j"}},"mi":"_"}}},"mn":"2"}}}],"mo":"\u00d7"}]}}}}},"ul":{"@attributes":{"id":"ul0007","list-style":"none"},"li":["where: L=leakage rate (by definition), typically set to 0.05","\u2003X=j th point in the current average (n revs)","\u2003X=jpoint in the average at n\/2 revs","\u2003N=number of points in the average"]}},{"@attributes":{"id":"p-0240","num":"0262"},"figref":"FIG. 21"},"To confirm validity of the modified algorithm, an analysis of the mean magnitude difference was conducted. This involved calculating the mean difference between each data point and the corresponding data point after 4000 averages. This method demonstrates the difference in the magnitudes of the time waveforms but does not give a particularly good indication of how accurately the essential characteristics are displayed. The correlation coefficient is likely a better indicator, as in most cases it is more important that the characteristics are accurately shown than the magnitudes.",{"@attributes":{"id":"p-0242","num":"0264"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0243","num":"0265"},"figref":["FIG. 23","FIG. 24"]},"As discussed previously, the optimum number of averages required is dependent on the signal to noise ratio and the magnitude of non-synchronous components. These two factors are a function of the actual gearbox under evaluation. The optimum number of averages is therefore dependent on a specific gearbox and an analysis similar to that presented hereinafter should be conducted to determine the optimum number of averages for each individual gearbox.","Computer Implementation","The method for analysing vibrations of reversible drives can be implemented using a computer program product in conjunction with a computer system  as shown in . In particular, the method for analysing vibrations of reversible drives can be implemented as software, or computer readable program code, executing on the computer system .","The computer system  includes a computer , a video display , and input devices in the form of a computer keyboard  and a computer mouse . In addition, the computer system  can have any of a number of other output devices including line printers, laser printers, plotters, and other reproduction devices connected to the computer . The computer system  can be connected to one or more other computers via a communication interface  using an appropriate communication channel  such as a modem communications path, an electronic network, or the like. The network may include a local area network (LAN), a wide area network (WAN), an Intranet, and\/or the Internet .","The computer  includes the control module , a memory  that may include random access memory (RAM) and read-only memory (ROM), communications interface , input\/output (I\/O) interface , a video interface , and one or more storage devices generally represented by the storage device . The control module  is implemented using a central processing unit (CPU) that executes or runs a computer readable program code that performs a particular function or related set of functions.","The video interface  is connected to the video display  and provides video signals from the computer  for display on the video display . User input to operate the computer  can be provided by one or more of the input devices ,  via the I\/O interface . For example, a user of the computer  can use a keyboard as I\/O interface  and\/or a pointing device such as a mouse as I\/O interface . The keyboard and the mouse provide input to the computer . The storage device  can consist of one or more of the following: a floppy disk, a hard disk drive, a magneto-optical disk drive, CD-ROM, magnetic tape or any other of a number of non-volatile storage devices well known to those skilled in the art. Each of the elements in the computer system  is typically connected to other devices via a bus  that in turn can consist of data, address, and control buses.","A data acquisition module (not shown) can also be connected to the bus , either directly or via the I\/O interface . The data acquisition module typically includes multiple input and output channels for simultaneously sampling input signals and delivering output signals.","The method steps for analysing vibrations of reversible drives are effected by instructions in the software that are carried out by the computer system . Again, the software may be implemented as one or more modules for implementing the method steps.","In particular, the software may be stored in a computer readable medium, including the storage device  or that is downloaded from a remote location via the interface  and communications channel  from the Internet  or another network location or site. The computer system  includes the computer readable medium having such software or program code recorded such that instructions of the software or the program code can be carried out.","The computer system  is provided for illustrative purposes and other configurations can be employed without departing from the scope and spirit of the invention. The foregoing is merely an example of the types of computers or computer systems with which the embodiments of the invention may be practised. Typically, the processes of the embodiments are resident as software or a computer readable program code recorded on a hard disk drive as the computer readable medium, and read and controlled using the control module . Intermediate storage of the program code and any data including entities, tickets, and the like may be accomplished using the memory , possibly in concert with the storage device .","In some instances, the program may be supplied to the user encoded on a CD-ROM or a floppy disk (both generally depicted by the storage device ), or alternatively could be read by the user from the network via a modem device connected to the computer . Still further, the computer system  can load the software from other computer readable media. This may include magnetic tape, a ROM or integrated circuit, a magneto-optical disk, a radio or infra-red transmission channel between the computer and another device, a computer readable card such as a PCMCIA card, and the Internet  and Intranets including email transmissions and information recorded on Internet sites and the like. The foregoing are merely examples of relevant computer readable media. Other computer readable media may be practised without departing from the scope and spirit of the invention.","The method for analysing vibrations of reversible drives can be realised in a centralised fashion in one computer system , or in a distributed fashion where different elements are spread across several interconnected computer systems.","Computer program means or computer program in the present context mean any expression, in any language, code or notation, of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following: a) conversion to another language, code or notation or b) reproduction in a different material form.","The foregoing describes only a few arrangements and\/or embodiments of the present invention, and modifications and\/or changes can be made thereto without departing from the scope and spirit of the invention, the arrangements and\/or embodiments being illustrative and not restrictive.",{"@attributes":{"id":"p-0257","num":"0279"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Arrival Times Script 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"function"},{"entry":"[forward_averages,reverse_averages,final_sample_time,total_for"},{"entry":"ward_arriv,total_reverse_arriv,minspeedout,arrtime,arrtime2]="},{"entry":"arrivaltimes(S1,S2,fs,avgsfwd,avgsrev,sr,begin_sample_time,"},{"entry":"minspeedin)"},{"entry":"% THIS PROGRAM CALCULATES THE ARRIVIL TIMES OF EACH TACHO"},{"entry":"PULSE, THE NUMBER OF CONSTANT SPEED REVOLUTIONS AND THE"},{"entry":"% MINIMUM SPEED TO DETERMINE THE MINIMUM NUMBER OF SAMPLE"},{"entry":"POINTS TO AVOID ALIASING"},{"entry":"% THE DATA REQUIRED IS"},{"entry":"% S1 = SIGNAL FROM HIGH QUALITY REFERENCE PULSE WHICH PULSES"},{"entry":"ONCE PER REVOLUTION"},{"entry":"% S2 = SECOND SIGNAL WHICH CAN BE FROM A LOW QUALITY PULSE"},{"entry":"GENERATOR, IT IS USED TO DETERMINE DIRECTION."},{"entry":"% fs = THE SAMPLING RATE THE DATA WAS COLLECTED AT"},{"entry":"% avgsfwd = THE NUMBER OF DESIRED FORWARD AVERAGES TO"},{"entry":"CALCULATE"},{"entry":"% avgsrev = THE NUMBER OF DESIRED REVERSE AVERAGES TO"},{"entry":"CALCULATE"},{"entry":"% sr = THE PERCENTAGE SPEED VARIATION ALLOWED BEFORE THE DATA"},{"entry":"IS DEEMED IN AN ACCELERATION OR DECELERATION ZONE"},{"entry":"% begin_sample_time = THE SAMPLE TIME OF THE FIRST SAMPLE"},{"entry":"POINT IN THIS EXPORT TO MATLAB RELATIVE TO THE FIRST SAMPLE"},{"entry":"% TIME IN THE RECORDED DATA SET"},{"entry":"% minspeedin = THIS INPUTS THE MINIMUM SPEED FOUND FROM THE"},{"entry":"DATA ANALYSED SO FAR"},{"entry":"S1=S1\u2032;"},{"entry":"S2=S2\u2032;"},{"entry":"DT=1\/fs;"},{"entry":"final_sample_time=length(S1)*DT+begin_sample_time;"},{"entry":"%THIS SECTION COMPUTES THE ARRIVAL TIMES OF THE SHAFT PULSES"},{"entry":"[arrtime] = arrtimes(S1,DT,begin_sample_time); %REFERENCE"},{"entry":"PULSE"},{"entry":"[arrtime2] = arrtimes(S2,DT,begin_sample_time); % SECOND PULSE"},{"entry":"- IT IS USED TO DETERMINE DIRECTION OF ROTATION"},{"entry":"S1=[\u2009]; %This removes Matrix S1 from the memory after it has"},{"entry":"been used"},{"entry":"S2=[\u2009]; %This removes Matrix S2 from the memory after it has"},{"entry":"been used"},{"entry":"clear S1 S2; %This ensures the pulse time waveforms are"},{"entry":"removed from memory"},{"entry":"%THIS SECTION SETS UP MATRICES TO BE USED TO DETERMINE"},{"entry":"ROTATIONAL SPEED AND ACCELERATING PERIODS"},{"entry":"tsleft=[arrtime([1:length(arrtime)\u22122])]; %This is to remove"},{"entry":"the final pulse time so the matrix size is the same as"},{"entry":"tsright."},{"entry":"tsright=[arrtime([2:length(arrtime)\u22121])]; % to shift the"},{"entry":"matrix by one data point so we can look at the time difference"},{"entry":"between pulses."},{"entry":"testbottom=(tsright\u2212tsleft)*(1\u2212sr); %This is to determine"},{"entry":"lower limit of time per revolution variation before it is"},{"entry":"deemed to be accelerating"},{"entry":"testtop=(tsright\u2212tsleft)*(1+sr); % This is to determine the"},{"entry":"upper limit of time per revolution variation before it is"},{"entry":"deemed to be decelerating"},{"entry":"testmid=tsright\u2212tsleft; %This creates a matrix of the mid"},{"entry":"point of time per rev (speed) variation to be used as a"},{"entry":"comparator"},{"entry":"clear tsleft tsright %This clears these values from memory"},{"entry":"%This section simply intialises the variables"},{"entry":"j=3; %this is done so the first 3 rotations are ignored."},{"entry":"i=3;"},{"entry":"xref=1;. %this describes the location of the second pulse in"},{"entry":"the string of pulse times relative to the reference pulse"},{"entry":"x=1; %this simply helps to located the second pulse in the"},{"entry":"string of pulse times relative to the reference pulse."},{"entry":"total_forward_arriv=[\u2009]; %this is to initialise the arrival"},{"entry":"matrix"},{"entry":"total_reverse_arriv=[\u2009]; %this is to initialise the arrival"},{"entry":"matrix in the reverse direction"},{"entry":"countspeed=0; %This is to keep track of the number of"},{"entry":"revolutions at each speed"},{"entry":"speedfor=[\u2009]; %this sets the matrix of forward speeds to be"},{"entry":"empty"},{"entry":"speedrev=[\u2009]; %this sets the matrix of reverse speeds to be"},{"entry":"empty"},{"entry":"speed=[\u2009];"},{"entry":"current_for_avgs=0; %This sets the current number of forward"},{"entry":"averages to zero"},{"entry":"current_rev_avgs=0; %This sets the current number of reverse"},{"entry":"averages to zero"},{"entry":"mean_forward_speed=[\u2009];"},{"entry":"mean_reverse_speed=[\u2009];"},{"entry":"forward_averages=[\u2009];"},{"entry":"reverse_averages=[\u2009];"},{"entry":"% THIS IS SECTION OF THE PROGRAM ACTUALLY CALCULATES THE"},{"entry":"CONSTANT VELOCITY SECTIONS AND DETERMINES THE"},{"entry":"% NUMBER OF FORWARD CONSTANT SPEED REVOLUTIONS, THE NUMBER OF"},{"entry":"REVERSE CONSTANT SPEED REVOLUTIONS AND"},{"entry":"% THE MINIMUM SPEED"},{"entry":"while ((2<j) & (j<(length(arrtime)\u22122)))"},{"entry":"% THIS SECTION FIRST TESTS THAT IT IS ROTATING AT A CONSTANT"},{"entry":"SPEED WITHIN THE ALLOWABLE VARIATION"},{"entry":"i=j+1;"},{"entry":"if ((testmid(j)<testtop(i)) & (testmid(j) > testbottom(i)));"},{"entry":"countspeed=0;"},{"entry":"speed=[\u2009];"},{"entry":"%Now determine the period which it maintains this speed for"},{"entry":"while ((testmid(j)<testtop(i)) & (testmid(j)>testbottom(i)) &"},{"entry":"(i<(length(arrtime)\u22126)));"},{"entry":"countspeed=countspeed+1;"},{"entry":"speed(countspeed)=(1\/testmid(i));"},{"entry":"i=i+1; % to increase each step until no longer constant"},{"entry":"velocity"},{"entry":"end"},{"entry":"if 3<(i\u2212j) %THIS SIMPLY CUTS OUT ANY CONSECUTIVE CONSTANT"},{"entry":"SPEED INFORMATION IF THE NUMBER OF REVOLUTIONS IS LESS THAN 3"},{"entry":"%IT IS REQUIRED BECAUSE THE RESAMPLING PROGRAM REQUIRES"},{"entry":"ATLEAST 3 ROTATIONS"},{"entry":"if (x<length(arrtime2) & j<length(testmid) &"},{"entry":"j<length(arrtime)) %This checks that the x and j values are"},{"entry":"within the range available if they aren't"},{"entry":"% then an error has occured and the break function will exit"},{"entry":"the loop"},{"entry":"% THIS FUNCTION CHECKS THE REFERENCE PULSE AND THE SECOND"},{"entry":"PULSE ARE CORRECTLY REFERENCED TO DETERMINE DIRECTION"},{"entry":"[xref,x,breaker]=refcheck(j,xref,testmid,arrtime,arrtime2);"},{"entry":"else"},{"entry":"break"},{"entry":"end"},{"entry":"if breaker=\u2009=0 %This checks to see if the location of the"},{"entry":"second reference pulse could not be found"},{"entry":"xref=1 %this is to set the reference position back to default"},{"entry":"after being changed in the above section where no second pulse"},{"entry":"existed"},{"entry":"else"},{"entry":"%THE FOLLOWING SECTION CHECKS IF THIS PIECE OF INFORMATION IS"},{"entry":"IN THE FORWARD OR REVERSE DIRECTION"},{"entry":"%AND THEN RESAMPLES AND PLACES THE DATA IN A MATRIX UNTIL THE"},{"entry":"FINAL AVERAGING TAKES PLACE"},{"entry":"T2=arrtime(j)\u2212arrtime2(x)"},{"entry":"T1=arrtime2(x)\u2212arrtime(j)"},{"entry":"if T2<T1 %THIS TEST IS TO SEE IF THE INFORMATION IS IN THE"},{"entry":"FORWARD DIRECTION"},{"entry":"if current_for_avgs<avgsfwd %This tests to see if the correct"},{"entry":"number of averages will be reached in this sample section. If"},{"entry":"they will it sets up the correct number of samples to give the"},{"entry":"exact number of averages desired"},{"entry":"if (i\u2212j)>(avgsfwd\u2212current_for_avgs);"},{"entry":"i=j+(avgsfwd\u2212current_for_avgs);"},{"entry":"end"},{"entry":"forward_arriv=[arrtime([j:i+1])];"},{"entry":"total_forward_arriv=[total_forward_arriv forward_arriv]"},{"entry":"speedfor=[speedfor speed]"},{"entry":"new_forward_averages=(length(forward_arriv))\u22121"},{"entry":"current_for_avgs=new_forward_averages+current_for_avgs"},{"entry":"end"},{"entry":"else % IF THE DATA WAS NOT IN THE FORWARD DIRECTION THEN BY"},{"entry":"DEFAULT IT MUST BE REVERSE"},{"entry":"if current_rev_avgs<avgsrev %This tests to see if the correct"},{"entry":"number of averages will be reached in this sample section. If"},{"entry":"they will it sets up the correct number of samples to give the"},{"entry":"exact number of averages desired"},{"entry":"if (i\u2212j)>(avgsrev\u2212current_rev_avgs);"},{"entry":"i=j+(avgsrev\u2212current_rev_avgs);"},{"entry":"end"},{"entry":"reverse_arriv=[arrtime([j:i])]"},{"entry":"total_reverse_arriv=[total_reverse_arriv reverse_arriv];"},{"entry":"speedrev=[speedrev speed];"},{"entry":"end"},{"entry":"end"},{"entry":"end"},{"entry":"if (current_rev_avgs>avgsrev & current_for_avgs>avgsfwd)"},{"entry":"break"},{"entry":"end"},{"entry":"end"},{"entry":"j=i; %to set up test conditions for next iteration of constant"},{"entry":"velocity tests"},{"entry":"end"},{"entry":"j=j+1; % TO INCREMENT TO THE NEXT SHAFT OF INTEREST ARRIVAL"},{"entry":"TIME TO CHECK IF CONSTANT VELOCITY AND THEN REPEAT"},{"entry":"end"},{"entry":"clear testmid testbottom testtop %THIS CLEARS NO LONGER USED"},{"entry":"VARIABLES"},{"entry":"%THIS CALCULATES THE MINIMUM SPEED REVOLUTION AND EXPORTS IT"},{"entry":"TO LABVIEW"},{"entry":"if length(speedfor)>0"},{"entry":"min_forward_speed=min(speedfor)"},{"entry":"else"},{"entry":"min_forward_speed=0.01"},{"entry":"end"},{"entry":"if length(speedrev)>0"},{"entry":"min_reverse_speed=min(speedrev)"},{"entry":"else"},{"entry":"min_reverse_speed=0.01"},{"entry":"end"},{"entry":"if (min_forward_speed>0.01 & min_reverse_speed>0.01)"},{"entry":"minspeedout=min(min_forward_speed,min_reverse_speed,"},{"entry":"minspeedin)"},{"entry":"else"},{"entry":"if min_reverse_speed>0.01"},{"entry":"minspeedout=min(min_reverse_speed,minspeedin)"},{"entry":"end"},{"entry":"if min_forward_speed>0.01"},{"entry":"minspeedout=min(min_forward_speed,minspeedin)"},{"entry":"end"},{"entry":"if min_forward_speed<=0.01 & min_reverse_speed<=0.01"},{"entry":"minspeedout=minspeedin"},{"entry":"end"},{"entry":"end"},{"entry":"forward_averages=length(total_forward_arriv)"},{"entry":"reverse_averages=length(total_reverse_arriv)"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0258","num":"0280"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Arrival Times Script 2 - Function used in Arrival Times 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"function [arrtime] = arrtimes(S,DT,begin_sample_time)"},{"entry":"% THIS FUNCTION CALCULATES THE ARRIVAL TIMES OF THE REFERENCE"},{"entry":"SHAFT GIVEN THE TIME"},{"entry":"% WAVEFORM CONTAINING THE PULSES FROM A PULSE GENERATOR"},{"entry":"% S = THE TIME WAVEFORM CONTAINING THE PULSES GENERATED EACH"},{"entry":"REVOLTUTION."},{"entry":"% DT = THE SAMPLING TIME DT=1\/Fs WHERE Fs IS THE SAMPLING"},{"entry":"FREQUENCY"},{"entry":"% arrtime = IS THE MATRIX OF ARRIVAL TIMES OF THE REFERENCE"},{"entry":"SHAFT"},{"entry":"% This sets the intercept value"},{"entry":"tmax = max(S);"},{"entry":"if tmax>0.3 %This is just in case the pulse is smaller than"},{"entry":"0.3 volts"},{"entry":"intercept=0.3;"},{"entry":"else"},{"entry":"intercept=0.2*tmax"},{"entry":"end"},{"entry":"% Now Create matrix Sright, which is exactly the same as S but"},{"entry":"time shifted by one data point to the right"},{"entry":"Sright = [S(1); S([1:length(S)\u22121))];"},{"entry":"% THE TIMES AT WHICH THE PULSE TIME WAVEFORM CROSSES THE"},{"entry":"INTERCEPT ARE CALCULATED"},{"entry":"init = find(S>intercept & Sright<intercept);"},{"entry":"% A SHORT MATRIX WITH POINTS EITHER SIDE OF THOSE DETERMINED"},{"entry":"IN INIT ABOVE IS SET UP."},{"entry":"% THE TIMES (WHICH RELATE TO A SAMPLE) ARE THEN INTERPOLATED"},{"entry":"if length(init)>0 %Only conducts the analysis if some arrival"},{"entry":"times to interpolate"},{"entry":"if init(1)>2 & (init(length(init))+2)<length(S) %This"},{"entry":"statement ensures there is enough data"},{"entry":"for k=1:(length(init)); %This if statement just ensures there"},{"entry":"are enough data points"},{"entry":"if or((S(init(k))<S(init(k)+1)),(S(init(k))>S(init(k)+1)))"},{"entry":"%This ensures no two points are the same because if they are"},{"entry":"the spline function does not work"},{"entry":"y = [S(init(k)\u22123);S(init(k)\u22122);S(init(k)\u2212"},{"entry":"1);S(init(k));S(init(k)+1);S(init(k)+2);S(init(k)+3)];"},{"entry":"x = [(init(k)\u22123)*DT;(init(k)\u22122)*DT;(init(k)\u2212"},{"entry":"1)*DT;init(k)*DT;(init(k)+1)*DT;(init(k)+2)*DT;"},{"entry":"(init(k)+3)*DT];"},{"entry":"arrtime(k) = interp1q(y,x,intercept); %THIS IS THE MATRIX OF"},{"entry":"ARRIVAL TIMES (SECONDS)"},{"entry":"end"},{"entry":"end"},{"entry":"else %This reduces the end points if such a situation exists"},{"entry":"where they do not exist"},{"entry":"for k=3:(length(init)\u22122)"},{"entry":"y = [S(init(k)\u22123);S(init(k)\u22122);S(init(k)\u2212"},{"entry":"1);S(init(k));S(init(k)+1);S(init(k)+2);S(init(k)+3)];"},{"entry":"x = [(init(k)\u22123)*DT;(init(k)\u22122)*DT;(init(k)\u2212"},{"entry":"1)*DT;init(k)*DT;(init(k)+1)*DT;(init(k)+2)*DT;"},{"entry":"(init(k)+3)*DT];"},{"entry":"arrtime(k) = interp1q(y,x,intercept); %THIS IS THE MATRIX OF"},{"entry":"ARRIVAL TIMES (SECONDS)"},{"entry":"end"},{"entry":"end"},{"entry":"arrtime=arrtime+begin_sample_time;"},{"entry":"end"},{"entry":"if length(init)<1"},{"entry":"arrtime=[\u2009] %This gives an empty matrix if no arrival times"},{"entry":"exist, it avoids error messages"},{"entry":"end"},{"entry":"clear tmax S intercept Sright init x y"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0259","num":"0281"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Shaft Of Interest Arrival Time Script"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"function [shoiarrtime] ="},{"entry":"shoiarrtime (arrtime,REF_TO_INTEREST_RATIO)"},{"entry":"% THIS FUNCTION CALCULATES THE ARRIVAL TIMES OF THE SHAFT OF"},{"entry":"INTEREST GIVEN THE CYCLE TIMES OF THE REFERENCE SHAFT"},{"entry":"% REF_TO_INTEREST_RATIO = IS THE FIXED VELOCITY RATIO BETWEEN"},{"entry":"THE PULSE GENERATING REFERENCE SHAFT AND THE SHAFT OF INTEREST"},{"entry":"% eg reference shaft:shaft of interest => 1:20 =>"},{"entry":"REF_TO_INTEREST_RATIO=20"},{"entry":"% arrtime = IS THE MATRIX OF ARRIVAL TIMES OF THE REFERENCE"},{"entry":"SHAFT"},{"entry":"% shoiarrtime = THE ARRIVAL TIMES OF THE SHAFT OF INTEREST"},{"entry":"arrtime(1)=[\u2009];%this removes the first arrival point in the"},{"entry":"reference pulse"},{"entry":"% CREATING A MATRIX OF REFERENCE .SHAFT CYCLES"},{"entry":"refcyc = 0:1:(length(arrtime)\u22121);"},{"entry":"% NOW CREATE A MATRIX OF CYCLES FOR THE SHAFT OF INTEREST"},{"entry":"BASED UPON REFERENCE SHAFT CYCLES"},{"entry":"soicycle = 0:REF_TO_INTEREST_RATIO:(length(arrtime)\u22121);"},{"entry":"%starts from 1 to ensure no errors from one pulse comming"},{"entry":"before the other"},{"entry":"% USE INTERP1 TO RETURN A MATRIX CONTAINING THE ARRIVAL TIMES"},{"entry":"OF THE SHAFT OF INTEREST"},{"entry":"shoiarrtime = interp1(refcyc,arrtime,soicycle,\u2018linear\u2019);"},{"entry":"shoiarrtime=shoiarrtime(1:length(shoiarrtime)\u22121); %This"},{"entry":"removes the part revolution on the end."},{"entry":"clear refcyc soicycle"},{"entry":"clear arrtime arrtime2 refcyc2 soicycle2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0260","num":"0282"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Resampling Vibration Data Into Forward And Reverse Direction Script"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"function"},{"entry":"[mean_forward_speed,mean_reverse_speed,forward_averages,"},{"entry":"reverse_averages,vtotalforward,vtotalreverse,finalsampletime] ="},{"entry":"labviewresample(vib,fs,n,avgsfwd,avgsrev,sr,arrtime,arrtime2,"},{"entry":"beginsampletime);"},{"entry":"% THIS PROGRAM RESAMPLES THE CONSTANT SPEED REVOLUTIONS DATA"},{"entry":"INTO THE ANGLE DOMAIN"},{"entry":"% THE FORWARD AND REVERSE DATA ARE APPENDED INTO SEPARATE"},{"entry":"MATRIX SO THE RESULT IS"},{"entry":"% A FORWARD CONTINUOUS ANGLE DOMAIN DATA SET AND A REVERSE"},{"entry":"CONTINOUS ANGLE DOMAIN DATA SET"},{"entry":"% THE DATA REQUIRED IS;"},{"entry":"% vib = THE SIGNAL CONTAINING THE VIBRATION INFORMATION EG"},{"entry":"FROM ACCELEROMETER"},{"entry":"% fs = THE SAMPLING TIME RATE"},{"entry":"% n = THE NUMBER OF SAMPLE POINTS PER REVOLUTION."},{"entry":"% avgsfwd = THE NUMBER OF DESIRED FORWARD AVERAGES TO"},{"entry":"CALCULATE"},{"entry":"% avgsrev = THE NUMBER OF DESIRED REVERSE AVERAGES TO"},{"entry":"CALCULATE"},{"entry":"% sr = THE PERCENTAGE SPEED VARIATION ALLOWED BEFORE THE DATA"},{"entry":"IS DEEMED IN AN ACCELERATION OR DECELERATION ZONE"},{"entry":"% begin_sample_time = THE SAMPLE TIME OF THE FIRST SAMPLE"},{"entry":"POINT IN THIS EXPORT TO MATLAB RELATIVE TO THE FIRST SAMPLE"},{"entry":"% arrtime = THE MATRIX OF ARRIVAL TIMES FOR PULSE 1"},{"entry":"% arrtime2 = THE MATRIX OF ARRIVAL TIMES FOR PULSE 2"},{"entry":"DT=1\/fs;"},{"entry":"finalsampletime=(length(vib)*DT)+beginsampletime; %This"},{"entry":"determines the final sample time to be used as the beginning"},{"entry":"sample time in the next iteration"},{"entry":"%THIS SECTION SETS UP MATRIX TO BE USED TO DETERMINE"},{"entry":"ROTATIONAL SPEED AND ACCELERATING PERIODS"},{"entry":"tsleft=[arrtime([1:length(arrtime)\u22122])]; %to remove the final"},{"entry":"pulse time so the matrix size is the same as tsright."},{"entry":"tsright=[arrtime([2:length(arrtime)\u22121])]; % to shift the"},{"entry":"matrix by one data point so we can look at the time difference"},{"entry":"between pulses."},{"entry":"testbottom=(tsright\u2212tsleft)*(1\u2212sr); %lower limit of time per"},{"entry":"revolution variation before it is determined to be"},{"entry":"accelerating"},{"entry":"testtop=(tsright\u2212tsleft)*(1+sr);%upper limit of time per"},{"entry":"revolution variation before it is decided that the shaft is"},{"entry":"accelerating"},{"entry":"testmid=tsright\u2212tsleft; %mid point of time per rev (speed)"},{"entry":"variation to be used as a comparator"},{"entry":"clear tsleft tsright"},{"entry":"% CREATE A MATRIX OF PULSE TIMES FOR THE ORIGINAL VIBRATION"},{"entry":"DATA"},{"entry":"TIME = beginsampletime:DT:finalsampletime; %In the final"},{"entry":"program with recorded information this sets up the time"},{"entry":"matrix, here it simply replaces the previously calculated TIME"},{"entry":"values in tsa\u2003it is set from DT on because the arrival time"},{"entry":"function treats the first point as dt"},{"entry":"%This section simply intialises the variables"},{"entry":"j=3; %This is done so the first 3 rotations are ignored."},{"entry":"i=3;"},{"entry":"xref=1; %This describes the location of the second pulse in"},{"entry":"the string of pulse times relative to the reference"},{"entry":"pulse.vtotalforward=[\u2009];%sets the initial forward matrix to be"},{"entry":"an empty matrix"},{"entry":"x=1; %This simply helps to located the second pulse in the"},{"entry":"string of pulse times relative to the reference pulse."},{"entry":"vtotalreverse=[\u2009]; %Sets the initial reverse matrix to be an"},{"entry":"empty matrix"},{"entry":"vtotalforward=[\u2009]; %Sets the initial forward matrix to be an"},{"entry":"empty matrix"},{"entry":"countspeed=0; %This is to keep track of the number of"},{"entry":"revolutions at each speed"},{"entry":"speedfor=[\u2009];"},{"entry":"speedrev=[\u2009];"},{"entry":"speed=[\u2009];"},{"entry":"current_for_avgs=0;"},{"entry":"current_rev_avgs=0;"},{"entry":"mean_forward_speed=[\u2009];"},{"entry":"mean_reverse_speed=[\u2009]; %this is just to have matlab recognise"},{"entry":"the variable in the case where there is no reverse"},{"entry":"information."},{"entry":"forward_averages=[\u2009];"},{"entry":"reverse_averages=[\u2009];"},{"entry":"% THIS IS SECTION OF THE PROGRAM ACTUALLY CALCULATES THE"},{"entry":"CONSTANT VELOCITY SECTIONS AND SEPARATELY RECORDS THE FORWARD"},{"entry":"% AND THE REVERSE INFORMATION"},{"entry":"while ((2<j) & (j<(length(arrtime)\u22122)))"},{"entry":"%FIRST TEST THAT IT IS ROTATING AT A CONSTANT SPEED WITHIN THE"},{"entry":"ALLOWABLE VARIATION"},{"entry":"i=j+1;"},{"entry":"if ((testmid(j)<testtop(i)) & (testmid(j) > testbottom(i)));"},{"entry":"countspeed=0;"},{"entry":"speed=[\u2009];"},{"entry":"%Now determine the period which it maintains this speed for"},{"entry":"while ((testmid(j)<testtop(i)) & (testmid(j)>testbottom(i)) &"},{"entry":"(i<(length(arrtime)\u22126)));"},{"entry":"countspeed=countspeed+1;"},{"entry":"speed(countspeed)=(1\/testmid(i));"},{"entry":"i=i+1; % To increase each step until no longer constant"},{"entry":"velocity"},{"entry":"end"},{"entry":"if 3<(i\u2212j) %THIS SIMPLY CUTS OUT ANY CONSECUTIVE CONSTANT"},{"entry":"SPEED INFORMATION IF THE NUMBER OF REVOLUTIONS IS LESS THAN 3"},{"entry":"%IT IS REQUIRED BECAUSE THE RESAMPLING PROGRAM REQUIRES"},{"entry":"ATLEAST 3 ROTATIONS"},{"entry":"if (x<length(arrtime2) & j<length(testmid) &"},{"entry":"j<length(arrtime)) %This checks that the x and j values are"},{"entry":"within the range available if they aren't"},{"entry":"%then an error has occured and the break function will exit"},{"entry":"the loop"},{"entry":"% THIS FUNCTION CHECKS THE REFERENCE PULSE AND THE SECOND"},{"entry":"PULSE ARE CORRECTLY REFERENCED TO DETERMINE DIRECTION"},{"entry":"[xref,x,breaker]=refcheck(j,xref,testmid,arrtime,arrtime2);"},{"entry":"else"},{"entry":"break"},{"entry":"end"},{"entry":"if breaker=\u2009=0 %This checks to see if the location of the"},{"entry":"second reference pulse could not be found"},{"entry":"xref=1 %this is to set the reference position back to default"},{"entry":"after being changed in the above section where no second pulse"},{"entry":"existed"},{"entry":"else"},{"entry":"%THE FOLLOWING SECTION CHECKS IF THIS PIECE OF INFORMATION IS"},{"entry":"IN THE FORWARD OR REVERSE DIRECTION"},{"entry":"%AND THEN RESAMPLES AND PLACES THE DATA IN A MATRIX"},{"entry":"T2=arrtime(j)\u2212arrtime2(x)"},{"entry":"T1=arrtime2(x)\u2212arrtime(j)"},{"entry":"if T2<T1 %THIS TEST TO SEE IF THE INFORMATION IS IN THE"},{"entry":"FORWARD DIRECTION"},{"entry":"%This tests to see if the correct number of averages will be"},{"entry":"reached in this sample section. If they will it sets up the"},{"entry":"correct number of samples to give the exact number of averages"},{"entry":"desired"},{"entry":"if current_for_avgs<avgsfwd"},{"entry":"if (i\u2212j)>(avgsfwd\u2212current_for_avgs);"},{"entry":"i=j+(avgsfwd\u2212current_for_avgs);"},{"entry":"end"},{"entry":"if (length(vib)>((max(testmid))*fs*2)) %THis is just a trial"},{"entry":"to check but essentially it is trying to avoid resample if not"},{"entry":"enough information ther must be atleast two revolutions of"},{"entry":"information in this test"},{"entry":"%THIS FUNCTION RESAMPLES THE INFORMATION AND PLACES IT IN A"},{"entry":"MATRIX CONTAINING THE FORWARD INFORMATION ONLY"},{"entry":"[vibforwardnew] = resample(arrtime,j,i,DT,n,TIME,vib);"},{"entry":"%THIS SIMPLY ADDS THE CURRENT FORWARD DATA TO PREVIOUSLY"},{"entry":"COLLECTED FORWARD DATA"},{"entry":"vtotalforward=[vtotalforward vibforwardnew];"},{"entry":"current_for_avgs = (length(vtotalforward))\/n;"},{"entry":"speedfor=[speedfor speed];"},{"entry":"end"},{"entry":"end"},{"entry":"else"},{"entry":"%This tests to see if the correct number of averages will be"},{"entry":"reached in this sample section. If they will it sets up the"},{"entry":"correct number of samples to give the exact number of averages"},{"entry":"desired"},{"entry":"if current_rev_avgs<avgsrev"},{"entry":"if (i\u2212j)>(avgsrev\u2212current_rev_avgs);"},{"entry":"i=j+(avgsrev\u2212current_rev_avgs);"},{"entry":"end"},{"entry":"if (length(vib)>((max(testmid))*fs*2)) %This avoids"},{"entry":"resampling if not enough information"},{"entry":"%THIS FUNCTION RESAMPLES THE INFORMATION AND PLACES IT IN A"},{"entry":"MATRIX CONTAINING THE REVERSE INFORMATION ONLY"},{"entry":"[vibreversenew] = resample(arrtime,j,i,DT,n,TIME,vib);"},{"entry":"%THIS SIMPLY ADDS THE CURRENT REVERSE DATA TO PREVIOUSLY"},{"entry":"COLLECTED REVERSE DATA"},{"entry":"vtotalreverse=[vtotalreverse vibreversenew];"},{"entry":"current_rev_avgs = (length(vtotalreverse))\/n;"},{"entry":"speedrev=[speedrev speed];"},{"entry":"end"},{"entry":"end"},{"entry":"end"},{"entry":"end"},{"entry":"clear vibforwardnew vibreversenew"},{"entry":"if (current_rev_avgs>avgsrev & current_for_avgs>avgsfwd)"},{"entry":"break"},{"entry":"end"},{"entry":"end"},{"entry":"j=i; %to set up test conditions for next iteration of constant"},{"entry":"velocity tests"},{"entry":"end"},{"entry":"j=j+1; % TO INCREMENT TO THE NEXT SHAFT OF INTEREST ARRIVAL"},{"entry":"TIME TO CHECK IF CONSTANT VELOCITY AND THEN REPEAT"},{"entry":"end"},{"entry":"%THIS GIVES SOME USEFUL INFORMATION WITH REGARD TO AVERAGE"},{"entry":"ROTATIONAL SPEED OF DATA ANALSYSED"},{"entry":"if length(speedfor)>0"},{"entry":"mean_forward_speed=mean(speedfor)"},{"entry":"end"},{"entry":"if length(speedrev)>0"},{"entry":"mean_reverse_speed=mean(speedrev)"},{"entry":"end"},{"entry":"sizefor=length(vtotalforward);%THIS LINE GETS THE SIZE OF THE"},{"entry":"vtotalreverse MATRIX"},{"entry":"% %THIS TESTS THE SIZE OF THE vtotalreverse MATRIX TO SEE IF"},{"entry":"THERE IS ANY REVERSE INFORMATION"},{"entry":"if sizefor>0"},{"entry":"forward_averages=sizefor\/n;"},{"entry":"if forward_averages<avgsfwd"},{"entry":"\u2018The maximum number of forward averages that can be computed"},{"entry":"with the given data is\u2019"},{"entry":"forward_averages"},{"entry":"else"},{"entry":"\u2018The number of forward averages computed is\u2019"},{"entry":"forward_averages"},{"entry":"end"},{"entry":"else %THIS SIMPLY GIVES A MESSAGE IF NO FORWARD INFORMATION"},{"entry":"\u2018There is no forward information\u2019"},{"entry":"forward_averages=0;"},{"entry":"end"},{"entry":"sizerev=length(vtotalreverse); %THIS LINE GETS THE SIZE OF"},{"entry":"THE vtotalreverse MATRIX"},{"entry":"% %THIS TESTS THE SIZE OF THE vtotalreverse MATRIX TO SEE IF"},{"entry":"THERE IS ANY REVERSE INFORMATION"},{"entry":"if sizerev>0"},{"entry":"reverse_averages = sizerev\/n;"},{"entry":"if reverse_averages<avgsrev"},{"entry":"\u2018The maximum number of reverse averages that can be computed"},{"entry":"with the given data is\u2019"},{"entry":"reverse_averages"},{"entry":"else"},{"entry":"\u2018The number of reverse averages computed is\u2019"},{"entry":"reverse_averages"},{"entry":"end"},{"entry":"else %THIS SIMPLY GIVES A MESSAGE IF NO REVERSE INFORMATION"},{"entry":"\u2018There is no reverse information\u2019"},{"entry":"reverse_averages=0;"},{"entry":"end"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0261","num":"0283"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 5"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Pulse Reference Check Script"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"function"},{"entry":"[xref,x,breaker]=refcheck(j,xref,testmid,tsoicl,tsoic2)"},{"entry":"% THIS FUNCTION CHECKS THE REFERENCE PULSE AND THE SECOND"},{"entry":"PULSE ARE CORRECTLY REFERENCED TO DETERMINE THE DIRECTION OF"},{"entry":"ROTATION"},{"entry":"%This is used to tell the main program to move on to the next"},{"entry":"arrival time of the shaft because if the reference arrival"},{"entry":"time does not have a corresponding second pulse"},{"entry":"breaker=1;"},{"entry":"%This sets up the initial reference position which is usually"},{"entry":"one position behind"},{"entry":"x=j\u2212xref;"},{"entry":"%This simply ensures that x is not less than one"},{"entry":"if x<1"},{"entry":"x=1; %This just initialises x to 1 if it is less than 1"},{"entry":"end"},{"entry":"% THIS FINDS THE REFERENCE OF THE SECOND PULSE RELATIVE TO THE"},{"entry":"FIRST"},{"entry":"if (((abs((testmid(j))))\/2)<(abs(tsoic1(j)\u2212tsoic2(x)))) %This"},{"entry":"is the test to determine if the two pulses are consecutive"},{"entry":"if j>10"},{"entry":"x=j\u22129\u2212xref; %This goes back 11 positions and searches for the"},{"entry":"correct reference position"},{"entry":"end"},{"entry":"if j<10"},{"entry":"x=1; %This goes back to the begining of the matrix and"},{"entry":"searches for the reference position if j is less than 10"},{"entry":"end"},{"entry":"while ((abs(testmid(j)\/2))<((abs(tsoic1(j)\u2212tsoic2(x)))))"},{"entry":"%This section checks 2 pulses either side to find the correct"},{"entry":"pulse to reference"},{"entry":"x=x+1;"},{"entry":"if x>(length(tsoic2))"},{"entry":"x=1;"},{"entry":"while (((abs((testmid(j))))\/2)<(abs(tsoic1(j)\u2212tsoic2(x))))"},{"entry":"x=x+1;"},{"entry":"if x>(j\u2212xref) %When x reaches this value all the values of x"},{"entry":"have been checked"},{"entry":"breaker=0; %This is used to send a signal back to the main"},{"entry":"program to break out of the while loop"},{"entry":"\u20181AN ERROR OCCURED IN YOUR DATA COLLECTION, THERE IS NO"},{"entry":"CORRESPONDING SECOND REFERENCE PULSE TO DETERMINE DIRECTION OF"},{"entry":"ROTATION\u2019"},{"entry":"break"},{"entry":"end"},{"entry":"end"},{"entry":"end"},{"entry":"if breaker=\u2009=0"},{"entry":"test=10"},{"entry":"break"},{"entry":"end"},{"entry":"end"},{"entry":"end"},{"entry":"x"},{"entry":"xref=j\u2212x %This keeps track of the relative position of the"},{"entry":"second pulses time"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0262","num":"0284"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 6"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Resampling Script"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"function [vibresamplednew] ="]},{"entry":[{},"resample(shoiarrtime,j,i,DT,N,TIME,VIB)"]},{"entry":[{},"% THIS FUNCTION DETERMINES"]},{"entry":[{},"THE RESAMPLE TIMES THAT THE"]},{"entry":[{},"ORIGINAL VIBRATION INFORMATION"]},{"entry":[{},"MUST BE RESAMPLED AT"]},{"entry":[{},"% TO GIVE N SAMPLES PER REVOLUTION"]},{"entry":[{},"IN THE ANGLE DOMAIN"]},{"entry":[{},"% shoiarrtime = THE MATRIX OF ARRIVAL"]},{"entry":[{},"TIMES OF THE SHAFT OF"]},{"entry":[{},"INTEREST"]},{"entry":[{},"% DT = SAMPLING INTERVAL"]},{"entry":[{},"% N = THE NUMBER OF SAMPLES"]},{"entry":[{},"POINTS REQUIRED FOR EVERY"]},{"entry":[{},"REVOLUTION OF THE SHAFT OF INTEREST"]},{"entry":[{},"% FOR FASTEST COMPUTATIONAL TIMES"]},{"entry":[{},"IT IS BEST THAT N IS A"]},{"entry":[{},"POWER OF 2"]},{"entry":[{},"% THIS SETS UP A MATRIX OF ARRIVAL"]},{"entry":[{},"TIMES THAT RELATE TO THIS"]},{"entry":[{},"BLOCK OF FORWARD OR REVERSE INFORMATION"]},{"entry":[{},"arrtime=[shoiarrtime([j:i])];"]},{"entry":[{},"% THIS SETS UP VIBRATION MATRIX"]},{"entry":[{},"AND TIME MATRIX CONTAINING"]},{"entry":[{},"ONLY THE DATA OF INTEREST"]},{"entry":[{},"test1=find(TIME>shoiarrtime(j\u22121) &"]},{"entry":[{},"TIME<shoiarrtime(i+1));"]},{"entry":[{},"VIB1=VIB(test1);"]},{"entry":[{},"TIME1=TIME(test1);"]},{"entry":[{},"% THIS SETS UP A DUMMY MATRIX OF"]},{"entry":[{},"POINTS RELATING TO EACH"]},{"entry":[{},"REQUIRED SAMPLE (N for every rotation)"]},{"entry":[{},"dummy=1:(1\/N):length(arrtime);"]},{"entry":[{},"% THIS SETS UP A MATRIX OF POINTS"]},{"entry":[{},"WHICH CORRESPOND TO THE"]},{"entry":[{},"ARRIVAL TIMES MATRIX"]},{"entry":[{},"arrivalpoints = 1:1:length(arrtime);"]},{"entry":[{},"% THIS INTERPOLATES TO FIND THE RESAMPLE TIMES"]},{"entry":[{},"resamptimes=interp1(arrivalpoints,"]},{"entry":[{},"arrtime,dummy,\u2018linear\u2019);"]},{"entry":[{},"% THIS RESAMPLES THE VIBRATION"]},{"entry":[{},"DATA AT THE RESAMPLE TIMES"]},{"entry":[{},"vibresampled = interp1(TIME1,"]},{"entry":[{},"VIB1,resamptimes,\u2018cubic\u2019);"]},{"entry":[{},"% THIS IS TO GET RID OF EXTRA"]},{"entry":[{},"POINT ON THE END OF"]},{"entry":[{},"INTERPOLATION THAT RESAMPLING CREATES"]},{"entry":[{},"vibresamplednew=[vibresampled"]},{"entry":[{},"([1:length(vibresampled)\u22121])];"]},{"entry":[{},"clear arrtime dummy arrivalpoints"]},{"entry":[{},"resamptimes vibresampled"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0263","num":"0285"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 7"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Kurtosis Calculation Script"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"function [K]=kurtosis(n,tsa)"]},{"entry":[{},"%THIS FUNCTION COMPUTES THE KURTOSIS"]},{"entry":[{},"VALUE FOR THE TIME"]},{"entry":[{},"SYNCHRONOUS AVERAGE"]},{"entry":[{},"avgetsa=mean(tsa);"]},{"entry":[{},"for x=1:n"]},{"entry":[{},"XM(x)=(tsa(x)\u2212avgetsa){circumflex over (\u2009)}4;"]},{"entry":[{},"end"]},{"entry":[{},"s=std(tsa);"]},{"entry":[{},"K=(sum(XM))\/(n*(s{circumflex over (\u2009)}4));"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Features and preferred embodiments of the present invention are hereinafter described with reference to the accompanying drawings, in which:",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 6","FIG. 3"]},{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 7","FIG. 3"]},{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 8","FIG. 3"]},{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 9","FIG. 8"]},{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 10","FIG. 9"]},{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 11","FIG. 8"]},{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 12","FIG. 8"]},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 14","FIG. 13"]},{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 15","FIG. 14"]},{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 16","FIG. 13"]},{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 17","FIG. 13"]},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIGS. 26 to 30","FIG. 1"]},{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIGS. 31","b":["32","33"]}]},"DETDESC":[{},{}]}
