---
title: DDS structure with scalability and adaptability and node constituting the same
abstract: A node constituting data distribution service (DDS) structure according to an exemplary embodiment of the present invention includes a first DDS application including a first DCPS layer and a first real-time publish-subscribe (RTPS) layer and a second DDS application including a second DCPS layer communicated with the first RTPS layer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08874686&OS=08874686&RS=08874686
owner: Electronics and Telecommunications Research Institute
number: 08874686
owner_city: Daejeon
owner_country: KR
publication_date: 20110817
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims priority to and the benefit of Korean Patent Application No. 10-2010-0109306 filed in the Korean Intellectual Property Office on Nov. 4, 2010, the entire contents of which are incorporated herein by reference.","The present invention relates to data distribution service (hereinafter, referred to as DDS), and more particularly, to a DOS structure with scalability and adaptability and a node constituting the same.","A DOS is a standard specification of middleware for data-centric publish-subscribe communication between distributed application programs and has been standardized in an object management group (CMG). The DDS generally includes a domain which is a shared area and domain participants, and the domain participants are classified into publishers and subscribers for each datum. In one domain, a plurality of publishers and subscribers exist and exchange samples of topics having a predetermined data type.","The structures of existing DDS products are generally classified into a decentralized structure and a federated structure. The decentralized structure is a structure in which each of DDS applications of one node has a data-centric publish-subscribe (DCPS) layer and a real-time publish-subscribe (RIPS) layer and performs a DDS service. This structure has advantages in that a small number of DDS applications are driven and operate without a separate daemon but has disadvantages in that a process of developing the DCPS layer and the RTPS layer is complex and problems may occur in discovery in the case where a lot of nodes participate in the DDS domain. The federated structure is a structure in which individual DCPS layers commonly use a daemon type RTPS layer. This structure has less complexity than the decentralized structure and is more appropriate for a large-scale system. However, the federated structure incurs additional inter-process communication expense and a problem of the daemon type RTPS layer influences the whole system.","The present invention has been made in an effort to provide a DDS with scalability and adaptability and a node constituting the same.","An exemplary embodiment of the present invention provides a node constituting a DDS structure which includes a kernel module being modifiable and including a first real-time publish-subscribe (RTPS) layer in which a part of RTPS functions is implemented, and a DDS application including a data-centric publish-subscribe (DCPS) layer and a second RTPS layer in which the other RTPS functions.","The part of the RIPS functions may include at least one of a discovery function, a data reception function, and an RTPS message generating function.","The other RTPS functions may include at least one of a historycache function and an RTPS message control function.","The second RTPS layer may include an RTPS socket performing connection between the second RIPS layer and the first RIPS layer and receive data received by the first RTPS layer from the first RTPS layer in a socket form.","The first RTPS layer may include an RTPS socket for data communication with a network and transmits data received through the socket to the second RIPS layer.","Another exemplary embodiment of the present invention provides a node constituting a DDS structure which includes a first DDS application including a first DCPS layer and a first RTPS layer, and a second DDS application including a second DCPS layer communicated with the first RTPS layer.","The first DCPS layer may include a server IPC connection structure which is an IPC connection structure for enabling the second DDS application to use the first RTPS layer, and the second DCPS layer may include a client IPC connection structure which is an IPC connection structure for enabling the second DDS application to use the first RTPS layer.","The server IPC connection structure or the client IPC connection structure may be any one of a shared memory, a message queue, and a socket.","The first DCPS layer may include a local API for enabling the first DDS application to use the first RTPS layer.","Yet another exemplary embodiment of the present invention provides a DDS structure which includes a first node including a first DDS application having a first DCPS layer and an RTPS layer, and a second node including a second DDS application having a second DCPS layer communicated with the first RTPS layer.","The first node and the second node may belong to the same DDS domain.","The first node may belong to a DDS domain and the second node belongs to an external WAN environment of the DDS domain.","The first DCPS layer may include a server IPC connection structure which is an IPC connection structure for enabling the second DDS application to use the first RTPS layer, and the second DCPS layer may include a client IPC connection structure which is an IPC connection structure for enabling the second DDS application to use the first RTPS layer.","The server IPC connection structure or the client IPC connection structure may be any one of a shared memory, a message queue, and a socket.","The first DCPS layer may include a local API for enabling the first DDS application to use the first RTPS layer.","According to the exemplary embodiments of the present invention, some functions of a RTPS layer including a message receiving function are implemented as a socket of a kernel module. Therefore, it is possible to simplify the discovery function of the RTPS layer and reduce a message response time between nodes.","Also, according to the exemplary embodiments of the present invention, a plurality of DCPS layers share one RTPS layer. Therefore, it is possible to simplify the discovery function of the RIPS layer. Moreover, the RTPS layer and the DCPS layers can perform efficient communication between processors by using an IPC connection structure.","Further, according to the exemplary embodiments of the present invention, DDS applications of a plurality of nodes belonging to the same domain can use an RTPS layer of a DDS application of a specific node of the plurality of nodes. Therefore, it is possible to suppress propagation of discovery and more efficiently perform message communication between nodes.","Furthermore, according to the exemplary embodiments of the present invention, an external DDS application which could not participate in a DDS domain can use a DDS from the external of the DDS domain without a DDS router by using an RTPS layer of a DDS application of a participant node constituting the DDS domain.","Hereinafter, exemplary embodiments of the present invention will be described in detail with reference to the accompanying drawings. In this description, when any one element is connected to another element, the corresponding element may be connected directly to another element or with a third element interposed therebetween. First of all, it is to be noted that in giving reference numerals to elements of each drawing, like reference numerals refer to like elements even though like elements are shown in different drawings. The components and operations of the present invention illustrated in the drawings and described with reference to the drawings are described as at least one exemplary embodiment and the spirit and the core components and operation of the present invention are not limited thereto.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 1"},"First, a DDS application is divided into function modules of a DCPS layer and an RTPS layer, which are implemented (step ). The DCPS layer is a data publish-subscribe function interface provided to an application program and the application program executes publication and subscription of desired data without perceiving another application program for data exchange. The DCPS layer provides a data exchange function between application programs in a write\/read method by providing API of a read( )\/write( ) form. The RIPS layer is a layer in which actual data is published and subscribed by a publisher and a subscriber, determines domain formation and the type of data to be used, and discovers a domain participant participating in a domain. Further, the RIPS layer performs an RIPS message control function such as a HistoryCache function, a data receiving function, an RIPS message generating function, etc.","Next, it is determined whether a kernel module in which the DDS application is driven is modifiable (step ). Examples of a modifiable kernel module may include a Linux kernel module, etc. If the kernel module is not modifiable, like the related art, all functions of the RIPS layer are implemented in the DDS application (step ).","If the kernel module is modifiable, some functions of the functions of the RIPS layer is implemented in the kernel module and the other functions are implemented in the DDS application (step ). Here, some functions to be implemented in the kernel module include a discovery function, the data receiving function, the RIPS message generating function, etc., and may be implemented by a socket of the kernel module. At this time, some functions of the RIPS layer is included in the kernel module to be implemented as a first RIPS layer, and the other functions of the RIPS layer, such as the HistoryCache function, the RIPS message control function, etc., are implemented in a middleware form in the DDS application as a second RIPS layer. Hereinafter, the first RIPS layer is referred to as a low-level RIPS layer and the second RIPS layer is referred to as a high-level RIPS layer.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 2","b":"140"},"The node according to the exemplary embodiment is configured to include a modifiable kernel module  and at least one DDS application  driven on the kernel module . The DDS application  includes a DCPS layer  and a high-level RIPS layer , and the kernel module  includes a low-level RIPS layer  and a TCP\/UDP layer . The high-level RIPS layer  includes a HistoryCashe  and an RIPS socket , and the low-level RIPS layer  includes a socket . As shown in , in the node, a plurality of DDS applications  having the same structure may exist.","The DDS application  is an application program generating the DCPS layer and the RIPS layer (the high-level RIPS layer and the low-level RIPS layer). The DCPS layer  is an API layer of the DDS application  and allows the application program to use a DDS. The high-level RIPS layer  performs control on an RTPS message and manages the HistoryCashe  and the RIPS socket . The HistoryCashe  performs control regarding reception of an RIPS message and performs a function of storing ACK, NAK, and received data. The RTPS socket  performs a function of linking the high-level RIPS layer  and the low-level RTPS layer  to each other, and receives data which the low-level RIPS layer  receives from the low-level RIPS layer  in a socket form.","The low-level RIPS layer  performs the discovery function, the data receiving function, and the RTPS message generating function. The low-level RTPS layer  converts an RIPS serialized message transmitted through an actual network socket into an RIPS message form, and processes and transmits data on the basis of the RIPS message such that the high-level RTPS layer  can the data. The socket  corresponds to a network socket for actually transmitting and receiving data to and from a network.","As shown in , in the case where a plurality of DDS applications  exist, the RTPS sockets  of the individual DDS applications  perform data transmission and reception with the socket  of one low-level RIPS layer . That is, the plurality of DDS applications  share one low-level RTPS layer .",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 3","FIG. 2"],"b":["205","201","205","310","203","205","206","320","206","330","205","206","207","205","205"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 4","FIG. 4"],"b":["1","2","205","206","206","205","205","203","304","203","205","350"]},"According to the exemplary embodiment of the present invention, some functions of the RIPS layer including the message receiving function are implemented as the socket of the kernel module. Therefore, it is possible to simplify the discovery function of the RIPS layer and reduce a message response time between nodes.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 6","b":["401","402","408","402","407","403","403","404","405","406"]},"A local RIPS API  is a local application programming interface (API) for enabling the DDS application  to use the RIPS layer  of the DDS application . The DCPS domain manager  performs a function of enabling the DDS application  to use an RIPS layer of another DDS application or enabling another DDS application  to use the RIPS layer  of the DDS application . Here, \u2018another DDS application\u2019 means another DDS application of the same node, or an DDS application of another node in the same domain, or an external node, that is, a DDS application of another node in a wide area network (WAN) environment. The client IPC connection structure  is an IPC (inter-process communication) connection structure for enabling the DDS application  to use an RIPS layer of another DDS application, not the RIPS layer  of the DDS application . Here, the IPC connection structure may be a shared memory, a message queue, a socket, etc. The server IPC connection structure  is an IPC connection structure for enabling another DDS application to use the RTPS layer  of the DDS application . The DCPS connection manager  controls the client IPC connection structure  and the server IPC connection structure  and provides information necessary for the client IPC connection structure  and the server IPC connection structure  (for example, information on an RTPS layer to be commonly used).",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 7","FIG. 7"],"b":["401","408","401","408","401","407","501","601","408","401","501","601","601","408","401","604","601","406","401","602","408"]},"According to the exemplary embodiment of the present invention, a plurality of DCPS layers share one RIPS layer. Therefore, it is possible to simplify the discovery function of the RIPS layer. Moreover, the RIPS layer and the DCPS layers can perform efficient communication between processors by using an IPC connection structure (a shared memory, a message queue, or a socket).",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 8","FIG. 7"]},"If a DDS application  is generated in a node (step ), the DDS application  calls a DCPS domain manager  (step ). Then, the DCPS domain manager  checks whether there is an RIPS layer which is being executed in advance in the node (step ). If there is no RIPS layer which is being executed in advance in the node, the DDS application  generates an RIPS layer by itself (step ).","If there is an RIPS layer which is being executed in advance in the node, the DCPS domain manager  calls a DCPS connection manager  (step ), and calls a client IPC  for using the RIPS layer of another DDS application (step ). The DCPS connection manager  stores information on the RIPS layer being executed in the node. The DCPS connection manager  connects the client IPC connection structure  to a server IPC connection structure  of another DDS application  in which the RIPS layer is being executed in advance (step ). Then, the DDS application  uses the RIPS layer  of another DDS application  (step ).",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 9","FIG. 9"],"b":["1","1","2","3","4","2","3","4","1","2","3","4","1","2","3","4","1"]},"According to the exemplary embodiment of the present invention, DDS applications of a plurality of nodes belonging to the same domain can use an RIPS layer of a DDS application of a specific node of the plurality of nodes. Therefore, it is possible to suppress propagation of discovery and more efficiently perform message communication between nodes.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 10","FIG. 9"]},"If a DDS application is generated in a node of a domain (step ), the DDS application calls a DCPS domain manager (step ). The DCPS domain manager calls a DCPS connection manager (step ), and acquires an address of a DDS application of another node of the same domain in which a RIPS is being executed (step ). Then, in order to use the RIPS layer of the DDS application of another node on the basis of the acquired information, a client IPC connection structure is called (step ). The DCPS connection manager stores information on the RIPS layer being executed in another node of the same domain. The DCPS connection manager connects the client IPC connection structure to a server IPC connection structure of the DDS application of another node in which the RIPS layer is being executed (step ). Then, the DDS application uses the RIPS layer of the DDS application of another node (step ).",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 11","FIG. 11"],"b":["11","12","13","14","12","13","14","12","13","14","11","12","13","14","11","12","13","14","11","12","13","14","11"]},"According to the exemplary embodiments of the present invention, an external DDS application which could not participate in a DDS domain can use a DDS from the external of the DDS domain without a DDS router by using an RIPS layer of a DDS application of a participant node constituting the DDS domain.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 12","FIG. 11"]},"If a DDS application is generated in a node existing an external WAN environment of a DDS domain (step ), the DDS application calls a DCPS domain manager (step ). The DCPS domain manager calls a DCPS connection manager (step ), and acquires an address of a DDS application of a node of the domain in which a RIPS is being executed (step ). Then, in order to use the RIPS layer of the DDS application of the node of the domain on the basis of the acquired information, a client IPC connection structure is called (step ). The DCPS connection manager stores information on the RIPS layer being executed in the node of the domain. The DCPS connection manager connects the client IPC connection structure to a server IPC connection structure of the DDS application of the node of the domain in which the RTPS layer is being executed (step ). Then, the DDS application in the external WAN environment uses the RIPS layer of the DDS application of the node in the DDS domain (step ).","Meanwhile, the exemplary embodiments of the present invention described above may be created as programs executable in a computer, and may be implemented in a general-purpose digital computer executing the programs by using a recording medium readable by the computer. Examples of the recording medium readable by the computer include a magnetic storage medium (for example, a ROM, a floppy disk, a hard disk, etc.), an optically readable medium (for example, a CD-ROM, a DVD, etc.), and other storage media.","As described above, the exemplary embodiments have been described and illustrated in the drawings and the specification. Herein, specific terms have been used, but are just used for the purpose of describing the present invention and are not used for defining the meaning or limiting the scope of the present invention, which is disclosed in the appended claims. Therefore, it will be appreciated to those skilled in the art that various modifications are made and other equivalent embodiments are available. Accordingly, the actual technical protection scope of the present invention must be determined by the spirit of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 3","FIG. 2"],"b":"205"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
