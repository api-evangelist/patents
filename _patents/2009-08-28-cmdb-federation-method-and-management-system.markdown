---
title: CMDB federation method and management system
abstract: This disclosure relates generally to the field of Configuration Management Databases (CMDBs). One embodiment of a user interface embodying the present invention is an extension of the process for creating CMDB classes and is therefore readily available for use by someone with knowledge of CMDB administration. The CMDB administrator is thus relieved from having to understand in detail the technologies and interfaces used by the Management Data Repository (MDR) sources. The result of setting up a relation from a CMDB data structure to an MDR data structure by a CMDB administrator may be represented by one or more new CMDB class(es) for the MDR data. The related MDR may then be accessed by an existing CMDB application using already existing CMDB interfaces. The instances of the new relationships and classes thus appear as if they were native instances stored in the CMDB.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08082222&OS=08082222&RS=08082222
owner: BMC Software, Inc.
number: 08082222
owner_city: Houston
owner_country: US
publication_date: 20090828
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims priority to the provisional application Ser. No. 61\/144,683 filed on Jan. 14, 2009 entitled \u201cA CMDB Federation Method and Management System\u201d by Govindarajan Rangarajan and Jiani Chen, which is hereby incorporated by reference in its entirety.","This disclosure relates generally to the field of ITIL\u00ae-based (Information Technology Infrastructure Library) Configuration Management Databases (CMDBs). (ITIL is a registered trademark of The Lords Commissioners of Her Majesty's Treasury acting through The Office of Government Commerce and Central Computer and Telecommunications Agency, United Kingdom.) ITIL-based CMDBs are emerging as a prominent technology for Enterprise Management Software. In enterprise systems management, data about IT business entities such as servers and applications are generally spread across several repositories, known as Management Data Repositories (MDRs). This data is made available to software applications through various standard and non-standard mechanisms such as Structured Query Language (SQL) and\/or other proprietary programming interfaces.","The usefulness of these CMDBs is dependent on the quality, reliability and security of the data stored in them. A CMDB often contains data about managed resources known as Configuration Items (CIs). ITIL version 3 defines a CI as: \u201cAny Component that needs to be managed in order to deliver an IT Service. Information about each CI is recorded in a Configuration Record within the Configuration Management System and is maintained throughout its Lifecycle by Configuration Management. CIs are under the control of Change Management. CIs typically include IT Services, hardware, software, buildings, people, and formal documentation such as Process documentation and [Service Level Agreements].\u201d","The CMDB serves as a point of integration between various IT management processes (See ). Data from multiple sources often needs to be managed directly or by reference in commercial CMDBs. Thus, there was a need to create a standard for federating the data from various MDRs and\/or CMDBs into a single view that appears seamless and integrated to the end user. This standard, known as the CMDB Federation, or CMDBf, Standard was recently adopted by the Distributed Management Task Force (DMTF) as Document Number: DSP0252.","Some of the goals of CMDBf include: enabling a variety of data consumers to access a federation of management data through a standard access interface; enabling a variety of data providers to participate in a federation of management data through a standard provider interface; and providing an approach for reconciling and combining different information about the same resources.","Applications requiring access to distributed management data may utilize one or both of the following methods:\n\n","What is needed is a method, system and mechanism allowing for dynamic retrieval of data from other MDRs, modeling them as related items and associating them with the core data (e.g., CIs) in a CMDB. This disclosure presents solutions to these and other related problems.","One embodiment of a user interface embodying the present invention is an extension of the process for creating CMDB classes and is therefore readily available for use by someone with knowledge of CMDB administration. The CMDB administrator is thus relieved from having to understand in detail the technologies and interfaces used by the MDR sources. The result of setting up a relation from a CMDB data structure to an MDR data structure by a CMDB administrator may be represented by one or more new CMDB class(es) for the MDR data. The related MDR may then be accessed by an existing CMDB application using already existing CMDB interfaces. The instances of the new relationships and classes thus appear as if they were native instances stored in the CMDB.","In an illustrative embodiment of the federation capabilities described more fully herein, the basic aspects include the following:\n\n","In one embodiment, a computer system comprising a programmable control device is programmed to perform a data federation method for a CMDB, the method comprising: receiving information from a CMDB client, the information comprising: a selection of a federated data class, interface connection information for one or more Management Data Repositories (MDRs) that contain information associated with the federated data class, wherein the interface connection information comprises information that is used by the CMDB to connect to the one or more MDRs, and a selection of one or more join conditions, wherein the one or more selected join conditions are used to relate the federated data class to one or more classes residing in the CMDB; sending a query to the one or more MDRs based on at least a portion of the received information; receiving a query result set; and providing at least a portion of the query result set to the CMDB client.","In yet another embodiment, the computer system is further programmed to create a federated data class and store attributes related to the created federated data class in a memory medium.","In yet another embodiment, the computer system is further programmed to receive one or more attributes from the one or more MDRs, wherein the one or more selected join conditions involve one or more of the received attributes.","In yet another embodiment, the instructions for carrying out the above described methods are tangibly embodied on a computer useable memory medium.","In yet another embodiment, a computer network is utilized to carry out the above described methods.","Methods and systems to provide a mechanism for dynamically retrieving data from MDRs, modeling them as related items, and associating them with core data in a CMDB are described herein. The user interface is an extension of the process for creating CMDB classes, and may be used by someone with knowledge of CMDB administration, with only cursory knowledge of the technologies and interfaces used by the MDR sources. One result of setting up a relation from a CMDB data structure to an MDR data structure by the administrator is a new CMDB class representing the MDR data. The related MDR data can then be accessed by an existing CMDB application using whatever CMDB interfaces it already uses, simply by querying for instances of the new relationships and classes as if they were native instances stored in the CMDB.","As mentioned above, the usefulness of CMDBs is dependent on the quality, reliability and security of the data stored in them. A CMDB often contains data about managed resources like computer systems and application software, process artifacts like incident and change records, and relationships among them. In , the CMDB  serves as a point of integration between various IT management processes (Elements -). Data from multiple sources often needs to be managed directly or by reference in commercial CMDBs. These IT management process may include, for example, Change Management , Configuration Management , Incident Management , Availability Management , Capacity Management , and any other number of Miscellaneous IT Processes  that an enterprise may find it useful to monitor.",{"@attributes":{"id":"p-0027","num":"0031"},"figref":"FIG. 2","b":["30","30","32","34","33","30","40","40","30"],"i":["a","n "]},"One example of a workflow that would engage the architecture of  is described as follows. A user has some data residing in an MDR such as an ORACLE\u00ae database, say, Element , that is related to data in CMDB . (ORACLE is a registered trademark of Oracle International Corporation.) The user wants to federate to the data residing in database and be able interface with that data as if it were data in existing classes residing in CMDB . For example, the user would like to be able to retrieve data in the remote database and be able to query the remote database as if it were part of the CMDB .","To achieve such a result in accordance with one embodiment of the present invention, the user could launch a CMDB Client application  which would present him with a \u201cFederation User Interface.\u201d This application  could allow the user to select and\/or create a new federated data class that he wants to work with. At this point, if the user selects to create a new federated data class, he would then need to specify more information about the federated interface, i.e., where the external source data will be coming from and how the application will connect to the external source. For example, the data may be federated to via any type of data federation interface, such as the Java Database Connectivity (JDBC) API, the Open Database Connectivity (ODBC) API, the CMDBf Standard, or any other suitable means.","Depending on the type of data federation, more interface connection information will be gathered from the user that is related to the type of federation interface selected. For example, a user may need to specify: username, password, connection string, connection URL, etc. A federated data class may then be created by the CMDB Client application . The user may be asked to specify a new federated data class name, as well as the attributes they want to have in this class by selecting fields from the MDR that he is attempting to federate to. A so-called \u201ckey\u201d attribute may also have to be specified. The key may be used to uniquely identify a record or as part of a join condition to link between the remote class in the MDR and the existing CMDB-DM classes residing in CMDB  that it is being related to.","A user can then create a federated data relationship class. In one embodiment, the relationship class will define the \u201cend point classes\u201d of the defined relation. For example, a first object class could be a CMDB-DM class, such as \u201cComputer System,\u201d and a second object class could be the newly created Federated data class representing a CI, such as \u201cIncident.\u201d The user will also be able to specify a join condition, i.e., a qualification, which defines how the data in the CMDB-DM class will be related to data in the federated data class. This join condition can be as complicated or as simple as is needed for the user to be able to gain access to the desired information.",{"@attributes":{"id":"p-0032","num":"0036"},"figref":["FIG. 3","FIG. 3"],"b":["46","30","43","40","48","44","40","48"],"i":["a","b"]},"At this point, the desired federated data and relationship classes have been defined. Referring back now to , the user can use CMDB Client  to design queries and view desired data. CMDB Client  may issue API calls to seamlessly query  the federated data classes as though they are native CMDB-DM classes. The CMDB Engine  may then issue the necessary query calls , e.g., Query By Path (QBP) calls, which connect to external MDRs  via any one of various vendor plug-in interfaces . The QBP can then step through the federated relationship and federated data classes, i.e., follow the defined path, access the data that the user desires to see, and return it to the CMDB . The federated query result set  can then be provided to the CMDB Client Application 's UI to display both core and related data in a consistent fashion and to allow the user to take appropriate action. The UI should be flexible enough to allow for the visualization of the federated instances and the configuration of various options for viewing the federated data. The bi-directional arrows in  indicate that data may be sent in both directions over the link that is logically represented by the bi-directional arrow. The location of various elements inside other elements is meant to imply a logical association only, and is in no way intended to be construed as a limiting embodiment.",{"@attributes":{"id":"p-0034","num":"0038"},"figref":"FIG. 4","b":["400","410","420","430"]},{"@attributes":{"id":"p-0035","num":"0039"},"figref":"FIGS. 5A and 5B","b":["34","48","42","26"]},"In the example of , CMDB  possesses a core CMDB-DM class identified as Computer Systems . Here, the class Computer Systems  has a federated relationship  to various CI classes in Vendor Customer Asset DB . For example, Vendor Customer Asset DB  may possess classes such as Warranty Contracts, Hardware Details, and Upgrade Offers. Once the user has specified the federated relationship  between the Computer System class  and the various Federated Data classes in Vendor Customer Asset DB , the user would be able to query CMDB  with various complex queries that pull data from multiple disparate and remote data sources. For example, a user of the system illustrated in A could query for Computer Systems with warranties expiring in less than two months (via a join to the Warranty Contracts federated class) that have recalled CPU units (via a join to the Hardware Details federated class) on which the manufacturer is offering a free upgrade (via the Upgrade Offers federated class). In this way, the user is able to seamlessly query and retrieve a result set from multiple databases that may be provided by multiple vendors, have different interfaces and\/or data models, and be located in physically different locales.",{"@attributes":{"id":"p-0037","num":"0041"},"figref":"FIG. 5B","b":["30","56","56","50","58","58","50","56","58","52","58","30","5"]},{"@attributes":{"id":"p-0038","num":"0042"},"figref":["FIG. 6","FIG. 6"],"b":["350","360","370","380"]},{"@attributes":{"id":"p-0039","num":"0043"},"figref":["FIG. 7","FIG. 7"],"b":["30","102","104","112","102","112","104","102"]},"The mainframe computer system  may be coupled to one or more other computer systems and\/or computer networks, including other mainframe computer systems. The mainframe computer system  may be coupled locally to a computer system network  in a local area network (LAN) configuration, or may be coupled to one or more computer systems and\/or networks through a wide area network (WAN). As shown in , the mainframe computer system  may be directly coupled to a local area network , such as a PC-based or client\/server based network. The LAN  may comprise a storage device or file server  coupled to one or more desktop computer systems , one or more portable computer systems  and possibly one or more computer systems or terminals . As also shown in , the mainframe computer  may also be coupled through a wide area network, represented by the \u201ccloud\u201d that is labeled \u201cNetwork\u201d in , to one or more additional local area networks, such as PC-based networks as shown. Each of the PC based networks may comprise one or more storage devices or file servers  and one or more of either desktop computer systems  or portable computer systems . The wide area network may be any of various types, such as the Internet.","Each of the one or more mainframe computer systems , the computer systems  and , as well as file servers  may include various components as is standard in computer systems. For example, the mainframe computer system  may include one or more processors or CPUs, preferably multiple CPUs, as well as non-volatile memory, such as represented by elements , and various internal buses etc. as is well known in the art, as well as a display device. In a similar manner, each of the desktop computer systems  and\/or portable computer systems , or other computer systems comprised in the enterprise, comprise various standard computer components including one or more CPUs, one or more buses, memory, a power supply, non-volatile memory, and a display, such as a video monitor or LCD display. The computer systems or terminals  may comprise standard \u201cdumb\u201d terminals as used with mainframes, i.e., may comprise a display and video hardware and\/or memory for displaying data on the display provided from the mainframe computer system .","The mainframe computer system  may store a database comprising data which is desired to be accessible among a portion or all of the enterprise, e.g., is desired to be accessible by one or more of the computer systems  and . The database stored in the mainframe computer system  may be distributed among one or more of the various file servers  connected to the various computer systems  and . Thus, it is desired that the data comprising the database be distributed among the enterprise for ready access among multiple users. It is also possible that multiple different database management systems are used within the enterprise, e.g., one or more of the file servers  may store its own database which is desired to be replicated among various of the other file servers and\/or the mainframe computer system .","One or more of the computer systems , , , and  preferably include a memory medium on which computer programs according to the invention may be stored. In addition, the memory medium may be located in a first computer in which the programs are executed, or may be located in a second different computer which connects to the first computer over a network. In the latter instance, the second computer provides the program instructions to the first computer for execution. Also, the computer systems \/, , , and  may take various forms, including a personal computer system, mainframe computer system, workstation, network appliance, Internet appliance, personal digital assistant (PDA), television system or other device. In general, the term \u201ccomputer system\u201d can be broadly defined to encompass any device having a processor which executes instructions from a memory medium.","The memory medium preferably stores a software utility program or programs for graphically displaying database record organization characteristics as described herein. The software program(s) may be implemented in any of various ways, including procedure-based techniques, component-based techniques, and\/or object-oriented techniques, among others. For example, the software program may be implemented using ActiveX\u00ae controls, C++ objects, Java\u00ae objects, Microsoft Foundation Classes (MFC), or other technologies or methodologies, as desired. (ACTIVEX is a registered trademark of the Microsoft Corporation. JAVA is a registered trademark of Sun Microsystems, Inc.) A computer system executing code and data from a memory medium comprises a means for graphically displaying database record organization according to the methods and\/or block diagrams described herein.","Various embodiments further include receiving or storing instructions and\/or data implemented in accordance with the foregoing description upon a carrier medium. Suitable carrier media include a memory medium as described below, as well as signals such as electrical, electromagnetic, or digital signals, conveyed via a communication medium such as networks  and\/or  and\/or a wireless link.","Referring now to , an exemplary computer system  is shown. One or more exemplary computer systems  may be included in a mainframe computer (e.g., Element  in ). Exemplary computer system  may comprise a programmable control device  which may be optionally connected to input  (e.g., a keyboard, mouse, touch screen, etc.), display  or program storage device (PSD)  (sometimes referred to as direct access storage device DASD). Also, included with program device  is a network interface  for communication via a network with other computing and corporate infrastructure devices (See ). Note that network interface  may be included within programmable control device  or be external to programmable control device . In either case, programmable control device  will be communicatively coupled to network interface . Also note that program storage unit  represents any form of non-volatile storage including, but not limited to, all forms of optical and magnetic storage elements including solid-state storage.","Program control device  may be included in a computer system and be programmed to perform methods in accordance with this disclosure. Program control device  comprises a processor unit (PU) , input-output (I\/O) interface  and memory . Processing unit  may include any programmable controller device including, for example, processors of an IBM mainframe (such as a quad-core z10 mainframe microprocessor). Alternatively, in non mainframe systems, examples of processing unit  include the Intel Core\u00ae, Pentium\u00ae and Celeron\u00ae processor families from Intel and the Cortex and ARM processor families from ARM. (INTEL CORE, PENTIUM and CELERON are registered trademarks of the Intel Corporation. CORTEX is a registered trademark of the ARM Limited Corporation. ARM is a registered trademark of the ARM Limited Company.) Memory  may include one or more memory modules and comprise random access memory (RAM), read only memory (ROM), programmable read only memory (PROM), programmable read-write memory, and solid state memory. One of ordinary skill in the art will also recognize that PU  may also include some internal memory including, for example, cache memory.","In the above detailed description, various features are occasionally grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments of the subject matter require more features than are expressly recited in each claim.","Various changes in the details of the illustrated operational methods are possible without departing from the scope of the following claims. For instance, illustrative flow chart steps or process steps of  may perform the identified steps in an order different from that disclosed here. Alternatively, some embodiments may combine the activities described herein as being separate steps. Similarly, one or more of the described steps may be omitted, depending upon the specific operational environment the method is being implemented in. In addition, acts in accordance with  may be performed by an exemplary computer system  comprising a single computer processor, a special purpose processor (e.g., a digital signal processor, \u201cDSP\u201d), a plurality of processors coupled by a communications link or a custom designed state machine, or other device capable of executing instructions organized into one or more program modules. Custom designed state machines may be embodied in a hardware device such as an integrated circuit including, but not limited to, application specific integrated circuits (\u201cASICs\u201d) or field programmable gate array (\u201cFPGAs\u201d).","Storage devices, sometimes called \u201cmemory medium\u201d or \u201ccomputer useable medium,\u201d are suitable for tangibly embodying program instructions and may include, but are not limited to: magnetic disks (fixed, floppy, and removable) and tape; optical media such as CD-ROMs and digital video disks (\u201cDVDs\u201d); and semiconductor memory devices such as Electrically Programmable Read-Only Memory (\u201cEPROM\u201d), Electrically Erasable Programmable Read-Only Memory (\u201cEEPROM\u201d), Programmable Gate Arrays and flash devices. However, those of ordinary skill in the art will recognize that information may also be maintained as structured text, binary object data (e.g., binary data structures), HTML, XML or other forms of storing data.","It is to be understood that the above description is intended to be illustrative, and not restrictive. For example, the above-described embodiments may be used in combination with each other. Many other embodiments will be apparent to those of skill in the art upon reviewing the above description. The scope of the invention should, therefore, be determined with reference to the appended claims, along with the full scope of equivalents to which such claims are entitled."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0016","num":"0020"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0021"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0022"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0023"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0024"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0021","num":"0025"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0022","num":"0026"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0027"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0024","num":"0028"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
