---
title: System and method for sign mask encryption and decryption
abstract: In general, one embodiment of the invention involves a method to protect the integrity of the sign mask. The method involves computing a key shared by a plurality of software modules employed within an image display device and encrypting a sign mask with the shared key. The sign mask is used for scrambling a bit stream prior to its transmission along with the encrypted sign mask. The encrypted sign mask is decrypted at the destination in order to descramble the scrambled bit stream.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07103184&OS=07103184&RS=07103184
owner: Intel Corporation
number: 07103184
owner_city: Santa Clara
owner_country: US
publication_date: 20020509
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","GENERAL BACKGROUND","DETAILED DESCRIPTION"],"p":["Embodiments of the invention relate to the field of content security, in particular, to a system and method for obfuscating sign masks used to enhance content protection.","For many years, there has been a growing demand for electronic systems that provide visual and\/or audible content to consumers. Previously, content providers have supplied consumers with content in a variety of forms (e.g., vinyl records, audio cassette tapes, video cassette recorder \u201cVCR\u201d tapes, etc.). When played back in an analog format, the content is somewhat protected at that time. For example, analog content is troublesome to illicitly copy and redistribute. Also, the recorded copies have poorer image or sound quality than the original content.","Over the last few years, there has been a growing demand for and use of digital content. For instance, digital versatile disks (DVDs) are an optical disc technology that is expected to rapidly replace the CD-ROM discs over the next few years. A DVD digitally stores content (e.g., Motion Picture Experts Group-2 \u201cMPEG-2\u201d file), and during use, the content is retrieved, processed and converted into an analog format just prior to playback.","One concern experienced by content providers is that computers are now being manufactured with DVD-RAM drives that enables data to be written on a DVD. As a result, content may be retrieved from a DVD, temporarily stored in its digital format, and subsequently rewritten on a new DVD. Thus, copies with the same images and\/or sound quality as the master may be illegally reproduced and sold.","In order to protect content providers from unauthorized copying and distribution of their digital content, a data scrambling scheme is performed during playback decoding of the DVD in order to avoid extraction of unmodified digital content. In particular, the bit streams retrieved from sectors of the DVD are scrambled by the DVD playback application and the scrambled bit streams are transferred to a driver software. The driver software performs descrambling operations on the scrambled bit streams. This enables recovery of the original bit streams before transmission to the graphics hardware to decode and display the images.","The data scrambling scheme involves the application of a sign mask to each block of the bit stream. More specifically, bits of the sign mask are Exclusively OR'ed (XOR'ed) with signed bits of DCT coefficients partially forming the block. Thereafter, the sign mask is transferred from the DVD playback application to the driver software for later use to descramble and recover the original bit stream.","One disadvantage with this content protection mechanism is that the data scrambling scheme can be circumvented if a third party obtains the particulars of the sign mask, which is transferred in the clear between the DVD playback application and the software driver. This threat may impede further expansion of digital content distribution.","Embodiments of the invention relate to a system and method for obfuscating sign masks used during a data scrambling scheme in order to protect content. Such obfuscation improves security of the system as well as the secured nature of the content.","In the following description, numerous specific details are set forth. However, it is understood that embodiments of the invention may be practiced without these specific detail.","In the following description, some terminology is used to describe certain characteristics of the invention as well as cryptographic functionality. For example, \u201ccontent\u201d generally includes data perceived by consumers such as video, images and\/or audio. A \u201clink\u201d is defined as an information-carrying medium (e.g., electrical wire, optical fiber, cable, bus trace, etc.) or wireless communications through established techniques such as infrared (IR) and radio frequency (RF) signaling.","In one embodiment, an \u201cimage display device\u201d is an electronic product having logic with graphics processing capability. Examples of an image display device include, but are not limited to, a computer (e.g., desktop, laptop, hand-held, server, mainframe, etc.), a set-top box, a game console, consumer electronic equipment (e.g., compact disc \u201cCD\u201d or digital versatile disk \u201cDVD\u201d player, television, etc.), or the like.","The internal logic of the image display device may include hardware, firmware, software module(s) or any combination thereof. A \u201csoftware module\u201d is a series of instructions that, when executed, perform a certain function. Examples of a software module include an operating system, an application, an applet, a program or even a routine. One or more software modules may be stored in a machine-readable medium, which includes but is not limited to an electronic circuit, a semiconductor memory device, a read only memory (ROM), a flash memory, a type of erasable programmable ROM (EPROM or EEPROM), a floppy diskette, any optical disk (e.g., CD or DVD), a hard disk, or the like.","With respect to cryptographic functionality, a \u201ckey\u201d is information used by a cryptographic function for encryption and decryption. Examples of cryptographic functions may include, but are not limited or restricted to any symmetric key cryptographic functions such as Data Encryption Standard (DES).","Referring to , an exemplary embodiment of a system  utilizing the invention is shown. In this embodiment of the invention, system  features an image display device  comprising a processing unit  (e.g., microprocessor, digital signal processor, application specific integrated circuit, microcontroller, etc.) in communication with a graphics chipset  and system memory . Graphics chipset  comprises a graphics controller  capable of accessing information stored within graphics memory . Graphics memory  may be separate from graphics controller  or on-chip. One example of graphics chipset  is the INTEL\u00ae 830\u2122 chipset.","System  further comprises a link  that enables data to be transferred between the image display device  and a content playing device  (e.g., a peripheral DVD player, integrated DVD drive, a peripheral CD player, integrated CD drive, etc.). The content playing device  may be integrated into image display device  or configured as an independent peripheral as shown. In this embodiment of the invention, link  may be adapted for coupling content playing device  to a port of image display device . The port operates as a conduit for the incoming content to be subsequently routed through internal logic ,  and  of image display device .","Referring now to , an exemplary embodiment of communications between logic , ,  and  associated with image display device  of  is shown. Herein, for this embodiment of the invention, logic  is a software module processed by image display device . The software module  is configured to retrieve stored digital content from a machine-readable medium and produce scrambled bit streams that are routed to a software driver (e.g., logic ) and descrambled. It is contemplated, however, that software module  may be configured to produce scrambled bit streams that are routed directly to logic  (e.g., hardware such as graphics chipset  of ) in lieu of software driver .","In one embodiment of the invention, software module  is a DVD playback application that retrieves unscrambled (raw) bit streams , perhaps stored on the DVD in a compressed format using Discrete Cosine Transform (DCT) coefficients such as any type Motion Picture Experts Group compression (e.g., MPEG-2, MPEG-4, etc.). Of course, bit streams  may be initially encrypted and thus require decryption. For illustrative sake, considering raw bit streams  as MPEG-2 bit streams, they undergo parsing operations to convert the MPEG-2 bit streams  into block layer DCT bit streams  as shown in .","Referring to , each raw bit stream  comprises one or more sequence header(s) , a sequence extension(s)  and Group of Pictures (GOP) header and pictures . For this illustrative embodiment of the invention, the sequence header  provides encoding and display parameters such as horizontal size (in pixels), vertical size (in pixels), aspect ratio, bit rate and\/or frame rate for example. The sequence extension  provides profile and level constraints as well as extension values for many display parameters.","The GOP header and pictures  includes a GOP header  followed by one or more pictures . Equivalent to a frame of data being displayed or stored, each picture  includes a picture header  and one or more slices  collectively forming a frame of data. The picture header  features data that identifies how the picture  is coded. For example, the picture  may be coded as an \u201cIntra\u201d picture (I_picture) having no reference to any other picture. Alternatively, the picture  may be coded as either a \u201cPredicted\u201d picture (P_picture) or \u201cBi-directional\u201d picture (B_picture). A \u201cP_picture\u201d may reference another picture and can be used as a reference for other pictures. A \u201cB_picture\u201d may reference two different pictures, but cannot be used as a reference picture itself.","Each slice  is a portion of an image, normally coded independently from the other slices of the picture so as to allow for error confinement. Hence, in the event that an error in the bit stream is detected, the graphics chipset  of  can try to continue its decoding operations by looking for the next slice header.","As further shown in , each slice  is a combination of a slice header  followed by one or more macroblocks . A \u201cmacroblock\u201d  is a smaller portion of an image such as 16\u00d716 group of pixels for example. At this state of the parsing operations, motion compensation and prediction are performed using a motion vector, especially for video content.","Each macroblock  includes a macroblock header  followed by one or more blocks . Each block  includes a Discrete Cosine Transform (DCT) coefficient  followed by run-level variable length coefficients . DCT is used to remove spatial correlation existing among adjacent pixels and also to remove subjective redundancy. The end of block  is denoted by an end-of-block parameter .","Referring back to , as shown in , a sign mask  (normally a 8\u00d78 matrix) is applied to each block of the MPEG-2 bit stream  by Exclusively OR'ing (XOR'ing) the signed bit of the DCT coefficient. Thereafter, the modified DCT stream is returned back to a MPEG-2 bit stream , but is now scrambled (referred to as the \u201cscrambled bit stream\u201d). The scrambled bit stream  is output to logic  such as a DirectX Video Acceleration Application Programming Interface (DxVA API)  as described in the publication entitled \u201cMicrosoft DirectX VA: Video Acceleration API\/DDI\u201d (Jan. 23, 2001). This is accomplished by software module  initiating a function call (IAMVideoAccelerator::Execute). The function call includes parameters such as pointers to one or more data buffers that contain scrambled bit stream . The operating system translates the function call into a driver call that retrieves the scrambled bit stream contents for access by the software driver .","Additionally, using a Diffie-Hellman key exchange methodology, a shared secret key (SK)  is computed for use by both the software module  and the software driver  as described in . Using the shared secret key , the sign mask  is encrypted. For example, the sign mask  may be XOR'ed with the shared secret key  or a selected portion thereof. The encrypted sign mask  is output to the software driver  via the DxVA API  as well. For instance, software module  will initiate an a function call (IAMVideoAccelerator::Execute) and set a pointer (\u201clpPrivateInputData\u201d pointer) to one or more data buffers for passing the encrypted sign mask . The operating system translates the function call into a driver call that retrieves the encrypted sign mask  for the software driver . Additionally, another pointer (\u201clpPrivateOutputData\u201d pointer) is adapted to point to an area where data is to be returned to the software module .","For this embodiment of the invention, at the software driver , the encrypted sign mask  will be decrypted using the shared secret key . The sign mask , therefore, will be transferred between the software module  and driver  in an encrypted form to prevent third parties from more easily obtaining such information. Of course, it is contemplated, that the sign mask  used by software module  to produce scrambled bit streams  may be encrypted and subsequently decrypted by the graphics chipset  of  in lieu of by software driver .","Referring now to , one embodiment of Diffie-Hellman operations performed in part by a utility software routine of the software module  of  is shown. This operation generates the shared secret key  between the software driver  and the software module  is shown. The shared key  can be altered periodically, thereby allowing software module  and software driver  to update their shared key used to scramble the sign mask at certain time intervals. For this embodiment of the invention, the software module  is configured to decide the interval for altering the shared secret key . This interval may be a fixed time interval or random in nature.","The authentication may be performed through handshake signaling between the software module  and the software driver  using the DxVA API . This avoids \u201cman-in-the-middle\u201d attacks.","For instance, in one embodiment of the invention, the software module  and software driver  agree upon two prime numbers, g & n, where \u201cg\u201d is a primitive root of \u201cn\u201d. A utility software routine  of the software module  selects a random value \u201cX\u201d and computes a value A=g\u00b7mod(n). This value \u201cA\u201d is routed to the driver . The driver  also selects a random number \u201cY\u201d and sends software module  the value D=g\u00b7mod(n). The agreed shared secret key (SK) is determined to be the following as shown in equation (1).\n\n()=()=(). \u2003\u2003(1)\n","Referring to , the utility software routine  controls (i) generation of the sign masks , (ii) scrambling of the DCT coefficient sign bit in the raw bit stream , (iii) performance of the Diffie-Hellman key exchange , and (iv) encryption of the sign masks .","In particular, with respect to generation of the sign masks, the utility software routine  comprises a number generator  (e.g., random number generator or pseudo random number generator), which produces 64-bit sign masks. For instance, thirty-two (32) sign masks may be produced in support of MPEG-2 data scrambling as shown in Table A. In one embodiment of the invention, pseudo random number generator  may be implemented using a Linear Congruence Algorithm. The pseudo code for the pseudo random number generator  is shown in Table B.",{"@attributes":{"id":"p-0038","num":"0037"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE A"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Bits 31:16","Bits 15:0"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SignMask [15:0] [0] [1]","SignMask [15:0] [0] [0]"]},{"entry":[{},"SignMask [15:0] [0] [3]","SignMask [15:0] [0] [2]"]},{"entry":[{},"."]},{"entry":[{},"."]},{"entry":[{},"."]},{"entry":[{},"SignMask [15:0] [7] [7]","SignMask [15:0] [7] [6]"]},{"entry":[{},"SignMask [31:16] [0] [1]","SignMask [31:16] [0] [0]"]},{"entry":[{},"SignMask [31:16] [0] [3]","SignMask [31:16] [0] [2]"]},{"entry":[{},"."]},{"entry":[{},"."]},{"entry":[{},"."]},{"entry":[{},"SignMask [31:16] [7] [7]","SignMask [31:16] [7] [6]"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0039","num":"0038"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE B"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"LINT"]},{"entry":[{},"LinearCongruence"]},{"entry":[{},"Pseudorandom (X (i)i)"]},{"entry":[{},"{"]},{"entry":[{},"X(i+1) = (X(i)*a +1)mod m, where"]},{"entry":[{},"a = 6364136223846793005;"]},{"entry":[{},"m = 2"]},{"entry":[{},"Return X(i+1)"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"With respect to scrambling of the DCT coefficient sign bit in the raw bit stream, in one embodiment of the invention, the utility software routine  performs XOR operations on the generated sign mask with signed bit of DCT coefficients. The pseudo code for the scrambling operations are shown in Table C.",{"@attributes":{"id":"p-0041","num":"0040"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE C"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DCT_block_bitstream"]},{"entry":[{},"Scramble(signedmask, DCT_block_bitstream)"]},{"entry":[{},"{"]},{"entry":[{},"signedmask XOR signed bit of each coefficient of DCT block"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"With respect to performance of the Diffie-Hellman key exchange, this involves modulo computations. As generally stated above, utility software routine  in cooperation with software module  computes the value A=g\u00b7mod(n), where \u201cX\u201d is a randomly generated number. The utility software module  in cooperation with software driver  computes a value D=g\u00b7mod(n), where \u201cY\u201d is a randomly generated number. Such values (A,D) are used to produce the secret key (SK) equal to A\u00b7mod(n) or D\u00b7mod(n), namely g\u00b7mod(n), where \u201cg\u201d and \u201cn\u201d are prime numbers agreed to be used by software module  and software driver . The pseudo code for the operation of modulo mathematics in Diffie-Hellman key exchange operations is shown in Table D.",{"@attributes":{"id":"p-0043","num":"0042"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE D"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"INT"]},{"entry":[{},"Modular_exponentiation(a,b,n)"]},{"entry":[{},"{"]},{"entry":[{},"c=0; d=1;"]},{"entry":[{},"Let <Bk, Bk\u22121 . . . B0>be the binary representation for b"]},{"entry":[{},"For (i=k; i<0;i=i\u22121)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"{","c=2c;"]},{"entry":[{},{},"d=(d*d)mod n;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if (Bi=1)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"c=c+1;"]},{"entry":[{},{},"d=(d*a)mod n;"]},{"entry":[{},"}"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"} return d; }"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"With respect to encryption of the sign masks, it is contemplated that a XOR operation is conducted on both the shared key and all signed masks. For example, the shared key is XOR'ed with thirty-two sign masks, each being 64-bits in length. The pseudo code for the encryption operations are set forth in Table E.",{"@attributes":{"id":"p-0045","num":"0044"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE E"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SignMask Encrypted_Mask (signedmask, sharedkey)"]},{"entry":[{},"{"]},{"entry":[{},"sharedkey XOR signedmask"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"While this invention has been described in terms of several illustrative embodiments, this description is not intended to be construed in a limiting sense. Various modifications of the illustrative embodiments, as well as other embodiments of the invention, are deemed to lie within the spirit and scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention may best be understood by referring to the following description and accompanying drawings that are used to illustrate embodiments of the invention, In the drawings:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIGS. 3A and 3B"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
