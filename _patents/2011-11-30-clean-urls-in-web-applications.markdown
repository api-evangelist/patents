---
title: Clean URLs in web applications
abstract: Disclosed herein are methods and systems for using clean URLs in web applications. A URL having a base path and a subpath is received on a server device from a web browser. The server device sends a rendered webpage and associated JavaScript instructions to the web browser. The JavaScript instructions direct the web browser to determine whether the web browser is compliant based upon whether the web browser supports a URL modification mechanism. If the web browser is noncompliant, the URL is redirected to the base path.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08396920&OS=08396920&RS=08396920
owner: Google Inc.
number: 08396920
owner_city: Mountain View
owner_country: US
publication_date: 20111130
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Embodiments relate to the field of web applications.","In recent years, many web applications have shifted from being rendered on a server to being rendered in a web browser. Client-side rendering or rendering in a web browser often provides a more seamless browsing experience because the pages are not seen as refreshing. However, because the rendering occurs in a web browser instead of on a server, the history, or the particular webpages visited by the user in the web application is not natively stored. Many web applications, in order to keep track of history, have appended identifiers which correspond to particular webpages onto the end of a uniform resource locator (URL). However, due to the use of these identifiers, the resulting URLs can be confusing and aesthetically displeasing.","In general, one aspect of the subject matter described in this specification can be implemented in methods that include the actions of receiving, on a server device, a URL comprising a base path and a subpath from a web browser, sending, from the server device, the rendered webpage to the web browser and associated JavaScript instructions, and directing the web browser, in the JavaScript instructions, to determine whether the web browser is compliant based upon whether the web browser supports a URL modification mechanism, and if the web browser is noncompliant, redirect the URL to the base path.","Other implementations include corresponding systems, apparatus, and computer programs, configured to perform the actions of the methods, encoded on computer storage devices.","While the present invention is described herein with reference to the illustrative embodiments for particular applications, it should be understood that the invention is not limited thereto. Those skilled in the art with access to the teachings provided herein will recognize additional modifications, applications, and embodiments within the scope thereof and additional fields in which the invention would be of significant utility.","In the detailed description of embodiments that follows, references to \u201cone embodiment\u201d, \u201can embodiment\u201d, \u201can example embodiment\u201d, etc., indicate that the embodiment described may include a particular feature, structure, or characteristic, but every embodiment may not necessarily include the particular feature, structure, or characteristic. Moreover, such phrases are not necessarily referring to the same embodiment. Further, when a particular feature, structure, or characteristic is described in connection with an embodiment, it is submitted that it is within the knowledge of one skilled in the art to effect such feature, structure, or characteristic in connection with other embodiments whether or not explicitly described.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 1","FIG. 1"],"b":["102","102","102","102","102"]},"In an embodiment, URL request  may be modified differently depending on whether URL request  was requested from a web browser that supports a URL modification system, for example the HTML5 history application programming interface (API). A URL modification mechanism allows the URL to be modified directly using JavaScript instructions. In web browsers that support URL modification, the URL may be modified using JavaScript instructions to match the current page displayed instead of appending a fragment identifier. The modification may occur without causing the webpage to reload or refresh. Accordingly, when URL request  is made in a browser that supports URL modification, URL request  may be modified to URL  in the web browser using JavaScript. For example, \u201cwww.example.com\/page1#page2\u201d is modified to \u201cwww.example.com\/page2.\u201d However, in the case of a web browser that does not support a URL modification system, fragment identifiers may still be needed. Thus, when URL request  is made in a browser that does not support URL modification, URL request  may be modified to URL  using redirection. In particular, the web browser may be instructed, using JavaScript instructions, to redirect the URL to the base path, and then append the fragment identifier to the base path. For example, \u201cwww.example.com \/page1#page2\u201d is modified to \u201cwww.example.com\/#page2.\u201d",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2","b":["200","202","204","202","204","224","202","204","204","200","204","202","202"]},"Server device  includes a server-side renderer . Server-side renderer  may be configured to receive a webpage request  from web browser , render rendered page , and then send rendered page  to web browser . Webpage request  may comprise a URL and parameters. The UR may also include an appended fragment identifier in webpage request  depending on the type of web application the URL is from. Server-side renderer  may render rendered page  based on parameters received in webpage request , a variety of data sources, such as databases, and logic which runs within server-side renderer . The logic may be contained in a web application . Rendered page's  form may be any combination of HTML, CSS, or JavaScript.","The URL in webpage request  may include a base path. The base path may correspond to a particular web application on server device , such as web application . Accordingly, server device  may use the base path to locate and execute web application . The base path may be an identifier prefixed by a forward slash. For example, the URL may include a base path of \u201c\/app212,\u201d which may correspond to web application , such that the full URL including the base path may take the form of \u201cwww.example.com\/app212.\u201d However, in some cases, server device  may be configured with one web application, and in such cases, the base path may be empty. The URL in webpage request  may also include a subpath that may reference particular parts of a web application. Similarly to the base path, the subpath may take the form of an identifier prefixed by a forward slash. For example, in addition to the base path, the URL may include the subpath of \u201c\/module1\u201d that may correspond to a particular module within in a web application, such as a list of friends in the case of a social networking web application. Accordingly, in such a case, the full URL may take the form of www.example.com\/app312\/module1.\u201d","Web browser  includes a client-side renderer . Client-side renderer  may be configured by JavaScript instructions received from server device . Using these instructions, client-side renderer  may render webpages in web browser  instead of requesting webpages to be rendered by server device  using their basepath and subpath. The JavaScript instructions may be sent within or alongside rendered page . The instructions may specify how particular webpages that may be requested from within rendered page  may be rendered by client-side renderer . If external data is needed to render the particular webpages, the instructions may specify how the external data may be requested. For example, the external data may be requested using asynchronous JavaScript and XML (AJAX). In particular client-side renderer  may send a data request  to server device  and in return receive data . Data request  and data  may be formed using extensible markup language (XML). Data  may then be used in the client-side rendering of a requested webpage.","As discussed above, not all web browsers support a URL modification mechanism. However, server device  may receive requests for webpages from both browsers that support and do not support a URL modification mechanism. Moreover, if a web browser does not support a URL modification mechanism the web browser may need to append fragment identifiers.","Server-side renderer  may also be configured to instruct web browser , using JavaScript instructions, to determine if web browser  includes an optional URL modification mechanism . In particular, web browser  may be able to determine whether it supports URL modification mechanism , based upon its name and version number. Web browser  may also be able to determine whether it is compliant by executing JavaScript instructions. For example, web browser  may be able to execute a JavaScript instruction that will query whether web browser  supports URL modification system . Web browser  may also be able to execute JavaScript instructions that test whether web browser  has a URL modification mechanism . However, a person having skill in the art would recognize that there are other methods that may be used in order to check if web browser  includes URL modification mechanism .","If web browser  includes optional URL modification mechanism , then web browser  may be considered compliant. Accordingly, after web browser  uses client-side renderer  to render a webpage, web browser  may update the URL using URL modification mechanism  to reflect the basepath and subpath of the new webpage rendered instead of appending a fragment identifier. For example, if client-side renderer  renders \u201cpage2\u201d URL modification mechanism  may update the URL to \u201cwww.example.com\/page2.\u201d","Web browser  may also be configured through JavaScript instructions received from server device  to convert fragment identifiers to subpath identifiers if web browser  includes URL modification mechanism . In some cases, for example, a user may have a saved a URL with an appended fragment identifier. For example, the user may have saved the URL from a web browser that does not support URL modification mechanism . In such cases, web browser  may be configured to use URL modification mechanism  to modify the URL to remove the fragment identifier and instead include a subpath that corresponds to the fragment identifier. Similar to the fragment identifier, the subpath may also correspond to a particular part of web application , such that when received by server device , server device  may render a particular webpage. For example, if the URL saved is \u201cwww.example.com\/page1#page2,\u201d web browser  may convert that URL using URL modification mechanism  to \u201cwww.example.com\/page2.\u201d","If web browser  does not include optional URL modification mechanism , then web browser  may be configured, using JavaScript instructions, to redirect to the base path of the URL included in webpage request . If web browser  does not include URL modification mechanism , web browser  may be considered noncompliant. Client-side renderer  may then render the webpage located at the base path of URL included in webpage request . However, web browser  may instead make a request to server-side renderer  to render the webpage located at the base path of the URL included in webpage request . If the URL in webpage request  has a fragment identifier appended, client-side renderer  may render the corresponding webpage. Additionally, the fragment identifier from the webpage request  may be appended to the redirected URL. For example, if the original URL was \u201cwww.example.com\/page1#page2,\u201d the redirected URL may then be \u201cwww.example.com\/#page2.\u201d","Server-side renderer  may also be further configured to instruct web browser , using JavaScript instructions, to correct any incorrect webpages that may have been rendered because of the use of fragment identifiers. Server-side renderer  may send the JavaScript instructions alongside or within rendered webpage . Due to limitations in the implementation of HTTP, server device  may not be capable of receiving fragment identifiers appended to a URL. As a result, in some cases, an incorrect webpage may be rendered by the server-side renderer . For example, a URL request may be made for \u201cwww.example.com\/page1#page2.\u201d In such a case, the server device  may not be able to receive the \u201c#page2\u201d fragment identifier and the server-side renderer  may render \u201cpage1\u201d instead. In such cases, web browser  may be directed using JavaScript instructions to decode the fragment identifier appended to the URL to determine the fragment identifier's corresponding webpage. If rendered page  is not the fragment identifier's corresponding webpage, then web browser  using client-side renderer  may render the fragment identifier's corresponding webpage. The JavaScript instructions may further instruct web browser  to set the web browser's display to a temporary screen while the web browser is determining if the correct page was rendered. Furthermore, the web browser may maintain this temporary screen, if necessary, until the correct page is rendered. However, if the correct page was initially rendered, the temporary screen may be turned off after it has been determined to be the correct page. The temporary page may be a solid color, such as white, a loading page, or any other placeholder page.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 3"},"At block , a URL comprising a base path and a subpath is received on a server device from a web browser. The base path may correspond to a particular web application on the server device. Accordingly, the server device may use the base path to locate and execute the corresponding web application. The base path may take the form of an identifier prefixed by a forward slash. However, some server devices may only have one web application, and in such cases, the base path may be empty. Furthermore, the URL may also include a subpath to particular parts of a web application. Similarly to the base path, the subpath may take the form of an identifier prefixed by a forward slash.","The URL may also further include a fragment identifier which was appended by the web browser during a client-side rendering of a webpage. In particular, the identifier may be appended in the URL because a user has saved the URL previously, and may now be trying to reload the particular webpage associated with the URL. For example, the user may have bookmarked the previous client-side rendered webpage with the appended fragment identifier.","At block , the rendered webpage and associated JavaScript instructions is sent from the server device to the web browser. The rendered webpage and the JavaScript instructions may be sent over a network using a web communication protocol, for example HTTP. The rendered webpage may then be displayed in the web browser.","Accompanying the rendered page sent to the web browser may be JavaScript instructions that instruct the web browser how to render client-side subsequent page requests. The JavaScript instructions may be transmitted inside the rendered webpage or alongside the rendered webpage. These instructions may also instruct the web browser to append fragment identifiers to each webpage which is displayed in the web browser. However, when a URL with an appended fragment identifier is requested from the server device, in some cases the webpage rendered by the server device may be incorrect. This may be because some webservers may not be able to receive the fragment identifier. In such cases, the web browser may be further instructed using JavaScript instructions to check if the webpage rendered by the server device is the correct webpage according to the fragment identifier. If the fragment identifier corresponds to a different webpage, the web browser may client-side render the correct webpage, by rendering the corresponding webpage to the fragment identifier.","At block , the web browser is directed, in the JavaScript instructions, to determine whether the web browser is compliant based upon whether the web browser supports a URL modification mechanism. The URL modification mechanism is a system that some web browsers may support that may allow for the URL to be modified in the web browser. For example, the URL modification mechanism may be the HTML5 history API. If the web browser supports a URL modification mechanism then the web browser is compliant. If the web browser does not support a URL modification mechanism then the web browser is noncompliant. The web browser may be able to determine whether it supports the URL modification mechanism, based upon its name and version number. The web browser may also be able to determine whether it is compliant by executing JavaScript instructions. For example, the web browser may be able to execute a JavaScript instruction that will query whether the web browser supports a URL modification system. The web browser may also be able to execute JavaScript instructions that test whether the web browser has a URL modification mechanism. However, a person having skill in the art would recognize that there are other methods that may be used in order to check if the web browser includes URL modification mechanism.","At block , if the web browser is noncompliant, the URL is redirected to the base path and a rendered webpage is created based upon the base path. A redirection may be an action that causes the web browser to request a different webpage. The redirection may occur by executing JavaScript instructions received by the web browser. In particular, web browser may request the webpage associated with the basepath of the URL. This may occur by requesting the new webpage be rendered by the server device. However, the basepath webpage may also rendered client-side. If the URL request has a fragment identifier appended, the corresponding webpage to the fragment identifier may then be rendered client-side. The fragment identifier from the original request may then be appended to the redirected URL. For example, if the original URL was \u201cwww.example.com\/page1#page2,\u201d the redirected URL may then be \u201cwww.example.com\/#page2.\u201d","If the web browser is compliant, the server device may also instruct the web browser using JavaScript instructions to modify the URL of any subsequently client-side rendered webpage to that webpage's corresponding base path and subpath using the URL modification mechanism. However, some URLs may also include fragment identifiers, because they may have been, for example, saved from a previous browsing session. In such cases, where the web browser is compliant, the fragments may be converted to their corresponding base path and subpath. The server device may be configured to send a JavaScript instruction that decodes the fragment identifier and modify the URL such that the base path and subpath correspond to the fragment identifier's corresponding webpage.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 4","FIGS. 1-3"],"b":["200","202","204","400"]},"One of ordinary skill in the art may appreciate that embodiments of the disclosed subject matter can be practiced with various computer system configurations, including multi-core multiprocessor systems, minicomputers, mainframe computers, computers linked or clustered with distributed functions, as well as pervasive or miniature computers that may be embedded into virtually any device.","For instance, a computing device having at least one processor device and a memory may be used to implement the above-described embodiments. A processor device may be a single processor, a plurality of processors, or combinations thereof. Processor devices may have one or more processor \u201ccores.\u201d","Various embodiments of the invention are described in terms of this example computer system . After reading this description, it will become apparent to a person skilled in the relevant art how to implement embodiments using other computer systems and\/or computer architectures. Although operations may be described as a sequential process, some of the operations may in fact be performed in parallel, concurrently, and\/or in a distributed environment, and with program code stored locally or remotely for access by single or multi-processor machines. In addition, in some embodiments the order of operations may be rearranged without departing from the spirit of the disclosed subject matter.","As will be appreciated by persons skilled in the relevant art, processor device  may also be a single processor in a multi-core\/multiprocessor system, such system operating alone, or in a cluster of computing devices operating in a cluster or server farm. Processor device  is connected to a communication infrastructure , for example, a bus, message queue, network, or multi-core message-passing scheme.","Computer system  also includes a main memory , for example, random access memory (RAM), and may also include a secondary memory . Secondary memory  may include, for example, a hard disk drive  and removable storage drive . Removable storage drive  may include a floppy disk drive, a magnetic tape drive, an optical disk drive, a flash memory, or the like. The removable storage drive  reads from and\/or writes to a removable storage unit  in a well-known manner. Removable storage unit  may include a floppy disk, magnetic tape, optical disk, etc. which is read by and written to by removable storage drive . As will be appreciated by persons skilled in the relevant art, removable storage unit  includes a computer readable storage medium having stored thereon computer software and\/or data.","Computer system  (optionally) includes a display interface  (which can include input and output devices such as keyboards, mice, etc.) that forwards graphics, text, and other data from communication infrastructure  (or from a frame buffer not shown) for display on display unit .","In alternative implementations, secondary memory  may include other similar means for allowing computer programs or other instructions to be loaded into computer system . Such means may include, for example, a removable storage unit  and an interface . Examples of such means may include a program cartridge and cartridge interface (such as that found in video game devices), a removable memory chip (such as an EPROM, or PROM) and associated socket, and other removable storage units  and interfaces  which allow software and data to be transferred from the removable storage unit  to computer system .","Computer system  may also include a communications interface . Communications interface  allows software and data to be transferred between computer system  and external devices. Communications interface  may include a modem, a network interface (such as an Ethernet card), a communications port, a PCMCIA slot and card.","Some embodiments may be directed to computer products comprising software stored on any computer readable storage medium. Such software, when executed in one or more data processing device, causes a data processing device(s) to operate as described herein.","Certain embodiments may be implemented in hardware, software, firmware, or a combination thereof. Some embodiments may be implemented via a set of programs running in parallel on multiple machines.","The summary and abstract sections may set forth one or more but not all exemplary embodiments of the present invention as contemplated by the inventor(s), and thus, are not intended to limit the present invention and the appended claims in any way.","Embodiments of the present invention have been described above with the aid of functional building blocks illustrating the implementation of specified functions and relationships thereof. The boundaries of these functional building blocks have been arbitrarily defined herein for the convenience of the description. Alternate boundaries can be defined so long as the specified functions and relationships thereof are appropriately performed.","The foregoing description of the specific embodiments will so fully reveal the general nature of the invention that others can, by applying knowledge within the skill of the art, readily modify and\/or adapt for various applications such specific embodiments, without undue experimentation, without departing from the general concept of the present invention. Therefore, such adaptations and modifications are intended to be within the meaning and range of equivalents of the disclosed embodiments, based on the teaching and guidance presented herein. It is to be understood that the phraseology or terminology herein is for the purpose of description and not of limitation, such that the terminology or phraseology of the present specification is to be interpreted by the skilled artisan in light of the teachings and guidance.","The breadth and scope of the present invention should not be limited by any of the above-described exemplary embodiments."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS\/FIGURES","p":["Embodiments of the invention are described with reference to the accompanying drawings. In the drawings, like reference numbers may indicate identical or functionally similar elements. The drawing in which an element first appears is generally indicated by the left-most digit in the corresponding reference number.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
