---
title: System and method for active configuration management
abstract: A system and method for active configuration management of the components of a data repository maintained in memory of a computer system is disclosed herein. The method includes creating a plurality of file system event objects in response to the occurrence of a corresponding plurality of events associated with ones of the components. A plurality of file system event objects are then entered into an event queue. Next, a sequence of configuration management (CM) operations involving identified ones of the components are executed on the basis of corresponding ones of the file system event objects.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07644392&OS=07644392&RS=07644392
owner: Telelogic Technologies North America, Inc.
number: 07644392
owner_city: Irvine
owner_country: US
publication_date: 20020412
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application is related to U.S. Provisional Patent Application No. 60\/372,098, filed Apr. 12, 2002, which is hereby incorporated herein by reference.","The present invention relates to version management of multi-module systems and, in particular, actively and automatically managing revision of the modules of such systems during the development process.","As is well known, both the hardware and the software incorporated within modem computer systems are considerable more complex than in years past. In early incarnations of computer systems, the hardware often consisted of a single processor configured to execute software programs that were typically relatively small and generally comprised only a single text file of source code.","Paralleling the increase in sophistication and complexity of the hardware components of modern computer systems, software programs have also become larger and more complex. In addition, software programs are now typically organized into a plurality of cooperative modules. Organizing a software program into a number of modules enable each such module to be separately compiled into object code, which may typically be effected in significantly less time than compiling an entire program. In addition, modular programming has permitted segments of code to be reused both within a given program as well as between separate programs.","However, the general acceptance of modular programming techniques has created a concomitant need a need for methods of generating and maintaining versions of complex software programs composed of a plurality of modules, each of which is capable of being edited by multiple users. For a rather prolonged period, there was little development of automated \u201cconfiguration management\u201d or \u201cversion control\u201d software to address this need. Rather, documentation and control of current versions of software programs was generally painstakingly accomplished using manual configuration management techniques.","One early approach to automated configuration management involved maintenance of references between the source code files of program modules within a centralized \u201cproject\u201d file. The project file generally contains a record such source code files along with references between the files and a current \u201cstate\u201d of each file. Generally, a date and time stamp is applied to each source code file upon modification of the file. When this approach to configuration management is employed, compiling of the program involves performing a \u201cbuild\u201d during which all source code files in the project database which need recompiling are sequentially compiled. During each such subsequent \u201cbuild\u201d operation, the configuration management software compares the time stamp of each source code file to a time stamp corresponding the most recent build operation. Those source codes files which have a time stamp later than the last build date are recompiled before linking.","Although the project file approach may lead to satisfactory results for programs comprises of relatively small numbers of modules edited by a relatively few number of users, in larger projects various difficulties may arise. For example, because this approach provides no meaningful coordination between editing and \u201cversioning\u201d of program modules (which is typically effected only when the configuration management systems is invoked by users), a number of configuration management errors have been found to frequently arise. One such error occurs when multiple users happen to simultaneously edit a single file. Another error occurs when unsaved buffers or work areas are not incorporated in a new version of the program created during a build operation, which is one of the adverse consequences which may arise when the contents of a work area do not remain synchronized with the file repository of the configuration management system. In addition, new files created by a user may be lost if the user does not inform the configuration management system of the existence of such files.","These difficulties associated with current approaches to configuration management are exacerbated by the fact that software is being developed more quickly than ever before. Integrated development tools and environments enable rapid prototyping of complex applications, and tools often are used to generate application code. Software that once took months or years to develop can be put together in just weeks or even days. However, modern software tools often conceal from the software developer information concerning the number and names of files produced during the development process. When utilizing existing configuration management systems, it is generally incumbent upon the software developer to fully understand the nature of the files being created and to appropriately interact with the configuration management system in order to properly control such files. When large number of such software \u201cartifact\u201d files are created during the development process, management of the aggregate set of files associated with a given development project may become unduly burdensome.","For these and other reasons, existing configuration management systems are often seen as a hindrance in this environment of rapid application development. That is, the engineers and other professionals engaged in software development often view configuration management simply as a way of backing up work or of aiding other members of the software development team (e.g., \u201cbuild managers\u201d or \u201ctesters\u201d). Software developers have shown reticence in invoking a configuration management system each time a new file generated, or when an existing file is modified or renamed. In short, software developers are typically loathe to spend time interacting with configuration management systems, and would likely be receptive to a configuration management system that is more automatic and less intrusive.","In summary, the present invention relates to a method for active configuration management of the components of a data repository maintained in memory of a computer system. The method includes creating a plurality of file system event objects in response to the occurrence of a corresponding plurality of events associated with ones of the components. A plurality of file system event objects are then entered into an event queue. Next, a sequence of configuration management (CM) operations involving identified ones of the components are executed on the basis of corresponding ones of the file system event objects.","In an exemplary implementation, the method includes setting a result time upon entry of a first of the file system event objects into the event queue, wherein the first of the file system event objects is transferred from the event queue to a command queue upon expiration of the result time. New file system event objects may also be created based upon first and second related ones of the file system event objects. Each new file system event object serves to replace the first and second related file system event objects upon which it is based, and is inserted into a predefined position within the event queue.","The present invention facilitates active configuration management of complex software systems comprised of a plurality of components or objects including, without limitation, computer programs, databases, and text documents. Such complex software systems, which are typically subdivided into pluralities of subcomponents, are often developed and modified by multiple users.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 1","FIG. 1","FIG. 1"],"b":["100","102","104","108","112","14","104","112","104"]},"As shown, the server unit  of the convention CM system  includes a server-side configuation management (CM) module  and associated CM file repository . In the implementation of , the server-side CM module  interfaces with a client-side CM module  within each client unit . In this regard the server-side CM module  and client-side CM modules  collectively implement the conventional configuration management system  which may be realized using, for example, the CM Synergy configuration management system offered by [Telelogic North America, Inc.]. As is discussed below, the active configuration management system of the present invention is capable of interacting with any conventional configuration management system  through its associated application programming interface (API). It follows that the particular allocation of functionality among the server-side CM module  and the client-side CM modules  is immaterial with respect to the structure or operation of the active configuration management system of the present invention.","Referring again to , each client unit  includes an active configuration management (CM) module  disposed to effect active configuration management operations in accordance with the present invention. Each active CM module  interfaces through an API  with the associated client-side CM module  within the applicable client unit .","As mentioned previously, the functionality of the active CM system of the present invention supplements that of the conventional configuration management system  in a manner that results in elimination of many of the disadvantages of system . For example, the active CM system of the present invention effects automatic saving of changes made in a work area to the corresponding component of the CM file repository . That is, users will not need to invoke a conventional reconciliation operation or its equivalent in order to ensure that changes made in their respective work areas are mirrored within corresponding components in the CM file repository . Similarly, when a user renames or moves a file, the same change will automatically occur in the CM file repository without the user intervention which would be conventionally required.","The active CM system of present invention also facilitates making the file directories associated with users of the client units  \u201ctransparent\u201d to other such users by causing directory information to be automatically saved within the CM file repository . That is, users of conventional configuration management systems must generally remember to \u201ccheck-in\u201d the directory associated with a new file upon check-in of such file to render the file visible to other system users. The inventive active CM system is disposed to learn, by monitoring the behavior of users of the client units , which types of files should be saved to the CM file repository  or otherwise be made subject to CM control. In this regard many software tools executable on the client units  create temporary files that the applicable user would not want saved or controlled. In an exemplary embodiment, the active CM system will learn to ignore such temporary files on the basis of the work habits of the users of the client units .",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 2","b":["112","112","202","204","208","210","212","208","112","214","108","208","116","124","104","120","112"]},"Referring to , a particular implementation of one of the client units  is depicted in block diagram form. Although a particular client unit  may only have some of the units illustrated in  or may have additional components not shown, most client units will include at least the elements shown. Each client unit  preferably includes a central processing unit (\u201cCPU\u201d) , a memory subsystem , RAM  and ROM . The memory subsystem  holds a copy of the operating system  for the client unit . The operating system  is capable of generating conventional event messages based upon file system activity. Also included within the memory subsystem  are the client-side CM module  and the active CM module , each of which executes on the CPU . The client unit  further includes a user interface  (e.g., a display, keyboard and\/or mouse), and standard network communication device  for establishing a link with the applicable network connection . Each of the client units  need not have this configuration, and this configuration is intended to be merely illustrative.","Before a user of a client unit  begins interaction with any file components stored within the CM file repository , the operating system  loads both the client-side CM module  and the active CM module  into RAM . As is described hereinafter, the active CM module  of the present invention commands the client-side CM module  to perform various operations in response to user interaction with file components (e.g., user editing, renaming, and saving). During operation of the system , the client-side CM module  of a client unit  may initiate access one or more file-based components of the CM file repository  using by cooperating with server-side CM module  to initialize a project \u201cwork area\u201d within RAM  through which file editing operations may be performed. The mechanisms and details associated with such initialization of a work area, and initial check-out or other retrieval of components from the CM file repository , are known to those skilled in the art and will not be described further herein. Once the work area has been opened, the user may edit or otherwise interact with the applicable file component via user interface  and associated application program (e.g., Microsoft Word) executing on the operating system . These editing operations and other user interactions with the work area are monitored by the active CM module , which communicates appropriate instructions to the client-side CM module  via API  in response to certain user operations (described below) affecting the composition or directory representation of file components represented within the CM file repository .",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 4","b":["130","130","402","406","306","104","406","410","402","414","410","410","414","410","422","102","134"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIGS. 5 and 6","FIG. 5"],"b":["130","306","104","102","502","503"]},"In an initial operation (step ) of the event queue processing thread , an input FSEvent object  is created by the event processing module  in response to such a file processing event received from the operating system . If an FSEvent is present within the event queue , the queued FSEvent is then retrieved (step ) and provided to the net effect interpreter  along with the input FSEvent object . Within the net effect interpreter , then net effect processing (step ) is carried out using the input FSEvent object  and the retrieved FSEvent object (described below with reference to ). Such net effect processing  is performed with respect to the input FSEvent object until either: (1) the input FSEvent object  is combined with an FSEvent object retrieved from the event queue  in order to yield a new FSEvent object, or (2) net effect processing has been carried out between the input FSEvent object  and each FSEvent object within the event queue  and no unexamined FSEvent objects remain within the event queue  (step ). The new FSEvent object  created during such net effect processing (i.e., which comprises either the original input FSEvent object  or a combined FSEvent object based upon the input FSEvent object  and another FSEvent object previously within the event queue ) is then placed in the last position of the event queue  (step ) and appropriately time-stamped (step ). In the case where the new FSEvent object  comprises a combination of the input FSEvent object  and another FSEvent object within the event queue , both of these FSEvent objects are deleted from the event queue  upon insertion therein of the new FSEvent object . The steps - of processing thread  are repeated for each file system event received from the operating system .",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 6","FIG. 6","FIG. 5"],"b":["414","604","506","612","410","506","612","618","506","622","528","628","506","612","634","528","306"]},"Turning again to , in the exemplary embodiment the command queue thread  executes continuously and substantially constantly monitors the event queue . That is, the event queue  is monitored in order to determine when at least one FSEvent object is stored therein (step ). Upon detecting that the result time of an FSEvent object within the event queue  has expired (step ), then such FSEvent object is retrieved from the event queue  (step ) and no further net effects processing is done with respect to the retrieved FSEvent object. In the exemplary embodiment, a set of filters in the form of regular expressions is applied to the FSEvent object retrieved from the event queue  (step ). If the retrieved FSEvent object does not match one of the applied filters (step ), it will be mapped to an active CM command object  in the manner described below (step ); otherwise, the retrieved FSEvent object is discarded (step ). In general, the filters applied to the retrieved FSEvent object are constructed so as to identify only those FSEvent objects not of interest to the conventional CM system . For example, many development tools and other application programs installed on client units  may create a number of temporary files during execution. These files are often not of interest from the perspective of the CM system  or to users of the client units , since they are generally only created, accessed and used exclusively by the application program or tool responsible for their creation. Accordingly, filters may be constructed to preclude such temporary and similarly uninteresting files from being processed by the CM system .","As shown in , the command queue thread  continuously monitors the command queue  and waits until an active CM command object is inserted therein (step ). Once this occurs, one or more instructions corresponding to the active CM command object are passed to the CM system  via the API, thereby causing the CM system  to perform a sequence of one or more operations of the type described below with reference to  (step ).",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIGS. 7-10","FIGS. 7-10","FIG. 7","FIGS. 7-10","FIGS. 7-10"]},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 7","ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":{"@attributes":{"id":"ul0001-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":["create a CommandQueue","creates an empty FileCache","creates a FSMonitor","creates a CMSFSMonitorListener","adds the CMSFSMonitorListener to the FSMonitor","creates a Filter","adds the Filter to the CMSFSMonitorListener"]}}}},"Following this system initialization process, directories to be monitored by the inventive active CM system are identified in the manner depicted by the event trace diagram of . Specifically, cms_taskbar.exe adds the directories to be monitored to CMSFSMonitor using a CMSFSMonitor.add_directory( ) method. CMSFSMonitor.add_directory( ) passes directory path to its FSMonitor.addDirectory( ) method. Next, FSMonitor.addDirectory informs the operating system  of the applicable client unit  to begin monitoring events on the passed directory hierarchy. CMSFSMonitor.add_directory( ) also passes the directory path onto its CMSFSMonitorListener.add_directory( ) method, and CMSFSMonitorListener.add_directory( ) gets the FileCache and calls FileCache.load_cache. FileCache.load_cache will then add all of the files and directories in the specified path to the FileCache.",{"@attributes":{"id":"p-0052","num":"0058"},"figref":"FIGS. 8 and 9","b":["306","104","306","306"]},{"@attributes":{"id":"p-0053","num":"0059"},"figref":["FIG. 10","FIG. 5","FIG. 5","FIG. 10"],"b":["503","410","418","102","503","410","418"]},"As was described above with reference to , certain FSEvents removed from the event queue  are mapped to appropriate active CM commands, each of which is disposed to invoke functionality of the CM system  by causing it to perform various conventional CM operations (e.g., file \u201ccheck out\u201d and \u201ccheck in\u201d operations). In an exemplary implementation of the active CM system, the actual mapping of FSEevents to active CM commands is performed using an appropriate visit method (described below) in CMSFSMonitorListener. Table I sets forth an exemplary set of mappings between FSEvents and corresponding active CM commands. As is described hereinafter, each active CM command is configured to invoke particular functionality of the CM system  by specifying certain operations to be performed by the CM system  via the API  of the applicable client unit . Although the exemplary set of mappings between various FSEvent objects and corresponding active CM commands set forth below in Table I have been developed with a view toward invoking functionality of the above-referenced CM Synergy configuration management system, it may be appreciated that analogous mappings may be utilized in alternate implementations in order to invoke the functionality of other commercially available configuration management systems.",{"@attributes":{"id":"p-0055","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE I"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"CMSFSMonitorListener",{}]},{"entry":["FSEvent","method","Active CM Command"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FSModifyEvent","visitModifyEvent( )","tsync"]},{"entry":["FSRemoveEvent","visitRemoveEvent( )","tremove"]},{"entry":["FSAddEvent","visitAddEvent( )","tsync"]},{"entry":["FSRenameEvent","visitRenameEvent( )","trename"]},{"entry":["FSSynchronizeEvent","visitSynchronizeEvent( )","tsync"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0056","num":"0062"},"figref":["FIGS. 11-13","FIG. 11","FIG. 11"],"b":["102","102"]},{"@attributes":{"id":"p-0057","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"tsync"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"If file name is not a valid controlled file name, done"]},{"entry":[{},"If file is uncontrolled and it still exists"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Check previous version of the directory for a file of the same"]},{"entry":[{},"name"]},{"entry":[{},"If such a file exists"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"It is restored to the directory without overwriting the"]},{"entry":[{},"existing file"]},{"entry":[{},"Go to controlled file code"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Create any directories required for the file in the database"]},{"entry":[{},"Controlled object is created"]},{"entry":[{},"Done"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"If file is controlled"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"If file is root directory of a project"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Scan through project looking for controlled files which are"]},{"entry":[{},"missing from the work area and tremove them"]},{"entry":[{},"Done"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"If work area file does not exist, tremove it, done"]},{"entry":[{},"If file is a directory, done"]},{"entry":[{},"If controlled file is checked out"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Associate file with current task"]},{"entry":[{},"Update database if content of work area was created more"]},{"entry":[{},"recently"]},{"entry":[{},"Done"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"If work area file is different from database file"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Check out a new version"]},{"entry":[{},"Done"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0058","num":"0064"},"figref":["FIG. 12","FIG. 12"],"b":"102"},{"@attributes":{"id":"p-0059","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"tremove"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"If file is a product, done"},{"entry":"If file is a directory"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"For all children of the directory including sub-"]},{"entry":[{},"directories"]},{"entry":[{},"If file is checked out, delete it"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Unuse file"},{"entry":"If file is checked out, delete it"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Referring now to , an activity diagram is provided that is representative of the processing carried out by the CM system  in response to a transparent rename (\u201ctrename\u201d) CM command created on the basis of an FSEvent of type FSRenameEvent. The processing operations represented by the activity diagram of  may be more fully appreciated by referring to the exemplary pseudocode for the trename operation set forth below:",{"@attributes":{"id":"p-0061","num":"0067"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"trename"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"If new name not a valid controlled file name, tsync old file"]},{"entry":[{},"name, done"]},{"entry":[{},"If old file is not controlled, tsync new file, done"]},{"entry":[{},"If old file still exists in work area"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tsync old file"]},{"entry":[{},"tsync new file"]},{"entry":[{},"done"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"If new file is already controlled"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"tremove old file"]},{"entry":[{},"tsync new file"]},{"entry":[{},"done"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"unuse old file"]},{"entry":[{},"create any directories required for the new file in the database"]},{"entry":[{},"If renaming"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"If old file is not checked out, check it out"]},{"entry":[{},"If old file is bound in other projects"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"If old file does not have predecessors, create a new file"]},{"entry":[{},"else check out from a predecessor"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Rename database object"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"use new file"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0062","num":"0068"},"figref":["FIGS. 14-22","FIGS. 14-22"],"i":"Unified Modeling Language Specification "},"Turning now to , a class diagram is provided for a CM Synergy File System Monitor (CMSFSMonitor) class. Instantiations of the CMSFSMonitor class function to (1) provide interfaces enabling interaction between the active CM system of the present invention and other software executed by the applicable client unit , (2) control other classes of the active CM system that interact with native file systems, and (3) marshal interactions with the CM system . As may be apparent from the other class diagrams described below, many of the methods in CMSFSMonitor serve as wrappers for methods associated with the CMFSMonitorListener and FSMonitor classes. Table II and Table III respectively describe the functions of a constructor and various methods associated with the CMSFSMonitor class.",{"@attributes":{"id":"p-0064","num":"0070"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE II"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"CONSTRUCTOR","DESCRIPTION"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"CMSFSMonitor( )","Starts the active CM session"]},{"entry":[{},{},"Creates an empty FileCache"]},{"entry":[{},{},"Creates a CMSFSMonitorListener"]},{"entry":[{},{},"Creates a Filter"]},{"entry":[{},{},"Creates a FSMonitor"]},{"entry":[{},{},"Creates a CommandQueue"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0065","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE III"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["METHODS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["addDirectory(directory:string):void","Add directory to the set of directories"]},{"entry":[{},"being monitored."]},{"entry":[{},"This is a wrapper method that passes"]},{"entry":[{},"directory to CMSFSMonitor."]},{"entry":[{},"addDirector( ) and FSMonitor."]},{"entry":[{},"addDirectory( )."]},{"entry":["removeDirectory(directory: string):","Remove directory from the set of"]},{"entry":["void","directories being monitored."]},{"entry":[{},"This is a wrapper method that passes"]},{"entry":[{},"a directory to CMSFSMonitor."]},{"entry":[{},"addDirectory( ) and FSMonitor."]},{"entry":[{},"addDirectory( )."]},{"entry":["synchronize( ):void","Force all files in monitored"]},{"entry":[{},"directories to be synchronized with"]},{"entry":[{},"the CM system."]},{"entry":["queue_command(com-","Queue a command for processing."]},{"entry":["mand:string):void","This method is used by calling"]},{"entry":[{},"applications to place commands in"]},{"entry":[{},"the command queue 418 to be"]},{"entry":[{},"processed along with commands"]},{"entry":[{},"being generated by the"]},{"entry":[{},"CMSFSMonitorListener"]},{"entry":["get_filter( ):Filter","Get a reference to the file name"]},{"entry":[{},"filter object."]},{"entry":["get_server( ):IsessionPtr","Get a reference to the underlying CM"]},{"entry":[{},"API COM object."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0066","num":"0072"},"figref":"FIG. 15","b":"102"},{"@attributes":{"id":"p-0067","num":"0073"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE IV"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"CONSTRUCTOR","DESCRIPTION"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FileCache( )","Constructs an empty FileCache"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0068","num":"0074"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE V"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["METHODS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["load_cache(base_dir: string):void","Load the contents of base_dir and its"]},{"entry":[{},"subdirectories into the cache"]},{"entry":["Unload_cache(base_dir:","Remove the contents of this directory"]},{"entry":["string):void","and its subdirectories from the cache."]},{"entry":["get_cache_item(path_name:","Look up the FileCacheEntry for"]},{"entry":["string): FileCacheEntry","path_name in the cache. Returns"]},{"entry":[{},"NULL if entry is not found."]},{"entry":["is_controlled(path_name:","Returns true of path_name is under"]},{"entry":["string):bool","control of CM system 102."]},{"entry":["update_cached_item(path_name:","Update the cached information for"]},{"entry":["string): FileCacheEntry","path_name"]},{"entry":["remove_cache_item(entry:File-","Remove entry from the cache."]},{"entry":"CacheEntry):void"},{"entry":["update_entry(entry FileCache-","Update the cache's date for the"]},{"entry":["Entry, recurse_children:bool):void","passed entry. If entry is a directory,"]},{"entry":[{},"and recurse_children is true, then"]},{"entry":[{},"update the contents of the directory as"]},{"entry":[{},"well."]},{"entry":["get_all_children(entry:FileCache-","Get FileCacheEntrys' for all of the"]},{"entry":["Entry):EntryCollection","files contained within a directory."]},{"entry":["set_filter(filter:EventFilter):void","Set the filename filter which will be"]},{"entry":[{},"used to determine if controlled files"]},{"entry":[{},"need to be cached."]},{"entry":["invalidate_entry(entry:FileCache-","Mark the entry's timestamp so that"]},{"entry":["Entry):void","the item does not appear to be"]},{"entry":[{},"current."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0069","num":"0075"},"figref":"FIG. 15","b":"102"},{"@attributes":{"id":"p-0070","num":"0076"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE VI"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["CONSTRUCTOR","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FileCacheEntry(file_name:string,","Constructs a FileCacheEntry for the"]},{"entry":["file_time:FILETIME,","passed file_name with the passed"]},{"entry":["attributes:DWORD,","attributes and the passed parent."]},{"entry":"parent:FileCacheEntry)"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0071","num":"0077"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE VII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["METHODS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["isDir( ):bool","Return true if the entry is a directory."]},{"entry":["isTemp( ):bool","Return true if the entry is a temporary"]},{"entry":[{},"file."]},{"entry":["isHidden( ):bool","Return true if the entry is a hidden or"]},{"entry":[{},"system file."]},{"entry":["compare_file( ):bool","Return true if cached values matches"]},{"entry":[{},"the file's current state."]},{"entry":["get_path( ):string","Return the full path name of this"]},{"entry":[{},"entry."]},{"entry":["get_file_name( ):string","Return this entry's name."]},{"entry":["get_short_file_name( ):string","Return this entry's short file name."]},{"entry":["has_short_name( ):bool","Return true if short name different"]},{"entry":[{},"from long name."]},{"entry":["get_file_time( ):FILETIME","Return the last modification"]},{"entry":[{},"timestamp."]},{"entry":["add_child(child:FileCache-","Adds the child to this directory entry."]},{"entry":"Entry):void"},{"entry":["remove_child(child:FileCache-","Removes the child from this directory"]},{"entry":["Entry):void","entry."]},{"entry":["remove_children( ):void","Remove all children from this"]},{"entry":[{},"directory entry recursively."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0072","num":"0078"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0073","num":"0079"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE VIII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["METHODS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["filter(event:FSEvent):bool","Extract the file name from FSEvent"]},{"entry":[{},"and check for a match against the set"]},{"entry":[{},"of filters."]},{"entry":[{},"Returns true of the file name matches"]},{"entry":[{},"one of the regular expressions"]},{"entry":["filter_name(file_name:","Check the passed file_name against"]},{"entry":["string):bool","the set of regular expressions"]},{"entry":[{},"Returns true if the passed file_name"]},{"entry":[{},"matches one of the regular"]},{"entry":[{},"expressions"]},{"entry":["get_patterns( ): vector","Returns a vector containing all of the"]},{"entry":[{},"patterns as strings."]},{"entry":["get_default_patterns( ): vector","Returns a vector containing the"]},{"entry":[{},"system default patterns as strings"]},{"entry":["replace_patterns(pat-","Replace the current set of patterns"]},{"entry":["tern_strings:vector):void","with the patterns in the passed"]},{"entry":[{},"pattern_strings vector."]},{"entry":["save_patterns(system_prefer-","Writes the patterns to the database."]},{"entry":["ences:bool): void","When system_preferences is false,"]},{"entry":[{},"the files are saved for the current"]},{"entry":[{},"user. When true, the default patterns"]},{"entry":[{},"for the whole database are saved."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The abstract EventFilter class functions to define an interface through which events from the operating system  of the applicable client unit  may be filtered. Table IX describes the function of various methods associated with the abstract EventFilter class.",{"@attributes":{"id":"p-0075","num":"0081"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE IX"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"METHODS","DESCRIPTION"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"filter(event:FSEvent):bool {abstract}","Filter based on an FSEvent."]},{"entry":[{},"filter_name(file_name:string):bool","Filter based on a file name."]},{"entry":[{},"{abstract}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0076","num":"0082"},"figref":"FIG. 17","b":["306","104","306"]},"It is observed that in the exemplary embodiment, \u201crename\u201d events as well as events created based upon the above-described \u201cnet effects\u201d of multiple events may be associated with two distinct files. In this regard the \u201coriginal_file attribute\u201d corresponds to the name of the file before such an event occurs, and also is the name that is known in the FileCache. The \u201cfilename\u201d attribute corresponds to the name of the file after such an event has been processed. Irrespective of the manner in which a particular FSEvent is created, the \u201cfilename\u201d and the \u201coriginal_filename\u201d attributes are saved as part of the state of the FSEvent. If the two files corresponding to \u201cfilename\u201d and \u201coriginal_filename\u201d have the same name, then no renaming of the latter file is deemed to have occurred as a result of the event.","Table X and Table XI respectively describe the functions of a constructor and various methods associated with the abstract FSEvent class.",{"@attributes":{"id":"p-0079","num":"0085"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE X"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["CONSTRUCTOR","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FSEvent(filename:string, original","Constructs an FSEvent with the given"]},{"entry":["filename:string)","filename and original_filename."]},{"entry":"FSEvent(filename:string)"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0080","num":"0086"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XI"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["METHODS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["accept_visitor(v:FSEventVisitor):void {abstract}","All classes implementing FSEvent must be able to accept a"]},{"entry":[{},"FSEventVisitor. FSEventVisitors classes will fully implement"]},{"entry":[{},"the FSEventVisitor abstract class."]},{"entry":[{},"The accept_visitor( ) method is a part of the implementation of"]},{"entry":[{},"the Visitor Pattern. Each concrete subclass of FSEvent will"]},{"entry":[{},"need to add a method interface to the FSEventVisitor class."]},{"entry":[{},"The concrete subclass will then implement an accept_visitor"]},{"entry":[{},"where it will call that method, passing an instance of itself."]},{"entry":["get_event_kind( ):FSEventKind_t {abstract}","Specific implementations of get_event_kind( ) must return their"]},{"entry":[{},"own FSEventKind_t."]},{"entry":["create_event(system_event:FILE_NOTIFY_INFORMATION,","Create an event from a FILE_NOTIFY_INFORMATION"]},{"entry":["base_directory:string):FSEvent","struct. The appropriate subclass of FSEvent will be created."]},{"entry":["Event Action","Description"]},{"entry":["FILE_ACTION_ADDED","The specified file was added to the file system"]},{"entry":["FILE_ACTION_REMOVED","The specified file was removed from the file system"]},{"entry":["FILE_ACTION_MODIFIED","The specified file was modified"]},{"entry":["FILE_ACTION_RENAMED_OLD_NAME","The specified file was renamed. This event contains the old file"]},{"entry":[{},"name"]},{"entry":["FILE_ACTION_RENAMED_NEW_NAME","The specified file was renamed. This event contains the new"]},{"entry":[{},"file name"]},{"entry":["Event Action","Resulting subclass of FSEvent"]},{"entry":["FILE_ACTION_ADDED","FSAddEvent"]},{"entry":["FILE_ACTION_REMOVED","FSRemoveEvent"]},{"entry":["FILE_ACTION_MODIFIED","FSModifyEvent"]},{"entry":["FILE_ACTION_RENAMED_OLD_NAME and","FSRenameEvent"]},{"entry":"FILE_ACTION_RENAMED_NEW_NAME"},{"entry":["get_file_name( ):string","Returns the full filename (path included) for this event."]},{"entry":["get_old_file_name( ):string","Returns the full original_filename (path included) for this"]},{"entry":[{},"event. If the event did not result in the file being renamed, then"]},{"entry":[{},"get_old_file_name( ) will return the same result as"]},{"entry":[{},"get_file_name( )."]},{"entry":["get_event_time( ):long","Get the time this event occurred."]},{"entry":["same_file(other_event:FSEvent):bool","Check if other_event refers to the same file."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Each FSEvent will typically be characterized by an Action attribute specifying the type of event which has occurred (i.e., the type of event received from the operating system ), as well as the identity of the file with which such event is associated. Table XII summarizes a list of exemplary Actions.",{"@attributes":{"id":"p-0082","num":"0088"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["EVENT ACTION","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FILE_ACTION_ADDED","The specified file was added to the file"]},{"entry":[{},"system"]},{"entry":["FILE_ACTION_REMOVED","The specified file was removed from the"]},{"entry":[{},"file system"]},{"entry":["FILE_ACTION_MODIFIED","The specified file was modified"]},{"entry":["FILE_ACTION_RENAMED","The specified file was renamed. This"]},{"entry":["OLD_NAME","event contains the old file name"]},{"entry":["FILE_ACTION_RENAMED","The specified file was renamed. This"]},{"entry":["NEW_NAME","event contains the new file name"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Upon being received from the operating system , each file system event is mapped to a corresponding subclass of FSEvent class. An exemplary mapping of file system events to subclasses of FSEvents is set forth below in Table XIII.",{"@attributes":{"id":"p-0084","num":"0090"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XIII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":[{},"RESULTING"]},{"entry":["EVENT ACTION","SUBCLASS OF FSEVENT"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FILE_ACTION_ADDED","FSAddEvent"]},{"entry":["FILE_ACTION_REMOVED","FSRemoveEvent"]},{"entry":["FILE_ACTION_MODIFIED","FSModifyEvent"]},{"entry":["FILE_ACTION_RENAMED_OLD","FSRenameEvent"]},{"entry":"NAME and FILE_ACTION_RENAMED"},{"entry":"NEW_NAME"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"It is noted that FILE_ACTION_RENAMED_OLD_NAME and FILE_ACTION_RENAMED_NEW_NAME events will typically be combined into on FSRenameEvent. Accordingly, when a FILE_ACTION_RENAMED_OLD_NAME is received, the existing or \u201cold\u201d file name is saved and combined with the file name specified in FILE_ACTION_RENAMED_NEW_NAME in order to create an FSRenameEvent.","Turning now to Table XIV, the parameter FSEventKind_t constitutes an enumeration of the types of specific implementations of FSEvents.",{"@attributes":{"id":"p-0087","num":"0093"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE XIV"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"FSEVENTKIND","SPECIFIC FSEVENT"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FSEventKind_NONE","N\/A"]},{"entry":[{},"FSEventKind_ADD","FSAddEvent"]},{"entry":[{},"FSEventKind_REMOVE","FSRemoveEvent"]},{"entry":[{},"FSEventKind_MODIFY","FSModifyEvent"]},{"entry":[{},"FSEventKind_RENAME","FSRenameEvent"]},{"entry":[{},"FSEventKind_SYNCHRONIZE","FSSynchronizeEvent"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The FSEventVisitor abstract class defines methods that will be called by concrete FSEvent classes in their accept_visitor method. Classes wishing to participate as an FSEventVisitor must implement the FSEventVisitor methods. Table XV describes the function of various methods associated with the abstract FSEventVisitor class. Applicants note that the use of \u201cVisitor\u201d objects consistent with a \u201cVisitor Pattern\u201d is described by Gamma et al., -, Addision-Wesley (1995), which is hereby incorporated by reference in its entirety.",{"@attributes":{"id":"p-0089","num":"0095"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XV"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["METHODS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["visitAddEvent(event:FSAdd-","Method called by FSAddEvent."]},{"entry":["Event):void {abstract}","accept_visitor( ). The calling"]},{"entry":[{},"FSAddEvent object will be passed as"]},{"entry":[{},"the event parameter."]},{"entry":["visitRemoveEvent(event:","Method called by FSRemoveEvent."]},{"entry":["FSRemoveEvent):void {abstract}","accept_visitor( ). The calling"]},{"entry":[{},"FSRemoveEvent object will be"]},{"entry":[{},"passed as the event parameter."]},{"entry":["visitModifyEvent(event:FSModify-","Method called by FSModifyEvent."]},{"entry":["Event):void {abstract}","accept_visitor( ). The calling"]},{"entry":[{},"FSModifyEvent object will be passed"]},{"entry":[{},"as the event parameter."]},{"entry":["visitRenameEvent(event:","Method called by FSRenameEvent."]},{"entry":["FSRenameEvent):void {abstract}","accept_visitor( ). The calling"]},{"entry":[{},"FSRenameEvent object will be"]},{"entry":[{},"passed as the event parameter."]},{"entry":["visitSynchronizeEvent(event:","Method called by FSSynchronize-"]},{"entry":["FSSynchronizeEvent):void","Event.accept_visitor( ). The calling"]},{"entry":["{abstract}","FSSynchronizeEvent object will be"]},{"entry":[{},"passed as the event parameter."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"FSRenameEvent is a concrete subclass of FSEvent which implements an FSEvent for processing the renaming of a file. In the exemplary embodiment FSRenameEvent always operates on two files: an original_filename and a new filename. The original_filename is the name of a file prior to the renaming operation, and the new filename is the name of the file  following such operation. Table XVI and Table XVII respectively describe the functions of a constructor and various methods associated with the FSRenameEvent subclass.",{"@attributes":{"id":"p-0091","num":"0097"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XVI"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["CONSTRUCTOR","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FSRenameEvent(filename:string,","Constructs a FSRenameEvent for the"]},{"entry":["original_filename:string)","passed filename and original"]},{"entry":[{},"filename."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0092","num":"0098"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XVII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["METHODS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["accept_visitor(v:FSEvent-","Implementation of the abstract"]},{"entry":["Visitor):void","method accept_visitor from FSEvent."]},{"entry":[{},"This implementation passes an"]},{"entry":[{},"instance of itself to v.visitRename-"]},{"entry":[{},"Event( )."]},{"entry":["get_event_kind( ):FSEvent-","returns FSEventKind_RENAME"]},{"entry":"Kind_t"},{"entry":["same_file(other_event:FS-","Check if other_event refers to the"]},{"entry":["Event):bool","same file. Since this is part of a"]},{"entry":[{},"rename, same_file( ) checks if the"]},{"entry":[{},"events are both referring to the same"]},{"entry":[{},"get_old_file_name( )."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"FSModifyEvent is a concrete subclass of FSEvent which implements an FSEvent for processing a modification to a file. Table XVIII and Table XIX respectively describe the functions of constructors and various methods associated with the FSModifyEvent subclass.",{"@attributes":{"id":"p-0094","num":"0100"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XVIII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["CONSTRUCTORS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FSModifyEvent(filename:string,","Constructs a FSModifyEvent for the"]},{"entry":["original_filename:string)","passed filename and original"]},{"entry":[{},"filename. As a result of net effects"]},{"entry":[{},"processing, the file may have started"]},{"entry":[{},"out with an original_filename and"]},{"entry":[{},"this name is preserved by using this"]},{"entry":[{},"constructor."]},{"entry":["FSModifyEvent(path:string)","Constructs an FSModifyEvent for the"]},{"entry":[{},"passed filename."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0095","num":"0101"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XIX"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["METHODS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["accept_visitor(v:FSEvent-","Implementation of the abstract"]},{"entry":["Visitor):void","method accept_visitor from FSEvent."]},{"entry":[{},"This implementation passes an"]},{"entry":[{},"instance of itself to v.visitModify-"]},{"entry":[{},"Event( )."]},{"entry":["get_event_kind( ):FSEvent-","returns FSEventKind_MODIFY"]},{"entry":"Kind_t"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"FSAddEvent is a concrete subclass of FSEvent which implements an FSEvent for processing the an addition of a file to the file system. Table XX and Table XXI respectively describe the functions of constructors and various methods associated with the FSAddEvent subclass.",{"@attributes":{"id":"p-0097","num":"0103"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XX"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["CONSTRUCTORS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FSAddEvent(filename:string,","Constructs a FSAddEvent for the passed"]},{"entry":["original_filename:string)","filename and original_filename. As a"]},{"entry":[{},"result of net effects processing, the file"]},{"entry":[{},"may have started out with an original"]},{"entry":[{},"filename and this name is preserved by"]},{"entry":[{},"using this constructor."]},{"entry":["FSAddEvent(filename:string)","Constructs an FSModifyEvent for the"]},{"entry":[{},"passed filename."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0098","num":"0104"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXI"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["METHODS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["accept_visitor(v.FSEvent-","Implementation of the abstract"]},{"entry":["Visitor):void","method accept_visitor from FSEvent."]},{"entry":[{},"This implementation passes an"]},{"entry":[{},"instance of itself to v.visitAdd-"]},{"entry":[{},"Event( )."]},{"entry":["get_event_kind( ):FSEvent-","Returns FSEventKind_ADD"]},{"entry":"Kind_t"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"FSRemoveEvent is a concrete subclass of FSEvent which implements an FSEvent for processing the removal of a file from the file system. Table XXII and Table XXIII respectively describe the functions of constructors and various methods associated with the FSRemoveEvent subclass.",{"@attributes":{"id":"p-0100","num":"0106"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["CONSTRUCTORS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FSRemoveEvent(filename.string,","Constructs a FSRemoveEvent for the"]},{"entry":["original_filename;string)","passed filename and original"]},{"entry":[{},"filename. As a result of net effects"]},{"entry":[{},"processing, the file may have started"]},{"entry":[{},"out with an original_filename and"]},{"entry":[{},"this name is preserved by using this"]},{"entry":[{},"constructor."]},{"entry":["FSRemoveEvent(filename:string)","Constructs an FSRemoveEvent for"]},{"entry":[{},"the passed filename."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0101","num":"0107"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXIII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["METHODS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["accept_visitor(v:FSEvent-","Implementation of the abstract"]},{"entry":["Visitor):void","method accept_visitor from FSEvent."]},{"entry":[{},"This implementation passes an"]},{"entry":[{},"instance of itself to v.visitRemove-"]},{"entry":[{},"Event( )."]},{"entry":["get_event_kind( ):FSEvent-","returns FSEventKind_REMOVE"]},{"entry":"Kind_t"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"FSSynchronizeEvent is a concrete subclass of FSEvent. Unlike the other subclasses of FSSynchronizeEvent, in the exemplary embodiment FSSynchronizeEvent is not created as a direct result of a file system event, but rather as a product of the net effects of multiple file system events. An FSSynchronizeEvent can be used to cause the contents of the filename to be synchronized with the CM system  (called through accept_visitor( )). Table XXIV and Table XXV respectively describe the functions of a constructor and various methods associated with the FSSynchronizeEvent subclass.",{"@attributes":{"id":"p-0103","num":"0109"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXIV"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["CONSTRUCTOR","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FSSynchronizeEvent(filename:","Constructs an FSRemoveEvent for"]},{"entry":["string)","the passed filename."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0104","num":"0110"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXV"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["METHODS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["accept_visitor(v:FSEvent-","Implementation of the abstract"]},{"entry":["Visitor):void","method accept_visitor from FSEvent."]},{"entry":[{},"This implementation passes an"]},{"entry":[{},"instance of itself to"]},{"entry":[{},"v.visitSynchronizeEvent( )."]},{"entry":["get_event_kind( ):FSEvent-","returns FSEventKind"]},{"entry":["Kind_t","SYNCHRONIZE"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Turning now to , a class diagram representative of the FSMonitor class is provided. The FSMonitor class manages registering directories with the file system event manager of the operating system , and handles initial processing of file system events. When FSMonitor is notified of a file system event, it calls FSEvent.create_event( ) to create a concrete FSEvent. The FSEvent is then passed to each of the registered FSMonitorListeners for processing. Table XXVI and Table XXVII respectively describe the functions of a constructor and various methods associated with the FSMonitor class.",{"@attributes":{"id":"p-0106","num":"0112"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE XXVI"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"CONSTRUCTORS","DESCRIPTION"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FSMonitor( )","Constructs an FSMonitor( )."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0107","num":"0113"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXVII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["METHODS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["addDirectory(directory:string):void","Inform the operating system 306 to"]},{"entry":[{},"begin monitoring the passed"]},{"entry":[{},"directory."]},{"entry":["removeDirectory(directo-","inform the operating system 306 to"]},{"entry":["ry:string):void","stop monitoring the passed directory."]},{"entry":["addListener(fsMonitor-","Add the passed fsMonitorListener to"]},{"entry":["Listener:FSMonitor-","the list of listeners to be informed of"]},{"entry":["Listener):void","FSEvents."]},{"entry":["removeListener(fsMonitor-","Remove the passed fsMonitorListener"]},{"entry":["Listener:FSMonitor-","from the list of listeners."]},{"entry":"Listener); void"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0108","num":"0114"},"figref":"FIG. 19","b":"102"},{"@attributes":{"id":"p-0109","num":"0115"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXVIII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["CONSTRUCTOR","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["CMSFSMonitorListener(cmsFs-","Constructs a CMSFSMonitorListener."]},{"entry":["Monitor:CMSFSMonitor)","The passed CMSFSMonitor is saved as"]},{"entry":[{},"part of the persistent state and is used"]},{"entry":[{},"internally."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0110","num":"0116"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXIX"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["METHODS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["check_event(fse:FSEvent):void","Puts the passed FSEvent on the Net"]},{"entry":[{},"Effects event queue. See FIG. 4-"]},{"entry":[{},"CMSFSMonitorListener Sequence"]},{"entry":[{},"Diagram."]},{"entry":["addDirectory(directory:string):void","CMSFSMonitorListener is the"]},{"entry":[{},"maintainer of the FileCache."]},{"entry":[{},"The addDirectory( ) method asks the"]},{"entry":[{},"CMSFSMonitor for the file cache and"]},{"entry":[{},"then adds the contents of the passed"]},{"entry":[{},"directory to the file cache."]},{"entry":["removeDirectory(direc-","CMSFSMonitorListener is the"]},{"entry":["tory:string):void","maintainer of the FileCache."]},{"entry":[{},"The addDirectory( ) method asks the"]},{"entry":[{},"CMSFSMonitor for the file cache and"]},{"entry":[{},"then removes the contents of the"]},{"entry":[{},"passed directory from the file cache."]},{"entry":["visitAddEvent(event:FSAdd-","visitAddEvent( ) turns the passed"]},{"entry":["Event):void","FSAddEvent into a CM operation."]},{"entry":[{},"See Table 1-FSEvent to CM"]},{"entry":[{},"Command Mapping."]},{"entry":[{},"Before running the CM operation, the"]},{"entry":[{},"event is sent through the Filter."]},{"entry":["visitRemoveEvent(event:","visitRemoveEvent ( ) turns the passed"]},{"entry":["FSRemoveEvent):void","FSRemoveEvent into a CM"]},{"entry":[{},"operation. See Table 1-FSEvent to"]},{"entry":[{},"CM Command Mapping."]},{"entry":[{},"Before running the CM operation, the"]},{"entry":[{},"event is sent through the Filter."]},{"entry":["visitModifyEvent(event:FSModify-","visitModifyEvent ( )turns the passed"]},{"entry":["Event):void","FSModifyEvent into a CM operation."]},{"entry":[{},"See Table 1-FSEvent to CM"]},{"entry":[{},"Command Mapping."]},{"entry":[{},"Before running the CM operation, the"]},{"entry":[{},"event is sent through the Filter."]},{"entry":["visitRenameEvent(event:FSRe-","visitRenameEvent ( ) turns the passed"]},{"entry":["nameEvent):void","FSRenameEvent into a CM"]},{"entry":[{},"operation."]},{"entry":[{},"Before running the CM operation, the"]},{"entry":[{},"event is sent through the Filter."]},{"entry":["visitSynchronizeEvent(event:","visitSynchronizeEvent ( ) turns the"]},{"entry":["FSSynchonizeEvent):void","passed FSSynchonizeEvent into a"]},{"entry":[{},"CM operation. See, e.g., Table I."]},{"entry":[{},"Before running the CM operation,"]},{"entry":[{},"the event is sent through the Filter."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0111","num":"0117"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0112","num":"0118"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXX"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["CONSTRUCTOR","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["CMSFSMonitorListener(cmsFs-","Constructs a CMSFSMonitorListener."]},{"entry":["Monitor:CMSFSMonitor)","The passed CMSFSMonitor is saved as"]},{"entry":[{},"part of the persistent state and is used"]},{"entry":[{},"internally."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0113","num":"0119"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXXI"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["METHODS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["shutdown_processing( ):void","Terminates command thread."]},{"entry":["queue_command(command:","Place the passed CMSCommand into the"]},{"entry":["CMSCommand):void","queue."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Table XXXII and Table XXXIII respectively describe the functions of a constructor and various methods associated with a CMSCommand class, which when instantiated serves as an object to represent a command string executable by the CM system .",{"@attributes":{"id":"p-0115","num":"0121"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXXII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["CONSTRUCTORS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["CMSCommand(command:string,","Constructs a CMSCommand with the"]},{"entry":["listener:CMSCmdListener)","passed command string. Listener and"]},{"entry":[{},"priority."]},{"entry":[{},"The command string is the actual CM"]},{"entry":[{},"command which will be processed."]},{"entry":[{},"The listener will process the results of"]},{"entry":[{},"the command."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0116","num":"0122"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXXIII"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["METHODS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["exec(server:lsession)","Execute the cm command using server. The"]},{"entry":[{},"results of the command will be passed to listener."]},{"entry":[{},"cmdResults( )"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"CMSCmdlistener is an abstract class defining an interface for calling a method that will accept the results of a CMSCommand. Table XXXIV describes the functions of various methods associated with the CMSCmdlistener class.",{"@attributes":{"id":"p-0118","num":"0124"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXXIV"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["METHODS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"cmdResults(cmdResults:string out):void {abstract}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0119","num":"0125"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0120","num":"0126"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXXV"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["CONSTRUCTORS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["NetEffectInterpreter","Constructs a NetEffectInterpreter. The"]},{"entry":["(cmsFsMonitor:CMSFSMonitor)","passes CMSFSMonitor is stored as part"]},{"entry":[{},"of the NetEffectInterpreter's persistent"]},{"entry":[{},"state."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0121","num":"0127"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXXVI"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["METHODS","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["get_next_event( ): FSEvent","Pull the first event off of event"]},{"entry":[{},"queue but only after the event is at"]},{"entry":[{},"least collection_time milliseconds"]},{"entry":[{},"old."]},{"entry":["queue_event(FSEvent): void","Adds an event to the event queue 410"]},{"entry":[{},"after applying net effects vs. all of"]},{"entry":[{},"events for the same file currently in"]},{"entry":[{},"the queue."]},{"entry":["event_available( ):bool","Returns true is an event is available"]},{"entry":[{},"and ready to process."]},{"entry":["createNetEffectEvent(first_event;","Returns a new FSEvent based on the"]},{"entry":["FSEvent, second_event:FSEvent):","net effect of the first_event and the"]},{"entry":["FSEvent","second_event. See Table 4-Net"]},{"entry":[{},"Effects."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0122","num":"0128"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE XXXVII"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["FIRST EVENT KIND","Second Event Kind","RESULT EVENT KIND"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["FSEventKind_ADD","FSEventKind_ADD","FSEventKind_ADD"]},{"entry":["FSEventKind_ADD","FSEventKind_REMOVE","FSEventKind_SYNC"]},{"entry":["FSEventKind_ADD","FSEventKind_MODIFY","FSEventKind_ADD"]},{"entry":["FSEventKind_ADD","FSEventKind_RENAME","FSEventKind_ADD"]},{"entry":["FSEventKind_ADD","FSEventKind_SYNC","FSEventKind_ADD"]},{"entry":["FSEventKind_REMOVE","FSEventKind_ADD","FSEventKind_MODIFY"]},{"entry":["FSEventKind_REMOVE","FSEventKind_REMOVE","FSEventKind_REMOVE"]},{"entry":["FSEventKind_REMOVE","FSEventKind_MODIFY","FSEventKind_MODIFY"]},{"entry":["FSEventKind_REMOVE","FSEventKind_RENAME","FSEventKind_RENAME"]},{"entry":["FSEventKind_REMOVE","FSEventKind_SYNC","FSEventKind_REMOVE"]},{"entry":["FSEventKind_MODIFY","FSEventKind_ADD","FSEventKind_MODIFY"]},{"entry":["FSEventKind_MODIFY","FSEventKind_REMOVE","FSEventKind_REMOVE"]},{"entry":["FSEventKind_MODIFY","FSEventKind_MODIFY","FSEventKind_MODIFY"]},{"entry":["FSEventKind_MODIFY","FSEventKind_RENAME","FSEventKind_RENAME"]},{"entry":["FSEventKind_MODIFY","FSEventKind_SYNC","FSEventKind_MODIFY"]},{"entry":["FSEventKind_RENAME","FSEventKind_ADD","FSEventKind_RENAME"]},{"entry":["FSEventKind_RENAME","FSEventKind_REMOVE","FSEventKind_REMOVE"]},{"entry":["FSEventKind_RENAME","FSEventKind_MODIFY","FSEventKind_RENAME"]},{"entry":["FSEventKind_RENAME","FSEventKind_RENAME","FSEventKind_RENAME"]},{"entry":["FSEventKind_RENAME","FSEventKind_SYNC","FSEventKind_RENAME"]},{"entry":["FSEventKind_SYNC","FSEventKind_ADD","FSEventKind_ADD"]},{"entry":["FSEventKind_SYNC","FSEventKind_REMOVE","FSEventKind_REMOVE"]},{"entry":["FSEventKind_SYNC","FSEventKind_MODIFY","FSEventKind_MODIFY"]},{"entry":["FSEventKind_SYNC","FSEventKind_RENAME","FSEventKind_RENAME"]},{"entry":["FSEventKind_SYNC","FSEventKind_SYNC","FSEventKind_SYNC"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"The foregoing description, for purposes of explanation, used specific nomenclature to provide a thorough understanding of the invention. However, it will be apparent to one skilled in the art that the specific details are not required in order to practice the invention. In other instances, well-known circuits and devices are shown in block diagram form in order to avoid unnecessary distraction from the underlying invention. Thus, the foregoing descriptions of specific embodiments of the present invention are presented for purposes of illustration and description. They are not intended to be exhaustive or to limit the invention to the precise forms disclosed, obviously many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications, to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated. It is intended that the following claims and their equivalents define the scope of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a better understanding of the nature of the features of the invention, reference should be made to the following detailed description taken in conjunction with the accompanying drawings, in which:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIGS. 8 and 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 21"}]},"DETDESC":[{},{}]}
