---
title: Capacitive sensing with programmable logic for touch sense arrays
abstract: A touch sense controller configured to be coupled to a touch sense array is disclosed. The touch sense controller includes programmable logic that includes programmable logic elements configured to manage measurement of capacitance associated with the touch sense array.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08681122&OS=08681122&RS=08681122
owner: Cypress Semiconductor Corporation
number: 08681122
owner_city: San Jose
owner_country: US
publication_date: 20110928
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["This application claims the benefit of Provisional Application No. 61\/477,144, filed on Apr. 19, 2011, the entire contents of which are hereby incorporated by reference.","The present invention relates generally to capacitive touch sense arrays, and more particularly, to a programmable sequencer based on programmable logic for touch sense arrays.","Computing devices, such as notebook computers, personal data assistants (PDAs), kiosks, and mobile handsets, have user interface devices, which are also known as human interface devices (HID). One user interface device that has become more common is a touch-sensor pad (also commonly referred to as a touchpad). A basic notebook computer touch-sensor pad emulates the function of a personal computer (PC) mouse. A touch-sensor pad is typically embedded into a PC notebook for built-in portability. A touch-sensor pad replicates mouse X\/Y movement by using two defined axes which contain a collection of sensor elements that detect the position of one or more conductive objects, such as a finger. Mouse right\/left button clicks can be replicated by two mechanical buttons, located in the vicinity of the touchpad, or by tapping commands on the touch-sensor pad itself. The touch-sensor pad provides a user interface device for performing such functions as positioning a pointer, or selecting an item on a display. These touch-sensor pads may include multi-dimensional sensor arrays for detecting movement in multiple axes. The sensor array may include a one-dimensional sensor array, detecting movement in one axis. The sensor array may also be two dimensional, detecting movements in two axes.","Another user interface device that has become more common is a touch screen. Touch screens, also known as touchscreens, touch windows, touch panels, or touchscreen panels, are transparent display overlays which are typically either pressure-sensitive (resistive or piezoelectric), electrically-sensitive (capacitive), acoustically-sensitive (surface acoustic wave (SAW)) or photo-sensitive (infra-red). The effect of such overlays allows a display to be used as an input device, removing the keyboard and\/or the mouse as the primary input device for interacting with the display's content. Such displays can be attached to computers or, as terminals, to networks. Touch screens have become familiar in retail settings, on point-of-sale systems, on ATMs, on mobile handsets, on kiosks, on game consoles, and on PDAs where a stylus is sometimes used to manipulate the graphical user interface (GUI) and to enter data. A user can touch a touch screen or a touch-sensor pad to manipulate data. For example, a user can apply a single touch, by using a finger to touch the surface of a touch screen, to select an item from a menu.","A certain class of touch sense arrays includes a two-dimensional array of capacitors, referred to as sense elements. Touch sense arrays can be scanned in several ways, one of which (mutual-capacitance sensing) permits individual capacitive elements to be measured. Another method (self-capacitance sensing) can measure an entire sensor strip, or even an entire sensor array, with less information about a specific location, but performed with a single read operation.","The two-dimensional array of capacitors, when placed in close proximity, provides a means for sensing touch. A conductive object, such as a finger or a stylus, coming in close proximity to the touch sense array causes changes in the capacitances of the sense elements in proximity to the conductive object. More particularly, when a finger touch occurs, self-capacitance increases whereas mutual capacitance decreases. These changes in capacitance can be measured to produce a \u201ctwo-dimensional map\u201d that indicates where the touch on the array has occurred.","One way to measure such capacitance changes is to form a circuit comprising a signal driver (e.g., an AC current or a voltage source) which is applied to each horizontally aligned conductor in a multiplexed fashion. The charge associated with each of the capacitive intersections is sensed and similarly scanned at each of the vertically aligned electrodes in synchronization with the applied current\/voltage source. This charge is then measured using a touch sense controller that typically includes a form of charge-to-voltage converter, followed by a multiplexer and A\/D converter that is interfaced with a central processing unit (CPU) to convert the input signal to digital form. The CPU, in turn, renders the \u201ctwo-dimensional map\u201d or \u201ctouch map\u201d and determines the location of a touch. A full scan of a panel of pairs of electrodes (i.e., slots) is performed before the resulting data is processed by the CPU in a serial fashion. Unfortunately, such \u201cserial\u201d scanning is too slow for modern touch screen devices.","An alternative approach is to perform capacitance-to-code conversion (scanning) using dedicated blocks of digital logic (i.e., a HW scanning engine) and the converted data is processed by a CPU. Unfortunately, such a hardware-based scanning engine is implemented in synthesized digital logic blocks with fixed implementation (i.e., having non-programmable elements). As a result, the hardware-based scanning engine operates according to algorithms defined at design time of the integrated circuit (IC). Advanced features such as adaptive scanning algorithms that require special timing, additional control signals, and\/or extra measurement cycles require redesign of the integrated circuit (IC) on which hardware-based scanning engine is fabricated.","Further, high conversion speeds may not be attainable because CPU processing is frequently interrupted by the hardware-based scanning engine when RX and TX multiplexers have to be reconfigured between conversions. This reduces data reporting rates.","A touch sense controller configured to be coupled to a touch sense array is disclosed. The touch sense controller includes programmable logic that includes programmable logic elements configured to manage measurement of capacitance associated with the touch sense array. The programmable logic elements may be constructed of universal digital logic blocks (UDB) of the touch sense controller.","In an embodiment, the programmable logic may be configured as a programmable sequencer that is a hardware-controlled scanning thread to scan the touch sense array without interaction of a processing core of the touch sense controller.","In an embodiment, the programmable sequencer may include a run-time reconfigurable state machine.","In an embodiment, the programmable logic may be configured to apply TX signals on TX pins and receive RX signals on RX pins without interaction of the CPU.","In an embodiment, the programmable logic may be reconfigurable during system boot time according to properties of the touch sense array and may be configured to perform an adaptive scanning algorithm.","In an embodiment, one of the programmable logic elements includes an RX slots control sequencer block configured to selectively enable\/disable RX measurement channels to take part in a conversion. One of the programmable logic elements may also include a TX pins control sequencer block configured to apply TX excitation signals to TX pins. Another of the programmable logic elements may be configured to provide control of a capacitance-to-code conversion circuit.","Possible advantages of employing the above programmable logic include providing a flexible architecture as building blocks of a touch sense controller. The programmable sequencer is based on programmable logic in the form of chained UDBs. This permits changes in scanning sequences (i.e., adaptive scanning algorithms) by reprogramming parts without silicon redesign.","A fully hardware controlled scanning thread is provided. As a result, a processing core is interrupted by the programmable sequencer only after scanning of an entire panel. This improves execution speed by improving the rate of generation of a touch map, since the processing core does not need to reconfigure pins from conversion to conversion.","The programmable sequencer, together with a processing core and such processing accelerators as a digital filter block (DFB) and multiple DMA channels, permits the construction of an effective multi-channel mutual capacitive sensing solution for all point addressable touch sense controllers.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 1","b":["100","110","100","116","110","150","116","121","116"]},"In one embodiment, the sensor array  includes sensor elements ()-(N) (where N is a positive integer) that are disposed as a two-dimensional matrix (also referred to as an XY matrix). The sensor array  is coupled to pins ()-(N) of the processing device  via one or more analog buses  transporting multiple signals. In this embodiment, each sensor element ()-(N) is represented as a capacitor. The self capacitance of each sensor in the sensor array  is measured by a capacitance sensor  in the processing device .","In one embodiment, the capacitance sensor  may include a relaxation oscillator or other means to convert a capacitance into a measured value. The capacitance sensor  may also include a counter or timer to measure the oscillator output. The capacitance sensor  may further include software components to convert the count value (e.g., capacitance value) into a sensor element detection decision (also referred to as switch detection decision) or relative magnitude. It should be noted that there are various known methods for measuring capacitance, such as current versus voltage phase shift measurement, resistor-capacitor charge timing, capacitive bridge divider, charge transfer, successive approximation, sigma-delta modulators, charge-accumulation circuits, field effect, mutual capacitance, frequency shift, or other capacitance measurement algorithms. It should be noted however, instead of evaluating the raw counts relative to a threshold, the capacitance sensor  may be evaluating other measurements to determine the user interaction. For example, in the capacitance sensor  having a sigma-delta modulator, the capacitance sensor  is evaluating the ratio of pulse widths of the output, instead of the raw counts being over or under a certain threshold.","In one embodiment, the processing device  further includes processing logic . Operations of the processing logic  may be implemented in firmware; alternatively, it may be implemented in hardware or software. The processing logic  may receive signals from the capacitance sensor , and determine the state of the sensor array , such as whether an object (e.g., a finger) is detected on or in proximity to the sensor array  (e.g., determining the presence of the object), where the object is detected on the sensor array (e.g., determining the location of the object), tracking the motion of the object, or other information related to an object detected at the touch sensor.","In another embodiment, instead of performing the operations of the processing logic  in the processing device , the processing device  may send the raw data or partially-processed data to the host . The host , as illustrated in , may include decision logic  that performs some or all of the operations of the processing logic . Operations of the decision logic  may be implemented in firmware, hardware, software, or a combination thereof. The host  may include a high-level Application Programming Interface (API) in applications  that perform routines on the received data, such as compensating for sensitivity differences, other compensation algorithms, baseline update routines, start-up and\/or initialization routines, interpolation operations, or scaling operations. The operations described with respect to the processing logic  may be implemented in the decision logic , the applications , or in other hardware, software, and\/or firmware external to the processing device . In some other embodiments, the processing device  is the host .","In another embodiment, the processing device  may also include a non-sensing actions block . This block  may be used to process and\/or receive\/transmit data to and from the host . For example, additional components may be implemented to operate with the processing device  along with the sensor array  (e.g., keyboard, keypad, mouse, trackball, LEDs, displays, or other peripheral devices).","In one embodiment, the electronic system  is implemented in a device that includes the touch-sensing surface  as the user interface, such as handheld electronics, portable telephones, cellular telephones, notebook computers, personal computers, personal data assistants (PDAs), kiosks, keyboards, televisions, remote controls, monitors, handheld multi-media devices, handheld video players, gaming devices, control panels of a household or industrial appliances, or other computer peripheral or input devices. Alternatively, the electronic system  may be used in other types of devices. It should be noted that the components of electronic system  may include all the components described above. Alternatively, electronic system  may include only some of the components described above, or include additional components not listed herein.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 2","b":["121","101","121","101","100","121","225","222","223","225","201","212","213"]},"Capacitance sensor  includes multiplexer control , demultiplexer  and multiplexer , clock generator , signal generator , demodulation circuit , and analog to digital converter (ADC) . ADC  is further coupled with touch coordinate converter . Touch coordinate converter  outputs a signal to the processing logic .","The transmit and receive electrodes in the electrode matrix  may be arranged so that each of the transmit electrodes overlap and cross each of the receive electrodes such as to form an array of intersections, while maintaining galvanic isolation from each other. Thus, each transmit electrode may be capacitively coupled with each of the receive electrodes. For example, transmit electrode  is capacitively coupled with receive electrode  at the point where transmit electrode  and receive electrode  overlap.","Clock generator  supplies a clock signal to signal generator , which produces a TX signal  to be supplied to the transmit electrodes of touch sensor . In one embodiment, the signal generator  includes a set of switches that operate according to the clock signal from clock generator . The switches may generate a TX signal  by periodically connecting the output of signal generator  to a first voltage and then to a second voltage, wherein said first and second voltages are different.","The output of signal generator  is connected with demultiplexer , which allows the TX signal  to be applied to any of the M transmit electrodes of touch sensor . In one embodiment, multiplexer control  controls demultiplexer  so that the TX signal  is applied to each transmit electrode  in a controlled sequence. Demultiplexer  may also be used to ground, float, or connect an alternate signal to the other transmit electrodes to which the TX signal  is not currently being applied.","Because of the capacitive coupling between the transmit and receive electrodes, the TX signal  applied to each transmit electrode induces a current within each of the receive electrodes. For instance, when the TX signal  is applied to transmit electrode  through demultiplexer , the TX signal  induces an RX signal  on the receive electrodes in matrix . The RX signal  on each of the receive electrodes can then be measured in sequence by using multiplexer  to connect each of the N receive electrodes to demodulation circuit  in sequence.","The mutual capacitance associated with each intersection between a TX electrode and an RX electrode can be sensed by selecting every available combination of TX electrode and an RX electrode using demultiplexer  and multiplexer . To improve performance, multiplexer  may also be segmented to allow more than one of the receive electrodes in matrix  to be routed to additional demodulation circuits . In an optimized configuration, wherein there is a 1-to-1 correspondence of instances of demodulation circuit  with receive electrodes, multiplexer  may not be present in the system.","When an object, such as a finger, approaches the electrode matrix , the object causes a decrease in the mutual capacitance between only some of the electrodes. For example, if a finger is placed near the intersection of transmit electrode  and receive electrode , the presence of the finger will decrease the mutual capacitance between electrodes  and . Thus, the location of the finger on the touchpad can be determined by identifying the one or more receive electrodes having a decreased mutual capacitance in addition to identifying the transmit electrode to which the TX signal  was applied at the time the decreased mutual capacitance was measured on the one or more receive electrodes.","By determining the mutual capacitances associated with each intersection of electrodes in the matrix , the locations of one or more touch contacts may be determined. The determination may be sequential, in parallel, or may occur more frequently at commonly used electrodes.","In alternative embodiments, other methods for detecting the presence of a finger or conductive object may be used where the finger or conductive object causes an increase in capacitance at one or more electrodes, which may be arranged in a grid or other pattern. For example, a finger placed near an electrode of a capacitive sensor may introduce an additional capacitance to ground that increases the total capacitance between the electrode and ground. The location of the finger can be determined from the locations of one or more electrodes at which an increased capacitance is detected.","The induced current signal  is rectified by demodulation circuit . The rectified current output by demodulation circuit  can then be filtered and converted to a digital code by ADC .","The digital code is converted to touch coordinates indicating a position of an input on touch sensor array  by touch coordinate converter . The touch coordinates are transmitted as an input signal to the processing logic . In one embodiment, the input signal is received at an input to the processing logic . In one embodiment, the input may be configured to receive capacitance measurements indicating a plurality of row coordinates and a plurality of column coordinates. Alternatively, the input may be configured to receive row coordinates and column coordinates.","In one embodiment, a system for tracking locations of contacts on a touch-sensing surface may determine a force magnitude for each of the contacts based on the capacitance measurements from the capacitive sensor array. In one embodiment, a capacitive touch-sensing system that is also capable of determining a magnitude of force applied to each of a plurality of contacts at a touch-sensing surface may be constructed from flexible materials, such as PMMA, and may have no shield between the capacitive sensor array and an LCD display panel. In such an embodiment, changes in capacitances of sensor elements may be caused by the displacement of the sensor elements closer to a VCOM plane of the LCD display panel.","In an embodiment, fully digitally implemented portions of the capacitance sensor of  may be implemented using programmable universal digital blocks (UDBs). As used herein, UDBs are a collection of uncommitted logic (PLD) and structural logic (Datapath) optimized to create all common embedded peripherals and customized functionality that are application or design specific. UDBs may be employed to implement a variety of general and specific digital logic devices including, but not limited to, field programmable gate arrays (FPGA), programmable array logic (PAL), complex programmable logic devices (CPLD) etc., to be described below. UDBs may be to perform various digital functions alone or in combination with other UDBs. Further, UDBs may be partitioned and their resources shared to optimized mapping of digital functions onto an array of UDBs.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 3","FIG. 1"],"b":["300","300","300","300","120","300","345"]},"Digital subsystem  may include, for example, a plurality of digital core system elements , such as clock dividers and memory and the like, fixed function peripherals  and IO ports , each of which may be coupled to a digital routing fabric (e.g., digital system interconnect (DSI) routing interface) . DSI routing interface  may be coupled to UDB array , which may include a plurality of UDBs . UDBs , fixed function peripherals , IO ports , interrupts , DMA  and digital core system elements  may be coupled to the DSI routing interface  to implement full-featured device connectivity. In one embodiment, UDBs  may be a collection of, for example, uncommitted logic (PLD) and structural logic optimized to create common embedded peripherals and customized functionality that are application- or design-specific. In one embodiment, UDBs  may be arranged in a matrix with a homogenous structure to allow flexible mapping of digital functions onto the UDB array . The USB array  may support extensive and flexible routing interconnects between UDBs  and DSI routing interface .","In another embodiment, UDBs  may be implemented using CPLD or FPGA elements singly, together, or in combination with, for example, configurable or fixed-function logic elements, memories and\/or look-up tables (LUTs).",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 4","FIG. 3"],"b":["400","245"]},"UDB  may include, for example, a first programmable logic device (PLD)  coupled to PLD chaining IO , routing channel  (e.g., via routing IO ), and a second PLD . Second PLD  may be coupled to PLD chaining IO , first PLD , and routing channel  (e.g., via routing IO ). UDB  may also include a clock and reset control block , which may be coupled to a status and control block . Status and control block  may be coupled to routing channel  through, for example, routing IOs  and . UDB  may also include a datapath module , which may be coupled to datapath modules of other UDBs through datapath chaining IOs  and . First and second PLDs  and  may take inputs from the routing channel  and form registered or combinational sum-of-products logic and may be used to implement state machines, state bits, combinational logic equations, and the like. In some embodiments, PLD configurations may be automatically generated from graphical primitives, where functions may be mapped to the PLD and the PLD may be configured based on the settings of those functions. In some embodiments, datapath module  may be, for example, a datapath containing structured logic to implement a dynamically configurable arithmetic logic unit (ALU) and a variety of compare configurations of conditions. The datapath module  may also contain input\/output FIFOs to serve as the parallel data interface between a processing core (not shown) and the UDB . The status and control block  may be used by the UDB  to interact with and synchronize to the processing core.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 5","FIG. 1"],"b":["500","512","101","102","101","514","516","518","520","102","522","522","524","528","530","532","514","516","530","514"],"i":["a","n"]},"Returning to , the transmitting signal multiplexer  configured to transmit one or more stimulus (TX) signals generated by the programmable sequencer  to the touch sense array  (e.g., an ITO panel). The programmable sequencer  is configured to control the number of active TX transmission channels as well as the order of application of the one or more stimulus signals within the transmitting signal multiplexer . The receiving signal multiplexer  is configured to select each of the RX lines to be measured from the touch sense array  by the analog-to-digital (A2D) converter . The receiving signal multiplexer  and the A2D  may be controlled and configured by the programmable sequencer . Optionally, conversion results from the A2D  may be placed into individual direct memory access (DMA) channels -of the random access memory (RAM)  under the control of the programmable sequencer . The conversion results may be processed by the processing core  and\/or the optional digital filter block (DFB) . The processing core  and\/or the DFB  may filter and process the conversion results to generate a touch map that is then stored back in the RAM . The touch map may be requested and\/or directly sent via the I\/ blocks  to a host system .","In an embodiment, the programmable sequencer  may be configured by the processing core  at run time to be adapted to different configurations of the above-described components that may themselves have varying characteristics from manufacturer to manufacturer of touch screen panels. More particularly, the design of and internal routing of the programmable sequencer  may be programmed by the processing core  \u201con-the-fly\u201d using programmable logic elements in the form of universal digital blocks (UDBs). In one embodiment, internal sub-blocks of the programmable sequencer  may be implemented as reconfigurable state machines to be described below. The programmable sequencer  may be implemented in such a way as to apply TX signals and perform full panel RX response signal scanning entirely without processing core interaction. The processing core  need only be notified via an interrupt when a panel scan is completed.","In one embodiment of operation, the processing core  configures the programmable sequencer  during system boot time according to properties of a particular touch sense array . To begin measurements, the processing core  sends a command to the programmable sequencer  to start scanning (e.g., with a start-of-scan (SOS) signal). In response, the programmable sequencer  performs scanning of the touch sense array . During scanning, the processing core  is not interrupted and may execute other processing tasks. After each raw data conversion, the programmable sequencer  may trigger the corresponding DMA channels -to transfer results (i.e., the raw data) of the conversion to defined places in RAM . The A2D , under the control of the programmable sequencer , may be configured to calculate values proportional to mutual capacitances of all TX-RX intersections. At the end of a scanning interval, an entire frame of mutual capacitance measurements is provided to either the processing core  or the DFB  for generating a touch map. On completion of scanning, the programmable sequencer  may send an end-of-scan (EOS) interrupt to the processing core . The programmable sequencer  then waits for an SOS command from the processing core  to perform a next full panel scan. In an embodiment, the processing core  may reconfigure the programmable sequencer  on a subsequent full panel scan if it is expected to obtain better system performance with different settings. Thus, the architecture of the programmable sequencer  permits adaptive scanning algorithms.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 6","FIG. 7A","FIG. 5","FIG. 7B","FIG. 7A","FIGS. 6 and 7B","FIG. 7A","FIG. 7B"],"b":["514","514","514","640","642","644","2","11","25","646","14","640","642","644","640","642","644","648","646","514","650","652","654","656","514"]},"The RX_SLOT_SEQ block  is an RX slots control sequencer  implemented in digital logic. An individual RX slot may be defined as a receiving a measurement channel corresponding to a combination of RX-electrodes of the touch sense array . The entire panel of RX slots may be scanned in parallel into an array of RX measurement channels. The RX slots control sequencer  may include, but is not limited to, the following functions that correspond to the \u201cRX slots loop\u201d at line  of the pseudocode of :","(1) According to a programmed sequence, the RX slots control sequencer  may be configured to enable\/disable RX-electrodes (i.e., connects\/disconnects RX-electrodes to RX measurement channels) by generating high\/low levels on terminals of the analog switches that form the RX receiving signal multiplexer . The slots control sequencer  enables\/disables one slot at a time.","(2) According to a programmed sequence, the RX slots control sequencer  may be configured to enable\/disable RX measurement channels that may or may not take part in a given conversion. For example, it may be desirable to measure even channels followed by odd channels.","(3) The RX slots control sequencer  may inform the processing core  that a scan of whole frame has been completed by generating a pulse on a terminal of the interrupt component  (i.e., EOS_ISR corresponding to sending an end-of-scan (EOS) interrupt.","(4) The RX slots control sequencer  may provide an interface for CPU commands and run-time reconfiguration (e.g. the start-of-scan (SOS) command).","(4) The RX slots control sequencer  may instantiate a handshaking interface to provide synchronization with other programmable sequencer modules.","The RX slots control sequencer  may instantiate the following control registers:","(1) reg SosCtrlReg\u2014writing to this register may start panel scanning of the touch sense array .","(2) reg [3:0] SlotNumCtrlReg\u2014represents the number of RX slots. In one embodiment, the maximum number of supported RX slots is 10.","(3) reg [3:0] LSChEnableCtrlReg\u2014a bit-mask corresponding to measurement channels that are to be enabled in the last RX slot(s).","As shown in , in an embodiment, the RX slots control sequencer  may have the following input lines:","(1) clock\u2014The RX slots control sequencer  (RX_SLOT_SEQ) block operation is synchronized with this clock.","(2) mptx_done\u2014A pulse on this terminal indicates that the MPTX_SEQ block  has completed its tasks (i.e., all multiphase combination measurement are completed).","As shown in , in an embodiment, the RX slots control sequencer  may have the following output lines:","(1) mptx_start\u2014A pulse on this terminal starts the MPTX_SEQ block .","(2) cdc_ch_en[3:0]\u2014This is a bit-mask representing the sensing channels that are enabled for the current RX slots loop.","(3) rx_slots[9:0]\u2014The control signals that define the states of analog switches which form the RX receiving signal multiplexer .","(4) eos_isr\u2014Generates a pulse (IRQ) when a touch sense array panel scan has completed.",{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 8","b":["640","640","860","528","860","862","864","862","4","0","3","1","2"]},"The RX slots control sequencer  may have alternative architectures, implementations, functional elements, registers, inputs, and outputs, as would be appreciated by one of ordinary skill in the art having the benefit of this disclosure.","The MPTX_SEQ block  is a multiphase TX pins control sequencer  implemented in digital logic. The functions of the multiphase TX pins control sequencer  may include the following functions that correspond to the \u201cTX sequence shifting loop\u201d at line  of the pseudocode of :","(1) According to programmed operation mode (single-TX or multiphase-TX), phase pattern, and common TX signal state (generated by CDC_SEQ ), the TX pins control sequencer  is responsible for applying TX excitation signals to TX pins.","(2) The TX pins control sequencer  may be configured to provide an interface for CPU commands and run-time reconfiguration.","(3) The TX pins control sequencer  may be configured to instantiate a handshaking interface to provide synchronization with other programmable sequencer modules.","The TX pins control sequencer  may instantiate two control registers:","(1) reg [4:0] SeqLengthCtrlReg\u2014This register represents the bit length of a multiphase TX sequence. In an embodiment, the maximum length is 28.","(2) reg [55:0] TxSeqInitCtrlReg\u2014This is the initial TX phase combination which loads an internal shift register when the \u201cstart\u201d input (to be described below) is toggled. All following combinations may be generated by a left circular shift operation.","As shown in , in an embodiment, the TX pins control sequencer  may have the following input lines:","(1) clock\u2014Block synchronization input.","(2) start\u2014This input is toggled by the RX slots control sequencer  (RX_SLOT_SEQ) which initiates operation of the TX pins control sequencer  (MPTX_SEQ).","(3) cdc_done\u2014A pulse on this terminal indicates that the capacitance-to-code converter control sequencer  (CDC_SEQ) block has completed its tasks (i.e., all TX cycles measurements have been integrated).","(4) comm_tx\u2014This is a TX signal which modulates signals on the tx_pins terminal. In multiphase-TX mode, this TX signal is fed to the inputs of XOR gates, the second inputs of which are fed by an internal shift register (i.e., a phase pattern). When in single-TX mode, AND gates are used.","As shown in , in an embodiment, the TX pins control sequencer  may have the following output lines:","(1) cdc_start\u2014A pulse on this terminal starts the capacitance-to-code converter control sequencer  (CDC_SEQ) block.","(2) done\u2014Generates a pulse when all multiphase combination measurements are completed.","(3) tx_pins [27:0]\u2014TX pins drive signals.",{"@attributes":{"id":"p-0101","num":"0100"},"figref":"FIG. 9","b":["642","642","970","528","970","972","972","972"]},"The TX pins control sequencer  may have alternative architectures, implementations, functional elements, registers, inputs, and outputs, as would be appreciated by one of ordinary skill in the art having the benefit of this disclosure.","The CDC_SEQ block  is a capacitance-to-code converter control sequencer  implemented in digital logic. The functions of the capacitance-to-code converter control sequencer  may include the following and correspond to the \u201cCDC sequence\u201d at lines - of the pseudocode of :","The capacitance-to-code converter control sequencer  may be configured to provide control of capacitance-to-code conversion in the A2D block  (e.g., conversion sequence control, synchronization of RX analog channels through a common TX signal, etc.).","The capacitance-to-code converter control sequencer  may be configured to provide an interface for CPU commands and run-time reconfiguration.","The capacitance-to-code converter control sequencer  may be configured to provide DMA transfer triggering for the results of each conversion.","The capacitance-to-code converter control sequencer  may be configured to instantiate a handshaking interface to provide synchronization with other programmable sequencer modules.","The capacitance-to-code converter control sequencer  may instantiate one control register:","reg [6:0] CycleNumCtrlReg\u2014represents the number of TX cycles in an elementary scan (when the combination of TX phases is fixed).","As shown in , in an embodiment, the capacitance-to-code converter control sequencer  may have at least the following input lines:","clock\u2014block synchronization input.","start\u2014this input is toggled by TX pins control sequencer  (MPTX_SEQ block ) which initiates operation of the capacitance-to-code converter control sequencer  (the CDC_SEQ block ).","ch_en [3:0]\u2014a bit-mask that represents which sensing channels are enabled for the current RX slots loop.","a2d_done [3:0]\u2014a bit position indicates that the i-th channel has completed integration of charge injected by a single TX half period.","dma_ack\u2014optional input. A pulse on this input line indicates that the DMA controlled raw counts transfer from A2D registers to temporary raw buffers has completed.","As shown in , in an embodiment, the capacitance-to-code converter control sequencer  may have the following output lines:","a2d_comm_tx\u2014This terminal generates a common TX signal which modulates a multiphase sequence and is used in the A2D block .","a2d_skip_sample\u2014When HIGH, this line indicates that an A2D integration is to be disabled for the current TX cycle (see line  of the pseudocode of ).","a2d_reset\u2014This signal resets the A2D block .","Done\u2014generates a pulse when charge integration for all TX cycles has completed and raw counts are transferred to a temp buffer.","cdc_isr\u2014Generates a pulse (interrupt) for a DMA controller to transfer raw counts from the A2D block registers to a temp buffer.",{"@attributes":{"id":"p-0122","num":"0121"},"figref":"FIG. 10","b":["644","644","1080","528","1080","1082","1084"]},"The capacitance-to-code converter control sequencer  may have alternative architectures, implementations, functional elements, registers, inputs, and outputs, as would be appreciated by one of ordinary skill in the art having the benefit of this disclosure.","The A2D block  is an analog-to-digital converter block implemented in mixed analog-digital circuitry. The A2D block  may include iDACs (programmable current sources), operational amplifiers, comparators, fixed-function timers, and auxiliary logic. The function of the A2D block  may be substantially that of an integrator. The A2D block  performs RX signal measurements in several modes selected by the programmable sequencer , e.g., mutual capacitance measurements, self-capacitance measurements, a hybrid sensing mode, a listener sensing mode, etc. A2D block  measures a value (time) proportional to a mutual capacitance created by a TX-RX intersection.","As shown in , in an embodiment, the A2D block  may have the following input lines:","clock\u2014Block synchronization input. Note: clock frequency defines the system resolution.","comm_tx\u2014TX signal of the system. Each edge of this signal excites the A2D block  from a stationary state. Then, the A2D block  relaxes back to a stationary state. The relaxation time is proportional to a mutual capacitance created by an TX-RX intersection.","skip_sample\u2014When this lead is HIGH, it provides an indication that an A2D integration is to be disabled for the current TX cycle (see line  of the pseudocode of ).","reset\u2014Resets the A2D block .","ch_en [3:0]\u2014A bit-mask that represents which sensing channels are enabled for the current RX slots loop.","As shown in , in an embodiment, the A2D block  may have the following output lines:","done [3:0]\u2014represents A2D comparators outputs.","The A2D block  may have alternative architectures, implementations, functional elements, registers, inputs, and outputs, as would be appreciated by one of ordinary skill in the art having the benefit of this disclosure.","As described above, a panel scan may begin after the SosCtrlReg is toggled by firmware. Substantially simultaneously, the processing core  is free to run a data processing thread. When a panel scan is completed, an end-of-scan interrupt service routine (EOS_ISR) may be generated.","Returning again to the process flow diagram of , at block , the processing core  (e.g., of a CPU) initiate a scan by setting the Start-of-Scan bit in the corresponding register of the programmable sequencer . At block , the programmable sequencer  initializes the RX_SLOT_SEQ counter. The value in this counter represents the index of the currently scanned RX slot. At block , if all RX slots have been scanned, execution proceeds to block ; otherwise, execution proceeds to block .","At block , the programmable sequencer  enables measurement channels that form the selected RX slot. At block , the programmable sequencer  connects the pins of the selected RX slot to inputs of the measurement channels. At block , the programmable sequencer  loads an initial TX phase vector (i.e., a multiphase pattern) to the MPTX_SEQ circular shift register. Also, the programmable sequencer  initializes the MPTX_SEQ counter. The value in this counter represents the index of currently applied TX phase combination. At block , if all TX phase combinations have been applied, execution proceeds to block ; otherwise, execution proceeds to block .","At block , the programmable sequencer  applies TX signals to TX pins. At block , the programmable sequencer  resets the A2D block  and initializes the CDC_SEQ cycle counter. The value in this counter represents the index of the integration cycle in current conversion. At block , the programmable sequencer  runs the A2D block  and starts a conversion. At block , if all cycles of conversion have been completed, execution proceeds to block ; otherwise, execution proceeds to block .","At block , the programmable sequencer  performs a measurement cycle and decrements the value in the CDC_SEQ counter. Execution returns to block . At block , a conversion is completed. The programmable sequencer  moves the conversion results from the A2D block  registers to SRAM. At block , the programmable sequencer  decrements the value in the MPTX_SEQ register. At block , the programmable sequencer  performs a circular left shift of the TX phase vector stored in the corresponding MPTX_SEQ register. The programmable sequencer  also applies the next TX phase combination. Execution proceeds back to step . At block , the programmable sequencer  decrements the value stored in the RX_SLOTS_SEQ counter and selects the next RX slot. Execution proceeds back to step . At block , the programmable sequencer  generates an End of Scan interrupt request to the processing core  (e.g., of the CPU). At block , data is ready for post-processing.","The programmable sequencer , the processing core , and the DFB  (collectively the \u201cprocessing device\u201d) may reside on a common carrier substrate such as, for example, an integrated circuit (\u201cIC\u201d) die substrate, a multi-chip module substrate, or the like. Alternatively, the components of processing device may be one or more separate integrated circuits and\/or discrete components. In one exemplary embodiment, the processing device is the Programmable System on a Chip (\u201cPSoC\u00ae\u201d) processing device, manufactured by Cypress Semiconductor Corporation, San Jose, Calif. Alternatively, the processing device may be one or more other processing devices known by those of ordinary skill in the art, such as a microprocessor or central processing unit, a controller, special-purpose processor, digital signal processor (\u201cDSP\u201d), an application specific integrated circuit (\u201cASIC\u201d), a field programmable gate array (\u201cFPGA\u201d), or the like.","It should also be noted that the embodiments described herein are not limited to having a configuration of the processing device coupled to a host, but may include a system that measures the capacitance on the touch sense array  and sends the raw data to a host computer where it is analyzed by an application program. In effect the processing that is done by the processing device may also be done in the host. The host may be a microprocessor, for example, as well as other types of processing devices as would be appreciated by one of ordinary skill in the art having the benefit of this disclosure.","The components of the system  may be integrated into the IC of the processing device, or alternatively, in a separate IC. Alternatively, descriptions of the system  may be generated and compiled for incorporation into other integrated circuits. For example, behavioral level code describing the system , or portions thereof, may be generated using a hardware descriptive language, such as VHDL or Verilog, and stored to a machine-accessible medium (e.g., CD-ROM, hard disk, floppy disk, etc.). Furthermore, the behavioral level code can be compiled into register transfer level (\u201cRTL\u201d) code, a netlist, or even a circuit layout and stored to a machine-accessible medium. The behavioral level code, the RTL code, the netlist, and the circuit layout all represent various levels of abstraction to describe the system .","It should be noted that the components of the system  may include all the components described above and more as would be appreciated by one of ordinary skill in the art having the benefit of this disclosure. Alternatively, the system  may include only some of the components described above as would be appreciated by one of ordinary skill in the art having the benefit of this disclosure.","In one embodiment, the system  is used in a notebook computer. Alternatively, the electronic device may be used in other applications, such as a mobile handset, a personal data assistant (\u201cPDA\u201d), a keyboard, a television, a remote control, a monitor, a handheld multi-media device, a handheld video player, a handheld gaming device, a GPS device, or a control panel.","Embodiments of the present invention, described herein, include various operations. These operations may be performed by hardware components, software, firmware, or a combination thereof. As used herein, the term \u201ccoupled to\u201d may mean coupled directly or indirectly through one or more intervening components. Any of the signals provided over various buses described herein may be time multiplexed with other signals and provided over one or more common buses. Additionally, the interconnection between circuit components or blocks may be shown as buses or as single signal lines. Each of the buses may alternatively be one or more single signal lines and each of the single signal lines may alternatively be buses.","Certain embodiments may be implemented as a computer program product that may include instructions stored on a computer-readable medium. These instructions may be used to program a general-purpose or special-purpose processor to perform the described operations. A computer-readable medium includes any mechanism for storing or transmitting information in a form (e.g., software, processing application) readable by a machine (e.g., a computer). The computer-readable storage medium may include, but is not limited to, magnetic storage medium (e.g., floppy diskette); optical storage medium (e.g., CD-ROM); magneto-optical storage medium; read-only memory (ROM); random-access memory (RAM); erasable programmable memory (e.g., EPROM and EEPROM); flash memory, or another type of medium suitable for storing electronic instructions. The computer-readable transmission medium includes, but is not limited to, electrical, optical, acoustical, or other form of propagated signal (e.g., carrier waves, infrared signals, digital signals, or the like), or another type of medium suitable for transmitting electronic instructions.","Additionally, some embodiments may be practiced in distributed computing environments where the computer-readable medium is stored on and\/or executed by more than one computer system. In addition, the information transferred between computer systems may either be pulled or pushed across the transmission medium connecting the computer systems.","Although the operations of the method(s) herein are shown and described in a particular order, the order of the operations of each method may be altered so that certain operations may be performed in an inverse order or so that certain operation may be performed, at least in part, concurrently with other operations. In another embodiment, instructions or sub-operations of distinct operations may be in an intermittent and\/or alternating manner.",{"@attributes":{"id":"p-0148","num":"0147"},"figref":["FIG. 11","FIG. 5"],"b":["1100","514","1110","528","512","514","512","528","500","1120","528","512","1130","528"]},"In an embodiment, second thread is a hardware thread of a digital filter block (DFB) and is not part of a processing core of the processing device. In another embodiment, the second thread is a software thread of a processing core of the processing device.","Referring again to , the programmable logic devices (PLD) ,  may be implemented as a field-programmable gate array (FPGA). An FPGA is an integrated circuit designed to be configured by a customer or designer after manufacturing\u2014hence \u201cfield-programmable\u201d. The FPGA configuration is generally specified using a hardware description language (HDL), similar to that used for an application-specific integrated circuit (ASIC) (circuit diagrams were previously used to specify the configuration, as they were for ASICs, but this is increasingly rare). FPGAs can be used to implement any logical function that an ASIC could perform. The ability to update the functionality after shipping, partial re-configuration of the portion of the design and the low non-recurring engineering costs relative to an ASIC design (notwithstanding the generally higher unit cost), offer advantages for many applications.","FPGAs include programmable logic components called \u201clogic blocks\u201d, and a hierarchy of reconfigurable interconnects that allow the blocks to be \u201cwired together\u201d\u2014somewhat like many (changeable) logic gates that can be inter-wired in (many) different configurations. Logic blocks can be configured to perform complex combinational functions, or merely simple logic gates like AND and XOR. In most FPGAs, the logic blocks also include memory elements, which may be simple flip-flops or more complete blocks of memory.",{"@attributes":{"id":"p-0152","num":"0151"},"figref":"FIG. 12","b":["1200","1200","4","1210","1220","1230","1210","1210","1220","1240","1250"]},"In the foregoing specification, the invention has been described with reference to specific exemplary embodiments thereof. It will, however, be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention as set forth in the appended claims. The specification and drawings are, accordingly, to be regarded in an illustrative sense rather than a restrictive sense."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Embodiments of the present invention will be more readily understood from the detailed description of exemplary embodiments presented below considered in conjunction with the attached drawings in which like reference numerals refer to similar elements and in which:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 7A","FIG. 5"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 7B","FIG. 7A"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 11","FIG. 5"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
