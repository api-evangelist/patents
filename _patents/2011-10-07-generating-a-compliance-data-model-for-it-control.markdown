---
title: Generating a compliance data model for IT control
abstract: Techniques are described herein that are capable of generating a compliance data model for information technology (IT) control. The compliance data model is capable of capturing data from technologies (e.g., software programs, file systems, etc.) and/or developers of those technologies for determining compliance of the technologies with regulations. The compliance data model may be used to automate generation of artifacts. Each artifact is machine-readable code that includes instructions regarding how to implement a control. A control is a software container that is associated with one or more elements, such as a control objective, a control activity, a control activity test, etc. The artifacts are usable by management systems to obtain data regarding installed technologies, settings of the technologies, configurations of the technologies, events that are being utilized by the technologies, etc. The management systems may use the data to generate reports regarding compliance of the technologies with the regulations.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09183528&OS=09183528&RS=09183528
owner: Microsoft Technology Licensing, LLC
number: 09183528
owner_city: Redmond
owner_country: US
publication_date: 20111007
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION","I. Introduction","II. Example Embodiments","III. Conclusion"],"p":["Organizations often expend substantial resources to manually determine a state of compliance of their assets (e.g., information, technology, processes, people, etc.) in pursuit of their goals and mission. For instance, organizations often use human developers to manually perform operations, such as (1) interpreting authority documents (e.g., SoX, PCI, and other regulations) to determine controls that are applicable to an asset; (2) interpreting whether a control applies to an asset; (3) determining how to apply the control to targeted assets; (4) determining how to test integrity of an application of the control; and (5) generating test results to validate proper implementation of the control. Accordingly, substantial time, manual effort, and hard-learned expertise regarding compliant use of the organization's information technology (IT) environment is traditionally used to determine the state of compliance.","Developers traditionally expend substantial effort to extract knowledge from technology because the developers lack guidance and face a vast unstructured body of data to find, interpret in a control context, and stay abreast of as technology, practices, and authority documents evolve. The manual aspect of conventional techniques for determining compliance often causes such techniques to be relatively inefficient. Moreover, conventional techniques typically determine compliance one authority document at a time, leading to further inefficiency. Furthermore, the inefficiencies of conventional techniques are often compounded by relatively high error rates, trial failures, expensive experts to assist in performing the compliance techniques, and\/or multiple iterations to successfully implement such techniques.","Various approaches are described herein for, among other things, generating a compliance data model for information technology (IT) control. A method is described in which controls are generated based on regulations. Each control corresponds to a respective subset of the regulations. A subset of the controls that is applicable to a software technology is automatically determined based on first answers that correspond to first questions regarding intended use and implementation of the software technology. Each control in the subset of controls is associated with a control objective, a control activity, and a control activity test. A compliance data model regarding the software technology is automatically generated. The compliance data model specifies at least the control objective and the control activity test for each control in the subset of the controls.","A system is described that includes control logic, subset logic, and modeling logic. The control logic is configured to generate controls based on regulations. Each control corresponds to a respective subset of the regulations. The subset logic is configured to automatically determine a subset of the controls that is applicable to a software technology based on first answers that correspond to first questions regarding intended use and implementation of the software technology. Each control in the subset of the controls is associated with a control objective, a control activity, and a control activity test. The modeling logic is configured to automatically generate a compliance data model regarding the software technology. The compliance data model specifies at least the control objective and the control activity test for each control in the subset of the controls.","A computer program product is described that includes a computer-readable medium having computer program logic recorded thereon for enabling a processor-based system to generate a compliance data model for IT control. The computer program product includes first, second, and third program logic modules. The first program logic module is for enabling the processor-based system to generate controls based on regulations. Each control corresponds to a respective subset of the regulations. The second program logic module is for enabling the processor-based system to automatically determine a subset of the controls that is applicable to a software technology based on first answers that correspond to first questions regarding intended use and implementation of the software technology. Each control in the subset of the controls is associated with a control objective, a control activity, and a control activity test. The third program logic module is for enabling the processor-based system to automatically generate a compliance data model regarding the software technology. The compliance data model specifies at least the control objective and the control activity test for each control in the subset of the controls.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter. Moreover, it is noted that the invention is not limited to the specific embodiments described in the Detailed Description and\/or other sections of this document. Such embodiments are presented herein for illustrative purposes only. Additional embodiments will be apparent to persons skilled in the relevant art(s) based on the teachings contained herein.","The features and advantages of the disclosed technologies will become more apparent from the detailed description set forth below when taken in conjunction with the drawings, in which like reference characters identify corresponding elements throughout. In the drawings, like reference numbers generally indicate identical, functionally similar, and\/or structurally similar elements. The drawing in which an element first appears is indicated by the leftmost digit(s) in the corresponding reference number.","The following detailed description refers to the accompanying drawings that illustrate exemplary embodiments of the present invention. However, the scope of the present invention is not limited to these embodiments, but is instead defined by the appended claims. Thus, embodiments beyond those shown in the accompanying drawings, such as modified versions of the illustrated embodiments, may nevertheless be encompassed by the present invention.","References in the specification to \u201cone embodiment,\u201d \u201can embodiment,\u201d \u201can example embodiment,\u201d or the like, indicate that the embodiment described may include a particular feature, structure, or characteristic, but every embodiment may not necessarily include the particular feature, structure, or characteristic. Moreover, such phrases are not necessarily referring to the same embodiment. Furthermore, when a particular feature, structure, or characteristic is described in connection with an embodiment, it is submitted that it is within the knowledge of one skilled in the relevant art(s) to implement such feature, structure, or characteristic in connection with other embodiments whether or not explicitly described.","Example embodiments described herein are capable of generating a compliance data model for information technology (IT) control. The compliance data model is capable of capturing data from technologies (e.g., software programs, file systems, etc.) and\/or developers of those technologies for determining compliance of the technologies with regulations. For instance, a technology may be a product or one or more features within a product. The compliance data model may be used to automate generation of artifacts. Each artifact is machine-readable code (e.g., an extensible markup language (XML) file) that includes instructions regarding how to implement a control. A control is a software container that is associated with one or more elements, such as a control objective, a control activity, a control activity test, etc. A control objective specifies one or more criteria that are to be satisfied for compliance with one or more of the regulations. A control activity includes instructions that specify a manner in which satisfaction of the one or more criteria are to be satisfied. A control activity test includes instructions that specify a manner in which verification of satisfaction of the one or more criteria is to be performed. The artifacts are usable by management systems to obtain data regarding installed technologies, settings of the technologies, configurations of the technologies, events that are being utilized by the technologies, etc. The management systems may use the data to generate reports regarding compliance of the technologies with the regulations. Some examples of a management system include but are not limited to System Center Operations Manager\u2122 (SCOM) and System Center Configuration Manager\u2122 (SCCM), each of which is developed by Microsoft Corporation.","Example techniques described herein have a variety of benefits as compared to conventional techniques for determining compliance of technologies with regulations. The example techniques may consume less time and\/or fewer resources than the conventional techniques. For instance, example techniques may be capable of automating operations, including but not limited to interpreting authority documents to determine controls that are applicable to a technology; interpreting whether a control applies to the technology; determining how to apply the control to the technology; determining how to test integrity of an application of the control; generating test results to validate proper implementation of the control; generating artifacts for consumption by management systems; and transforming the artifacts into formats that are compatible with the respective management systems. The example techniques may be capable of gathering knowledge in accordance with such operations at a pace that is sufficient to keep up with the growing complexity of the technology. Data pertaining to the various authority documents may be gathered at once, rather than gathering data for one authority document at a time. The example techniques may be capable of generating artifacts that are human-readable. For instance, such human-readable artifacts may be generated for use by customers, auditors, and\/or partners such as independent software vendors and system integrators.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","100","104","106","108","102","100","100","102"]},"Compliance system  is a processing system that is capable of generating a compliance data model, such as compliance data model . An example of a processing system is a system that includes at least one processor that is capable of manipulating data in accordance with a set of instructions. For instance, a processing system may be a computer (e.g., a desktop computer, a laptop computer, a tablet computer, etc.), a personal digital assistant, a cellular telephone, etc.","Compliance system  performs a variety of operations in order to generate the compliance data model . For instance, compliance system  generates controls  based on regulations . Each of the regulations  corresponds to a respective type of control. Compliance system  identifies the types of controls based on the regulations  and generates the controls  to be the identified types. Each of the controls is associated with a respective set of one or more elements, which may include but are not limited to a control objective, a respective control activity, a respective control activity test, etc.","Compliance system  then determines which of the controls  are applicable to a technology . To this end, compliance system  provides questions  to developers  regarding intended use and implementation of the technology . Compliance system  receives answers  in response to the questions . The answers  may be in machine-readable form, for example. Compliance system  determines a subset of the controls  that is applicable to the technology  based on the answers .","It will be recognized that the questions  or a portion thereof may be provided to one or more systems (e.g., processing systems) in addition to or in lieu of developers . Moreover, the answers  or a portion thereof may be received from such system(s) in addition to or in lieu of developers . It will be further recognized that the questions  or a portion thereof may be provided by management system  rather than compliance system . Moreover, the answers  or a portion thereof may be received by management system  rather than compliance system . For instance, management system  may use operations manager management pack(s) to determine how availability of software technologies  is defined. Any one or more of the answers  may be machine-readable and\/or human-readable.","Compliance system  automatically generates the compliance data model  to specify at least the control objective and the control activity test for each control in the subset of the controls . Compliance system  may also generate artifacts  that define how the technology  is to be executed for compliance with the regulations . Some example techniques for generating a compliance data model for IT control are described below with reference to .","Management system  is a processing system that is capable of monitoring execution of software technologies , which may include technology , for example. Management system  may provide various types of functionality. For example, management system  may be configured to include a configuration manager, which may provide functionality including but not limited to remote control, patch management, software distribution, operating system deployment, network access protection, and\/or hardware and\/or software inventory. In another example, management system  may be configured to include an operations manager, which may perform operations including but not limited to determining state, health, and\/or performance information regarding a computer system; monitoring events and\/or alerts that are generated by software technologies, such as the software technologies , that are executed on the computer system, etc. In accordance with example embodiments, management system  is configured to determine whether the software technologies  comply with the regulations  based on the artifacts . Management system  generates compliance reports , which include information regarding compliance of the software technologies  with the regulations . For instance, the compliance reports  may specify aspects of the software technologies  that do not comply with the regulations  and\/or which of the regulations  are not satisfied by the software technologies .","Store  stores information that is used for determining compliance of the technology  with the regulations . Store  is shown in  to store the controls  and the compliance data model , though the scope of the example embodiments is not limited in this respect. For instance, it will be recognized that store  may store the artifacts  and\/or the compliance reports  in addition to or in lieu of one or more of the controls  and\/or the compliance data model . Store  may be any suitable type of store. One type of store is a database. For instance, store  may be a relational database, an entity-relationship database, an object database, an object relational database, an extensible markup language (XML) database, etc.","Compliance system  may be implemented in various ways to generate a compliance data model for IT control, including being implemented in hardware, software, firmware, or any combination thereof. For example, compliance system  may be implemented as computer program code configured to be executed in one or more processors. In another example, compliance system  may be implemented as hardware logic\/electrical circuitry. In an embodiment, compliance system  may be implemented in a system-on-chip (SoC). Each SoC may include an integrated circuit chip that includes one or more of a processor (e.g., a microcontroller, microprocessor, digital signal processor (DSP), etc.), memory, one or more communication interfaces, and\/or further circuits and\/or embedded firmware to perform its functions.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIGS. 2A and 2B","FIG. 1","FIG. 3","FIG. 3"],"b":["200","200","104","100","200","300","104","300","302","304","306","308","310","312","314","316","200"]},"As shown in , the method of flowchart  begins at step . In step , controls are generated based on regulations. Each control corresponds to a respective subset of the regulations. In an example implementation, control logic  generates controls  based on regulations , such that each of the controls  corresponds to a respective subset of the regulations .","At step , first questions regarding intended use and implementation of a software technology are provided. Examples of an intended use include but are not limited to managing an IT environment or designated aspect(s) thereof (e.g., computers; software; verticals, such as financial services, entertainment, travel, sports, etc.), sharing documentation, etc. An implementation of the software technology may include architecture choices (e.g., piggy-backing on another software technology's implementation of compliance features), for example. The first questions may be provided to developer(s), system(s), etc., or any combination thereof. In an example implementation, capture logic  provides first questions , which inquire about intended use and implementation of the software technology.","Examples of questions that may be included in the first questions include but are not limited to the following: What does the software technology do for the end user? Was the software technology developed to use standard logs (e.g., standard with respect to the logging system of Microsoft Windows\u00ae) or customized logs? Does the software technology store its own passwords, or does it use crypto application programming interfaces (APIs)? Does the software technology configure its own files, or does it use registry keys? Depending on first answers, which are discussed below with reference to step , more questions may be provided in the first questions. For instance, if the first answers indicate that the software technology uses standard logs, crypto APIs, and registry keys, no further questions may be provided in the first questions regarding the control at issue because compliance may have been established with regard to these aspects based on other controls upon which the control at issue depends. However, if the first answers indicate that the software technology configures its own files, for example, questions regarding fifteen other controls may be provided in the first questions. Such questions may include: Are the logs secure? Does an event indicate when the logs are getting full? Is the software technology configured to indicate whether the logs have been tampered with or dated?","At step , first answers are received that correspond to the first questions. The first answers may be received from developer(s), system(s), etc., or any combination thereof. The first answers may be captured and stored in a manner that is agnostic with respect to a type of extraction logic (e.g., extraction logic ) that is used to generate the artifacts, though the scope of the example embodiments is not limited in this respect. Each of the first answers may be machine-readable and\/or human-readable. In an example implementation, capture logic  receives first answers  in response to the first questions .","At step , a subset of the controls that is applicable to the software technology is automatically determined based on the first answers. Each control in the subset of the controls is associated with a control objective that specifies one or more criteria that are to be satisfied for compliance with the respective subset of the regulations, a control activity that includes instructions that specify a manner in which satisfaction of the one or more criteria that are specified by the corresponding control objective are to be satisfied, and a control activity test that includes instructions that specify a manner in which verification of satisfaction of the one or more criteria that are specified by the corresponding control objective is to be performed. In an example implementation, subset logic  automatically determines a subset  of the controls  that is applicable to the software technology based on the first answers .","Multiple instances of a common control may be included in the controls. The subset of the controls may be automatically determined to include a single instance of the common control selected from the multiple instances.","Control objectives may specify any suitable criteria. For example, a control objective may specify that a password is to be a \u201cstrong\u201d password. In accordance with this example, the same control objective or one or more other control objectives may specify that a length of the password is to be eight or more characters, the password is to includes at least one letter and at least one number, the password is to include at least one upper case letter and at least one lower case letter, the password is not to be repeated within a specified number (e.g., 13, 20, or 40) of iterations of the password, the password is to expire within a specified time period (e.g., one month, six weeks, or one year). These criteria are provided for illustrative purposes and are not intended to be limiting.","At step , a compliance data model regarding the software technology is automatically generated. The compliance data model specifies at least the control objective and the control activity test for each control in the subset of the controls. The compliance data model may be management system-agnostic, though the scope of the example embodiments is not limited in this respect. For example, the state of the compliance data model may not be specific to any particular management system. In accordance with this example, the first questions need not be provided (e.g., asked) again if a management system that is to utilize the compliance data model is changed. In an example implementation, modeling logic  automatically generates compliance data model .","In accordance with an example embodiment, the first answers are arranged in a human-readable report that includes multiple rows of data, such that each row represents a portion of the first answers that corresponds to a respective control in the subset of the controls that is applicable to the software technology. In accordance with this embodiment, the compliance data model is automatically generated to include machine-readable code to represent each row of the human-readable report. It will be recognized that the compliance data model may include human-readable information in addition to the machine-readable code. For example, the compliance data model may include human-readable information to correspond to each row of the human-readable report. In accordance with this example, a management system may use the machine-readable code to execute procedures that are specified in the human-readable information.","In accordance with another example embodiment, the compliance data model defines containment and schematization of objects, artifacts, and instructions for creation, application, execution, monitoring, and\/or operation of control over IT services. The compliance data model may be capable of accommodating arbitrary (e.g., non-pre-defined) forms of instrumentation and methods of verifying that a control objective is met (e.g., by default) based on any of a variety of criteria. Such criteria may include but are not limited to a verifiable configuration setting, absence or presence of an audit event, a fingerprint of a specified deployment topology, a report that a management system generates, etc. In one example, the compliance data model may include a pointer to a white paper, which may specify steps to be taken for compliance with a regulation. In accordance with this example, a human may perform the steps and provide an indication that the steps have been taken. The compliance model may retrieve the indication for further processing in accordance with the techniques described herein.","For purposes of illustration, a compliance data model may specify that the model pertains to Microsoft Exchange Server\u00ae 2010 and that the model requires twenty control objectives to be satisfied. The first control objective may indicate that a registry key is to have a specified value. The second control objective may indicate that a specified event is to be absent when Microsoft Exchange Server\u00ae 2010 runs, and so on.","At step , the compliance data model is used to generate artifacts that define a manner in which the software technology is to be executed for compliance with the regulations. Each artifact is machine-readable code that includes instructions regarding how to implement a control. For instance, an artifact may be an extensible markup language (XML) file, a management pack, etc. A manner in which the artifacts are generated may be dependent upon a management system that is to utilize the artifacts, though the scope of the example embodiments is not limited in this respect. For instance, the artifacts may be generated in accordance with a first technique to be compatible with a first management system based on a determination that the artifacts are to be utilized by the first management system. The artifacts may be generated in accordance with a second technique to be compatible with a second management system based on a determination that the artifacts are to be utilized by the second management system, and so on. In an example implementation, extraction logic  uses the compliance data model  to generate artifacts .","In accordance with an example embodiment, at least two types of artifacts are generated. Artifacts of a first type are configured to run on element managers to collect information regarding element-level aspects, including but not limited to events, settings, and reports. Artifacts of a second type are configured to use the information regarding the element-level aspects to verify respective controls and report on them. Given that there may be more than one element manager implementation, more than one type of artifact (e.g., SCOM management packs, SCCM DCM packs, etc.) may be used. Unlike conventional techniques in which specifications were read and artifacts were written by hand, the artifacts may be automatically generated from a management system-agnostic compliance data model.","At step , second questions regarding features of the software technology are provided. The second questions may be provided to developer(s), system(s), etc., or any combination thereof. In an example implementation, capture logic  provides second questions .","At step , second answers are received that correspond to the second questions. The second answers may be received from developer(s), system(s), etc., or any combination thereof. Each of the second answers may be machine-readable and\/or human-readable. In an example implementation, capture logic  receives second answers  in response to the second questions .","At step , a determination is made whether the software technology includes features for satisfying the control objectives that are associated with the controls in the subset of the controls based on the second answers. In an example implementation, feature logic  determines whether the software technology includes features for satisfying the control objects that are associated with the controls in the subset  based on the second answers . Upon completion of step , flow continues to step , which is shown in .","At step , a determination is made whether the software technology is missing at least one feature for satisfying at least one respective control objective that is associated with at least one respective control in the subset of the controls. If the software technology is missing at least one feature for satisfying at least one respective control objective, flow continues to step . Otherwise, flow continues to step . In an example implementation, feature logic  determines whether the software technology is missing at least one feature for satisfying at least one respective control objective that is associated with at least one respective control in the subset .","At step , a design change request is generated that specifies that the at least one feature is to be included in the software technology for compliance with the regulations. In an example implementation, DCR logic  generates design change request(s) , which include a design change request that specifies that the at least one feature is to be included in the software technology for compliance with the regulations . For example, DCR logic  may generate the design change request based on receipt of feature information  from feature logic . In accordance with this example, the feature information  may indicate that the software technology is missing the at least one feature for satisfying the at least one respective control objective.","At step , a determination is made whether the features that are included in the software technology are implemented in a manner that is capable of satisfying the control objectives that are associated with the controls in the subset of the controls. In an example implementation, feature logic  determines whether the features that are included in the software technology are implemented in a manner that is capable of satisfying the control objectives that are associated with the controls in the subset .","At step , a determination is made whether at least one of the features is implemented in a manner that is not capable of satisfying a corresponding control objective. If at least one of the features is implemented in a manner that is not capable of satisfying a corresponding control objective, flow continues to step . Otherwise, flow continues to step . In an example implementation, feature logic  determines whether at least one of the features is implemented in a manner that is not capable of satisfying a corresponding control objective.","At step , a design change request is generated that specifies that the at least one of the features is to be implemented in a manner that is capable of satisfying the corresponding control objective for compliance with the regulations. In an example implementation, DCR logic  generates design change request(s), which include a design change request that specifies that the at least one of the features is to be implemented in a manner that is capable of satisfying the corresponding control objective for compliance with the regulations . For example, DCR logic  may generate the design change request based on receipt of the feature information  from feature logic . In accordance with this example, the feature information  may indicate that the at least one of the features is implemented in a manner that is not capable of satisfying the corresponding control objective.","At step , a score is determined that indicates an extent to which the software technology complies with the regulations. The score is based on an extent to which the software technology includes features for satisfying the control objectives that are associated with the controls in the subset of the controls and further based on an extent to which the features are implemented in a manner that is capable of satisfying the control objectives that are associated with the controls in the subset of the controls. The score may be based on other information, as well, including but not limited to environmental factors. In an example implementation, scoring logic  determines a score  that indicates the extent to which the software technology complies with the regulations . For example, scoring logic  may determine the score  based on receipt of feature information  from feature logic . In accordance with this example, the feature information  may indicate the extent to which the software technology includes features for satisfying the control objectives that are associated with the controls in the subset  and\/or the extent to which the features are implemented in a manner that is capable of satisfying the control objectives that are associated with the controls in the subset . In another example, scoring logic  may determine the score  based on receipt of other information  from any suitable source. In accordance with this example, scoring logic  may raise or lower risk ratings associated with control objectives and\/or control activity parameters (e.g., password length including  or more characters) in a production instance of the technology.","Any one or more of steps , , , , , , , , , , , , , , and\/or  of flowchart  may be performed in accordance with a common normalized schema, though the scope of the example embodiments is not limited in this respect. In some example embodiments, one or more steps , , , , , , , , , , , , , , and\/or  may not be performed. Moreover, steps in addition to or in lieu of steps , , , , , , , , , , , , , , and\/or  may be performed.","It will be recognized that compliance system  may not include one or more of control logic , capture logic , subset logic , modeling logic , extraction logic , feature logic , scoring logic , and\/or DCR logic . Furthermore, compliance system  may include modules in addition to or in lieu of control logic , capture logic , subset logic , modeling logic , extraction logic , feature logic , scoring logic , and\/or DCR logic . Moreover, capture logic  or a portion thereof may be implemented in management system  rather than compliance system .","Compliance system , management system , control logic , capture logic , subset logic , modeling logic , extraction logic , feature logic , scoring logic , DCR logic , and flowchart  may be implemented in hardware, software, firmware, or any combination thereof.","For example, compliance system , management system , control logic , capture logic , subset logic , modeling logic , extraction logic , feature logic , scoring logic , DCR logic , and\/or flowchart  may be implemented as computer program code configured to be executed in one or more processors.","In another example, compliance system , management system , control logic , capture logic , subset logic , modeling logic , extraction logic , feature logic , scoring logic , DCR logic , and\/or flowchart  may be implemented as hardware logic\/electrical circuitry. For instance, in an embodiment, one or more of compliance system , management system , control logic , capture logic , subset logic , modeling logic , extraction logic , feature logic , scoring logic , DCR logic , and\/or flowchart  may be implemented in a system-on-chip (SoC). The SoC may include an integrated circuit chip that includes one or more of a processor (e.g., a microcontroller, microprocessor, digital signal processor (DSP), etc.), memory, one or more communication interfaces, and\/or further circuits and\/or embedded firmware to perform its functions.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 4","FIG. 1","FIG. 3"],"b":["400","106","104","400","400","400","400","400"]},"As shown in , computer  includes a processing unit , a system memory , and a bus  that couples various system components including system memory  to processing unit . Bus  represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. System memory  includes read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS) is stored in ROM .","Computer  also has one or more of the following drives: a hard disk drive  for reading from and writing to a hard disk, a magnetic disk drive  for reading from or writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD ROM, DVD ROM, or other optical media. Hard disk drive , magnetic disk drive , and optical disk drive  are connected to bus  by a hard disk drive interface , a magnetic disk drive interface , and an optical drive interface , respectively. The drives and their associated computer-readable storage media provide nonvolatile storage of computer-readable instructions, data structures, program modules and other data for the computer. Although a hard disk, a removable magnetic disk and a removable optical disk are described, other types of computer-readable storage media can be used to store data, such as flash memory cards, digital video disks, random access memories (RAMs), read only memories (ROM), and the like.","A number of program modules may be stored on the hard disk, magnetic disk, optical disk, ROM, or RAM. These programs include an operating system , one or more application programs , other program modules , and program data . Application programs  or program modules  may include, for example, computer program logic for implementing compliance system , management system , control logic , capture logic , subset logic , modeling logic , extraction logic , feature logic , scoring logic , DCR logic , and\/or flowchart  (including any step of flowchart ), as described herein.","A user may enter commands and information into the computer  through input devices such as keyboard  and pointing device . Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a serial port interface  that is coupled to bus , but may be connected by other interfaces, such as a parallel port, game port, or a universal serial bus (USB).","A display device  (e.g., a monitor) is also connected to bus  via an interface, such as a video adapter . In addition to display device , computer  may include other peripheral output devices (not shown) such as speakers and printers.","Computer  is connected to a network  (e.g., the Internet) through a network interface or adapter , a modem , or other means for establishing communications over the network. Modem , which may be internal or external, is connected to bus  via serial port interface .","As used herein, the terms \u201ccomputer program medium\u201d and \u201ccomputer-readable medium\u201d are used to generally refer to media such as the hard disk associated with hard disk drive , removable magnetic disk , removable optical disk , as well as other media such as flash memory cards, digital video disks, random access memories (RAMs), read only memories (ROM), and the like. Such computer-readable storage media are distinguished from and non-overlapping with communication media. Communication media typically embodies computer-readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wireless media such as acoustic, RF, infrared and other wireless media. Example embodiments are also directed to such communication media.","As noted above, computer programs and modules (including application programs  and other program modules ) may be stored on the hard disk, magnetic disk, optical disk, ROM, or RAM. Such computer programs may also be received via network interface  or serial port interface . Such computer programs, when executed or loaded by an application, enable computer  to implement features of embodiments discussed herein. Accordingly, such computer programs represent controllers of the computer .","Example embodiments are also directed to computer program products comprising software (e.g., computer-readable instructions) stored on any computer useable medium. Such software, when executed in one or more data processing devices, causes a data processing device(s) to operate as described herein. Embodiments may employ any computer-useable or computer-readable medium, known now or in the future. Examples of computer-readable mediums include, but are not limited to storage devices such as RAM, hard drives, floppy disks, CD ROMs, DVD ROMs, zip disks, tapes, magnetic storage devices, optical storage devices, MEMS-based storage devices, nanotechnology-based storage devices, and the like.","While various embodiments have been described above, it should be understood that they have been presented by way of example only, and not limitation. It will be apparent to persons skilled in the relevant art(s) that various changes in form and details can be made therein without departing from the spirit and scope of the invention. Thus, the breadth and scope of the present invention should not be limited by any of the above-described example embodiments, but should be defined only in accordance with the following claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS\/FIGURES","p":["The accompanying drawings, which are incorporated herein and form part of the specification, illustrate embodiments of the present invention and, together with the description, further serve to explain the principles involved and to enable a person skilled in the relevant art(s) to make and use the disclosed technologies.",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIGS. 2A and 2B"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
