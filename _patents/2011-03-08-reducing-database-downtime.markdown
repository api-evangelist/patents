---
title: Reducing database downtime
abstract: Embodiments enable reduction of database downtime in a live production environment of an on-demand database service during repair and/or maintenance tasks. A source database and a target database are provided. Data is copied from the source database to the target database to create a mirrored set of data. Access is limited to one or more designated tables in the target database. General traffic is redirected from the source database to the target database, wherein the redirection occurs for a duration of a maintenance period. Data modifications that occur in the target database during the maintenance period are captured and then replicated into the source database. Finally, general traffic is redirected from the target database to the source database.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09183088&OS=09183088&RS=09183088
owner: salesforce.com, inc.
number: 09183088
owner_city: San Francisco
owner_country: US
publication_date: 20110308
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","COPYRIGHT NOTICE","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present application claims benefit under 35 USC \u00a7119(e) of U.S. provisional Application No. 61\/319,755, filed on Mar. 31, 2010, entitled \u201cSYSTEMS AND METHODS FOR REDUCING DOWN TIME DURING AN UPGRADE,\u201d the content of which is incorporated herein by reference in its entirety.","A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","The present invention generally relates to system upgrades, and more particularly to reducing down-time during an upgrade of an on-demand database and\/or application service.","Databases have become a fixture in the infrastructure underlying online applications as diverse as customer support call centers, online banking, electronic storefronts, social networks, search engines, news and media websites, etc. Such online applications are typically expected to be \u201calways on\u201d and continually available, whether externally accessible by the general public or restricted for internal use only (e.g., administrative applications). However, such expectations may be frustrated due to website downtime resulting from database-related tasks such as required regular maintenance procedures, updates, troubleshooting, and fixes. Such downtime is not only frustrating for end users, but can be costly for the providers of those online applications if they end up losing the opportunity to generate transactions or increase viewership and participation. In addition, the need to get a website back up quickly may contribute to errors and omissions while performing the necessary tasks, due to haste and stress.","Therefore it is desirable to provide systems and methods that overcome the above and other problems.","The subject matter discussed in the background section may not be assumed to be prior art merely as a result of its mention in the background section. Similarly, a problem mentioned in the background section or associated with the subject matter of the background section may not be assumed to have been previously recognized in the prior art. The subject matter in the background section merely represents different approaches, which in and of themselves may also be inventions.","Reference to the remaining portions of the specification, including the drawings and claims, will realize other features and advantages of the present invention. Further features and advantages of the present invention, as well as the structure and operation of various embodiments of the present invention, are described in detail below with respect to the accompanying drawings. In the drawings, like reference numbers indicate identical or functionally similar elements.","Embodiments described herein provides systems, apparatus, and methods for reducing database downtime. Embodiments enable minimization of website downtime during tasks such as maintenance procedures, updates, troubleshooting, and fixes.","Embodiments enable reduction of database downtime in a live production environment of an on-demand database service during repair and\/or maintenance tasks. A source database and a target database are provided. Data is copied from the source database to the target database to create a mirrored set of data. Access is limited to one or more designated tables in the target database. General traffic is redirected from the source database to the target database, wherein the redirection occurs for a duration of a maintenance period. Data modifications that occur in the target database during the maintenance period are captured and then replicated into the source database. Finally, general traffic is redirected from the target database to the source database.","In some embodiments, general traffic comprises requests received via one of a web server, an application server, a function call to an application programming interface, and a local application.","In some embodiments, limiting access to a table comprises permitting only read access. In some embodiments, limiting access to the one or more designated tables in the target database comprises: configuring properties for a limited user of the target database indicating that access to the one or more designated tables is to be limited; configuring database-level triggers in the target database to check user properties to determine access permissions; and configuring properties related to the general traffic to access the target database through the limited user.","Some embodiments comprise receiving a request via general traffic related to a table designated for limited access and transmitting information to display an indication that access to information is limited. The indication that access to information is limited may comprise modifying or removing a button or link to permit edits to information.","In some embodiments, copying data from the source database to the target database comprises continually updating the target database in real-time until a cutover process is initiated. In some embodiments, copying data from the source database to the target database comprises a single batch process performed immediately prior to redirecting general traffic from the source database to the target database.","In some embodiments, redirecting general traffic comprises configuring one or more load balancers. Some embodiments comprise concurrently permitting the administrative traffic to access the source database while redirecting the general traffic from the source database to the target database. Some embodiments comprise determining whether a request is related to general traffic or administrative traffic based on the IP address of the request.","Other embodiments of the invention are directed to systems and non-transitory computer-readable media associated with methods described herein.","While the present invention is described with reference to an embodiment in which techniques for reducing database downtime in an on-demand services environment are implemented in a system including a single source database and a single target database, the present invention is not limited to such embodiments. In addition, embodiments may be practiced using other database architectures, i.e., ORACLE\u00ae, DB2\u00ae, by IBM and the like without departing from the scope of the embodiments claimed.","Any of the above embodiments may be used alone or together with one another in any combination. Inventions encompassed within this specification may also include embodiments that are only partially mentioned or alluded to or are not mentioned or alluded to at all in this brief summary or in the abstract. Although various embodiments of the invention may have been motivated by various deficiencies with the prior art, which may be discussed or alluded to in one or more places in the specification, the embodiments of the invention do not necessarily address any of these deficiencies. In other words, different embodiments of the invention may address different deficiencies that may be discussed in the specification. Some embodiments may only partially address some deficiencies or just one deficiency that may be discussed in the specification, and some embodiments may not address any of these deficiencies.","I. General Overview","Systems, apparatus, and methods are described for reducing database downtime. Such embodiments can increase availability of online applications that rely upon a database. Website downtime is a significant impediment to the online operations of a business or other organization that needs to meet the \u201calways-on\u201d expectations of its users. Embodiments enable efficient database maintenance and increase website uptime.","The present invention provides systems and methods for implementing system upgrades, and more particularly to systems and methods for reducing down-time during an upgrade of an on-demand database system and\/or application service.","II. System Overview",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1","b":["10","10","12","14","16","17","18","20","22","24","26","28","10"]},"Environment  is an environment in which an on-demand database service exists. User system  may be any machine or system that is used by a user to access a database user system. For example, any of user systems  can be a handheld computing device, a mobile phone, a laptop computer, a work station, and\/or a network of computing devices. As illustrated in  (and in more detail in ) user systems  might interact via a network  with an on-demand database service, which is system .","An on-demand database service, such as system , is a database system that is made available to outside users that do not need to necessarily be concerned with building and\/or maintaining the database system, but instead may be available for their use when the users need the database system (e.g., on the demand of the users). Some on-demand database services may store information from one or more tenants stored into tables of a common database image to form a multi-tenant database system (MTS). Accordingly, \u201con-demand database service \u201d and \u201csystem \u201d will be used interchangeably herein. A database image may include one or more database objects. A relational database management system (RDMS) or the equivalent may execute storage and retrieval of information against the database object(s). Application platform  may be a framework that allows the applications of system  to run, such as the hardware and\/or software, e.g., the operating system. In an embodiment, on-demand database service  may include an application platform  that enables creation, managing and executing one or more applications developed by the provider of the on-demand database service, users accessing the on-demand database service via user systems , or third party application developers accessing the on-demand database service via user systems .","The users of user systems  may differ in their respective capacities, and the capacity of a particular user system  might be entirely determined by permissions (permission levels) for the current user. For example, where a salesperson is using a particular user system  to interact with system , that user system has the capacities allotted to that salesperson. However, while an administrator is using that user system to interact with system , that user system has the capacities allotted to that administrator. In systems with a hierarchical role model, users at one permission level may have access to applications, data, and database information accessible by a lower permission level user, but may not have access to certain applications, database information, and data accessible by a user at a higher permission level. Thus, different users will have different capabilities with regard to accessing and modifying application and database information, depending on a user's security or permission level.","Network  is any network or combination of networks of devices that communicate with one another. For example, network  can be any one or any combination of a LAN (local area network), WAN (wide area network), telephone network, wireless network, point-to-point network, star network, token ring network, hub network, or other appropriate configuration. As the most common type of computer network in current use is a TCP\/IP (Transfer Control Protocol and Internet Protocol) network, such as the global internetwork of networks often referred to as the \u201cInternet\u201d with a capital \u201cI,\u201d that network will be used in many of the examples herein. However, it should be understood that the networks that the present invention might use are not so limited, although TCP\/IP is a frequently implemented protocol.","User systems  might communicate with system  using TCP\/IP and, at a higher network level, use other common Internet protocols to communicate, such as HTTP, FTP, AFS, WAP, etc. In an example where HTTP is used, user system  might include an HTTP client commonly referred to as a \u201cbrowser\u201d for sending and receiving HTTP messages to and from an HTTP server at system . Such an HTTP server might be implemented as the sole network interface between system  and network , but other techniques might be used as well or instead. In some implementations, the interface between system  and network  includes load sharing functionality, such as round-robin HTTP request distributors to balance loads and distribute incoming HTTP requests evenly over a plurality of servers. At least as for the users that are accessing that server, each of the plurality of servers has access to the MTS' data; however, other alternative configurations may be used instead.","In one embodiment, system , shown in , implements a web-based customer relationship management (CRM) system. For example, in one embodiment, system  includes application servers configured to implement and execute CRM software applications (application processes) as well as provide related data, code, forms, web pages and other information to and from user systems  and to store to, and retrieve from, a database system related data, objects, and Webpage content. With a multi-tenant system, data for multiple tenants may be stored in the same physical database object, however, tenant data typically is arranged so that data of one tenant is kept logically separate from that of other tenants so that one tenant does not have access to another tenant's data, unless such data is expressly shared. In certain embodiments, system  implements applications other than, or in addition to, a CRM application. For example, system  may provide tenant access to multiple hosted (standard and custom) applications, including a CRM application. User (or third party developer) applications, which may or may not include CRM, may be supported by the application platform , which manages creation, storage of the applications into one or more database objects and executing of the applications in a virtual machine in the process space of the system .","One arrangement for elements of system  is shown in , including a network interface , application platform , tenant data storage  for tenant data , system data storage  for system data  accessible to system  and possibly multiple tenants, program code  for implementing various functions of system , and a process space  for executing MTS system processes and tenant-specific processes, such as running applications as part of an application hosting service. Additional processes that may execute on system  include database indexing processes.","Several elements in the system shown in  include conventional, well-known elements that are explained only briefly here. For example, each user system  could include a desktop personal computer, workstation, laptop, PDA, cell phone, or any wireless access protocol (WAP) enabled device or any other computing device capable of interfacing directly or indirectly to the Internet or other network connection. User system  typically runs an HTTP client, e.g., a browsing program, such as Microsoft's Internet Explorer browser, Netscape's Navigator browser, Opera's browser, or a WAP-enabled browser in the case of a cell phone, PDA or other wireless device, or the like, allowing a user (e.g., subscriber of the multi-tenant database system) of user system  to access, process and view information, pages and applications available to it from system  over network . Each user system  also typically includes one or more user interface devices, such as a keyboard, a mouse, trackball, touch pad, touch screen, pen or the like, for interacting with a graphical user interface (GUI) provided by the browser on a display (e.g., a monitor screen, LCD display, etc.) in conjunction with pages, forms, applications and other information provided by system  or other systems or servers. For example, the user interface device can be used to access data and applications hosted by system , and to perform searches on stored data, and otherwise allow a user to interact with various GUI pages that may be presented to a user. As discussed above, embodiments are suitable for use with the Internet, which refers to a specific global internetwork of networks. However, it should be understood that other networks can be used instead of the Internet, such as an intranet, an extranet, a virtual private network (VPN), a non-TCP\/IP based network, any LAN or WAN or the like.","According to one embodiment, each user system  and all of its components are operator configurable using applications, such as a browser, including computer code run using a central processing unit such as an Intel Pentium\u00ae processor or the like. Similarly, system  (and additional instances of an MTS, where more than one is present) and all of their components might be operator configurable using application(s) including computer code to run using a central processing unit such as processor system , which may include an Intel Pentium\u00ae processor or the like, and\/or multiple processor units. A computer program product embodiment includes a machine-readable storage medium (media) having instructions stored thereon\/in which can be used to program a computer to perform any of the processes of the embodiments described herein. Computer code for operating and configuring system  to intercommunicate and to process web pages, applications and other data and media content as described herein are preferably downloaded and stored on a hard disk, but the entire program code, or portions thereof, may also be stored in any other volatile or non-volatile memory medium or device as is well known, such as a ROM or RAM, or provided on any media capable of storing program code, such as any type of rotating media including floppy disks, optical discs, digital versatile disk (DVD), compact disk (CD), microdrive, and magneto-optical disks, and magnetic or optical cards, nanosystems (including molecular memory ICs), or any type of media or device suitable for storing instructions and\/or data. Additionally, the entire program code, or portions thereof, may be transmitted and downloaded from a software source over a transmission medium, e.g., over the Internet, or from another server, as is well known, or transmitted over any other conventional network connection as is well known (e.g., extranet, VPN, LAN, etc.) using any communication medium and protocols (e.g., TCP\/IP, HTTP, HTTPS, Ethernet, etc.) as are well known. It will also be appreciated that computer code for implementing embodiments of the present invention can be implemented in any programming language that can be executed on a client system and\/or server or server system such as, for example, C, C++, HTML, any other markup language, Java\u2122, JavaScript, ActiveX, any other scripting language, such as VBScript, and many other programming languages as are well known may be used. (Java\u2122 is a trademark of Sun Microsystems, Inc.).","According to one embodiment, each system  is configured to provide web pages, forms, applications, data and media content to user (client) systems  to support the access by user systems  as tenants of system . As such, system  provides security mechanisms to keep each tenant's data separate unless the data is shared. If more than one MTS is used, they may be located in close proximity to one another (e.g., in a server farm located in a single building or campus), or they may be distributed at locations remote from one another (e.g., one or more servers located in city A and one or more servers located in city B). As used herein, each MTS could include one or more logically and\/or physically connected servers distributed locally or across one or more geographic locations. Additionally, the term \u201cserver\u201d is meant to include a computer system, including processing hardware and process space(s), and an associated storage system and database application (e.g., OODBMS or RDBMS) as is well known in the art. It should also be understood that \u201cserver system\u201d and \u201cserver\u201d are often used interchangeably herein. Similarly, the database object described herein can be implemented as single databases, a distributed database, a collection of distributed databases, a database with redundant online or offline backups or other redundancies, etc., and might include a distributed database or storage network and associated processing intelligence.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 2","FIG. 2","FIG. 2","FIG. 2","FIG. 2"],"b":["10","16","12","12","12","12","12","14","16","16","22","23","24","25","30","32","34","36","38","100","100","102","104","110","112","114","116","10"],"sub":["1","N"]},"User system , network , system , tenant data storage , and system data storage  were discussed above in . Regarding user system , processor system A may be any combination of one or more processors. Memory system B may be any combination of one or more memory devices, short term, and\/or long term memory. Input system C may be any combination of input devices, such as one or more keyboards, mice, trackballs, scanners, cameras, and\/or interfaces to networks. Output system D may be any combination of output devices, such as one or more monitors, printers, and\/or interfaces to networks. As shown by , system  may include a network interface  (of ) implemented as a set of HTTP application servers , an application platform , tenant data storage , and system data storage . Also shown is system process space , including individual tenant process spaces  and a tenant management process space . Each application server  may be configured to tenant data storage  and the tenant data  therein, and system data storage  and the system data  therein to serve requests of user systems . The tenant data  might be divided into individual tenant storage areas , which can be either a physical arrangement and\/or a logical arrangement of data. Within each tenant storage area , user storage  and application metadata  might be similarly allocated for each user. For example, a copy of a user's most recently used (MRU) items might be stored to user storage . Similarly, a copy of MRU items for an entire organization that is a tenant might be stored to tenant storage area . A UI  provides a user interface and an API  provides an application programmer interface to system  resident processes to users and\/or developers at user systems . The tenant data and the system data may be stored in various databases, such as one or more Oracle\u2122 databases.","Application platform  includes an application setup mechanism  that supports application developers' creation and management of applications, which may be saved as metadata into tenant data storage  by save routines  for execution by subscribers as one or more tenant process spaces  managed by tenant management process  for example. Invocations to such applications may be coded using PL\/SOQL  that provides a programming language style interface extension to API . A detailed description of some PL\/SOQL language embodiments is discussed in commonly owned co-pending U.S. Provisional Patent Application 60\/828,192 entitled, PROGRAMMING LANGUAGE METHOD AND SYSTEM FOR EXTENDING APIS TO EXECUTE IN CONJUNCTION WITH DATABASE APIS, by Craig Weissman, filed Oct. 4, 2006, which is incorporated in its entirety herein for all purposes. Invocations to applications may be detected by one or more system processes, which manage retrieving application metadata  for the subscriber making the invocation and executing the metadata as an application in a virtual machine.","Each application server  may be communicably coupled to database systems, e.g., having access to system data  and tenant data , via a different network connection. For example, one application server might be coupled via the network  (e.g., the Internet), another application server might be coupled via a direct network link, and another application server might be coupled by yet a different network connection. Transfer","Control Protocol and Internet Protocol (TCP\/IP) are typical protocols for communicating between application servers  and the database system. However, it will be apparent to one skilled in the art that other transport protocols may be used to optimize the system depending on the network interconnect used.","In certain embodiments, each application server  is configured to handle requests for any user associated with any organization that is a tenant. Because it is desirable to be able to add and remove application servers from the server pool at any time for any reason, there is preferably no server affinity for a user and\/or organization to a specific application server . In one embodiment, therefore, an interface system implementing a load balancing function (e.g., an F5 Big-IP load balancer) is communicably coupled between the application servers  and the user systems  to distribute requests to the application servers . In one embodiment, the load balancer uses a least connections algorithm to route user requests to the application servers . Other examples of load balancing algorithms, such as round robin and observed response time, also can be used. For example, in certain embodiments, three consecutive requests from the same user could hit three different application servers , and three requests from different users could hit the same application server . In this manner, system  is multi-tenant, wherein system  handles storage of, and access to, different objects, data and applications across disparate users and organizations.","As an example of storage, one tenant might be a company that employs a sales force where each salesperson uses system  to manage their sales process. Thus, a user might maintain contact data, leads data, customer follow-up data, performance data, goals and progress data, etc., all applicable to that user's personal sales process (e.g., in tenant data storage ). In an example of a MTS arrangement, since all of the data and the applications to access, view, modify, report, transmit, calculate, etc., can be maintained and accessed by a user system having nothing more than network access, the user can manage his or her sales efforts and cycles from any of many different user systems. For example, if a salesperson is visiting a customer and the customer has Internet access in their lobby, the salesperson can obtain critical updates as to that customer while waiting for the customer to arrive in the lobby.","While each user's data might be separate from other users' data regardless of the employers of each user, some data might be organization-wide data shared or accessible by a plurality of users or all of the users for a given organization that is a tenant. Thus, there might be some data structures managed by system  that are allocated at the tenant level while other data structures might be managed at the user level. Because an MTS might support multiple tenants including possible competitors, the MTS should have security protocols that keep data, applications, and application use separate. Also, because many tenants may opt for access to an MTS rather than maintain their own system, redundancy, up-time, and backup are additional functions that may be implemented in the MTS. In addition to user-specific data and tenant-specific data, system  might also maintain system level data usable by multiple tenants or other data. Such system level data might include industry reports, news, postings, and the like that are sharable among tenants.","In certain embodiments, user systems  (which may be client systems) communicate with application servers  to request and update system-level and tenant-level data from system  that may require sending one or more queries to tenant data storage  and\/or system data storage . System  (e.g., an application server  in system ) automatically generates one or more SQL statements (e.g., one or more SQL queries) that are designed to access the desired information. System data storage  may generate query plans to access the requested data from the database.","A table generally contains one or more data categories logically arranged as columns or fields in a viewable schema. Each row or record of a table contains an instance of data for each category defined by the fields. For example, a CRM database may include a table that describes a customer with fields for basic contact information such as name, address, phone number, fax number, etc. Another table might describe a purchase order, including fields for information such as customer, product, sale price, date, etc. Yet another table or object might describe an Opportunity, including fields such as organization, period, forecast type, user, territory, etc.","In some multi-tenant database systems, tenants may be allowed to create and store custom objects, or they may be allowed to customize standard entities or objects, for example by creating custom fields for standard objects, including custom index fields. U.S. patent application Ser. No. 10\/817,161, filed Apr. 2, 2004, entitled \u201cCustom Entities and Fields in a Multi-Tenant Database System\u201d, and which is hereby incorporated herein by reference, teaches systems and methods for creating custom objects as well as customizing standard objects in a multi-tenant database system.","Reducing Down-time During a System Upgrade","Systems and methods are provided for eliminating virtually all planned downtime from affecting customers of a multi-tenant database system, such as that provided by salesforce.com, Inc. An example website, e.g., salesforce.com, may have four releases every year with about five hours of downtime each. In addition, other scheduled maintenance tasks may result in down-time (e.g., database kernel patches, storage volume changes, etc.). Down-time is not usually acceptable to customers, particularly those who operate 24\/7\/365 (e.g., call centers).","In some embodiments, downtime is minimized by cutting over from a live database (the \u201csource\u201d database) to a mirrored database (the \u201ctarget\u201d database) while performing maintenance and repair tasks upon the live database, wherein updates to the mirrored database are restricted for most functions, and any updates that do occur are tracked or logged. In this manner, several important benefits are realized: access to data is maintained even while database maintenance and\/or repairs are proceeding; the time required to re-sync any updates to the mirrored database back to the live database is minimized because updates to the mirrored database are restricted; and downtime is limited to the time required for the actual process of cutting over from one database to another without including the time required for the maintenance and\/or repair tasks.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 3","FIG. 3"],"b":["300","300","300","300","300","300"]},"In one embodiment, a source database and a target database may be provided (). In one embodiment, the source database may be actively in use in a live production environment. In one embodiment, a database, i.e., the source database and\/or the target database, may include one or more partitions or volumes. In one embodiment, a database, i.e., the source database and\/or the target database, may be replicated across multiple disks and\/or servers.","In one embodiment, data may be copied from the source database to the target database in order to create a set of data on the target database that mirrors data stored in the source database (). In one embodiment, data may be copied on an ongoing basis, either in real-time, as updates are made to the source database, or periodically (e.g., nightly), as a batch process. In one embodiment, all or a portion of the mirrored data is copied over immediately prior to cutover from the source database to the target database. In one embodiment, when the target database includes storage areas for separate primary and backup volumes, data is copied from the source database to a backup volume on the target database, and then from the target database's backup volume to its primary volume. In one embodiment where data is copied on an ongoing basis, the copying process is stopped prior to preparing the target database for cutover. In the embodiment where data is copied to the target database's backup volume and then to its primary volume, stopping the copying process may comprise stopping both the process that copies data from the source database to the target database and the process that copies data within the target database, from the backup volume to the primary volume.","In one embodiment, access to data in the target database is limited to one or more designated tables (). These designated tables are typically those in which system-level data is stored, e.g., data related to security, user login functionality, or usability. Access may be limited in any conventional manner, and access may be limited to be read-only or some other level of limited access. In one embodiment, database-level triggers are created for all tables for which access is to be restricted; when a restricted table is accessed, the trigger ensures that the database user is restricted to sanctioned operations. One benefit of using database-level triggers is that one can easily ensure that database accesses from all sources are restricted. In one embodiment, a special database user is created (e.g., for use when the database is accessed by an application server or a particular API); when the special database user attempt to access a restricted table, the trigger ensures that the special database user is restricted to sanctioned operations. In one embodiment, the database trigger raises an exception for every INSERT, UPDATE, or DELETE attempt. In one embodiment, the database trigger permits temporary or short-term modifications to data that are not to be copied back to the source database.","In one embodiment, a first cutover is initiated so that some or all traffic is redirected from the source database to the target database (). Traffic may include any source or server that accesses the source database (e.g., application servers, web servers, API function calls, web services, local applications). In one embodiment, one or more load balancers handling requests to a first group of application and\/or web and\/or API servers accessing the source database are configured to redirect requests to a second group of application and\/or web and\/or API servers that access the target database instead. In one embodiment, the first group of application and\/or web and\/or API servers are re-configured to access the target database instead of the source database. In one embodiment, load balancers distributing requests from a group of application and\/or web and\/or API servers to one or more instances of the source database are re-configured to send requests to one or more instances of the target database; such an environment may be typical where the database is replicated for the sake of redundancy, failover, or other reasons.","In one embodiment, admin traffic from the database administrators or other systems administrators performing the maintenance and\/or repair tasks upon the source database is still permitted to access the source database. In one embodiment, a rule is created for the load balancers that examiners the request header to determine whether the client's IP address is within a designated network\u2014if so, then the request is allowed to go through to the source database rather than being redirected to the target database.","Once the cutover has completed and the target database is receiving live traffic, in one embodiment, a source or server that accesses the source database (e.g., application servers, web servers, API function calls, web services, local applications) may present indications to a user that functionality is limited. For example, an application server that is connecting to the target database using the special database user may transmit information to display visual cues in a user interface, indicating that a particular online service is temporarily only available for information display and not for information edits\u2014such visual cues may include a banner or pop-up message on a web page, indicating that the website is temporarily read only, or they may include disabled buttons and\/or links. In another example, an API function call may return an error message when a database operation such as an INSERT, UPDATE, or DELETE is attempted against the target database.","In one embodiment, during the period of time while the source database is being maintained and\/or repaired, any modifications (e.g., INSERT, UPDATE, or DELETE) to mirrored data in the target database are captured (). In one embodiment, any modifications to mirrored data in the target database are replicated back to the source database (). Such replication may occur on an ongoing, periodic, or one-time basis. In one embodiment, Oracle Streams apply and propagate processes, or similar technology, are used to replicate data updates in the target database in to the source database in real-time. In one embodiment, Oracle Streams, or a similar technology, is used to perform any transformation or mapping or data from the existing data schema in the target database to a new data schema in the source database.","In one embodiment, a second cutover is then initiated so that any traffic that was redirected to the target database in step  is redirected back to the source database (). In an embodiment where redirection from the source database to the target database was performed by applying a rule in the load balancer, step  may be accomplished by simply removing the rule.","Example Architecture",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 4","b":["400","400","400","410","420","430"]},"In one embodiment, system  may include one or more load balancers  that handle the incoming requests to distribute the load between a first group of servers  (e.g., application and\/or web and\/or API servers). In one embodiment, the first group of servers  send database requests directly to source database . In one embodiment, source database  is replicated across multiple database servers, and database requests transmitted by the first group of servers  to source database  are handled by a second group of one or more load balancers distributing such requests amongst the multiple database servers.","In one embodiment, source database  may be constantly copying data in real-time to target database ; this data replication may be handled by any of one or more conventional products and\/or services, e.g., Hitachi TrueCopy Remote Replication software, EMC Symmetrix Remote Data Facility (SRDF). In one embodiment, source database  may replicate the data to a backup volume on target database ; such data may then be replicated on a primary volume on target database  using any of one or more conventional products and\/or services, e.g., Hitachi ShadowImage\u00ae In-System Replication, EMC TimeFinder.","In one embodiment, a second group of servers  (e.g., application and\/or web and\/or API servers) are set up to access target database  but are not actively being used yet.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 5","b":["440","480","470","460"]},"In one embodiment, Oracle Streams apply and propagate processes on target database  capture any updates to the data; an Oracle Streams apply process synchronizes all such updates on source database . This process of capture data updates may be handled by any of one or more conventional products and\/or services.","In one embodiment, prior to making target database  available, any running replication processes from a backup volume to a primary volume are stopped. In one embodiment, similar processes are configured on target database  to replicate data from the primary volume to the backup volume.","While the invention has been described by way of example and in terms of the specific embodiments, it is to be understood that the invention is not limited to the disclosed embodiments. To the contrary, it is intended to cover various modifications and similar arrangements as would be apparent to those skilled in the art. Therefore, the scope of the appended claims should be accorded the broadest interpretation so as to encompass all such modifications and similar arrangements."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In the following drawings like reference numbers are used to refer to like elements.","Although the following figures depict various examples of the invention, the invention is not limited to the examples depicted in the figures.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3","b":"300"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
