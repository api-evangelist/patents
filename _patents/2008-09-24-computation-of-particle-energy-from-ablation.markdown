---
title: Computation of particle energy from ablation
abstract: A method is provided for predicting thermal energy transfer from an entrained particle to a wall surface, the entrained particle being incorporated within a computational fluid dynamics (CFD) model of a flow scenario. Initially, the method generates grid geometry for the CFD model to form a plurality of finite element cells; and establishes initial and boundary conditions for the flow scenario. The model determines a characteristic particle size of the entrained particle; inserts the particle into a cell at an initial location; initializes physical conditions of the particle as a particle state; and calculates a time-step based on characteristic cell size and flow velocity. The model integrates state change in the particle state over the time-step in the cell; and computes collision effect in response to the particle crossing a face of the cell. After convergence, the model quantifies energy flux to the wall surface from impingement by the particle.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07996195&OS=07996195&RS=07996195
owner: The United States of America as represented by the Secretary of the Navy
number: 07996195
owner_city: Washington
owner_country: US
publication_date: 20080924
---

{"@attributes":{"id":"description"},"GOVINT":[{},{}],"heading":["STATEMENT OF GOVERNMENT INTEREST","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The invention described was made in the performance of official duties by one or more employees of the Department of the Navy, and thus, the invention herein may be manufactured, used or licensed by or for the Government of the United States of America for governmental purposes without the payment of any royalties thereon or therefor.","The invention relates generally to computing energy transfer from particles to a surface, thereby causing ablation. In particular, numerical methods for augment heat transfer from flow-fields to wall surfaces by accounting for particle collision kinetic and thermal effects against the surface.","The United States Navy employs ablative materials missile launching systems to protect the surfaces of the launcher structure, with the Mk 41 Vertical Launching System (VLS) representing one such example contained aboard a combat vessel as its platform. Several missiles are contained within the VLS for selective launching, each by its rocket motor booster. Upon igniting a rocket motor within a VLS canister, high-temperature exhaust, often containing aluminum oxide (AlO) particles, flows through the gas management system and over ablative materials that cover protected surfaces. The ablative material chars and\/or erodes as the launcher surfaces absorb energy from the exhaust gas and particles. The erosion protects the launcher structure by decreasing the amount of heat transferred through the ablative to the underlying structures.","The energy imparted to the ablative wall may come from convection from the gas or from particle effects. Particles may impart energy to the walls from conduction and solidification during impacts and from abrasion due to repeated particle impacts. The extent of the ablative erosion depends on the type of rocket launched and the duration of time the missile remains within the canister. The most significant erosion occurs during a restrained firing, when the rocket motor is ignited but the missile cannot exit the canister.","Analytical, experimental, and computational methods have been used to predict the amount of erosion that occur during a rocket launch or restrained firing, and these prediction methods have provided valuable information regarding ablation erosion for launcher designs. However, large errors can result from comparisons between predictions and measured erosion data. There have also been a few occurrences of the rocket exhaust eroding through all the ablative material and burning through the launcher structure. Improved computational methods to predict the extent of ablative erosion would allow for improved safety and reliability of U.S. Navy missile launching systems. The code described in this report is an attempt to improve prediction capabilities.","Naval Surface Warfare Center, Dahlgren Division (NSWCDD) has been involved in predicting VLS ablation for many years. See C. T. Boyer, J. W. Powers, T. R. Burgess, J. R. Bowen and K. R. Stull, \u201cHigh-Strength Quartz Reinforcement for Mk 41 Vertical Launching System Ablators\u201d, NSWCDD\/TR-95\/224, Naval Surface Warfare Center, Dahlgren Division, 1996. The conventional method for predicting erosion requires both experimental and computational results. Conventional techniques provide a computational fluid dynamics (CFD) analysis of the gas dynamics within the VLS plenum and uptake.","Although the rocket exhaust may have AlOparticles, the CFD analysis does not include the particle motion within the gas flow. Computational power has not been sufficient to produce a coupled particle-gas CFD solution in a reasonable amount of time. To account for the added mass of the particles within the flow, the exhaust gas is modeled as a \u201cheavy\u201d gas. The heavy gas is a mixture of the gaseous exhaust products and AlOwith the proportions set to provide the correct total exhaust mass flow rate. This heavy gas is conventionally used to provide a simulation flow field within the launcher.","Using the conventional CFD results, a computational heat flux from the hot gas to the launcher walls is estimated. In order to accurately compute a heat flux using CFD, the boundary layer must be fully resolved. For geometries of the scale and complexity of the VLS, using a grid this fine typically requires prohibitively long run times for the CFD solution. Therefore, the heat flux is computed from gas properties taken at a \u201cstandoff\u201d distance from the wall.","Next, an empirical relation is used to scale the computational heat flux. The empirical relation was derived from erosion measurements obtained from a set of experiments designed to investigate the performance of different ablative materials. The scaled heat flux is then used in a one-dimensional heat conduction code to compute the steady-state wall ablation rate. The total wall ablation is applied as the steady-state ablation rate multiplied by the total burn time of the rocket motor. Errors in this conventional predicted ablation may be on the order of several hundred percent.","Conventional CFD models yield disadvantages regarding incorporation of particle impingement that are addressed by various exemplary embodiments of the present invention. In particular, various exemplary embodiments provide a method for predicting thermal energy transfer from an entrained particle to a wall surface, said entrained particle being incorporated within a CFD model of a flow scenario.","Initially, the method generates grid geometry for the CFD model to form a plurality of finite element cells; and establishes initial and boundary conditions for the flow scenario within the model. Continuing, the model determines a characteristic particle size of the entrained particle; inserts the particle into a cell at an initial location; initializes physical conditions of the particle as a particle state; and calculates a time-step based on the flow velocity and a characteristic cell size determined from the computational grid.","The model proceeds to integrate state change in the particle state over the time-step in the cell; and compute collision effect from the particle to the wall surface in response to the particle crossing a face of the cell if the face constitutes the wall surface. Otherwise the method locates the particle either in an adjacent cell in response to the particle crossing the face, or else in the cell; and updates the particle state with the state change for end of the time-step in response to the particle remaining in the cell. The method iterates by repeating the integrating through updating operations with the adjacent cell being assigned as the (original) cell in response to the particle crossing the face until reaching end of the grid geometry. After convergence, the model quantifies energy flux to the wall surface from impingement by the particle on the wall surface.","In the following detailed description of exemplary embodiments of the invention, reference is made to the accompanying drawings that form a part hereof, and in which is shown by way of illustration specific exemplary embodiments in which the invention may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice the invention. Other embodiments may be utilized, and logical, mechanical, and other changes may be made without departing from the spirit or scope of the present invention. The following detailed description is, therefore, not to be taken in a limiting sense, and the scope of the present invention is defined only by the appended claims.","Recently, several tests of rocket motor burns have exhibited more erosion than was predicted, challenging the accuracy of the predictions. This has caused interest in improving the predictive capabilities. From examining prediction methodologies used by other organizations, the selected option for improving predictive abilities is to include the particle effects in the numerical simulations. These particles, such as those released from combustion of solid rocket propellant, are entrained within the exhaust gases produced to drive forward a missile onto which the motor attaches. These particles in the rocket plume can contact an elastic surface (e.g., wall), such, as on a launch canister. Such impacts can transfer thermal energy from a hot particle to a cold wall, as well as cause abrasion to the latter. Both of these effects can cause higher wall erosion than predicted from the gaseous medium alone. Modeling these effects constitutes a serious challenge in numerical heat transfer modeling.","I. Ablation Model Overview: The Particle Integration Scheme for Computing Energy to Surfaces (PISCES) computer program has been developed to include particle effects with the erosion predictions and disclosed herein. This computer model predicts the particle impact locations and the energy imparted to the ablative surfaces from the impacts. The energy flux to the walls can be used to develop correlations for predicting ablation.","Various exemplary embodiments provide a model that uses a pre-computed computational fluid dynamics solution of the fluid flow through the launcher system. The code reads this solution, inserts representative particles of the correct mass, and tracks their motion through the system. The particles are \u201cone-way coupled\u201d that means the computed fluid motion affects the particle motion, but the particle effects are not used to adjust the fluid flow. This is a simplification to render the computational problem tractable. The code predicts the total energy flux to the walls due to particle actions. The total energy flux includes both the kinetic component from particle impacts and the conduction component from heat conduction while a particle is in contact with the wall. The total flux is then used to predict the extent of the wall ablation.","II. Code Structure and General Operation:  present flowcharts respectively illustrating the general operation of the prediction code and particle time integration. The main steps include reading the input files, initializing the particles, looping over each particle for time integration, and writing the final data as output. Each step in the chart is described in detail in later sections.  illustrates a first flowchart diagram . The program initiates at step  by reading input files at step . These input files  include data for parameter input, grid, solution and boundary conditions. The CFD data are written to a new output file at step . The program proceeds to particle initialization , which computes distribution of particle sizes at step , inserts particles across desired patches , finds initial grid cell locations (i, j, k) for each particle at step  and initializes physical conditions (in dimensioned units) at step .","The program proceeds to determine time-step dt based on grid size and flow velocity at step . The program begins integration for the particles, initially from n=1 at step  and proceeds to the main loop . This particle integrator writes the state of a particle n to a data file at step  and then integrates the particle over the time-step (as explained in ) at step . The particle state is updated in step  and written to a file if initially set as input in step . A logical test at step  determines whether the particle has left the domain or converged. If so, the program proceeds to write the particle's final state at step , but otherwise returns to step . After final state writing, another logical test at step  determines whether n represents the last particle. If not, the sequence updates to n=n+1 at step  and returns to step . Otherwise, the program continues to compile wall flux statistics at step , followed by writing the wall flux data at step , after which the program terminates at step .","III. Particle Time Integration:  illustrates a second flowchart diagram  to further describe step  as a subroutine. For every n particle, the program starts at step  and proceeds to compute particle drag and convection coefficient at step . The program integrates particle state to the end of the time-step at step . A first logical query determines whether the particle remains in the original cell at step . If not, point position and time corresponding to the particle crossing the cell face are determined at step . Otherwise, the particle state is updated (within the original cell) regarding position, velocity and temperature at step .","From step , the program continues to interpolate the particle state to position and time at step . A second query at step  inquires whether the cell face represents a wall. If so, the program computes wall collision (i.e., impact) and the resulting particle state at step . Otherwise, the program proceeds to find a new cell adjacent to the original cell at step . Then (from either of steps  or ) the program proceeds to step  and continues to a third logical query at step  to determine whether the time-step is complete. If not, the program calculates a new sub-time-step for the remainder of the time-step at step  and returns to step . Otherwise, the program returns to step  and concludes this subroutine.","IV. Input Files: The particle code may receive input from four or five separate data files. These files provide the user-specified options, the computational domain, the boundary conditions, and the initial conditions. The details and options for reading each of the input files are discussed below. The necessary inputs are:","(1) The main input file where user options are set;","(2) The computational grid used for the CFD analysis;","(3) The boundary conditions applicable for the CFD analysis; and","(4) The pre-computed CFD solution (this may be one or two files).","V. Main Input File: The main input file to control the run is the file \u201cPiscesInput.dat\u201d, which provides a fully commented text-based file. Any line beginning with an \u201c!\u201d denotes a comment. The input options may be divided into separate sections to deal with different aspects of the code. There are sections to specify the input and output file names, the data formats and the particle insertion parameters, material, and impact behavior. The input options may be set by specifying a key word, in all capital letters, followed by the user-desired value. For example, to specify the friction factor for particle-wall interactions, the data file-contains the lines:","!Friction factor for particle-wall interactions","FFAC 0.2","where FFAC identifies a friction coefficient C having a value of 0.2.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIGS. 3A and 3B","FIG. 3A","FIG. 3B"],"b":["300","310","315","320","330","340","350","360","370","380","390"]},"VI. Reading the Grid: Currently, PISCES can only use a structured CFD grid. The grid may be two-dimensional planar, two-dimensional axisymmetric, or three-dimensional. The options for reading the grid are set within the main input file . While other grid formats may be added in the future, the type of grid file currently used is in PLOT3D format. There are several options available for PLOT3D files. They may be formatted or unformatted, and i-blanked or non-i-blanked. These options are available by setting the appropriate flag in the input file. The following lines in segment  are from the input file.",{"@attributes":{"id":"p-0053","num":"0052"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"GRIDFORM"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["!type","unformatted ","iblank","multi-block","!for plot3D files"]},{"entry":["plot3d","true","true","true",{}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["GNAME recomp.craft.gr0",{},{}]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"XLINF 1.0","as a default length scale to thereby specify non-dimensional physical input parameters.","VII. Reading the Boundary Conditions: The boundary conditions for the CFD solution must also be read by PISCES in segment . The CFD boundary conditions specify whether the boundaries of computational blocks are walls, block-to-block boundaries, inflows, outflows, or reflective boundaries. PISCES may read boundary condition files in the formats from CRAFT and NPARC (developed by NASA Lewis and Arnold Engineering Development Center). Other formats may be added as needed for reading CFD solutions from other structured codes. The input file lines dealing with reading the boundary condition file are:","!cfd boundary condition file (nparc or craft format)","BCFORM craft","BCNAME craft.global","where BCFORM may be either \u201ccraft\u201d or \u201cnparc\u201d format and the filename is entered after BCNAME input.","PISCES reads the boundary conditions and saves the values in internal arrays for reference during the particle motion integration. Each boundary can be saved in the multi-dimensional array \u201cbc\u201d as labeled. The array bc is dimensioned as:","Bc(nblock, direction, bc#, 8)","where nblock is the block number for the boundary and the direction is either i, j, or k. The boundary condition number, \u201cbc#\u201d, simply numbers the boundary conditions for each block and direction incrementally starting at one. The \u201c8\u201d refers to the eight values saved for each boundary condition. The values are:","1=imin","2=imax","3=jmin","4=jmax","5=kmin","6=kmax","7=boundary condition value (e.g., \u22125 is an inlet)","8=extra value if needed.","The dimensions are saved in cell-centered dimensions. Block-to-block boundaries are read from the boundary condition file and saved in a \u201cbpatch\u201d array. The bpatch saves the boundary number of matching boundary conditions so, when a particle passes through one block-to-block boundary, the program can find the boundary of the matching face and determine into which block the particle moved. Finally, wall definitions are saved in a \u201cwalldef\u201d array. Particle-wall impacts use the walldef array to save the collision information for later processing.","VIII. Reading the CFD Solution: The pre-computed CFD solution may be read using PLOT3D format. PLOT3D solution files may be in the form of a q-file or a function file. Other solution formats may be added as needed. Eleven CFD variables are required for all PISCES calculations. These eleven variables may be read from the CFD solution for each cell or, if not available in the CFD solution, the user may specify an average value throughout the domain.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 4","b":["400","410","420"]},"Conventional solutions from CRAFT were typically in the q-file format with two files, a \u201cq\u201d file and a \u201cq3\u201d file. The \u201cq\u201d file contains the non-dimensional values for density \u03c1, mass fluxes \u03c1U, \u03c1V, \u03c1W, and total energy E. The \u201cq3\u201d file contains the dimensional values for static pressure (atmospheres), static temperature (Kelvin), ratio of specific heats \u03b3, Mach number M, and total energy E (Joules). If this type of solution format is used for input, the corresponding lines in segment  from ParticleInput.txt are:",{"@attributes":{"id":"p-0074","num":"0073"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"QFORM"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["!type","unformatted ","iblank ","multi-block","!for plot3D files"]},{"entry":["plot3d-q","true","true","true",{}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["QNAME recomp.craft.q",{},{}]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The CFD solutions are read and saved within PISCES for the computational domain. The non-dimensional \u201cq\u201d file data must be dimensioned for use in PISCES by scaling to a reference value, such as freestream conditions of the fluid medium. Values set in segment  of the main input file  for freestream density \u03c1 \u201cRHOINF\u201d, freestream axial velocity U \u201cUINF\u201d, and freestream static pressure P \u201cPINF\u201d are used as reference values for length, density, velocity and pressure, respectively. The non-dimensional density is multiplied by RHOINF; the values for \u03c1U, \u03c1V, and \u03c1W are multiplied by (UINF\/RHOINF); and the pressure is multiplied by PINF. The corresponding lines from the input file are:","!---Values for dimensionalizing grid and solution","XLINF 1.0 !length scale","!if solution values are dimensional enter 1.0","RHOINF 1.17156","UINF 347.97","PINF 101325.0","where the freestream values are defined by \u03c1=1.17156 kg\/m, U=347.97 m\/s and P=101.325 kPa (=1 atm) for the example shown at segment .","A second type of PLOT3D solution file is a function file, which may contain any number of variables. If this type of solution format is used, the input file lines shown in segment , can be changed (from the CRAFT version) to:",{"@attributes":{"id":"p-0083","num":"0082"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"QFORM"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["!type","unformatted ","iblank","multi-block","!for plot3D files"]},{"entry":["plot3d-fun","true","true","true",{}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["QNAME recomp.craft.gfun",{},{}]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"Because the position of the variables within a function file may be varied, the user must specify which function file variable corresponds to each of the eleven PISCES variables as real numbers. This can be accomplished by defining either the function file variable number, or if the value is not available, by specifying an average value. The appropriate lines from the main input file are:","CFD_Solution_Values","!Position in data file of each variable (ignored for q files)","!rho uvel vvel wvel P(Pa) T(K) Mach gamma cp(J\/(kg K) mu(N\/(s m^2)) Pr",{"@attributes":{"id":"p-0085","num":"0084"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"11"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"7pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"7pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"7pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"7pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"10","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"11","colwidth":"28pt","align":"center"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"11","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","2","3","4","5","6","7","8","9","10","avg"]},{"entry":{"@attributes":{"namest":"1","nameend":"11","align":"center","rowsep":"1"}}}]}}}},"br":[{},{}]},{"@attributes":{"id":"p-0086","num":"0085"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"11"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"10","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"11","colwidth":"21pt","align":"center"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"11","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0.","0.","0.","0.","0.","0.","0.","1.33","1141.","1.e\u22129","0.72"]},{"entry":{"@attributes":{"namest":"1","nameend":"11","align":"center","rowsep":"1"}}}]}}}},"br":{}},"IX. Units: Dimensions for grid and, solution values, shown in segment  can be defined by local freestream parameters. Although the particle integration part of PISCES does not have a built-in system of units, the heat transfer and conduction models employ an enthalpy versus temperature dimensional relationship for the particle material. The curve representing this relationship used in PISCES provides enthalpy and temperature data in Syst\u00e8me International d'Unit\u00e9s (SI) units. Therefore, the input CFD solutions and grid may preferably also be in SI units. However, a supplemental routine can provide the material properties in a different set of units for conversion. The main input file  contains input parameters for rescaling the CFD solutions as needed. These parameters are XLINF, RHOINF, UINF, and PINF, which are used as reference values for length, density, velocity and pressure, respectively. These parameters are described in more detail in sections VI and VIII.","Non-dimensional parameters employed for CFD include Prandtl number Pr, as introduced earlier, as well as additional non-dimensional parameters including Reynolds number Re, Nusselt number Nu and Biot number Bi. Prandtl number can be expressed as Pr=(c\u03bc\/\u03ba)where c, \u03bc and \u03ba correspond respectively to specific heat capacity, kinematic viscosity and thermal conductivity of the fluid medium. Prandtl number represents a ratio of momentum and thermal diffusion (and for many fluid applications can be approximated as a constant). Reynolds number can be expressed as Re=\u03c1UL\/\u03bc, where \u03c1 is fluid density and L is a characteristic length, and represents a ratio of advection to diffusion that determines transition from laminar to turbulent flow. Nusselt number represents a ratio of conductive thermal resistance to convective resistance (both of the fluid medium) and depends only on Reynolds and Prandtl numbers. Biot number represents a ratio of conductive thermal resistance of a solid object in contact with a moving fluid to convective resistance of the fluid medium. For Bi<0.1, the lumped-mass approximation is considered appropriate.","X. Characteristic Length: In response to the CFD grid and solution being read by PISCES, a characteristic length for the grid, DXCHAR, is computed. The representative length is used for extruding a two-dimensional grid into a three-dimensional grid and for setting the initial time-step size to ensure a particle does not move through more than one cell during a single step. The characteristic length can be computed by searching through the entire CFD grid to find the cell with the smallest volume or area. The volume or area is computed for each cell, depending upon whether the grid is initially two-dimensional or three-dimensional, respectively. Upon determining the smallest volume (area), a radius for a sphere (circle) of equivalent volume (area) can be computed. This radius is then used as the characteristic length of the grid.","XI. Map 2D to 3D: PISCES computes particle motion in three-dimensional grids. Therefore, if the initial CFD solution is two-dimensional, the grid must be extruded into a three-dimensional grid of one cell width. Two-dimensional grids originally lie on the xy-plane.  illustrates examples of both types of extrusions from an original planar grid : axi-symmetric and planar, shown with respect to a Cartesian compass-rose  illustrating the orthogonal axes. The axi-symmetric grid  presents the original planar area  rotates \u00b10.5\u00b0 about its axis of symmetry (along the x-axis) to form adjacent planes , . The two-dimensional planar grid  is extruded in the z-direction a distance of DXCHAR to form an adjacent, parallel planar grid .","XII. Triangulation of Structured Cell Faces: Integration of a particle's motion involves eventually passing the particle from one cell to an adjacent cell as determined in step . To track the particle motion through the grid, logic tests whether a particle has passed through a cell face as further described in section XVI. The logic tests whether the particle has passed through a defined plane in space. However, for hexahedral cells, each cell face is defined by four points. Because three points uniquely define a plane, four points may not be on a single plane and the cell face may be composed of a pair of intersecting planes.","To solve this problem, each cell face is split into two triangles by constructing an imaginary line from corner to corner. Each cell is triangulated using a standard template, so the triangles in one cell face match one-to-one with the triangles on the adjacent cell face.  shows the three-dimensional geometry  corresponding to the logic for triangulating the cell faces with respect to a compass-rose . Boundaries of a rectangular prism can be characterized by node numbers  or by edge numbers  that connect nodes along the boundaries of each cell face. Nodes diagonally opposing each other on a face can be associated, by the imaginary diagonal lines . The nodes and\/or vertices define the cell faces, the other ones being identified as face- , face-  and face- . The diagonal line  between vertex- and vertex- divides face- into a pair of triangles, the upper one of which being shaded .",{"@attributes":{"id":"p-0093","num":"0092"},"figref":["FIG. 7","FIG. 6"],"b":["700","710","720","730","740","750","680","2","700","760"]},"Each vertex, diagonal, and edge corresponds to a single cell face. Thus, if a particle passes through one of these edges or vertices, PISCES only considers the particle as exiting the cell once. For example, vertex- associates in the  example) with face-, face-, or face-. If a particle passes through this vertex, the code might count the particle as passing through all three faces. Counting the particle passage in this way would give an incorrect result when testing if a particle has left the cell. To preclude such adverse effect, the vertices and edges are assigned as identified in  by the table .","XIII. Computing Cell Face Areas: The area of a cell face is determined for both particle insertion calculations and computing fluxes to the wall (energy\/area ratio).  shows a cyclic quadrilateral  with sides of lengths a, b, c, and d inscribed in a circle . PISCES computes the cell face area for a general quadrilateral using Brahmagupta's formula for the area of the cyclic quadrilateral. See http:\/\/mathworld.wolfram.com\/BrahmaguptasFormula.html (Wolfram, MathWorld). The formula provides the area of the quadrilateral  having side lengths a, b, c, and d. The semi-perimeter s can be computed as:",{"@attributes":{"id":"p-0096","num":"0095"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"s","mo":"=","mfrac":{"mrow":{"mi":["a","b","c","d"],"mo":["+","+","+"]},"mn":"2"}}},{"mrow":{"mo":["(",")"],"mn":"1"}}]}}}},"br":[{},{}],"in-line-formulae":[{},{}],"i":["A","s\u2212a","s\u2212b","s\u2212c","s\u2212d","s\u2212a","s\u2212b","s\u2212c","s\u2212d","s\u2212a","s\u2212b","s\u2212c","s\u2212d","s\u2212a","s\u2212b","s\u2212c","s\u2212d"]},"XIV. Particle Sizing: The AlOparticles exit the nozzle in a wide distribution of sizes. Experiments have been conducted to measure the particle size distributions of many solid rocket motors. Investigators have derived complex relations to correlate the mean particle size to rocket motor and propellant characteristics. See R. Hermsen, \u201cAluminum Oxide Particle Size for Solid Rocket Motor Performance Prediction\u201d, , v. 18, 1981, pp. 483-490 for a widely accepted correlation expressed for mass-weighted average diameter Das (for the units identified below):\n\n=3.63044(1\u2212exp(\u22120.0008163\u03c4)),\u2003\u2003(3)\n\nwhere Dis the nozzle throat diameter (inches), is the AlOconcentration in the chamber (g-mol\/100 g), Pis the chamber pressure (psia), and \u03c4 is the average chamber residence time (milliseconds or ms). The residence time is computed using the average chamber density and mass flow rate and the empty chamber volume when half the propellant is expended. The mass-weighted average diameter D(microns or \u03bcm) can be defined for a continuous distribution as:\n",{"@attributes":{"id":"p-0098","num":"0097"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"msub":{"mi":"D","mn":"43"},"mo":"=","mfrac":{"mrow":[{"msubsup":{"mo":"\u222b","mn":"0","msub":{"mi":["D","max"]}},"mo":"\u2062","mrow":{"msup":{"mi":"D","mn":"3"},"mo":["\u2062","\u2062","\u2062"],"mrow":[{"mi":"f","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"D"}},{"mo":"\u2146","mi":"D"}],"mstyle":{"mspace":{"@attributes":{"width":"0.2em","height":"0.2ex"}}}}},{"msubsup":{"mo":"\u222b","mn":"0","msub":{"mi":["D","max"]}},"mo":"\u2062","mrow":{"msup":{"mi":"D","mn":"2"},"mo":["\u2062","\u2062","\u2062"],"mrow":[{"mi":"f","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"D"}},{"mo":"\u2146","mi":"D"}],"mstyle":{"mspace":{"@attributes":{"width":"0.2em","height":"0.2ex"}}}}}]}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"4"}}]}}}},"br":{}},"A log-normal size distribution is then used to represent the entire variation in particle sizes. Log-normal distributions generally arise when the quantity of interest (in this case, diameter) is dependent upon many multiplicative factors and is often used for particle size distributions. See C. Crowe, M. Sommerfield and Y. Tsuji, , CRC Press LLC, 1998. The distribution function \u0192(D) for characteristic particle size may be written as:",{"@attributes":{"id":"p-0100","num":"0099"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mrow":[{"mi":"f","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"D"}},{"mfrac":{"mn":"1","mrow":{"msqrt":{"mrow":{"mn":"2","mo":"\u2062","mi":"\u03c0"}},"mo":["\u2062","\u2062","\u2062"],"mi":["\u03c3","D"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},"mo":"\u2062","mrow":{"mi":"exp","mo":"\u2061","mrow":{"mo":["[","]"],"mrow":{"mrow":{"mo":"-","mfrac":{"mn":["1","2"]}},"mo":"\u2062","msup":{"mrow":{"mo":["(",")"],"mfrac":{"mrow":{"mrow":[{"mi":["ln","D"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mi":"ln","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["D","m"]}}],"mo":"-"},"mi":"\u03c3"}},"mn":"2"}}}}}],"mo":"="},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"5"}}]}}}},"br":{},"sub":"m "},{"@attributes":{"id":"p-0101","num":"0100"},"figref":"FIG. 9","sub":"m","sup":"\u22126 ","b":["900","910","920","930","940","940","950","960"]},"In the particle code, the continuous distribution is represented by a discrete number of particle sizes, or particle groups. The user specifies the number of particle groups desired in the input file. In , the distribution is divided into five groups. The squares  identify the minimum and maximum diameter limits for each particle group. These diameter limits are determined by dividing the area under the distribution curve into equal area regions with one region for each group. For N groups, the limits Dmay be determined from the integral equation:\n\n\u222b\u0192()10\u2003\u2003(6)\n\nwhere D=0, and D>>D. Upon determining the limits of the N areas, the distribution is then integrated between each of the limits to determine a mass-averaged diameter for each group. In , the circles  indicate the five particle diameters used to represent the continuous distribution for this example.\n","XV. Particle Insertion: The number of physical particles flowing from an actual rocket motor can be very large. For example, for a small rocket motor such as the Sidewinder Mk 36, the AlOcomponent constitutes about 31% of the exhaust by mole fraction. This equates to particle mass flow {dot over (m)}of about 8.3 g\/s of AlOflowing out of the motor during its \u02dc5 second burn. The average particle size is D=4.5\u00d710m. Because the density of AlOis \u03c1=3970 kg\/m, the average particle mass Mis:",{"@attributes":{"id":"p-0104","num":"0103"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":"M","msub":{"mi":["p","avg"]}},"mo":"=","mrow":{"mrow":[{"mfrac":{"mn":["4","3"]},"mo":["\u2062","\u2062"],"msup":{"mrow":{"mo":["(",")"],"mfrac":{"msub":{"mi":["D","avg"]},"mn":"2"}},"mn":"3"},"msub":{"mi":"\u03c1","mrow":{"msub":[{"mi":"Al","mn":"2"},{"mi":"O","mn":"3"}],"mo":"\u2062"}}},{"mn":"6.03","mo":"\u00b7","mrow":{"msup":{"mn":"10","mrow":{"mo":"-","mn":"14"}},"mo":"."}}],"mo":"="}}},{"mrow":{"mo":["(",")"],"mn":"7"}}]}}}},"br":{},"sub":["2","3 ","parts "]},{"@attributes":{"id":"p-0105","num":"0104"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":["N","parts"]},"mo":"=","mrow":{"mfrac":{"msub":[{"mover":{"mi":"m","mo":"."},"mrow":{"msub":[{"mi":"Al","mn":"2"},{"mi":"O","mn":"3"}],"mo":"\u2062"}},{"mi":"M","msub":{"mi":["p","avg"]}}]},"mo":"=","mrow":{"mfrac":{"mrow":[{"mn":"8.3","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":["g","s"],"mo":"\/"}},{"mrow":[{"mn":"6.03","mo":"\u00b7","msup":{"mn":"10","mrow":{"mo":"-","mn":"14"}}},{"mi":["kg","part"],"mo":"\/"}],"mo":"\u2062"}]},"mo":"=","mrow":{"mrow":[{"mn":"138","mo":"\u00b7","msup":{"mn":["10","9"]}},{"mi":"parts","mo":"\/","mrow":{"mi":"s","mo":"."}}],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}}}}},{"mrow":{"mo":["(",")"],"mn":"8"}}]}}}}},"Because modeling such a large number of particles is unfeasible, a smaller representative number of particles are thus used for step . The number of particles in the model should be sufficiently large to ensure a good representation of the particle distribution but small enough to allow for reasonable computational times. A convergence study was conducted on a simple example case to determine both if the energy flux to the wall showed a converging behavior with increasing particles and to determine an approximate number of particles required. The results of this study can be seen in section XXIV and indicate that the number of particles should be in the range of hundreds to a few thousand to ensure good convergence of the solution. Larger computational domains may require more particles, but the simple study showed that the model can provide accurate convergence with a reasonable number of computational particles.","Particles are inserted in the CFD domain in one of two ways. The user may either specify the (i, j, k) bounds of a patch or specify which of the CFD boundary conditions is to be used as the flow inlet. The following lines from the input file control the particle insertion.",{"@attributes":{"id":"p-0108","num":"0107"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"!---Particle insertion info"},{"entry":"!Insert particles using a PATCH defined below or using BC file"},{"entry":"PATCH \u2003true"},{"entry":"!If \u2003(PATCH==FALSE), enter boundary condition for particle input"},{"entry":"PBC \u2002x\u22125"},{"entry":"!If \u2003(PATCH==TRUE), define particle insertion patch here"},{"entry":"! \u2003\u2003block# \u2002imin, \u2002imax, \u2002jmin, \u2002jmax, \u2002kmin, \u2002kmax \u2002(node-centered)"},{"entry":"PLOCS \u2003\u20031 \u2003\u20031 \u2003\u20031 \u2003\u20031 \u2003\u200310 \u2003\u20031 \u2003\u20032"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},"In response to determining the insertion patch, the code subdivides the patch into an orthogonal grid and the particles are inserted at the cell centers of this grid for step . The user specifies the number of particle insertion points desired along the two orthogonal dimensions of the patch. PISCES automatically sets the larger number of insertion points along the longer direction. The user sets the number of insertion points by the following lines:","!number of particles along major and minor axes","PNUMS 10 2","where PNUMS specifies particle distribution within a cell. For the example values above, the insertion region is divided into an orthogonal grid of dimensions 10\u00d72. The particles are inserted at the center of each of these cells. One particle is released for each particle mass group at each insertion point. For example, for five particle groups such that","NPGROUP 5 !number of particle groups","then five particles are released at each point for a total of one-hundred particles.","The particles may be inserted in equilibrium with the surrounding fluid medium or with a specified velocity and temperature in step . This option is controlled by the following lines:","!Equate particle props to local flow (true) or user input (false)","PEQUATE true","!Initial particle velocity vector (if PEQUATE==false)","PVINIT 10. 34. 0.","PTINIT 300.","where PEQUATE is set to \u201ctrue\u201d to equilibrate the particles to the surrounding flow and to \u201cfalse\u201d to initialize the particles to velocity PVINIT and temperature PTINIT.","XVI. Particle In-Cell Testing: In order to correctly predict the particle motion, the condition of the fluid surrounding the particle should be known. The fluid properties are determined by interpolation using the nodal properties of the cell in which the particle is located. Therefore, the identity of each cell should be determined for the particle at every time-step. In three dimensions, this involves several operations.","The fundamental technique to determine the particle's presence within a cell is to project a ray from the particle location to infinity and count the number of times the ray intersects a cell wall. An even number of intersections indicates the particle being outside the cell, while an odd number of crossings indicates the particle being inside.  illustrates this technique for a region  containing a two-dimensional quadrilateral cell  having vertical edges , . A first particle  passing alongside the cell  never crosses the cell's boundaries at either edge. A second particle  enters the first edge  and exits the second edge . Thus, both first and second particles are outside the cell . A third particle  enters the first edge  but does not cross the second edge , and hence remains inside the cell .","In PISCES, a line is projected from the particle position in the +y (lateral) direction a distance of 10*DXCHAR. Each face of the hexahedral cell must be tested to determine if the projected line intersects that face. Because the faces are triangulated (as shown in ), this means that twelve triangles must be checked for intersection with the projected line.  illustrates a technique for testing if the projected line intersects a triangle. A region  oriented in context of a compass-rose  contains a plane B defined by three points P, Pand Pthat define a triangle . A particle travels along a vector line starting at initial position denoted by point Pand ending at a final position denoted by point P.","The particle vector , from Pto P, must be tested to determine if it intersects or is parallel to plane B. In , vectors from the triangle point Pto the points Pand Pmay be defined as:\n\n\n\n\u2003\u2003(9)\n\nThe unit normal to the plane B may be computed as vector cross-products:\n",{"@attributes":{"id":"p-0124","num":"0123"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mover":{"mi":"V","mo":"\u21c0"},"mi":"N"},"mo":"=","mrow":{"mfrac":{"mrow":[{"msub":[{"mover":{"mi":"V","mo":"\u21c0"},"mn":"1"},{"mover":{"mi":"V","mo":"\u21c0"},"mn":"2"}],"mo":"\u00d7"},{"mo":["\uf603","\uf604"],"mrow":{"msub":[{"mover":{"mi":"V","mo":"\u21c0"},"mn":"1"},{"mover":{"mi":"V","mo":"\u21c0"},"mn":"2"}],"mo":"\u00d7"}}]},"mo":"."}}},{"mrow":{"mo":["(",")"],"mn":"10"}}]}}}},"br":{},"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00006","he":"3.13mm","wi":"1.78mm","file":"US07996195-20110809-P00005.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},"sub":"p "},{"@attributes":{"id":"p-0125","num":"0124"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"msub":{"mover":{"mi":"V","mo":"\u21c0"},"mi":"N"},"mo":"\u00b7","mfrac":{"msub":{"mover":{"mi":"V","mo":"\u21c0"},"mi":"p"},"mrow":{"mo":["\uf603","\uf604"],"msub":{"mover":{"mi":"V","mo":"\u21c0"},"mi":"p"}}}},"mo":"=","mn":"0."}},{"mrow":{"mo":["(",")"],"mn":"11"}}]}}}}},"If is parallel to plane B, the point Pmay either lie on or off the plane B. To determine if Pis on the plane, vector is defined as:\n\n.\u2003\u2003(12)\n\nIf is not perpendicular to then:\n",{"@attributes":{"id":"p-0127","num":"0126"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mrow":{"msub":{"mover":{"mi":"V","mo":"\u21c0"},"mi":"N"},"mo":"\u00b7","mfrac":{"msub":{"mover":{"mi":"V","mo":"\u21c0"},"mn":"0"},"mrow":{"mo":["\uf603","\uf604"],"msub":{"mover":{"mi":"V","mo":"\u21c0"},"mn":"0"}}}},"mo":"\u2260","mn":"0"},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"13"}}]}}}},"br":{},"img":[{"@attributes":{"id":"CUSTOM-CHARACTER-00012","he":"3.13mm","wi":"1.78mm","file":"US07996195-20110809-P00009.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00013","he":"3.13mm","wi":"1.78mm","file":"US07996195-20110809-P00010.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00014","he":"3.13mm","wi":"1.78mm","file":"US07996195-20110809-P00011.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00015","he":"3.13mm","wi":"1.78mm","file":"US07996195-20110809-P00012.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}],"sub":["p ","a ","p ","0 ","N ","a ","a ","I","a ","0","1 ","2"],"b":"1120"},"Another possible configuration shown in  occurs if line is not parallel to plane B, i.e., eqn. (11) does not equal zero. If the line and plane are not parallel, then there must be an intersection at point P. Again, the next step is to determine if the intersection point Plies within triangle . To determine the location of the intersection point P, the following parametric equation may be used:\n\n=+s.\u2003\u2003(14)\n\nBecause Pand Pboth lay on the plane, taking the dot product of eqn. (14) with the normal vector provides:\n\n\u00b7(+s)=0,\u2003\u2003(15)\n\nwhich may be rearranged to:\n",{"@attributes":{"id":"p-0129","num":"0128"},"maths":{"@attributes":{"id":"MATH-US-00009","num":"00009"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"s","mo":"=","mrow":{"mfrac":{"mrow":[{"mo":"-","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mover":{"mi":"V","mo":"\u21c0"},"mi":"N"},{"mover":{"mi":"V","mo":"\u21c0"},"mn":"0"}],"mo":"\u00b7"}}},{"mo":["(",")"],"mrow":{"msub":[{"mover":{"mi":"V","mo":"\u21c0"},"mi":"N"},{"mover":{"mi":"V","mo":"\u21c0"},"mi":"p"}],"mo":"\u00b7"}}]},"mo":"."}}},{"mrow":{"mo":["(",")"],"mn":"16"}}]}}}},"br":[{},{}],"in-line-formulae":[{},{}],"i":["P","=P","+s"],"sub":["I","a","p"],"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00023","he":"3.13mm","wi":"2.12mm","file":"US07996195-20110809-P00020.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}},"To determine whether intersection point Pis within the triangle  its position may be defined with the following equation:\n\n.\u2003\u2003(18)\n\nThen eqn. (18) may be solved for the variables sand s:\n",{"@attributes":{"id":"p-0131","num":"0130"},"maths":{"@attributes":{"id":"MATH-US-00010","num":"00010"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"msub":{"mi":"s","mn":"1"},"mo":"=","mfrac":{"mrow":[{"mrow":[{"mrow":[{"mo":["(",")"],"mrow":{"msub":[{"mover":{"mi":"V","mo":"\u21c0"},"mn":"1"},{"mover":{"mi":"V","mo":"\u21c0"},"mn":"2"}],"mo":"\u00b7"}},{"mo":["(",")"],"mrow":{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":"P","mn":"1"},{"mi":"P","mn":"0"}],"mo":"-"}},"mo":"\u00b7","msub":{"mover":{"mi":"V","mo":"\u21c0"},"mn":"2"}}}],"mo":"\u2062"},{"mrow":[{"mo":["(",")"],"mrow":{"msub":[{"mover":{"mi":"V","mo":"\u21c0"},"mn":"2"},{"mover":{"mi":"V","mo":"\u21c0"},"mn":"2"}],"mo":"\u00b7"}},{"mo":["(",")"],"mrow":{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":"P","mn":"1"},{"mi":"P","mn":"0"}],"mo":"-"}},"mo":"\u00b7","msub":{"mover":{"mi":"V","mo":"\u21c0"},"mn":"1"}}}],"mo":"\u2062"}],"mo":"-"},{"msup":{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mover":{"mi":"V","mo":"\u21c0"},"mn":"1"},{"mover":{"mi":"V","mo":"\u21c0"},"mn":"2"}],"mo":"\u00b7"}},"mn":"2"},"mo":"-","mrow":{"mrow":[{"mo":["(",")"],"mrow":{"msub":[{"mover":{"mi":"V","mo":"\u21c0"},"mn":"1"},{"mover":{"mi":"V","mo":"\u21c0"},"mn":"1"}],"mo":"\u00b7"}},{"mo":["(",")"],"mrow":{"msub":[{"mover":{"mi":"V","mo":"\u21c0"},"mn":"2"},{"mover":{"mi":"V","mo":"\u21c0"},"mn":"2"}],"mo":"\u00b7"}}],"mo":"\u2062"}}]}}},{"mrow":{"mo":["(",")"],"mn":"19"}}]},{"mtd":[{"mrow":{"mrow":{"msub":{"mi":"s","mn":"2"},"mo":"=","mfrac":{"mrow":[{"mrow":[{"mrow":[{"mo":["(",")"],"mrow":{"msub":[{"mover":{"mi":"V","mo":"\u21c0"},"mn":"1"},{"mover":{"mi":"V","mo":"\u21c0"},"mn":"2"}],"mo":"\u00b7"}},{"mo":["(",")"],"mrow":{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":"P","mn":"1"},{"mi":"P","mn":"0"}],"mo":"-"}},"mo":"\u00b7","msub":{"mover":{"mi":"V","mo":"\u21c0"},"mn":"1"}}}],"mo":"\u2062"},{"mrow":[{"mo":["(",")"],"mrow":{"msub":[{"mover":{"mi":"V","mo":"\u21c0"},"mn":"1"},{"mover":{"mi":"V","mo":"\u21c0"},"mn":"1"}],"mo":"\u00b7"}},{"mo":["(",")"],"mrow":{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":"P","mn":"1"},{"mi":"P","mn":"0"}],"mo":"-"}},"mo":"\u00b7","msub":{"mover":{"mi":"V","mo":"\u21c0"},"mn":"2"}}}],"mo":"\u2062"}],"mo":"-"},{"msup":{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mover":{"mi":"V","mo":"\u21c0"},"mn":"1"},{"mover":{"mi":"V","mo":"\u21c0"},"mn":"2"}],"mo":"\u00b7"}},"mn":"2"},"mo":"-","mrow":{"mrow":[{"mo":["(",")"],"mrow":{"msub":[{"mover":{"mi":"V","mo":"\u21c0"},"mn":"1"},{"mover":{"mi":"V","mo":"\u21c0"},"mn":"1"}],"mo":"\u00b7"}},{"mo":["(",")"],"mrow":{"msub":[{"mover":{"mi":"V","mo":"\u21c0"},"mn":"2"},{"mover":{"mi":"V","mo":"\u21c0"},"mn":"2"}],"mo":"\u00b7"}}],"mo":"\u2062"}}]}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"20"}}]}]}}},"br":{},"sub":["1","2","I ","0","1 ","2"],"b":"1120","figref":"FIGS. 6 and 7"},"XVII. Particle Drag: The drag force acting on a particle is determined at step  at each integration step to compute the particle acceleration. The drag coefficient is computed using a relation developed and extensively used in analyses of solid propellant rocket exhaust. See Crowe et al. The drag coefficient Ccan be computed from the relation:",{"@attributes":{"id":"p-0133","num":"0132"},"maths":{"@attributes":{"id":"MATH-US-00011","num":"00011"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"msub":{"mi":["C","D"]},"mo":"=","mrow":{"mn":"2","mo":["+","+"],"mrow":[{"mrow":[{"mo":["(",")"],"mrow":{"msub":{"mi":"C","mrow":{"mi":"D","mo":",","mn":"0"}},"mo":"-","mn":"2"}},{"mi":"exp","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mo":"-","mn":"3.07"},{"mo":["(",")"],"msub":{"mi":["Re","r"]}},{"msub":[{"mi":["M","r"]},{"mi":["Re","r"]}],"mo":"\/"}],"mo":["\u2062","\u2062","\u2062"],"msqrt":{"mrow":{"mi":["\u03b3","g"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}}}],"mo":"\u2062"},{"mfrac":{"mrow":[{"mi":"h","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["M","r"]}}},{"msqrt":{"mi":"\u03b3"},"mo":"\u2062","msub":{"mi":["M","r"]}}]},"mo":"\u2062","mrow":{"mi":"exp","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mo":"-","mfrac":{"mi":"Re","mrow":{"mn":"2","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["M","r"]}}}}}}}]}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"21"}}]}}}},"br":{},"sub":["r ","r ","r","r"]},{"@attributes":{"id":"p-0134","num":"0133"},"maths":{"@attributes":{"id":"MATH-US-00012","num":"00012"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":{"mi":"g","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["Re","r"]}}},"mo":"=","mfrac":{"mrow":[{"mn":"1","mo":"+","mrow":{"msub":{"mi":["Re","r"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"12.278","mo":"+","mrow":{"mn":"0.54","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"msub":{"mi":["Re","r"]}}}}}},{"mn":"1","mo":"+","mrow":{"mn":"11.278","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"msub":{"mi":["Re","r"]}}}]}}},{"mrow":{"mo":["(",")"],"mn":"22"}}]},{"mtd":[{"mrow":{"mrow":{"mrow":[{"mi":"h","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["M","r"]}}},{"mfrac":{"mn":"5.6","mrow":{"mn":"1","mo":"+","msub":{"mi":["M","r"]}}},"mo":"+","mrow":{"mn":"1.7","mo":"\u2062","msqrt":{"mfrac":{"msub":[{"mi":["T","p"]},{"mi":["T","g"]}]}}}}],"mo":"="},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"23"}}]}]}}},"br":{},"sub":["p ","g ","D,0 "]},{"@attributes":{"id":"p-0135","num":"0134"},"maths":{"@attributes":{"id":"MATH-US-00013","num":"00013"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":"C","mrow":{"mi":"D","mo":",","mn":"0"}},"mo":"=","mfrac":{"mrow":{"mn":"24","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"f"},"msub":{"mi":["Re","r"]}}}},{"mrow":{"mo":["(",")"],"mn":"24"}}]}}}},"br":[{},{}],"in-line-formulae":[{},{}],"i":["Re","Re"],"sub":["r","r"],"sup":["4","\u22121.16","\u22121"]},"Upon computing Cusing eqn. (21), the drag force of the particle in the gas medium may be found from:",{"@attributes":{"id":"p-0137","num":"0136"},"maths":{"@attributes":{"id":"MATH-US-00014","num":"00014"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"msub":{"mi":["F","Drag"]},"mo":"=","mrow":{"mfrac":[{"mn":["1","2"]},{"msubsup":{"mi":["D","p"],"mn":"2"},"mn":"4"}],"mo":["\u2062","\u2062","\u2062","\u2062"],"msub":{"mi":["\u03c1","g"]},"mi":"\u03c0","mrow":{"mo":["\uf603","\uf604"],"mrow":{"mo":["\uf603","\uf604"],"mrow":{"msub":[{"mover":{"mi":"u","mo":"\u21c0"},"mi":"g"},{"mover":{"mi":"u","mo":"\u21c0"},"mi":"p"}],"mo":"-"}}}}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"26"}}]}}}},"br":{},"sub":["g ","p ","g ","p "],"img":[{"@attributes":{"id":"CUSTOM-CHARACTER-00026","he":"2.79mm","wi":"1.78mm","file":"US07996195-20110809-P00023.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00027","he":"2.79mm","wi":"1.78mm","file":"US07996195-20110809-P00023.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}]},"XVIII. Particle Gas Heat Transfer: The particle heat flux to the walls depends upon the temperature of the particles colliding therewith. Hence, the model computes transient particle temperature. A heat transfer model within PISCES computes the transient heat transfer between the gas and the particle. Because PISCES uses a pre-computed CFD solution for the exhaust gas flow, the heat transfer to the particles is only one-way coupled (i.e., the gas flow is unaffected by the heat gained or lost to the particles). As a simplifying assumption, each particle can be treated as a lumped mass with a uniform temperature throughout.","The particles are further assumed to be smooth spheres. Although this assumption might not be strictly valid in all instances, the level of accuracy expected from the code was deemed not to justify the complexity of computing particle shapes and their corresponding heat transfer coefficients. The first step in computing the heat transfer is to determine the fluid properties surrounding the particle. This is accomplished using a three-dimensional linear interpolation scheme using the eight nodes surrounding the particle's current cell.","The Nusselt number Nu is computed using the following relation for flow over a sphere from Crowe et al.:\n\n2+0.6=2=0.6\u2003\u2003(27)\n\nwhere Re is the local Reynolds number and Pr is the Prandtl number. Nusselt number represents a non-dimensional measure of the convection coefficient in step . Biot number Bi can be computed for thermal conductivity of the gas medium \u03ba=0.083 W\/mK (air at \u02dc1400K in watts-per-meter-Kelvin) using:\n",{"@attributes":{"id":"p-0141","num":"0140"},"maths":{"@attributes":{"id":"MATH-US-00015","num":"00015"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mi":"Bi","mo":"=","mrow":{"mfrac":[{"mrow":{"mi":"Nu","mo":"\u00b7","msub":{"mi":["\u03ba","g"]}},"msub":{"mi":["\u03ba","p"]}},{"mrow":{"mi":"Nu","mo":["\u00b7","\u00b7"],"mn":"83","msup":{"mn":"10","mrow":{"mo":"-","mn":"3"}}},"mn":"18"}],"mo":"="}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"28"}}]}}}},"br":{},"sub":"p"},"The heat transfer between the particle and gas is computed as a change in enthalpy. Because the particles may change phase throughout the simulation, the computation tracks particle enthalpy h instead of temperature to avoid temperature discontinuities encountered during phase changes. Using Nusselt number Nu to provide the convection magnitude, the enthalpy rate of change may be computed using:",{"@attributes":{"id":"p-0143","num":"0142"},"maths":{"@attributes":{"id":"MATH-US-00016","num":"00016"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mfrac":{"mrow":[{"mo":"\u2146","mi":"h"},{"mo":"\u2146","mi":"t"}]},"mo":"=","mrow":{"mfrac":{"mrow":[{"mn":"12","mo":["\u2062","\u2062"],"msub":{"mi":["\u03ba","g"]},"mi":"Nu"},{"mn":"2","mo":["\u2062","\u2062"],"msub":{"mi":["\u03c1","p"]},"msup":{"mi":"D","mn":"2"}}]},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["T","g"]},{"mi":["T","p"]}],"mo":"-"}}}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"29"}}]}}}},"br":{},"sub":["g ","p ","g ","p "]},"To determine the particle temperature versus enthalpy, material property curves are used. These curves were adopted from the material information in the CFD code CRAFT for AlO. See CRAFT-Tech, , Version 2.06, 2006. One material property curve can be used for each phase. A routine within PISCES computes the specific enthalpy and specific heat values for the particle at a given temperature. A separate routine uses a bisection interpolation method with the material property curves to determine the particle temperature corresponding to a given enthalpy.","XIX. Particle Wall Interactions: PISCES treats walls in the computational domain as either slip or no-slip boundaries. Slip boundaries include slip walls and symmetry boundaries. Particle impacts to slip walls are treated as perfect reflections with no energy transfer. Particle impacts to no-slip walls transfer a finite amount of energy between the wall and the particle. For perfectly reflecting impacts, the unit vector normal to the cell face of the impact {circumflex over (V)}can be determined from the computational grid geometry. The particle velocity normal to the cell face is computed by the dot product:\n\n=\u2225,\u2003\u2003(30)\n\nwhere is the original particle velocity and the double-bars denote vector magnitude. Using the particle normal velocity, the new reflected velocity is:\n\n=\u22122.\u2003\u2003(31)\n","Impacts from no-slip boundaries in step  involve calculation of the energy transferred between the particle and the wall. Energy transfers due to both the kinetic energy of the impact and heat conduction between the wall and particle during the contact time. The treatment of the impact derives from common impact models and the impact dynamics are controlled by the friction factor C or FFAC, and the coefficient of restitution Cor CRES, set by the user in the main input file. See Crowe et al. for a resource on impact models. The appropriate lines for these variables in the input file are (where the values are approximate values used for general simulations):","!---Particle\/Wall Information","FFAC 0.2 wall friction factor","CRES 0.8 coefficient of restitution","where the friction and restitution values define interaction between the particle and the wall.","The particle velocity may be decomposed into its components that are normal and tangential to the wall. The normal velocity after the impact is controlled by the coefficient of restitution and may be found simply from:\n\n\u02dc\u2003\u2003(32)\n\nwhere is the component of the particle velocity vector normal to the wall and the subscripts \u201c1\u201d and \u201c2\u201d refer to the states before and after the wall impact, respectively.\n","The tangential velocity component is affected by friction during the impact. To determine the frictional effects, two ratios are computed as:",{"@attributes":{"id":"p-0152","num":"0151"},"maths":{"@attributes":{"id":"MATH-US-00017","num":"00017"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"msub":{"mi":"R","mn":"1"},"mo":"=","mfrac":{"mn":"2","mrow":{"mn":"7","mo":"\u00b7","mrow":{"msub":{"mi":["C","f"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"+","msub":{"mi":["C","r"]}}}}}}}},{"mrow":{"mo":["(",")"],"mn":"33"}}]},{"mtd":[{"mrow":{"mrow":{"msub":{"mi":"R","mn":"2"},"mo":"=","mfrac":{"mrow":[{"mo":["\uf603","\uf604"],"mrow":{"mo":["\uf603","\uf604"],"msub":{"mover":{"mi":"u","mo":"\u21c0"},"mrow":{"mi":["p","n"],"mo":[",",","],"mn":"1"}}}},{"mo":["\uf603","\uf604"],"mrow":{"mo":["\uf603","\uf604"],"msub":{"mover":{"mi":"u","mo":"\u21c0"},"mrow":{"mi":"p","mo":",","mn":"1"}}}}]}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"34"}}]}]}}},"br":{},"sub":["2 ","1"]},{"@attributes":{"id":"p-0153","num":"0152"},"maths":{"@attributes":{"id":"MATH-US-00018","num":"00018"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mover":{"mi":"u","mo":"\u21c0"},"mrow":{"mi":["p","t"],"mo":[",",","],"mn":"2"}},"mo":"=","mrow":{"mfrac":{"mn":["5","7"]},"mo":"\u2062","mrow":{"msub":{"mover":{"mi":"u","mo":"\u21c0"},"mrow":{"mi":["p","t"],"mo":[",",","],"mn":"1"}},"mo":"."}}}},{"mrow":{"mo":["(",")"],"mn":"35"}}]}}}},"br":{}},{"@attributes":{"id":"p-0154","num":"0153"},"maths":{"@attributes":{"id":"MATH-US-00019","num":"00019"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mover":{"mi":"u","mo":"\u21c0"},"mrow":{"mi":["p","t"],"mo":[",",","],"mn":"2"}},"mo":"=","mrow":{"mrow":[{"mo":["(",")"],"mrow":{"mrow":[{"mo":["\uf603","\uf604"],"mrow":{"mo":["\uf603","\uf604"],"msub":{"mover":{"mi":"u","mo":"\u21c0"},"mrow":{"mi":["p","t"],"mo":[",",","],"mn":"1"}}}},{"mrow":[{"msub":{"mi":["C","f"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"+","msub":{"mi":["C","r"]}}}},{"mo":["\uf603","\uf604"],"mrow":{"mo":["\uf603","\uf604"],"msub":{"mover":{"mi":"u","mo":"\u21c0"},"mrow":{"mi":["p","n"],"mo":[",",","],"mn":"1"}}}}],"mo":"\u2062"}],"mo":"-"}},{"mfrac":{"msub":{"mover":{"mi":"u","mo":"\u21c0"},"mrow":{"mi":["p","t"],"mo":[",",","],"mn":"1"}},"mrow":{"mo":["\uf603","\uf604"],"mrow":{"mo":["\uf603","\uf604"],"msub":{"mover":{"mi":"u","mo":"\u21c0"},"mrow":{"mi":["p","t"],"mo":[",",","],"mn":"1"}}}}},"mo":"."}],"mo":"\u2062"}}},{"mrow":{"mo":["(",")"],"mn":"36"}}]}}}},"br":{}},{"@attributes":{"id":"p-0155","num":"0154"},"maths":{"@attributes":{"id":"MATH-US-00020","num":"00020"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":["\u0394","ke"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mfrac":{"mn":["1","2"]},"mo":"\u2062","mrow":{"mrow":{"mo":["(",")"],"mrow":{"mrow":[{"msub":[{"mover":{"mi":"u","mo":"\u21c0"},"mrow":{"mi":"p","mo":",","mn":"1"}},{"mover":{"mi":"u","mo":"\u21c0"},"mrow":{"mi":"p","mo":",","mn":"1"}}],"mo":"\u00b7"},{"msub":[{"mover":{"mi":"u","mo":"\u21c0"},"mrow":{"mi":"p","mo":",","mn":"2"}},{"mover":{"mi":"u","mo":"\u21c0"},"mrow":{"mi":"p","mo":",","mn":"2"}}],"mo":"\u2062"}],"mo":"-"}},"mo":"."}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"37"}}]}}}},"br":[{},{},{}],"sub":["\u0192","p ","p,2","p,1","\u0192"],"in-line-formulae":[{},{}],"i":["h","=h","+C","\u00b7\u0394ke,"]},"The remainder of the energy can be added to the total energy flux to the wall at that cell. The overall total energy flux to a given cell wall face from particle impact energy must be summed over all the impacts in the simulation and may be written as:",{"@attributes":{"id":"p-0157","num":"0156"},"maths":{"@attributes":{"id":"MATH-US-00021","num":"00021"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"msub":{"mi":["E","w"]},"mo":"=","mrow":{"munder":{"mo":"\u2211","mi":"i"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msub":{"mrow":{"mo":["(",")"],"mrow":{"mi":["\u0394","ke"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},"mi":"i"},"mo":"\u2062","mrow":{"msub":{"mi":"m","mrow":{"mi":["p","i"],"mo":","}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","msub":{"mi":["C","f"]}}}}}}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"39"}}]}}}},"br":{},"sub":"p,i "},"XX. Heat Conduction: Conductive heat transfer between the particle and the wall is modeled as the transfer of heat between a finite body and a semi-infinite plate. See F. P. Incropera and D. P. DeWitt, 3\/e, John Wiley & Sons Inc., 1990.  illustrates the geometry of the heat transfer model. There are several assumptions used to develop this model. The assumptions are:","(1) The particle temperature is uniform (the particle's thermal time constant is very small and hence negligible compared to the wall's);","(2) The wall is a semi-infinite solid with a uniform temperature equal to the wall material's fail temperature; and","(3) The particle-wall impact may be treated as an impact between two spheres with the radius of one sphere much larger than the radius of the second.","In particular,  shows a cross-sectional geometry  of an idealized spherical particle  physically contacting a solid wall . The particle  can be characterized by radius R. The wall  extends linearly in the x-direction of thickness starting from the outer surface at x=0. The effective region of conduction can be characterized by contact area Ahaving a corresponding contact temperature T, which in the absence of an independent thermal source would provide a value between the bulk temperature of the particle  and the temperature of the wall surface .","The time over which conduction can take place is the time the particle  and wall  are in contact. The contact time tmay be determined from a treatment of the impact between two solid spheres. See S. P. Timoshenko and J. N. Goodier, 3\/e, McGraw Hill, 1934, p. 420. If one sphere has an infinite radius, the equations provide a first-order estimate of a sphere-wall impact. This contact time can be expressed as:",{"@attributes":{"id":"p-0164","num":"0163"},"maths":{"@attributes":{"id":"MATH-US-00022","num":"00022"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"msub":{"mi":["t","c"]},"mo":"=","mrow":{"mrow":[{"mfrac":{"mn":"2.94","msub":{"mi":["u","i"]}},"mo":"\u2062","msup":{"mrow":[{"mo":["(",")"],"mrow":{"mfrac":[{"mn":["5","4"]},{"mrow":{"msub":{"mi":["m","p"]},"mo":"\u2062","msubsup":{"mi":["u","i"],"mn":"2"}},"mi":"n"}],"mo":"\u2062"}},{"mn":["2","5"],"mo":"\/"}]}},{"mn":"3.21","mo":"\u2062","mroot":{"mrow":{"msubsup":[{"mi":["m","p"],"mn":"2"},{"mi":["u","i"],"mrow":{"mo":"-","mn":"3"}}],"mo":["\u2062","\u2062"],"msup":{"mi":"n","mrow":{"mo":"-","mn":"2"}}},"mn":"5"}}],"mo":"="}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"40"}}]}}}},"br":{},"sub":["i ","p "]},{"@attributes":{"id":"p-0165","num":"0164"},"maths":{"@attributes":{"id":"MATH-US-00023","num":"00023"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mi":"n","mo":"=","mrow":{"mfrac":[{"mn":"4","mrow":{"mn":"3","mo":"\u2062","mi":"\u03c0"}},{"msubsup":{"mi":["R","p"],"mrow":{"mn":["1","2"],"mo":"\/"}},"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["k","p"]},{"mi":["k","w"]}],"mo":"+"}}}],"mo":"\u2062"}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"41"}}]}}}},"br":{},"sub":["p ","p ","w "]},{"@attributes":{"id":"p-0166","num":"0165"},"maths":{"@attributes":{"id":"MATH-US-00024","num":"00024"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mi":"k","mo":"=","mfrac":{"mrow":[{"mn":"1","mo":"-","mi":"v"},{"mi":["\u03c0","E"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}]}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"42"}}]}}}},"br":{}},"The contact area Ais defined as the maximum contact area between the particle and wall during the impact. The contact area actually varies from zero to the maximum and back to zero, but for this approximation, the maximum value is assumed for the entire contact interval. To determine the maximum contact area, the maximum surface deflection is found from:",{"@attributes":{"id":"p-0168","num":"0167"},"maths":{"@attributes":{"id":"MATH-US-00025","num":"00025"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"msub":{"mi":["d","max"]},"mo":"=","mrow":{"msup":{"mrow":[{"mo":["(",")"],"mrow":{"mfrac":[{"mn":["5","4"]},{"mrow":{"msub":{"mi":["m","p"]},"mo":"\u2062","msubsup":{"mi":["u","i"],"mn":"2"}},"mi":"n"}],"mo":"\u2062"}},{"mn":["2","5"],"mo":"\/"}]},"mo":"=","mrow":{"mn":"1.09","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mroot":{"mrow":{"msubsup":[{"mi":["m","p"],"mn":"2"},{"mi":["u","i"],"mn":"4"}],"mo":["\u2062","\u2062"],"msup":{"mi":"n","mrow":{"mo":"-","mn":"2"}}},"mn":"5"}}}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"43"}}]}}}},"br":{}},{"@attributes":{"id":"p-0169","num":"0168"},"maths":{"@attributes":{"id":"MATH-US-00026","num":"00026"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":["P","max"]},"mo":"=","mrow":{"mrow":[{"mfrac":[{"mn":"4","mrow":{"mn":"3","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"\u03c0"}},{"mn":"1","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["k","p"]},{"mi":["k","w"]}],"mo":"+"}}}],"mo":["\u2062","\u2062"],"msup":{"mrow":[{"mo":["(",")"],"mrow":{"msubsup":{"mi":["d","max"],"mn":"3"},"mo":"\u2062","msub":{"mi":["R","p"]}}},{"mn":["1","2"],"mo":"\/"}]}},{"mfrac":{"mn":"4","mrow":{"mn":"3","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"\u03c0"}},"mo":"\u2062","mrow":{"mfrac":{"msqrt":{"mrow":{"msubsup":{"mi":["d","max"],"mn":"3"},"mo":"\u2062","msub":{"mi":["R","p"]}}},"mrow":{"msub":[{"mi":["k","p"]},{"mi":["k","w"]}],"mo":"+"}},"mo":"."}}],"mo":"="}}},{"mrow":{"mo":["(",")"],"mn":"44"}}]}}}},"br":{},"sub":"max "},{"@attributes":{"id":"p-0170","num":"0169"},"maths":{"@attributes":{"id":"MATH-US-00027","num":"00027"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":"r","mrow":{"mi":["c","max"],"mo":","}},"mo":"=","mroot":{"mrow":{"mfrac":{"mrow":{"mn":"3","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mi":"\u03c0"},"mn":"4"},"mo":["\u2062","\u2062"],"mrow":{"msub":{"mi":["P","max"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["k","p"]},{"mi":["k","w"]}],"mo":"+"}}},"msub":{"mi":["R","p"]}},"mn":"3"}}},{"mrow":{"mo":["(",")"],"mn":"45"}}]}}}},"br":{},"sub":["c","c,max"],"sup":"2"},"Solving for the amount of heat transferred to the wall and the subsequent particle temperature change is an iterative process. The total contact time tfrom eqn. (40) may be divided into ten substeps in step  to maintain the stability and accuracy of the heat transfer calculation. A conduction time-step can be in this example defined as:",{"@attributes":{"id":"p-0172","num":"0171"},"maths":{"@attributes":{"id":"MATH-US-00028","num":"00028"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"msub":{"mi":"dt","mrow":{"mi":["c","step"],"mo":","}},"mo":"=","mrow":{"mfrac":{"msub":{"mi":["t","c"]},"mn":"10"},"mo":"=","mrow":{"mn":"0.321","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mroot":{"mrow":{"msubsup":[{"mi":["m","p"],"mn":"2"},{"mi":["u","i"],"mrow":{"mo":"-","mn":"3"}}],"mo":["\u2062","\u2062"],"msup":{"mi":"n","mrow":{"mo":"-","mn":"2"}}},"mn":"5"}}}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"46"}}]}}}},"br":{},"sub":"c,step "},"The contact temperature Tmay be computed using:",{"@attributes":{"id":"p-0174","num":"0173"},"maths":{"@attributes":{"id":"MATH-US-00029","num":"00029"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"msub":{"mi":["T","c"]},"mo":"=","mrow":{"mfrac":[{"mrow":[{"mrow":[{"msubsup":{"mrow":[{"mo":["(",")"],"mrow":{"mi":["\u03ba","\u03c1","c"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}},{"mn":["1","2"],"mo":"\/"}],"mi":"p"},"mo":"\u2062","msub":{"mi":["T","p"]}},{"msubsup":{"mrow":[{"mo":["(",")"],"mrow":{"mi":["\u03ba","\u03c1","c"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}},{"mn":["1","2"],"mo":"\/"}],"mi":"w"},"mo":"\u2062","msub":{"mi":["T","w"]}}],"mo":"+"},{"msubsup":[{"mrow":[{"mo":["(",")"],"mrow":{"mi":["\u03ba","\u03c1","c"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}},{"mn":["1","2"],"mo":"\/"}],"mi":"p"},{"mrow":[{"mo":["(",")"],"mrow":{"mi":["\u03ba","\u03c1","c"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}},{"mn":["1","2"],"mo":"\/"}],"mi":"w"}],"mo":"+"}]},{"mrow":[{"mrow":[{"msub":{"mi":["T","p"]},"mo":"\u2062","msqrt":{"msub":{"mrow":{"mo":["(",")"],"mrow":{"mi":["\u03ba","\u03c1","c"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}},"mi":"p"}}},{"msub":{"mi":["T","w"]},"mo":"\u2062","msqrt":{"msub":{"mrow":{"mo":["(",")"],"mrow":{"mi":["\u03ba","\u03c1","c"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}},"mi":"w"}}}],"mo":"+"},{"msqrt":[{"msub":{"mrow":{"mo":["(",")"],"mrow":{"mi":["\u03ba","\u03c1","c"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}},"mi":"p"}},{"msub":{"mrow":{"mo":["(",")"],"mrow":{"mi":["\u03ba","\u03c1","c"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}},"mi":"w"}}],"mo":"+"}]}],"mo":"="}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"47"}}]}}}},"br":{},"sub":["c ","w"],"b":"1220"},{"@attributes":{"id":"p-0175","num":"0174"},"maths":{"@attributes":{"id":"MATH-US-00030","num":"00030"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msubsup":{"mi":["q","w","n"]},"mo":"=","mrow":{"mrow":[{"mrow":{"mrow":{"mo":"-","msub":{"mi":["\u03ba","w"]}},"mo":"\u2062","mfrac":{"mrow":[{"mo":"\u2202","msub":{"mi":["T","w"]}},{"mo":"\u2202","mi":"x"}]}},"mo":"\u2062","msub":{"mo":"\u2758","mrow":{"mi":"x","mo":"=","mn":"0"}}},{"mfrac":{"mrow":{"msub":{"mi":["\u03ba","w"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["T","c"]},{"mi":"T","mrow":{"mi":"w","mo":",","mn":"0"}}],"mo":"-"}}},"msqrt":{"mrow":{"mi":"\u03c0","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"msub":{"mi":["\u03b1","w"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"t","mo":"+","mrow":{"msub":{"mi":"dt","mrow":{"mi":["c","step"],"mo":","}},"mo":"\/","mn":"2"}}}}}}},"mo":"."}],"mo":"="}}},{"mrow":{"mo":["(",")"],"mn":"48"}}]}}}},"br":{},"sub":["w,0 ","w"]},{"@attributes":{"id":"p-0176","num":"0175"},"maths":{"@attributes":{"id":"MATH-US-00031","num":"00031"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"\u03b1","mo":"=","mrow":{"mfrac":{"mi":"\u03ba","mrow":{"mi":["\u03c1","c"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},"mo":"."}}},{"mrow":{"mo":["(",")"],"mn":"49"}}]}}}},"br":[{},{},{}],"in-line-formulae":[{},{}],"i":["E","=q","\u2033A","dt"],"sub":["w","w","c","c,step"]},{"@attributes":{"id":"p-0177","num":"0176"},"maths":{"@attributes":{"id":"MATH-US-00032","num":"00032"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mi":"d","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["h","p"]}},{"mo":"-","mfrac":{"msub":[{"mi":["E","w"]},{"mi":["m","p"]}]}}],"mo":"="}}},{"mtd":{"mrow":{"mrow":{"mo":"=","mrow":{"mrow":[{"mo":"-","msqrt":{"mrow":{"mi":["\u03c1","c","\u03ba","\u03c0"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}}},{"msubsup":{"mi":"r","mrow":{"mi":["c","max"],"mo":","},"mn":"2"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["T","c"]},{"mi":"T","mrow":{"mi":"w","mo":",","mn":"0"}}],"mo":"-"}}}],"mo":["\u2062","\u2062"],"mfrac":{"mrow":[{"mrow":{"mo":"\u2146","msub":{"mi":"t","mrow":{"mi":["c","step"],"mo":","}}},"mo":"\u2062","msqrt":{"mrow":{"mi":"t","mo":"+","mrow":{"mrow":{"mo":"\u2146","msub":{"mi":"t","mrow":{"mi":["c","step"],"mo":","}}},"mo":"\/","mn":"2"}}}},{"msub":{"mi":["m","p"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"t","mo":"+","mrow":{"mrow":{"mo":"\u2146","msub":{"mi":"t","mrow":{"mi":["c","step"],"mo":","}}},"mo":"\/","mn":"2"}}}}]}}},"mo":","}}}]}},{"mrow":{"mo":["(",")"],"mn":"51"}}]}}}},"br":{},"sub":["p ","w "],"b":["230","170"]},{"@attributes":{"id":"p-0178","num":"0177"},"maths":{"@attributes":{"id":"MATH-US-00033","num":"00033"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"msub":{"mi":"E","mrow":{"mi":["tot","c"],"mo":","}},"mo":"=","mrow":{"munderover":{"mo":"\u2211","mi":"i","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mo":["(",")"],"mrow":{"munderover":{"mo":"\u2211","mi":"j","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":"E","mrow":{"mi":["w","i","j"],"mo":[",",","]}}}}}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"52"}}]}}}},"br":{}},"XXI. Integrating Forward in Time: A particle's state variables are integrated in time in several steps. CRAFT employs implicit iteration schemes with finite-volume discretization. First, the fluid properties at the particle location are determined from the CFD solution. The fluid properties are interpolated from the eight nodes that defined the particle's current cell using a linear interpolation scheme applied to three dimensions. With the fluid properties known, the current relative Reynolds number, drag force, heat transfer coefficient (from Nusselt number), and acceleration (from velocity) can be computed.","A first-order integration may be used to compute the particle's new location and temperature. The time-step size for this initial integration is computed to ensure the particle does not travel multiple cells in a single time-step. The step size is written as:",{"@attributes":{"id":"p-0181","num":"0180"},"maths":{"@attributes":{"id":"MATH-US-00034","num":"00034"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mrow":{"mo":"\u2146","mi":"t"},"mo":"=","mfrac":{"mrow":[{"mo":"\u2146","msub":{"mi":["x","char"]}},{"mo":["\uf605","\uf606"],"msub":{"mover":{"mi":"V","mo":"\u21c0"},"mrow":{"mi":"p","mo":",","mn":"1"}}}]}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"53"}}]}}}},"br":{},"sub":["char ","p,1"],"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00038","he":"3.13mm","wi":"2.12mm","file":"US07996195-20110809-P00028.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}},"The first-order time integration provides a particle position at the end of the step. The code then determines at step  whether the particle remains in the original cell. If the particle has not left the cell at step , that time-step is concluded at step . The new values for particle position, velocity and enthalpy, and temperature may be saved as the current values and the program continues to the next time-step for that particle. If the particle is no longer within the original cell at step , the code determines through which cell wall the particle passed and the coordinates of the point where the particle intersected the wall at step . A linear interpolation may determine the time required for the particle to move from its original position to the intersection point at step . The first-order time integration is then used to integrate from the particle's original state to the wall intersection at step . The particle state variables are updated to the values at this temporary position at step .","The code then predicts whether the particle moves into a new cell or impact a wall at step . If the cell face corresponds to a wall boundary condition, the wall impact effects are computed at step  to determine a new particle state as described in section XIX. If the particle is moving into a new cell, the code determines the correct block and cell at step . After determining the new cell or computing the wall impact, the time integration continues. A new time-step size dtmay be computed at step  as the time difference between the initial time-step size dt and the time to the cell face intersection dt:\n\n.\u2003\u2003(54)\n","The time integration scheme is repeated to step  to predict the particle location at the end of the overall time-step dt. The scheme may be repeated as needed to compute many wall impacts or cell-to-cell movements. Once the total integrated time of all the iterations equals the original overall time-step dt, the time integration for that particle is considered complete for that step . The particle state variables are updated to the final values at step .","The time integrations continue for each particle until satisfaction of at least one of three criteria: Integrations stop once the particle exits the domain through an outflow boundary condition. A particle's integration also stops if the total time of the simulation, set in the input file , is exceeded. Finally, if the particle's properties have converged to steady-state, the time integration halts for that particle.","XXII. Test for Overall Convergence: At the end of each overall time-step, the particle state variables are tested for overall convergence of the particle motion. A residual is computed as the l-norm of the difference between the state variables at the current and previous time-steps. The residual equation can be expressed as:",{"@attributes":{"id":"p-0187","num":"0186"},"maths":{"@attributes":{"id":"MATH-US-00035","num":"00035"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"msub":{"mi":["R","\u025b"]},"mo":"=","mrow":{"msup":{"mrow":[{"mo":["(",")"],"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mn":"3"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":"V","mrow":{"mi":["p","i"],"mo":","}},{"mi":"V","mrow":{"mi":["p","old","i"],"mo":[",",","]}}],"mo":"-"}},"mn":"2"}}},{"mn":["1","2"],"mo":"\/"}]},"mo":"=","msqrt":{"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"-","mn":"1"},"mn":"3"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msup":{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":"V","mrow":{"mi":["p","i"],"mo":","}},{"mi":"V","mrow":{"mi":["p","old","i"],"mo":[",",","]}}],"mo":"-"}},"mn":"2"}}}}},"mo":","}},{"mrow":{"mo":["(",")"],"mn":"55"}}]}}}},"br":{},"sup":"\u22125 "},"XXIII. Output: Data are output from PISCES in three files. All three files are written in Tecplot format for expedient post-processing using Tecplot\u00ae. The output data files include the original CFD grid and solution at step , the particle motion at step  and the wall flux impact data at step . The CFD grid and solution are written to a new file readable by Tecplot\u00ae so the user may view the CFD and particle solutions using the same post-processing program. The output  of the CFD solution is controlled in the main input file  with the following lines:","!Original steady-state CFD data","FCFD true tec_cfd.plt","where FCFD is a Tecplot flag.","Writing the CFD solution to the data file \u201ctec_cfd.plt\u201d may consume much time for large computational domains. Therefore, for a given problem, the user may want to write out the CFD solution only once. Afterwards, the user may change the \u201ctrue\u201d value to \u201cfalse\u201d for the FCFD term in the input file  to skip (the repeat of) the CFD solution. The particle-motion data are written to a separate file in Tecplot format. Each particle is written as a separate zone and may be plotted as individual points or lines showing the particle paths. The output  sets the file name in the main input file  with the following lines:","!Time dependent solution data","FOUTU final_out.plt","where FOUTU is an output plot flag.","The third output file contains the data from particle-wall impacts. All the boundaries defined as walls in the boundary condition file are output in this file. The computed data written to this file include the cell wall areas, the thermal energy imparted to the cell walls, the kinetic energy imparted to the cell walls, and the number of particle impacts on each cell wall. The output  sets file name in the main input file  with the following lines:","!Final wall data","FWALLS wall.plt","where FWALLS is an output wall impact flag.","XXIV. Example\u2014Sidewinder Erosion Test: A set of experiments was conducted to compare the erosion characteristics of several ablative materials. Samples of each ablative were mounted vertically on a flat plate. A Mk 36 Sidewinder rocket motor was mounted at a standoff distance from the plate and ignited with post-test measurements recording the extent of ablative erosion. This configuration was used as a test case in the development of PISCES.  shows an isometric view  of the three-dimensional domain  for a rocket nozzle impinging against a flat plate (e.g., a wall) oriented with respect to a three-dimensional compass-rose . The domain  possesses an axi-symmetric geometry characteristic of the grid extrusion . Free boundaries  represent surfaces substantially parallel to the freestream direction and thus experience minimal flow there-across. The solid boundaries are indicated by a rocket nozzle  and a flat plate . The mass injection from the rocket nozzle  that generates a plume begins at the throat .",{"@attributes":{"id":"p-0198","num":"0197"},"figref":["FIG. 14","FIG. 14"],"b":["1400","1410","1420","1430","1440","1450"]},"Particles were inserted into the flow at the nozzle throat, and the particle motion was integrated through the domain.  plots the particle tracks in elevation view . Each line represents the motion of a single computational particle, and the lines are colored to correspond to the particle temperature shown in legend  ranging from 200K to 3000K. The particles loose heat as they exit the nozzle  and move towards the wall . As the particles approach the wall  such as within the circle , their temperatures increase as they pass through a high-temperature region caused by a standing shock created by the gas impinging the wall .  shows an expanded view  of the particle paths in the region near the wall, indicated by the circle  to reveal particle impacts  and rebounds .","Each particle impact imparts a finite amount of kinetic energy to the cell face. The energy imparted by a single computational particle is multiplied by the number of real particles it represents. Once the motion of all the computational particles is computed, the total imparted energy can be summed for each cell face and written to a data file.  illustrates a plot  of the total kinetic energy imparted to each cell face along the flat plate or wall, which represents the only surface of interest in this example. The abscissa  and ordinate  correspond to the y and z directions, respectively radially and angularly along the wall. The legend  scales the kinetic energy from one-to-ten Watts (1-10 J\/s). The plotted region  shows concentrated impacts at 0.02<y<0.05. The imparted thermal energy from particle conduction can be output, as well as the area of the cell faces. Dividing the energy to the wall by the cell face area, the energy flux (W\/m) can be determined for each cell.",{"@attributes":{"id":"p-0201","num":"0200"},"figref":"FIG. 17","b":["1700","1710","1720","1730","1740","1750","1750"]},"The user may specify the number of computational particles to use to represent the real system and how many particle groups are used to represent the real distribution of particle sizes. Increasing the number of particles or particle groups should increase the accuracy of the predictions. The calculated energy to the surfaces should become a smoother function with increased fidelity. To test the convergence of the solution with increasing particle groups, the Sidewinder model was calculated using one, three, five and ten particle groups.  illustrates a graph  plotting the energy flux along the flat plate  for all four cases. The plate's y-axis represents the abscissa  and kinetic energy represents the ordinate , with the legend  identifying the lines  by the particle groups. Increasing the number of particle groups provides a smoother distribution of the energy to the wall due to the smoother representation of the distribution of particle sizes.","A second convergence test was also conducted to ensure a converging prediction with increasing numbers of injected particles.  shows a graph  with the predicted kinetic energy imparted to the surface, calculated with 50, 100, 200, and 500 particles. (The same abscissa and ordinate apply, albeit with alternate domains.) The legend  identifies the lines  by the number of particles. The predictions quickly converge to a smooth solution. Therefore, the converged solution can be independent of the actual number of particles and groups used.","XXV. Results Summary: The PISCES code was developed to improve the predictions of ablative erosion in Navy missile launchers due to rocket exhaust with particles. PISCES uses a converged CFD solution of the gas dynamics within the launcher. A representative number of particles are inserted into the computational domain to model the motion of all the particles within the rocket exhaust. The particle motion is integrated in time to determine the path of each particle and the interactions between the particle and the launcher surfaces. The particles and gas are \u201cone-way\u201d coupled. The pre-computed gas flow field affects the particle motion, but the particles have no effect on the gas flow field. The kinetic and thermal energy imparted to the surfaces from each particle are computed. The PISCES final result provides the total energy flux to the launcher surfaces from all the particles. The energy flux may then be used to predict the extent of ablative erosion on all the surfaces.","While certain features of the embodiments of the invention have been illustrated as described herein, many modifications, substitutions, changes and equivalents will now occur to those skilled in the art. It is, therefore, to be understood that the appended claims are intended to cover all such modifications and changes as fall within the true spirit of the embodiments."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The patent or application file contains at least one drawing executed in color. Copies of this patent or patent application publication with color drawings will be provided by the office upon request and payments of the necessary fee.","These and various other features and aspects of various exemplary embodiments will be readily understood with reference to the following detailed description taken in conjunction with the accompanying drawings, in which like or similar numbers are used throughout, and in which:",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIGS. 3A and 3B"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 15A"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 15B","FIG. 15A"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIGS. 18A and 18B"}]},"DETDESC":[{},{}]}
