---
title: Expandable graphical affordances
abstract: A method, apparatus, system, article of manufacture, and computer readable storage medium provide the ability to create and edit a surface object in a computer implemented surface modeler. A surface object creation process is commenced and a surface object type is selected. During the surface object creation process, visual affordances are presented. The visual affordances are grips that can be used to inject modification into the surface object creation process. Subsequent to creation of the surface object, the same visual affordances are displayed and used to edit the surface object.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08878845&OS=08878845&RS=08878845
owner: Autodesk, Inc.
number: 08878845
owner_city: San Rafael
owner_country: US
publication_date: 20111010
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS","CONCLUSION"],"p":["This application claims the benefit under 35 U.S.C. Section 119(e) of the following co-pending and commonly-assigned U.S. provisional patent application(s), which is\/are incorporated by reference herein:","Provisional Application Ser. No. 61\/392,383, filed on Oct. 12, 2010, by Jiri Kripac, Hans-Frederick Brown, and Pei Zhan, entitled \u201cFRICTION-LESS SURFACE MODELING ENVIRONMENT,\u201d.","This application is related to the following co-pending and commonly-assigned U.S. patent application(s), which is\/are incorporated by reference herein:","Utility patent application Ser. No. 13\/270,078, filed on Oct. 10, 2011, by Jiri Kripac, Hans-Frederick Brown, and Pei Zhan, entitled \u201cPASSIVE ASSOCIATIVITY IN THREE-DIMENSIONAL (3D) MODELING,\u201d which application claims priority to Provisional Application Ser. No. 61\/392,383, filed on Oct. 12, 2010, by Jiri Kripac, Hans-Frederick Brown, and Pei Zhan, entitled \u201cFRICTION-LESS SURFACE MODELING ENVIRONMENT,\u201d.","1. Field of the Invention","The present invention relates generally to computer graphics, and in particular, to a method, apparatus, and article of manufacture for three-dimensional (3D) surface modeling applications and an expendable graphic affordance system for editing surfaces.","2. Description of the Related Art","In computer-aided design (CAD) drawing applications, parametric\/associative surface models consists of a (possibly large) collection of individual surface objects. The surface objects may depend on each other or depend on other objects or parameters. A common way a surface may become dependent on other objects is when it is created using geometry of the other objects (referred to herein as related surfaces\/geometry\/objects). An example is a blend surface that is created by selecting two edges of two other surfaces, or an offset surface that is created by offsetting another surface.","In some scenarios, it is desirable for the surfaces to keep their relations and let the system automatically preserve these relations and update all related surfaces when some surfaces are edited. In other scenarios, it is more desirable not to maintain these relations and treat the surfaces as individual unrelated surfaces to avoid unintended change propagations. However, even if the relations between the surfaces are not maintained, it is desirable to be able to edit as many parameters of the surface as possible. For example it is desirable to be able to edit the blend surface continuity (G0-positional, G1-tangential, G2-curvature) or the offset surface distance, even if from the user's point of view the edited surface does not maintain any relation with the surfaces from which it has been created. Such problems may be better understood with a description of solid modeling and the management of relations in such models.","Most traditional solid modelers are based on feature driven modeling operations where two-dimensional (2D) sketches are extruded\/revolved\/lofted and each subsequent feature is built on the previous feature. These modeling operations are usually displayed to the user in a tree structure (feature history tree) and edit operations must follow the hierarchical order of the tree. In addition, most of the parametric data is entered via dialogs during the creation process and subsequent modifications are summoned from the feature tree.","Simpler solid modelers work directly on the B-REP (boundary representation) and modeling operations are not tracked or maintained in a parametric\/history tree. These type of modelers usually let the user tweak vertices\/edges\/faces of a solid without any sort of constraints. This modeling paradigm is useful when working with imported models or complex native models. Further, such simple modelers usually let the user modify a vertex\/edge\/face via either dialog or move\/rotate\/scale graphic affordances directly in the canvas.","More recently a new \u201csynchronous\u201d technology was introduced that permits one to blend the advantage of the traditional features like solid modeling with some of the direct modeling advantages. The users are also presented with a \u201cFeature Tree\u201d browser but the features are auto-detected by analyzing the model itself\u2014thus providing greater flexibility and not relying on a linear succession of modeling operations. Further, in most cases, the user is presented with graphic affordances directly in the canvas that relates to the parametric property being edited or detected.","On the other hand, most surface modelers are either pure NURBS (non-uniform rational b-spline) modelers where all operations result in a NURBS surface, or are solid modeling disguised as surface modelers. In the latter case, surfaces are considered \u201cbodies\u201d and any of the previous modeling paradigms are used on them (e.g., feature driven, direct, synchronous, etc.).","Some of the pure NURBS modelers have implemented their own associative engines that track underlying creation geometry (e.g., 2D\/3D sketches) and some of the edit operations (e.g., trimming\/blending surfaces). The associative actions are sometimes displayed in a scene graph (i.e., similar to a history tree) and nodes have a limited editing capability. Further, most of the surface edits are made directly on the surface using various widgets\/gizmos (e.g., move\/scale\/rotate) that control the location of control vertices on the UV hull\/texture map.","In summary, with prior art 3D surface modeling, surface objects can either be related or not related to each other. If related, a surface object is associative and depends on properties of \u201cother surfaces.\u201d If the \u201cother surfaces\u201d change, the dependent surface automatically updates. Similarly, non-associative surfaces have no relation to surfaces that the non-associative surface from which it was created. However, because such a surface is non-associative, if the \u201cother surface\u201d is modified, the non-associative surface does not automatically update. Further, the non-associative surface does not maintain any history or knowledge base of the surfaces used to create it. Thus, the user has no option to retain an \u201cassociative\/relation\u201d knowledge base and limits the capabilities of the user to actively determine the behavior of a surface.","Further, prior art solid\/surface creation\/surface modeling paradigms are limited in their capability\/functionality. In this regard, prior art modeling paradigms are mostly done through dialogs. Some modelers use industry standard gizmo\/widget manipulators (e.g., move, scale, and rotate) to modify features, objects or components. Recent modelers have developed a set of manipulators for specific geometry properties and these are displayed when features or sub-components are selected. In addition, recent modelers expect that when a feature or sub-component is selected, the user is expected to modify the parametric properties, thus always displaying the graphic manipulators.","Embodiments of the invention introduce an expendable graphic for a friction-less surface modeling paradigm. The user is presented with visuals cues at creation time and in a second step, the system may display an expandable representation of the initial visual cue that can be triggered by the user to access the object property established at creation time.","Embodiments of the invention help reduce the current multiplication of visual affordance when object, feature or sub components are selected while providing a strategy for the positioning of such graphic affordances.","Further, the visual affordance may also be rationalized to a limited set of cues and thereby reduces the user cognitive load while learning the system. Such a system may provide fluid interaction and previewing where adjustment can be done directly on screen or via precise numerical values.","In the following description, reference is made to the accompanying drawings which form a part hereof, and which is shown, by way of illustration, several embodiments of the present invention. It is understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the present invention.","Overview","As described above, prior art solid\/surface creation\/surface modeling paradigms may exhibit one or more of the following properties:\n\n","Embodiments of this invention provide a friction-less surface modeling paradigm where the user can benefit from the associative engine and its parametric data without being limited in his surface edits. In this regard, embodiments are \u201cfriction-less\u201d because the ability to learn and utilize the new \u201cpassive-associative\u201d state of a surface object is simple, does not create deleterious effects, and does not limit the user's ability to perform surface edits.","In addition to the above, an expendable graphic affordance system is provided for the friction-less surface modeling paradigm and presents users with visual cues for accessing and editing object properties.","Hardware Environment",{"@attributes":{"id":"p-0045","num":"0048"},"figref":"FIG. 1","b":["100","102","102","102","104","104","104","106","102","114","116","128","102","132"]},"In one embodiment, the computer  operates by the general purpose processor A performing instructions defined by the computer program  under control of an operating system . The computer program  and\/or the operating system  may be stored in the memory  and may interface with the user and\/or other devices to accept input and commands and, based on such input and commands and the instructions defined by the computer program  and operating system  to provide output and results.","Output\/results may be presented on the display  or provided to another device for presentation or further processing or action. In one embodiment, the display  comprises a liquid crystal display (LCD) having a plurality of separately addressable liquid crystals. Alternatively, the display  may comprise a light emitting diode (LED) display having clusters of red, green and blue diodes driven together to form full-color pixels. Each liquid crystal or pixel of the display  changes to an opaque or translucent state to form a part of the image on the display in response to the data or information generated by the processor  from the application of the instructions of the computer program  and\/or operating system  to the input and commands. The image may be provided through a graphical user interface (GUI) module A. Although the GUI module A is depicted as a separate module, the instructions performing the GUI functions can be resident or distributed in the operating system , the computer program , or implemented with special purpose memory and processors.","In one or more embodiments, the display  is integrated with\/into the computer  and comprises a multi-touch device having a touch sensing surface (e.g., track pod or touch screen) with the ability to recognize the presence of two or more points of contact with the surface. Examples of a multi-touch devices include mobile devices (e.g., iPhone\u2122, Nexus S\u2122, Droid\u2122 devices, etc.), tablet computers (e.g., iPad\u2122, HP Touchpad\u2122), portable\/handheld game\/music\/video player\/console devices (e.g., iPod Touch\u2122, MP3 players, Nintendo 3DS\u2122, PlayStation Portable\u2122, etc.), touch tables, and walls (e.g., where an image is projected through acrylic and\/or glass, and the image is then backlit with LEDs).","Some or all of the operations performed by the computer  according to the computer program  instructions may be implemented in a special purpose processor B. In this embodiment, the some or all of the computer program  instructions may be implemented via firmware instructions stored in a read only memory (ROM), a programmable read only memory (PROM) or flash memory within the special purpose processor B or in memory . The special purpose processor B may also be hardwired through circuit design to perform some or all of the operations to implement the present invention. Further, the special purpose processor B may be a hybrid processor, which includes dedicated circuitry for performing a subset of functions, and other circuits for performing more general functions such as responding to computer program instructions. In one embodiment, the special purpose processor is an application specific integrated circuit (ASIC).","The computer  may also implement a compiler  which allows an application program  written in a programming language such as COBOL, Pascal, C++, FORTRAN, or other language to be translated into processor  readable code. Alternatively, the compiler  may be an interpreter that executes instructions\/source code directly, translates source code into an intermediate representation that is executed, or that executes stored precompiled code. Such source code may be written in a variety of programming languages such as Java\u2122, Perl\u2122, Basic\u2122, etc. After completion, the application or computer program  accesses and manipulates data accepted from I\/O devices and stored in the memory  of the computer  using the relationships and logic that was generated using the compiler .","The computer  also optionally comprises an external communication device such as a modem, satellite link, Ethernet card, or other device for accepting input from and providing output to other computers .","In one embodiment, instructions implementing the operating system , the computer program , and the compiler  are tangibly embodied in a non-transient computer-readable medium, e.g., data storage device , which could include one or more fixed or removable data storage devices, such as a zip drive, floppy disc drive , hard drive, CD-ROM drive, tape drive, etc. Further, the operating system  and the computer program  are comprised of computer program instructions which, when accessed, read and executed by the computer , causes the computer  to perform the steps necessary to implement and\/or use the present invention or to load the program of instructions into a memory, thus creating a special purpose data structure causing the computer to operate as a specially programmed computer executing the method steps described herein. Computer program  and\/or operating instructions may also be tangibly embodied in memory  and\/or data communications devices , thereby making a computer program product or article of manufacture according to the invention. As such, the terms \u201carticle of manufacture,\u201d \u201cprogram storage device\u201d and \u201ccomputer program product\u201d as used herein are intended to encompass a computer program accessible from any computer readable device or media.","Of course, those skilled in the art will recognize that any combination of the above components, or any number of different components, peripherals, and other devices, may be used with the computer .",{"@attributes":{"id":"p-0054","num":"0057"},"figref":["FIG. 2","FIG. 1"],"b":["200","202","102","206","202","102","206"]},"A network  such as the Internet connects clients  to server computers . Network  may utilize ethernet, coaxial cable, wireless communications, radio frequency (RF), etc. to connect and provide the communication between clients  and servers . Clients  may execute a client application or web browser and communicate with server computers  executing web servers . Such a web browser is typically a program such as MICROSOFT INTERNET EXPLORER\u2122, MOZILLA FIREFOX\u2122, OPERA\u2122, APPLE SAFARI\u2122, etc. Further, the software executing on clients  may be downloaded from server computer  to client computers  and installed as a plug in or ACTIVEX\u2122 control of a web browser. Accordingly, clients  may utilize ACTIVEX\u2122 components\/component object model (COM) or distributed COM (DCOM) components to provide a user interface on a display of client . The web server  is typically a program such as MICROSOFT'S INTERNET INFORMATION SERVER\u2122.","Web server  may host an Active Server Page (ASP) or Internet Server Application Programming Interface (ISAPI) application , which may be executing scripts. The scripts invoke objects that execute business logic (referred to as business objects). The business objects then manipulate data in database  through a database management system (DBMS) . Alternatively, database  may be part of or connected directly to client  instead of communicating\/obtaining the information from database  across network . When a developer encapsulates the business functionality into objects, the system may be referred to as a component object model (COM) system. Accordingly, the scripts executing on web server  (and\/or application ) invoke COM objects that implement the business logic. Further, server  may utilize MICROSOFT'S\u2122 Transaction Server (MTS) to access required data stored in database  via an interface such as ADO (Active Data Objects), OLE DB (Object Linking and Embedding DataBase), or ODBC (Open DataBase Connectivity).","Generally, these components - all comprise logic and\/or data that is embodied in\/or retrievable from device, medium, signal, or carrier, e.g., a data storage device, a data communications device, a remote computer or device coupled to the computer via a network or via another data communications device, etc. Moreover, this logic and\/or data, when read, executed, and\/or interpreted, results in the steps necessary to implement and\/or use the present invention being performed.","Although the term \u201cuser computer\u201d, \u201cclient computer\u201d, and\/or \u201cserver computer\u201d is referred to herein, it is understood that such computers  and  may include thin client devices with limited or full processing capabilities, portable devices such as cell phones, notebook computers, pocket computers, multi-touch devices, and\/or any other device with suitable processing, communication, and input\/output capability.","Of course, those skilled in the art will recognize that any combination of the above components, or any number of different components, peripherals, and other devices, may be used with computers  and .","Overview of Passive-Associative Functionality","Embodiments of the invention are implemented as a software application on a client  or server computer . Such a software application may comprise a computer-aided design (CAD) application (e.g., AutoCAD\u2122 available from the assignee of the present application).","As described above and described in detail in the referenced co-pending patent application entitled \u201cPASSIVE ASSOCIATIVITY IN THREE-DIMENSIONAL (3D) MODELING\u201d, which is incorporated by reference herein, embodiments of the invention utilize a passive associative feature for surface objects. With such functionality, even if a user elects to have a surface object be non-associative, an associative engine (i.e., within the software application) may maintain the relations internally and does not convert the object into a non-associative object unless necessary. Further, properties of the surface may be exposed based on such relations.","For example, a user may view and modify additional properties of a passive associative blend surface. Such additional properties may only be shown if the geometric conditions of the passive associative blend surface and the original input surface has not been changed. For example, if the passive associative blend surface still touches the original input surface, the additional properties may be displayed by the user. However, if either surface has been moved away (i.e., the passive-associative blend surface or one of the input surfaces on which it depends), the additional properties may be removed. Once the additional properties are removed, if an input surface is moved, the blend surface (dependent upon such an input surface) may not automatically update because it doesn't touch the input surface anymore. However, if all three surfaces are moved (i.e., the blend surface and the two input surfaces), the continuity\/dependency between the passive associative blend surface and input surfaces has not been changed, and the additional properties may still be maintained.","Embodiments of the invention provide the ability for the user to state whether a surface is associative or passive associative. Thus, if the user labels a surface as associative, all updates will occur automatically without additional user input when an input surface is modified. However, with a passive associative surface, updates will not occur automatically but the additional properties may still be maintained. Prior art modeling applications do not provide the option to maintain\/expose additional properties as with the passive associative capabilities of the present invention. Instead, prior art implementations are limited to associative and non-associative surfaces. Accordingly, there is no mechanism to request input from a user to determine if the user desires to break an association between two surfaces once\/after the user has labeled a surface \u201cnon-associative\u201d and later attempts to move such a non-associative or input surface.","Detailed Description of Expandable Graphic Affordances",{"@attributes":{"id":"p-0064","num":"0067"},"figref":["FIG. 3","FIG. 3"],"b":"302","ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":{"@attributes":{"id":"ul0003-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0004","list-style":"none"},"li":["Network Surface ","Loft Surface ","Sweep Surface ","Planar Surface ","Extrude Surface ","Revolve Surface ","Blend Surface ","Patch Surface ","Offset Surface ","Fillet Surface ","Extend Surface ","Chamfer Surface"]}}}},"Each of these surface objects will share the same visual affordance language when the associative engine  is \u201con\u201d or \u201coff\u201d.","A general expander visual cue will also be shared across the surfaces to limit the visual footprint during the creation an editing interactions. The positions of the visual cues follow a hierarchical system; with the prime positions reserved for high traffic user interaction.","The highest level of the hierarchy is selection specific and utilizes the center of the object's bounding box. A visual cue may be used to enable move\/rotate\/scale operations.","The next level in the hierarchy is object specific and utilizes the center of an object defining edge. Such a visual cue may be used to edit the continuity and bulge magnitude.","The bottom level of the hierarchy is also object specific and utilizes the upper corner of the object bounding to provide visual cues with object specific options.","In view of the above, embodiments of the invention enable a directed command flow that steps the user through the surface creation process. Such a directed flow provides the ability for the user to select the desired surface type followed by the manipulation (i.e., using the visual graphic affordances) of such a surface thereby resulting in the desired object surface. Thereafter, the same visual graphic affordances can be used to edit the surface.","Based on the above, specific examples of the creation and editing process follow: loft creation from 2D\/3D profiles; loft editing interaction for lofts created from curves; loft creation using edges from existing surfaces; loft editing interaction for lofts created from surfaces; and in-canvas manipulators for each surface type.","Loft Creation from 2D\/3D Profiles","To better understand embodiments of the invention, a simple example of a loft created with three (3) spline profiles may be used. Associativity may be set either to \u201coff\u201d or \u201con\u201d. Accordingly, surface associativity has no impact on the visual cues and graphical language during the creation\/editing process.  illustrates three splines used to generate the lofted surface in accordance with one or more embodiments of the invention.",{"@attributes":{"id":"p-0074","num":"0089"},"figref":"FIG. 5","b":["502","504","506","502","504","506","508","510","504","506","508","510","510"]},{"@attributes":{"id":"p-0075","num":"0090"},"figref":["FIG. 6","FIG. 5","FIG. 6"],"b":["508","508","602"]},{"@attributes":{"id":"p-0076","num":"0091"},"figref":"FIG. 7","b":["510","510","702","704"]},{"@attributes":{"id":"p-0077","num":"0092"},"figref":["FIG. 8","FIG. 7"],"b":["702","702","802","804"]},{"@attributes":{"id":"p-0078","num":"0093"},"figref":"FIG. 9","b":"902"},"Loft Editing Interaction (Created from Curves)","Once a loft surface has been created (as described above), the loft surface's properties may be edited. Users can edit the properties via an object property manager or directly on the surface using the expandable graphical affordances.  illustrates an object property manager and corresponding selected lofted surface with graphical affordances for editing in accordance with one or more embodiments of the invention.","Properties that are less utilized\/modified have been hidden under the expander grips A and A to reduce the visual cluttering on the object itself. The \u201cStart draft angle\u201d B and the \u201cStart magnitude\u201d C from the object property manager  are represented by the grip\/expandable graphic affordance A on the surface .","The \u201cEnd draft Angle\u201d B and the \u201cEnd magnitude\u201d C from the object property manager  are represented by the grip\/expandable graphic affordance A on the surface .","The center  of the surface  is a prime location and is reserved for the high traffic interactions possible with the Move\/Rotate\/Scale Gizmo affordances.","The defining profiles grips  (e.g., square grips shown in ) are also available to modify the shape of the surface . The user can simply hover on a profile grip  and the current gizmo available on  will relocate to their position. Once the gizmo is re-positioned, it affects the profile grip  itself and not the global surface position\/rotate\/scale.","Accordingly, all visual cues have been re-used from the creation process, and the user can easily transfer knowledge of such visual cues\/graphic affordances to the editing process.",{"@attributes":{"id":"p-0086","num":"0101"},"figref":["FIG. 11","FIG. 8","FIG. 8"],"b":["1004","1001","1004","802","902","802","804"]},{"@attributes":{"id":"p-0087","num":"0102"},"figref":["FIGS. 12A and 12B","FIG. 10","FIG. 12A"],"b":["1008","1001","1008","1200","1200","1001"]},"Loft Creation Using Edges from Existing Surfaces","Another example that may be used to illustrate the graphical affordances is that of loft creation using edges from existing surfaces.  illustrates two surfaces A and B and one intermediate spline  that can be used to create a loft when associativity is either set to \u201coff\u201d or \u201con\u201d (surface associativity has no impact on the visual cues and graphical language during creation) in accordance with one or more embodiments of the invention.",{"@attributes":{"id":"p-0090","num":"0105"},"figref":"FIG. 14","b":["1401","1402","1404","1406"]},"A global loft option is available via grip  (e.g., see above). Two expander grips  are also displayed to indicate that the edge condition can be modified; these expanders are there to limits the visual clutter and hide\/expose additional visual cues.","Because the loft was created using surfaces A and B at the end and start, the user can also set what type of continuity condition exists between the surfaces A and B.",{"@attributes":{"id":"p-0093","num":"0108"},"figref":["FIG. 15","FIG. 15"],"b":["1406","1502"]},{"@attributes":{"id":"p-0094","num":"0109"},"figref":["FIG. 16","FIG. 14","FIG. 17"],"b":["1404","1404","1602","1602","1602"]},"Loft Editing Interaction (Created from Existing Surfaces)",{"@attributes":{"id":"p-0096","num":"0111"},"figref":"FIG. 18","b":["1000","1800","1802","1806","1800"]},"The \u201cStart Magnitude\u201d property B from the object property manager  is represented by grip A on the surface . The \u201cStart Continuity\u201d property B from the object property manager  is represented by grip A on the surface . The \u201cEnd Magnitude\u201d property B from the object property manager  is represented by grip A on the surface . The \u201cEnd Continuity\u201d property B from the object property manager  is represented by grip A on the surface . The \u201cSurface Normal\u201d property B from the object property manager is represented by grip A on the surface . The center of the surface  is a prime location and is reserved for the high traffic interactions possible with the Move\/Rotate\/Scale Gizmo affordances.","In view of the above, it can be seen that all visual cues have been reused from the creation process during the editing process and the user can easily transfer knowledge of the visual cues to the editing process.","In-Canvas Manipulators for Each Surface Type","The table below is a list of all the surface types and affordances that compose the natural surface mode environment in accordance with one or more embodiments of the invention. The first column indicates the surface type, the second column provides the visual affordances for surface type when surface associativity is \u201coff\u201d The third column provides the visual affordances for the surface type when the surface associativity is \u201con.\u201d",{"@attributes":{"id":"p-0101","num":"0116"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Surface","SURFACE ","SURFACE"]},{"entry":["Type","ASSOCIATIVITY = OFF","ASSOCIATIVITY = ON"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Surface","N\/A","N\/A"]},{"entry":["(NURBS)",{},{}]},{"entry":["Surface","Height grip","Height grip - can be"]},{"entry":["(extrusion)","Taper grip","disabled if the height is"]},{"entry":[{},"Related profile grips","controlled via a parametric"]},{"entry":[{},{},"equation"]},{"entry":[{},{},"Taper grip - can be disabled"]},{"entry":[{},{},"if the height is controlled via"]},{"entry":[{},{},"a parametric equation"]},{"entry":[{},{},"Related disable profile grips"]},{"entry":["Surface","Related profile grips","Related disable profile grips"]},{"entry":["(Loft)","Loft grips menu option","Loft grips menu option"]},{"entry":[{},"Expander grip for the","Expander grip for the"]},{"entry":[{},"magnitude handle if the","magnitude handle if the"]},{"entry":[{},"property exists","property exists. if the"]},{"entry":[{},"Continuity grips if","magnitude is controlled via"]},{"entry":[{},"connected with adjacent","an equation, then the"]},{"entry":[{},"surfaces","expander grips are disabled"]},{"entry":[{},{},"(only the border is drawn)"]},{"entry":[{},{},"Continuity grips - if"]},{"entry":[{},{},"connected with adjacent"]},{"entry":[{},{},"surface"]},{"entry":["Surface","Related profile grips","Related disable profile grips"]},{"entry":["(Planar)",{},{}]},{"entry":["Surface","Related profile grips","Related disable profile grips"]},{"entry":["(Revolve)","Axis position grip","Disable Axis grip"]},{"entry":[{},"revolve grip (triangle)","revolve grip - if the"]},{"entry":[{},{},"revolution angle is"]},{"entry":[{},{},"controlled via an equation,"]},{"entry":[{},{},"then the grip is disabled"]},{"entry":[{},{},"(only the border is drawn)"]},{"entry":["Surface","Related profile grips","Related disable profile grips"]},{"entry":["(sweep)","Related grips for the sweep","Related disable grips for the"]},{"entry":[{},"profile","sweep profile"]},{"entry":["Surface","Continuity grips - if","Continuity grips - if"]},{"entry":["(Blend)","connected with adjacent","connected with adjacent"]},{"entry":[{},"surface","surface"]},{"entry":["Surface","Related profile grips","Related disable profile grips"]},{"entry":["(network)","Continuity grips - if","Continuity grips - if"]},{"entry":[{},"connected with adjacent","connected with adjacent"]},{"entry":[{},"surface","surface"]},{"entry":["Surface","Expander grip for the Fillet","Expander grip for the fillet"]},{"entry":["(Fillet)","handle","handle. if the radius is"]},{"entry":[{},{},"controlled via an equation"]},{"entry":[{},{},"then the expander grip is"]},{"entry":[{},{},"disabled (only the border is"]},{"entry":[{},{},"drawn)"]},{"entry":["Surface","Extend grip (triangle) center ","Extend grip, can be disabled"]},{"entry":["(Extend)","of extended edge","if the extension is controlled"]},{"entry":[{},{},"via a parametric equation"]},{"entry":["Surface","Offset Grip (triangle) in","Offset grip -- can be"]},{"entry":["(Offset)","center of surface and","disabled is the offset is"]},{"entry":[{},"pointing in the positive","controlled via a parametric"]},{"entry":[{},"direction. the surface is","equation"]},{"entry":[{},"only updated once the",{}]},{"entry":[{},"distance is acquired",{}]},{"entry":["Surface","Related profile grips if the","Related disable profile grips -- "]},{"entry":["(Patch)","patch in not created from a","if the patch is not created"]},{"entry":[{},"surface edge sub-object","from a surface edge sub-"]},{"entry":[{},"Expander grip for the","object"]},{"entry":[{},"magnitude handle if the","Expander grip - for the"]},{"entry":[{},"property exists","magnitude handle (if the"]},{"entry":[{},"Continuity grips -- if","property exists). If the"]},{"entry":[{},"connected with adjacent","magnitude is controlled via"]},{"entry":[{},"surface","an equation, then the"]},{"entry":[{},{},"expander grip is disabled"]},{"entry":[{},{},"(only the border is drawn)"]},{"entry":[{},{},"Continuity grips -- if"]},{"entry":[{},{},"connected with adjacent"]},{"entry":[{},{},"surface"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0102","num":"0117"},"figref":"FIG. 19"},"At step , a surface object creation process is commenced in a surface modeler. At step , as part of the surface object creation process, a surface object type is selected. For example, the user may select an icon in a tool bar for one of twelve (12) different surface types (see ).","At step , during the surface object creation process, one or more visual affordances are presented. Such visual affordances are grips that can be used to inject modification into the surface object creation process. In other words, the grips can be used to accept external input to inject modification into the creation process without interfering with a directed command flow of the surface object creation process. In this regard, a flow or sequence of operations for creating the surface object may be presented on the screen and the user may use the grips to edit and modify the surface without affecting this sequence of operation\/directed command flow.","The visual affordances may be presented in accordance with a hierarchical system: center of bounding box; center of defining edge of object; and upper corner of bounding of surface object.","The center (also referred to as \u201cfirst center\u201d) of a bounding box of the surface object (selection specific) may be used to present a move, rotate, and\/or scale visual affordance.","A center (referred to as \u201csecond center\u201d) of a defining edge of the surface object (object specific) may be used to present a continuity, draft angle, and\/or bulge magnitude visual affordance. For example, an expander grip may indicate an edge condition of the surface object that can be modified. Such an expander grip limits visual clutter and is used to hide\/expose (via selection of the expander grip) one or more additional visual affordances that can be used to modify the edge condition (e.g., the continuity, draft angle, and\/or bulge magnitude visual affordance).","In addition, an upper corner of a bounding of the surface object (object specific) may be used to present object specific visual affordances. Such a general option may include the ability to select a specific type of surface object (e.g., if the object is a loft, the general option may allow selection of the type of loft such as ruled, smooth fit, normal to all sections, etc.).","It may also be noted that the same visual affordances may be displayed\/presented regardless of whether the surface object being created has surface associativity on or off.","At step , subsequent to the creation of the surface object, the same visual affordances are displayed and used to edit the surface object. Such a step may also include the display of an object property manager that displays properties of the surface object that can be edited using corresponding visual affordances displayed directly on the surface object.","This concludes the description of the preferred embodiment of the invention. The following describes some alternative embodiments for accomplishing the present invention. For example, any type of computer, such as a mainframe, minicomputer, or personal computer, or computer configuration, such as a timesharing mainframe, local area network, or standalone personal computer, could be used with the present invention.","Unique aspects of embodiments of the invention may include one or more of the following:\n\n","The foregoing description of the preferred embodiment of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description, but rather by the claims appended hereto."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Referring now to the drawings in which like reference numbers represent corresponding parts throughout:",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 6","FIG. 5"],"b":"508"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 7","b":"510"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 8","FIG. 7"],"b":"702"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 11","b":"1004"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIGS. 12A and 12B","FIG. 10"],"b":"1008"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 16","FIG. 14"],"b":"1404"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 17","b":"1602"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 19"}]},"DETDESC":[{},{}]}
