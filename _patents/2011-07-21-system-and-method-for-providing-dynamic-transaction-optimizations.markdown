---
title: System and method for providing dynamic transaction optimizations
abstract: A system and method for providing dynamic transaction optimizations, such as dynamic XA transaction optimizations. In accordance with an embodiment, the system enables monitoring of transactional behavior in an application during runtime, in order to provide a feedback loop. The application/transaction information in the feedback loop can be analyzed by a transaction manager to determine an indication as to whether a particular optimization, such as an isSameRM optimization, will provide a benefit or not. The optimization can then be applied accordingly. In accordance with various embodiments, such determination can be made transparently, so that its enablement is not detectable to, e.g., an end-application, or a system administrator, even though the distribution and type of XA calls may be detected through system monitoring. The feature can be used to improve the performance of transaction processing in a transaction-based system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08539490&OS=08539490&RS=08539490
owner: Oracle International Corporation
number: 08539490
owner_city: Redwood Shores
owner_country: US
publication_date: 20110721
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["COPYRIGHT NOTICE","FIELD OF INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","The present invention is generally related to distributed transaction processing, and is particularly related to a system and method for providing dynamic transaction optimizations, such as dynamic XA transaction optimizations.","In the field of distributed transaction processing, the XA specification promulgated by The Open Group can be used to describe a protocol and interface between a transaction manager and one or more local resource managers. This enables a plurality of resources, such as application servers and databases, to be accessed within the same transaction, thus preserving the ACID (atomicity, consistency, isolation, durability) properties of the transaction.","The XA protocol supports a variety of optimizations that can be optionally employed depending on the needs of a particular implementation. For example, an IsSameRM optimization can be used in instances where multiple connections that are being used in the same transaction, and that point to the same resource manager (e.g., the same database), can be joined in order to avoid the need for certain XA protocol network calls. Since such XA calls constitute a performance detriment, and may also necessitate additional assets, joining connections can sometimes provide performance benefits.","However, a shortcoming with some optimizations, such as the IsSameRM optimization, is that the optimization can itself be a performance detriment depending on the amount of context switching that must then take place within the application. In many instances, it is not possible to know ahead of time whether such context switching will occur, in order to best determine whether the isSameRM optimization should be employed. As a result, optimizations such as the IsSameRM\/join optimization are rarely, if ever used, and indeed in many systems are disabled by default. These are the general areas that embodiments of the invention are intended to address.","Disclosed herein is a system and method for providing dynamic transaction optimizations, such as dynamic XA transaction optimizations. In accordance with an embodiment, the system enables monitoring of transactional behavior in an application during runtime, in order to provide a feedback loop. The application\/transaction information in the feedback loop can be analyzed by a transaction manager to determine an indication as to whether a particular optimization, such as an isSameRM optimization, will provide a benefit or not. The optimization can then be applied accordingly. In accordance with various embodiments, such determination can be made transparently, so that its enablement is not detectable to, e.g., an end-application, or a system administrator, even though the distribution and type of XA calls may be detected through system monitoring. The feature can be used to improve the performance of transaction processing in a transaction-based system.","As described above, specifications such as the XA specification can be used to describe a protocol and interface between a transaction manager and one or more local resource managers, which enables a plurality of resources, such as application servers and databases, to be accessed within the same transaction. The XA protocol supports a variety of optimizations that can be optionally employed depending on the needs of a particular implementation. For example, an IsSameRM optimization can be used in instances where multiple connections that are being used in the same transaction, and that point to the same resource manager (e.g., the same database), can be joined in order to avoid the need for certain XA protocol network calls. However, a shortcoming with some optimizations, such as the IsSameRM optimization, is that the optimization can itself be a performance detriment depending on the amount of context switching that must then take place within the application. In many instances, it is not possible to know ahead of time whether such context switching will occur, in order to best determine whether the isSameRM optimization should be employed.","To address this, disclosed herein is a system and method for providing dynamic transaction optimizations, such as dynamic XA transaction optimizations. In accordance with an embodiment, the system enables monitoring of transactional behavior in an application during runtime, in order to provide a feedback loop. The application\/transaction information in the feedback loop can be analyzed by a transaction manager to determine an indication as to whether a particular optimization, such as an isSameRM optimization, will provide a benefit or not. The optimization can then be applied accordingly. In accordance with various embodiments, such determination can be made transparently, so that its enablement is not detectable to, e.g., an end-application, or a system administrator, even though the distribution and type of XA calls may be detected through system monitoring. The feature can be used to improve the performance of transaction processing in a transaction-based system.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 1","FIG. 1"],"b":["102","122","124","108","110","112","114","118","104","106"]},"A transaction manager (TM) component  of the TPM provides an application programming interface (in XA-based environments the XA protocol and its TX interfaces , ) that enable the client application to specify the boundaries of the transaction. Each TM implements a two-phase commit protocol to provide all-or-none semantics across its distributed RMs. During a prepare phase, the TM uses its XA interface ,  to ask each RM to guarantee that it can commit its part of the transaction. If this is possible, then the RM records its prepared state and replies affirmatively to the TM; if not then the RM might roll back any work and reply negatively to the TM. The XA protocol allows the client application, or any of the RMs, to roll back the transaction unilaterally until the prepare phase completes. During a commit phase, the TM records the commit decision and issues either a commit or rollback to all RMs participating in the transaction. The TM can issue a commit for an RM only if all of the RMs participating in the transaction have replied affirmatively during the prepare phase.","Although the client application can specify the transaction boundaries and the actions that constitute a transaction, the client application otherwise operates on each RM through its native interface , . For example, in the case of a SQL-based database resource, the client application might operate on the database's RM using SQL commands. This means that the client application can start and complete all transaction control operations through the TX interface, and does not directly use the XA interface, which allows the client applications to leave the management of the inner working of the branches to the TM.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 2","FIG. 2"],"b":["146","156","162","120","171","174"]},"In accordance with various embodiments, the application\/transaction feedback information can be provided directly to the transaction manager for use by that transaction manager only; or alternatively can be provided to the transaction processing system for use by several transaction managers at that system.","In accordance with various embodiments, the feedback information can be stored only in transient memory for use by the transaction manager for the duration of its uptime; or alternatively can be persisted for use by the transaction manager after a reboot.","In accordance with various embodiments, enabling and\/or disabling a particular optimization does not necessarily mean the optimization will be used in every instance, only that it is available (or not available) for use, subject to other runtime conditions.","Alternative variations of the above may be used, depending the needs of a particular implementation.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0024","num":"0023"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"isSameRM"]},{"entry":[{},"public boolean isSameRM(XAResource xares)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"throws XAException"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"The IsSameRM method can be called to determine if the resource manager instance represented by the target object is the same as the resource manager instance represented by the parameter xares\u2014if the resource manager instances are indeed the same, then the transaction manager can join the calls. However, since the IsSameRM optimization can itself be a performance detriment depending on the amount of context switching that must then take place within the application, it is difficult to know in which instances the optimization should be employed.","As shown in , in accordance with an embodiment, one or more client applications can issue transaction requests to the transaction manager at the transaction processing monitor, wherein the transaction includes updates via a plurality of connections ,  to one or more distributed resources. In this example, the transaction manager includes as a dynamic optimization the IsSameRM optimization , i.e., the IsSameRM optimization can be dynamically enabled and\/or disabled at runtime in response to application\/transaction feedback information from the resource managers. As the resource manager processes each transaction, application\/transaction feedback information  is continuously fed back to the transaction manager and\/or the transaction processing monitor, where it is used determine whether the isSameRM optimization will provide a benefit or not, and in which circumstances, and to control  (e.g., to explicitly enable or disable) the availability of the IsSameRM optimization. Enabling the availability of the IsSameRM optimization does not necessarily mean the optimization will be used in every instance, only that it is available for use, subject to other runtime conditions.","In accordance with an embodiment, the application\/transaction feedback information can include such information as RM sharing information , context switching information , transaction completion times , transaction or business process type name , and\/or other additional or alternative application\/transaction information depending on the needs of a particular implementation. This enables the transaction manager to determine, e.g., those types of transaction, or those business processes whose performance would benefit (or not benefit) from the use of the IsSameRM optimization.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 4","FIG. 4"],"b":["180","182","184","186"]},"At a later period in time, it may be determined, based on the continuing application\/transaction feedback information  received, and the particular circumstances of a new application request , that the isSameRM optimization would provide a benefit for that request. The IsSameRM optimization is then enabled, such that multiple connections to the same resource manager can be joined .","At a yet later period in time, it may be determined, based on the continuing application\/transaction feedback information  received, and the particular circumstances of another new application request , that the isSameRM optimization would provide no benefit (or indeed may provide a detriment) for that request. The IsSameRM optimization is then disabled, such that multiple connections  must again be maintained to the same resource manager.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 5","FIG. 5"],"b":["202","204","206","208","210"]},"The present invention may be conveniently implemented using one or more conventional general purpose or specialized digital computer, computing device, machine, or microprocessor, including one or more processors, memory and\/or computer readable storage media programmed according to the teachings of the present disclosure. Appropriate software coding can readily be prepared by skilled programmers based on the teachings of the present disclosure, as will be apparent to those skilled in the software art.","In some embodiments, the present invention includes a computer program product which is a non-transitory storage medium or computer readable medium (media) having instructions stored thereon\/in which can be used to program a computer to perform any of the processes of the present invention. The storage medium can include, but is not limited to, any type of disk including floppy disks, optical discs, DVD, CD-ROMs, microdrive, and magneto-optical disks, ROMs, RAMs, EPROMs, EEPROMs, DRAMs, VRAMs, flash memory devices, magnetic or optical cards, nanosystems (including molecular memory ICs), or any type of media or device suitable for storing instructions and\/or data.","The foregoing description of the present invention has been provided for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations will be apparent to the practitioner skilled in the art. The embodiments were chosen and described in order to best explain the principles of the invention and its practical application, thereby enabling others skilled in the art to understand the invention for various embodiments and with various modifications that are suited to the particular use contemplated. It is intended that the scope of the invention be defined by the following claims and their equivalence."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
