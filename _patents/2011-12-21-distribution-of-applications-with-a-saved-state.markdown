---
title: Distribution of applications with a saved state
abstract: Disclosed are various embodiments for sharing applications initialized to a specified state. In one embodiment, a saved state service receives a plurality of state parameters that describe a state of the application, wherein the state parameters are reported by the application during execution of the application. The save state service then generates a unique data string that corresponds to the state parameters by serializing the state parameters using a data interchange standard. The saved state service may then generate a link to install the application, wherein the link includes the unique data string. In one embodiment, the saved state service serves up the link that, upon invocation on a client, installs the application and initializes the application in the specified state.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09274780&OS=09274780&RS=09274780
owner: Amazon Technologies, Inc.
number: 09274780
owner_city: Seattle
owner_country: US
publication_date: 20111221
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["Users execute applications on client devices for a variety of purposes and generate a variety of types of data during the execution of the application. For instance, a user may play a game on the client device and may set high scores, defeat levels of the game, and unlock new features of the game.","Disclosed are various embodiments for transmitting an application with a saved state to another user. In one embodiment, a saved state service receives a plurality of state parameters that define the state of the application being executed. The saved state service serializes the state parameters to a unique character string using a data interchange standard and embeds the unique character string within a link. The saved state service serves up the link to a requesting process that, upon being invoked, installs the application on the invoking client and initializes the application into the saved state. In the following discussion, a general description of the system and its components is provided, followed by a discussion of the operation of the same.","With reference to , shown is a networked environment  according to various embodiments. The networked environment  includes a computing device , a user client , a developer client , and a network . The network  includes, for example, the Internet, intranets, extranets, wide area networks (WANs), local area networks (LANs), wired networks, wireless networks, or other suitable networks, etc., or any combination of two or more such networks.","The computing device  may comprise, for example, a server computer or any other system providing computing capability. Alternatively, a plurality of computing devices  may be employed that are arranged, for example, in one or more server banks or computer banks or other arrangements. For example, a plurality of computing devices  together may comprise a cloud computing resource, a grid computing resource, and\/or any other distributed computing arrangement. Such computing devices  may be located in a single installation or may be distributed among many different geographical locations. For purposes of convenience, the computing device  is referred to herein in the singular. Even though the computing device is referred to in the singular, it is understood that a plurality of computing devices  may be employed in the various arrangements as described above.","Various applications and\/or other functionality may be executed in the computing device  according to various embodiments. Also, various data is stored in a data store  that is accessible to the computing device . The data store  may be representative of a plurality of data stores as can be appreciated. The data stored in the data store , for example, is associated with the operation of the various applications and\/or functional entities described below.","The components executed on the computing device , for example, include an electronic commerce system , a saved state service , an instrumentation engine , a developer interface , and other applications, services, processes, systems, engines, or functionality not discussed in detail herein. The electronic commerce system  is executed in order to facilitate the online purchase of items by customers over the network . The electronic commerce system  also performs various backend functions associated with the online presence of an application marketplace in order to facilitate the online purchase of applications as will be described. For example, the electronic commerce system  generates network pages, such as web pages or other types of network content that are provided to clients  for the purposes of selecting items for purchase, rental, download, lease, or other form of consumption as will be described.","In addition, the electronic commerce system  is executed in order to facilitate the online purchase of applications by customers from one or more application marketplaces  over the network . The application marketplace  embodies a network site that offers a multitude of applications for sale, download, purchase, and\/or lease by the users. The applications are offered in the application marketplace  by multiple developers. In one embodiment, developers may self-register for accounts with the application marketplace  and self-manage various offerings of applications in the application marketplace  by way of the developer interface .","The saved state service  is configured to generate a link  that installs and initializes an application in a desired state. In one embodiment, the saved state service  is configured to collect state parameters  from one or more applications that are executed in the user clients . For instance, each of the state parameters  may correspond to a user progress and\/or advancement with respect to an attribute of an application. In one embodiment, the state parameters  may describe anything relating to the state of the application. For instance, the state parameters  may describe an elapsed time since the application began executing in the user client , an amount of data generated by the execution of the application, and an indication of a location, user interface screen, or point that has been reached in the application. The state parameters  may include other data relating to system load, and\/or other information relating to the application status or that quantifies a state of the application.","The instrumentation engine  is configured to process applications obtained from developers to identify locations in the application where state parameters  are to be collected and to modify the application to include code that generates and reports the state parameters  to the saved state service . The developer interface  is configured to obtain applications from developer clients  to be offered in an application marketplace. To this end, the developer interface  may be configured to process the applications by way of the instrumentation engine  before offering the application in an application marketplace. The developer interface  and\/or the electronic commerce system  may include a commercially available hypertext transfer protocol (HTTP) server such as, for example, Apache\u00ae HTTP Server, Apache\u00ae Tomcat\u00ae, Microsoft\u00ae Internet Information Services (IIS), and so on.","The data stored in the data store  includes, for example, application data , state categories , state generation code , an application marketplace , and potentially other data. The application data  includes information describing the applications executed on the user client . For instance, the applications may be served up from the computing device , executed on the user client , and\/or executed on any other computing system. The application data  may include a unique identifier for the application , a listing of the application attributes , and\/or any other information related to the application . In one embodiment, the applications  may be served up by an application marketplace  that offers a multitude of applications  for sale, download, purchase, lease, etc., by users. Further, the applications  may be offered by multiple developers who may manage the various offerings of the applications  in the application marketplace  by way of the developer interface .","The applications  may be executed in the user client  and\/or served up to the user on the user client . An application  may be, for example, a game and\/or other types of applications. As non-limiting examples, an application  may comprise a game  such as, for instance, a first-person shooter game, an action game, an adventure game, a party game, a role-playing game, a simulation game, a strategy game, a vehicle simulation game, and\/or other types of games. Further, the application  may comprise a word processor, office management application, enterprise resource planning applications, and\/or any other type of application. The applications  may be designed for execution in a general-purpose computing device or in a specialized device such as, for example, a smartphone, a video game console, a handheld game device, an arcade game device, etc.","Additionally, the application data  also includes application attributes  that describe the application . In one embodiment, each one of the application attributes  may correspond to at least one of the state categories . Further, using the game example from above, the application attributes  for the game  may include a plurality of milestones , and\/or other indications of progress and\/or advancement within the application . In one embodiment, the milestones  may include a listing of various achievements that the user may reach by interacting with the game , such as, for instance, records, levels, and\/or any other type of accomplishment. For example, the game  may be a first-person shooter where the milestones  for the game  may include overcoming a threshold number of enemy fighters, uncovering a threshold number of clues, unlocking a threshold number of weapons, rescuing a threshold number of hostages, and\/or any other type of milestone.","The state categories  may include a listing of state categories  that are used by the saved state service  to characterize a state of the application . For instance, the state categories  may describe an amount of progress made in a particular instance of an application , an amount of data generated using the application , a nature of the data generated during the execution of the application , a plurality of settings used in executing the application , and\/or other state categories. In one embodiment, the saved state service  may generate a state parameter  for each one of the state categories  by measuring a user's progress with respect to a corresponding application attribute , as will be described.","The state generation code  corresponds to code that may be embedded, injected, or inserted into the applications  to generate the state parameters  of the application . The state generation code  may also be configured to report the state parameters  to the saved state service  upon generation, or periodically while the application  is executed in the user client . In one embodiment, the state generation code  may include various parameters to configure whether applications  are modified to generate state parameters , how often state parameters  are generated, how often state parameters  are reported, and\/or other aspects of state generation and collection. In one embodiment, the state generation code  may include predefined bytecode patterns, predefined source code patterns, predefined file offsets, or other data that identify locations within applications  where the state generation code  may be injected or inserted.","The user client  and the developer client  are each representative of a respective plurality of client devices that may be coupled to the network . The user client  and the developer client  may each comprise, for example, a processor-based system such as a computer system. Such a computer system may be embodied in the form of a desktop computer, a laptop computer, a personal digital assistant, a cellular telephone, set-top box, music players, web pads, tablet computer systems, game consoles, smart phones, electronic book readers, or other devices with like capability. The user client  may include a display , and the developer client  may include a display . The display ,  may comprise, for example, one or more devices such as cathode ray tubes (CRTs), liquid crystal display (LCD) screens, gas plasma-based flat panel displays, LCD projectors, or other types of display devices, etc.","The user client  may be configured to execute various applications such as a browser , an application , and\/or other applications. The browser  may be executed in the user client , for example, to access and render network pages , such as web pages, or other network content served up by the computing device  and\/or other servers. The user client  may be configured to execute an application  obtained from the computing device , where the application  has been modified to include state generation code  for generating and reporting state parameters  to the saved state service . The user client  may be configured to execute applications beyond the browser  such as, for example, email applications, instant message applications, and\/or other applications.","The developer client  may be configured to execute various applications such as a browser  and\/or other applications. The browser  may be executed in a developer client , for example, to access and render network pages , such as web pages, or other network content served up by the computing device  and\/or other servers. The developer client  may be configured to execute applications beyond the browser  such as, for example, mobile applications, software development and testing applications, email applications, instant message applications, and\/or other applications.","Next, a general description of the operation of the various components of the networked environment  is provided. In one embodiment, a user on a user client  executes an application , such as a game , and advances through the application to reach a particular state. For example, the user may reach a milestone  within the game , and\/or establish another application attribute  of the application . For instance, in reaching a particular state of the application , the user may have established application attributes  such as, for instance, settings for execution of the application , generated an amount of data generated by using various application attributes , and\/or any other aspect of the application that corresponds to at least one of the application attributes . In one embodiment, the user may wish to share the state of the application  to which the user has advanced. To this end, the user may transmit a request to the saved state service  from the user client  to generate a link  that may be communicated to another user to share the state of the application . In one embodiment, the saved state service  generates the link  by receiving a plurality of state parameters  that is determined by the state generation code  inserted within the application , as will be described.","To begin, a developer at a developer client  creates an application . The developer transfers the application  to the computing device  by way of the developer interface . In one example, the developer may specify whether the application  is to be modified to enable collection of state parameters . For instance, some applications  may operate with private and\/or confidential information that the developer may not want modified due to security concerns. In another example, the application  may be modified regardless of any developer input.","In some embodiments, the developer may specify, by way of an application programming interface (API), identifications of locations in the application  where state parameters  are to be generated. Additionally, the developer may specify what data is to be included in a state parameter . For instance, using the example from above, the application  may be a game . The developer may specify locations in the application  that include application attributes  corresponding to at least one of the state categories . In one embodiment, these application attributes  may include milestones , and\/or any other indications of progress that are associated with the game , as discussed above.","If the application  is to be modified, the instrumentation engine  profiles the application  code. In one embodiment, the instrumentation engine  may identify one or more locations in the application  where the application  is to be modified. For instance, the instrumentation engine  may parse the application  code to search for stored signatures, bytecode profiles, source code profiles, predefined file offsets, etc. The instrumentation engine  may automatically insert or inject code into the application  that corresponds to portions of the state generation code  for the purpose of generating and reporting state parameters . In one embodiment, the developer may flag certain code in the application  or make certain library and\/or function calls in order to indicate where the state generation code  is to be inserted.","In one embodiment, an application  may be modified such that a state parameter  is generated any time a user advances to reach a milestone , generates data using at least one of the application attributes , and\/or modifies a plurality of settings that correspond to at least one of the application attributes . The state parameters  may include various data about the progress and\/or advancement of the user in executing the application  on the user client . In particular, the state parameters  may correspond to session information regarding a current session of the application . In one embodiment, a session may correspond to an instance of the application  executed by the user on a particular user client .","The application  is configured to report the state parameters  back to the saved state service  that is executed in the computing device . The reporting may happen upon generation of a state parameter , after a batch of state parameters  is generated, periodically, relative to an event, or at another time. Additionally, the reporting may happen upon a request by the saved state service . For instance, after the saved state service  receives a request to the generate the link , the saved state service  may then request that the application  being executed on the user client  report the state parameters . In one embodiment, the state generation code  may be configured to delay reporting based on user client  system load, network load, and\/or status.","The modified application  is stored in the data store  and offered in the application marketplace . Users may access the application marketplace  using a browser  or other application and place an order for the application  using the electronic commerce system . Upon consummating the order, the electronic commerce system  facilitates a transfer of the modified application  to the user client . In various embodiments, the modified application  may be transferred over the network . In other embodiments, the modified application  may be sent by mail or courier through a computer-readable medium.","Users install the modified application  on one or more user clients , which may or may not be the same user client  through which the application  was obtained. The users execute instances of the modified application  in the user clients . The instances of the modified application  are configured to generate and report the state parameters  through the state generation code  as described above. For instance, the modified application  may report state parameters  corresponding to the user advancement and\/or progress in using the application . In one embodiment, the reported state parameters  may indicate the user advancement and\/or progress in completing the milestones , achieving a task by using an application attribute , and\/or performing any other indications of progress in the modified game . As an example, the milestone  identified by the developer for determining state parameters  may be a task for a game player in solving a mystery within a predetermined amount of time. The state generation code  in the modified game  may direct the modified game  to record user progress in accomplishing this milestone . For instance, the modified game  may record various points scored, an amount of money earned, a number of enemies subdued, another accomplishment in achieving this milestone , and\/or any other parameter related to the milestone . The state parameters  may then be reported to the saved state service  in an encrypted format or by way of an encrypted channel over the network . Thus, the state parameters  describe a current state of the instance of the application  being executed on the user client .","The saved state service  may process the state parameters  periodically or in response to an event. For instance, the saved state service  may process the state parameters  upon receiving a request to generate a link , such as, for example, a hyperlink. The saved state service  generates the link  that may then be shared with other users to install the application , and then initialize the application  to a state specified by the link . In one embodiment, the state specified or described by the link  corresponds to the state parameters  reported by the application  during execution on the user client . For instance, the saved state service  serializes the state parameters  to generate a unique character string representing each component of the state parameters . As understood by one of ordinary skill in the art, serialization refers to a process of converting a data structure or object state into a format that can be stored or transmitted and then \u201cresurrected\u201d later in the same or another computer environment. As a non-limiting example, the saved state service  may invoke a data interchange standard such as, for instance, JavaScript Object Notation (JSON), binary JSON, geographic JSON (GeoJSON), simple object access protocol (SOAP), and\/or any other standard for exchanging structured information, as can be appreciated. In one embodiment, the saved state service  may generate a look-up table that draws an association between the unique character string and the state parameters  reported by the application . The saved state service  then embeds the unique character string representing the serialized data into the link  and serve up the link  to the requesting user. For instance, the saved state service  may append the character string to a tail end of the characters comprising the link . In another embodiment, the link  describes the state by referring to a storage location in which the state parameters  are stored. The storage location may be, for example, the data store  or any storage location that is accessible via the network .","In one embodiment, the user then transmits the link  to one or more other users. For instance, the link  may be transmitted to the user via email, a network page , a text message, a quick response code, through a social network, and\/or any other mode of communication. Upon invoking the link , the application  referenced by the link  is installed on a recipient user client . Additionally, application  may then automatically initialize to reach a state defined by the link . For instance, the application  may be configured to de-serialize the unique character string embedded in the link  to determine the state parameters  that comprise the specified state. In one embodiment, the application  may transmit a request to the saved state service  to de-serialize the unique character string, and in response, receive a listing of the state parameters  for the specified state. For instance, the saved state service  may de-serialize the unique character string according to the data interchange standard used to generate the serialized data. Having de-serialized the unique character string, the saved state service  may then transmit the corresponding state parameters  to the application  executing on the recipient user client . In another embodiment, the saved state service  may reference a look-up table to determine the state parameters  that correspond to the unique character string. The application  may then adopt the state parameters  to reach the state intended to be shared.","The saved state service  may make links  from different applications  available to other users through an electronic marketplace. The links  presented by the marketplace to a particular user may be limited by a base geographic location that is specified by the saved state service . Such embodiments may be desirable when the game or other application  has relevance to a real world location. For example, some of the saved state parameters  may relate to the city of San Jose, Calif., where this location is captured at the time the state is saved.","Some embodiments filter saved state links by a marketplace user's current geographic location. In such embodiments, the marketplace presents to the user only those links  which are associated with locations within a predetermined area around the marketplace user's current location (e.g., a ten mile radius). The user's current geographic location may be determined, for example, through mechanisms such as a Global Positioning System (GPS), an assisted global positioning system (A-GPS), a wireless local area network (WiFi) positioning system, or a wireless network (WiMax) positioning system, or other mechanisms. Using the above example of a link  associated with San Jose, marketplace users in San Jose would see the link  as being available, while marketplace users outside of San Jose would not see this link .","Other embodiments allow a marketplace user to filter saved state links by a chosen geographic location, rather than the current geographic location. This allows a user in one location (e.g., Boston) to view links  relevant to a different location (e.g., San Jose). In this manner, a user planning to travel to San Jose can discover, while in Boston, what links  are available in San Jose.","Several example scenarios will now be described. As one example, a user on the client  may be playing a game , such as, for example, an automobile simulation video game. In playing the game , the user may have raced an automobile through a threshold number of tracks and\/or levels in the game  and unlocked a coveted prize, such as, for example, a rare automobile, a secret race track, a unique automobile body kit, and\/or any other in-game feature of the game . As such, the current state of the game  may include the unlocked and coveted prize. To share this state with another, the user may transmit a request to the saved state service  to generate a link  that, upon invocation, installs the game  and initializes the state to include the coveted prize upon invocation. The user may then share the generated link , such as, for instance, through a social network, as can be appreciated.","As another example, a user on the client  may execute a photo editing application  to edit a photograph, such as, for example, a scenic mountain. In editing the photograph, the user may have modified a number of photograph features and added a variety of after effects to the photograph. As such, the current state of the application  may include the photograph with the modifications and additions indicated by the user. To share this state with another, the user may transmit a request to the saved state service  to generate a link  that, upon invocation, installs the photo editing application  and initializes the application  to include a \u201clive\u201d version of the photograph being edited. For instance, the recipient user may be able to \u201cundo\u201d modifications to the photograph, enhance effects added to the photograph, and\/or otherwise edit the photograph.","As another example, a user on the client  may be executing a browser application  to browse a plurality of network pages , such as, for instance, network pages  served up by an electronic commerce system . In browsing the network pages , the user may have accumulated a robust browsing history, and may have a plurality of windows open in the browser . As such, the current state of the browser application  may include the browsing history and the windows. To share this state with another, the user may transmit a request to the saved state service  to generate a link  that, upon invocation, installs the browser application  and initializes the browser application  to adopt the browsing history and the windows. The recipient user may then be able to browse through the network pages  shared by sender, such as, for instance, manipulating a \u201cback\u201d navigation button to navigate the browsing history established by the sender.","In one embodiment, the saved state service  may generate a unique link  upon every request. For instance, the data interchange standard may indicate a new and unique character string for even a negligible change in the state parameters . In addition, the saved state service  may include a variety of security features to protect the integrity of the data referenced by the link . In one embodiment, the link  may be valid for a predetermined amount of time, for a predetermined number of invocations, for a predetermined geographic location, and\/or any other security feature. In another embodiment, the link  may be shared through secured modes of communication to ensure that the link  is shared to the intended users.","In some embodiments, installation of application  through a saved state link  has no effect on the state of the user responsible for generating the link. In such embodiments, the transfer of state has no effect on the state of the user who is the source of the saved state link . In other embodiments, the source user's state is affected when another user installs the application  through the saved state link . In some of these embodiments, uninstall through the saved stated link  results in the source user losing some or all of the state captured in the state parameters , so that the source user is returned to an initial state. For example, a user playing a game application  may return to game level zero. The loss of state may be temporary or permanent. For embodiments involving a temporary loss, the source user is returned to an initial state when the application  is installed by another user through the saved state link . At the end of a predetermined period, the source user is returned to the state before the transfer. Thus, in some embodiments the transfer of state may be viewed as a temporary loan of state, while in others the transfer may be permanent.","Referring next to , shown is a flowchart that provides one example of the operation of a portion of the developer interface  according to various embodiments. Specifically,  illustrates the addition of applications  (FIG. ) to an application marketplace. It is understood that the flowchart of  provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the developer interface  as described herein. As an alternative, the flowchart of  may be viewed as depicting an example of steps of a method implemented in the computing device  () according to one or more embodiments.","Beginning with box , the developer interface  obtains the application  from the developer at the developer client  (). In one embodiment, the developer interface  generates network page  () which includes upload functionality for the developer to upload the application . In another embodiment, the developer interface  obtains a specification of a uniform resource locator (URL) from the developer corresponding to the application , and the developer interface  may be configured to download the application  from that location. In still other embodiments, the application  may be loaded into the data store  () through other approaches (e.g., compact disc, flash drive, file transfer protocol (FTP), email, etc.). The application  may correspond to a binary file containing bytecode or object code. Alternatively, the application  may correspond to a script file or source code.","In box , the developer interface  launches the instrumentation engine  () to identify locations in the application  where state generation code  () is to be inserted. To this end, the instrumentation engine  may engage in static profiling based at least in part on predefined code patterns or signatures to identify locations in the application corresponding to user interface screens, game levels, user interface components, or other points in the application . In one embodiment, the instrumentation engine  may also be configured to perform runtime profiling on the application  to identify such locations.","In box , the instrumentation engine  inserts the state generation code  into the code of the application  at the identified locations. It is noted that the state generation code  may be specially configured depending on the type of state parameters  that is desired to be calculated and the location where it is inserted. Additionally, the instrumentation engine  modifies the application  to include state generation code  that reports the state parameters  that are generated.","In box , the developer interface  adds the modified version of the application  to the application marketplace. The application  may be made available for purchase and\/or download in response to customer orders via the electronic commerce system  (). Thereafter, the portion of the developer interface  ends.","Turning now to , shown is a flowchart that provides one example of the operation of a portion of the saved state service  according to various embodiments. It is understood that the flowchart of  provides merely an example of the many different types of functional arrangements that may be employed to implement the operation of the portion of the saved state service  as described herein. As an alternative, the flowchart of  may be viewed as depicting an example of steps of a method implemented in the computing device  () according to one or more embodiments.","Beginning with box , the saved state service  determines a current state of the application  () being executed on the user client  (). In one embodiment, the saved state service  determines the state from the state parameters  reported to the saved state service  during execution of the application . For instance, the application  may be a control system for monitoring an alarm system of a household. In one embodiment, the user may have established a plurality of settings for the control system to effectively protect the household, such as, for instance, timings for initiating the alarm system, emergency numbers, security codes and passphrases, and\/or any other setting of the control system. As such, the state of the application  includes the established settings of the application . In one embodiment, the state generation code  () inserted in the code of the application  reports the state parameters  defining the state of the application  to the saved state service .","Then, in box , the saved state service  generates a saved stated link  that, upon invocation, installs and initializes the application  in the current state. In one embodiment, the saved state service  serializes the state parameters  to generate a unique character string according to a data interchange standard. The saved state service  then generates the saved state link  by embedding the unique character string into the saved state link . For instance, the unique character string may be amended onto a tail end of the saved state link .","In box , the saved state service  transmits the saved state link  to the requesting process, such as, for example, a client side application implemented on the user client  (). In one embodiment, the saved state link  may be transmitted via an email message, and\/or another mode of communication. The recipient user may then invoke the saved state link  to install the application  and initialize the application  in the state indicated by the state parameters . Using the above example of the control system to monitor the alarm system, a customer may invoke the saved state link  to install the control system on the recipient user client and initialize the application  to adopt the previously established application settings.","With reference to , shown is a schematic block diagram of the computing device  according to an embodiment of the present disclosure. The computing device  includes at least one processor circuit, for example, having a processor  and a memory , both of which are coupled to a local interface . To this end, the computing device  may comprise, for example, at least one server computer or like device. The local interface  may comprise, for example, a data bus with an accompanying address\/control bus or other bus structure as can be appreciated.","Stored in the memory  are both data and several components that are executable by the processor . In particular, stored in the memory  and executable by the processor  are the electronic commerce system , the saved state service , the instrumentation engine , the developer interface , and potentially other applications. Also stored in the memory  may be a data store  and other data. In addition, an operating system may be stored in the memory  and executable by the processor .","It is understood that there may be other applications that are stored in the memory  and are executable by the processors  as can be appreciated. Where any component discussed herein is implemented in the form of software, any one of a number of programming languages may be employed such as, for example, C, C++, C#, Objective C, Java, Javascript, Perl, PHP, Visual Basic, Python, Ruby, Delphi, Flash, or other programming languages.","A number of software components are stored in the memory  and are executable by the processor . In this respect, the term \u201cexecutable\u201d means a program file that is in a form that can ultimately be run by the processor . Examples of executable programs may be, for example, a compiled program that can be translated into machine code in a format that can be loaded into a random access portion of the memory  and run by the processor , source code that may be expressed in proper format such as object code that is capable of being loaded into a random access portion of the memory  and executed by the processor , or source code that may be interpreted by another executable program to generate instructions in a random access portion of the memory  to be executed by the processor , etc. An executable program may be stored in any portion or component of the memory  including, for example, random access memory (RAM), read-only memory (ROM), hard drive, solid-state drive, USB flash drive, memory card, optical disc such as compact disc (CD) or digital versatile disc (DVD), floppy disk, magnetic tape, or other memory components.","The memory  is defined herein as including both volatile and nonvolatile memory and data storage components. Volatile components are those that do not retain data values upon loss of power. Nonvolatile components are those that retain data upon a loss of power. Thus, the memory  may comprise, for example, random access memory (RAM), read-only memory (ROM), hard disk drives, solid-state drives, USB flash drives, memory cards accessed via a memory card reader, floppy disks accessed via an associated floppy disk drive, optical discs accessed via an optical disc drive, magnetic tapes accessed via an appropriate tape drive, and\/or other memory components, or a combination of any two or more of these memory components. In addition, the RAM may comprise, for example, static random access memory (SRAM), dynamic random access memory (DRAM), or magnetic random access memory (MRAM) and other such devices. The ROM may comprise, for example, a programmable read-only memory (PROM), an erasable programmable read-only memory (EPROM), an electrically erasable programmable read-only memory (EEPROM), or other like memory device.","Also, the processor  may represent multiple processors  and the memory  may represent multiple memories  that operate in parallel processing circuits, respectively. In such a case, the local interface  may be an appropriate network  () that facilitates communication between any two of the multiple processors , between any processor  and any of the memories , or between any two of the memories , etc. The local interface  may comprise additional systems designed to coordinate this communication, including, for example, performing load balancing. The processor  may be of electrical or of some other available construction.","Although the electronic commerce system , the saved state service , the instrumentation engine , the developer interface , and other various systems described herein may be embodied in software or code executed by general purpose hardware as discussed above, as an alternative the same may also be embodied in dedicated hardware or a combination of software\/general purpose hardware and dedicated hardware. If embodied in dedicated hardware, each can be implemented as a circuit or state machine that employs any one of or a combination of a number of technologies. These technologies may include, but are not limited to, discrete logic circuits having logic gates for implementing various logic functions upon an application of one or more data signals, application specific integrated circuits having appropriate logic gates, or other components, etc. Such technologies are generally well known by those skilled in the art and, consequently, are not described in detail herein.","The flowcharts of  show the functionality and operation of an implementation of portions of the developer interface  and the saved state service , respectively. If embodied in software, each block may represent a module, segment, or portion of code that comprises program instructions to implement the specified logical function(s). The program instructions may be embodied in the form of source code that comprises human-readable statements written in a programming language or machine code that comprises numerical instructions recognizable by a suitable execution system such as a processor  in a computer system or other system. The machine code may be converted from the source code, etc. If embodied in hardware, each block may represent a circuit or a number of interconnected circuits to implement the specified logical function(s).","Although the flowcharts of  show a specific order of execution, it is understood that the order of execution may differ from that which is depicted. For example, the order of execution of two or more blocks may be scrambled relative to the order shown. Also, two or more blocks shown in succession in  may be executed concurrently or with partial concurrence. Further, in some embodiments, one or more of the blocks shown in  may be skipped or omitted. In addition, any number of counters, state variables, warning semaphores, or messages might be added to the logical flow described herein, for purposes of enhanced utility, accounting, performance measurement, or providing troubleshooting aids, etc. It is understood that all such variations are within the scope of the present disclosure.","Also, any logic or application described herein, including the electronic commerce system , the saved state service , the instrumentation engine  and the developer interface , that comprises software or code can be embodied in any non-transitory computer-readable medium for use by or in connection with an instruction execution system such as, for example, a processor  in a computer system or other system. In this sense, the logic may comprise, for example, statements including instructions and declarations that can be fetched from the computer-readable medium and executed by the instruction execution system. In the context of the present disclosure, a \u201ccomputer-readable medium\u201d can be any medium that can contain, store, or maintain the logic or application described herein for use by or in connection with the instruction execution system. The computer-readable medium can comprise any one of many physical media such as, for example, magnetic, optical, or semiconductor media. More specific examples of a suitable computer-readable medium would include, but are not limited to, magnetic tapes, magnetic floppy diskettes, magnetic hard drives, memory cards, solid-state drives, USB flash drives, or optical discs. Also, the computer-readable medium may be a random access memory (RAM) including, for example, static random access memory (SRAM) and dynamic random access memory (DRAM), or magnetic random access memory (MRAM). In addition, the computer-readable medium may be a read-only memory (ROM), a programmable read-only memory (PROM), an erasable programmable read-only memory (EPROM), an electrically erasable programmable read-only memory (EEPROM), or other type of memory device.","It should be emphasized that the above-described embodiments of the present disclosure are merely possible examples of implementations set forth for a clear understanding of the principles of the disclosure. Many variations and modifications may be made to the above-described embodiment(s) without departing substantially from the spirit and principles of the disclosure. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Many aspects of the present disclosure can be better understood with reference to the following drawings. The components in the drawings are not necessarily to scale, emphasis instead being placed upon clearly illustrating the principles of the disclosure. Moreover, in the drawings, like reference numerals designate corresponding parts throughout the several views.",{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 4","FIG. 1"]}]},"DETDESC":[{},{}]}
