---
title: Application programming interface (API) for navigation applications that merges incremental updates with existing map database
abstract: A system and method for efficiently updating the map database in a mobile computing system, such as a vehicle navigation system. The system includes a central server that computes changes between the latest version of a master map database and a previous version of the map database, and wirelessly transmits the changes to participating vehicles' onboard navigation systems. The navigation system stores the changes in a look-aside buffer, and a navigation processor uses the stored changes to update a base map database.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09304005&OS=09304005&RS=09304005
owner: GM Global Technology Operations LLC
number: 09304005
owner_city: Detroit
owner_country: US
publication_date: 20091204
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE EMBODIMENTS"],"p":["1. Field of the Invention","This invention relates generally to a system and method for updating map databases used in mobile computer-based applications and, more particularly, to a system and method for incrementally updating a map database used in a vehicle navigation system that includes computation of the changes between the latest version of a master map database and a previous version of the map database, transmission of those changes to participating vehicles' onboard navigation systems, and using those changes with a base onboard map database for navigation purposes.","2. Discussion of the Related Art","Many modern mobile computing applications rely on an accurate road map database to perform their functions. One of the most common such applications is an onboard vehicle navigation system, but there are others, such as active vehicle safety systems and driver assistance systems. These mobile computing applications are delivered to the consumer pre-loaded with a current map database. However, changes to the map data are inevitable as roads are added or changed, intersections are added or modified, temporary road closures and detours are implemented, data errors are discovered and corrected, new points of interest arise, and so forth. The need exists for an efficient way of updating the mobile map databases to reflect these changes; without such updates, the mobile map databases will become increasingly inaccurate over time, as changes to the road system accumulate.","Updating the map database in many thousands or millions of mobile computing systems is typically problematic. One method of doing so is to automatically download a complete new database to the mobile computing systems periodically. This approach is prohibitively slow, because the bandwidth for wireless transmission is low and the size of the databases is large. An alternative is to send out a physical computer disk (CD or DVD) to the owners of all applicable mobile computing systems and ask the owners to install the new database. This approach is costly and unreliable.","Another alternative is to automatically download just the incremental changes of the map database to the participating mobile computing systems periodically. This approach has the advantages of being automatic and minimizing wireless bandwidth consumption. But until now, the efficient real-time usage of the change data in conjunction with the base map data has not been possible. The identification reference numbers of road segments and intersections often change from one version of a master map database to the next version, so it is not possible to simply merge the changes with the baseline map data in the mobile device. Another reason a simple merge is not possible is because the map databases are heavily indexed\u2014by geography, connectivity, and so forth\u2014to improve search performance, so if new data were inserted the entire database would have to be re-indexed. Further, such re-indexing is not practical in typical mobile computing devices, such as vehicle navigation systems, because those systems do not have the computational power necessary for the task. In order to make possible the use of incremental map change data in mobile computing devices, a new methodology of storing the changes and re-integrating them in real time with the base map data is needed.","In accordance with the teachings of the present invention, a system and method are disclosed for efficiently updating the map database in a mobile computing system, such as a vehicle navigation system. The system includes a central server that computes changes between the latest version of a master map database and a previous version of the map database, and wirelessly transmits the changes to participating vehicles' onboard navigation systems. The navigation system stores the changes in a look-aside buffer, and a navigation processor uses the stored changes to update a base map database.","Additional features of the present invention will become apparent from the following description and appended claims, taken in conjunction with the accompanying drawings.","The following discussion of the embodiments of the invention directed to a system and method for incrementally updating map databases used in mobile computer-based applications is merely exemplary in nature, and is in no way intended to limit the invention or its applications or uses. For example, the present invention has particular application for a vehicle navigation system. However, as will be appreciated by those skilled in the art, the system and method of the invention may be used for other applications including other navigation system applications or non-navigation system applications.","The present invention proposes a system and method for incrementally updating map databases used in mobile computer-based applications, and efficiently using this updated data in real time for the mobile device's intended application, for example, a vehicle navigation system. In order to efficiently use incremental map changes in a vehicle navigation system, it is first necessary to accurately and succinctly determine exactly what changes have occurred in the master map data. Map databases are provided by companies which specialize in maintaining and publishing such data, but these companies do not currently provide their customers with data in the form of map changes only. Rather, the companies simply provide their customers with a full new version of the map database periodically. Thus, it is left to the customer (the maker of the mobile computing system, or more specifically, the vehicle navigation system) to parse out exactly what has changed between one version of a map database and the next version.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 1","FIG. 1"],"b":["10","10","12","12","14","1","16","2","2","1","2","1","12"]},"The map databases  and  are sent to a change comparison processor  in the server  that determines the differences between the two versions of the map databases  and . The processor  uses any suitable algorithm that is able to identify index changes, reference number changes, etc. in the map databases  and  and is able to isolate those changes. The processor  is able to identify changes between any two versions of the map database, and not just necessarily two consecutive versions of the map database. The processor  generates transaction files  identifying the changes between the various versions of the map databases stored on the server . Each transaction file  generated by the processor  will have an identification number associated with it so that the specific changes between any two versions can be identified by the vehicles.","The transaction files  are sent to a distribution tower  that wirelessly broadcasts the various transaction files  to be received by the many vehicles who can then update their map database on-board. The particular vehicle will know which version of the map database it has and from that will be able to tell which transaction file  it should receive and process so that it can download the proper transaction file for its version of the map database.","Once the map database changes have been parsed out and transmitted, the mobile computing devices need to be able to receive the map change data, store it, and use it for navigation.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2","b":["30","32","34","30","34","20","30","36","36","36","38","40","38","36","40","38","36","40"]},"The navigation processor  is programmed to efficiently re-construct the latest configuration of the map data from the base map data and the incremental change data that reside in the memory cache , in a manner that is the inverse of that described previously for . For example, if the memory cache  currently contains data from the base map database  for an item named Road Segment #567 indicating that this is a two-lane road, and there is a change record from the look-aside buffer  which indicates that Road Segment #567 has been changed from a two-lane road to a four-lane road, the navigation processor  will understand that it should represent Road Segment #567 as a four-lane road. Similar logic can be used to account for any other changes, additions, or deletions that may occur as road map databases are updated over time.","The foregoing discussion discloses and describes merely exemplary embodiments of the present invention. One skilled in the art will readily recognize from such discussion and from the accompanying drawings and claims that various changes, modifications and variations can be made therein without departing from the spirit and scope of the invention as defined in the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 2","FIG. 1"]}]},"DETDESC":[{},{}]}
