---
title: Extensibility integrated development environment for business object extension development
abstract: In one aspect, there is provided a computer-implemented method. The method may including selecting an existing business object for extension in an extensibility integrated development system; generating, in the extensibility integrated development system, a page highlighting one or more nodes of the existing business object to allow selection of the one or more nodes for modification; selecting, in the extensibility integrated development system, at least one of the one or more nodes, when highlighted; modifying, in the extensibility integrated development system, the selected one or more nodes by adding at least one attribute to the at least one of the selected one or more nodes; and storing, in a repository, the modified node including the added at least one attribute. Related apparatus, systems, methods, and articles are also described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08869105&OS=08869105&RS=08869105
owner: SAP AG
number: 08869105
owner_city: Walldorf
owner_country: DE
publication_date: 20111117
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present disclosure generally relates to data processing.","A business application may be used in connection with a business process. When this is the case, the business application may implement the business processes by modeling business data as structured data object used in connection with the business process. A business object is an example of such structured data. The business object(s) may be presented, or made available, via a user interface (e.g., as a user interface presenting a form, a report, and the like).","To facilitate implementation, a business application may be provided to an entity, such as a user, with a predetermined set of business objects. As noted, the business application may be used in connection with the business process, which may access (and\/or generate) business data structured as a business object. A business object may be implemented as an object representing a business domain supported by the business application. For example, a sales order entry business application may have one or more business objects associated with the sales order entry process (e.g., sales orders, line items, and sales orders being processed, deliveries of items ordered, revenue, and the like). The business object may also include methods (e.g., one or more functions and\/or business logic) and data (e.g., attributes), which may also provide standardized, domain-specific access interfaces to the data and\/or methods. Business objects may be associated with other business objects to enable exchanges of information among the business objects.","In one aspect, there is provided a computer-implemented method. The method may include selecting an existing business object for extension in an extensibility integrated development system; generating, in the extensibility integrated development system, a page highlighting one or more nodes of the existing business object to allow selection of the one or more nodes for modification; selecting, in the extensibility integrated development system, at least one of the one or more nodes, when highlighted; modifying, in the extensibility integrated development system, the selected one or more nodes by adding at least one attribute to the at least one of the selected one or more nodes; and storing, in a repository, the modified node including the added at least one attribute.","In some implementations, one of more variations may be made as well as described in the detailed description below and\/or as described in the following features. The existing business object may be selected at a user interface from a repository including a plurality of business objects delivered with an enterprise resource planning system. The extensibility integrated development system may generate a hyper text markup language page highlighting the one or more nodes of the existing business object, when configured during design time to allow selection and modification. An indication of a selection of at least one of the highlighted one or more nodes may be received from a user interface. A data type attribute may be added to the at least one of the highlighted nodes. An item may be added to the at least one of the highlighted nodes. The extensibility integrated development system may include a script-based editor coupled to a metadata repository. The extensibility integrated development system may include a script-based editor coupled to a metadata repository and a language service for providing the highlighting.","It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive. Further features and\/or variations may be provided in addition to those set forth herein. For example, the implementations described herein may be directed to various combinations and subcombinations of the disclosed features and\/or combinations and subcombinations of several further features disclosed below in the detailed description.","Like labels are used to refer to same or similar items in the drawings.","As noted above, although the business application may be delivered to the business entity with a set of business objects developed by the developer of the business application, in some implementations the business application may be required to allow other entities, such as third-party developers, consultants, end-users, and the like, to participate in software development. This software development may include the development of new business objects and the development of extensions to existing business object. An extension refers to modifying (e.g., adding) an aspect of an existing business object to form another, business object. For example, an extended sales business object A may be formed by adding a data field, a method, and\/or a data type of an existing, sales order business object A.","To facilitate extensions, the subject matter described herein enables the extension of existing business objects. For example, business objects in a standard software package may be extended to allow a third-party software developer or customer to deliver add-ons to business objects. Moreover, an extensibility integrated development environment (IDE) may be provided to facilitate the development of these business object extensions. Moreover, the extensibility integrated development environment (IDE) may be configured to access and thus modify the standard, un-extended fields of business objects, the extended fields of extended business objects, or a combination of both.","In some implementations, there is provided a system for using an extensibility integrated development environment to define extension fields to business objects. The extensibility integrated development environment for defining extension fields may be based on a script-based or a descriptive language, such as a business object extension language.","In some implementations, the extensibility integrated development environment combines the definition of one or more extension fields with their usage in forms and analytical reports used in connection with a user interface. In some implementations, the extensibility integrated development environment may be accessed via a generic application programming interface to allow storage of the extension fields including any corresponding attributes\/properties.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1A","b":["100","112","100","105","108","114","120","124","126","120","122","122"]},"The user interfaces A-B may be implemented as any mechanism enabling interaction with the data and\/or methods at system . For example, user interface A-B may be implemented as a browser or a thin client application. In the implementation of , the user interface A represents a user interface used during design time to develop extensions to business objects, while user interface B represents a user interface used during runtime.","During design time, user interface A may be used by a user to access the business object modeling tool . The business object modeling tool  may be configured to allow the developer of a business application to develop and\/or access business objects stored in the business object repository B. In some implementations, the business object modeling tool  may include reporting analytic design time tools, a user interface designer component for designing and configuring reports\/forms, a workbench, dashboards, and the like.","The business object modeling tool  may provide a mechanism for building (e.g., developing, defining, etc.) models, such as metamodels, and user interface elements used when building forms and analytic reports for the development entities. For example, the business object modeling tool  may use a model stored at repository  to enable a user to build, during design time, forms, and reports. For example, the defined model may define a report, such as a configured spreadsheet or word processing document, while an analytic report may model a more complex pivot table presented at a user interface. Once defined during design time, these models are then used during runtime to determine the configuration and contents of the form and\/or analytic report.","During design time, the user interface A may also be used to access the extensibility integrated development environment . The extensibility integrated development environment  provides a development system configured to operate with a development language or script that facilitates extending the definition of business objects. Moreover, the extensibility integrated development environment  may be implemented in accordance with an easy to learn, descriptive language for the definition of extension fields. The extensibility integrated development environment enables business objects and attributes to be extended and stored, via field extensibility application programming interface , in business object extensions repository A.","During runtime, user interface B instantiates a consumption client  and sends a message to the field extensibility runtime engine . The field extensibility runtime engine  executes both the standard (un-extended) business object and the extensions developed using the extensibility integrated development environment  and stored in the business object extension repository A. The executed business objects may be used to generate, during runtime, forms, analytical reports, and other elements presented as a page at user interface . Alternatively, forms and reports may be built as separate instances during design time, and the extensibility IDE extends the forms and reports.","To illustrate an example of business objects, the following provides a brief description of . An employee business object  can include a root node  as well as a description node  describing attributes of the employee. An item node  can link to another business object, such as for example a work agreement business object  that includes a root node  as well as a name node  and a description node  that describes describing aspects of the employee's work agreement. The employee business object  can also link to another business object , such as for example an expense report business object. The business object  may include its own root node  and an address node  describing attributes of the business object . Business object  and  may also be associated with other business objects, such as for example business objects  and , as depicted at . Although  depicts business objects representing employee data and a work agreement, other types of business objects may be used as well.","In the example of , the business object modeling tool  may be used, during design time, to develop the business objects and their attributes. These attributes may include data, methods, such as business logic\/methods, data types, and the like. Moreover, the extensibility integrated development environment  may be used to extend existing business objects and their existing attributes. To illustrate the extensibility integrated development environment , the following description will refer to the examples depicted at ,  and .",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 2","FIG. 2","FIG. 2"],"b":["202","105","112","105","112","205","112","210","122","112"]},"Once the development of \u201cSalesOrderExtension1.xbo\u201d is initiated, the extensibility integrated development environment , which is accessed via user interface A, enables the development of the extension to the selected business object.  depicts that the user interface A accesses the extensibility integrated development environment  to select the \u201cSalesOrderExtension1.xbo\u201d as depicted by page  (which may be presented at user interface A).","Next, the extensibility integrated development environment  generates page  in an editor of the extensibility integrated development environment , which is then presented at user interface A during design time. In some implementations, the editor is implemented a script-based editor, although other types of editors may be used as well. Page  depicts the Sales Order business object obtained from business object repository B and enables the user interface to select nodes for modification so that the selected nodes can be configured with additional attributes. In the example of , the extensibility integrated development environment  allows the business object node  to be selected for extension and its attributes  and  to be modified by user interface A during design time. For example, user interface  may be used to access the extensibility integrated development environment  to select only attributes , and .","Once selected, the user interface A and the extensibility integrated development environment  enable the definition of extensions to the selected attribute. For example, keyword business object  may be selected to allow changes to the business object in the namespace, \u201cSAP.CRM.Global.\u201d The attribute  may be selected to allow selection of a data type, and attribute  may be selected to allow defining an extension, such as the element \u201cExtItem1:Text.\u201d The script-based operating framework of the extensibility integrated development environment  enables extensions to be defined readily using descriptive terms as depicted at . Once the highlighted node  and attributes  and  are defined, the extended business object, \u201cSalesOrderExtension1.xbo,\u201d is stored by the extensibility integrated development environment  in business object repository A for use during runtime.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 4"},"At , a file including one or more business objects may be defined for storage as an extended business object. For example, during design time, a business object may be configured to allow selection to enable an extension of one or more attributes of the business objects. Moreover, the extensions may be stored in a server-side repository and\/or a client side store.","At , an existing business object node is selected for extension in the extensibility integrated development environment. For example, a page, such as page  depicted at , may be generated by the extensibility integrated development environment, and then presented in user interface A. The page may include one or more existing business objects, such as those stored in repository B and delivered by the developer of the business application.","At , a page is generated highlighting existing business object nodes that have been enabled for modification in the extensibility integrated development environment. For example, the extensibility integrated development environment  may generate page  and then highlight business object node  as having been configured for extension within the extensibility integrated development environment . At , at least one of the highlighted business objects nodes may then be selected. For example, a user interface presenting page  may receive an indication (e.g., a double click and the like) indicating that business object node  has been selected.","At , the selected node is modified by adding an attribute. For example, the selected node  may be modified by adding attributes using the extensibility integrated development environment. For example, a name space of the node  may be added at  by an end-user and\/or third party developer in the extensibility integrated development environment . The attributes  and  may be added to node .","At , the modified business object node including the added attributed is stored in a repository including other extensions to business objects. For example, the extensibility integrated development environment  may store the modified node  including added attributes  and  in the extensibility repository A for use during runtime.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 5","b":["500","505","500","510","510","500","520","530","500","545","500","560","565"]},"Various implementations of the subject matter described herein may be realized in digital electronic circuitry, integrated circuitry, specially designed ASICs (application specific integrated circuits), computer hardware, firmware, software, and\/or combinations thereof. These various implementations may include implementation in one or more computer programs that are executable and\/or interpretable on a programmable system including at least one programmable processor, which may be special or general purpose, coupled to receive data and instructions from, and to transmit data and instructions to, a storage system, at least one input device, and at least one output device.","These computer programs (also known as programs, software, software applications, or code) include machine instructions for a programmable processor, and may be implemented in a high-level procedural and\/or object-oriented programming language, and\/or in assembly\/machine language. As used herein, the term \u201cmachine-readable medium\u201d refers to any computer program product, apparatus and\/or device (e.g., magnetic discs, optical disks, memory, Programmable Logic Devices (PLDs)) used to provide machine instructions and\/or data to a programmable processor, including a machine-readable medium that receives machine instructions.","To provide for interaction with a user, the subject matter described herein may be implemented on a computer having a display device (e.g., a CRT (cathode ray tube) or LCD (liquid crystal display) monitor) for displaying information to the user and a keyboard and a pointing device (e.g., a mouse or a trackball) by which the user may provide input to the computer. Other kinds of devices may be used to provide for interaction with a user as well; for example, feedback provided to the user may be any form of sensory feedback (e.g., visual feedback, auditory feedback, or tactile feedback); and input from the user may be received in any form, including acoustic, speech, or tactile input.","The subject matter described herein may be implemented in a computing system that includes a back-end component (e.g., as a data server), or that includes a middleware component (e.g., an application server), or that includes a front-end component (e.g., a client computer having a graphical user interface or a Web browser through which a user may interact with an implementation of the subject matter described herein), or any combination of such back-end, middleware, or front-end components. The components of the system may be interconnected by any form or medium of digital data communication (e.g., a communication network). Examples of communication networks include a local area network (\u201cLAN\u201d), a wide area network (\u201cWAN\u201d), and the Internet.","Although a few variations have been described in detail above, other modifications are possible. For example, while the descriptions of specific implementations of the current subject matter use employee data to illustrate the examples above, the current subject matter is applicable to other types of data as well. Furthermore, the phrases \u201cbased on\u201d and \u201cbased on at least\u201d are used interchangeably herein as both phrases are equivalent. Moreover, although the above description refers to specific products, other products may be used as well. In addition, the logic flows depicted in the accompanying figures and described herein do not require the particular order shown, or sequential order, to achieve desirable results. Other embodiments may be within the scope of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":["In the drawings,",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
