---
title: Computerized gaming system, method and apparatus
abstract: The present invention in various embodiments provides a computerized wagering game method and apparatus that features an operating system kernel, a system handler application that loads and executes gaming program shared objects and features nonvolatile storage that facilitates sharing of information between gaming program objects. The system handler of some embodiments further provides an API library of functions callable from the gaming program objects, and facilitates the use of callback functions on change of data stored in nonvolatile storage. The nonvolatile storage also provides a nonvolatile record of the state of the computerized wagering game, providing protection against loss of the game state due to power loss. The system handler application in various embodiments includes a plurality of device handlers, providing an interface to selected hardware and the ability to monitor hardware-related events.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07988559&OS=07988559&RS=07988559
owner: IGT
number: 07988559
owner_city: Reno
owner_country: US
publication_date: 20010308
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","NOTICE OF CO-PENDING APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION","Definitions"],"p":["The invention relates generally to computerized gaming systems, and more specifically to a game code and operating system method and apparatus for use within computerized gaming systems.","This application is related to co-pending application Ser. No. 09\/405,921 filed Sep. 24, 1999, and to co-pending application Ser. No. 09\/520,405, filed Mar. 8, 2000, which are hereby incorporated by reference.","Games of chance have been enjoyed by people for thousands of years and have enjoyed increased and widespread popularity in recent times. As with most forms of entertainment, players enjoy playing a wide variety of games and new games. Playing new games adds to the excitement of \u201cgaming.\u201d As is well known in the art and as used herein, the term \u201cgaming\u201d and \u201cgaming devices\u201d are used to indicate that some form of wagering is involved, and that players must make wagers of value, whether actual currency or some equivalent of value, e.g., token or credit.","One popular game of chance is the slot machine. Conventionally, a slot machine is configured for a player to wager something of value, e.g., currency, house token, established credit or other representation of currency or credit. After the wager has been made, the player activates the slot machine to cause a random event to occur. The player wagers that particular random events will occur that will return value to the player. A standard device causes a plurality of reels to spin and ultimately stop, displaying a random combination of some form of indicia, for example, numbers or symbols. If this display contains one of a pre-selected plurality of winning combinations, the machine releases money into a payout chute or increments a credit meter by the amount won by the player. For example, if a player initially wagered two coins of a specific denomination and that player achieved a payout, that player may receive the same number or multiples of the wager amount in coins of the same denomination as wagered.","There are many different formats for generating the random display of events that can occur to determine payouts in wagering devices. The standard or original format was the use of three reels with symbols distributed over the face of the wheel. When the three reels were spun, they would eventually each stop in turn, displaying a combination of three symbols (e.g., with three wheels and the use of a single payout line as a row in the middle of the area where the symbols are displayed). By appropriately distributing and varying the symbols on each of the reels, the random occurrence of predetermined winning combinations can be provided in mathematically predetermined probabilities. By clearly providing for specific probabilities for each of the pre-selected winning outcomes, precise odds that would control the amount of the payout for any particular combination and the percentage return on wagers for the house could be readily controlled.","Other formats of gaming apparatus that have developed in a progression from the pure slot machine with three reels have dramatically increased with the development of video gaming apparatus. Rather than have only mechanical elements such as wheels or reels that turn and stop to randomly display symbols, video gaming apparatus and the rapidly increasing sophistication in hardware and software have enabled an explosion of new and exciting gaming apparatus. The earlier video apparatus merely imitated or simulated the mechanical slot games in the belief that players would want to play only the same games. Early video games therefore were simulated slot machines. The use of video gaming apparatus to play new games such as draw poker and Keno broke the ground for the realization that there were many untapped formats for gaming apparatus. Now casinos may have hundreds of different types of gaming apparatus with an equal number of significant differences in play. The apparatus may vary from traditional three reel slot machines with a single payout line, video simulations of three reel video slot machines, to five reel, five column simulated slot machines with a choice of twenty or more distinct paylines, including randomly placed lines, scatter pays, or single image payouts. In addition to the variation in formats for the play of games, bonus plays, bonus awards, and progressive jackpots have been introduced with great success. The bonuses may be associated with the play of games that are quite distinct from the play of the original game, such as the video display of a horse race with \u201cbets\u201d on the individual horses randomly assigned to players that qualify for a bonus, the spinning of a random wheel with fixed amounts of a bonus payout on the wheel (or simulation thereof), or attempting to select a random card that is of higher value than a card exposed on behalf of a virtual \u201cdealer.\u201d","Examples of such gaming apparatus with a distinct bonus feature includes U.S. Pat. Nos. 5,823,874; 5,848,932; 5,836,041; U.K. Patent Nos. 2 201 821 A; 2 202 984 A; and 2 072 395A; and German Patent DE 40 14 477 A1. Each of these patents differ in fairly subtle ways as to the manner in which the bonus round is played. British patent 2 201 821 A and DE 37 00 861 A1 describe a gaming apparatus in which after a winning outcome is first achieved in a reel-type gaming segment, a second segment is engaged to determine the amount of money or extra games awarded. The second segment gaming play involves a spinning wheel with awards listed thereon (e.g., the number of coins or number of extra plays) and a spinning arrow that will point to segments of the wheel with the values of the awards thereon. A player will press a stop button and the arrow will point to one of the values. The specification indicates both that there is a level of skill possibly involved in the stopping of the wheel and the arrow(s), and also that an associated computer operates the random selection of the rotatable numbers and determines the results in the additional winning game, which indicates some level of random selection in the second gaming segment.","U.S. Pat. Nos. 5,823,874 and 5,848,932 describe a gaming device comprising: a first, standard gaming unit for displaying a randomly selected combination of indicia, said displayed indicia selected from the group consisting of reels, indicia of reels, indicia of playing cards, and combinations thereof; means for generating at least one signal corresponding to at least one select display of indicia by said first, standard gaming unit; means for providing at least one discernible indicia of a mechanical bonus indicator, said discernible indicia indicating at least one of a plurality of possible bonuses, wherein said providing means is operatively connected to said first, standard gaming unit and becomes actuatable in response to said signal. In effect, the second gaming event simulates a mechanical bonus indicator such as a roulette wheel or wheel with a pointing element.","A video terminal is another form of gaming device. Video terminals operate in the same manner as a conventional slot and video machine, except that a redemption ticket rather than an immediate payout is dispensed.","The vast array of electronic video gaming apparatus that is commercially available is not standardized within the industry or necessarily even within the commercial line of apparatus available from a single manufacturer. One of the reasons for this lack of uniformity or standardization is the fact that the operating systems that have been used to date in the industry are primitive. As a result, the programmer must often create code for each and every function performed by each individual apparatus.","Attempts have been made to create a universal gaming engine for a gaming machine and is described in Carlson U.S. Pat. No. 5,707,286. This patent describes a universal gaming engine that segregates the random number generator and transform algorithms so that this code need not be rewritten or retested with each new game application. All code that is used to generate a particular game is contained in a rule EPROM in the rules library . Although the step of segregating random number generator code and transform algorithms has reduced the development time of new games, further improvements are needed.","One significant economic disadvantageous feature with commercial video wagering gaming units that maintains an artificially high price for the systems in the market is the use of unique hardware interfaces in the various manufactured video gaming systems. The different hardware, the different access codes, the different pin couplings, the different harnesses for coupling of pins, the different functions provided from the various pins, and the other various and different configurations within the systems has prevented any standard from developing within the technical field. This is advantageous to the equipment manufacturer, because the games for each system are provided exclusively by a single manufacturer, and the entire systems can be readily obsoleted, so that the market will have to purchase a complete unit rather than merely replacement software, and aftermarket game designers cannot easily provide a single game that can be played on different hardware.","The invention of computerized gaming systems that include a common or \u201cuniversal\u201d video wagering game controller that can be installed in a broad range of video gaming apparatus without substantial modification to the game controller has made possible the standardization of many components and of corresponding gaming software within gaming systems. Such systems desirably will have functions and features that are specifically tailored to the unique demands of supporting a variety of games and gaming apparatus types, and doing so in a manner that is efficient, secure, and cost-effective to operate.","What is desired is an architecture and method providing a gaming-specific platform that features reduced game development time and efficient game operation, provides security for the electronic gaming system, and does so in a manner that is cost-effective for game software developers, gaming apparatus manufacturers, and gaming apparatus users. An additional advantage is that the use of the platform will speed the review and approval process for games with the various gaming agencies, bringing the games to market sooner.","The present invention in various embodiments provides a computerized wagering game method and apparatus that features an operating system kernel that may include selected device handlers that are disabled or removed. The present invention features a system handler application that is part of the operating system. The system handler loads and executes gaming program objects and features nonvolatile storage that facilitates sharing of information between gaming program objects. The system handler of some embodiments further provides an API library of functions callable from the gaming program shared objects, and facilitates the use of callback functions on change of data stored in a nonvolatile storage. A nonvolatile record of the state of the computerized wagering game is stored on the nonvolatile storage, providing protection against loss of the game status due to power loss. The system handler application in various embodiments includes a plurality of handlers, providing an interface to selected hardware and the ability to monitor hardware-related events.","In the following detailed description of sample embodiments of the invention, reference is made to the accompanying drawings which form a part hereof, and in which is shown by way of illustration specific sample embodiments in which the invention may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice the invention, and it is to be understood that other embodiments may be utilized and that logical, mechanical, electrical, and other changes may be made without departing from the spirit or scope of the present invention. The following detailed description is, therefore, not to be taken in a limiting sense, and the scope of the invention is defined only by the appended claims.","For purposes of this disclosure, the following terms have specialized meaning, and are defined below:","\u201cMemory\u201d for purposes of this disclosure is defined as any type of media capable of read\/write capability. Examples of memory are RAM, tape and floppy disc.","\u201cShared Objects\u201d for purposes of this disclosure are defined as self-contained, functional units of game code that define a particular feature set or sequence of operation for a game. The personality and behavior of a gaming machine of the present invention are defined by the particular set of shared objects called and executed by the operating system. Within a single game, numerous shared objects may be dynamically loaded and executed. This definition is in contrast with the conventional meaning of a shared object, which typically provides an API to multiple programs.","\u201cArchitecture\u201d for purposes of this disclosure is defined as software, hardware or both.","\u201cDynamic Linking\u201d for purposes of this disclosure is defined as linking at run time.","\u201cAPI\u201d for purposes of this disclosure is an Application Programming Interface. The API includes a library of functions.","\u201cSystem Handler\u201d for purposes of this disclosure is defined as a collection of code written to control non-game specific device handlers. Examples of device handlers include I\/O, sound, video, touch screen, nonvolatile RAM and network devices.","\u201cGaming Data Variables\u201d for purposes of this disclosure includes at a minimum any or all data needed to reconstruct the game state in the event of a power loss.","\u201cGame.State File\u201d for purposes of this disclosure is a template for creating a look-up list of information stored in NV RAM.","The present invention provides a computerized gaming system method and apparatus that have novel gaming-specific features that improve security, make development of game code more efficient, and do so using an apparatus and software methods that are cost-effective and efficient. The present invention also reduces the amount of effort required to evaluate and review new game designs by gaming regulators, because the amount of code to be reviewed for each game is reduced by as much as 80% over known, machine-specific architecture. The invention provides, in various embodiments, features such as a nonvolatile memory for storing gaming application variables and game state information, provides a shared object architecture that allows individual game objects to be loaded and to call common functions provided by a system handler application, and in one embodiment provides a custom operating system kernel that has selected device handlers disabled.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 1","b":["100","101","102","103","104","105","105","106","107","101","108"]},"The gaming system  further comprises a computerized game controller  and I\/O interface , connected via a wiring harness . The universal game controller  need not have its software or hardware designed to conform to the interface requirements of various gaming system user interface assemblies, but can be designed once and can control various gaming systems via the use of machine-specific I\/O interfaces  designed to properly interface an input and\/or output of the universal computerized game controller to the harness assemblies found within the various gaming systems.","In some embodiments, the universal game controller  is a standard IBM Personal Computer-compatible (PC compatible) computer. Still other embodiments of a universal game controller comprise general purpose computer systems such as embedded controller boards or modular computer systems. Examples of such embodiments include a PC compatible computer with a PC\/ bus that is an example of a modular computer system that features a compact size and low power consumption while retaining PC software and hardware compatibility. The universal game controller  provides all functions necessary to implement a wide variety of games by loading various program code on the universal controller, thereby providing a common platform for game development and delivery to customers for use in a variety of gaming systems. Other universal computerized game controllers consistent with the present invention may include any general-purpose computers that are capable of supporting a variety of gaming system software, such as universal controllers optimized for cost effectiveness in gaming applications or that contain other special-purpose elements yet retain the ability to load and execute a variety of gaming software. Examples of special purpose elements include elements that are heat resistant and are designed to operate under less than optimal environments that might contain substances such as dust, smoke, heat and moisture. Special purpose elements are also more reliable when used 24 hours per day, as is the case with most gaming applications.","The computerized game controller of some embodiments is a computer running an operating system with a gaming application-specific kernel. In further embodiments, a game engine layer of code executes within a non-application specific kernel, providing common game functionality. The gaming program shared object in such embodiments is therefore only a fraction of the total code, and relies on the game engine layer and operating system kernel to provide a library of gaming functions. A preferred operating system kernel is the public domain Linux 2.2 kernel available on the Internet. Still other embodiments will have various levels of application code, ranging from embodiments containing several layers of game-specific code to a single-layer of game software running without an operating system or kernel but providing its own computer system management capability.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 2","FIG. 1"],"b":["300","201","202","201","202","203","204","205","204","206"]},"The OS kernel  in some embodiments may be a Linux kernel, but in alternate embodiments may be any other operating system providing a similar function. The Linux 2.2 operating system kernel in some further embodiments may be modified for adaptation to gaming architecture. Modifications may comprise erasing or removing selected code from the kernel, modifying code within the kernel, adding code to the kernel or performing any other action that renders the device handler code inoperable in normal kernel operation. By modifying the kernel in some embodiments of the invention, the function of the computerized gaming apparatus can be enhanced by incorporating security features, for example. In an embodiment, all modifications to the kernel are modular.","For example, as described in my co-pending application Ser. No. 10\/182,534, entitled \u201cEncryption in a Secure Computerized Gaming System\u201d filed on the same date as the present application, several functions are incorporated into the kernel to verify that the operating system and shared object code have not changed, and that no new code has been incorporated into the operating system code or shared object code.","In one embodiment, the kernel is modified so that it executes user level code out of ROM. The use of the Linux operating system lends itself to this application because the source code is readily available. Other operating systems such as Windows and DOS are other suitable operating systems.","Embodiments of the invention include hard real time code  beneath the kernel providing real time response such as fast response time to interrupts. The hard real time code  is part of the operating system in one embodiment.","In an embodiment of the invention, all user interface peripherals such as keyboards, joysticks and the like are not connected to the architecture so that the operating system and shared objects retain exclusive control over the gaming machine. In another embodiment, selected device handlers are disabled so that the use of a keyboard, for example, is not possible. It is more desirable to retain this functionality so that user peripherals can be attached to service the machine. It might also be desirable to attach additional user peripherals such as tracking balls, light guns, light pens and the like.","In another embodiment, the kernel is modified to zero out all unused RAM. This function eliminates code that has been inserted unintentionally, such as through a Trojan horse, for example.","In one embodiment, the kernel and operating system are modified to hash the system handler and shared object or gaming program object code, and to hash the kernel code itself. These functions in different embodiments are performed continuously, or at a predetermined frequency.","The system handler application is loaded and executed after loading the operating system, and manages the various gaming program shared objects. In further embodiments, the system handler application provides a user Application Program Interface (API) , that includes a library of gaming functions used by one or more of the shared objects . For example, the API in one embodiment includes functions that control graphics, such as color, screen commands, font settings, character strings, 3-D effects, etc. The device handlers  are preferably handled by an event queue . The event queue schedules the event handlers in sequence. The shared object  calls the APIs  in one embodiment. The system handler application  in various embodiments also manages writing of data variables to the \u201cgame.state\u201d file  stored in the nonvolatile storage , and further manages calling any callback functions associated with each data variable changed.","The system handler  application of some embodiments may manage the gaming program shared objects by loading a single object at a time and executing the object. When another object needs to be loaded and executed, the current object may remain loaded or can be unloaded and the new object loaded in its place before the new object is executed. The various shared objects can pass data between objects by storing the data in nonvolatile storage , utilizing a game.state data storage device . For example, a \u201cgame.so\u201d file may be a gaming program object file that is loaded and executed to provide operation of a feature set of a computerized wagering game, as a \u201cbonus.so\u201d gaming program object file is loaded and executed to provide a feature set of the bonus segment of play. Upon changing from normal game operation to bonus, the bonus.so is loaded and executed upon loading. Because the relevant data used by each gaming program object file in this example is stored in nonvolatile storage , the data may be accessed as needed by whatever gaming program object is currently loaded and executing.","The system handler application in some embodiments provides an API that comprises a library of gaming functions, enabling both easy and controlled access to various commonly used functions of the gaming system. Providing a payout in the event of a winning round of game play, for example, may be accomplished via a payout function that provides the application designer's only access to the hardware that pays out credit or money. Restrictions on the payout function, such as automatically reducing credits stored in nonvolatile storage each time a payout is made, may be employed in some embodiments of the invention to ensure proper and secure management of credits by the computerized gaming system. The functions of the API may be provided by the developer as part of the system handler application, and may be a part of the software provided in the system handler application package. The API functions may be updated as needed by the provider of the system handler application to provide new gaming functions as desired. In some embodiments, the API may simply provide functions that are commonly needed in gaming, such as computation of odds or random numbers, an interface to peripheral devices, or management of cards, reels, video output or other similar functions.","The system handler application  in various embodiments also comprises a plurality of device handlers , that monitor for various events and provide a software interface to various hardware devices. For example, some embodiments of the invention have handlers for nonvolatile memory , one or more I\/O devices , a graphics engine , a sound device , or a touch screen . Also, gaming-specific devices such as a pull arm, credit receiving device or credit payout device may be handled via a device handler . Other peripheral devices may be handled with similar device handlers, and are to be considered within the scope of the invention. In one embodiment, the device handlers are separated into two types. The two types are: soft real time A and regular device handlers B. The two types of device handlers operate differently. The soft real time handler A constantly runs and the other handler B runs in response to events.","The nonvolatile storage  used to store data variables may be a file on a hard disc, may be nonvolatile memory, or may be any other storage device that does not lose the data stored thereon upon loss of power. In one embodiment the nonvolatile storage in battery-backed RAM. The nonvolatile storage in some embodiments may be encrypted to ensure that the data variables stored therein cannot be corrupted. Some embodiments may further include a game.state file , which provides a look-up table for the game data stored in nonvolatile storage . The game.state file is typically parsed prior to execution of the shared object file. The operating system creates a map of NVRAM by parsing the game.state file. The look-up table is stored in RAM. This look-up table is used to access and modify game data that resides in NVRAM . This game data can also be stored on other types of memory.","In some embodiments, a duplicate copy of the game data stored in NVRAM  resides at another location in the NVRAM memory. In another embodiment, a duplicate copy of the game data is copied to another storage device. In yet another embodiment, two copies of the game data reside on the NVRAM and a third copy resides on a separate storage device. In yet another embodiment, three copies of the game data reside in memory. Extra copies of the game data are required by gaming regulations in some jurisdictions.","Data written to the game state device must also be written to the nonvolatile storage device, unless the game state data device is also nonvolatile, to ensure that the data stored is not lost in the event of a power loss. For example, a hard disc in one embodiment stores a game.state file that contains an unencrypted and nonvolatile record of the encrypted data variables in nonvolatile storage flash programmable memory (not shown). Data variables written in the course of game operation are written to the game.state file, which may be encrypted and stored in the nonvolatile storage , upon normal shutdown. Loss of power leaves a valid copy of the most recent data variables in the game.state file, which may be used in place of the data in NVRAM in the event of an abnormal shutdown.","In an alternate embodiment, a game state device  such as a game.state file stored on a hard disc drive provides variable names or tags and corresponding locations in nonvolatile storage , in effect, providing a variable map of the nonvolatile storage. In one such embodiment, the nonvolatile storage may then be parsed using the data in the game state file , which permits access to the variable name associated with a particular nonvolatile storage location. Such a method permits access to and handling of data stored in nonvolatile storage using variable names stored in the game state file , allowing use of a generic nonvolatile storage driver where the contents of the nonvolatile storage are game-specific. Other configurations of nonvolatile storage such as a single nonvolatile storage are also contemplated, and are to be considered within the scope of the invention.","Callback functions that are managed in some embodiments by the system handler application  are triggered by changing variables stored in NVRAM . For each variable, a corresponding function may be called that performs an action in response to the changed variable. For example, every change to a \u201ccredits\u201d variable in some embodiments calls a \u201cdisplay_credits\u201d function that updates the credits as displayed to the user on a video screen. The callback function may be a function provided by the current gaming program shared object or can call a different gaming program object.","The gaming program's shared objects in some embodiments of the invention define the personality and function of the game. Program objects provide different game functions, such as bookkeeping, game operation, game setup and configuration functions, bonus displays and other functions as necessary. The gaming program objects in some embodiments of the invention are loaded and executed one at a time, and share data only through NVRAM  or another game data storage device. The previous example of unloading a game.so gaming program object and replacing it with a bonus.so file to perform bonus functions is an example of such use of multiple gaming program shared objects.","Each gaming program object may require certain game data to be present in NVRAM , and to be usable from within the executing gaming program shared object . The game data may include meter information for bookkeeping, data to recreate game on power loss, game history, currency history, credit information, and ticket printing history, for example. These files do not include operable code or functions.","The operating system of the present application is not limited to use in gaming machines. It is the shared object library rather than the operating system itself that defines the personality and character of the game. The operating system of the present invention can be used with other types of shared object libraries for other purposes.","For example, the operating system of the present invention can be used to control networked on-line systems such as progressive controllers and player tracking systems. The operating system could also be used for kiosk displays or for creating \u201cpicture in picture\u201d features in gaming machines. A gaming machine could be configured so that a video slot player could place a bet in the sports book, then watch the sporting event in the \u201cpicture in picture\u201d feature while playing his favorite slot game.","The present invention provides a computerized gaming apparatus and method that provides a gaming-specific platform that features reduced game development time and efficient game operation via the use of a system handler application that can manage independent gaming program objects and gaming-specific API, provides game functionality to the operating system kernel, provides security for the electronic gaming system via the nonvolatile storage and other security features of the system, and does so in an efficient manner that makes development of new software games relatively easy. Production and management of a gaming apparatus is also simplified, due to the system handler application API library of gaming functions and common development platform provided by the invention.",{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 3","b":["400","300","402","203","400","406","408","410","402","412","404","402","300","404","300","404","203","406","206"]},"As previously described herein universal operating system  is an open operating system which allows for conversion of the gaming system  into different types of games, and also allows for future expandability and upgrading of associated hardware in the gaming system  due to its open architecture operating system.","In operating system , device handlers  provide the interface between the operating system  and external gaming system input and output devices, such as a button panel, bill acceptor, coin acceptor, mechanical arm, reels, speaker, tower lights, etc. Each device handler  is autonomous to the other. The device handlers or drivers  operate as protocol managers which receive information from a gaming system device (typically in the gaming system device protocol) and converts the information to a common open operating system protocol usable by operating system . Similarly, the device drivers or handlers  receive information from the open operating system and convert the information to a gaming device specific protocol. The specific device handlers or drivers used are dependent upon what game you are using, and may be loadable or unloadable as independent, separate objects or modules. The exemplary embodiment shown includes total I\/O device handler , sound device handler , serial device handler , graphics device handler , memory manager device handler , NVRAM device handler , protocols device handler , resource manager device handler  and network device handler . Other suitable device handlers for adapting the operating system  to other gaming systems will become apparent to one skilled in the art after reading the present application.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 4","b":["400","300","400","400","400","300","402"]},"At , the existing game operating system is removed from the game. The existing game operating system is typically a proprietary operating system consisting of computer hardware and software which is specific to the game being changed out. At , a universal gaming system  including an open operating system  is installed in the game. At , functional interfaces are provided between the open operating system and the existing gaming system devices. At , a game specific program (i.e., game layer ) is installed in the universal gaming system. The game specific program is configured to communicate with the open operating system .","In one exemplary embodiment, the gaming system according to the present invention is used in a mechanical reel-based slot machine, either in a new slot machine or in converting an existing slot machine to an open operating system according to the present invention. Exemplary conventional reel-based slot machines include an IGT S-plus slot machine or a Bally slot machine.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 5","b":["402","462","466","468","470","472","462","400"]},"Output devices  receive information from operating system  which provides an output via the I\/O device driver to gaming devices . In the example shown, output devices  include reels device  which receives an output to the stepper motors controlling the reels. Credit displays device  which receives an output to the LED driven credit displays. Speaker device  which receives a sound output to the game speakers. On-line system protocol devices  which is a communication interface between the open operating system  and the game on-line system. Tower lights devices  which receives an interface between the open operating system  and the game tower lights.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 6","b":["500","502","504","504"]},"In one embodiment, the resource manager  stores the file  in the form of a lookup table. In one preferred embodiment, the resource manager reads the configuration files at startup, parses the configuration files and stores them in memory . The resource manager file  may then be accessed by the rest of the operating system  software applications. The resource manager operates to map digital I\/O lines, corn ports, game specific resources, kernal modules to load, etc.",{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 7","b":["506","500","8","1","510","20","512","2","514","3","516","3","518","38","520","4","522","10","524","5","526","11","528","6","530","12","532","7","534","13","536","538","51","540"]},"The gaming system  according to the present invention is adaptable for use as a cashless gaming system. As such, it is useable for converting existing coin-based or token-based gaming systems into a cashless gaming system.",{"@attributes":{"id":"p-0079","num":"0078"},"figref":["FIG. 8","FIGS. 1-7"],"b":["400","550","552","550","552","400","554","300","550","556","300","552","550","400","556","560"]},{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 9","b":["400","300","402","400","580","402","302","580","580","582","582","400","402","580","582"]},{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 10","b":["400","402","580","402","402","580","584","580"]},"The removable media  is removed from remote computer  and inserted in gaming system . In one aspect, removable media  can be \u201chot-inserted\u201d directly into the controller board of gaming system . The removable media  contains game layer  including the game specific code and program files. As such, removable media  remains inserted into gaming system  during operation of the gaming system. In an alternative embodiment, the game layer  can be transferred (e.g., via a memory download) from removable media  to memory inside of gaming system .","In one embodiment, the removable media  is maintained in gaming system  during operation of the gaming system. As such, the gaming system program files may be verified for authenticity by gaming officials by simply removing the removable media  and inserting it in a computer or controller used for verifying\/authenticating game code, indicated at .",{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 11","b":["400","402","600","602","604","606","606","610","604","606","612","610","612","602","608","608","606","604","606","608","402","402","400","400","610"]},"The system  also allow other user interfaces  for configuring games which may be assembled by controller  for use in other gaming systems. Alternatively, other user interface  may be representative of a gaming official checking the game  and authorizing use of the game  and gaming system . As such, the game  may be transferred to the gaming system  via controller , or via a communication link with user interface , which may be a direct connection or may be a network. Alternatively, game layer  may be transferred from controller  or user interface  by putting it on a flash memory device (e.g., Disk on a Chip or CompactFlash card) and physically inserted into gaming system .","Network , as used herein, is defined to include an internet network (e.g., the Internet), intranet network, or other high-speed communication system. In one preferred embodiment, network  is the Internet. While the exemplary embodiment and this detailed description refers to the use of web pages on the Internet network, it is understood that the use of other communication networks or next generation communication networks or a combination of communication networks (e.g., and intranet and the Internet) are within the scope of the present invention. The assembly of configuration information received from user interface  can be assembled into game layer  using hardware via a microprocessor, programmable logic, or state machine, in firmware, and in software within a given device. In one aspect, at least a portion of the software programming is web-based and written in HTML and JAVA programming languages, including links to the web pages for data collection, and each of the main components communicate via network  using a communication bus protocol. For example, the present invention may or may not use a TC\/IP protocol suite for data transport. Other programming languages and communication bus protocols suitable for use with the system  according to the present invention will become apparent to those skilled in the art after reading the present application.",{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 12","FIG. 11"],"b":["1","622","2","624","606","602","610","610","626","602","628","402"]},{"@attributes":{"id":"p-0088","num":"0087"},"figref":"FIG. 13","b":"400"},"A RAID system configuration as defined by different RAID levels. The different RAID levels range from LEVEL 0 which provides data striping (spreading out of data blocks of each file across multiple hard disks) resulting in improved disk drive speed and performance but no redundancy. RAID LEVEL 1 provides disk mirroring, resulting in 100 percent redundancy of data through mirrored pairs of hard disks (i.e., identical blocks of data written to two hard disks). Other drive RAID levels provide variations of data striping and disk mirroring, and also provide improved error correction for increased performance and fault tolerance.","In , one exemplary embodiment of RAID data storage system used in a gaming system  according to the present invention is generally shown at . The RAID storage system  includes a controller or control system  and multiple nonvolatile RAM data storage units, indicated as RAMA  and RAMB . In one aspect, RAMA  and RAMB  each include a backup power system PWR  and PWR . In one aspect, backup power systems PWR  and PWR  are battery backup systems. RAMA  and RAMB  are configured to communicate with control system  as a redundant array of storage devices. Preferably, nonvolatile memory RAMA  and nonvolatile memory RAMB  are configured similar to a RAID level configuration used in the disk drive industry (i.e., as a \u201cmirrored pair\u201d). Nonvolatile memory RAMA  and nonvolatile memory RAMB  communicate with control system  via communication bus , using a communication bus protocol. One exemplary embodiment of a communication bus suitable for use as communication bus  is an industry standard ATA or uniform serial bus (USB) communication bus. Control system  includes a microprocessor based data processing system or other system capable of performing a sequence of logical operations. In one aspect, control system  is configured to operate the RAID system  nonvolatile memories RAMA  and RAMB  as a mirrored pair. As such, read\/write to nonvolatile memory RAMA  are mirrored to nonvolatile RAMB , providing redundancy of crucial gaming specific data stored in nonvolatile memory RAMA  and RAMB . Alternatively, the nonvolatile memory RAMA  and nonvolatile memory RAMB  may be configured to communicate with control system  similar to other RAID storage system levels, such as RAID LEVEL 0, RAID LEVEL 2, RAID LEVEL 3, RAID LEVEL 4, RAID LEVEL 5, RAID LEVEL 6, etc. Further, the RAID system  may include more than the two nonvolatile memories RAMA  and RAMB  shown.","Although specific embodiments have been illustrated and described herein, it will be appreciated by those of ordinary skill in the art that any arrangement which is calculated to achieve the same purpose may be substituted for the specific embodiments shown. This application is intended to cover any adaptations or variations of the invention. It is intended that this invention be limited only by the claims, and the full scope of equivalents thereof."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":[{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 12","FIG. 11"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 13"}]},"DETDESC":[{},{}]}
