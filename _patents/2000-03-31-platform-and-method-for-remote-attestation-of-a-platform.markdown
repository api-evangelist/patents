---
title: Platform and method for remote attestation of a platform
abstract: In one embodiment, a method of remote attestation for a special mode of operation. The method comprises storing an audit log within protected memory of a platform. The audit log is a listing of data representing each of a plurality of IsoX software modules loaded into the platform. The audit log is retrieved from the protected memory in response to receiving a remote attestation request from a remotely located platform. Then, the retrieved audit log is digitally signed to produce a digital signature for transfer to the remotely located platform.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06990579&OS=06990579&RS=06990579
owner: Intel Corporation
number: 06990579
owner_city: Santa Clara
owner_country: US
publication_date: 20000331
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DESCRIPTION"],"p":["1. Field","This invention relates to the field of platform security.","2. Background","Advances in microprocessor and communication technologies with a platform have opened up many opportunities for applications that go beyond the traditional ways of doing business. Electronic commerce (e-commerce) and business-to-business (B2B) transactions are now becoming popular, reaching the global markets at a fast rate. Unfortunately, while modern microprocessor technology provides users with convenient and efficient methods of doing business, communicating and transacting, this technology fails to support remote attestation. Remote attestation is a technique for ascertaining the operating state of a remotely located platform in a generally secure manner. By ascertaining the operating state of the platform prior to conducting e-commerce or B2B transactions with that platform, the user is imparted with greater confidence in the security of the transaction.","The present invention relates to a platform and method for remote attestation of a platform. Remote attestation may be conducted when the platform is operating in a special mode of operation. An example of this special mode includes a processor isolated execution \u201cIsoX\u201d mode as described below. More specifically, a processor executing in IsoX mode utilizes hardware-protected keying material that is cryptographically unique to produce a digital signature that includes information concerning the operating environment of the platform. The hardware that provides protection of the keying material, referred to herein as a \u201cremote attestation unit\u201d (RAU), may be integrated in a core logic device (e.g., a processor or a chipset component) or a non-core logic device (e.g., token).","In the following description, certain terminology is used to discuss features of the present invention. For example, a \u201cplatform\u201d includes components that perform different functions on stored information. Examples of a platform include, but are not limited or restricted to a computer (e.g., desktop, a laptop, a hand-held, a server, a workstation, etc.), desktop office equipment (e.g., printer, scanner, a facsimile machine, etc.), a wireless telephone handset, a television set-top box, and the like. Examples of a \u201ccomponent\u201d include hardware (e.g., an integrated circuit, etc.) and\/or one or more software modules. A \u201csoftware module\u201d is code that, when executed, performs a certain function. This code may include an operating system, an application, an applet or even a nub being a series of code instructions, possibly a subset of code from an applet. A \u201clink\u201d is broadly defined as one or more information-carrying mediums (e.g., electrical wire, optical fiber, cable, bus, or air in combination with wireless signaling technology) to establish a communication pathway. This pathway is deemed \u201cprotected\u201d when it is virtually impossible to modify information routed over the pathway without detection.","In addition, the term \u201cinformation\u201d is defined as one or more bits of data, address, and\/or control and a \u201csegment\u201d is one or more bytes of information. A \u201cmessage\u201d is a grouping of information, possibly packetized information. \u201cKeying material\u201d includes any information needed for a specific cryptographic algorithm such as a Digital Signature Algorithm. A \u201cone-way function\u201d is a function, mathematical or otherwise, that converts information from a variable-length to a fixed-length (referred to as a \u201chash value\u201d or \u201cdigest\u201d). The term \u201cone-way\u201d indicates that there does not readily exist an inverse function to recover any discernible portion of the original information from the fixed-length hash value. Examples of a hash function include MD5 provided by RSA Data Security of Redwood City, Calif., or Secure Hash Algorithm (SHA-1) as specified in a 1995 publication Secure Hash Standard FIPS 180-1 entitled \u201cFederal Information Processing Standards Publication\u201d (Apr. 17, 1995).","I. Architecture Overview","In one embodiment, a platform utilizing the present invention may be configured with an isolated execution (IsoX\u2122) architecture. The IsoX\u2122 architecture includes logical and physical definitions of hardware and software components that interact directly or indirectly with an operating system of the platform. Herein, the operating system and a processor of the platform may have several levels of hierarchy, referred to as rings, which correspond to various operational modes. A \u201cring\u201d is a logical division of hardware and software components that are designed to perform dedicated tasks within the platform. The division is typically based on the degree or level of privilege, namely the ability to make changes to the platform. For example, a ring- is the innermost ring, being at the highest level of the hierarchy. Ring- encompasses the most critical, privileged components. Ring- is the outermost ring, being at the lowest level of the hierarchy. Ring- typically encompasses user level applications, which are normally given the lowest level of privilege. Ring- and ring- represent the intermediate rings with decreasing levels of privilege.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1A","b":["50","50","50","0","10","1","20","2","30","3","40","52","50","52"]},"Ring-  includes two portions: a normal execution Ring-  and an isolated execution Ring- . The normal execution Ring-  includes software modules that are critical for the operating system, usually referred to as the \u201ckernel\u201d. These software modules include a primary operating system  (e.g., kernel), software drivers , and hardware drivers . The isolated execution Ring-  includes an operating system (OS) nub  and a processor nub  as described below. The OS nub  and the processor nub  are instances of an OS executive (OSE) and processor executive (PE), respectively. The OSE and the PE are part of executive entities that operate in a protected environment associated with the isolated area  and the IsoX mode. The processor nub loader  is a bootstrap loader code that is responsible for loading the processor nub  from the processor or chipset into an isolated area as will be explained later.","Similarly, ring- , ring- , and ring-  include normal execution ring- , ring- , ring- , and isolated execution ring- , ring- , and ring- , respectively. In particular, normal execution ring- includes N applications \u2013and isolated execution ring- includes M applets \u2013(where \u201cN\u201d and \u201cM\u201d are positive whole numbers).","One concept of the IsoX\u2122 architecture is the creation of an isolated region in the system memory, which is protected by components of the platform (e.g., the processor and chipset). This isolated region, referred to herein as an \u201cisolated area,\u201d may also be in cache memory that is protected by a translation look aside (TLB) access check. Access to this isolated area is permitted only from a front side bus (FSB) of the processor, using special bus cycles (referred to as \u201cisolated read and write cycles\u201d) issued by the processor executing in IsoX mode.","It is contemplated that links dedicated to solely support special cycles during remote attestation (referred to as \u201cattestation cycles\u201d) may be employed within the platform. These attestation cycles may be based on the isolated read and write cycles or may be independent from the isolated read and write cycles. In lieu of dedicated links, shared links may be employed within the platform to support remote attestation. Examples of these shared links include a Peripheral Component Interconnect (PCI) bus, an accelerated graphics port (AGP) bus, an Industry Standard Architecture (ISA) bus, a Universal Serial Bus (USB) bus and the like. The attestation cycles are issued to prove locality, namely that a device with the keying material and a signing engine is accessing information (e.g., an audit log) stored in protected memory within the platform. This mitigates the threat of software simulating the retrieval of the audit log for example.","The IsoX mode is initialized using a privileged instruction in the processor, combined with the processor nub loader . The processor nub loader  verifies and loads a ring- nub software module (e.g., processor nub ) into the isolated area. For security purposes, the processor nub loader  is non-modifiable, tamper-resistant and non-substitutable. In one embodiment, the processor nub loader  is implemented in read only memory (ROM).","One task of the processor nub  is to verify and load the ring- OS nub  into the isolated area. The OS nub  provides links to services in the primary operating system  (e.g., the unprotected segments of the operating system), provides page management within the isolated area, and has the responsibility for loading ring- application modules , including applets to , into protected pages allocated in the isolated area. The OS nub  may also support paging of data between the isolated area and ordinary (e.g., non-isolated) memory. If so, then the OS nub  is also responsible for the integrity and confidentiality of the isolated area pages before evicting the page to the ordinary memory, and for checking the page contents upon restoration of the page.","Referring now to , a diagram of the illustrative elements associated with the operating system  and the processor for one embodiment of the invention is shown. For illustration purposes, only elements of ring-  and ring-  are shown. The various elements in the logical operating architecture  access an accessible physical memory  according to their ring hierarchy and the execution mode.","The accessible physical memory  includes an isolated area  and a non-isolated area . The isolated area  includes applet pages  and nub pages . The non-isolated area  includes application pages  and operating system pages . The isolated area  is accessible only to components of the operating system and processor operating in the IsoX mode. The non-isolated area  is accessible to all elements of the ring- operating system and processor.","The normal execution ring-  including the primary OS , the software drivers , and the hardware drivers , can access both the OS pages  and the application pages . The normal execution ring-, including applications to , can access only to the application pages . Both the normal execution ring-  and ring- , however, cannot access the isolated area .","The isolated execution ring- , including the OS nub  and the processor nub , can access to both of the isolated area , including the applet pages  and the nub pages , and the non-isolated area , including the application pages  and the OS pages . The isolated execution ring- , including applets to , can access only to the application pages  and the applet pages . The applets to reside in the isolated area .","Referring to , a block diagram of an illustrative embodiment of a platform utilizing the present invention is shown. In this embodiment, platform  comprises a processor , a chipset , a system memory  and peripheral components (e.g., tokens \/ coupled to a token link  and\/or a token reader ) in communication with each other. It is further contemplated that the platform  may contain optional components such as a non-volatile memory (e.g., flash)  and additional peripheral components. Examples of these additional peripheral components include, but are not limited or restricted to a mass storage device  and one or more input\/output (I\/O) devices . For clarity, the specific links for these peripheral components (e.g., PCI bus, AGP bus, ISA bus, USB bus, wireless transmitter\/receiver combinations, etc.) are not shown.","In general, the processor  represents a central processing unit of any type of architecture, such as complex instruction set computers (CISC), reduced instruction set computers (RISC), very long instruction word (VLIW), or hybrid architecture. In one embodiment, the processor  includes multiple logical processors. A \u201clogical processor,\u201d sometimes referred to as a thread, is a functional unit within a physical processor having an architectural state and physical resources allocated according to a specific partitioning functionality. Thus, a multi-threaded processor includes multiple logical processors. The processor  is compatible with the Intel Architecture (IA) processor, such as a PENTIUM\u00ae series, the IA-32\u2122 and IA-64\u2122. It will be appreciated by those skilled in the art that the basic description and operation of the processor  applies to either a single processor platform or a multi-processor platform.","The processor  may operate in a normal execution mode or an IsoX mode. In particular, an isolated execution circuit  provides a mechanism to allow the processor  to operate in an IsoX mode. The isolated execution circuit  provides hardware and software support for the IsoX mode. This support includes configuration for isolated execution, definition of the isolated area, definition (e.g., decoding and execution) of isolated instructions, generation of isolated access bus cycles, and generation of isolated mode interrupts. In one embodiment, as shown in , the RAU may be implemented as part of the processor .","As shown in , a host link  is a front side bus that provides interface signals to allow the processor  to communicate with other processors or the chipset . In addition to normal mode, the host link  supports an isolated access link mode with corresponding interface signals for isolated read and write cycles when the processor  is configured in the IsoX mode. The isolated access link mode is asserted on memory accesses initiated while the processor  is in the IsoX mode if the physical address falls within the isolated area address range. The isolated access link mode is also asserted on instruction pre-fetch and cache write-back cycles if the address is within the isolated area address range. The processor  responds to snoop cycles to a cached address within the isolated area address range if the isolated access bus cycle is asserted.","Herein, the chipset  includes a memory control hub (MCH)  and an input\/output control hub (ICH)  described below. The MCH  and the ICH  may be integrated into the same chip or placed in separate chips operating together. In another embodiment, as shown in , the RAU may be implemented as part of the chipset .","With respect to the chipset , a MCH  provides control and configuration of memory and input\/output devices such as the system memory  and the ICH . The MCH  provides interface circuits to recognize and service attestation cycles and\/or isolated memory read and write cycles. In addition, the MCH  has memory range registers (e.g., base and length registers) to represent the isolated area in the system memory . Once configured, the MCH  aborts any access to the isolated area when the isolated access link mode is not asserted.","The system memory  stores code and data. The system memory  is typically implemented with dynamic random access memory (DRAM) or static random access memory (SRAM). The system memory  includes the accessible physical memory  (shown in ). The accessible physical memory  includes the isolated area  and the non-isolated area  as shown in . The isolated area  is the memory area that is defined by the processor  when operating in the IsoX mode. Access to the isolated area  is restricted and is enforced by the processor  and\/or the chipset  that integrates the isolated area functionality. The non-isolated area  includes a loaded operating system (OS). The loaded OS  is the portion of the operating system that is typically loaded from the mass storage device  via some boot code in a boot storage such as a boot read only memory (ROM). Of course, the system memory  may also include other programs or data which are not shown.","As shown in , the ICH  supports isolated execution in addition to traditional I\/O functions. In this embodiment, the ICH  comprises at least the processor nub loader  (shown in ), a hardware-protected memory , an isolated execution logical processing manager , and a token link interface . For clarity, only one ICH  is shown although platform  may be implemented with multiple ICHs. When there are multiple ICHs, a designated ICH is selected to control the isolated area configuration and status. This selection may be performed by an external strapping pin. As is known by one skilled in the art, other methods of selecting can be used.","The processor nub loader , as shown in , includes a processor nub loader code and its hash value (or digest). After being invoked by execution of an appropriated isolated instruction (e.g., ISOINIT) by the processor , the processor nub loader  is transferred to the isolated area . Thereafter, the processor nub loader  copies the processor nub  from the non-volatile memory  into the isolated area , verifies and places a representation of the processor nub  (e.g., a hash value) into the protected memory . Herein, the protected memory  is implemented as a memory array with single write, multiple read capability. This non-modifiable capability is controlled by logic or is part of the inherent nature of the memory itself. For example, as shown, the protected memory  may include a plurality of single write, multiple read registers.","As shown in , the protected memory  is configured to support an audit log . An \u201caudit log\u201d  is information concerning the operating environment of the platform ; namely, a listing of data that represents what information has been successfully loaded into the system memory  after power-on of the platform . For example, the representative data may be hash values of each software module loaded into the system memory . These software modules may include the processor nub , the OS nub , and\/or any other critical software modules (e.g., ring- modules) loaded into the isolated area . Thus, the audit log  can act as a fingerprint that identifies information loaded into the platform (e.g., the ring- code controlling the isolated execution configuration and operation), and is used to attest or prove the state of the current isolated execution.","In another embodiment, both the protected memory  and unprotected memory (e.g., a memory array in the non-isolated area  of the system memory  of ) may collectively provide a protected audit log . The audit log  is stored in the memory array while information concerning the state of the audit log  (e.g., a total hash value for the representative data within the audit log ) is stored in the protected memory .","Referring still to , the non-volatile memory  stores non-volatile information. Typically, the non-volatile memory  is implemented in flash memory. The non-volatile memory  includes the processor nub  as described above. Additionally, the processor nub  may also provide application programming interface (API) abstractions to low-level security services provided by other hardware and may be distributed by the original equipment manufacturer (OEM) or operating system vendor (OSV) via a boot disk.","The mass storage device  stores archive information such as code (e.g., processor nub ), programs, files, data, applications (e.g., applications \u2013), applets (e.g., applets to ) and operating systems. The mass storage device  may include a compact disk (CD) ROM , a hard drive , or any other magnetic or optic storage devices. The mass storage device  also provides a mechanism to read platform-readable media. When implemented in software, the elements of the present invention are stored in a processor readable medium. The \u201cprocessor readable medium\u201d may include any medium that can store or transfer information. Examples of the processor readable medium include an electronic circuit, a semiconductor memory device, a read only memory (ROM), a flash memory, an erasable programmable ROM (EPROM), a fiber optic medium, a radio frequency (RF) link, and any platform readable media such as a floppy diskette, a CD-ROM, an optical disk, a hard disk, etc.","In communication with the platform , I\/O devices  include stationary or portable user input devices, each of which performs one or more I\/O functions. Examples of a stationary user input device include a keyboard, a keypad, a mouse, a trackball, a touch pad, and a stylus. Examples of a portable user input device include a handset, beeper, hand-held (e.g., personal digital assistant) or any wireless device. The I\/O devices  enable remote attestation of the platform  as described below.","The token link  provides an interface between the ICH  and a fixed token  (e.g., a motherboard token) and\/or a token reader  in communication with a removable token  having characteristics similar to a smart card. In general, both types of tokens are devices that perform dedicated I\/O functions. For embodiments shown in , tokens  and\/or  include keying material (e.g., unique cryptographic identifier such as a public\/private key pair) and functionality to digitally sign the audit log (or a representation thereof) with the private key of the key pair. The token link interface  in the ICH  provides a logical coupling between the token link  and the ICH  and supports remote attestation for recovery of the contents of the audit log .","II. Generating and Utilizing a Protected Audit Log","Referring now to , a flowchart of the illustrative operations of the platform to generate an embodiment of the protected audit log is shown. After power-on of the platform, segments of information are loaded into the system memory for processing by a processor (block ). Examples of these segments of information include the processor nub and the OS nub. Concurrent with the loading of the segments of information into the system memory, copies of each segment of the information undergo a cryptographic hash operation to produce a hash value of the segments. These hash values form an audit log stored in protected memory (blocks  and ). In one embodiment, as shown in , the protected memory is implemented within the ICH. The memory is deemed \u201cprotected\u201d when the contents of the memory are readable and non-modifiable as described above. As subsequent segments of information are selected for storage into the audit log, their hash values are appended to the audit log behind the previously computed hash values (block ). It is contemplated that only hash values of selected nubs may be stored in the audit log.","III. Remote Attestation","A. Commencement of Remote Attestation","In one embodiment, remote attestation is initiated by issuing an attestation request. The attestation request can originate from a remote source or from an agent, local to the platform, which may or may not be acting as a proxy for the remote source. Normally, the attestation request comprises a primary query and\/or one or more optional secondary queries. Each query causes the issuance of the attestation cycles, which are designed to retrieve contents of the audit log. At a minimum, the contents of the audit log may be used to verify the integrity of IsoX\u2122 processor and the OS nub of the platform. The secondary query retrieves, in addition to the audit log, a hash value of a selected IsoX applet loaded by the platform in order to verify the integrity of the applet. The hash value of the applet is generated on the fly by the OS nub. This avoids the need to store each and every loaded applet in the audit log. For primary queries, the RAU creates a message that may include the audit log, a digital signature covering the audit log, and one or more digital certificates for the RAU keying material and returns the message to the requestor. For secondary queries, the RAU creates a message that may include the applet hash, the audit log, a digital signature covering the applet hash and audit log, and one or more digital certificates for the RAU keying material and returns the message to the requestor to retrieve different information cited above.","B. Processor Integrated RAU","Referring now to , the RAU  is integrated into the processor . The processor  is executing local code. Upon detection of an attestation request, the processor  establishes a communication pathway with a component  responsible for storing the audit log . More specifically, in one embodiment, the local code executes a physical instruction in response to an attestation request. The physical instruction, when executed by the processor , causes the issuance of attestation cycles by the processor  for reading contents of the audit log .","For illustrative sake, the component  may be the ICH  of , although other components within the platform  may be used. The communications between the processor  and component  are through one or more links such as a first link  and a second link . These links  and  may be configured as dedicated links for handling attestation cycles or shared links (e.g., host link, PCI bus, etc.) enhanced to handle the attestation cycles. These attestation cycles signal the component  to accept reads of the audit log .","Upon receiving the audit log , the RAU  in the processor  produces a digital signature  by digitally signing the audit log  with the keying material  (e.g., a pre-stored private key). The audit log , digital signature , and possibly digital certificates from the RAU keying material and packetized and sent as a message by the RAU  to the requestor or to an area  accessible to the local code.","Of course, it is contemplated that if the audit log  is stored in unprotected memory, the ICH  may include a component (not shown) to verify that the contents of the audit log  have not been modified before releasing the audit log  to the processor . This may be accomplished by the component  generating a hash value of the audit log  recovered from unprotected memory and comparing the hash value to the total hash value stored in protected memory.","As an optional embodiment, the user may want to control when the keying material  is used. For example, the platform may issue a request message via a communications device  to a user opt-in device  over a protected communication path. In one embodiment, the communications device  is coupled to the token bus  and is employed with a wireless receiver  and a wireless transmitter  (collectively referred to herein as a \u201cwireless transceiver\u201d). The wireless receiver and transmitter  and  are used to establish and maintain direct communications with the user opt-in device . Of course, the user opt-in device  may be coupled to communications device  via any link type.","Upon receipt of the request message, the communications device  issues a message to the user opt-in device  which enables the user to affirm his or her desire to release the keying material  for generation of the digital signature . Based on an input by the user or lack thereof (e.g., depression of a key associated with user opt-in device , inaction by the user, etc.), a response message is returned to the communications device , which routes the contents of the response message to the RAU  over a protected communication path. Upon receipt of the response message, the RAU  proceeds with the generation of the digital signature  and\/or digital certificates for the RAU keying material and placement in the area  accessible to the local code if use of the keying material  is authorized by the user.","C. Chipset Integrated RAU","Referring now to , the RAU  is integrated into a core logic device . As shown, the processor  is executing local code. Upon detection of an attestation request, the core logic device  establishes a communication pathway with a component  responsible for storing the audit log . More specifically, in one embodiment, the local code sends a message to core logic device  based on an attestation request. The message causes the core logic device  to issue attestation cycles for reading contents of the audit log .","For example, in response to the attestation request, the core logic device  routes the attestation cycles to the component  via link  to allow contents of the stored audit log  to be read. Link  may be dedicated to support remote attestation or support multiple functions inclusive of attestation cycles generated by the core logic device . Upon receiving the contents of the stored audit log , the core logic device  that contains the RAU  generates a digital signature  for the audit log  (as described above) and writes the digital signature  into an area accessible to the local code.","However, as shown in , if the core logic device  also contains the audit log , internal signals  within the core logic device  are used to allow the RAU  to access the audit log . Again, upon receiving the contents of the audit log , the RAU  of the core logic device  generates the digital signature  of the audit log and possibly one or more digital certificates for the RAU keying material (not shown). This information is provided as a message to the requestor or written into the area accessible to the local code.","As an optional embodiment, the user may want to control when the keying material  is used. For example, the platform may issue a request message  via a communications device  to a user opt-in device  over a protected communication path. In one embodiment, the communications device  is coupled to the token bus  and is employed with a wireless transceiver  in order to establish and maintain direct communications with the user opt-in device .","In response to receiving the request message , the communications device  issues a message to the user opt-in device , which solicits the user to affirm his or her desire to release the keying material  for generation of the digital signature . Based on an input by the user or lack thereof (e.g., depression of a key associated with the user opt-in device , inaction by the user, etc.), a response message  is returned to the communications device , which routes the contents of the response message  to the RAU  of the core logic device  over a protected communication path. Upon receipt of the response message , the RAU  proceeds with the generation of the digital signature  and possibly digital certificates as described above and placement in the area accessible to the local code if use of the keying material  is authorized by the user.","D. Fixed Token Integrated RAU","Referring now to , if the RAU  is integrated in the fixed token , the fixed token  communicates with a component (e.g., ICH ) holding the audit log  over the token link . The functionality of token link  may be enhanced to support attestation cycles that are only generated by the fixed token  when remote attestation is being requested. These attestation cycles are routed to the ICH  to request acceptance of reads to the audit log . Upon receiving the contents of the audit log , the RAU  implemented in the fixed token  generates a digital signature  by digitally signing the audit log  with keying material  stored in the RAU . Thereafter, the RAU  writes the digital signature  and possibly digital certificates for keying material  to the requestor or into an area accessible to the local code.","As an optional embodiment, the user may want to control when the keying material  stored in the RAU  is used. For example, the user may be prompted to affirm his or her desire to release the keying material  for generation of the digital signature . The prompt may be accomplished, for example, through transmission of a message  via a wireless transceiver  situated in the token . Affirmation of a desire to release the keying material  may be made by either (1) transmitting a return message  from a user opt-in device to the token  as shown or (2) entering access information via a user opt-in device (not shown) physically connected to the token , for example. Thereafter, the RAU  proceeds with the generation of the digital signature  and\/or digital certificate(s) for the keying material . Then, this information along with the audit log  are sent to the requestor or placed in the area accessible to the local code if use of the keying material  has been authorized by the user. Of course, opt-in messages  and  may be routed through the I\/O device  provided the messages are protected.","E. Removable Token Integrated RAU","Referring now to , if the RAU  is integrated in the removable token , the removable token  communicates with a component (e.g., ICH ) holding the audit log  over the token link . The functionality of token link  may be enhanced to support attestation cycles that are only generated by the token reader upon insertion or connection (i.e., wireless token) of removable token  when remote attestation is being requested. These attestation cycles are generated by the token reader  to the hardware storing the audit log  (e.g., ICH ) to request acceptance of reads to the audit log . Upon receiving the contents of the audit log , the RAU  implemented in the removable token  generates the digital signature  by digitally signing the audit log  with keying material  stored in the RAU . Thereafter, the RAU  writes the digital signature  and\/or digital certificate(s) for the keying material  into an area accessible to the local code.","As an optional embodiment, the user may want to control when the keying material  stored in the RAU  is used. For example, the user may be prompted to affirm his or her desire to release the keying material  for generation of the digital signature . The prompt may be accomplished, for example, through transmission of a message  via a wireless transceiver  situated in the token . Affirmation of a desire to release the keying material  may be made by either (1) transmitting a return message  from a user opt-in device (not shown) to the token  as shown or (2) entering access information via a user opt-in device physically connected to the token  (not shown) for example. Thereafter, the RAU  proceeds with the generation of the digital signature  and\/or digital certificates for the keying material , routing through the token reader  and placement in the area accessible to the local code if use of the keying material  has been authorized by the user. Of course, opt-in messages  and  may be routed through the I\/O device  provided the messages are protected.","While this invention has been described with reference to illustrative embodiments, this description is not intended to be construed in a limiting sense. Various modifications of the illustrative embodiments, as well as other embodiments of the invention, which are apparent to persons skilled in the art to which the invention pertains are deemed to lie within the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The features and advantages of the present invention will become apparent from the following detailed description of the present invention in which:",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1C"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 3","FIG. 1C"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 4","FIG. 1C"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 5","FIG. 1C"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 6","FIG. 1C"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 7","FIG. 1C"]}]},"DETDESC":[{},{}]}
