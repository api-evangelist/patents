---
title: Observer for grid-enabled software applications
abstract: A method includes, in a network of interconnected grid compute nodes, receiving a request to execute an application in the network, registering the application, determining whether the application meets a threshold to enable assigning the application to one of the grid compute nodes within the network, assigning the application to execute on a specific grid compute node having no other current applications executing, preparing the grid compute node for execution of the application, recovering the grid compute node if the application terminates prematurely, and deregistering the application on the grid compute node if the application executes successfully.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07930338&OS=07930338&RS=07930338
owner: SAP AG
number: 07930338
owner_city: Walldorf
owner_country: DE
publication_date: 20041220
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present invention relates to data processing by digital computer, and more particularly to an observer for grid-enabled software applications.","Grid computing is a form of distributed system wherein computing resources are shared across networks. Grid computing enables the selection, aggregation, and sharing of information resources resident in multiple administrative domains and across geographic areas. These information resources are shared, for example, based upon their availability, capability, and cost, as well as a user's quality of service (QoS) requirements. Grid computing can mean reduced cost of ownership, aggregated and improved efficiency of computing, data, and storage resources, and enablement of the creation of virtual organizations for applications and data sharing.","Some grid-enabled software applications running in a grid network require special observation. These applications include, for example, long running applications\/transactions, applications written in a specific programming language, such as C or C++, and applications with a failure history that indicates a high likelihood of failure. If such applications are not treated with special care, there is a chance that they can corrupt parts or all of a grid network infrastructure.","The present invention provides methods and apparatus, including computer program products, for an observer for grid-enabled software applications.","In one aspect, the invention features a method including, in a network of interconnected grid compute nodes, receiving a request to execute an application in the network, registering the application, determining whether the application meets a threshold to enable assigning the application to one of the grid compute nodes within the network, assigning the application to execute on a specific grid compute node having no current applications executing, preparing the specific grid compute node for execution of the application, recovering the specific grid compute node if the application terminates prematurely, and deregistering the application on the specific grid compute node if the application executes successfully.","In embodiments, the threshold can represent a minimum of application execution success rates. Assigning can include denying access to the network if the application fails to meet the threshold.","Preparing can include blocking other applications attempting to access the specific grid compute node, negotiating with the application to provide periodic status messages, and obtaining an initial snapshot of the specific grid compute node prior to execution of the application.","The initial snapshot can include all resources managed by the specific grid compute node, the resources including a listing of local files and directories, a total amount of used disk space, a list of used and free Transmission Control Protocol\/Internet Protocol (TCP\/IP) ports, memory usage and\/or a number of executing processes.","The initial snapshot can include an image stored in an advanced hardware management system over an application program interface (API). The advanced hardware management system can include a blade management system.","Recovering can include comparing a current snapshot with the initial snapshoot, and adjusting differences found in the current snapshot in response to the comparing.","Recovering can include comparing a current snapshot with the initial snapshoot, and rebooting the specific grid compute node in response to the comparing.","Recovering can include comparing a current snapshot with the initial snapshoot, and installing a new image on the specific grid compute node. The new image can include a software grid manager service residing inside a grid container. Recovering can also include reconnecting the specific grid compute node to the network.","The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features, objects, and advantages of the invention will be apparent from the description and drawings, and from the claims.","Like reference symbols in the various drawings indicate like elements.","As shown in , a grid network  in accordance with one embodiment of the invention includes a number of interconnected grid compute nodes , , , . In an example, the grid network  is implemented as a client-server network. Client\/server describes a relationship between two computer programs in which one program, the client, makes a service request from another program, the server, which fulfills the request. Although the client\/server idea can be used by programs within a single computer, it is a more important idea in a network, such at network . In a network, the client\/server model provides a convenient way to interconnect programs that are distributed efficiently across different locations.","In the client\/server model, one server, sometimes called a daemon, is activated and awaits client requests. Typically, multiple client programs share the services of a common server program. Both client programs and server programs are often part of a larger program or application. Relative to the Internet, a Web browser is a client program that requests services from a Web server in another computer somewhere on the Internet.","Each of the grid compute nodes, grid compute node  for example, can include a processor  and a memory . Memory  includes a grid manager , an operating system (OS) , such as Unix, Linux or Windows, and grid application observation service , which executes a grid application observation process . As grid-enabled software applications are deployed, executed, and terminated within the grid network , the grid application observation process  monitors grid-enabled applications that are sensitive and can cause grid network problems.","The grid application observation process  monitors identified grid-enabled applications and removes them immediately during or after execution in case the specific grid compute node handling the application fails to revert to its original state prior to execution of the grid-enabled application.","As shown in , grid application observation process  includes maintaining () a history of application executions in a grid network, the history including a list of the number of times applications failed to execute. Process  receives () a request to run an application on a grid compute node and determines () if there are any grid compute nodes within the grid network available to execute the application. The request includes an indication that the application is a critical application that requires special observation.","Process  checks () the application against data contained in the history to determine whether the requested application has failed to run more often than a predetermined number of times. If the application has failed to run more than the predetermined number of times, process  prevents () the application from being deployed in the grid network. Preventing () can also include sending a notification to an administrator that the application was denied grid network resources.","If process  grants the application access to the grid network, process  selects () a specific grid compute node that currently has no applications running so as to minimize an impact in the event of application failure.","Prior to execution of the application on the selected grid compute node, process  negotiates () with the grid-enabled application. Negotiation () includes determining how often the application, while executing in the selected grid compute node, sends \u201ckeep alive\u201d messages to the grid application observer service . In a particular example, this is specified in a policy file.","Process  takes an initial snapshot () of the selected grid compute node prior to application execution. In one example, the snapshot can be software-based, i.e., the snapshot can include all resources that are managed by the grid compute node, such as a listing of all files and directories, the total used disk space, a list of all used and free TCP\/IP ports, memory usage, number of running processes, and so forth. In another example, the snapshot can be hardware-based, i.e., an advanced hardware management system, such as a blade management system, can be informed via an application programming interface (API) to obtain and store an image.","If the application crashes during execution on the selected grid compute node (e.g., a keep-alive message is not received at a designated interval), process  takes a current snapshot () and compares () it to the initial snapshot taken prior to executing the application. Process  attempts to take action () to achieve the prior state, as defined in the initial snapshoot. Example actions include deleting new files and\/or, if memory usage is too high, delete running processes that should not run and\/or stop them.","If process  fails to achieve the prior state, process  reboots () the grid compute node.","In a particular hardware-based example solution, an advanced hardware management system (e.g., a blade management system or mainframe management system) utilizes process . If process  fails to achieve the prior state, the advanced hardware management system is instructed to put the image back on the selected grid compute node. In this example, the grid application observer service  includes an application programming interface (API) or other communication mechanism to the advanced hardware management system to initiate putting a new image to the selected grid compute node. The new image contains a software grid manager service residing inside a grid container. Once the selected grid compute node is clean (e.g., new image installed) and restarted it connects to the grid network . This can be achieved in different ways. For example, service \u201cM\u201d is started automatically at boot time and starts listening to a certain communication channel (e.g., a TCP\/IP port). Prior to initiating the hard disk image replacement, service \u201cM\u201d residing on machine M communicates to another machine M in the grid network  that a restart is taking place (e.g., via a service \u201cM\u201d residing on that machine), and is passing necessary configuration data (e.g., superior\/inferior information). Service \u201cM\u201d residing on machine M has the task to poll at certain intervals for machine M until it has rebooted. After that, service \u201cM\u201d residing on M provides configuration information to service \u201cM\u201d residing on M, which is used to link the machine to the grid network . In another particular example, a special grid service or application takes care of attaching rebooted machines to the grid network centrally.","The grid application observer service  notifies service \u201cM\u201d that the application has to be deployed and started again. Service \u201cM\u201d updates list \u201cL\u201d of failed attempts to run certain applications. Optionally, a notification to a monitoring system or an email to an operator can be sent concerning the failed attempt to run the application.","If the execution of the grid-enabled application is successful, process  de-registers () the application prior to terminating. If this is omitted or forgotten, process  will not get any \u201ckeep alive\u201d messages. When this happens, process  checks whether the selected grid node is in the same condition as prior to starting the application. If so, process  assumes that the application did not crash and de-registers it automatically.","In other embodiments, when checking for available grid compute nodes, those controlled by an advanced hardware management system (e.g., a blade management system) are preferred because for such types of machines an image can be taken automatically.","The invention can be implemented in digital electronic circuitry, or in computer hardware, firmware, software, or in combinations of them. The invention can be implemented as a computer program product, i.e., a computer program tangibly embodied in an information carrier, e.g., in a machine-readable storage device or in a propagated signal, for execution by, or to control the operation of, data processing apparatus, e.g., a programmable processor, a computer, or multiple computers. A computer program can be written in any form of programming language, including compiled or interpreted languages, and it can be deployed in any form, including as a stand-alone program or as a module, component, subroutine, or other unit suitable for use in a computing environment. A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.","Method steps of the invention can be performed by one or more programmable processors executing a computer program to perform functions of the invention by operating on input data and generating output. Method steps can also be performed by, and apparatus of the invention can be implemented as, special purpose logic circuitry, e.g., an FPGA (field programmable gate array) or an ASIC (application-specific integrated circuit).","Processors suitable for the execution of a computer program include, by way of example, both general and special purpose microprocessors, and any one or more processors of any kind of digital computer. Generally, a processor will receive instructions and data from a read-only memory or a random access memory or both. The essential elements of a computer are a processor for executing instructions and one or more memory devices for storing instructions and data. Generally, a computer will also include, or be operatively coupled to receive data from or transfer data to, or both, one or more mass storage devices for storing data, e.g., magnetic, magneto-optical disks, or optical disks. Information carriers suitable for embodying computer program instructions and data include all forms of non-volatile memory, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks, e.g., internal hard disks or removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks. The processor and the memory can be supplemented by, or incorporated in special purpose logic circuitry.","It is to be understood that the foregoing description is intended to illustrate and not to limit the scope of the invention, which is defined by the scope of the appended claims. Other embodiments are within the scope of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"}]},"DETDESC":[{},{}]}
