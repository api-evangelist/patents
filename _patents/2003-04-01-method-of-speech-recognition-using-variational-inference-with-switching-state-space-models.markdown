---
title: Method of speech recognition using variational inference with switching state space models
abstract: A method is developed which includes 1) defining a switching state space model for a continuous valued hidden production-related parameter and the observed speech acoustics, and 2) approximating a posterior probability that provides the likelihood of a sequence of the hidden production-related parameters and a sequence of speech units based on a sequence of observed input values. In approximating the posterior probability, the boundaries of the speech units are not fixed but are optimally determined. Under one embodiment, a mixture of Gaussian approximation is used. In another embodiment, an HMM posterior approximation is used.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06931374&OS=06931374&RS=06931374
owner: Microsoft Corporation
number: 06931374
owner_city: Redmond
owner_country: US
publication_date: 20030401
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS","Mixture of Guassians","HMM Posterior","Training Refinements","Hidden Production Parameter Recovery","Speech Recognition"],"p":["The present invention relates to pattern recognition. In particular, the present invention relates to speech recognition.","A pattern recognition system, such as a speech recognition system, takes an input signal and attempts to decode the signal to find a pattern represented by the signal. For example, in a speech recognition system, a speech signal (often referred to as a test signal) is received by the recognition system and is decoded to identify a string of words represented by the speech signal.","Many speech recognition systems utilize Hidden Markov Models in which phonetic units, which are also referred to as acoustic units or speech units, are represented by a single tier of connected states. Using a training signal, probability distributions for occupying the states and for transitioning between states are determined for each of the phonetic units. To decode a speech signal, the signal is divided into frames and each frame is transformed into a feature vector. The feature vectors are then compared to the distributions for the states to identify a most likely sequence of HMM states that can be represented by the frames. The phonetic unit that corresponds to that sequence is then selected.","Although HMM-based recognition systems perform well in many relatively simple speech recognition tasks, they do not model some important dynamic aspects of speech directly (and are known to perform poorly for difficult tasks such as conversational speech). As a result, they are not able to accommodate dynamic articulation differences between the speech signals used for training and the speech signal being decoded.","For example, in casual speaking settings, speakers tend to hypo-articulate, or under articulate their speech. This means that the recursively defined trajectory of the user's speech articulation may not reach its intended target before it is redirected to a next target. Because the training signals are typically formed using a \u201creading\u201d style of speech in which the speaker provides more fully articulated speech material than in hypo-articulated speech, the hypo-articulated speech does not match the trained HMM states. As a result, the recognizer provides less than ideal recognition results for casual speech.","A similar problem occurs with hyper-articulated speech. In hyper-articulated speech, the speaker exerts an extra effort to make the different sounds of their speech distinguishable. This extra effort can include changing the sounds of certain phonetic units so that they are more distinguishable from similar sounding phonetic units, holding the sounds of certain phonetic units longer, or transitioning between sounds more abruptly so that each sound is perceived as being distinct from its neighbors. Each of these mechanisms makes it more difficult to recognize the speech using an HMM system because each technique results in a set of feature vectors for the speech signal that often do not match well to the feature vectors present in the training data.","Even if the feature vectors corresponding to the hyper- or hypo-articulated speech match those in the training data (which may be very expensive to obtain), the conventional HMM technique will still perform poorly because of the increased phonetic confusability for the HMM system that does not take into account the underlying causes of the changes in the feature vector trajectories induced by hyper- or hypo-articulation. This problem is addressed specifically by the current invention.","HMM systems also have trouble dealing with changes in the rate at which people speak. Thus, if someone speaks slower or faster than the training signal, the HMM system will tend to make more errors decoding the speech signal.","Alternatives to HMM systems have been proposed. In particular, it has been proposed that the statistically defined trajectory or behavior of a production-related parameter of the speech signal should be modeled directly. Since the production-related values cannot be measured directly, these models are known as Hidden Dynamic Models (HDM). Hidden Dynamic Models are one example of a class of models known as switching state space models, which model the value of a parameter for a current frame based on the value of the parameter in one or more previous frames and one or more constants selected for the frame.","One problem with HDMs is that it is difficult to train them because common training algorithms, such as the Expectation-Maximization algorithm, become intractable for HDMs. This is due largely to the fact that in order to obtain the posterior probability for a sequence of hidden parameters given a sequence of input values, the probability for the combination of a hidden parameter and a possible speech unit must be summed over all possible sequences of speech units. This leads to a computation that increases exponentially with each additional frame of input values.","To overcome this problem, some systems of the prior art have assumed a fixed sequence of speech units during training. The boundaries between the speech units that define this sequence are set using HMM training before training the HDM. This is not theoretically optimal because the boundary parameters of the speech units are being fixed based on a different criteria than the other parameters in the hidden dynamic model.","Thus, a training system is needed that allows the boundaries to be trained with the other parameters of a hidden dynamic model while overcoming the intractability associated with such training.","A method includes defining a switching state space model of a hidden production-related parameter and approximating a posterior probability that provides the likelihood of a sequence of the hidden production-related parameters and a sequence of speech units based on a sequence of input values. In approximating the posterior probability, the boundaries of the speech units are not fixed. Under one embodiment, a mixture of Gaussian approximation is used. In another embodiment, an HMM posterior approximation is used.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1","b":["100","100","100","100"]},"The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well-known computing systems, environments, and\/or configurations that may be suitable for use with the invention include, but are not limited to, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, telephony systems, distributed computing environments that include any of the above systems or devices, and the like.","The invention may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. The invention is designed to be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules are located in both local and remote computer storage media including memory storage devices.","With reference to , an exemplary system for implementing the invention includes a general-purpose computing device in the form of a computer . Components of computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus also known as Mezzanine bus.","Computer  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk  such as a CD ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in , provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies.","A user may enter commands and information into the computer  through input devices such as a keyboard , a microphone , and a pointing device , such as a mouse, trackball or touch pad. Other input devices (not shown) may include a joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus, but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . In addition to the monitor, computers may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer  is operated in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a hand-held device, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on remote computer . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2","b":["200","200","202","204","206","208","210"]},"Memory  is implemented as non-volatile electronic memory such as random access memory (RAM) with a battery back-up module (not shown) such that information stored in memory  is not lost when the general power to mobile device  is shut down. A portion of memory  is preferably allocated as addressable memory for program execution, while another portion of memory  is preferably used for storage, such as to simulate storage on a disk drive.","Memory  includes an operating system , application programs  as well as an object store . During operation, operating system  is preferably executed by processor  from memory . Operating system , in one preferred embodiment, is a WINDOWS\u00ae CE brand operating system commercially available from Microsoft Corporation. Operating system  is preferably designed for mobile devices, and implements database features that can be utilized by applications  through a set of exposed application programming interfaces and methods. The objects in object store  are maintained by applications  and operating system , at least partially in response to calls to the exposed application programming interfaces and methods.","Communication interface  represents numerous devices and technologies that allow mobile device  to send and receive information. The devices include wired and wireless modems, satellite receivers and broadcast tuners to name a few. Mobile device  can also be directly connected to a computer to exchange data therewith. In such cases, communication interface  can be an infrared transceiver or a serial or parallel communication connection, all of which are capable of transmitting streaming information.","Input\/output components  include a variety of input devices such as a touch-sensitive screen, buttons, rollers, and a microphone as well as a variety of output devices including an audio generator, a vibrating device, and a display. The devices listed above are by way of example and need not all be present on mobile device . In addition, other input\/output devices may be attached to or found with mobile device  within the scope of the present invention.","The present invention provides a generative model of speech. Under this model, speech is represented as the output of an attempt by the speaker to phonetically implement a linguistic definition of a sequence of speech units. During this attempt, the speaker produces a production-related value that follows a statistically defined trajectory (using the state-space formulation with recursive noise) toward a target associated with a current speech unit. Under embodiments of the present invention, this trajectory is modeled as a switching state-space model.","The model of the present invention is a special form of a Hidden Trajectory Model where the trajectory is defined recursively with noise added at each frame. This state-space model includes two layers, a dynamic or trajectory model component that describes hidden production-related parameters (such as vocal tract resonance frequencies), and a mapping model component that translates the production-related parameters into observable acoustic features such as Mel-Frequency Cepstral Coefficients. The state equation in the state-space model predicts a sequence of continuous state values (x, . . . , x, . . . x) for a production-related parameter. The mapping model or the observation equation predicts a sequence of acoustic observation vectors ygiven the sequence of continuous hidden state values.","The recursively defined trajectory and mapping models can be succinctly represented by the two equations:\n\n+()\u2003\u2003Eq.1\n\n\u2003\u2003Eq.2\n\nwhere n and s are frame number and speech unit index respectively, x is the hidden production-related parameter, y is the acoustic feature vector, Aand Care speech-unit dependent system matrices, \u03bcis a speech-unit dependent target, I is the identity matrix, cis a speech-unit dependent constant, and w and v are noise terms.\n","Under one embodiment, the models of equations 1 and 2 are expressed in terms of probability distributions as:\n\n(\u2032)=\u03c0\u2003\u2003Eq.3\n\n()=()\u2003\u2003Eq.4\n\n()=()\u2003\u2003Eq.5\n\nwhere Band Dare precision matrices (the inverse of a covariance matrix), which are based on a variance associated with noise terms w and v and a=(I\u2212A)\u03bc.\n","In general, training the model parameters of equations 3-5 requires an iterative two-step process. The first step is known as inference, during which a posterior distribution p(s,x|y) is calculated given an initial set of model parameters. During the second step, known as learning or parameter estimation, the model parameters are updated. These steps are repeated until the model parameters converge or some maximum number of iterations is reached. When performing generalized Expectation Maximization training, the E-step is the inference step and the M-step is the learning step.","The inference step cannot be performed directly for the models of Equations 3-5 because the posterior calculation is intractable. One embodiment of the present invention overcomes this problem by approximating the posterior distribution with a mixture of Gaussians model. Another embodiment of the invention overcomes this problem by approximating the posterior distribution using HMM posteriors. Using such approximations and a variational computation, it is possible to estimate the posterior probability. Each approximation is discussed separately below.","Under the mixture of Gaussians embodiment of the present invention, the posterior probability p(s,x|y) is approximated as q(s,x|y), which is defined as: \n\n\nwhere q( ) represents a probability. Note that in the approximation of equation 6, the probability of a production-related value at frame n is not dependent on the value of the production-related parameters during other time frames and is only dependent on the value of the speech unit at frame n and not on the value of the speech unit for other frames. This greatly reduces the number of computations that must be made in order to calculate the approximation.\n","By minimizing a divergence between the approximation and the actual posterior distribution, the present inventors have found that the probability q(x|s,y) follows a Gaussian distribution:\n\n()=(|\u03c1,\u0393)\u2003\u2003Eq.7\n\nwhere the mean \u03c1and the covariance \u0393are given by: \n\n\nwhere \u03b3=q(s=s|y) is the probability of a speech unit at frame n and is computed as:\n\nlog\u03b3\u2003\u2003Eq.10\n\nwhere: \n\n\nwhere <> denotes a scalar obtained by summing up the element-wise product of two equal-sized vectors or matrices, and s\u2032 is an index for speech units for the summations. In the practice of this invention, the summation terms indicated by s\u2032 variable (discrete state) in the above equation have been drastically reduced during the training phase since the training script is available that strongly constrains the possible s sequence.\n","Under one embodiment, the inference step is performed by first determining \u03b3for each s,n combination using Equation 10 and previous values of \u03c1and \u0393. Since the computation of \u03b3in Equation 10 is dependent on \u03b3, Equation 10 is evaluated iteratively until \u03b3converges. Equation 8 is then evaluated using the new value of \u03b3from equation 10 to produce an updated value of \u0393. The updated value of \u0393is then used with \u03b3to determine \u03c1in Equation 9. Note that Equations 8 and 9 are coupled linear equations and can be solved efficiently by sparse matrix techniques. This process can be repeated iteratively to improve the accuracy of the values for \u03b3, \u0393, and \u03c1.","After the inference step is complete, the values for \u03b3, \u0393, and \u03c1are used in the learning step to set the values of model parameters \u0398={A,a,B,C,c,D} according to: \n\n","The inference and learning steps may be iterated several times to complete the training.","In a second embodiment, the posterior is approximated using an HMM posterior defined as: \n\n","As in the mixture of Gaussian model, the probability q(x|s\u03b3) in the HMM Posterior model is a Gaussian distribution with a mean \u03c1and a covariance matrix \u0393. The mean \u03c1and the covariance matrix \u0393are calculated using equations 8 and 9 above with a new definition of \u03b3. In particular, \u03b3is determined using a backward-forward process that also defines a posterior transition probability \u03b7=q(s=s|s=s\u2032,\u03b3).","The backward-forward process begins by initializing a value z=1 for all s. During the backward pass, the following calculations are performed for n=N, . . . ,2: \n\n","For n=1: \n\n","During the forward pass the following calculation is performed for n=2, . . . , N: \n\n\nwhere: \n\n","Thus, during the inference step, \u03b3is calculated first using the backward-forward process of equations 21-27. The mean \u03c1and covariance \u0393are then calculated using equations 8 and 9 above and the calculated \u03b3. These steps can be iterated before performing the learning step so that the values of \u03b3, \u03c1, and \u0393, reach stable values.","After the inference step is complete, the learning step can be performed to set the values of model parameters \u0398={A,a,B,C,c,D} using the following equations: \n\n","As those skilled in the art will recognize, iterative local optimization training algorithms, such as those discussed above for the mixture of Gaussian and HMM posterior models, perform better if the initialization values for the model parameters are close to the values identified through training. Under some embodiments of the present invention, the target parameter, a, for the production-related parameter is set based on hand-labeled production-related values. In one particular embodiment where the production-related values are vocal track resonances (VTR), the targets are initialized based on hand-labeled VTR data acquired from a speaker.","Because the phone boundaries are not fixed under the approximations made above, phone transitions can occur at each frame. For natural speech, there is some minimum duration for each phone such that transitions should not be allowed at each frame. To address this, embodiments of the present invention utilize a series of time-varying transition matrices that provide probabilities for transitioning to other phones at each frame. The matrices are built by modifying speech unit boundaries identified by HMM training. The modification to the boundaries involves transforming each boundary from a hard fixed boundary that occurs between two frames to a probabilistic boundary that extends over a number of frames. In a hard fixed boundary the value of \u03b3for each speech unit is either 1, indicating 100 percent probability of the speech unit for the frame or 0, indicating zero probability of the speech unit for the frame. Under the modified boundaries, the value of \u03b3can be anything between 0 and 1.","For example, if the HMM predicts a fixed boundary between a speech unit sand a speech unit s, under one embodiment, the probability of speech unit sand speech unit swill be set to 0.5 for the three frames before the fixed boundary and the three frames after the fixed boundary. In another embodiment, the probabilities of speech units sand schange gradually across the frames surrounding the fixed boundary. For example, the probability for speech unit sacross the respective frames would be [1, 0.8, 0.6, 0.5, 0.4, 0.2, 0] while the probability for speech unit sacross the same frames would be [0, 0.2, 0.4, 0.5, 0.6, 0.8, 1]. Note that speech units that are not predicted for a frame or a neighboring frame have a probability of zero.","Note that the number of frames on each side of the boundary can be different than three and can be based on the midpoint of each speech unit as set by the HMM training.","As noted above, the production-related parameters that the models of the present invention are based on are hidden and cannot be measured directly. However, for judging the performance of the system and for collecting data on the hidden production-related parameters, such as the vocal resonance tracks, it is desirable to be able to recover the values of the hidden production-related parameters.","Under the present invention, this can be done easily once the values of \u03b3and \u03c1have been trained using either the mixture of Gaussian approximation or the HMM posterior approximation described above. Once those values are known, the hidden production-related parameter is simply: \n\n","After the model parameters have been trained using one of the approximations discussed above, the model parameters and the approximations can be used to perform speech recognition. This involves identifying a most likely sequence of speech units, such as phones, given a sequence of observation feature vectors that represent a speech signal.","For the mixture of Gaussians approximation, speech recognition can be performed by simply determining \u03b3, \u0393, and \u03c1based on the observation feature vectors and the trained model parameters \u0398={A,a,B,C,c,D}. The speech unit s with the maximum \u03b3at frame n is then selected as the speech unit for frame n.","To avoid unnatural speech unit switching, this recognition system can be augmented with a transition matrix that adds a minimal duration constraint to the speech units. Thus, in the transition matrix, each transition between speech units has an associated probability, with the probability for remaining within a speech unit being higher than the probability of transitioning to another speech unit, at least for some minimum number of frames for each speech unit. In order to perform speech recognition using this transition matrix, a Viterbi decoder may be used that identifies the most likely path through the possible speech units given the transition probabilities and the \u03b3probabilities.","For the HMM posterior approximation, speech recognition is performed by determining \u03b3, \u03b7, \u0393, and \u03c1based on the observation feature vectors and the trained model parameters \u0398={A,a,B,C,c,D}. The speech unit probabilities for the first frame, \u03b3, and the transition probabilities, \u03b7, are then used in Viterbi decoding to identify a most likely sequence of speech units s. In terms of equations, the Viterbi decoder finds a maximum path score Vaccording to:\n\n()=\u03b3\u2003\u2003Eq.35\n\n\n","As with the mixture of Gaussian approximation, a duration constraint can be added to the HMM posterior decoding by modifying the transition probabilities to increase the likelihood of remaining within a speech unit relative to the likelihood of transitioning to other speech units.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 3","FIG. 3"],"b":["300","304","304","302","304","306"]},"A-to-D converter  converts the analog signal from microphone  into a series of digital values. In several embodiments, A-to-D converter  samples the analog signal at 16 kHz and 16 bits per sample, thereby creating 32 kilobytes of speech data per second. These digital values are provided to a frame constructor , which, in one embodiment, groups the values into 25 millisecond frames that start 10 milliseconds apart.","The frames of data created by frame constructor  are provided to feature extractor , which extracts a feature from each frame. Examples of feature extraction modules include modules for performing Linear Predictive Coding (LPC), LPC derived cepstrum, Perceptive Linear Prediction (PLP), Auditory model feature extraction, and Mel-Frequency Cepstrum Coefficients (MFCC) feature extraction. Note that the invention is not limited to these feature extraction modules and that other modules may be used within the context of the present invention.","The series of feature vectors is provided to a trainer , which uses the feature vectors and a training text  to train a generative model  of the present invention, if the input signal is a training signal. For example, the EM training algorithm described above may be used to train the generative model parameters \u0398={A,a,B,C,c,D}. As discussed above, in order to train generative model , trainer  trains an approximation model , such as the mixture of Gaussian approximation or the HMM posterior approximation discussed above.","As mentioned above, the EM training algorithm may be iterative. In such cases, trainer  accesses generative model  while training approximation model  and accesses approximation model  while training generative model .","Once generative model  has been trained, an input speech signal is converted into a stream of observation feature vectors. These feature vectors are provided to trainer , which sets the model parameters for approximation model  based on the observation vectors and the parameters of generative model . Decoder  then identifies a most likely sequence of words based on the stream of feature vectors, a lexicon , a language model , approximation model  and generative model . Under one embodiment, lexicon  defines a finite state network that is traversed by decoder  to identify a word from a sequence of feature vectors. Note that as discussed above, this network, referred to above as a transition matrix, may include duration constraints for the speech units that make up the words.","The most probable sequence of hypothesis words is provided to a confidence measure module . Confidence measure module  identifies which words are most likely to have been improperly identified by the speech recognizer, based in part on a secondary acoustic model(not shown). Confidence measure module  then provides the sequence of hypothesis words to an output module  along with identifiers indicating which words may have been improperly identified. Those skilled in the art will recognize that confidence measure module  is not necessary for the practice of the present invention.","Although the present invention has been described with reference to particular embodiments, workers skilled in the art will recognize that changes may be made in form and detail without departing from the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
