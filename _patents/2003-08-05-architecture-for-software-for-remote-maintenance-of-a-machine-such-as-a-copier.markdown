---
title: Architecture for software for remote maintenance of a machine such as a copier
abstract: Software in a computer which accesses one or more software-intensive devices, such as a digital copier or printer, is organized in a set of layers. A device-dependent layer converts data transferred over various means, such as a modem or network, to a uniform data format. A protocol layer converts data from a particular accessed machine to a set of function calls. A system interface associated with the computer restricts a user of the computer to seeing only a subset of function calls, depending permissions granted to a particular user. The modular architecture of the software enables a system administrator to restrict a user to viewing machine status for a specific set of machines on a network, or limits the user to viewing only a certain set of functionalities from a particular machine.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06959442&OS=06959442&RS=06959442
owner: Xerox Corporation
number: 06959442
owner_city: Stamford
owner_country: US
publication_date: 20030805
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","DESCRIPTION OF THE PRIOR ART","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This is a divisional of U.S. application Ser. No. 09\/160,642, U.S. Pat. No. 6,636,899, filed Sep. 24, 1998 by the same inventors, and claims priority therefrom.","The present invention relates to software for interactive communication with a machine, such as a copier or printer, enabling remote status inquires and maintenance of the machine. Specifically, the present invention relates to a specific architecture for such software which facilitates many practical advantages.","With the increasing sophistication of office equipment, such as digital copiers, printers, facsimiles, as well as devices which combine many of these functions, individual devices become more and more software intensive. Much of the functionality associated with a particular device dwells in the software of the device, and functionalities of a device can be monitored, improved or increased via the machine software. Preferably, such software access could be performed, for example, by a tech rep attending the device and plugging in a personal computer or laptop into the device for direct access to or downloading of software; or, the software could be accessed or installed in a device remotely, over a network.","Whatever the specific physical means used to access the internal software of a particular machine, it is most desirable to provide a common \u201capplication\u201d enabling a human user to view and if necessary alter the machine conditions through the user's computer. It is most desirable that the application for interacting with a particular machine be indifferent to the specific physical means (network, modem, direct connection, IR, etc.) by which a particular machine is accessed.","Further, it is likely that a relatively large population of machines, such as digital copiers or printers, may be accessed in various ways by a relatively large population of human users or administrators. Depending on the level of interaction with the internal software of various machines, it may be desirable to give some human users, such as administrators, fairly detailed access to the internal software of a particular machine (e.g., voltage levels within the printer hardware, analysis of the long-term use of the machine), while other users are given only limited access to only the most basic software functions (e.g., simply determining whther a printer is available for use). Of course, there is also a necessity to give some users access to only some machines, with different users access to other machines. There is thus a need to set-up what is in effect \u201cread\u201d and \u201cwrite\u201d privileges relating various users to specific functions within various machines.","U.S. Pat. Nos. 5,038,319; 5,057,866; 5,138,377; and 5,339,168 are examples of basic concepts of \u201cremote interactive communication\u201d with machines such as printers and copiers.","The article by Bylinsky, \u201cFixing Machines From Afar,\u201d , Aug. 17, 1998, page 174[B], describes a number of techniques currently available for remote repair, diagnostics, and maintenance of various complicated machines.","According to one aspect of the present invention, there is provided a program, operable on at least one computer, for accessing machine software operative of a machine. A protocol layer converts data derived from the machine software to a set of function calls, the function calls being exportable to an application for viewing on a user interface. A system interface applies a set of permissions to the function calls from the protocol layer, whereby only a permitted subset of function calls may be exported to an application.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1","b":["10","10"],"i":["a","b"]},"Typically, in the context of office equipment, there are any number of ways in which the internal software of a machine such as , could be accessed. As most digital printing equipment is based on a network, the machine could give access to its internal software through a network  which connects to any one of a number of computers such as , which may be located anywhere in the world. A customer service engineer (CSE) or \u201ctech rep\u201d can come out the customer site and directly couple his laptop computer, such as , directly to a port in the machine , or a computer such as can interface with the machine through a modem , using telephone lines. Alternately, a tech rep can access a suitably-equipped machine such as with an infrared (IR) communication link, as shown.","The present invention is a software architecture which allows different users to have different levels of interaction with different machines, and also allows certain users to access only a subset of machines needed for particular business purposes. Also, the present invention facilitates a common \u201capplication\u201d for user interface, which can be used by all users, whether remote or directly connected to the particular machine, in which the actual connection to the machine is essentially invisible to the user.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 2","FIG. 1"],"b":["20","20","20","20","20","20"],"i":["a","b","c","d "]},"According to a preferred embodiment of the present invention, the software residing on a particular computer  has four layers. Significantly, according to the present invention, these four layers are distinct from each other in that they interface with each other exclusively through distinct channels, so that, for example, information in a particular level must travel through intervening layers in order to get to another layer, as shown. (It is also conceivable that different layers can reside on different \u201ccomputers\u201d or CPUs, with for instance one layer on a tech rep's lap-top and another layer operating on the CPU within a machine  itself.) Device-dependent layer  interacts through a port  with the machine software in a particular machine . (In the context of office equipment a particular machine  may further include a quantity of memory in a \u201cconsumer replaceable unit monitor,\u201d or CRUM, indicated as  and which will be explained in detail below.) For purposes of the present discussion, the port  can be any type of machine interface suitable for accessing the machine software: the port  could be a direct cable connection, a network, a modem, IR interface, etc.","The function of the device-dependent layer  is to convert data from a machine  coming through port  to a uniform format, regardless of the particular mechanism of port . For example, if the port  is an infrared link, the actual binary data from a particular machine  may be of a specific format in order to enable the IR link; yet another format for port  may be required when the data from machine software  is sent over the internet (in the claims herein, the different formats for different communication means are called \u201cport formats\u201d). The device-dependent layer  converts the data from port  to a standard format, so that the rest of the system is thereby indifferent to the physical nature of the port . In brief, device-dependent layer  may include any number of look-up tables for converting raw data from one of any number of port formats into a standard format.","Once the data from machine  is converted by device-dependent layer  to a standard format, the data can be accessed by what is here called a protocol layer . Protocol layer  packages data so that the source of the data (in this context, a particular machine ), and the destination of the data (typically a particular application program on a particular computer , the computer itself possibly being on a network), along with the suitable data format, can be determined. Protocol layer  is thus essentially a set of application programming interfaces, or API's, which convert the data in standard format from device-dependent layer  into a series of function calls, which could be accessed by an application program for viewing through a user interface, such as on a computer .","System interface  determines what data from protocol layer  can be exported to a particular client, and converts the data from protocol layer  to a client-desired format for viewing. The system interface  thus requires a set of permissions which match the ID's of a particular user using a particular computer  with the ID's of particular machines  to which the particular computer  can access; further, the system interface  can allow a particular user to access only a subset of all possible function calls which are present in protocol layer . These permissions can be essentially permanently associated with a particular computer , or can be established over a large number of computers through a system administrator, through means known in the art.","The top level of the software in computer  is an application layer . Basically, the application layer  is simply a user interface program by which a permitted subset of function calls (that is, the function calls which system interface  permits a particular user to view from protocol layer ) can be viewed by a human user. The human user can be a systems administrator, a customer service engineer or \u201ctech rep,\u201d or the end user of a particular machine.","When a user (whether a tech rep, systems administrator, end user, or third-party tech rep) accesses a machine through computer , the user typically submits via application layer  a user ID and\/or an ID relating to a particular machine desired to be accessed. It is possible that submission of a user ID to system interface  may cause system interface  to automatically identify one or more machines on a network that user is permitted to access. The system interface  also identifies, based on the user ID, which subset of function calls, relating to which functionalities in a machine , the particular user is permitted to access. Typical \u201cfunctionalities\u201d which relate to the function of a machine  that a user may wish to view include (in the office-equipment context) the number of prints output since last access; average number of prints per day; fault codes recently generated by the machine's internal software; and information about replacement of various parts. Each of these functionalities relate to one or more function calls which are made available by the protocol layer, having been ultimately derived from the machine software .","However, in real-world situations, it may be desirable to permit, for instance, only systems administrators, and not end users, to view certain information. Also, function calls can, in a preferred embodiment, be used to send data to machine software, such as to reset or correct the operation of a particular machine; one would want to restrict the ability to move data to the machine software to qualified tech reps. For this reason, it is important that the permissions system in system interface  be able to restrict to which machines a user has access, and also which functionalities a user is allowed to access or use in a machine.","Because system interface  can use a system of permissions to permit access by a particular user using computer  to only a particular machine or set of machines , and\/or a particular set of function calls from protocol layer , facilitates any number of important business arrangements which are useful particularly in the office equipment industry. For example, the permissions within system interface  can be designed to restrict the operation of a particular computer  to, for example, direct connection only, preventing a particular computer  from remotely accessing a particular machine  such as through a network  or even through a modem . The system interface can selectably restrict a particular computer  from accepting certain software upgrades or wizards such as available through network .","Also shown in  between various layers such as protocol layer  system interface  is capability for exchanges of \u201cinternal ID's\u201d between various layers. For instance, there could be a provision that the system interface  can obtain a particular function call from protocol layer  only by submitting an internal ID number from the system interface  to protocol layer ; such an arrangement could be a vehicle for restricting a particular user from accessing function calls in protocol layer  relating to certain non-permitted functionalities. To take another example, submission of a certain user ID or machine ID to application layer  may cause application layer  to activate suitable internal ID's for accessing function calls through system interface . Application  may have to submit an internal ID (which may be tied to the particular hardware on which application  resides) to system interface  to obtain any access to system interface .","The internal ID system can be used to facilitate certain types of use restrictions on certain computers : for instance, if a particular computer  is resticted to local use only, device-dependent layer  may require submission of an internal ID (ultimately from system interface , where it may not exist, if the particular computer  is restricted) to device-dependent layer  before activating parts thereof which enable remote (network or modem) connections to a machine. Preferably, this exchange of an internal ID between these two layers is completely invisible to a user viewing application . This feature makes a computer  operating machine  substantially more difficult to \u201chack,\u201d that is, to permit a user to obtain access to functionalities in the machine software to which he has not been given access.","Also, for various reasons it may be desirable to require internal ID's to be submitted \u201cupwards\u201d in the direction of the Figure: for instance, device-dependent layer  may have to submit an internal ID relating to a particular machine  up to system interface  (via protocol layer , in the illustrated embodiment), as a means of preventing a machine  which is not on a service contract from sending a hardware error message ultimately to an application .","In terms of restricting the particular functionalities, in terms of sets of function calls from protocol layer , to which a particular user can have access, typical types of function calls which would be restricted to a particular user may include: the billing data; a customer profile (that is, a record of how often a particular customer is using a particular machine); and data which may be stored in the customer replaceable unit monitor (CRUM)  which is installed in the machine . Very often, particularly in office equipment, a replaceable unit in the machine, such as a toner cartridge or fuser unit, may include a chip thereon, typically comprising an EEPROM, which functions as a \u201codometer\u201d for the replaceable part (showing the accumulated wear or use of the part), or else may contain information relating to the desired use of the particular part (e.g., how much voltage should be sent to the part).","While this invention has been described in conjunction with various embodiments, it is evident that many alternatives, modifications, and variations will be apparent to those skilled in the art. Accordingly, it is intended to embrace all such alternatives, modifications, and variations as fall within the spirit and broad scope of the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"}]},"DETDESC":[{},{}]}
