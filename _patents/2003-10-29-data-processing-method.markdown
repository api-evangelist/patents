---
title: Data processing method
abstract: A data processing method is provided whereby, even if communication delay occurs between computer game devices connected through a communication network, data is processed practically simultaneously between the respective computer game devices. When a computer game contest is carried out through a network having communication delay, before the game is started, the delay times between the game devices are found and, using these, synchronization of the time counted by the individual game devices is obtained. Then, during the progress of the game, the operating data signal is processed after the lapse of the longest delay time of the delay times between the game devices measured beforehand after it is generated. In this way, the operating data signal can be processed simultaneously in a plurality of game devices.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07431651&OS=07431651&RS=07431651
owner: Sega Enterprises, Ltd.
number: 07431651
owner_city: Tokyo
owner_country: JP
publication_date: 20031029
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application is a divisional of application Ser. No. 09\/660,334 filed Sep. 12, 2000 now abandoned, which claims priority to Japanese Patent Application No. 11-261013 filed Sep. 14, 1999, Japanese Patent Application No. 11-318131, filed Nov. 9, 1999, and Japanese Patent Application No. 2000-113947, filed Apr. 14, 2000. The subject matters of these applications are hereby incorporated by reference.","1. Field of the Invention","The present invention relates to a data processing method in a computer game device connected through a communication network and in particular relates to a data processing method for simultaneously processing in each device data that has been input from a single device.","2. Description of the Related Art","In recent years, computer game devices for domestic use having a communication function are becoming common. With such computer game devices, by connecting to one or more other computer game devices through a network such as the Internet, it is possible to enjoy computer game combats between players of mutually separated computer game devices.","However, when mutually separated computer game devices are connected through a network such as the Internet, there is the problem of communication delay. Specifically, in a given one computer game device, the operating data generated corresponding to a player operation (movement of a character and\/or attacking action etc) is processed in this one computer game device and is also transmitted to another computer game device, where it is likewise processed. In this situation, the operating data is practically instantaneously processed in the one computer game device and is displayed on the screen corresponding thereto, but, in the case of the other computer game device, this operating data arrives only after a prescribed transmission time and is subsequently processed and the corresponding screen is displayed.","Thus, if communication delay occurs, since the processing time points of the same data are different in the respective computer game devices, the game does not proceed synchronously. Consequently, at a given time point the players of the respective game devices perform operations whilst viewing respectively different game screens, so the inconvenience is produced that the players experience a feeling of incongruity with regard to the operations of their opponent and furthermore the game results may be different on each computer device.","Consequently, an object of the present invention is to provide a data processing method whereby, even if communication delay occurs between a plurality of computer game devices connected through a network, data is processed practically simultaneously between the respective computer game devices.","In order to achieve the above object, according to the present invention, when a computer game contest is conducted through a network having a communication delay, the delay times between the devices are found before starting the game, and these are used to obtain synchronization of the times counted by the respective devices. Thus, during the progress of the game, the operating data signal is processed after the lapse of the delay time of greatest length of the delay times between the devices measured beforehand after it is generated. In this way, simultaneous processing of the operating signal can be achieved in the plurality of devices.","In order to achieve the above object, according to the present invention, for example, in a method of data processing between a plurality of computer game devices connected through a communication network, there is provided:","a method of data processing comprising:","a measurement step of measuring the delay time between the plurality of respective devices;","an acquisition step of acquiring the longest time of the measured delay times;","a synchronization step of synchronizing the time that is counted by the plurality of devices; and","a processing step of processing data that is transmitted from the devices in the plurality of devices on the elapse of the longest time of the delay times from the time of this transmission.","Preferably, in the invention described above, the data comprises information regarding the time of transmission and, when the data is received, the processing step recognizes when the aforementioned longest time has elapsed, using the difference between the time when the data was transmitted and the time which it counts itself.","Further, preferably, according to the invention, the synchronization step comprises a transmission step of transmitting from one device of a plurality of devices to another device the count value of the one device; and","a stopping step of temporarily stopping count incrementation in another device such that the difference of its own count value and the received count value becomes the delay time with respect to the one device.","Embodiments of the present invention are described below. However, the technical scope of the present invention is not restricted to these embodiments.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 1","FIG. 1"]},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 2"},"The game device therefore comprises: a CPU  that controls the entire system; a geometry processor  that performs geometric calculations; system memory  such as working RAM; a CD-ROM  constituting a storage medium on which the game program is stored; ROM  for initializing the game; a bus arbiter  that controls the bus; a rendering processor  that executes rendering; graphic memory ; a video DAC  that performs a digital-analogue conversion of graphic data; an audio processor; audio memory ; an audio DAC  that performs digital-analogue conversion on the audio data; and a modem  under the control of the bus arbiter. The game device is connected to the Internet through a communication circuit from modem .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 3","b":["101","102","100","101","102","105","101","102","105","103","101","102","103"]},"A single square in which a hole  is set is allocated to a single player. A player competes to cause more mouse player characters  than the opposing players to fall into his own hole. For this purpose, a player performs an operation of placing arrows such as to guide mouse characters  into his own hole. For example up to three arrows may be placed by a single player. Consequently, when the fourth arrow is placed, the oldest arrow is deleted. A single stage is for example three minutes and the number of mouse characters  that have fallen into each player's hole  in this period is displayed as the score.","Also, in this game, if a cat character  falls into a hole, the number of mouse characters  that have already fallen into the hole is reduced in a prescribed ratio (for example reduced by two-thirds). Consequently, one tactic is for a player to place an arrow such as to guide a cat character  into an opposing player's hole.","In such a game, when a plurality of players are competing by means of a network, if there is communication delay as described above, the processing time-point corresponding to the operation of placing an arrow in a square by a given player will be different for each of the game devices, causing the positions of the characters running around on the screen on each game device to be different. If this happens, the games proceeding on each game device will become respectively different, so the result of the contest will also be different for each game device, thereby making it impossible to execute competitive games through the network.","Accordingly, an embodiment of the present invention proposes a method of data processing described below whereby the games proceeding on a plurality of game devices connected through a network having communication delay can be made to be identical. In the following description, as shown in , the case where a game is executed by connecting three game devices A, B and C through a network will be described. Also, the data processing method described below is provided by a game program stored on a recording medium  in  and executed by CPU .",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 4","b":["1","1","1","1","8","1","1"]},"Also, the measurement is performed a plurality of times (for example 50 times) and each game device obtains the average delay time and maximum delay time between it and the other game devices (steps SA, SB, and SC). Specifically, game device A obtains the average delay time and maximum delay time between it and game devices B, C, respectively (step SA), game device B obtains the average delay time and maximum delay time between it and game devices A, C, respectively (step SB), and game device C obtains the average delay time and maximum delay time between it and game devices A, B, respectively (step SC).","Thus, the information of the average delay time Dtavg and the maximum delay time DTmax (hereinbelow called the delay time information) of the other game devices obtained by each game device is collected in a single game device. If for example the game device in which this delay time information is collected (hereinbelow called the representative game device) is taken as game device A, game devices B, C communicate their respective delay time information to representative device A (steps SB, SC).","Representative device A determines the longest maximum delay time of the delay time information that has been collected as the reference delay time DTref after commencing the game, and communicates this time DTref to the other game devices B and C (step SA).","Next, representative device A sends to the other game devices B, C a reset warning signal to synchronize the count values of the timers of the respective game devices (step SA). Next, representative device A, after the passage of a first time T (for example a few seconds) from the sending of the reset warning signal, resets the count value \u201c0 (zero)\u201d of the timers (step SA).","For their part, the game devices B, C receive the reset warning signal from representative device A after the lapse of respective delay times DT, DT(steps SB, SC). At this point, the game devices B, C assuming that the reset warning signal delay time is the maximum delay time DTmaxor DTmaxwith the game device A respectively obtained in the above steps SB, SC, reset the count values of the respective timers to \u201c0 (zero)\u201d after the lapse of a time obtained by subtracting the respective average delay time with game device A from the first time T after receiving the reset warning signal (steps SB, SC).","A more specific description will now be given with reference to .  is a timing chart given in explanation of the method of synchronizing the times of game devices A, B, C. For example, when game device B receives the reset warning signal, it identifies its delay time DTas the maximum delay time DTmaxwith game device A. Likewise, game device C identifies the delay time DTof the reset warning signal as the maximum delay time DTmaxwith game device A. Then, game device B resets its timer ( T\u2212DTmax) seconds after it has received the reset warning signal. Likewise, game device C resets its timer ( T\u2212DTmax) seconds after it has received the reset signal. In this way, the timers of game devices A, B, C are reset practically simultaneously to 0 (zero)\u201d, and new counts are commenced.","However, it is not essential that the actual delay time in each game device is the maximum delay time DTmax. Consequently, strictly, there exists the possibility that the reset timing of each game device may be considerably offset or the possibility that the times of each game device are not precisely synchronized. Accordingly, in this embodiment of the invention, the times of the game devices are synchronized even more precisely by the following adjustment processing performed after the lapse of a second time T (for example a few seconds) after reset.","Returning to , in step SA, representative device A, simultaneously with reset, sends to the other game devices B, C a count value signal containing its current count value \u201c0\u201d. Also, game device A may send a count value signal including the count value at a prescribed time-point after reset.","When game devices B, C receive the count value signal from game device A after the lapse of the respective delay times, they read the count value of their own timers when the count value signal was received (steps SB, SC). In addition, game devices B, C calculate the delay time with game device A by calculating (count value that is thus read-count value of count value signal).","Thus, as shown in , if for example the delay time DTcalculated in game device B is longer than the average delay time DTavgwith game device A by more than a prescribed time (for example 3 to 4 counts (3 to 4 int)) (step SB of ), game device B stops the count incrementation of the count value of the time for a period (delay time DT\u2212the average delay time DTavg) (step SB of ). The same applies to game device C (steps SC, SC of ).","In the above description, the time of reset of game devices B, C is ( T\u2212DTmax) after reception of the reset warning signal. Consequently, since game devices B, C are reset simultaneously with or before game device A, the count values of game devices B, C can be precisely synchronized with the count value of game device A by temporarily stopping count incrementation of game devices B, C, taking the count value of game device A as standard.","Thus, the times of the respective game devices are synchronized to some extent by timer reset in steps SA, SB and SC. In order to synchronize the times of the game devices even more accurately, after reset, the game devices (B, C) other than the representative device compare their delay times with the average delay time by finding the delay time of the count value signal from representative device A with reference to the count value of their respective timers. If then the delay time that is thus found is larger by more than a prescribed time than the average delay time, count incrementation of the timers is stopped for a period corresponding to (delay time-average delay time), thereby correcting the count value; in this way, the times of the game devices A, B, C measured by the timers can be practically precisely synchronized.","Then, after the lapse of the second time T, the game is simultaneously started in the respective game devices A, B, C (steps SA, SB, SC). An operating data signal corresponding to a player operation in a given one game device (for example, the operation of placing an arrow in a prescribed square in the computer game of ) is processed by the one game device and also transmitted to the other game devices and is processed in the other game devices too. In this process, as described above, the operating data signal must be simultaneously processed in the one game device and in the other game devices.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 6","FIG. 6"],"b":["30","40"]},"As shown in , with a computer game device according to this embodiment of the invention, a plurality of players on a single game device can participate in a combative computer game through a network (in , players c, d operate game device C). Consequently, the data section  of the operating data signal that is transmitted from the single game device contains operating data corresponding to the plurality of players, for each player. The data length of the operating data signal will therefore be different depending on the number of players operating the single game device. Also, the game device that receives the operating data signal recognizes the number of players operating the transmitting game device by referring to the number information of the players contained in the header section  and can thereby recognize the length of the following data section . In this case, the length of the operating data corresponding to one player is set to a constant length irrespective of the magnitude of the amount of data.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIGS. 7A and 7B","FIG. 7A","FIG. 7B"]},"In , at step S, when the game device receives an operating data signal, in step S, it compares the count value contained in the operating data signal and the count value of its own timer at the time-point of reception, and thereby calculates the delay time DT. Furthermore, in step S, the game device calculates the difference time of the reference delay time DTref and the calculated delay time. Then, in step S, the game device processes the operating data signal after the lapse of the difference time from when the operating data signal was received.","Also, in  in step S, when the game device sends an operating data signal, in step S, it processes the operating data signal after the lapse of reference delay time DTref.","Returning to , for example, the data processing in each game device of the operating data signal transmitted from game device C will be described. Game device C does not immediately process the transmitted operating data signal but only processes the operating data signal after the lapse of the reference delay time DTref from the time-point (count value) of transmission. In contrast, when game devices A, B receive the operating data signal from game device C, they read the count value at the time point of its reception, and calculate the respective delay times DT (count value on reception-count value contained in the operating data signal). Furthermore, game devices A, B respectively calculate the difference time of the reference delay time and the delay time DT found as referred to above (reference time DTref\u2212DT). Then, they process the operating data signal after the lapse of the difference time which is thus found after reception of the operating data signal.","In this way, the operating data signal is processed in the game devices A, B, C after the lapse of the reference delay time DTstd from the time point of its transmission. Since the count values of the timers of game devices A, B, C are practically coincident due to the synchronization processing described above, the operating signal is processed simultaneously by all of the game devices A, B, C at once, after the passage of the prescribed reference delay time that has been set.","Since, as described above, the reference delay time is the longest time of the respective maximum delay times among the individual game devices, it can be arranged for the operating data signal to be received reliably by all the game devices, by having all the game devices suspend operation for the standard delay time from the time-point of transmission of a given operating data signal. Thus, since, according to the present invention, the same operating data signal is simultaneously processed by all of the game devices, processing of the operating data signal is suspended until all of the game devices have received the same operating data signal. In order to measure this suspension time, the times measured by the timers of the respective game devices are synchronized, and furthermore the standard time i.e. the reference delay time is set.","The mouse characters, cat characters, arrows, and also the background such as the board having squares which are displayed on the computer game screen shown in  are obtained by image processing as objects in three-dimensional virtual space.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":["FIG. 8","FIG. 8"],"b":["100","110","101","102","110","101","102","100"],"i":["a","b ","a","b "]},{"@attributes":{"id":"p-0074","num":"0073"},"figref":["FIGS. 9A and 9B","FIG. 8","FIG. 9A","FIG. 9B"],"b":"100"},"An image as shown in  from directly above board  is an image in which the movement of the characters on the entire board is easiest for a player to view. Consequently, although this is ideal as an image during progress of the game, since only the heads of the mouse characters , and cat character  are displayed on board , it has the drawback that the shape of the form of the characters is difficult to comprehend.","Accordingly, in this embodiment of the present invention, when the image is displayed from a viewpoint directly above board  (viewpoint A of ), the direction in which the characters face is inclined by a prescribed angle (for example 45\u00b0).",{"@attributes":{"id":"p-0077","num":"0076"},"figref":["FIGS. 10A-10F","FIG. 10A","FIG. 8","FIG. 10B","FIG. 10C","FIG. 8","FIG. 10D","FIG. 10B","FIG. 10E","FIG. 8","FIG. 10F","FIG. 10B"]},"In this embodiment of the present invention, as described above, when the viewpoint is directly above the character, the character is inclined at a prescribed angle in a prescribed direction. In this way, even during the game, the shape of the form of the character can be displayed in a manner which is easy to understand. Also, the direction of inclination may be fixed in one direction irrespective of the movement of the character. For example, in , the characters are inclined in the upwards direction (direction of arrow X) in the plane of the drawing. In this way, the mouse character is inclined in the forwards and upwards direction as shown in , and so is displayed as shown in . Also, the mouse character is inclined in the lateral direction as shown in  (left-hand direction in ), and so is displayed as shown in .","In this way, in this embodiment of the present invention, the direction in which the object faces changes in accordance with the position of the viewpoint co-ordinates in the three-dimensional virtual space. In this way, objects (characters) displayed on the game screen can be displayed in a manner which is easier to understand.","Before commencing a network combat game as described above, it is necessary that the game devices A, B, C of  should mutually recognize the game devices of the opposing combatants. In order to achieve this, before commencing the game, the players first of all connect the game devices, constituting the clients in the network system, to the server (hereinbelow called the \u201cnetwork server\u201d) that manages the network combat game, to register them on the network server. A combat group is thereby constituted. Thus, players wishing to play a network combat game first of all make connection with the network server.",{"@attributes":{"id":"p-0081","num":"0080"},"figref":["FIG. 11","FIG. 11","FIG. 12","FIG. 13","FIG. 12","FIG. 11","FIG. 13"],"b":["1","2","2","2","2","3"],"i":["a","b","c ","d "]},"First of all, in step S, the player sets the recording medium (for example CD-ROM) on which the computer game program is stored in position in the game device, and starts up the computer game program. When the game program is started up, first of all, the game mode selection screen M of  is displayed. On the game mode selection screen, there are displayed for example the \u201c4 Players Battle\u201d, which is a combat within the game device, the \u201cStage Challenge\u201d, in which the desired stage of combat can be selected, and the \u201cNetwork Battle\u201d, which is a network combat mode. The player selects \u201cNetwork Battle\u201d by operating the controller (step S).","When Network Battle mode is selected, a selection screen M () for selection of the number of participants in the Network Battle is displayed. The player selects the number of participants by operating the controller (step S). A plurality of controllers (for example four) for operation by the players can be connected to a game device. Consequently, the case may be envisaged where a plurality of players participate in a network combat game from a single game device.","Conventionally, in a combat game that is played in a game device without going through the network, a plurality of players can participate in combat by utilizing a plurality of controllers connected to a single game device. On the other hand, on the network, the network server is unable to identify the number of controllers (or number of players) connected thereto simply by identifying the number of game devices connected to it.","Specifically, conventionally, in a combat game that does not go through the network, a single connection is created between a single game device and the network server, and the network server cannot identify the number of controllers or players connected to the game device. Consequently, only a single player could participate in a combat game through the network from a single game device.","Accordingly, in the present embodiment of the invention, the number of players participating in a network combat game from a single game device is notified beforehand to the network server. In this way, even though there is the only one connection between a single game device and the network server, the network server can recognize the number of players participating from a single game device and so can make possible the participation of a plurality of players in a network combat game from a single game device. It should be noted that selection of the number of participants is not restricted to being performed in step S above, but could be performed in any step up to notification of the number of participants to the network server.","When the number of participants is selected, the game device calls the Internet provider through the modem (step S), and communicates a request for connection to the network server through the Internet provider. The connection request includes the identification information of a single player such as the player ID and password. If the Internet is utilized using the TCP\/IP protocol, the remote party of the connection can be specified by specifying the IP address and port number. First of all, the game device connects to the main server  of the network server by specifying the IP address and port number of main server . The IP address and port number of the main server  are stored beforehand in the game device. In this case, the IP address identifies the network server, and the port number identifies individual servers therein. In , the main server and sub-servers are shown as divided by software within a single network server. If the main server and sub-servers are separate systems, they are given respective separate IP addresses.","A brief explanation of TCP\/IP will now be given. FIG.  is a view showing the layers of the TCP\/IP protocol. In , the TCP\/IP protocol is of a 5-layer structure. In comparison with the OSI reference model, TCP is a protocol that provides a data link of the connection type, and corresponds to a transport layer constituting a stream-type interface with respect to an upper-layer application, and establishing connection between separated processes on the network. Also, IP corresponds to the network layer whereby data is transferred on the network, two points on the network whereby data is transferred being represented by IP addresses. The TCP upper layer is the application layer and the IP layer is the interface layer and physical layer. As the lower layer, the Internet or FDDI etc are known.","Also, a socket included in the application layer of the TCP\/IP protocol is an application programming interface (API) for creating applications to perform data exchange by communication between processes on the TCP; in more detail, it corresponds to the session layer in the OSI reference model. A socket provides an environment whereby process users can treat communication between processes in the same way as file input\/output, without being conscious of the environment (system or network etc). Accordingly, two connected processes (in this embodiment, the game device and network server) create sockets (communication input\/output ports) and data signals are exchanged between the sockets.","Returning to , a connection request from a game device is subjected to acceptance processing by the main server  in the network server and, in addition, is subjected to recognition processing (step S). Thus, the main server  is a server which executes acceptance processing and validation processing in respect of a connection request from a game device. When it receives a connection request, the main server  executes validation processing in accordance with user information registered beforehand therein and identification information that is notified thereto. If it recognizes that a player is genuine, the main server  sends a connection response to the game device and notifies the sub-server  of the information. The connection between the game device and the network server is thereby established (step S).","The information of the sub-server  comprises for example the name of each sub-server , the IP address, port number and information as to the number of persons currently registered. The information as to the number of persons currently registered, as will be described, is stored in a shared memory . Main server  reads the information as to the number of persons currently registered of each sub-server  from shared memory . The sub-server  is a server for managing the network combat game that is currently being played; the combat group is formed by registering the players with the sub-server.","On connection with the network server, the server guide screen M is displayed on the game device. The names of the sub-servers  are displayed on screen M. A player (when there are a plurality of participants, one of the plurality of players) selects a sub-server by operating the controller (step S). The number of players that can be registered on a single sub-server is determined in accordance with the details of the server. Consequently, if a sub-server  on which the maximum number of persons has already been registered is selected, a message to the effect that the server cannot be selected is displayed. Also, a player, by operating the controller, can cause the number of persons currently registered on each sub-server, or connection feasibility information based on this, to be displayed.","When a sub-server  is selected, the main server  changes over the connection with the game device to the selected sub-server  (step S). Specifically, main server , when the sub-server that has been selected is notified from the game device, communicates the IP address and port number of the selected sub-server  to the game device.","Also, when a sub-server is selected, a connection request is communicated to the selected sub-server, using the IP address and port number of the selected sub-server. The selected sub-server, when it performs acceptance processing of this connection request (step S), notifies the game device of the information of a plurality of registration regions (hereinbelow called \u201crooms\u201d) defined within the selected sub-server . For example, if the maximum number of combatants for a network combat game is four, the sub-server  will have prepared a plurality of rooms for registration of groups of four players. A room guide screen M () is displayed on the game device. This information may be included in the sub-server information that is communicated from the main server . In this case, there is no need for the connection request to the sub-server to be made when the sub-server is selected.","The player selects a room by operating the controller (step S). When a room is selected, the selected room and the number of participants are communicated to the selected sub-server from the game device. The selected sub-server then registers (step S) players, to the number of participants, in the notified room. The selected sub-server notifies the game device of the player information registered in the selected room. The registered player information comprises for example the names of the players, and the IP address and port number of the game devices of each player. In this way, the game devices acquire the IP addresses and port numbers of the game devices of their opponents.","The information of the players registered in the selected room is displayed on screen M (). On the screen M of , for example if two players are participating from a single game device, player X and player X are displayed as the players' names. This is because the network server only registers the identification information of a single player in respect of a single game device. The game is then started (step S) by selection of the start button of screen M by one of the players registered for the selected room operating the controller.","It should be noted that it will not be possible for a player to be registered in a selected room if for example the maximum number of combatants (for example four persons) is already registered in the selected room, or if, the number of participants being two, the maximum number of combatants is exceeded if two persons register, or if a game has already begun. By operating the controller, a player can cause the number of persons who are already registered or the condition of each room, for example as to whether a game is in progress there or not, to be displayed.","Also, the rooms of the sub-servers  may have a multi-layer arrangement. For example, where a sub-server is a server that manages network combat games of a plurality of types or that manages chat rooms etc, it may be provided with large rooms for each type of game and large rooms to serve as chat rooms, a plurality of small rooms being set up under the large rooms.","Also, on the above screens M-M, there is displayed an item \u201cexit\u201d. By selecting this, it is possible to return to the previous screen. Consequently, if \u201cexit\u201d is selected, if the sub-server rooms are in a multi-layer arrangement, it is possible to return to the single upper layer. Also, in screen M, if \u201cexit\u201d is selected, screen M is restored i.e. the game device is again connected with the main server . A player may change the sub-server in which he\/she is registered if for example a remote friend is registered in a room contained on another sub-server. In such cases, conventionally, it would have been necessary for the player to select \u201cexit\u201d on screen M and once changeover to connection with the main server  had taken place, to select the other sub-server by using screen M.","However, if changing of sub-server occurs frequently, there are the following problems. Specifically, connection requests to the main server  are limited to the number that can be processed at once by the capacity of the operating system (more generally, the software) of the main server . For this reason, if a number of connection requests exceeding the connection request processing capability of the main server are simultaneously concentrated on the main server , the main server  becomes unable to accept the connection requests, so the game device cannot connect to the main server .",{"@attributes":{"id":"p-0101","num":"0100"},"figref":["FIG. 15","FIG. 15"],"b":["2","1","1","2","2","1"]},"It is therefore desirable to reduce as far as possible that the number of connection requests to the main server . Accordingly, in this embodiment of the present invention, it is possible for the connection of the game device to be directly changed over to another sub-server from the sub-server to which it was connected previously. For this purpose, the network server in  is provided with a shared memory .","Shared memory  stores information relating to all of the sub-servers , such as the respective operating condition of the plurality of sub-servers , and the number of persons registered thereon etc. The information relating to the sub-servers  is periodically (for example every 0.5 second) updated by the respective sub-servers themselves.","Shared memory  can be accessed by the main server  and the plurality of sub-servers , respectively. The main server  reads information relating to all the sub-servers  from shared memory . Also, each sub-server  reads information relating to other sub-servers  than itself from shared memory . By providing shared memory that can be accessed from all the servers, it is arranged that the information of the other servers can be acquired without one-to-one connection of each server.",{"@attributes":{"id":"p-0105","num":"0104"},"figref":["FIG. 16","FIG. 16","FIG. 16"],"b":["3","2","2","2","2","2","2","2","2","2","2","2","2","2","3","1","1","3"],"i":["a","b","c","d ","a","b","c","d ","a","b","c","d "]},"When information is read, the value of the region that was read becomes a value (for example \u201c\u22121\u201d) to signify the read condition until it is updated to the next information. In this way, if, due to some fault, a sub-server is unable to write information, the region of shared memory  stays in the read condition. In this way, another server can recognize that this sub-server is malfunctioning.","Returning to , in screen M, the item \u201cmove to another server\u201d that is characteristic of the present invention is displayed. If this is selected, the selected sub-server  reads information relating to the other sub-server from its own column in shared memory  and communicates this to the game device. The information relating to the sub-server consists in information such as the name of the sub-server, its IP address, port number and number of persons registered, in the same way as described above. Each sub-server stores beforehand the information of the IP address and port number of the other sub-servers.","Next, the guide screen M\u22121 of the other sub-server is displayed on the game device. On screen M\u22121, the names of the other sub-servers apart from itself are displayed. When a player selects a single sub-server in the same way as in step S described above, a connection request is communicated to the selected sub-server using the selected sub-server's IP address and port number. Subsequent processing is executed in the same way as in .","In this way, by storing information relating to each sub-server and providing shared memory  that can be accessed by each sub-server, it is made possible for each sub-server to ascertain the condition of sub-servers other than itself. Consequently, since it is made possible for information relating to other sub-servers to be communicated to a game device from the sub-server to which it is currently connected, the connection of the game device can be directly changed over between sub-servers. Specifically, it becomes unnecessary to reconnect the game device to the main server , as was the case conventionally, so the number of connection requests to the main server  can be reduced. The likelihood that the main server  will receive connection requests exceeding its connection request acceptance capability is thereby reduced, so instances of a connection request from a game device being refused by the main server  can be practically eliminated. This contributes to improving the service to players utilizing the network.","Furthermore, even if the number of players participating in a network combat game from a single game server is more than one, there is a single connection between the game device and the network server i.e. a single socket is created. Consequently, as described above, the number of participants from a single game device is communicated beforehand to the network server (specifically, to the selected sub-server), and, as shown in , the data of the plurality of players is transmitted using a single socket, by a single data signal.","Although connections can be established (sockets created) corresponding to the number of the participants, this necessitates connection requests corresponding to the number of participants and so gives rise to problems regarding the capability of accepting connection requests, as described above. Consequently, according to the present embodiment, the load of connection request acceptance processing on main server  is reduced by employing a single connection (single socket) for the connection between a single game device and network server, irrespective of the number of participants from a single game device. The processing delay on the main server  can thereby be eliminated, contributing to an improved service.","Communication delay on the network also presents a problem in the following cases. For example, when a quiz game (hereinbelow called a network quiz game) between a plurality of players is played through the network, in some cases, in addition to the number of correct answers (or proportion of correct answers) ranking is determined taking into account the time to answer the quiz questions.",{"@attributes":{"id":"p-0113","num":"0112"},"figref":"FIG. 17","b":["1","1"]},"In the case of a network quiz game, a plurality of quiz questions included in constituting game information are distributed to each game device from a main server . The players answer the questions that are sequentially displayed on the screens of the game devices. The answers at the game devices are transmitted to the main server . Also, the correctness\/incorrectness of the answers may be determined at the individual game devices and, in the event of a correct answer, information to this effect transmitted. The main server  determines the outcome and\/or ranking accordance with the number of correct answers of the players (or the proportion of correct answers).","Let us now consider the case where a plurality of players have the same number of correct answers (or proportion of correct answers). A method which may be used in such cases is to compare the answering times for all the questions of the quiz game by each player, and to give the player whose answering time is shortest the highest ranking.","There is a problem that, when this answering time (response time) is measured by the main server , the correct answering time cannot be measured, because of discrepancies in the communication times on the network. The main server  measures as the answering time the time from the sending of the questions to the individual game devices up to the reception of the answer information or correct answer information from the individual game devices. In this case, if the communication times between the main server  and the individual game devices are all the same, the difference of the times of the aforementioned distribution between the game devices up to reception reflects the actual answering time from the display of the questions on the individual game devices up to when the players answer them.","However, since, as mentioned above, the communication times between the main server  and the individual game devices are respectively different, the times from the aforementioned distribution between each of the game devices to the reception thereof do not accurately reflect the actual answering time. It is possible to measure the communication time between the main server  and the individual game devices beforehand, but the possibility exists that this communication time may change during playing of the quiz game, due to changes of the congestion condition of the circuits. Thus, the answering time at each game device cannot be measured by the main server .","Accordingly, in this embodiment of the present invention, each game device itself measures the answering time of the questions and communicates this answering time to the main server  together with the answers or information as to their correctness\/incorrectness. The answering time (response time) may, for example, be the time from commencement of reception or completion of reception of the quiz questions that are distributed from the server up to the commencement or completion of input of the answers by the player, or may be the time from when the player became able to answer (for example when the quiz question was displayed on the screen) up to the commencement or completion of input of an answer by the player.",{"@attributes":{"id":"p-0119","num":"0118"},"figref":["FIG. 18","FIG. 19","FIG. 18"],"b":"400"},"When a network quiz game is to be played, first of all, the main server  sends an entry commencement signal (S) to the individual game devices, notifying them that a network quiz game will be commenced after a prescribed time. When the individual game devices receive the entry commencement signal, they display an entry acceptance screen (S). When the game devices receive the entry commencement signal, if an ordinary quiz game is being played on the individual game device unit, changeover to the entry acceptance screen is effected as soon as this finishes.",{"@attributes":{"id":"p-0121","num":"0120"},"figref":"FIG. 20","b":"402"},"In , if the player enters his\/her name before the entry acceptance deadline and selects the \u201cend\u201d button, the game device sends an entry operation completed signal to the main server . The entry operation completed signal includes for example the input player name, the information of the shop where the game device is provided, and game device identification information.","When the main server  receives the entry operation signal, it verifies the game device that makes the entry (S). At a prescribed time (for example two minutes) before the entry acceptance deadline, it notifies each game device that the deadline is two minutes away (S). When each game device receives the deadline two-minute warning signal, it displays a countdown of the remaining time up to the acceptance deadline on the entry acceptance screen of  (S). Each game device, when the remaining time up to the entry acceptance deadline has expired, discontinues acceptance of entries (S) and sends to the main server  an entry acceptance termination signal. Like the entry operation completed signal, the entry acceptance termination signal includes the name of the player making the entry, the information of the shop where the game device is provided, and game device identification information. If no entry is made, instead of the player name, the game device sends an entry acceptance termination signal including \u201cno entry\u201d information.","When the main server  has received a entry acceptance termination information from all the game devices, it separates, out of all the game devices, those game devices in respect of which an entry has been made, and carries out a final check of the player names and individual game devices in respect of which an entry has been made (S). At this point, the main server  distributes to the game devices where there is an entry an explanatory video (S) of the quiz game, using for this purpose a virtual master of ceremonies character. The individual game devices display the explanatory video (S) and, when this is finished, send to the main server  an \u201cexplanation completed\u201d signal.","When the main server  has received the \u201cexplanation completed\u201d signal from all of the game devices where there is an entry, it starts the quiz. Specifically, if the total number of quiz questions is for example 30, the main server  first of all distributes (S) all 30 questions and their correct answers to the respective game devices where there is an entry. The distribution from the main server  may be made simultaneously to all the game devices (or all the game devices where there is an entry), or may be made sequentially in time-divided fashion. In the case of sequential transmission, in response to reception of the \u201cexplanation completed\u201d signal, the main server  may send the questions and their correct answers to the game devices that have transmitted this. It should be noted that, in addition to the questions and their correct answers, the number of participants is also notified to the game devices. Also, the questions and their correct answers may be distributed in time-division fashion. For example, first of all, the first 10 questions may be distributed, and then, before the first 10 questions have been completed, the next 10 questions may be distributed and, further, thereafter the final 10 questions may be distributed.","When the questions and their correct answers have been received, the game devices display a countdown of the time until the start of the quiz (for example 20 seconds) (S). At this point, the number of participants is also displayed. The players can thereby ascertain the number of participants. When the quiz is started, the game device shifts to  and first of all selects the first question (S).","At this point, when the questions are displayed, the game device starts to measure the time using the timer, and measures the time taken until the answer is given (S). The player gives the answer to the question by selecting one of a plurality of selection alternatives that are displayed. If the screen of the game device is a touch panel, the player touches the selected selection alternative. Alternatively, the selection alternative may be selected using a control lever.  shows an example of a question display screen.","When an answer is selected by the player (S), the game device stops the time measurement, and obtains the answer time (S). In addition, it determines whether the selected selection alternative is correct or not from the correct answer which was distributed (S). If the answer is correct, a message to the effect that this is the correct answer is displayed on the screen, and answer information including the question number and the fact that the answer was correct are sent to the main server  together with the answer time that was obtained. Thus, in this embodiment of the present invention, since each game device measures the answer time and transmits this to the main server , even if the communication times between the main server  and the game devices are respectively different, the main server  can acquire a precise answer time for each game device.","On the other hand, in the event of an incorrect answer, a message to the effect that the answer is incorrect is displayed on the screen, and answer information including only the question number and the fact that the answer was incorrect is transmitted, without transmitting the answer time. Also, the case where no selection alternative was selected within the previously given prescribed time for answering one question (i.e. \u201ctime over\u201d) is regarded as an incorrect answer. It should be noted that the decision that an answer is correct could be made by the main server . In this case, the main server  transmits only the questions to the game devices and the game devices send to the main server , for each question, the selected answer and the answer time. The main server  makes the decision as to whether the answer that is received for each game device is correct\/incorrect, and adds up the received answer times only in respect of the correct answers.","When the main server  receives the answer information (correct answer or incorrect answer) and the answer time in the case of a correct answer, it sums these, and calculates a ranking for each question (S). If the number of correct answers is the same, it gives the highest ranking to a player whose total answer time is smallest. When the ranking is determined, the main server  communicates the individually obtained cumulative rankings to each game device (S). Also, if a separate display device for displaying the rankings is provided in the shop where the game device is arranged (see the \u201cranking display device\u201d of ), main server  transmits for example the top-ranking 10 players and their cumulative ranking to the ranking display device. If the ranking display device is arranged in a position that is easily seen by the players operating the game devices, the players can ascertain their own ranking and, in addition, the names of the players in the top ranking position for each question.","When a game device receives the individual cumulative ranking from the main server , it displays this in the ranking display location of  and selects the next question (S); the processing of the above-described S to S is repeated.","Also, in order to maintain the excitement in the quiz game, it may be arranged for example that the cumulative rankings are not transmitted in the final stage (last 10 questions) of the quiz game (calculation of the rankings is of course still performed). That is, during the performance, the rankings are not displayed. Also, in order to make possible a \u201ccomeback\u201d, the ranking may be determined with the count and\/or the answer time allowed for a single correct answer doubled. Specifically, if the main server  normally (i.e. for questions other than the last 10 questions) increments the number of correct answers by 1 for the correct answer of one question, for correct answers to the last 10 questions it may increment the number of correct answers by a plurality of counts (for example 2 counts) per correct answer to a question. Also, the answer time for a correct answer may be multiplied by a prescribed factor (for example 2) before being added to the total of answer times up to this point. The difference of answer times is thereby made larger than in the ordinary case, making it easier for a comeback in ranking to be achieved.","When all the questions are finished (S, S), the main server  compiles the final rankings and communicates the individual final rankings to the individual game devices and furthermore communicates the names of the final top-ranking players and their ranking to the ranking display device (S). The game devices display the final rankings (S). It should be noted that it may be arranged for a performance video featuring a virtual master of ceremonies character (announcement of the top ranking players etc) to be distributed after completion of the quiz game, together with the transmission of the final ranking information. Also, separate videos may be distributed to the game devices of the top-ranking players and to the game devices of the other players. The game devices return to the ordinary quiz mode screen after the lapse of a prescribed time from the final ranking display.","For the method of determining ranking, apart from the method of, if the number of correct answers is the same, giving higher ranking to players whose total answer time is shortest, for example the method may be adopted of changing the number of points for correct answers in accordance with the answer time. For example, it may be arranged to decrease the number of points in accordance with the length of the answer time after display of the questions, such as 100 points if an answer is given within 5 seconds, 80 points if an answer is given within 10 seconds, and 60 points if an answer is given within 15 seconds. If this is done, the outcome and\/or ranking is determined by the total of points.","As described above, in a quiz game through the network, the game devices calculate the answer time of the quiz questions, and send this to main server . In this way, even if the communication times between the main server and respective game devices are different, the main server that manages the quiz game can obtain the correct answer time for each question in each game device.","Also, the above embodiment can be applied to communication games other than network quiz games. For example, it can also be applied to games in which a competition is created regarding the response time until a player performs an input action requested by the game, such as a network challenge typing game, in which a plurality of players compete with regard to the speed with which they can actually input characters presented from the server, or a network challenge \u201cmole-bashing\u201d game, in which a plurality of players compete regarding the speed with which they can accurately perform an input operation presented by the server. In the case of a network challenge typing game, prescribed letters\/symbols etc are distributed from the server as game information, and for example the response time from the point where it became possible for a player to perform an input operation corresponding to these distributed letters\/symbols until the actual input operation is performed is measured. Also, in the case of a network challenge mole-bashing game, the positions where mole characters appear and disappear on the screen are distributed as game information and for example the response time from the appearance of a mole on the screen until the player performs an input operation corresponding to its position is measured. The measured response times are sent to the main server, where the outcome and\/or ranking are calculated based on the total of the response times. In this case, highest ranking is obtained for the smallest total response time.","In the above, according to the present invention, when a computer game combat is carried out using a network having a communication delay, the delay times between the game devices are found before starting the game and, using these, synchronization of the times counted by the game devices is obtained. Then, during progress of the game, the operating data signals are processed after the lapse of the longest delay time after appearance thereof of the previously measured delay times between the game devices. In this way, the operating data signal can be processed simultaneously in a plurality of game devices.","Also, with the present invention, in a network server that manages a network game, the load on the main server that receives initial connection requests from the game devices can be made lighter.","Further, with the present invention, a plurality of players can participate in a network game from a single computer game device.","Further, with the present invention, in a communication game in which a plurality of players participate, when there is a competition as to the time until each player responds to the game information distributed from the server, the game devices operated by the individual players measure their response times and transmit these to the server; as a result, even when the distribution times of game information from the server to each game device are respectively different, the accurate response times can be found.","The range of protection of the present invention is not restricted to the embodiments described above but extends to equivalents of the invention as set out in the patent claims."],"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENTS","Further Embodiment","Further Embodiment"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIGS. 7A and 7B"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIGS. 9A and 9B","FIG. 8"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIGS. 10A-10F"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 13","FIG. 12"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 16","b":"3"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 21"}]},"DETDESC":[{},{}]}
