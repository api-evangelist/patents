---
title: Remote application presentation over a public network connection
abstract: Web access over a public network for applications that operate on virtual desktops on a plurality of servers is facilitated. Through the web access the user is provided with the information necessary to establish a connection with an application by way of the virtual desktop. Applications that the user is authorized to access are determined and those applications that the user is not authorized to access are filtered out. The applications associated access control list is used for determining the user's access to discover an application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08370510&OS=08370510&RS=08370510
owner: Microsoft Corporation
number: 08370510
owner_city: Redmond
owner_country: US
publication_date: 20091218
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS"],"p":["Remote computing systems may enable users to access resources hosted by the remote computing systems. Servers on the remote computing systems can execute programs and transmit signals indicative of a user interface to clients that can connect by sending signals over a network conforming to a communication protocol such as the TCP\/IP protocol. Each connecting client may be provided a session, i.e., an execution environment that includes a set of resources. Each client can transmit signals indicative of user input to the server and the server can apply the user input to the appropriate session. The clients may use protocols such as the Remote Desktop Protocol (RDP) to connect to a server resource. Protocols such as RDP typically handle graphics, device traffic such as USB, printer keyboard and mouse and in addition, virtual channels for application between server and a client. The terminal server hosts client sessions which can be in the hundreds in a typical server configuration.","Enabling remote connections to centralized desktops hosted in virtual machines is commonly used for centralized computing scenarios. Deployment of virtual desktops requires load balancing of host computers that host virtual machines, placement of virtual machines on the hosts, and properly orchestrating the startup, wake up, and preparation of virtual machines for receiving connections.","The systems described above generally require that the user computer have a preinstalled client that assists the user in the process of connecting to the remote server and communicating with the remote server over a virtual private network (VPN). In some instances, it would be beneficial to allow a user to connect to similarly connect to remote resources by way of a web browser. However, previous systems that provided users ability to launch remote application programs and desktops through a web page (Remote Desktop Web Access) presented a wide assortment of resources to the users that user may not want to see or the administrators may not want them to see.","Aspects of the invention are embodied in a system, methods, and computer-readable media that are adapted to connect a client computing device to one of a plurality of virtual machines executing on a plurality of servers. A web access module receives a request from a user over a public network for applications that operate on virtual desktops on a plurality of servers. The user is provided with the information necessary to establish a connection with application by way of the virtual desktop.","The applications that the user is authorized to access are determined based on the user identification. Preferably, a broker module makes the determination and filters out those applications that the user is not authorized to access. In an embodiment, the broker module issues a query to a directory to determine whether the user is associated with a group that is authorized to access at least one application. The applications have an associated access control list that is used for determining the user's access to the application.","Certain specific details are set forth in the following description and figures to provide a thorough understanding of various embodiments of the inventions. Certain well-known details often associated with computing and software technology are not described in the following disclosure for the sake of clarity. Furthermore, those of ordinary skill in the relevant art will understand that they can practice other embodiments of the disclosed subject matter without one or more of the details described below. While various methods are described with reference to steps and sequences in the following disclosure, the description as such is for providing a clear implementation of embodiments of the disclosed subject matter, and the steps and sequences of steps should not be taken as required to practice the invention.","It should be understood that the various techniques described herein may be implemented in connection with hardware or software or, where appropriate, with a combination of both. Thus, the methods and apparatus disclosed herein, or certain aspects or portions thereof, may take the form of program code (i.e., instructions) embodied in tangible media, such as floppy diskettes, CD-ROMs, hard drives, or any other machine-readable storage media that may be loaded into and executed by a machine, such as a computer. In the case of program code execution on programmable computers, the computing device generally includes a processor, a storage medium readable by the processor (including volatile and non-volatile memory and\/or storage elements), at least one input device, and at least one output device. One or more programs that may implement or utilize the processes described in connection with the disclosed subject matter, e.g., through the use of an application programming interface (API), reusable controls, or the like. Such programs are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer system. However, the program(s) can be implemented in assembly or machine language, if desired. In any case, the language may be a compiled or interpreted language, and combined with hardware implementations.","The following described systems and methods for a web service for remote application discovery substantially simplify a remote client's experience when accessing applications through a browser or other web based interface. An organizational entity is enabled to more easily publish remote applications using a variety of information source mechanisms and then provide a single aggregated view of the applications to remote clients over a public network that are filtered based on a particular user.","More specifically, an entity in an organizational network installs, or deploys some number of applications on servers and\/or end-user computing devices in the corporate network. For instance, an administrative entity may install an application on a corporate server for remote terminal services (TS)-based access or on a virtual machine via a remote desktop (RD). The administrative entity creates associations between the deployed\/applications and specific user(s), group(s) of users, and\/or specific client computing device(s). These associations are then stored in one or more databases\/information sources.","A remote client device, independent of whether it is outside of the corporate firewall, connected to the corporate network over a Virtual Private Network (VPN), and\/or so on, discovers these applications via a web service deployed on a public network such as the Internet. In one implementation, an end-user of the remote client device uses a web browser or user interface shell to discover\/enumerate each application associated with the remote client device or the end-user.","After identifying one or more applications configured for remote access, the service aggregates each identified application and its intranet installation point into a single comprehensive list of applications. The aggregated list is sent to the requesting remote client device for presentation, for instance, as shortcuts in a user interface (UI) shell, a Web browser window, and\/or so on. Since the presented shortcuts represent an aggregate of the remotely deployed applications over one or more application sources, it is completely transparent to the end-user whether the shortcuts are coming from a single source (installation point) or from multiple disparate information sources. In this manner, authorized users may seamlessly discover and use applications deployed on terminal server (TS) farms, remote desktop farms (RD) farms, and\/or on their office computer from a remote location. By presenting such shortcuts via UI shell, the end user is provided with seamless access to corporate resources deployed across any number of remote servers and\/or desktops.","As described above, aspects of the invention are relevant to a remote desktop that execute in a virtualized computing environment. In such a virtualized computing environment, a plurality of virtual machines, each having an independent operating system, operate on the same underlying hardware. Access to the underlying physical hardware by each virtual machine is governed by a virtualizing management program that is sometimes referred to as a virtual machine monitor. A variation of a virtual machine monitor is referred to as a hypervisor.","In some instances, a user may desire to access computing applications remotely, i.e., applications that are running on a separate computing device. One implementation provides a user with such access through a virtual remote desktop. A remote desktop system is a computer system that maintains applications that can be remotely executed by client computer systems. Input is entered at a client computer system and transferred over a network (e.g., using protocols based on the International Telecommunications Union (ITU) T.120 family of protocols such as Remote Desktop Protocol (RDP), HTML, XML, or even a combination thereof) to an application on a server. The application processes the input as if the input were entered at the server.","In a further detailed illustration of a remote computing environment, a connection broker controls the allocation of sessions to users communicating in a remote access system environment. A broker allocates a session to a user based on session state information stored in the broker. Session state information may include, for example, session IDs, user names, names of the servers where sessions are residing, the number of active sessions in each server computer, and so on. As used herein a session may be a virtual desktop session or a terminal services session.","In a remote access system environment, there may be more than one server computer that can service a particular user. As such there is a redirection process that determines where to send a request from a remote computing device that is attempting to connect to a server. In some instances, the remote computing device may first connect to a redirector that provides load balancing, etc. of clients. In such a case, a redirection server typically first receives the request for a connection. The redirection server then accepts the connection request and queries the connection broker to determine where the user can be redirected. The connection broker analyzes the session state information of that particular environment and identifies a server to which the user can be redirected. The identified server may possess a session previously accessed by the user, but later disconnected, to which the user can be reconnected again. In an embodiment, an identified server may provide a new session to which the user can be connected, provided the user does not possess any other existing sessions.","The broker can then send information to the redirecting server which in turn returns the information to a client to enable the client to establish a connection with the identified server. For example, the information may include a machine ID, a session ID, and location of the identified server. The redirecting server analyzes the information received and redirects the user to the identified server. Once the user establishes the connection with the identified server, the user can access applications present in the identified server.","In some instances, the client computer is directly connected to a virtual desktop. In other instances and according to an aspect of the invention, the client computer connects to a web access server, which in turn establishes the connection to the server computer on behalf of the client. When the client connects directly to the remote desktop, the client computer indicates an identifier such as pool name that is used by the broker to generate an internet protocol (IP) address to establish connection between the client computer and the virtual desktops. Since the individual virtual desktop IP address is not known until the VM is orchestrated (woken up, started, etc), only a single network name of the redirector is initially required to be externally exposed to the clients. The construction of the virtual desktop and terminal services integration system and an environment in which this integration system may be enabled by techniques is set forth first below with reference to the figures.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 1","FIG. 1"],"b":["502","502","504","504","502","504","508","524","510","512","502","518","518","510","512","502","512","518","518"],"i":["a ","b ","a ","b","a ","a ","a ","a "]},"In the example connection most relevant to aspects of the invention, a user operating computing device may also connect to broker  and access services provided by the broker via web access . In that instance, client computing device using a client UI, for example, a web browser such as MICROSOFT INTERNET EXPLORER, MOZILLA FIREFOX, etc. can connect via public network to a remote application server , which may not be behind a firewall and can be reached by way of a browser. Of course, Remote application server , Redirector , and Broker  may be operating on the same physical hardware. Client device may be any computing device capable of communicating with a network . In one embodiment, the client devices is a general purpose desktop computing device that is connected to the network . The client devices may be implemented as any of a variety of conventional computing devices including, for example, a server, a notebook or portable computer, a workstation, a mainframe computer, a mobile communication device, a PDA, an entertainment device, a set-top box, an Internet appliance, a game console, and so forth. Network may be any type or combination of communications networks, such as a local area network, wide area network, cable network, the internet, the World Wide Web or a corporate enterprise network.","Broker module  may include a connection broker module  and a session cache module  that tracks the states of session in terminal server  and\/or the virtual desktops on server .","Server  is a host server that hosts a plurality of virtual remote desktops each of which typically operates in a separate virtual machine. A typical enterprise deployment may have a plurality of host servers each having a plurality of virtual desktops. Server  includes a plurality of virtual desktops  (-), which are essentially individual session operating on virtual machines as described above. Broker  receives from server  an indication of which virtual desktops (-) are available. Broker  also receives session cache information  indicating which sessions are currently active for various virtual desktops (-). In one embodiment, connection broker  may indicate to remote application server  that it may connect to terminal server  or a virtual desktop A-N. In this embodiment, the broker maintains a list of the names of the virtual desktops and the corresponding IP address of the virtual desktop . Thus when an identifier is provided with a client request, the broker determines a connection that can be established between remote application server  and the corresponding virtual desktop .","The flow diagram in  depicts exemplary processes - used by redirector device  and broker  and represents a sequence of operations that can be implemented in hardware, software, and a combination thereof. A similar process applies to the remote application server  request a virtual desktop from broker . The flow diagram in  depicts exemplary processes - used by server  to communicate the available remote virtual desktops that are available and additionally represents a sequence of operations that can be implemented in hardware, software, and a combination thereof. In the context of software, the blocks represent computer-executable instructions that, when executed by one or more processors, cause the recited operations to occur.","Generally, computer-executable instructions include routines, programs, objects, components, data structures, and the like that perform particular functions or implement particular abstract data types. The order in which the operations are described is not intended to be construed as a limitation, and any number of the described blocks can be combined in any order and\/or in parallel to implement the process. For discussion purposes, the processes are described with reference to , although it may be implemented in other system architectures.","In more detail,  illustrates a flow diagram of an exemplary process  used by a redirector device  and broker  to connect a device, e.g., client device or remote application server  with a virtual desktop  or terminal server . At block , a request is received from the device to connect to one of the virtual desktop (-). The request may include the name of the requesting user and an identifier such as virtual desktop pool or personal desktop. Such a request may be first received by the redirector  and is sent to connection broker  in block . In block , the connection broker transmits a request to various host servers, e.g.,  requesting available virtual desktops. The actions of block  may have been performed at an earlier time and cached at broker . In block , broker  determines which virtual desktops (-) are available, by polling the virtual desktops or by reading a table stored in memory that tracks the virtual desktop availability. In one embodiment, the broker  may determine that the terminal server  is available for transmitting and receiving content. In block , host servers  provides a notification of virtual desktop availability to connection broker . Again this step may have previously occurred and have been cached by the broker .","In block , the connection broker  reads a table in policy module  indicating which of the virtual desktops (-) may be used with a particular client device . Such elements of the table may be set by an administrator. In accordance with the table, the virtual desktop  is selected and, preferably, the IP address for the virtual desktop  and identity (machine name) is provided. The Redirector  or the broker  then sends the IP address and the corresponding name to the requesting device. In block , a redirection packet is sent to the device along with the virtual desktop identity so that the device can connect directly to the virtual desktop and authenticate the connection.","In order to connect with a virtual desktop  or terminal server , the device, e.g., client or remote application server , performs action such as the following. A request is made to connect to one of the virtual desktops (-). The requesting device may receive an acknowledgment and a token in a packet, preferably an RDP packet, indicating an IP address and a name of the virtual desktop that the device will use to connect to and authenticate with a virtual machine. The device may indicate that name when connecting to the virtual desktop .",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 3","b":["1000","510","502","514","1002","510","518","1004","510","1006","510","518","1008","510","510"],"i":"a "},"As an alternative to the remote connection process illustrated with respect to client computing device and in accordance with an aspect of the invention, a remote connection process can also be established by the embodiment illustrated with respect to client computing device . In that embodiment, client computing device connects to remote application server . For example, the user may enter www.mycompany.com into the address on a web browser that will direct the browser to a web page. When client computing device connects to remote application server , for example through an XML feed and HTML pages, the logs in and a user security identifier SID is determined for the user that authenticates the user of that computing device to remote application server . In the case of Windows based authentication this is done by impersonating the user. For form based authentication, the SID can be written inside a cookie, for example, that is passed to remote application server . As noted above, the connection between the remote application server and the virtual desktop is similar to the process described with respect to  with the remote application server  acting essentially as a proxy on behalf of client device . Although  illustrates remote application server  communicating with connection broker , alternatively, remote application server may communicate directly with multiple RD session hosts, e.g., directly to server  and other similarly configured servers.","In the embodiment in which remote application server  communicates with connection broker , broker  preferably assists with filtering of user resources even if the remote application server  is located in an untrusted domain or DMZ. The user SID is passed as an argument to a service  on the connection broker that manages the remote applications and desktop connections. Service  determines what personal virtual desktop is assigned to a user preferably by way of an LDAP query to the system active directory. An administrator would have previously assigned a virtual personal desktop to the user based on the SID. In a preferred embodiment, the filters are added to service  by way of a plugin. The information returned from the LDAP query can be used to create a unique remote desktop protocol (RDP) file for the user that is set as the resource and passed back to service .","Additionally, connection broker  maintains a list of Remote Desktop session hosts (RDSH). In one embodiment, the list of Remote Desktop session hosts, e.g., server , are be queried, for example, through a Windows Management Information call (WMI). The WMI calls return the name of the remote application program, the icon associated with it, an RDP file for connecting to the remote application and a security access control list (ACL). The returned resources are then saved into cache and the process is repeated for all the resources returned from the session hosts. In one embodiment, a Security context is created using the user's SID to check whether a user has access to a particular security ACL without impersonating the user. Using the context each remote application program security ACL is checked. As part of that check, the AD is checked and the various groups that the user is a member are also enumerated to determine if the user should be given access to the remote application program as part of a group. If the user should have access to the remote application program then, preferably, the information is put in a buffer that will be passed back to service once all resources that were returned from the session hosts are enumerated and checked for access. Notably, this embodiment checks for AD changes and supports AD groups in general.","Once all the resources are determined, the information is returned (e.g., in response to a remote procedure call initiated by remote application server ). Remote application server  then can create a webpage with the resources for the user or, alternatively, by way of an XML feed. Notably, only the resources associated with the user are returned to remote application server  for the requesting user. As such, other remote applications on an enterprise system that may be available for other users or groups of users are not available and discoverability can be more easily managed and controlled by a system administrator.","As noted, the remote application server  may connect directly to multiple session hosts (e.g., server ) as opposed to connecting to connection broker . In this alternate embodiment, remote application server  will perform the filtering of resources as opposed to the connection broker. Preferably, remote application server  caches ACL's that a user has had access to. In that embodiment, if an access check has already been performed, then a determination can be made to regarding user access to a given remote application. Once the list has been filtered this is passed up and only the resources that the user should be able to discover are used to create an HTML or XML feed. This once again provides that only resources the user should be able to discover are available (i.e., they are not hidden within the page).",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 4","b":["502","514","410","502","514","502","514","420","514","524","524","510","430","524","440","450","524","460","510","470"],"i":["b ","b ","b "]},"The client computing device can then download from remote application server  an application to connect to the remote desktop using RDP and connect to the virtual machine in a manner similar to that described above with respect to client device ","As noted, the embodiments described provide ease of administration as well. For example, the assignment for which user should be presented with a resource (via remote application server ) is preferably performed on the server on which the remote applications are installed. This means that an administrator will be able to install and publish the applications and at the same time set which users should have remote access to them. In addition the assignment can be done remotely through an admin tool or WMI. If an administrator wants to assign users using WMI, they need only create a script that gets the remote application program that they want to assign users to and create a security ACL with the permissions that are desired, assign it to the WMI object and put the WMI object back.","Alternatively, a UI may be used to assign a user to a remote application program, using a remote application manager tool.  provides an illustration of an example of a portion of UI for such a tool. In the tool, an administrator can review a list of programs that are currently published. They can select any remote application program and then select properties. Preferably, a properties dialog box  is presented (as shown in ) along with a User Assignment tab. After selecting the User Assignment tab, an administrator can add any domain user or group from box  to that RemoteApp program by selecting Add User button. Multiple names can be assigned to the same remote application program. When they click apply the UI tool creates a security ACL and writes it back via WMI for that particular remote application program. From that point on that program will only be discoverable by users that have access to that ACL.","Any of the above mentioned aspects can be implemented in methods, systems, computer readable media, or any type of manufacture. For example, a computer readable medium can store thereon computer executable instructions for connecting a remote client computer to one of a plurality of virtual machines executing on a plurality of servers.","As described above, aspects of the presently disclosed subject matter may execute on a programmed computer.  and the following discussion is intended to provide a brief description of a suitable computing environment in which those aspects may be implemented. One skilled in the art can appreciate that the computer system of  can in some embodiments effectuate the server and the client and processes of . In these example embodiments, the server and client can include some or all of the components described in  and in some embodiments the server and client can each include circuitry configured to instantiate specific aspects of the disclosed embodiments.","The term circuitry used through the disclosure can include specialized hardware components. In the same or other embodiments circuitry can include microprocessors configured to perform function(s) by firmware or switches. In the same or other example embodiments circuitry can include one or more general purpose processing units and\/or multi-core processing units, etc., that can be configured when software instructions that embody logic operable to perform function(s) are loaded into memory, e.g., RAM and\/or virtual memory. In example embodiments where circuitry includes a combination of hardware and software, an implementer may write source code embodying logic and the source code can be compiled into machine readable code that can be processed by the general purpose processing unit(s).",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 6","b":["20","21","22","23","21","23","24","25","26","20","24","20","27","28","29","30","31","24","25","29","31","21","27","28","30","23","32","33","34","20","29","31"]},"A number of program modules may be stored on the hard disk, magnetic disk , optical disk , ROM  or RAM , including an operating system , one or more application programs , other program modules  and program data . A user may enter commands and information into the computer  through input devices such as a keyboard  and pointing device . Other input devices (not shown) may include a microphone, joystick, game pad, satellite disk, scanner or the like. These and other input devices are often connected to the processing unit  through a serial port interface  that is coupled to the system bus, but may be connected by other interfaces, such as a parallel port, game port or universal serial bus (USB). A display  or other type of display device can also be connected to the system bus  via an interface, such as a video adapter . In addition to the display , computers typically include other peripheral output devices (not shown), such as speakers and printers. The system of  also includes a host adapter , Small Computer System Interface (SCSI) bus , and an external storage device  connected to the SCSI bus .","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be another computer, a server, a router, a network PC, a peer device or other common network node, a virtual machine, and typically can include many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  can include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  can be connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  can typically include a modem  or other means for establishing communications over the wide area network , such as the Internet. The modem , which may be internal or external, can be connected to the system bus  via the serial port interface . In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are examples and other means of establishing a communications link between the computers may be used. Moreover, while it is envisioned that numerous embodiments of the presently disclosed subject matter are particularly well-suited for computer systems, nothing in this document is intended to limit the disclosure to such embodiments.","The foregoing detailed description has set forth various embodiments of the systems and\/or processes via examples and\/or operational diagrams. Insofar as such block diagrams, and\/or examples contain one or more functions and\/or operations, it will be understood by those within the art that each function and\/or operation within such block diagrams, or examples can be implemented, individually and\/or collectively, by a wide range of hardware, software, firmware, or virtually any combination thereof.","While particular aspects and embodiments of the subject matter described herein have been shown and described, it will be apparent to those skilled in the art that, based upon the teachings herein, changes and modifications may be made and, therefore, the appended claims are to encompass within their scope all such changes and modifications as are within the true spirit and scope of the subject matter described herein."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
