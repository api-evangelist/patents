---
title: System, method and apparatus for use in monitoring or controlling internet access
abstract: An apparatus method and system are described for categorizing Uniform Resource Locators (URLs) when accessing the Internet  from a client . A request message  is generated to request categorization of a specified URL, and a category is provided in a reply message . The specified URL and the category are added to a category cache. In a second or subsequent instance of a URL request referring to the specified URL, the category is determined from the category cache. This reduces communication traffic in a network such as the Internet 
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08135831&OS=08135831&RS=08135831
owner: Websense UK Limited
number: 08135831
owner_city: London
owner_country: GB
publication_date: 20090914
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application is a divisional of co-pending application Ser. No. 10\/952,626 filed Sep. 28, 2004, and titled SYSTEM, METHOD AND APPARATUS FOR USE IN MONITORING OR CONTROLLING INTERNET ACCESS, which claims priority, under 35 USC \u00a7119, from United Kingdom Patent Application No. GB04 20024.2 filed on Sep. 9, 2004, which is incorporated by reference herein in its entirety.","1. Field of the Invention","The present invention relates in general to a system, method and apparatus for use in monitoring or controlling Internet access. In particular, the present invention relates to a system, method and apparatus for categorizing Uniform Resource Locators (URLs) during Internet access.","2. Description of the Related Art","The Internet is a global interconnection of computers and computer networks. One of the great benefits of the Internet is that many millions of users have access to shared information of the World Wide Web, whereby pages of text and graphic information in HTML, or other formats are transmitted by a Hyper Text Transfer Protocol (HTTP). Each web page has a unique address, known as a Uniform Resource Locator (URL). The Internet and its supporting structures are discussed in detail in Requests for Comments (RFCs), available from www.faqs.org and elsewhere. Reference is made in particular to RFC760 (Internet Protocol) and RFC1738 (Uniform Resource Locators).","Although the Internet provides access to a vast amount of information, it is widely recognized that open access at all times to all forms of information is not appropriate. For example, many schools and businesses provide Internet access for their students and employees. However, the school or business is, at least in part, responsible for dissemination of information within that organization and is usually under an obligation to prevent circulation of racist, sexist or other abusive materials. This is just one example situation where there is a strong need for a measure of control over Internet access. Other examples include public spaces such as libraries or Internet cafes or public Internet kiosks. Another example is a home environment, where parents may wish to prevent their children accessing adult oriented web pages.","Prior art systems are available to address this need for monitoring or controlling access to the Internet. One example system is discussed at U.S. Pat. No. 5,996,011, which describes making a linguistic analysis of a web page on the fly before delivering the web page or selected portions thereof to a user. Other approaches include comparing a requested URL against a previously-determined list of forbidden-URLs, known as a \u201cdeny list\u201d. However, both of these approaches require relatively large resources, i.e., a computing platform with a relatively fast processor, a large memory, and plenty of storage space such as a hard disk. The World Wide Web currently contains over 200 million websites, with tens of thousands of new sites being added each week. Each site usually contains many individual web pages. As a result, any form of filtering using \u201cdeny lists\u201d requires relatively large storage space. Even an on the fly approach as in U.S. Pat. No. 5,996,011 using linguistic analysis requires a relatively large space to store objectionable words or phrases, and requires intensive processor usage in order to maintain reasonable response times.","A further problem arises in that many computer users are not technically literate. Most computer users are not computer experts and would like to be able to use their computer with a minimum of fuss or problems. Hence, it is desired to provide an apparatus, method and system for monitoring or controlling Internet access which is simple, reliable and user friendly.","A Local Area Network (LAN) is often used to connect together computers located in one building or site. In this LAN environment access to the Internet is provided though a Proxy Server, which receives and services URL requests from within the LAN by communicating with the Internet. Some of the client computers in this LAN environment may have relatively limited resources, such as a dumb terminal or diskless workstation. Another example is a Personal Digital Assistant or other handheld computing device. In one preferred aspect of the present invention it is desired to provide an apparatus, method and system for monitoring or controlling internet access which is ideally simple, fast and reliable, in this LAN environment.","Many users, particularly in a small office or home office environment (SOHO) environment, connect to the Internet through an Internet Service Provider (ISP). Typically, the connection is established through dedicated hardware of an Internet gateway appliance such as a modern or a router. However, there is a strong price pressure on Internet gateway appliances and a strong desire to minimize equipment specification. This means minimizing processor requirements, memory requirements, and storage requirements, all of which are directly contrary to known approaches for monitoring or controlling Internet access. In a preferred aspect of the present invention it is desired to provide an apparatus, method and system for monitoring or controlling internet access which is ideally simple, fast and reliable, when using an Internet gateway appliance.","Another emerging need relates to Internet appliances which are created to perform a specific dedicated function whilst also being connected to the Internet. One example is a web TV for displaying audiovisual signals. Such Internet appliances are generally intended for use by consumers who have little or no technical knowledge, by providing a simple and easy to use set of controls as opposed to the fully controllable interface of a regular computer. Again, most Internet appliances are designed to minimize processor, memory and storage requirements. In a preferred aspect of the present invention it is desired to provide an apparatus, method and system for monitoring or controlling internet access which is simple, fast and reliable, when using an Internet appliance.","An aim of the present invention is to address the disadvantages and problems of the prior art, as discussed above or elsewhere.","According to the present invention there is provided an apparatus, method and system as set forth in the appended claims. Preferred features of the invention will be apparent from the dependent claims, and the description which follows.","In a first aspect of the present invention there is provided a method of categorizing Uniform Resource Locators (URLs) during Internet access, comprising the steps of: receiving a URL request denoting a specified URL; generating a request message to request categorization of the specified URL; receiving a reply message denoting a category for the specified URL amongst a predetermined set of categories j adding the specified URL and the category to a category cache; and in a second or subsequent instance of a URL request with respect to the specified URL, determining the category of the specified URL from the category cache.","In another aspect of the present invention there is provided a method for use in controlling or monitoring Internet access at a client device by categorizing Uniform Resource Locators (URLs), comprising the steps of: receiving a specified URL; searching a category cache held at the client device using the specified URL as a search key, and returning a category code associated with the specified URL when a match is found for the specified URL; and generating a request message to request a category code for the specified URL, when a match is not found for the specified URL.","According to another aspect of the present invention there is provided a system for use in controlling or monitoring of Internet access by categorizing Uniform Resource Locators (URLs), comprising: a client device arranged to monitor or control Internet access according to a category code of a specified URL, and including a categorization module to provide the category code for the specified URL from a category cache stored at the client device or else generate a request message to request categorization of the specified URL; and a categorization server coupled to communicate with the client device and arranged to receive the request message and to send a reply message identifying a category code for the specified URL.","According to a further aspect of the present invention there is provided a client device, comprising: an interface module arranged to present a URL, categorization function, wherein the interface module is arranged to receive a specified URL, from a client software and to return a category code; a category cache holding a plurality of stored URLs and associated category codes, such that matching the specified URL against one of the stored URLs provides the category code; and a communication module arranged to send an outgoing request message to a categorization server when there is no match in the category cache and to receive and buffer incoming data including a corresponding reply message, wherein the request message comprises the specified URL and the reply message comprises the category code.","Further according to the present invention there is provided a cache structure, comprising: a hash array comprising one or more index elements, each index element comprising a host tree pointer and a hash key derived from a stored URL; and one or more host trees depending from the index elements of the hash array, each host tree comprising one or more tree nodes each holding URL data representing stored URLs and associated category codes; and an age list to list each of the tree nodes by age, wherein the age list comprises, within each tree node, a next pointer and a previous pointer which refer to a next older tree node and a previous newer tree node, respectively.","The present invention may, in some embodiments, be implemented as computer software. The invention also extends to a program storage medium having computer executable instructions stored thereon to perform any of the methods described herein.","Referring to , a schematic overview is shown of a system and apparatus as employed in preferred embodiments of the present invention. In this first example embodiment, a user machine  is connected to the Internet  through an Internet gateway appliance or client gateway .","The preferred embodiments of the present invention are primarily applicable to the World Wide Web, whereby a web page  is provided in response to a URL request sent under HTTP. In use, the user machine  provides a web browser application which initiates a URL request . in order to obtain content, i.e., a web page , from a content server or host . The web page  may take any suitable form, most commonly being text and graphics in HTML, format. It will be appreciated however that the present invention is applicable to other forms of content provided over the Internet using URLs, such as file transfers under FTP or connection to a TELNET server.","It is desired to passively monitor and log the requested URLs for inspection later, or perform an active filtering function which determines whether the user machine  will receive or display the requested web page . To this end, it is useful to place URLs into categories. In a simple example, the categories are either \u201callow\u201d or \u201cdeny\u201d. In a more sophisticated example, it is helpful to categorize URLs with greater granularity.","The preferred embodiments of the present invention place each requested URL into one of a predetermined set of categories. Specific downstream actions for controlling or monitoring Internet access, such as filtering or logging functions, are not particularly relevant to the present invention and may take any suitable form.","The preferred embodiment provides eight core categories such as \u201cadult\/sexual explicit\u201d, \u201ccriminal skills\u201d, \u201cdrugs, alcohol, tobacco\u201d, \u201cviolence\u201d or \u201cweapons\u201d, as well as thirty two productivity-related categories such as \u201cadvertisements\u201d, \u201cgames\u201d, \u201chobbies and recreation\u201d or \u201ckids sites\u201d. Providing this predetermined set of categories allows a more sophisticated rules-based filtering or logging function. For example, a rule is used to alert an administrator when a request is made for any of the core categories, or to block selected productivity categories at particular times and allowing access only say at lunchtimes or outside work hours. To cater for all eventualities, the preferred categories may also include \u201cdon't know\u201d or \u201cnot found\u201d options.","The user machine  provides input and output interface functions appropriate for a human user, suitably including a display screen, speakers, and control keys or GUI. As shown in , in one embodiment the user machine  is a computing platform such as a desktop computer, a laptop computer, or a personal digital assistant (PDA). In another embodiment, the user machine  is a function-specific Internet appliance, such as a web-TV. In a third example, the user machine  is a public Internet kiosk, in this case also shown as including a voice telephone.","In one embodiment, the user machine  and the client gateway  are formed as physically separate devices and communicate by any appropriate wired or wireless link. In other embodiments the client gateway  is integrated within the user machine .","As one preferred implementation which is useful particularly in a SOHO type environment, the client gateway  suitably includes a modem, such as an analogue, ISDN or ADSL modem, which connects to an Internet Service Provider (ISP)  over the plain old telephone system (POTS) or other wired or optical network to provide a network layer connection to the Internet . As another example, the client gateway  connects to the Internet  through a wireless network or cellular mobile network such as GSM or GPRS. In still other embodiments, the client gateway  connects to the Internet  through an intermediary such as a LAN or WAN, optionally over a virtual private network (VPN).","Referring to , in a preferred embodiment the client gateway  acts as a router and forwards data packets between computers or computer networks. In this illustrated example of , the client gateway  directs packets between the user machine  and the ISP . Routers typically use packet headers and forwarding tables to determine the best path for forwarding each data packet.","The client gateway  typically has relatively limited computing resources. In one example embodiment, the client gateway is a router having an Intel IXP422 processor, 64 MB RAM and 16 MB of Flash memory. There is no hard disk or other large-capacity storage device within the client gateway. The client gateway may also perform other functions, typically acting as a combined modem, router, firewall, local network switch or VPN client, or any combination thereof. Hence, there is strong competition for resources in order to accommodate some or all of these functions within a single low-cost device.","It is desired to offer logging or filtering functions at the client gateway , because this is a natural control point between the upstream network of the ISP , and the downstream network of the user machine . The monitoring or controlling function relies, as an initial step, on placing requested URLs into categories. However, as just discussed, a problem arises in that the client gateway  typically has only limited available processor, memory and storage resources. Hence, there is a strong need to minimize resources used within the client gateway  when providing an Internet access controlling or monitoring function.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 2"},"Referring to , a client computer  is part of a Local Area Network (LAN) which also includes a proxy server  coupled to the Internet . The client computer  makes URL requests in order to receive web pages from a content server  available over the Internet . The URL requests are processed through the proxy server . It is desired to monitor or control Internet access at the client computer . The present invention is particularly applicable where the client computer  has relatively limited processor, memory or storage resources, such as a terminal or a diskless workstation.","Referring now to both , the client  (i.e., the client gateway  of  or the client computer  of ) sends a request message  to a server computer  hosting a categorization service . The request message  identifies a specified URL, such as extracted from a HTTP URL, request. This categorization server  identifies one of the predetermined set of categories appropriate to the specified URL, and sends a reply message  to the client . The reply message  identifies the appropriate category, which the client  then employs \u201cto perform the desired monitoring or controlling function.","This arrangement reduces resource requirements at the client , and allows the categorization server  to run on a large and powerful computing system with plenty of processing power, memory and storage space. This categorization service  may take any suitable form. For example, upon receiving the URL categorization request , the categorization service  looks up an appropriate category for the specified URL using a category database. Additionally or alternatively, the categorization service employs a linguistic or other analysis of the specified URLs to determine an appropriate category, with or without human intervention and review.","A problem arises in that it is desired to reduce delays when requesting a web page , while a URL is placed into a predetermined category. Also, in practical embodiments of the present invention, many tens, hundreds or thousands of clients  are able to communicate with the categorization server . It is desired to minimize communication traffic. Also, it is desired to minimize overheads both within the client , and within the central categorization server .","Message Protocol","A first aspect of the present invention concerns an improved protocol for communication between first and second computing platforms, in this example between the client  and the categorization server , when making requests to place URLs into categories.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 3","b":["200","202","204","202","202","204"]},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 4"},"Various host to host protocols exist, including the hypertext transfer protocol (HTTP) which is used to carry URL requests and provide web pages  for the World Wide Web. However, HTTP has no mechanism to efficiently carry the request messages  and the reply messages  for categorizations of URLs as employed by the present invention.","Also, several messaging protocols have been defined. As examples,  shows a Transmission Control Protocol (TCP) as defined for example in RFC761 and a User Datagram Protocol (UDP) as defined for example in RFC768. TCP is ideal for applications which require reliable delivery of data in a specified order. TCP sets up a connection between hosts, which is maintained open for the duration of a session. Whilst reliable, TCP has a relatively large overhead. By contrast, UDP is a fast and lightweight protocol, but is relatively unreliable. In particular, delivery and duplication protection are not guaranteed. UDP is connectionless, with no handshaking or acknowledgements between hosts. Hence, neither of these messaging protocols is suited to carrying requests and replies concerning URL categorization.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 5","b":["401","500","402","600","403","404"]},"In the present invention, the request message  and the reply message  are each sent as the payload of a UDP packet. Surprisingly, it has been found that the unreliable and limited messaging capability of UDP can be employed to advantage in the context of categorization of URLs. However, in order to use UDP, additional steps are taken by the present invention to adapt the protocol. More detailed explanation of the request message  and the reply message  now follows.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 6","b":["500","501","502","503","504","505"]},"As shown in , the UDP payload  is divided to form a request message header section  and a request message data section .","The header section  comprises a sequence number  and a time stamp , and suitably a command identity , a data size , and a licensing field .","The sequence number  allows the request message  to be uniquely identified and distinguished from other request messages. The sequence number  is generated upon creation of the request message  within the client , suitably as an incremental value circling between 0 and 65535. Under UDP, each client-side socket exists only for the duration of a request-reply cycle and hence each request is assigned a different port value by the host process within, in this example, the client . However, there is a possibility that a reply could be passed back to a port of an incorrect waiting thread. The sequence number  allows a reply to be matched up with an originating request message .","The time stamp  enables calculation of timeouts. The client  originating the request message  waits a predetermined length of time for a reply message , and then re-tries for a predetermined number of times. Preferably, the timeout is increased after each resend, with an exponential back off (e.g., 2, 4 and then 8 seconds for a maximum retry count of 3).","The sequence number  and the time stamp  together provide excellent reliability, whilst adding only minimal overhead.","The command ID field  allows the request message to perform different command functions. In most cases, the command ID is set to \u201c1\u201d in order to request categorization of a URL. Also, the request message uses a command ID of \u201c2\u201d to request that the categorization server  provide a current list of categories, or a command ID of \u201c3\u201d to confirm a current list version and determine whether an update is required. Other commands can be defined as appropriate. Hence, the command ID field  brings increased flexibility and allows the system to perform additional functions.","The data section  contains data representing a specified URL . The URL data  includes a host portion  and, where appropriate, a URL, path portion . The request data  is encrypted, preferably with a secret-key block encryption algorithm such as RC2 which is described in detail at RFC2268. Encryption of the data section  improves security and privacy. However, encrypting only the data section  minimizes both encryption workload and transmission overhead. The size of the encrypted data section  is stored as the data size field  in the request header .","The licensing field  optionally transmits a license identity relevant to the originator of the request message . The license identity is suitably associated with the client  or optionally the user machine .",{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 7","b":["600","40","12","600","610","620","610","611","612","613","500","614","620","615"]},"The response data  is formatted according to the relevant command ID  and is preferably encrypted, such as with RC2. In response to a request to categorize URL, the response data  comprises a category , a match length , and an exact flag . The category  identifies one amongst a predetermined set of categories for the URL sent in the request data , suitably as a numerical value (e.g., category\\\\\u2033 is say sports related web pages). The exact flag  determines whether the requested URL  was matched exactly. If only a partial match was obtained, such as a match with only the host portion  or only part of the URL path , then a match length is given in the match length field . The match length determines a number of characters of the specified URL  which were matched with a stored URL at the server . The character count is taken along the host portion  or the path portion , or both. In the preferred embodiment, the count is taken along the path portion  only. A match on the root page \u201cI\u201d counts as one character.","In response to other command types, the response data  contains other data such as a category list specifying a predetermined list of categories, or a version identity which identifies a current version of the category list being used by the categorization server . These other command types can be used to trigger software or configuration updates at the client .","As shown in , the request message  and reply message  each use the payload section of a UDP packet, which usually has a maximum size of 65 Kb as defined by the MTU (Maximum Transmission Unit) of the network. By contrast, the Ethernet physical layer packet has a maximum size of just 1500 bytes. Even so, in the present invention almost all of the request and reply messages , for categorization of URLs fit within the very limited size constraints of a single Ethernet packet, thus avoiding fragmentation.",{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 8","FIGS. 5"],"b":["12","121","122","123","124","121","121","621","622","623","122","40","123","6","7","124","124"]},"In the preferred embodiment, the communication module  calculates a retransmission timeout for every sent request. To be effective, it is desired that the timeout interval take account of vastly varying network conditions, and adapt accordingly. This helps to eliminate both unnecessary retransmissions and unrealistically high timeout periods. Optionally, the number of retries is configurable such as through a user interface.","The preferred method for calculating the retransmission timeout \u201crto\u201d includes (a) measuring the round-trip time \u201cmt\u201d for each request, (b) maintaining a estimate of the smoothed round-trip time \u201csrtt\u201d, and (c) maintaining an estimate of the smoothed mean deviation \u201csmd\u201d. The estimates are calculated as:\n\n(()\/8)\n\n((()\u2212)\/4)\n","From these estimates, the timeout value is calculated as:\n\n4()\n","Advantageously, this formula is quickly calculated using fixed-point arithmetic and bit shifts.","If any time-out period rto expires, then next timeout is exponentially increased by:\n\n2\n","The preferred embodiment of the present invention has many advantages, including in particular minimizing overhead when requesting categorization of URL requests and minimizing workload at the gateway appliance . The preferred embodiment employs UDP for speed and simplicity, whilst adding a sequence number and time stamp to improve reliability.","Cache","In another aspect of the present invention, it is desired to further reduce network traffic over the Internet  when placing requested URLs into categories.",{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 8","b":["12","125","125","620","500","125","20"]},{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 9","b":["125","125","12"]},"Referring again to , the method of the present invention preferably includes the step  of adding the determined URL category to the category cache .","In , the cache structure comprises a hash array , and combined host trees and age list . The host portion  of each URL is hashed to produce an index  in the hash array . Many hosts may produce the same hash index , and each array element is a pointer to a root tree node of a host tree . Hosts with the same hash are searched through the host tree , which is preferably a balanced red-black tree where each node has a red\/black bit to color the node red or black. There are n internal nodes and the tree  has a height of at most 2 log(n+1) so that no leaf is more than twice as far from the root as any other. This is just one example tree structure and many other tree structures are applicable in embodiments of the present invention.","Each node  comprises a host string  holding a host portion , and optionally an array of pages  for the specified host . Left and right pointers ,  are used for searching the tree . Each node also includes next and previous pointers , which refer to a next (older) node and a previous (newer) node, respectively, for aging. Also, each node includes a parent node pointer  to allow for fast node deletions.","As also shown in , the next and previous node pointers , allow the nodes to be arranged in order by age. New nodes are added to the head of the age list, and old nodes are removed from the tail. When the cache is full and has reached a predetermined maximum size, the oldest node is removed to make room for a new URL, to be added in a new host node. Conveniently, the age list is refreshed, in order to keep the most recently accessed nodes at the head of the age list.","In a preferred embodiment, the memory footprint of the category cache  is configured in bytes, in order to determine the maximum size occupied by the hash array  and tree list . The size may be configured in use through a control panel, or determined \u2018automatically according to needs of the client and thereby balance available resources amongst neighboring functions.","The hash array  has a predetermined length, which is ideally a prime number for better hash distribution. The hash array length is suitably dynamically configurable, such as by being a variable which is input from a control panel during use. A longer hash array yields faster categorizations, but uses more memory. As examples, the hashing algorithm is suitably MD4 or MD5.","In use, a URL host portion  and a URL path  are extracted from a URL request  within HTTP or equivalent. The host portion  is hashed to determine an index  in the hash array , and the respective host tree  is searched to locate a node  matching the host portion . The URL path portion  is then searched against the page array .",{"@attributes":{"id":"p-0088","num":"0087"},"figref":"FIG. 10","b":["822","823","822","902","906","908","904","906","908"]},"In this example of , the host is \u201cwww.host.com\u201d and a searched URL path is \u201c\/directory1\/page1\u201d. The entry for the page string \u201c\/directory1\u201d has a children flag  of \u201cyes\u201d which shows that specific category codes are available for children of this path. The cache shows that \u201c\/directory1\/page9\u201d has already been cached, but there is currently no entry for the searched page string \u201c\/directory1\/page1\u201d. In this example, the cache  has failed to provide a category for the requested URL. A request message  is generated to determine the code for the specified URL, i.e., for host \u201cwww.host.com\u201d and the path \u201c\/directory1\/page1\u201d.","As a second example, assume that the children flag  for the page \u201c\/directory 1\u201d is set to \u201cno\u201d, which allows a cache result to be returned with confidence for the searched page based on a partial match. For example, if the children flag for \u201c\/directory 1\u201d is set to \u201cno\u201d, then a confident category code is returned for the requested \u201c\/directory1\/page1\u201d based on a partial match with \u201c\/directory1\u201d as a parent of the requested child page.","The cache  is suitably built by storing data from request messages  and reply messages . The request message  identifies the specified URL, with the host portion  and the page portion  conveniently provided as a delimited character string. The host portion  forms the host string . The exact flag  determines the children flag . The match length field  determines a truncation point for the specified URL as a number of characters. The truncated URL is then added to the category cache. For example, the specified URL, \u201cwww.host.com\/directory1\/page1\/sub_page3\u201d is truncated with an exact match at 19 characters to be stored as host=\u201cwww.host.com\u201d and page string=\u201c\/directory1\/page1\u201d. The category code field  provides the category code .","Referring again to , the gateway appliance  preferably further includes a custom cache  alongside the category cache . The custom cache  records a customized list of categorizations. In preferred embodiments, the custom cache  is used to override other categorizations, or to add supplementary URLs. In the preferred embodiment, the custom cache  is structured identical to the category cache . Searches are preferably conducted in order through the custom cache , then if necessary the category cache , and finally if necessary by generating a request message  to the categorization server . Preferably, the custom cache  does not perform any URL aging, so that a user has full control over the size and content of the custom cache . In this case, the previous and next pointers , are not required or are left unused.","In the preferred embodiment, the category cache  and\/or the custom cache  can be cleared completely and then rebuilt with fresh data, such as after a reset operation. Preferably, each cache , may also be given a partial clear out, such as deleting all hosts  or pages  with a specified category code. The cache structure described with reference to  enables convenient cache management, whilst being efficient to operate.",{"@attributes":{"id":"p-0094","num":"0093"},"figref":"FIG. 11","b":["40","410","420","430","440","410","420","600","430","440","440"]},"Licensing","In a further aspect of the present invention, the categorization service  running on the categorization server  performs a licensing process.","In particular, it is desired to confirm that the request message  is valid and comes from a valid client device ,. This licensing process controls access to the categorization service, such as for security and to enable paid-for subscription based implementations.","The licensing process employed in the preferred embodiments of the present invention is highly flexible and is readily integrated with other existing licensing mechanisms.","As shown above in , the header  of each request message  preferably includes a licensing field  which carries data such as a license key.","In the preferred embodiment, the licensing field  is subdivided into a partner ID field  and a client ID field . The partner ID field  allows a plurality of different licensing schemes to exist in parallel, each having different requirements or validation processes.","Referring again to , the categorization service  comprises a licensing module  associated with the main module , which performs validation of the supplied licensing field . In the preferred embodiment, the licensing module  receives the licensing field  and returns a \u201clicense valid\u201d or \u201clicense invalid\u201d status which controls whether or not the categorization server  will respond to a categorization request message . Suitably, the licensing module  runs as a dynamically linked library (DLL).","In a further preferred embodiment, the categorization service  includes a plurality of licensing DLLs , one of which is called to validate the licensing field  according to the partner ID field . This allows different licensing schemes to be applied for different clients.","In the preferred embodiment, the partner  field  is 4 bytes long, giving up to 65535 licensing partner identities. The client ID field  is suitably up to 60 printable characters long, allowing room for any appropriate secure licensing mechanism.","It is important to validate licenses relatively quickly, since the system is operating in real time and a user is waiting for their requested web page. As shown in , the categorization server  preferably comprises a license cache  to store recently encountered license fields . The licensing process comprises first checking whether the received licensing field  is stored in the licensing cache , and then calling the licensing validation DLL . Suitably, the result of each licensing call is then added to the licensing cache  and is then available for subsequent requests from that client . Since clients tend to access the Internet in short burst of activity, it is likely that one categorization request  will be followed by another soon after. The license cache  significantly improves response speed for second and subsequent requests.",{"@attributes":{"id":"p-0104","num":"0103"},"figref":["FIG. 12","FIG. 9"],"b":["455","125"]},"As shown in , the licensing cache  comprises a hash array  and one or more combined license trees and age list . The hash array  comprises index elements  as a hash of license keys from the licensing field SIS, each of which is a pointer to a license tree list .","Each tree node  comprises a license string  holding a license key and a corresponding license result (e.g., valid or invalid). The cache can hold solely valid keys, solely invalid keys, or, as in this example, a mixture of both, according to the circumstances of a particular implementation.","Further, each tree node  comprises parent, left and right pointers , ,  defining the tree structure. This example shows a balanced red\/black tree using a red\/black flag .","The license trees  also functions as an age list to list each of the tree nodes  by age. The age list comprises, within each tree node , a next pointer  and a previous pointer  which refer to a next older tree node and a previous newer tree node, respectively.","Ideally, the license cache  is actively managed to reside within a predetermined memory size. Older tree nodes  are deleted from a tail of the age list by referring to the next and previous pointers , , whilst new nodes are added to the head of the age list. Optionally, the age list is updated after each access to keep recently accessed nodes at the head of the list.","In order to maintain valid content, the license cache is preferably flushed, in whole or in part, such as at scheduled regular timed intervals or following triggering events such as a reset.",{"@attributes":{"id":"p-0111","num":"0110"},"figref":"FIG. 13"},"The categorization service  makes calls to a license interface DLL, , which in turn makes calls one of a plurality of partner license DLLs .","The license interface DLL  optionally includes the license cache . Preferably, first consults the license the license interface DLL cache  and then, if necessary, request license validation by one of the partner license DLLs .","In this preferred embodiment, the license interface DLL  resolves the partner ID field  by referring to a partner map database , which links the partner ID  to a partner DLL name and preferably provides configuration information for making calls into that DLL.","In , the partner license DLLs  include a no license DLL  which simply indicates that any license key is valid. This allows the system to run a default \u201cno problem\u201d license mode prior to implementation of license schemes which actively validate license keys.","As one option, a no database DLL  performs a mathematical, algorithmic or cryptographic validation of the license key.","As another option, a hosted licensing DLL  is provided which forwards licensing requests to a remote licensing server  for validation. As examples, the licensing requests are sent over a local area network (LAN), or are forwarded using a SOAP-based web service over the Internet .","As yet another option, a database licensing DLL  connects directly into an ODBC database  using a stored procedure to validate the license key. The database  suitably stores the partner ID field , license code , and expiry date of valid licenses and hence can offer validation for a plurality of partner license schemes. A license management interface  is provided to manage the content of the license database .","This aspect of the present invention has many advantages, as discussed above. Licensing is very useful in the context of controlling or monitoring Internet access by categorization of URLs, and opens up many useful commercial and technical implementations of this technology. Further, the use of a licensing cache reduces time and resources for each validation and increases throughput. The cache is structured to be compact and is easily managed. The use of a partner ID field allows great flexibility and convenience to choose between available licensing schemes.","Although a few preferred embodiments have been shown and described, it will be appreciated by those skilled in the art that various changes and modifications might be made without departing from the scope of the invention, as defined in the appended claims.","Attention is directed to all papers and documents which are filed specification in concurrently with connection with or previous to this application this and which are open to public inspection with this specification, and the contents of all such papers and documents are incorporated herein by reference.","All of the features disclosed in this specification (including any accompanying claims, abstract and drawings), and\/or all of the steps of any method or process so disclosed, may be combined in any combination, except combinations where at least some of such features and\/or steps are mutually exclusive.","Each feature disclosed in this specification (including any accompanying claims, abstract and drawings) may be replaced by alternative features serving the same, equivalent or similar purpose, unless expressly stated otherwise. Thus, unless expressly stated otherwise, each feature disclosed is one example only of a generic series of equivalent or similar features.","The invention is not restricted to the details of the foregoing embodiment(s). The invention extends to any novel one, or any novel combination, of the features disclosed in this specification (including any accompanying claims, abstract and drawings)."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a better understanding of the invention, and to show how embodiments of the same may be carried into effect, reference will now be made, by way of example, to the accompanying diagrammatic drawings in which:",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 10","FIG. 9"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 13"}]},"DETDESC":[{},{}]}
