---
title: Architecture for an efficient media framework
abstract: A system comprises a first media framework component, a second media framework component, and a media framework. The media framework comprises a simplified media framework interface and a non-tunnel mode handler. The simplified media framework interface handles connectivity between a first port and a second port in a tunnel mode. The non-tunnel mode handler converts connectivity of a third port and a fourth port in a non-tunnel mode to appear to be the tunnel mode for the simplified media framework interface. The first port and the second port of the simplified media framework interface is coupled to a fifth port and a sixth port of the non-tunnel mode handler. And, the third port of the non-tunnel mode handler is coupled to the first media framework component and the fourth port of the non-tunnel mode handler is coupled to the second media framework component.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08539128&OS=08539128&RS=08539128
owner: VisualOn, Inc.
number: 08539128
owner_city: Santa Clara
owner_country: US
publication_date: 20101216
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","DETAILED DESCRIPTION"],"p":["Processing and rendering media (e.g., audio or video) is a very popular application on computers, cellular phones, and embedded computing devices. Many different software applications exist to perform the media processing and rendering, some specific to one type of computing device, some which exist on multiple platforms. Underlying the software is typically a media framework application programming interface (API), which provides access to the media capabilities of the computing device. A media framework additionally has an associated set of functionality that may be used with the framework to build new media applications, referred to variously as components or plug-ins. These components may be authored by the framework authors and included along with the framework, or they may be authored by a third party and distributed separately. There exist several media frameworks, e.g., DirectShow, OpenMAX, GStreamer, QuickTime, Helix DNA, Xine, etc. Some of these media frameworks (e.g., DirectShow, QuickTime) are authored by a software company and distributed as closed-source software. Some of the media frameworks (e.g., OpenMAX) have functionality specified by a central organization, but implementation of the functionality left to outside developers, for distribution as either open or closed-source software.","Many software components exist for the OpenMAX framework, and many can be used together to form a single application. OpenMAX components forming an application communicate both with OpenMAX framework and with each other. Communication between OpenMAX components can be directly from one component to the next, referred to as communication in tunnel mode, or it can pass through and be controlled by the OpenMAX framework, referred to as communication in non-tunnel mode. Some OpenMAX components support communication in either tunnel mode or non-tunnel mode, and some OpenMAX components support communication only in non-tunnel mode. Controlling and keeping track of non-tunnel mode communications can be significant overhead for OpenMAX framework, but is necessary to support communications involving components that do not implement tunnel mode communication. Building a non-tunnel mode communication handler that is efficient even when there is a large, complex network of components can be significant work for the software developer implementing OpenMAX framework.","The invention can be implemented in numerous ways, including as a process; an apparatus; a system; a composition of matter; a computer program product embodied on a computer readable storage medium; and\/or a processor, such as a processor configured to execute instructions stored on and\/or provided by a memory coupled to the processor. In this specification, these implementations, or any other form that the invention may take, may be referred to as techniques. In general, the order of the steps of disclosed processes may be altered within the scope of the invention. Unless stated otherwise, a component such as a processor or a memory described as being configured to perform a task may be implemented as a general component that is temporarily configured to perform the task at a given time or a specific component that is manufactured to perform the task. As used herein, the term \u2018processor\u2019 refers to one or more devices, circuits, and\/or processing cores configured to process data, such as computer program instructions.","A detailed description of one or more embodiments of the invention is provided below along with accompanying figures that illustrate the principles of the invention. The invention is described in connection with such embodiments, but the invention is not limited to any embodiment. The scope of the invention is limited only by the claims and the invention encompasses numerous alternatives, modifications and equivalents. Numerous specific details are set forth in the following description in order to provide a thorough understanding of the invention. These details are provided for the purpose of example and the invention may be practiced according to the claims without some or all of these specific details. For the purpose of clarity, technical material that is known in the technical fields related to the invention has not been described in detail so that the invention is not unnecessarily obscured.","A system is disclosed. The system comprises a first media framework component, a second media framework component, and a media framework. The media framework comprises a simplified media framework interface and a non-tunnel mode handler. The simplified media framework interface handles connectivity between a first port and a second port in a tunnel mode. The non-tunnel mode handler converts connectivity of a third port and a fourth port in a non-tunnel mode to appear to be the tunnel mode for the simplified media framework interface. The first port and the second port of the simplified media framework interface are coupled to a fifth port and a sixth port of the non-tunnel mode handler. The third port of the non-tunnel mode handler is coupled to the first media framework component and the fourth port of the non-tunnel mode handler is coupled to the second media framework component.","In some embodiments, the OpenMAX media framework specifies both tunnel mode and non-tunnel mode communication between components. The disclosed media framework comprises a simplified media framework that does not handle non-tunnel mode communication between two components and a non-tunnel mode handler that handles non-tunnel mode communication between two components and makes it appear as if it is a tunnel mode communication for the simplified media framework. The simplified media framework comprises an OpenMax media framework except that it does not handle non-tunnel mode communication between components. In various embodiments, components comprise file handler(s), file container parser(s), audio renderer(s), video renderer(s), audio decoder(s), video decoder(s), or any other appropriate media framework component. In some embodiments, the non-tunnel mode handler makes the simplified media framework easier to implement. In some embodiments, the simplified media framework is able to handle more complex graphs of components more easily and remain a fully OpenMAX compliant media framework.","Architecture for an efficient media framework is disclosed. Software for efficiently handling non-tunnel mode communications among OpenMAX media framework components is developed and modularized separately from the OpenMAX media framework implementation. The non-tunnel mode handling software interfaces with components and allows them to communicate in either tunnel mode or non-tunnel mode, as they desire, handling non-tunnel mode communication as though it were the media framework. The handling software also interfaces with the media framework and informs it that all components are communicating in tunnel mode regardless of their actual communication mode. Communications between the media framework and the components pass through the handling software. Communications not related to inter-component communication are passed on from the handling software to the component at which they were directed. Communications related to inter-component communication are intercepted by the handling software and translated to account for the discrepancy occurring because the media framework functions as though the component is in tunnel mode even though it may be in non-tunnel mode.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1","b":["100","100","102","102","102","104","106","108","110","112","116","104","102","116","104","106","116","100","102","108","100","102","110","100","102","112","114","100","102","114","116","100","116","100"]},"In some embodiments, computing system  comprises a smart phone that includes a media framework coupled to one or more components, where the media framework coupled to the one or more components is capable of loading a data file\u2014for example, a video or audio file\u2014and processing the data file to present the data file to a user. In various embodiments, the data file is presented to the user as a video stream displayed using a color or black and white display or an audio stream output using a speaker or headphones or broadcast to a wireless connected audio output device (e.g., a Bluetooth connected head set). In some embodiments, processing the data file includes decompressing or decrypting the data file\u2014for example, processing the data file compatible with a format such as MPEG-1, MPEG2, MPEG4 (e.g. formats specified by the Moving Picture Experts Group), H.264, AAC, MP3, Windows Media Audio, Windows Media Video, MIDI, media containers such as AVI, ASF, WAV, AAC, or MP4. In various embodiments, data storage device  comprises a solid state memory (e.g., a random access memory), a magnetic memory, an optical memory, or any other appropriate data storage device.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 2A","FIG. 1"],"b":["200","102","200","202","204","202","204","200","204"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 2B","FIG. 1","FIG. 1","FIG. 1","FIG. 1","FIG. 1","FIG. 1"],"b":["206","102","206","208","210","208","210","212","212","212","106","108","110","112","116","212","210","212","208","206","210"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 2C","FIG. 1","FIG. 1","FIG. 1","FIG. 1","FIG. 1","FIG. 1"],"b":["214","102","214","216","218","216","218","220","222","220","222","220","222","106","108","110","112","116","222","218","222","216","222","220","214","218"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 2D","FIG. 1","FIG. 1","FIG. 1","FIG. 1","FIG. 1","FIG. 1"],"b":["224","102","224","226","228","226","228","230","232","234","230","232","234","230","232","234","106","108","110","112","116","234","228","234","226","234","232","224","228"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 2E","FIG. 1","FIG. 1","FIG. 1","FIG. 1","FIG. 1","FIG. 1"],"b":["236","102","236","238","240","238","240","242","244","246","248","242","244","246","248","242","244","246","248","106","108","110","112","116","248","240","248","238","248","244","244","248","238","236","240"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 2F","FIG. 1","FIG. 1","FIG. 1","FIG. 1","FIG. 1","FIG. 1"],"b":["250","102","250","252","254","252","254","256","258","260","262","264","256","258","260","262","264","256","258","260","262","264","106","108","110","112","116","264","254","264","252","264","256","256","264","252","250","254"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 2G","FIG. 1","FIG. 1","FIG. 1","FIG. 1","FIG. 1","FIG. 1"],"b":["266","102","266","268","270","268","270","272","274","276","278","280","282","272","274","276","282","278","280","272","274","276","278","280","282","106","108","110","112","116","282","270","282","268","282","276","282","278","282","278","268"]},{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 3","FIG. 1"],"b":["300","102","300","302","306","302","306","308","310","308","310"]},"When non-tunnel mode communication is established between non-tunneling media framework component  and non-tunneling media framework component , media framework  creates buffer  and establishes links from non-tunneling media framework component  to buffer  and from non-tunneling media framework component  to buffer . Media framework  coordinates communications between non-tunneling media framework component  and non-tunneling media framework component  via buffer . In some embodiments, when non-tunneling media framework component  is to send data to non-tunneling media framework component , media framework  requests non-tunneling media framework component  to input data to buffer . When non-tunneling media framework component  has finished inputting data to buffer , it communicates to media framework  that it is finished. Media framework  then requests non-tunneling media framework component  to retrieve data from buffer . When non-tunneling media framework component  has finished retrieving data from buffer , it communicates to media framework  that it has finished, and the data transfer is complete. A complementary process occurs when non-tunneling media framework component  is to send data to non-tunneling media framework component .","In various embodiments, when non-tunnel mode communication is established between non-tunneling media framework component  and non-tunneling media framework component , media framework  decides the buffer utilization policy. The buffer utilization policy indicates buffers utilized for the communication between non-tunneling media framework component  and non-tunneling media framework component . Buffers may be located in non-tunneling media framework component , in non-tunneling media framework component , or in any other appropriate location. In various embodiments, a buffer is allocated using a \u201ccreate a buffer\u201d command or a buffer is not allocated or created. For instance, if either non-tunneling media framework component  or non-tunneling media framework component  has its own buffer, then media framework  will use an available buffer. In some embodiments, if both non-tunneling media framework component  and non-tunneling media framework component  insist on using their own buffer, then copying data from one buffer to the other may be required. Media framework  coordinates data flow between non-tunneling media framework component  and non-tunneling media framework component  regardless of whether the buffer used for communication is located within media framework  or in another location.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 4","FIG. 1"],"b":["400","102","400","402","404","402","404","406","410","406","410"]},"When tunnel mode communication is established between tunneling media framework component  and tunneling media framework component , tunneling media framework component  creates buffer  and establishes a link between tunneling media framework component  and buffer . In some embodiments, when tunneling media framework component  is to send data to tunneling media framework component , it inputs the data to buffer  and then communicates to tunneling media framework component  to retrieve the data from buffer . When tunneling media framework component  has finished retrieving the data from buffer , it communicates to tunneling media framework component  that it has finished, and the data transfer is complete. In various embodiments, when tunnel mode communication is established between tunneling media framework component  and tunneling media framework component , the communication buffer is established in tunneling media framework component , in another media framework component, or in any other appropriate location.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 5","FIG. 1"],"b":["500","102","500","502","504","508","502","508","510","512","510","512","502"]},"In the example shown, communications between media framework  and non-tunneling media framework component  and non-tunneling media framework component  pass through non-tunnel mode handler . Communications not related to inter-component communication are passed from non-tunnel mode handler  to the component at which they were directed. Communications related to inter-component communication are intercepted by non-tunnel mode handler  and translated. The translation carried out by non-tunnel mode handler  ensures that media framework  can interact with non-tunneling media framework component  and non-tunneling media framework component  as though they are communicating in tunnel mode, despite their communicating in non-tunnel mode coordinated by non-tunnel mode handler , without discrepancies or errors arising.","When non-tunnel mode communication is established between non-tunneling media framework component  and non-tunneling media framework component , non-tunnel mode handler  creates buffer  and establishes links from non-tunneling media framework component  to buffer  and from non-tunneling media framework component  to buffer . Non-tunnel mode handler  coordinates communications between non-tunneling media framework component  and non-tunneling media framework component  via buffer . In some embodiments, when non-tunneling media framework component  is to send data to non-tunneling media framework component , non-tunnel mode handler  requests non-tunneling media framework component  to input data to buffer . When non-tunneling media framework component  has finished inputting data to buffer , it communicates to non-tunnel mode handler  that it is finished. Non-tunnel mode handler  then requests non-tunneling media framework component  to retrieve data from buffer . When non-tunneling media framework component  has finished retrieving data from buffer , it communicates to non-tunnel mode handler  that it has finished, and the data transfer is complete. A complementary process occurs when non-tunneling media framework component  is to send data to non-tunneling media framework component .","In various embodiments, when non-tunnel mode communication is established between non-tunneling media framework component  and non-tunneling media framework component , non-tunnel mode handler  creates a buffer located in non-tunneling media framework component , located in non-tunneling media framework component , or in any other appropriate location. Non-tunnel mode handler  coordinates data flow between non-tunneling media framework component  and non-tunneling media framework component  regardless of whether the buffer used for communication is located within non-tunnel mode handler  or in another location.","When non-tunnel mode communication is established between non-tunneling media framework component  and non-tunneling media framework component , non-tunnel mode handler  communicates to media framework  that non-tunneling media framework component  and non-tunneling media framework component  are communicating in tunnel mode. Media framework  has no responsibility for coordinating communication between non-tunneling media framework component  and non-tunneling media framework component  if they are communicating in tunnel mode. Responsibility for coordinating communication between non-tunneling media framework component  and non-tunneling media framework component  is then left to non-tunnel mode handler . In the event that media framework component graph  comprises a complex graph of media framework components including non-tunnel mode communication (e.g., media framework component graph  of ), media framework  is able to treat the graph as though all communications are made in tunnel mode, reducing the complexity it has to coordinate.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 6","FIG. 1"],"b":["600","102","600","602","610","602","602","604","606","610","612","614"]},"In the example shown, simplified media framework  handles connectivity between port  and port  in a tunnel mode (e.g., as though components connected to port  and port  are communicating in tunnel mode as described in the section regarding ). Non-tunnel mode handler  converts connectivity between port  and port  in a non-tunnel mode (e.g., components connected to port  and port  are communicating in a non-tunnel mode as described in the section regarding ) to appear as connectivity in a tunnel mode at port  and port . Port  of simplified media framework  is coupled to port  of non-tunnel mode handler , and port  of simplified media framework  is coupled to port  of non-tunnel mode handler . Non-tunneling media framework  is coupled to port  of non-tunnel mode handler  and non-tunneling media framework component  is coupled to port  of non-tunnel mode handler . Communication between non-tunneling media framework component  and non-tunneling media framework component  is handled in non-tunnel mode by non-tunnel mode handler  at port  and port , and is converted to appear as components communicating in tunnel mode at port  and port , which are controlled by simplified media framework  at port  and port .","When a media framework developer is developing simplified media framework  for use with non-tunnel mode handler , the media framework developer is able to leave out the parts of the media framework regarding non-tunnel mode communication. Development complexity and time is thereby reduced, and a simplified media framework is created. Simplified media framework  is combined with non-tunnel mode handler  to create media framework , which conforms to media framework specifications.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 7","FIG. 7","FIG. 6","FIG. 6","FIG. 6","FIG. 7","FIG. 6","FIG. 4","FIG. 4","FIG. 3","FIG. 3"],"b":["606","612","614","604","700","702","406","410","308","310","704","706","710","710","706","708","708","710","710"]},{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 8","FIG. 8","FIG. 7","FIG. 8","FIG. 6"],"b":["708","606","800","802","804","804","806","812","812","802","808","808","810","812","812"]},{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 9","FIG. 9","FIG. 6","FIG. 9","FIG. 6","FIG. 6","FIG. 6","FIG. 8","FIG. 6","FIG. 8"],"b":["606","612","614","900","612","806","902","904","614","806","906"]},{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 10","FIG. 10","FIG. 6","FIG. 10","FIG. 6"],"b":["606","604","1000","1002","1004","1006","1008","1010","1012","1014","1016","1018","1020","1014","1020"]},{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 11","FIG. 11","FIG. 6","FIG. 6","FIG. 4","FIG. 6","FIG. 4","FIG. 6","FIG. 6","FIG. 6","FIG. 6","FIG. 6","FIG. 6","FIG. 6","FIG. 6"],"b":["600","1100","612","406","1102","614","410","1104","604","606","620","622","624","626","628","630"]},"Although the foregoing embodiments have been described in some detail for purposes of clarity of understanding, the invention is not limited to the details provided. There are many alternative ways of implementing the inventio. The disclosed embodiments are illustrative and not restrictive."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various embodiments of the invention are disclosed in the following detailed description and the accompanying drawings.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2C"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2D"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2E"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2F"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2G"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
