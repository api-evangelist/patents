---
title: Method of assisting an application to traverse a firewall
abstract: A method for a firewall-aware application to communicate its expectations to a firewall without requiring the firewall to change its policy or compromise network security. An application API is provided for applications to inform a firewall or firewalls of the application's needs, and a firewall API is provided that informs the firewall or firewalls of the application's needs. An interception module watches for connect and listen attempts by applications and services to the network stack on the local computer. The interception module traps these attempts and determines what user is making the attempt, what application or service is making the attempt, and conducts a firewall policy look-up to determine whether the user and/or application or service are allowed to connect to the network. If so, the interception module may instruct the host and/or edge firewall to configure itself for the connection being requested.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07559082&OS=07559082&RS=07559082
owner: Microsoft Corporation
number: 07559082
owner_city: Redmond
owner_country: US
publication_date: 20030625
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present invention is generally related to security on a computer or network, and is more specifically related to firewalls and their use with an application.","In general, a firewall is an electronic boundary that prevents unauthorized users from accessing certain files on a network or a computer. A firewall may be provided as firewall code on a user's computer (\u201chost firewall\u201d). Alternatively, a dedicated firewall machine may be provided at the edge of a network (\u201cedge firewall\u201d) that interfaces with computers outside the network and has special security precautions built into it in order to protect sensitive files on computers within the network. The idea is to protect a cluster of more loosely administered machines hidden behind the edge firewall from computer users outside of the network. The machine on which the edge firewall is located is often referred to as a \u201cgateway\u201d or a \u201cdedicated gateway.\u201d If configured to protect a network from the Internet, the machine is often referred to at an \u201cInternet Gateway Device.\u201d","Firewalls use one or more of at least three different methods to control traffic flowing in and out of the network. In a first method, called static packet filtering, packets are analyzed against a set of filters. Packets approved by the filters are sent to the requesting system; all others are discarded. In a second method, called proxy service, information from the Internet is retrieved by the firewall, evaluated against a policy, and then sent to the requesting system, and vice versa. In a third, newer method, called stateful inspection, the contents of the packet are not examined, but instead key parts of the packet are compared to a database of trusted information. Information traveling from inside the firewall to the outside is monitored for special defining characteristics, and then incoming information is compared to these characteristics. If the comparison yields a reasonable match, the information is allowed through. Otherwise it is discarded.","Firewalls are customizable, meaning that filters may be added or removed based upon several conditions. As an example, Internet Protocol (\u201cIP\u201d) addresses may be used to restrict or block traffic. As an example, if a certain IP address outside the network is reading too many files from a server, the firewall can block all traffic to and\/or from that address. As another example, a firewall may block all access to certain domain names, or allow access to only specific domain names. As still another example, a company might set up a network with only one or two machines to handle a specific protocol or protocols and ban those protocols on all other machines. Still another example is using ports to restrict traffic. For example, if a server machine is running a Web (HTTP) server and an FTP server, the Web server would typically be available on port , and the FTP server would be available on port . A company might block port  access on all machines but one on a network.","Thus, a firewall ensures security by reviewing network communications and only allowing communications that are consistent with a policy that has been set within the firewall. However, while the traffic control methods described above work well for filtering some traffic, the rules or policies set for the firewall may not meet the needs of some of the applications within the network. Since firewalls cannot have complete knowledge of all existing and future applications, firewalls implement heuristics to differentiate between a safe communication and a potentially dangerous communication. For example, a firewall may choose to allow connections initiated from within a trusted network but not from those initiated from outside the trusted network (e.g., initiated from the Internet).","Although the heuristics simplify firewall policy design, some applications do not align with the firewall's heuristics. As a result, attempts at communication by such an application will fail, prompting firewall designers to implement and test special work-arounds for each and every application that fails. These work-arounds increase firewall complexity and code churn.","Recent efforts to devise a firewall control protocol (\u201cFCP\u201d) that allows applications to modify a firewall's policy on an ad hoc basis have not been successful due to a fundamental security conflict: The firewall policy is created and managed by a trusted entity (e.g., a network administrator), while the applications may run on untrusted nodes or endpoints. Allowing untrusted applications to modify corporate network policy is inconsistent with the security goals of the firewall.","The following presents a simplified summary of some embodiments of the invention in order to provide a basic understanding of the invention. This summary is not an extensive overview of the invention. It is not intended to identify key\/critical elements of the invention or to delineate the scope of the invention. Its sole purpose is to present some embodiments of the invention in a simplified form as a prelude to the more detailed description that is presented later.","In accordance with an embodiment of the invention, a method is provided for a firewall-aware application to communicate its expectations to the firewall without requiring the firewall to change its policy or compromise network security. To this end, an application application programming interface (\u201cAPI\u201d) may be provided for applications to inform a firewall or firewalls of the application's needs, describe their current or anticipated activities, and describe handling requirements for the networking data sent or received by an application.","In accordance with another embodiment of the present invention, a firewall API is provided that informs the firewall or firewalls of the application's needs. The application API and the firewall API may interact through a networking subsystem which may be provided, for example, as part of the operating system of a computer system.","In accordance with another embodiment of the invention, an enforcement module is provided to allow a user to create a simple firewall policy, or network access policy, to either allow or deny firewall unaware applications and services on their computer to connect to the network. Additionally, the enforcement module allows these policies to be on a per-user basis. The user does not need to know or use rules for ports, protocols, or IP addresses to enable an application to work through a firewall. To this end, a socket application programming interface is provided which allows the application or service to describe its needs around inbound and outbound restrictions using IP addresses, subnet information, or scope of the connection. The user may also define a communication security level (e.g., authentication and\/or encryption).","In accordance with another embodiment of the invention, the enforcement module allows for the transparent traversal of applications through the firewall. The enforcement module includes an interception module that watches for connect and listen attempts by applications and services to the network stack on the local computer. The interception module traps these attempts and determines what user is making the attempt, what application or service is making the attempt, and conducts a firewall policy look-up to determine whether the user and\/or application or service are allowed to connect to the network. If so, the interception module may instruct the host and\/or edge firewall to configure itself for the connection being requested.","Other features of the invention will become apparent from the following detailed description when taken in conjunction with the drawings, in which:","In the following description, various embodiments of the present invention will be described. For purposes of explanation, specific configurations and details are set forth in order to provide a thorough understanding of the embodiments. However, it will also be apparent to one skilled in the art that the present invention may be practiced without the specific details. Furthermore, well-known features may be omitted or simplified in order not to obscure the embodiment being described.","Prior to proceeding with a description of the various embodiments of the invention, a description of a computer and networking environment in which the various embodiments of the invention may be practiced is now provided. Although not required, the invention will be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, programs include routines, objects, components, data structures and the like that perform particular tasks or implement particular abstract data types. The terms \u201cprogram\u201d or \u201cmodule\u201d as used herein may connote a single program module or multiple program modules acting in concert. The terms \u201ccomputer\u201d and \u201ccomputing device\u201d as used herein include any device that electronically executes one or more programs, such as personal computers (PCs), hand-held devices, multi-processor systems, microprocessor-based programmable consumer electronics, network PCs, minicomputers, tablet PCs, laptop computers, consumer appliances having a microprocessor or microcontroller, routers, gateways, hubs and the like. The invention may also be employed in distributed computing environments, where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, programs may be located in both local and remote memory storage devices.","An example of a computer networking environment suitable for incorporating aspects of the invention is described with reference to . The example computer networking environment includes several computers  communicating with one another over a safe network , indicated by a cloud. The safe network  may include many well-known components, such as routers, gateways, hubs, etc. and allows the computers  to communicate via wired and\/or wireless media. When interacting with one another over the safe network , one or more of the computers  may act as clients, servers or peers with respect to other computers . Accordingly, the various embodiments of the invention may be practiced on clients, servers, peers or combinations thereof, even though specific examples contained herein may not refer to all of these types of computers.","The safe network  in this example is considered a \u201csafe\u201d network, in that the computers  are protected by a common firewall, in the example shown as an Internet gateway device . The Internet gateway device  protects the computers  from remote computers  located on a public or unsafe network , in the example shown by a cloud. Although described as an Internet gateway device , the gateway device may protect the safe network from other types of unsafe networks, not necessarily the Internet, including a LAN, a WAN, or another suitable network.","Although shown as having multiple computers, the safe network  may include only a single computer . In addition, although the unsafe network  is shown as having multiple remote computers , it may instead have only one.","Referring to , an example of a basic configuration for the computer  on which embodiments of the invention described herein may be implemented is shown. In its most basic configuration, the computer  typically includes at least one processing unit  and memory . The processing unit  executes instructions to carry out tasks in accordance with various embodiments of the invention. In carrying out such tasks, the processing unit  may transmit electronic signals to other parts of the computer  and to devices outside of the computer  to cause some result. Depending on the exact configuration and type of the computer , the memory  may be volatile (such as RAM), non-volatile (such as ROM or flash memory), or some combination of the two. This most basic configuration is illustrated in  by dashed line .","The computer  may also have additional features\/functionality. For example, the computer  may also include additional storage (removable  and\/or non-removable ) including, but not limited to, magnetic or optical disks or tape. Computer storage media includes volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information, including computer-executable instructions, data structures, program modules, or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory, CD-ROM, digital versatile disk (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to stored the desired information and which can be accessed by the computer . Any such computer storage media may be part of computer .","The computer  preferably also contains communications connections  that allow the device to communicate with other devices, such as other computers  on the safe network , or remote computers  on the unsafe network  (only a remote computer  is shown in ). A communication connection is an example of a communication medium. Communication media typically embody computer readable instructions, data structures, program modules, or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media. By way of example, and not limitation, the term \u201ccommunication media\u201d includes wireless media such as acoustic, RF, infrared and other wireless media. The term \u201ccomputer-readable medium\u201d as used herein includes both computer storage media and communication media.","The computer  may also have input devices  such as a keyboard\/keypad, mouse, pen, voice input device, touch input device, etc. Output devices  such as a display , speakers, a printer, etc. may also be included. These devices are well known in the art and need not be described at length here.","In the description that follows, the invention will be described with reference to acts and symbolic representations of operations that are performed by one or more computing devices, unless indicated otherwise. As such, it will be understood that such acts and operations, which are at times referred to as being computer-executed, include the manipulation by the processing unit of the computer  of electrical signals representing data in a structured form. This manipulation transforms the data or maintains it at locations in the memory system of the computer , which reconfigures or otherwise alters the operation of the computer  in a manner well understood by those skilled in the art. The data structures where data is maintained are physical locations of the memory that have particular properties defined by the format of the data. However, while the invention is being described in the foregoing context, it is not meant to be limiting as those of skill in the art will appreciate that several of the acts and operation described hereinafter may also be implemented in hardware.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 3","b":["102","102","300","302","302","300","102","302","102"]},"The computer  also includes an enforcement module , which is associated with or is an integral part of the operating system . The function and features of the enforcement module  are described further below.","In accordance with one aspect of the present invention, a firewall aware application  may connect to the operating system  and\/or the enforcement module . In addition to direct connections, an application API  is provided for the firewall aware application  to call upon functions of the enforcement module , as further described below.","In accordance with another embodiment of the invention, a firewall unaware application  may also connect to the operating system  and\/or the enforcement module . In addition to direct connection to the operating system  and\/or the enforcement module , a socket API  is provided for the firewall unaware application  to call upon functions of the enforcement module , as is also further described below.","Firewall policy  is maintained on or is associated with the computer  and can be accessed by the operating system  and\/or the firewall code . In the embodiment shown, the firewall policy  is shown as a database, but the firewall policy  may be maintained in several databases or may be stored in another suitable manner.","An agent  may be provided for communicating with the Internet gateway device . In addition, the Internet gateway device  includes firewall software  (hereafter referred to as \u201cedge firewall 324\u201d), which may be implemented so as to protect the safe network  from remote computers  in a known manner. In addition, in accordance with one aspect of the present invention, a firewall API  is provided on the operating system  for access by the firewall code .","In accordance with one embodiment of the invention, a firewall aware application  may request explicit traversal of the firewall code  and\/or the edge firewall  via the application API . By \u201cexplicit,\u201d we mean that the traversal through the firewall code  and\/or the edge firewall  is specifically requested by the firewall aware application . As described in the Background section, for prior art network systems, firewalls used heuristics to guess at the intentions of an application. In contrast, for the present invention, application API  is provided so that the firewall aware application  (or a firewall aware service) may explicitly describe its requirements and communicate its requests to the firewall code  and\/or the edge firewall .","The firewall aware application  may request a variety of other services that may be enforceable by the firewall code  and\/or the edge firewall . As one example, the firewall aware application  may request a connection with a known endpoint or endpoints outside the safe network . The connection may be a single, one time connection or many instances of the same connection may be made. As another example, the firewall aware application  may request bandwidth or connection throttling for inbound and\/or outgoing connections. As yet another example, the firewall aware application  may request that the firewall limit connectivity scope to a subset of interfaces, local or remote addresses. As still another example, the firewall aware application  may request that only authenticated clients may connect to a specific port. In another example, the firewall aware application  may request that minimum or maximum bandwidth rules be enforced and\/or a timeout policy may be requested for specific clients, such as Transmission Control Protocol (\u201cTCP\u201d) clients. In addition, the firewall aware application  may request that specific protocol options (such as SACK) be turned on or off, with the objective being to reduce the attack surface. As one more example, the firewall aware application  may describe the property or properties of a flow that requires special handling, such as a connection with confidential data.","The firewall aware application  may communicate its request to the firewall code  and\/or the edge firewall  via the application API . The following is a specific example of a structure of a format that may be used for requesting direct communication with a remote computer, such as the remote computer , or node:",{"@attributes":{"id":"p-0043","num":"0042"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"struct sockaddr Target;"]},{"entry":[{},"... \/\/ initialize Target structure with endpoint"]},{"entry":[{},"information"]},{"entry":[{},"setsockopt( s, SOL_SOCKET, SO_REQUEST_ACCESS,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"&Target, sizeof(Target) );"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In the foregoing example, the request is directed to a particular socket. The socket option name is SOL_SOCKET, SO_REQUEST_ACCESS. The parameter description follows the terms \u201cstruct sockaddr Target\u201d; and includes a description of the remote endpoint, or specific remote computer . Other data structures may be used to communicate request by the firewall aware application .","If desired, the operating system  and\/or the enforcement module  may indicate to the firewall aware application  that the request is supported. As such, the operating system  and\/or the enforcement module  may return a value indicating that the request has been accepted and will be forwarded to the firewall, or that the operating system  does not implement this particular call. Alternatively, the operating system  and\/or the enforcement module  may return an indication that it is checking the status, and will let the firewall code  and\/or edge firewall  eventually make the decision.","The firewall aware application  may make its call to the application API  upon installation of the application, upon a request for a connection, or at another suitable time. The request may be made known to the firewall code  and\/or the edge firewall  at the time of the request to the application API , at a request for a connection, or at another time. In accordance with one embodiment of the invention, the request is made known to the firewall code  and\/or the edge firewall  upon the firewall aware application's  attempt to make a connection. That is, either the firewall aware application  attempts to send something through a firewall code  and\/or the edge firewall , or the firewall aware application  indicates that it is awaiting communication through one of the firewalls. To this end, the event may generate a callback, such as a generic socket event notification mechanism. The callback may be communicated to the enforcement module . An example of a format of such a callback is set forth below:",{"@attributes":{"id":"p-0047","num":"0046"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"void SocketActivityCallback("}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DWORD","dwProcessID,","\/\/ process causing socket event"]},{"entry":[{},"SOCKET","sock,","\/\/ socket handle"]},{"entry":[{},"SOCK_EVENT","event,","\/\/ socket event (e.g. bind)"]},{"entry":[{},"LPVOID","pDetails","\/\/ socket event parameters"]},{"entry":[{},"DWORD","cbDetails","\/\/ event parameter size"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":");"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"For the foregoing callback, the following parameters are present: dwProcessID, which is the ID of the process that initiated the event; sock, which is the handle of the socket for which the event was generated; event, which is the event ID, such as SOCKET_EVENT_BIND; pDetails, which is a pointer to the blob containing the event details, which is event-specific; and cbDetails, which is the event detail blob size. Other data structures or notification mechanisms may be used to inform the enforcement module  that the firewall aware application  is attempting to establish a connection. As an example of an alternative to callbacks, an input\/output (I\/O) call may be used.","The callback is invoked immediately after each socket event has occurred. In accordance with one embodiment of the invention, the enforcement module  reviews socket events as they happen and maintains the relevant socket state details to enable appropriate communications to the firewall code  and\/or the edge firewall .","The operating system  and\/or the enforcement module  utilizes the firewall API  to tell the firewall code  that a connection is requested by the firewall aware application . The notification may be as described above, and may additionally include application-specific information, such as application trust level, application identification, and so forth. The firewall code  compares the request with the firewall policy  and may permit or deny the request. An indication to the application may or may not be given.","In addition, in accordance with an embodiment of the present invention, the firewall code  notifies the edge firewall  that the connection is requested. This information may be transmitted to the edge firewall  via an authenticated protocol or via the agent . The edge firewall  may additionally check the request against its own policy (not shown, but known in the art). Assuming the request meets the policies of both the firewall code  and the edge firewall  the connection is permitted to pass through the firewalls.","Although described as having both the firewall code  and the edge firewall , the present invention may be implemented in a system having only one of these firewalls. For example, on a home network having only one computer , the only firewall available may be the firewall code .",{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 4","b":["306","108"]},"In step , the firewall aware application  creates a new socket. At step , the firewall aware application  binds the socket to receive a connection on a port N. At step , the firewall aware application  informs the operating system  and\/or the enforcement module  that it expects a connection from a specific address using the application API . This may be done, for example, using the format of the call described above. At step , the firewall aware application  binds the socket to receive the connection on a port N.","At step , the firewall aware application  invokes an accept API (not shown, but known in the art) and starts waiting for a connection. The firewall aware application  invoking the accept API results in a notification being sent, as described above. The operating system  now has full knowledge of the firewall aware application's  intent and connection endpoint, and at step  uses the firewall API  to tell the firewall code  that a single connection from a designated address is expected to arrive on local port N. The notification may also include application-specific information, such as application trust level, application identification, or other information.","At step , the firewall code  compares the request by the firewall aware application  with the firewall policy  and permits or denies the request. At step , the firewall code  notifies the edge firewall  that one connection with well-known properties is expected.","Assuming the request meets the policies of the firewall code  and the edge firewall  when the remote node initiates connection to the firewall aware application  on port N, the communication will be allowed. At step , the remote computer  establishes the connection.","After the firewall aware application  is done with the listening port N, the socket is closed at step . The operating system  may then perform the clean-up at step , for example notifying the firewall code , which in turn communicates with the edge firewall .","As can be understood from the foregoing, the application API  and a firewall API  provide mechanisms by which firewall aware application  may communicate a request to a host or edge firewall. The firewalls may then react accordingly, and if the request meets firewall policy  (and the firewall policy of the edge firewall, if relevant), may allow the connection. As such, the application API  and the firewall API  provide enhanced assistance for applications for traversal of firewalls, without requiring the writing of separate, application-specific codes for each type of connection.","For the embodiment just described, the enforcement module  operates as a component of the operating system , or is closely associated therewith, and handles the requests by the firewall aware application . If necessary, the enforcement module  may provide conversion between abstraction levels of the application API  and the firewall API . For example, the application API  may deal with sockets and connections, whereas the firewall API  may deal with ports and flows.","In accordance with another embodiment of the invention, the enforcement module  may additionally permit a user to create simple firewall policies or network access policies to either allow or deny applications or services traversal through a firewall. The functions of this aspect of the enforcement module  are described below. Although the enforcement module  described herein is capable of the functions already described and the further functions described below, separate modules may be provided for the separate functions. In addition, a computer such as the computer  may include a module having only one of these sets of functions or a portion of the sets of functions. However, for ease of description, the description herein assumes that the enforcement module  is capable of at least both sets of functions described.","For the purposes of this description, a portion of the enforcement module  that is configured to work with a firewall unaware application  will be referred to herein as an interception module  (). In general, the interception module  is configured to watch for connect and listen attempts by applications and services to a network stack  on a local computer, such as the computer . The interception module  traps these attempts and determines what user is making the attempt, determines what application or service is making the attempt, and does a firewall policy  look-up to determine whether the user and application\/service are allowed to connect to the network.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 5","b":["102","500","102","502","504","510"]},"Generally, each of the components shown in  exists in some form or another on existing computers, with the exception of the interception module . In accordance with one embodiment of the present invention, the interception module  is arranged so that it can receive and trap the attempts to connect or listen by applications and services. To this end, the interception module  may be located, for example, between the network stack  and a firewall unaware application , for example at the interface of the network stack . As described further below, the interception module  extracts the connection needs from the connect and\/or listen attempt, determines if the connection needs match the policy and, if so, instructs the firewall code  to create a lower level firewall filter to permit the connection.","In general, the connect and listen attempts include any attempt to connect to, or be connected to by, an endpoint. To this end, as used herein, \u201cconnect\u201d and\/or \u201clisten\u201d attempts include, inter alia, send requests, receive requests, join requests, and update requests.","Listen and\/or connect attempts by a computer  typically include parameters that will permit the interception module  to determine the application or services' needs. As an example, for both listen and connect attempts, a bind of a port is typically requested. The bind may be for a specific port or for a wildcard port if various ports may be utilized. A listen attempt will typically include the socket address at which the application or service wishes to receive a connection. In addition, an application ID and a user ID can be inferred from the context of the listen attempt. From this inferred information, the request for the particular socket may be evaluated against policy for the application and\/or user, and the connection may or may not be permitted based upon that policy.","If a connect request is made, that connect request would include similar information to the listen request, and may also include an endpoint address. Again, this information may be used and evaluated against the policy so as to determine whether or not the connection may be made.","A general policy for the computer  may be formed within the firewall policy , to either allow or deny particular applications and services on the computer  to connect to the network. This general policy may be manually established on the computer  upon setting a user's settings for the computer , may be established by a network administrator, or may be set to default settings upon establishing a user's profile. If desired, the policies may be on a per-user basis. These general policies may be, for example, \u201cdo not let any application connect to the unsafe network 110 unless the interception module  has different policy.\u201d The general policies may be stored separate from or with the policies maintained by the interception module .","In accordance with one embodiment of the invention, the policies within the interception module  (and stored in the policy cache , for example) may be created and stored as a result of a request by a user and\/or service\/application. This request may be made, for example, automatically or via user interface upon installing a service or application on the computer, upon the initiation of a connection, or at another suitable time. The request may simply include simple parameters of the desired connection, such as \u201callow application X to connect to the Internet one time\u201d or, as other nonlimiting examples, any of the requests described above with the description of the firewall aware application .","In accordance with one embodiment of the invention, the request by the user and\/or application does not require rules for ports, protocols, or IP addresses to enable an application or service to traverse the firewall code  and\/or the edge firewall . Instead, as described above, after a policy has been established, upon request of a connection by an application, the interception module  determines the needs of an application or service by evaluating the connect and listen attempts of the application or service.","A block diagram showing general components for the interception module  is shown in . The interception module  includes a logic engine  that performs most of the basic operations of the interception module  described herein. An interception interface client  is connected to the logic engine , and is configured to interact with the network stack  and trap the connect and\/or listen requests made by an application, such as the firewall unaware application . A configuration and policy API  is configured and arranged to communicate with the firewall policy  or an associated policy manager (not shown).","A local firewall client  is configured to communicate with the firewall code . A firewall traversal protocol client  is configured and arranged to communicate with the edge firewall .","In the example shown in , the interception module  includes an endpoint cache , a policy cache , and a filter cache . The endpoint cache  stores the operational state for the various endpoints (i.e., nodes) that the interception module  is currently managing. It is updated by the logic engine  based upon the inputs from the interception interface client . The policy cache  stores the policies that the interception module  is to enforce. Entries in the policy cache  may be associated with entries in the endpoint cache  (i.e., endpoints for which the given policy is being enforced). A single policy entry may be associated with multiple endpoints.","The interception interface client  handles the details of listen and\/or connect attempts, and interacting with the network stack , and calls into the logic engine  to inform the logic engine  of intercepted actions and to receive authorization decisions. The configuration and policy API  is an external interface into the interception module . Requests may be made to the configuration and policy API  and will be stored in the policy cache . The policies may be provided, for example, by an application upon installation or an attempt to connect, via the firewall policy , or may be supplied by a user, for example via the socket API  (). Other examples are given below. The local firewall client  is utilized to instruct the firewall code  to create the appropriate filters. Similarly, the firewall traversal protocol client  is utilized to instruct the edge firewall  to construct appropriate filters, and thus performs much of the same function as the agent .","The filter cache  includes entries for the filters that the logic engine  has created. Entries in the filter cache  may be associated with entries in the endpoint cache  (e.g., the endpoints for which the filter has been created). A single filter may be associated with multiple endpoints. Information that may be included in the filter cache  includes the details of the filter (e.g., 5-tuple, associated IPSec policy, etc.), the handle for the corresponding firewall filter that will be used, and\/or identifying information for the firewall traversal protocol client .","Turning now to operation of the interception module , prior to an application or service trying to establish a connection, a user and\/or the application or service establishes policy for the application or service via the configuration and policy API . The policy is stored in the policy cache . After policy is established, the interception interface client  watches for connect and listen attempts by applications and services to the network stack  on the computer . The interception interface client  traps these attempts and sends them to the logic engine . The logic engine  determines what user is making the attempt, determines what application or service is making the attempt, and stores that information in the endpoint cache . The logic engine  then accesses the policy cache  to determine whether the user and application or service are allowed to connect to the requested network.","If both the user and application or service are allowed to connect to the network, the appropriate firewall configuration, such as a lower level firewall filter, is created to allow the application or service to have unfettered network communication. The firewall configuration is stored in the filter cache . The local firewall client  and the network traversal protocol client  may use this filer information to instruct the firewall code  and the edge firewall  to permit the connection to be established.","In accordance with one embodiment of the invention, a notification client  is provided with the interception module . The notification client  is configured and arranged to communicate with a shell notification manager (not shown, but known in the art) or similar component so as to notify users of an event. For example, the notification client  may instruct the notification manager to notify a user that an application or service is attempting to access the Internet and that the operating system  is blocking this attempt, such as is shown by the user interface  in . In addition, the notification client  may instruct the notification manager to request the user's instructions regarding continuing to block or allow access, such as is permitted by the buttons  and  in . The notification client  may wait for and inform the logic engine  of the user's response to a query, if applicable.","If the user selects the button , permitting a connection, the selection of that button results in policy being established for that application (here, application X). If desired, the policy may permit only a one time connection, may permit connections in the future, or may permit connections within a time limit (e.g., within one day).",{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 8","b":["500","310","302","324","800","802","508","500","804","500","806","808"]},"Based upon this information, the interception module  determines that the user and application are allowed to connect to the network and automatically changes the firewall policy to allow listening on a local port and connection to the requested endpoint.","Because this user-specific policy is established only for the given user, a different user cannot access the network. For example, at step , second user runs application X, and at step  the interception module  does the necessary permission checks, similar to steps  and . At step , the interception module  determines that the second user is not allowed to run application X on the network and returns an error to the application, for example via the notification client .",{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 9","b":["302","324","900","102","902","312","104","904","906","102","104","102"]},"The interception module  on the computer  intercepts the connection attempt at step  and compares the subnet for the second computer against its own subnet. At step , the subnet check succeeds and the application on the second computer  connects to the service on the first computer .","The same policy established in step  may be used to reject a computer that is not from the local subnet, such as is shown in steps -. At step , a user on a remote computer  opens an application which attempts to connect to the service on the first computer . At step , the firewall code  on the first computer  intercepts the connection attempt and compares the subnet for the remote computer  against its own subnet. At step , the subnet check fails and the application on the remote computer  is not allowed to connect to the service on the first computer .","All references, including publications, patent applications, and patents, cited herein are hereby incorporated by reference to the same extent as if each reference were individually and specifically indicated to be incorporated by reference and were set forth in its entirety herein.","The use of the terms \u201ca\u201d and \u201can\u201d and \u201cthe\u201d and similar referents in the context of describing the invention (especially in the context of the following claims) are to be construed to cover both the singular and the plural, unless otherwise indicated herein or clearly contradicted by context. The terms \u201ccomprising,\u201d \u201chaving,\u201d \u201cincluding,\u201d and \u201ccontaining\u201d are to be construed as open-ended terms (i.e., meaning \u201cincluding, but not limited to,\u201d) unless otherwise noted. Recitation of ranges of values herein are merely intended to serve as a shorthand method of referring individually to each separate value falling within the range, unless otherwise indicated herein, and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples, or exemplary language (e.g., \u201csuch as\u201d) provided herein, is intended merely to better illuminate embodiments of the invention and does not pose a limitation on the scope of the invention unless otherwise claimed. No language in the specification should be construed as indicating any non-claimed element as essential to the practice of the invention.","Preferred embodiments of this invention are described herein, including the best mode known to the inventors for carrying out the invention. Variations of those preferred embodiments may become apparent to those of ordinary skill in the art upon reading the foregoing description. The inventors expect skilled artisans to employ such variations as appropriate, and the inventors intend for the invention to be practiced otherwise than as specifically described herein. Accordingly, this invention includes all modifications and equivalents of the subject matter recited in the claims appended hereto as permitted by applicable law. Moreover, any combination of the above-described elements in all possible variations thereof is encompassed by the invention unless otherwise indicated herein or otherwise clearly contradicted by context."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 5","FIG. 2"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 8","FIG. 5"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
