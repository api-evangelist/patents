---
title: Controlling application access to a network
abstract: A method of wireless communication includes intercepting a request from an application desiring use of communication resources. The intercepted request is held and is then evaluated to determine whether the held request can be released. The held request is released based on the outcome of the evaluation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08831658&OS=08831658&RS=08831658
owner: Qualcomm Incorporated
number: 08831658
owner_city: San Diego
owner_country: US
publication_date: 20111103
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DESCRIPTION"],"p":["This application claims the benefit under 35 U.S.C. \u00a7119(e) to U.S. Provisional Patent Application No. 61\/511,980 entitled \u201cConnectivity Management for Applications on a User Device Through a Randomized Delay,\u201d filed on Jul. 26, 2011, to U.S. Provisional Patent Application No. 61\/503,395 entitled \u201cControlling Application Access to a Network,\u201d filed on Jun. 30, 2011, to U.S. Provisional Patent Application No. 61\/454,457 entitled \u201cConnectivity Management for Applications on a User Device,\u201d filed on Mar. 18, 2011, to U.S. Provisional Patent Application No. 61\/410,858 entitled \u201cApparatus and Methods for Scheduling Communication Sessions,\u201d filed on Nov. 5, 2010, and to U.S. patent application Ser. No. 13\/288,928 entitled \u201cSYSTEMS AND METHODS FOR SYNCHRONIZATION OF APPLICATION COMMUNICATIONS,\u201d the disclosures of which are expressly incorporated by reference herein in their entireties.","This application is a continuation-in-part of U.S. patent application Ser. No. 13\/028,081 entitled \u201cMethods and Apparatus Providing Intelligent Radio Selection For Legacy and Non-Legacy Applications,\u201d filed on Feb. 15, 2011, the disclosure of which is expressly incorporated by reference herein in its entirety.","1. Field","The present application relates generally to the operation of wireless communication systems, and more particularly, to methods and apparatus for managing connectivity resources for applications on a user device.","2. Background","Applications (Apps) or device applets are now available that operate to provide a wide range of add-on services and features to wireless devices. For example, it is now possible for wireless devices to download and launch device applets to perform value added functions such as, shopping, searching, position location, driving navigation or an array of other functions. Network and application providers generally offer these device applets to device users for additional fees. Thus, the use of device applets increases the functionality and usability of wireless devices and offers device users features and convenience not originally available on the devices themselves.","Typically a wireless device interfaces with one or more communication networks using any of a plurality of radios. For example, the wireless device may include a variety of radios providing communications using cellular, WiFi, Bluetooth or other types of radio access technologies. Accordingly, applications executing on the wireless device are typically provided with a default routing that determine the radio and associated radio channel the applications will use to communicate with the appropriate network.","However, there is an increased interest in intelligently selecting the radio through which a given application communicates. This is due, in part, to an increase in the number of multi-radio devices (e.g. 3G\/WiFi devices) and an increase in network traffic that can create capacity problems for operators. Thus, with respect to such capacity problems, it would be desirable to offload traffic to alternative radios where such offloading is possible and does not significantly degrade application performance or where application performance actually may be improved based on intelligent radio selection.","Unfortunately, proposed solutions to affect radio selection may be inefficient, costly and may not be applicable to legacy applications. For example, one proposed solution would require all applications to be changed to explicitly indicate a preferred radio for use. This solution would be very inefficient and costly in that applications at each wireless device would need to be upgraded to specify a radio preference and would have to account for radio resources available at each device. Furthermore, such a solution may not be feasible with legacy applications where such upgrades are not possible.","Therefore, it would be desirable to have an efficient and cost effective mechanism that operates to provide intelligent radio selection for both legacy and non-legacy applications so that each application utilizes the most desirable radio available.","In one aspect, a method of wireless communication is disclosed. The method includes intercepting a request from an application desiring use of communication resources and holding the intercepted request. The method also includes evaluating whether the held request can be released, and then releasing the held request based on an outcome of the evaluation.","In another aspect, the time for evaluating and\/or the outcome of the evaluation may be functions of air link efficiency, network indications, location, context awareness, time of the day, present network load, past network load pattern, and\/or a randomized wait time.","Another aspect discloses wireless communication having a memory and at least one processor coupled to the memory. The processor(s) is configured to intercept a request from an application desiring use of communication resources. The processor(s) is also configured to hold the intercepted request and to evaluate whether the held request can be released. The processor(s) releases the request based on an outcome of the evaluation.","In another aspect, an apparatus includes means for intercepting a request from an application desiring use of communication resources. The apparatus also includes means for holding the intercepted request and means for evaluating whether the held request can be released. The apparatus also has means for releasing the held request based on an outcome of the evaluation.","Another aspect discloses a computer program product for wireless communications in a wireless network. The computer readable medium has program code recorded thereon which, when executed by the processor(s), causes the processor(s) to perform operations of intercepting a request from an application desiring use of communication resources and holding the intercepted request. The program code also causes the processor(s) to evaluate whether to the held request can be released. The program code also causes the processor(s) to release the held request based on an outcome of the evaluation.","This has outlined, rather broadly, the features and technical advantages of the present disclosure in order that the detailed description that follows may be better understood. Additional features and advantages of the disclosure will be described below. It should be appreciated by those skilled in the art that this disclosure may be readily utilized as a basis for modifying or designing other structures for carrying out the same purposes of the present disclosure. It should also be realized by those skilled in the art that such equivalent constructions do not depart from the teachings of the disclosure as set forth in the appended claims. The novel features, which are believed to be characteristic of the disclosure, both as to its organization and method of operation, together with further objects and advantages, will be better understood from the following description when considered in connection with the accompanying figures. It is to be expressly understood, however, that each of the figures is provided for the purpose of illustration and description only and is not intended as a definition of the limits of the present disclosure.","The following description describes implementations of an intelligent radio selection system that operates to provide intelligent radio selection for both legacy and non-legacy applications so that each application utilizes the most desirable radio available.","The techniques described herein may be used for various wireless communication networks such as code division multiple access (CDMA) networks, time division multiple access (TDMA) networks, frequency division multiple access (FDMA) networks, orthogonal FDMA (OFDMA) networks, single-carrier FDMA (SC-FDMA) networks, etc. The terms \u201cnetworks\u201d and \u201csystems\u201d are often used interchangeably. A CDMA network may implement a radio technology such as universal Terrestrial radio access (UTRA), CDMA2000, etc. UTRA includes Wideband-CDMA (W-CDMA) and low chip rate (LCR). CDMA2000 covers IS-2000, IS-95 and IS-856 standards. A TDMA network may implement a radio technology such as global system for mobile communications (GSM). An OFDMA network may implement a radio technology such as Evolved UTRA (E-UTRA), IEEE 802.11, IEEE 802.15, IEEE 802.16, IEEE 802.20, Flash-OFDM\u00ae, etc. UTRA, E-UTRA, and GSM are part of universal mobile telecommunication system (UMTS). Long term evolution (LTE) is an upcoming release of UMTS that uses E-UTRA. UTRA, E-UTRA, GSM, UMTS and LTE are described in documents from an organization named \u201c3rd generation partnership project\u201d (3GPP). CDMA2000 is described in documents from an organization named \u201c3rd generation partnership project 2\u201d (3GPP2). These various radio technologies and standards are known in the art.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 1","b":["100","100","102","104","102","104","106","102","108"]},"During operation, the device  executes applications which can interface with the network  using any of the plurality of radios. For example, an executing application issues a networking function call, such as a socket layer call, to request a network resource for communication with the network . Conventional systems typically process the socket layer call based on a default routing configuration to bind a pre-determined radio resource to the application.","However, in various implementations, the intelligent radio selection system operates to intercept the networking function call from the application and select the appropriate radio for use by the application. A binding process is then performed to bind the application to the network resource (i.e., the radio that has been selected). Since the intelligent radio selection system performs in response to the normal operations of the applications to use a radio resource, the system can operate with both legacy and non-legacy applications without any application changes or upgrades. A more detailed description of the intelligent radio selection system is provided below.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 2","b":["200","200","202","204","206","208","204","208","206","202"]},"During operation, the connectivity engine  intercepts networking function calls, such as socket layer calls, from an application at the application layer . Once the networking function calls are intercepted, the connectivity engine  operates to select an ideal radio\/interface from the plurality of candidate radios within radio unit . For example, the connectivity engine  selects the radio based on a variety of selection criteria. When a radio\/interface is selected, the connectivity engine  uses socket layer functions of the socket layer  to establish a connection between the application and the radio\/interface that has been selected. For example, the socket layer functions may include a connect function \u201cConnect( )\u201d, a bind function \u201cBind( )\u201d, a set socket option function \u201cSetsockopt( )\u201d, and\/or any other suitable socket layer functions.","Thus, the device architecture  provides for intelligent radio selection so that both legacy and non-legacy applications executing at a device can be bound to the most preferred radio\/interface.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 3","b":["300","300","302","304","312","306","310","308","314","300"]},"In one aspect, processor  comprises at least one of a CPU, processor, gate array, hardware logic, memory elements, and\/or hardware executing software. The processor  operates to control the operation of the device  so that applications executing at the device  can be bound to the most desirable radio. In one implementation, the processor  is configured to execute computer-readable instructions related to performing any of a plurality of functions. For example, the processor  operates to analyze information received or communicated from the device  to effectuate intelligent radio selection. In another aspect, the processor  operates to generate information that can be utilized by the memory , radio component , application layer component , socket layer component , and\/or connectivity engine component  to effectuate intelligent radio selection.","The radio component  comprises hardware and\/or a processor executing software that is configured to provide a plurality of radios\/interfaces that can be used to interface the device  with a plurality of external entities, such as external communication networks using a plurality of radio channels . For instance, radio component  provides radios\/interfaces to communicate using cellular, WiFi, Bluetooth, or any other technologies to communicate with communication networks using the radio channels .","The application layer component  comprises hardware and\/or a processor executing software that is configured to store and\/or execute one or more applications on the device . In one implementation, the application layer component  is configured to allow applications to initiate networking function calls to request networking services, such as requesting connection to a radio\/interface for the purpose of communicating with an external network or system.","The socket layer component  comprises hardware and\/or a processor executing software that is configured to perform socket layer functions. In one implementation, the socket layer functions comprise such functions as Connect( ), Bind( ), and Setsockopt( ). A Connect( ) function operates to establish a connection between an application and a particular radio\/interface. For example, the particular radio\/interface can be selected from the plurality of candidate radios provided by the radio component . In an aspect, socket layer component  is configured to perform a variety of socket layer functions or commands.","The connectivity engine component  comprises hardware and\/or a processor executing software that is configured to perform an assessment of system resources to select a particular radio for use by an application. In various implementations, the connectivity engine component  is configured as a centralized radio controller to select the particular radio based on one or more of the following selection criteria, such as, but not limited to user policy, operator policy, radio metrics, application requirements, network usability, vendor supplied metrics, and access point availability.","User policy may include the policy set by the device user regarding radio access by applications executing at the device. Operator policy may include the policy set by network operates regarding network access by devices or applications. Radio metrics may include the measurements of radio performance or other types of measurements that are used to select the most preferred radio for a particular application or operating environment. Application requirements may include the requirements associated with requesting applications, such as bandwidth requirements or latency\/performance requirements. Network usability may include the information regarding the availability of a particular network on a particular radio interface. Vendor supplied metrics may include information to translate from radio metrics such as Receive Signal Strength Indication and Packet Loss Rate to the throughput and latency available for a particular radio interface. Access point availability may include information specifying the unique identifier for access points congested by lots of traffic from other devices or those that can configure a radio link but do not forward packets to the network.","The memory  comprises RAM, ROM, EEPROM or any other type of memory device that operates to allow information to be stored and retrieved at the device . In one implementation, the memory  is configured to store computer-readable instructions executed by processor . Memory  may also be configured to store any of a plurality of other types of data including data generated by any of the processor , radio component , application layer component , socket layer component , and\/or connectivity engine component . Memory  can be configured in a number of different configurations, including as random access memory, battery-backed memory, hard disk, magnetic tape, etc. Various features can also be implemented upon memory , such as compression and automatic back up.","The memory  is configured to store a pre-load library  and a networking library . In one implementation, the networking library  comprises the POSIX or Berkeley sockets application programming interface (API) that includes functions for developing applications in the C programming language that perform inter-process communication, most commonly for communications across a computer network. For example, the POSIX API comprises functions, such as Connect( ), Bind( ), and Setsockopt( ).","The pre-load library  is used to intercept socket calls from applications at the application layer . For example, the pre-load library  comprises at least a subset of the API functions provided by the networking library , and is linked into the execution environment at a higher priority than the networking library .","During operation, the system configures the environment that a linker uses when the device first boots up. In one implementation, the linker operates to check the environment for libraries to load before starting normal library linking. Typically, the linker loads the networking library  that provides the networking API. Applications use that interface to create and connect sockets to establish network communications. For example, in one implementation, the linker scans an application and its dependencies so everything is loaded into memory. The linker is configured to load the pre-load library  before other libraries and populates the look-ups so libraries loaded subsequently are satisfied and can use the pre-load library .","The pre-load library  comprises at least a subset of the API sockets that the networking library  provides. When the application makes a networking function call to create or connect a socket, this call is processed (or intercepted) by the pre-load library . For example, the application provides a function pointer for the Connect( ) function with arguments or attributes, such as an IP Address, Destination, and File Descriptor that are provided to the Connect( ) function.","The pre-load library  then generates a request to a centralized radio control entity to choose the most appropriate network interface for the specified connection. For example, the pre-load library  sends the request to the connectivity engine component  to determine the appropriate radio to be used. After the appropriate radio is selected, calls to the networking library  sockets API are performed to complete the connection setup before control is returned to the pre-load library . For example, the connectivity engine component  operates to call functions of the networking library  to bind the radio that has been selected to the requesting application.","The connectivity engine component  is configured to intelligently select a radio from the plurality of candidate radios in various ways. For example, the connectivity engine component  may be configured to select a radio using one or more of the above selection criteria. Once a radio is selected, the connectivity engine component  binds the radio to the application. For example, in one implementation, binding is performed by calling into the original networking library . The runtime linker provides an expert interface where it is possible to specify specific library identifiers and function identifiers and store this information. Thus, functions at the connectivity engine component  and the pre-load library  can easily access functions, such as a Bind( ) function, in the networking library  to bind the radio that has been selected to the application. A more detailed description of the operation of the device  to provide intelligent radio selection is provided below.","In various implementations, the intelligent radio selection system comprises a computer program product having one or more program instructions (\u201cinstructions\u201d) or sets of \u201ccodes\u201d stored or embodied on a computer-readable medium. When the codes are executed by at least one processor, for instance, processor , their execution causes the processor  to control the device  to provide the functions of the intelligent interface selection system described herein. For example, the computer-readable medium comprises a floppy disk, CDROM, memory card, FLASH memory device, RAM, ROM, or any other type of memory device or computer-readable medium that interfaces to the device . In another aspect, the sets of codes may be downloaded into the device  from an external device or communication network resource. The sets of codes, when executed, operate to provide aspects of the intelligent interface selection system described herein.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 4","FIG. 3"],"b":["400","400","300","302","300"]},"At block , an application is launched. The application may be a legacy or non-legacy application that is part of the application layer component . For example, the application may be a network browser that generates a networking function call to connect to a wireless network using a radio available at the radio component .","At block , a pre-load library is configured and loaded. For example, the pre-load library  comprises a subset of the networking functions that are provided in the networking library  typically used by applications to assess communication networks. The networking functions in the pre-load library  are configured to intercept networking function calls from applications executing at a device. For example, the pre-load library  comprises POSIX socket functions that can be used to intercept socket calls by applications executing at the device . In one implementation, the pre-load library  in stored in memory .","In one implementation, the pre-load library  functions are configured to receive arguments passed from calling applications and use these arguments to generate a request to the connectivity engine component  to select the radio best suited for the application's purpose.","At block , the pre-load library is linked into the execution environment. For example, the processor  links the pre-load library  into the execution environment at a higher priority than the networking library . Thus, networking functions calls by applications will be intercepted and processed by functions in the pre-load library  and not processed by similar functions in the networking library .","At block , a networking function call from the application is intercepted. For example, the networking function call may be a POSIX socket function call, such as the Connect( ) function. The application generates the networking function call to connect to a radio to allow communication with external networks. Due to the linking of the pre-load library  into the execution environment at a higher priority than the networking library , the networking function call is intercepted (or processed) by the functions in the pre-load library .","At block , the called function in the pre-load library  generates a selection request to the connectivity engine component  to select the appropriate radio for use by the application. The request includes any information that is part of the selection criteria used by the connectivity engine component  to select the appropriate radio for use by the application.","At block , selection criteria are assessed. In one implementation, the connectivity engine component  operates to assess the selection criteria described above. For example, the connectivity engine  communicates with the radio component  to assess radio metrics that are part of the selection criteria.","At block , a radio is selected based on the assessment of the selection criteria. For example, the connectivity engine component  operates to select the radio that best matches the selection criteria.","At block , the radio that has been selected is bound to the application. For example, in one implementation, the connectivity engine component  calls a Bind( ) function of the networking library  to bind the radio that has been selected to the application. For example, the connectivity engine component  is aware of the networking library  and how to access its functions directly without being intercepted by the pre-load library .","At block , the application then utilizes the radio that has been selected for network communications.","In an optional operation, the method proceeds to block  where the connectivity engine component  operates to perform periodic assessment of the selection criteria to determine if the current radio best matches the selection criteria. If it is determined after another assessment of the selection criteria that a radio other than the current radio best matches the selection criteria, then the connectivity engine  can destroy the connection as a means to trigger the application into restarting the connection to select a different radio for the new connection. Thus, the optional operation allows the selection criteria to be periodically assessed to assure that the most appropriate radio is selected to conduct the desired communication.","Therefore, the method  provides intelligent radio selection for use with legacy and non-legacy applications. It should be noted that the method  is just one implementation and that the operations of the method  may be rearranged or otherwise modified such that other implementations are possible.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":["FIG. 5","FIG. 1"],"b":["500","500","102","500"]},"The apparatus  comprises a first module comprising means () for intercepting a networking function call from an application desiring radio access, which in an aspect comprises the pre-load library .","The apparatus  also comprises a second module comprising means () for selecting a radio from a plurality of candidate radios based on selection criteria, which in an aspect comprises the connectivity engine module .","The apparatus  also comprises a third module comprising means () for binding the radio to the application, which in an aspect comprises the connectivity engine module .","In addition to intelligent interface selection, the system operates to provide flow mobility as described below.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 6","b":["600","600","602","604","606","606"]},"During operation, an application at the device  generates a connection request to communicate with a network resource. As discussed above, the system  performs an intelligent interface selection to satisfy the request. To provide aspects of flow mobility, the system operate to dynamically generate a flow binding rule that specifies a particular communication interface selected from the interfaces  to encapsulate packets for routing between a home agent  and the device .","In conventional systems, the IP flow binding is usually described in a 5-tuple comprising a source IP address, destination IP address, source port, destination port, and protocol. Thus, this description is provided by the handset  to the home agent  and packets matching this description will be routed accordingly by the home agent . Unfortunately, registering flows using the 5-tuple may not be bandwidth efficient since all the elements of the 5-tuple are transmitted even though the only tuple that changes may be the source port.","In various implementations, the system operates to dynamically generate a flow binding rule when a connection is started so that a data flow can be transmitted over the most appropriate radio\/interface. For example, in one implementation, the system allocates an ephemeral port to be used by the application for network communications. The system  then dynamically generates a flow binding rule based only on the ephemeral port which indicates that a particular data flow is to be associated with the ephemeral port and be transmitted on a particular radio\/interface. By utilizing only the ephemeral port in the binding rule it is not necessary to transmit the entire 5-tuple to the home agent, which is more efficient than conventional systems since it saves transmission bandwidth.","In another implementation, an IPv6 address is dynamically generated for the connection. For example, a per connection IPv6 address belonging to the mobile node prefix is generated and assigned to the mobile IP address. Next, a flow binding rule based only on the per connection IPv6 address is dynamically generated.","In either of the above cases, the binding rule is then signaled to a home agent (HA)  on the network . The HA  operates to route packets to the device according to the binding rule. For example, data packets sent from a correspondent node (CN)  to the device are received at the HA  and then routed to the device  using the binding rule. The following methods describe aspects of flow mobility provided by the intelligent selection system.",{"@attributes":{"id":"p-0079","num":"0078"},"figref":["FIG. 7","FIG. 3","FIG. 6"],"b":["700","700","300","600","302","300"]},"At block , a socket is created by an application. For example, an application executing at the device  creates a socket to receive a data flow from a network resource that is part of the network .","At block , a networking function call from the application is intercepted. For example, the networking function call may be a POSIX socket function call, such as the Connect( ) function. The application generates the networking function call to connect to a radio to allow communication with external networks. Due to the linking of the pre-load library  into the execution environment at a higher priority than the networking library , the networking function call is intercepted (or processed) by the functions in the pre-load library .","At block , intelligent interface selection is performed to satisfy the networking function call. For example, blocks  to  of the method  are performed to select a radio\/interface for use by the application. Thus, one of the interfaces  provided by the device  is selected for use by the application.","At block , an ephemeral local port is allocated. In one implementation, the connectivity engine  operates to allocate an ephemeral local port to the application. For example, an ephemeral (i.e., short-lived) port is a transport protocol port for IP communications that is selected from a pre-defined range. The allocation is temporary and only valid for the duration of the communication session. After completion of the communication session the port becomes available for reuse.","At block , a flow binding rule is dynamically generated based only on the ephemeral port. In one implementation, the connectivity engine  operates to dynamically generate the binding rule based only on the allocated ephemeral local port.","At block , the flow binding rule is signaled to a home agent associated with the device. For example, the connectivity engine  operates to transmit the flow binding rule to the home agent . The home agent  then uses the flow binding rule to route flows the device  using the appropriate radio\/interface.","Therefore, the method  provides flow mobility in an intelligent radio selection system. It should be noted that the method  is just one implementation and that the operations of the method  may be rearranged or otherwise modified such that other implementations are possible.",{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 8","FIG. 3","FIG. 6"],"b":["800","800","300","600","302","300"]},"At block , a socket is created by an application. For example, an application executing at the device  creates a socket to receive a data flow from a network resource that is part of the network .","At block , a networking function call from the application is intercepted. For example, the networking function call may be a POSIX socket function call, such as the Connect( ) function. The application generates the networking function call to connect to a radio to allow communication with external networks. Due to the linking of the pre-load library  into the execution environment at a higher priority than the networking library , the networking function call is intercepted (or processed) by the functions in the pre-load library .","At block , intelligent interface selection is performed to satisfy the networking function call. For example, blocks  to  of the method  are performed to select a radio\/interface for use by the application. Thus, one of the interfaces  provided by the device  are selected.","At block , a per connection IPv6 address belonging to the mobile node prefix is generated. For example, the per connection IPv6 address is generated by the connectivity engine .","At block , the per connection IPv6 address is assigned to the mobile IP address. For example, the assignment is performed by the connectivity engine .","At block , a flow binding rule is dynamically generated based only on the per connection IPv6 address. In one implementation, the connectivity engine  operates to dynamically generate the binding rule based only on the per connection IPv6 address. This achieves efficient bandwidth utilization since other parameters, such as port or destination address are not necessary and would consume processing resources of the home agent.","At block , the flow binding rule is signaled to a home agent associated with the device. For example, the connectivity engine  operates to transmit the flow binding rule to the home agent . The home agent  then uses the flow binding rule to route flows the device  using the appropriate radio\/interface.","Therefore, the method  provides flow mobility in an intelligent radio selection system. It should be noted that the method  is just one implementation and that the operations of the method  may be rearranged or otherwise modified such that other implementations are possible.","In user devices such as smartphones, personal digital assistants, etc., software applications may continue to operate even though the user is not actively using the device. Applications such as social networking applications, email or other communication applications, data feeds, etc. (popular examples include Facebook, Gmail, Market, Twitter, etc.) may continue to send and receive data even though a user is not using the device.",{"@attributes":{"id":"p-0097","num":"0096"},"figref":"FIG. 9","b":"208"},"Such applications may trigger frequent transitions by the user device from idle mode to connected mode, or they may otherwise interfere with the user device entering idle mode or other alternate connection modes such as discontinuous reception (DRX). Such elevate levels of radio activity by the applications when the user is not actively engaging the device may result in premature drain of battery life, undesired increased on the load of radio networks, or other undesired effects.","Employing the techniques and structures disclosed herein, a device may employ a layer (for illustrative purposes, called a wrapper) which provides an application program interface (API) to capture data from background applications and hold them until a desired point where radio resources may be activated and the application data transferred and tasks executed in a synchronized manner. By aggregating such tasks\/data requests, frequent waking of the user device may be reduced and other communication resources conserved during periods where the user is not actively engaging with the device.",{"@attributes":{"id":"p-0100","num":"0099"},"figref":["FIG. 10","FIG. 10"],"b":["1050","1060","1002","1008","1006","1008","1010","208","1004","1002","1006","1004","1002","1006","208","1004"]},"The wrapper  may be invisible to the applications  such that they are unaware that their data\/requests are being held\/aggregated. The wrapper  may be a separate component or may be incorporated into another component such as the application connection engine .","An example of such aggregation is shown in . Applications  through  each make a request for use of a radio resource. Such socket calls may be captured and held by the wrapper . At a determined time, the wrapper  will release the socket calls in an aggregated manner. In one aspect, the wrapper  evaluates whether to release the calls. The release is based on the outcome of the evaluation by the wrapper . Both the time for evaluating and the outcome of the evaluation may be a function of various parameters, such as, but not limited to, air link efficiency, network indications, location, context awareness, time of the day, present network load, and past network load pattern.","In another aspect, shown in , a connection engine API (application program interface) to the applications may indicate their background activity\/requirements for operation where certain applications may only be tolerant of certain delays (e.g., X seconds, Y seconds, etc.). The wrapper may provide a callback function to indicate to such applications that it is time to connect (e.g., API.Go). After receiving such a callback the applications may communicate as desired. Alternatively, the applications via the API may provide deadlines and the wrapper may transparently delay the connection while respecting the deadlines, and allowing the applications to connect prior to any deadlines.","In yet another aspect, the API may allow also an application to register that it needs immediate access (e.g., kid tracking, emergency notification, etc.). In general the wrapper can learn or read a database that indicates which process names are\/are not delay-tolerant.","In still another aspect, operator policies allow control of the wrapper behavior based on a subscription. For example, a gold period is one minute, a pre-pay period is one hour, etc.","Aggregation and delay of applications may be done selectively, i.e., implemented such that a user may not be disrupted. A variety of factors may be employed to determine when to delay\/aggregate applications' use of communication resources. For example, delay may be implemented based on certain characteristics of the user device such as the screen is off, or the audio output is off, etc. Delay may only be implemented for applications known to be able to handle such delays. Delay may be implemented when the radio is not loaded, when the user device\/phone is not otherwise in use (no phone calls, audio streaming, etc.). Or delay may be implemented utilizing a combination of the factors above or other factors.","When applications installed on a number of user devices request access to a network at the same time (or within a short time period), the network may be overloaded by a peak network signaling associated with the setup of data connections. For example, automatic broadcast notifications programmed to occur at a fixed time of day (e.g., software updates, periodic updates of dynamic content, etc.) may cause a number of applications executing on a number of different user devices to request a data connection with the network. In one configuration, to prevent such synchronization, the time delay after which the held request is released may be computed based on a random number. In one configuration, the architecture may include a randomization timer that may be initiated when a request is intercepted. The timer may determine the random period of time to hold the request. When the random period of time has expired, the request may be released to the intended recipient. For example, the request may be released upon the expiration of the randomization timer. The random delay serves to desynchronize network signaling and data connection setup procedures across a number of user devices.","In one aspect, radio awareness may assist in reducing the number of application connections, which may ease the signaling load and\/or save user device battery life. In another aspect, a variety of factors may be employed to both determine the time for evaluating whether the held request can be released and to determine the evaluation decision. In particular, various parameters representing air link efficiency, network indications, location, context awareness, time of the day, present network load, and past network load pattern, may be utilized to determine the time for evaluating and the evaluation decision.","The time for evaluating and the evaluation decision (or outcome) can both be functions of the time of the day. For example, the time for evaluating can be longer and the evaluation decision can favor not releasing the held request at certain times of the day when it is understood that the network is expected to be heavily loaded.","The time for evaluating and the evaluation decision can both be functions of the past network usage pattern over time. The past network usage patterns can be made available at the wrapper  through, for example, download through the network, off-network download, etc.","According to an aspect of the present disclosure, the gate to the uplink is opened or closed based on network load. Network load may refer to the overall load of the radio system (control plane plus data plane), or the specific load of the control plane or user plane only. When the network load is lower, the gate is opened. When the network load is higher, the gate is closed. In one example, the network load is estimated by observing the load on the random access channel (RACH), and in particular by observing the RACH response. The RACH is available on most cellular networks and may be used to transport signaling messages. The RACH may be used by a terminal to transition from idle mode to active mode. The RACH may also be used to resynchronize while the terminal is in active mode. Generally, the load on the RACH correlates with the signaling load, because the RACH is the channel that carries radio resource control (RRC) controls during connection setup. For example in the LTE system, the RACH response is broadcast, and allows client A to see the responses for clients B, C, D, etc. In other words, even though a particular device is not accessing the random access channel, the same device may observe whether other devices are accessing the network via the RACH at the current time. As the channel is typically used for signaling, by observing the load on this channel (i.e., RACH), the user device may determine whether a heavy load exists due to signaling.","In one aspect, the wrapper  periodically monitors the load on the RACH response channel and opens the gate when the overall load is low compared to a predetermined value, such as determined average load value. In one example, monitoring the RACH response channel allows the user device  of  to perform time-tolerant connections to the network  during periods of network low usage. Or in other words, multiple connections may be allowed into a period of low usage in the network . Random backoff may be used to distribute load if multiple user devices  employ a wrapper  to monitor network load. For example, if multiple user devices  are waiting to access a network , then once a period of low usage is present, the devices  would be allowed staggered access to the network  in order to prevent a load burst. That is, a first user device will access the network at time , a second user device will access the network at time  (later than time ), etc. In another aspect the load is inferred from metrics such as the carrier to noise ratio (Ec\/N0), the received signal code power (RSCP), the terminal transmit power or the base station's Rise over Thermal (RoT).","In another aspect, application connectivity to the network is based upon air link efficiency. In particular, the air link capacity may be increased or maximized by allowing connectivity to the network when channel conditions are good or optimal. For example, the signal to noise ratio (SNR) may be monitored and access to the network not allowed when the SNR is below a predetermined threshold. In another example, air link efficiency may be increased or maximized by allowing connectivity based on the radio access technology (RAT) the user device is currently using. In particular, the gate is opened (e.g., network access is allowed) if a known fast RAT is employed. For example in a 3GPP type of deployment, the user device may support GSM, GPRS edge, HSPA and LTE. A trigger may be established that does not allow the gate to open unless the RAT is HSPA or LTE. This provides for only fast RAT connections, which would likely reduce or minimize loss during connectivity.","In yet another example of allowing connectivity based on air link efficiency, re-selection status may be observed. Reselection is when the user device switches autonomously from one serving node to a different serving node. In one example, application connectivity (i.e., opening of the gate) is not allowed if any signs are present that indicate reselection is about to occur. In particular, the reselection r (or any potential reselection) finishes before connectivity to the network is allowed. Optionally, in another example, early reselection may be forced. In another example, the wrapper  may trigger additional radio measurements, such as intra-frequency measurements and\/or inter-frequency measurements, in order to facilitate a reselection before the wrapper  opens the gate to allow for connection to the network . The measurements may provide the serving cell with information to determine whether a handover could better carry the traffic.","In another aspect, the wrapper  may monitor and track the load and then release the connection requests and allow for connections to the network when the load is low, (as compared to a known average load value) or when the load is lower than a known peak load value. As discussed above, the network load can be inferred and monitored by observing the RACH. Additionally, the network load may be inferred, and thus monitored, by other means, such as, but not limited to, downlink traffic to pilot ratio or other radio quantities, indication from the radio access network, and the number of effective users. For example, in an EVDO-advanced network, the base station may provide an indication to the user regarding the load in a unicast and\/or broadcast signal.","In another aspect, connectivity may be allowed based on coexistence of the radio. For example, LTE and Bluetooth may interfere based on the carrier frequency of LTE. Additionally, LTE and WLAN may also interfere. In a particular example, if a user device is using Bluetooth or WLAN (and there is actual interference or expected interference) then the LTE gate remains closed and no connection to the network by the requesting application is allowed until the interfering radio is no longer used. In another example, the wrapper  receives information from a coexistence manager when coexistence issues are present. In this example, the wrapper  does not allow application connectivity to the network when coexistence issues are present.","In another aspect, application connectivity to the network  is based on a network indication received by the wrapper . The indication can be an over the air indication used by the wrapper  to determine when the connections to the network are allowed. In one example, the network may broadcast an indication when it is a good time for sending background traffic. In particular, the network carrier may have a limit on the number of connections for each minute, and the network may broadcast the number of available connections for each minute or the network may indicate an access probability factor that applies when applications request network connectivity while the device is in standby. In one configuration, the access is allowed if a random number generated is less than the access probability factor. The wrapper  receives the broadcast and determines whether it can open the gate and allow a network connection to the application(s). In one example, a \u201cgo\u201d bit is received by the wrapper  and triggers the wrapper  to open the gate and permit the requesting applications to access the network . The indication can be based on a cell, or a remote network controller region, depending on whether the base station or radio network controller (RNC) is the bottleneck. The \u201cgo\u201d bit may be applicable to a single user, or to all users within a group of users, such as a paging group.","Application connectivity is decided based on the type of radio access network, such as for instance GPRS, EDGE, UMTS, HSPA, cdma 1x, EV-DO, LTE, Wi-Fi, Wi-Max, etc. The wrapper may be configured with information relative to each radio access type, for instance to avoid releasing connections on slower networks, e.g., (GPRS) or networks where the signaling is less efficient, e.g., (UMTS). Conversely the wrapper may release the connection when network offers cheap connectivity, such as WLAN.","The wrapper may use information from the modem, in particular about idle mode or connected mode mobility if the terminal is about to, or in the process of connecting to another serving cell. The wrapper may allow the re-selection, or handover process, to complete before releasing traffic. This may ensure the traffic is released while the radio connection is most suitable to transport this traffic. For instance if a re-selection from UMTS to LTE is happening, the wrapper may wait until the terminal is camped on LTE to initiate the connection.","The wrapper may command the modem to perform operations in order to speed up or optimize an upcoming radio connection. For instance while the modem camps on a given radio access technology (RAT) on a given frequency that may be suitable for camping, but not ideal for carrying a data connection, the wrapper indicates to the modem to perform an inter-frequency search for available RATs. The modem may also initiate a re-selection to a better RAT\/frequency in order to prepare for the wrapper opening the gate. Such procedure facilitates carrying the traffic on a more suitable carrier\/RAT without the network initiating a handover in connected mode.","In another aspect, application connectivity to the network  is based upon a prediction of available network resources. In one aspect, the wrapper  is location\/context aware by receiving inputs such as, but not limited to, the time of day, motion state, fingerprint of cellular base station identities (example, device receives pilots from cells x, y and z and the received power is about \u221280, \u221265, \u2212120 dBm), geo-location, list of known access points and locations. The geo location may be provided by a satellite system, such as GPS, or based on a fingerprint of cellular network cell ID, or based on presence of wireless local area network access points. The wrapper uses the location\/context awareness to predict when another RAT will become available. In another aspect, the wrapper  learns what times during the day there will be abundant access to the network and its resources. The wrapper uses the abundance information to determine when to open the gate and allow applications to connect to the network. For example, the user device may predict the user is headed home where a WLAN connection is available. In this case, the wrapper  prevents communications to the network for delay tolerant applications until the user arrives home and the faster network becomes available.","In one aspect, a method  for controlling application access in wireless communication in a user device is illustrated in . At block,  a request is intercepted from an application desiring use of communication resources. The request is held at block . At block , it is evaluated whether the held request can be released. At block , the request is released based on an outcome of the evaluation.","Although the preceding description was with respect to an API, the concepts equally apply in hardware, firm ware, or any combination of hardware and software.","Those of skill in the art would understand that information and signals may be represented using any of a variety of different technologies and techniques. For example, data, instructions, commands, information, signals, bits, symbols, and chips that may be referenced throughout the above description may be represented by voltages, currents, electromagnetic waves, magnetic fields or particles, optical fields or particles, or any combination thereof.","Those of skill would further appreciate that the various illustrative logical blocks, modules, circuits, and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware, computer software, or combinations of both. To clearly illustrate this interchangeability of hardware and software, various illustrative components, blocks, modules, circuits, and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application, but such implementation decisions should not be interpreted as causing a departure from the scope of the exemplary embodiments of the invention.","The various illustrative logical blocks, modules, and circuits described in connection with the embodiments disclosed herein may be implemented or performed with a general purpose processor, a Digital Signal Processor (DSP), an Application Specific Integrated Circuit (ASIC), a Field Programmable Gate Array (FPGA) or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor, but in the alternative, the processor may be any conventional processor, controller, microcontroller, or state machine. A processor may also be implemented as a combination of computing devices, e.g., a combination of a DSP and a microprocessor, a plurality of microprocessors, one or more microprocessors in conjunction with a DSP core, or any other such configuration.","The steps of a method or algorithm described in connection with the embodiments disclosed herein may be embodied directly in hardware, in a software module executed by a processor, or in a combination of the two. A software module may reside in Random Access Memory (RAM), flash memory, Read Only Memory (ROM), Electrically Programmable ROM (EPROM), Electrically Erasable Programmable ROM (EEPROM), registers, hard disk, a removable disk, a CD-ROM, or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from, and write information to, the storage medium. In the alternative, the storage medium may be integral to the processor. The processor and the storage medium may reside in an ASIC. The ASIC may reside in a user terminal. In the alternative, the processor and the storage medium may reside as discrete components in a user terminal.","In one or more exemplary embodiments, the functions described may be implemented in hardware, software, firmware, or any combination thereof. If implemented in software, the functions may be stored on or transmitted over as one or more instructions or code on a computer-readable medium. Computer-readable media includes both computer storage media and communication media including any medium that facilitates transfer of a computer program from one place to another. A storage media may be any available media that can be accessed by a computer. By way of example, and not limitation, such computer-readable media can comprise RAM, ROM, EEPROM, CD-ROM or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a computer. Also, any connection is properly termed a computer-readable medium. For example, if the software is transmitted from a website, server, or other remote source using a coaxial cable, fiber optic cable, twisted pair, digital subscriber line (DSL), or wireless technologies such as infrared, radio, and microwave, then the coaxial cable, fiber optic cable, twisted pair, DSL, or wireless technologies such as infrared, radio, and microwave are included in the definition of medium. Disk and disc, as used herein, includes compact disc (CD), laser disc, optical disc, digital versatile disc (DVD), floppy disk and blu-ray disc where disks usually reproduce data magnetically, while discs reproduce data optically with lasers. Combinations of the above should also be included within the scope of computer-readable media.","The previous description of the disclosed exemplary embodiments is provided to enable any person skilled in the art to make or use the invention. Various modifications to these exemplary embodiments will be readily apparent to those skilled in the art, and the generic principles defined herein may be applied to other embodiments without departing from the spirit or scope of the invention. Thus, the invention is not intended to be limited to the exemplary embodiments shown herein but is to be accorded the widest scope consistent with the principles and novel features disclosed herein."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing aspects described herein will become more readily apparent by reference to the following description when taken in conjunction with the accompanying drawings wherein:",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 13"}]},"DETDESC":[{},{}]}
