---
title: Metadata driven flexible user interface for business applications
abstract: Business application adaptation to changes in business processes is enabled through real time modification of business application schema and metadata at runtime employing business rules to accommodate changing business processes without a need to change the underlying data and models. A business application user interface reacts to runtime changes and enforces validation and business rules as if the changes are made to the underlying structure.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08892585&OS=08892585&RS=08892585
owner: Microsoft Corporation
number: 08892585
owner_city: Redmond
owner_country: US
publication_date: 20110705
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Hosted or locally installed business applications create, monitor, and otherwise process requests, orders, quotations, and comparable business operations. Many business applications also integrate operational aspects such as manufacturing, inventory, planning, and purchasing operations, sometimes enabling interaction between suppliers and consumers of goods and services.","Business applications can be complex programs integrating a variety of modules for different tasks. In some cases, different portions of a business application may be developed by different parties including users. In other cases, such applications may be executed on one or more servers and accessed through dedicated or generic client applications (e.g., browsers). In a typical business application, the infrastructure is defined by metadata that determines how computations are to be performed, data is to be processed and presented. Business applications usually employ business rules that are defined at design time and implemented at runtime.","When a business process changes, often different business rules need to be applied and demanding a change in the schema of the data storage, as well as a resulting change in the user interface. This is done at design phase in conventional applications forcing the application to be reset or restarted. Thus, changes in business processes may become disruptive to the performance of a business application and degrade user experience.","This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to exclusively identify key features or essential features of the claimed subject matter, nor is it intended as an aid in determining the scope of the claimed subject matter.","Embodiments are directed to real time modification of business application schema and metadata at runtime through business rules to accommodate changing business processes without a need to change the underlying data and models. A business application user interface according to embodiments may react to runtime changes and enforce validation and business rules as if the changes are made to the underlying structure.","These and other features and advantages will be apparent from a reading of the following detailed description and a review of the associated drawings. It is to be understood that both the foregoing general description and the following detailed description are explanatory and do not restrict aspects as claimed.","As briefly described above business applications may adapt to changes in business processes through real time modification of business application schema and metadata at runtime employing business rules to accommodate changing business processes without a need to change the underlying data and models. In the following detailed description, references are made to the accompanying drawings that form a part hereof, and in which are shown by way of illustrations specific embodiments or examples. These aspects may be combined, other aspects may be utilized, and structural changes may be made without departing from the spirit or scope of the present disclosure. The following detailed description is therefore not to be taken in a limiting sense, and the scope of the present invention is defined by the appended claims and their equivalents.","In the following detailed description, references are made to the accompanying drawings that form a part hereof, and in which are shown by way of illustrations specific embodiments or examples. These aspects may be combined, other aspects may be utilized, and structural changes may be made without departing from the spirit or scope of the present disclosure. The following detailed description is therefore not to be taken in a limiting sense, and the scope of the present invention is defined by the appended claims and their equivalents.","While the embodiments will be described in the general context of program modules that execute in conjunction with an application program that runs on an operating system on a computing device, those skilled in the art will recognize that aspects may also be implemented in combination with other program modules.","Generally, program modules include routines, programs, components, data structures, and other types of structures that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that embodiments may be practiced with other computer system configurations, including hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, minicomputers, mainframe computers, and comparable computing devices. Embodiments may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","Embodiments may be implemented as a computer-implemented process (method), a computing system, or as an article of manufacture, such as a computer program product or computer readable media. The computer program product may be a computer storage medium readable by a computer system and encoding a computer program that comprises instructions for causing a computer or computing system to perform example process(es). The computer-readable storage medium is a non-transitory computer-readable memory device. The computer-readable storage medium can for example be implemented via one or more of a volatile computer memory, a non-volatile memory, a hard drive, a flash drive, a floppy disk, or a compact disk, and comparable media.","Throughout this specification, the term \u201cplatform\u201d may be a combination of software and hardware components for providing business applications and\/or similar business services. Examples of platforms include, but are not limited to, a hosted service executed over a plurality of servers, an application executed on a single computing device, and comparable systems. The term \u201cserver\u201d generally refers to a computing device executing one or more software programs typically in a networked environment. However, a server may also be implemented as a virtual server (software programs) executed on one or more computing devices viewed as a server on the network. More detail on these technologies and example operations is provided below.","Referring to , diagram  illustrates a networked environment, where a business application according to some embodiments may adapt to changes in business processes by modifying schema and metadata at runtime. The computing devices and computing environments shown in diagram  are for illustration purposes. Embodiments may be implemented in various local, networked, and similar computing environments employing a variety of computing devices and systems.","In an example environment illustrated in diagram , a client application  (e.g. a browser) executed on client device  may display a user interface (UI) to access a business application  executed on server . Business application  may provide services such as creating, monitoring, and otherwise processing requests, orders, quotations, and comparable business operations. Business application  may be associated with different aspects of business processes such as manufacturing, inventory, planning, and purchasing operations enabling interaction between suppliers and consumers of goods and services. In providing those services, business application  may interact with one or more data sources , some or all of which may be managed by server . Client application , business application  and data source(s)  may communicate over one or more networks such as network(s) , which may be secure or insecure, enterprise, public, wired, wireless, etc.","In a system according to embodiments, schema and metadata of the business application may be modified through business rules in response to business process changes without changing the underlying data and models. The user interface provided to a user through client application  may then respond to changes in schema metadata and\/or data to refresh and render by rewiring the bindings. To notify the user interface about the changes, an Application Programming Interface (API) may dynamically define or modify schema\/metadata related to data sources (e.g., tables, queries, objects, etc.), their relationships, and\/or attributes without persisting the changes back to a data store. Thus, runtime metadata instances may be created and\/or modified with a defined set of events that enable updating of the user interface at runtime as opposed to design time updates and restarting of the business application instances, which may result in disruption.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2","b":"200"},"As shown in diagram , a detection layer , for example an API, may dynamically define or modify schema\/metadata related to data sources , their relationships, and attributes without persisting the changes back to the data store. In one example scenario, a form may be presented to a user for a business transaction (e.g., sales order, inventory analysis, invoice, and comparable ones). The form may include specific attributes such as fields, formatting, etc. depending on user attributes, data source, process, and the like. For example, specific fields may be displayed employing certain formats if the transaction is associated with a particular customer, source, or country.","Binding layer  may notify user interface layer  about the changes in the schema\/metadata and enable addition\/removal\/modification of metadata bindings such that the user interface layer  can refresh itself and present the data through client application  with changes made based on the detected metadata\/schema changes (at runtime). Thus, the user interface does not need to be updated programmatically at design time and can be modified dynamically in response to newly defined and\/or modified metadata. In the above discussed example scenario, a change to a new customer, user, country may result in availability\/removal\/modification of particular fields and\/or formatting, which may be rendered by the user interface without a design time change to the application itself.","In some implementations, the metadata in the business application may be encapsulated within a schema. The metadata within the schema may provide information about data attributes, user choices, and business application components that may be affected as a result of those user choices. Such components may include tables, fields associated with the tables, properties associated with the tables, properties associated with the fields, the required and optional relationships with other tables, queries, forms, reports, UI logic, data logic, and other application assets.","Metadata and schema to be modified (or created) by the API may be dynamically discovered. The metadata\/schema parts may be stored on a local hard disk, distributed with a program suite, stored within an organization's intranet, associated with a user's web service or other cloud persona, or located on the Internet through a search engine.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3","b":"300"},"In an example system as shown in diagram , data source control  may manage data source views , which are bound () by application framework control . An example for the application framework is ASP.NET\u00ae by Microsoft Corp. of Redmond, Wash. Such an application framework may enable programmers to build dynamic web sites, web applications and web services allowing programmers to write application code  using any supported language. Components of the framework may communicate through messages according to a predefined protocol such as Simple Object Access Protocol (SOAP).","Managed application code  on an application side of an interoperability layer  may employ access object model  for accessing data set views  within data set . Data set  may also include data source functionality  on the other side of the interoperability layer , which interacts with data dictionary  receiving metadata and data access component  for exchanging data. Application code  may access data source functionality  though access object model  and callouts .","As mentioned above, creation of runtime metadata instances and modification of those instances may be enabled from both managed code and kernel with a defined set of events that synchronize both interfaces. Data set  may employ the runtime instance and react to its changes like adding a data source with a specific join, changing a bit of a field, issuing errors if a value is not provided, etc. The data set  and its child objects, data sources, fields, and so on, may be manipulated from managed code. As a result, the user interface can adjust itself to reflect the changes. For example, a new data source may be added and corresponding fields automatically displayed without a developer having to write new code or edit any markup.","According to some embodiments, weakly typed schema interfaces may be tied to the runtime metadata and the published schema enabled to react to and reflect metadata changes in the kernel, in the managed code, or by the runtime (by a business logic). Events may be bubbled to the consumer layers such as a presentation grid, a bound field, and\/or a form allowing relevant user interface\/user interface business logic reaction to the schema and metadata changes. According to some examples, polymorphic data binding, surrogate foreign key binding, bound fields (e.g., cell trimming), and comparable items may result in forms schema changes.","The example systems in  through  are shown with specific components, program types, and configurations. Embodiments are not limited to systems according to these example configurations. Providing a metadata driven, flexible user interface for a business application may be implemented in configurations employing fewer or additional components in applications and user interfaces using the principles described herein.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 4","b":["414","416","413","412","411","410"]},"As discussed above, schema and metadata of the business application may be modified at runtime through business rules to accommodate changing business processes without a need to change the underlying data and models. A business application user interface according to embodiments may react to runtime changes and enforce validation and business rules as if the changes are made to the underlying structure.","Client devices - may enable access to applications executed on remote server(s) (e.g. one of servers ) as discussed previously. The server(s) may retrieve or store relevant data from\/to data store(s)  directly or through database server .","Network(s)  may comprise any topology of servers, clients, Internet service providers, and communication media. A system according to embodiments may have a static or dynamic topology. Network(s)  may include secure networks such as an enterprise network, an unsecure network such as a wireless open network, or the Internet. Network(s)  may also coordinate communication over other networks such as Public Switched Telephone Network (PSTN) or cellular networks. Furthermore, network(s)  may include short range wireless networks such as Bluetooth or similar ones. Network(s)  provide communication between the nodes described herein. By way of example, and not limitation, network(s)  may include wireless media such as acoustic, RF, infrared and other wireless media.","Many other configurations of computing devices, applications, data sources, and data distribution systems may be employed to provide a business application with a metadata driven user interface that can react to process changes at runtime. Furthermore, the networked environments discussed in  are for illustration purposes only. Embodiments are not limited to the example applications, modules, or processes.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 5","FIG. 5"],"b":["500","500","502","504","500","504","504","505","504","506","522","524"]},"Detection module  may be part of a hosted business application and detect changes to business processes and enable modification of metadata such as addition, deletion, modification of fields. User interface control module  may manage the user interface for the business application and recreate itself at runtime in response to changes to the schema\/metadata. This basic configuration is illustrated in  by those components within dashed line .","Computing device  may have additional features or functionality. For example, the computing device  may also include additional data storage devices (removable and\/or non-removable) such as, for example, magnetic disks, optical disks, or tape. Such additional storage is illustrated in  by removable storage  and non-removable storage . Computer readable storage media may include volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data. Computer readable storage media is a non-transitory computer readable memory device. System memory , removable storage  and non-removable storage  are all examples of computer readable storage media. Computer readable storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer readable storage media may be part of computing device . Computing device  may also have input device(s)  such as keyboard, mouse, pen, voice input device, touch input device, and comparable input devices. Output device(s)  such as a display, speakers, printer, and other types of output devices may also be included. These devices are well known in the art and need not be discussed at length here.","Computing device  may also contain communication connections  that allow the device to communicate with other devices , such as over a wireless network in a distributed computing environment, a satellite link, a cellular link, and comparable mechanisms. Other devices  may include computer device(s) that execute communication applications, storage servers, and comparable devices. Communication connection(s)  is one example of communication media. Communication media can include therein computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as a carrier wave or other transport mechanism, and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media.","Example embodiments also include methods. These methods can be implemented in any number of ways, including the structures described in this document. One such way is by machine operations, of devices of the type described in this document.","Another optional way is for one or more of the individual operations of the methods to be performed in conjunction with one or more human operators performing some. These human operators need not be co-located with each other, but each can be only with a machine that performs a portion of the program.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 6","b":"600"},"Process  may begin with detection of changes in a business process at a detection layer at operation . For example, a user may be processing a sales order, invoice, or similar form for the U.S. and then decide to process a similar form for another country (e.g., Germany), where not only formatting (e.g., currency formatting, decimal point use, date formatting, etc.) may be different, but additional or fewer fields may be associated with the form due to the difference in countries.","At operation , a binding layer may notify the user interface controller about the changes in the schema\/metadata based on the process change. This may be followed by operation , where the user interface may be recreated at runtime based on the change(s) in the schema\/metadata. For example, the user interface may adopt the new formatting rules, present the additional (or modified) fields, etc.","A user interface according to embodiments is not limited to presenting data to users through visual display. Other forms of presentation may include audio presentation, printouts, storage to designated data storage devices, transmission to designated targets over networks, and comparable methods.","Some embodiments may be implemented in a computing device that includes a communication module, a memory, and a processor, where the processor executes a method as described above or comparable ones in conjunction with instructions stored in the memory. Other embodiments may be implemented as a computer readable storage medium with instructions stored thereon for executing a method as described above or similar ones.","The operations included in process  are for illustration purposes. A metadata driven user interface for business applications that can adapt to business process changes at runtime may be implemented by similar processes with fewer or additional steps, as well as in different order of operations using the principles described herein.","The above specification, examples and data provide a complete description of the manufacture and use of the composition of the embodiments. Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as example forms of implementing the claims and embodiments."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
