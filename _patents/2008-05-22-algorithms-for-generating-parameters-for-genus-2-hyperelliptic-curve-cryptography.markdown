---
title: Algorithms for generating parameters for genus 2 hyperelliptic curve cryptography
abstract: An exemplary method includes defining a CM field, representing coefficients of a Frobenius element of a hyperelliptic curve over a prime field as non-linear polynomials that are functions of an integer x and selecting a value for x whereby the product of the Frobenius element and its complex conjugate is a prime number. Such a method may further include determining the order of the Jacobian of the hyperelliptic curve, for example, where the order is an almost prime number. Various other methods, devices, systems, etc., are also disclosed, which may be optionally used for cryptography.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08520841&OS=08520841&RS=08520841
owner: Microsoft Corporation
number: 08520841
owner_city: Redmond
owner_country: US
publication_date: 20080522
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION","Example 1","Field Parameter Values a=20, b=1, d=19","Example 2","Field Parameter Values a=49, b=2, d=43","Example 3","Field Parameter Values a=24, b=7, d=21","Example 4","Field Parameter Values a=29, b=5, d=37"],"p":["Public-key cryptographic techniques are one type of key-based cipher. In public-key cryptography, each communicating party has a public\/private key pair. The public key of each pair is made publicly available (or at least available to others who are intended to send encrypted communications), but the private key is kept secret. In order to communicate a message using encryption to a receiving party, an originating party encrypts the message using the public key of the receiving party and communicates the encrypted message to the receiving party. Upon receipt of the encrypted message, the receiving party decrypts it using its secret private key, and thereby recovers the original message.","The Diffie-Hellman protocol is a well-known example of public\/private key cryptography. The DH protocol assumes that it is infeasible to compute g (the shared secret) knowing only g and g. For example, Alice and Bob agree to use a prime number p=23 and base g=5. Alice chooses a secret integer \u03b1=6, then sends Bob (g mod p), which is 5mod 23=8. Bob chooses a secret integer \u03b2=15, then sends Alice (g mod p), which is 5mod 23=19. Alice computes (g mod p) mod p, which is 19mod 23=2. Bob computes (g mod p) mod p, which is 8mod 23=2.","In recent years, the original DH protocol has been understood to be an example of a much more general cryptographic technique, the common element being the derivation of a shared secret value (i.e., a shared key) from one party's public key and another party's private key. The parties' key pairs may be generated anew at each run of the protocol.","New curve-based cryptography techniques have recently been employed for cryptography. Such techniques allow for more secure communications and for software manufacturers to appreciably reduce the incidence of unauthorized copying of software products. For example, product IDs have been generated using hyperelliptic curve cryptography techniques (HECC techniques). The resulting product IDs provide improved security. Moreover, such IDs can be configured such that the user is not required to input too many characters.","Jacobian groups of HECs are suitable for discrete logarithmic (DL) cryptosystems (e.g., ElGamal, DH and digital signature cryptosystems). In HECC, a Jacobian of a curve of genus g provides a number of points over a finite field F of q elements (F) where the number of points is approximately q. In order to use the Jacobian of a curve for cryptography, suitable parameters must be chosen. One such parameter pertains to the underlying finite field Fover which the curve is defined. Another important parameter is the cardinality N of the F-rational Jacobian of the curve. For many implementations of a discrete logarithm based cryptosystem, Fshould be a prime field, i.e., q is a prime number p (i.e., F), and N, the cardinality (or group order) of the Jacobian is prime or \u201cclose to\u201d a prime number. Some refer to this as the group order problem on HECs over finite fields. Generally, solutions proceed by fixing a particular type of number field called a Complex Multiplication (CM) field (i.e., a totally imaginary field quadratic extension of a totally real number field) and then finding a suitable prime p and a possible group order N or possible group orders (e.g., N, N, . . . , N).","Generation of the parameter values for p and N can be time consuming for a genus 2 curve with a cryptographic size of 128 bits as it involves counting the number of points on the Jacobian of the curve over a prime field. As described herein, various exemplary algorithms are presented for generating cryptographically strong parameters (e.g., a \u201cp\u201d and one or more \u201cN\u201ds) for the CM construction of genus 2 curves.","An exemplary method includes defining a CM field, representing coefficients of a Frobenius element of a hyperelliptic curve over a prime field as non-linear polynomials that are functions of an integer x and selecting a value for x whereby the product of the Frobenius element and its complex conjugate is a prime number. Such a method may further include determining the order of the Jacobian of the hyperelliptic curve, for example, where the order is an almost prime number. Various other methods, devices, systems, etc., are also disclosed, which may be optionally used for cryptography.","Various exemplary methods, devices and system described herein pertain to hyperelliptic curve cryptosystems (HECCs). An exemplary algorithm can generate parameter values p and N for an underlying finite field Ffor an HEC and the cardinality N of the F-rational Jacobian of the HEC, respectively. An exemplary algorithm represents the parameter p in terms of polynomials. Such an algorithm can reduce computation requirements (e.g., computation time, or resource requirements). Such an exemplary algorithm can start from a specific collection of invariants associated to a primitive quartic complex multiplication (CM) field, denoted K.","An exemplary method can start with a \u201cComplex Multiplication\u201d (CM) field, which is a number field, meaning that it is a finite extension of the field of the rational numbers. In such a method, a finite field is defined by the prime number p, which is one of the parameters of a cryptosystem (i.e., the number of elements of the finite field is a prime number p so it may be called a \u201cprime field\u201d). For a defined CM field, one wants to find a genus 2 curve (e.g., given by an appropriate equation) over a prime field such that the \u201cendomorphism ring\u201d of the Jacobian of the curve over the prime field is a subring of the ring of the algebraic integers of the CM field.","In the foregoing method, the various mathematical objects can be identified, such as, (i) a prime field; (ii) a genus 2 curve over a prime field\u2032; (iii) a Jacobian of the curve (over a prime field); (iv) an endomorphism ring of the Jacobian (of the curve over a prime field); (v) a CM field; and (vi) algebraic integers of the CM field.","As described herein, (i) a \u201cprime field\u201d (F), is a field with p elements, where p is a prime number; (ii) a \u201cgenus 2 curve over a prime field\u201d is given by an equation in two variables (e.g., x and y) with coefficients in the prime field F; (iii) the \u201c(Frational points of the) Jacobian of the curve\u201d is a mathematical object related to the curve, but not a subset of the curve and given a curve equation over a prime field Fp, its Jacobian is a finite set, whose order\/cardinality is denoted by N; (iv) the \u201cendomorphism ring\/algebra of the Jacobian\u201d is another mathematical object that is related to the Jacobian, but not a subset of the Jacobian; and (v-vi) the \u201calgebraic integers of the CM field\u201d is a subset of the \u201cCM field\u201d.","Accordingly, an endomorphism ring\/algebra of the Jacobian of a genus 2 curve is desired to be a subring of the ring of algebraic integers of a CM field. In other words, the ring of the \u201calgebraic integers of a CM field\u201d has the \u201cendomorphism ring of the Jacobian\u201d as a subset. This is an inclusion relation that involves \u201cthe endomorphism ring of the Jacobian\u201d and the \u201calgebraic integers of the CM field\u201d. Further, the Frobenius element is sought to be an element of the endomorphism ring and hence an element of the subring of the ring of algebraic integers of the CM field. Or more generally, the Frobenius element is sought to be an element of the ring of integers of the CM field.","Various exemplary algorithms can be combined to form an overall algorithm. Implementation of these algorithms is described further below with respect to some actual trial results.","Let K:=Q(\u03b7), where \u03b7=i(a+b(d))if d\u22612, 3 (mod 4); and \u03b7=i(a+0.5b(\u22121+d)if d\u22611 (mod 4), be a fixed primitive quartic CM field, where d>0 is squarefree and Q(d) has class number 1. The condition that K is primitive is equivalent to \u0394>0 is not a square, where \u0394=a\u2212bd>0, if d\u22612, 3 (mod 4), and \u0394=a\u2212a\u00b7b\u22120.25b(d\u22121), if d\u22611 (mod 4).","As described herein, it is desirable to construct a genus 2 hyperelliptic curve C over a finite field Fof prime order such that End(JacF(C))Q=K, and N:=#JacF(C) is \u201calmost prime\u201d, meaning that N is a product of a large prime number and a small cofactor. If such a curve C is found, then there exists an element, called the Frobenius element, \u03c0\u03b5End(JacF(C)) (i.e., \u03c0 is an endomorphism on the Jacobian of the curve C over the finite field F) that satisfies the condition that \u03c0 =q, where  is the complex conjugate of \u03c0.","In the analysis described herein, the concept of Weil numbers may be used. For example, let p be a prime and q=pa power of p. An algebraic integer \u03c0 is called a q-Weil number, if \u03c0 =q=pand \u03c0 is any conjugate of \u03c0.","Assume that the Frobenius element \u03c0 is in an order as follows for two particular cases (first case and second case):\n\n,if 2,3(mod 4);and\n\n0.5(\u22121)0.5\u03b7(\u22121),if 1(mod 4).\n\nThe first case is described followed by the second case. In the first case d\u22612, 3 (mod 4), the Frobenius element is written \u03c0=c+cd+\u03b7(c+c), c\u03b5Z.\n","For the first case, the relationship \u03c0 =p provides:\n\n(2)+(2+2)\n","Since \u201c1\u201d and dare linearly independent over Q, the following equations exist:\n\n2\u2003\u2003(1)\n\n2+20\u2003\u2003(2)\n\nAlso, for the first case, let  and \u03b1 denote the imaginary and real embeddings of K into .\n","For the first case, the characteristic polynomial of \u03c0 is",{"@attributes":{"id":"p-0027","num":"0026"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"mi":"h","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},{"mrow":[{"mo":["(",")"],"mrow":{"mi":["x","\u03c0"],"mo":"-"}},{"mo":["(",")"],"mrow":{"mi":"x","mo":"-","mover":{"mi":["\u03c0","_"]}}},{"mo":["(",")"],"mrow":{"mi":"x","mo":"-","msup":{"mi":["\u03c0","\u03c3"]}}},{"mo":["(",")"],"mrow":{"mi":"x","mo":"-","msup":{"mover":{"mi":["\u03c0","_"]},"mi":"\u03c3"}}}],"mo":["\u2062","\u2062","\u2062"]}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"msup":[{"mi":"x","mn":"4"},{"mi":"p","mn":"2"}],"mo":["-","+","-","+"],"mrow":[{"mn":"4","mo":["\u2062","\u2062"],"msub":{"mi":"c","mn":"1"},"msup":{"mi":"x","mrow":{"mn":"3","mo":"\u2062","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}},{"mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mn":"2","mo":"\u2062","mi":"p"},{"mn":"4","mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"msubsup":{"mi":"c","mn":["1","2"]},"mo":"-","mrow":{"msubsup":{"mi":"c","mn":["2","2"]},"mo":"\u2062","mi":"d"}}}}],"mo":"+"}},"mo":"\u2062","msup":{"mi":"x","mn":"2"}},{"mn":"4","mo":["\u2062","\u2062"],"msub":{"mi":"c","mn":"1"},"mi":"px"}]}}}}]}}},"br":[{},{},{}],"sub":["q","1","1","2"],"in-line-formulae":[{},{}],"i":["N","p+","p+","c","c","\u2212c","d"],"sup":["2","2","2"]},"For the present analysis, a prime number p is roughly the size of N(i.e., p\u02dcN). A technique described by Weng, \u201cConstructing hyperelliptic curves of genus 2 suitable for cryptography\u201d, , Vol. 72, No. 241, pp. 435-458 (2002), searches for parameters to provide prime p and almost prime N with a heuristic probability \u02dc1\/(log N). While this probability may be acceptable for some implementations, the technique of Weng relies on factorization of big integers, repeatedly in every step of the search, which makes the Weng technique computationally intensive (e.g., slow or unsuitable for devices with limited computing resources). The Weng article is incorporated herein by reference.","An exemplary algorithm described herein is more efficient than the technique of Weng for generating parameters for genus 2 cryptography. The exemplary algorithm includes parameterizing the coefficients c(e.g., where i=1, 2, . . . n) as polynomials c(x) and then generating \u201cfamilies of parameters\u201d by factorizing quartic polynomials with small integral coefficients. In this representation, x is an integer, which may be selected as described further below.","An exemplary algorithm finds polynomials c(x), c(x), c(x), c(x)\u03c5Q[x], for example, all of the same degree (to control the sizes of parameters), satisfying the equation:\n\n\u22122()()=2()()()()\n","Given a polynomial representation and the foregoing equation, p(x) can be written as:\n\n()=()+()()()2()()\n\nGiven this representation of p, an exemplary algorithm lets x range through integer values (e.g., of certain sizes) until the value p(x) is a prime number. Once the value of p(x) is a prime number, Equation (3) can be used to compute the cardinality of the Jacobian (N) and check if it is almost prime (i.e., is N almost prime?).\n","The following lemma (Lemma 1) can help to avoid some inappropriate or sub-optimal choices of c(x).","Lemma 1:","Let c(x), c(x), c(x), c(x) be linear polynomials in Q[x] such that:\n\n2()()+2()()()()0.\n","Then p(x)=c(x)+c(x)d+c(x)a+c(x)ad+2c(x)c(x)bd is reducible in Q[x].","Proof of Lemma 1.","Let c(x), c(x), c(x), c(x) be linear polynomials in Q[x] such that:\n\n2()()+2()()()()0.\n","Then we have:\n\n\u22122()()=2()()()()\u2003\u2003(4)\n","Let \u03b1\u03b5Q be a root of c(x). Clearly,\n\n0=\u22122(\u03b1)(\u03b1)=(\u03b1)+2(\u03b1)(\u03b1)+(\u03b1)=0\u2003\u2003(5)\n","Examine the quadratic equations:\n\n+20\u2003\u2003(6)\n\n+20\u2003\u2003(7)\n\nBoth Equations (6) and (7) have discriminant \u0394=(2a)\u22124b(bd)=4(a\u2212bd)>0, which is not a square in Q by the assumption on a, b and d, namely, that K is primitive. Therefore, Equation (5) holds if and only if c(\u03b1)=c(\u03b1)=0. Hence, c(\u03b1)=c(\u03b1)=0. By Equation (5) one can conclude that \u03b1 is a zero of \u22122c(x)c(x) with multiplicity 2. Since c(x) and c(x) are linear, one must have c(\u03b1)=0.\n\nTherefore, the polynomial:\n\n()=()+()()()2()()\n\nhas \u03b1 as a zero of multiplicity 2. So (x\u2212\u03b1)|p(x) in Q[x]. Obviously, p(x) is reducible.\n","Since it is desirable to want p(x) to be prime for some values x\u03b5Z, it is reasonable, given Lemma 1 and corresponding proof, to expect p(x) to be irreducible. Therefore, an exemplary technique chooses c(x) and c(x) to be quadratic polynomials, as elaborated with respect to Algorithm 1 below.","Algorithm 1: Parameter generator polynomials for K=Q(\u03b7), d\u22612, 3 (mod 4).","Input: Integers a, b, d with d>0 squarefree, d\u22612, 3 (mod 4), a\u2212bd>0 not a square.","Output: Four quadratic polynomials c(x), c(x), c(X), c(x) and a quartic polynomial p(x) are generated such that they satisfy Equations (1) and (2). Polynomials N(x) and N(x) of degree 8 are generated as possible group orders.\n\n","Algorithm 1: Parameter generator polynomials for K=Q(\u03b7), d\u22611 (mod 4).","For the case d\u22611 (mod 4), the Frobenius element can be written as:\n\n\u03c0=+0.5(\u22121)+\u03b7(+0.5(\u22121)),\n\nAgain, \u03c0 =p gives\n\n(+0.25(1)+0.5(1)+0.25()(1))+(2+2()+(0.25(3)\u2212))(0.5(\u22121))=\n\nThe linear independence of 1 and 0.5(\u22121+d) over Q implies the following two equations:\n\n+0.25(1)+0.5(1)+0.25()(1)\u2003\u2003(8)\n\n2+2()+(0.25((3)\u2212))=0\u2003\u2003(9)\n\nThe corresponding cardinality (or order) of the Jacobian is as follows:\n\n=(1)\u2212(4\u22122)(1)+4\u22120.25(1)]\u2003\u2003(10)\n","Algorithm 2: Parameter generator polynomials for K=Q(\u03b7), d\u22611 (mod 4)","Input: Integers a, b, d with d>0 squarefree, d\u22611 (mod 4), a\u2212ab\u22120.25b(d\u22121)>0 not a square.","Output: Four quadratic polynomials c(x), c(x), c(x), c(x) and a quartic polynomial p(x) are generated such that they satisfy the equations (8) and (9). Polynomials N(x) and N(x) of degree 8 are generated as possible group orders.\n\n","N(x)=(p(x)+1)\u2212(p(x)+1)(4c(x)\u22122c(x))+4(c(x)\u2212c(x)c(x)\u22120.25c(x)(d\u22121),","N(x)=(p(x)+1)+(p(x)+1)(4c(x)\u22122c(x))+4(c(x)\u2212c(x)c(x)\u22120.25c(x)(d\u22121).","The polynomials returned from Algorithms 1 and Algorithm 2 are candidates of parameter generator polynomials. These polynomials can be inserted with various integer values for x, where the values are of a suitable size, until p(x) is prime and N(x) or N(x) is almost prime. Hence, the Algorithms 1 and Algorithm 2 can provide for a parameter value for p (i.e., a large prime) and two cardinalities or orders Nand N, which also depend on the value of the integer x. This process is written formally as Algorithm 3, which follows.","Algorithm 3: Algorithm for generating parameters for HEC cryptography (HECC).","Input: Polynomials c(x), p(x), N(x) and N(x) generated by Algorithm 1 or Algorithm 2; bit size of the desired size of the prime field over which the curve is defined, \u03bc; and the maximum number of trials, M.","Output: Triples (p, N, N) for constructing hyperelliptic curves over Fwith CM by K=Q(\u03b7) whose Jacobians have almost prime group orders Nor N\u02dc2; or \u201cNot found\u201d.\n\n",{"@attributes":{"id":"p-0055","num":"0085"},"figref":"FIG. 1","b":["100","104","108","112"],"sub":["1","2","3 ","4"],"o":"\u03c0"},"In the example of , a decision block  follows that decides if the product is a prime number \u201cp\u201d. If the decision block  decides that the product is not a prime number, then the method  returns to the selection and determination block  to select a different value for the integer x. However, if the product is a prime number, then the method  continues at a determination block  that determines the order (cardinality) of the Jacobian of the HEC over the prime field defined by this prime number. Another decision block  decides if the order is almost a prime number. If the decision block  decides that the order is not almost a prime number, then the method  continues at the selection and determination block  to select a different value for the integer x. However, if the decision block  decides that the order is almost a prime number, then the method  terminates in a termination block , as a prime (i.e., the product) and an order (e.g., N) have been found that meet certain criteria.","While the method  shows only a single order being determined in the determination block , as explained above, more than one order may be determined. For example, the method  may determine a triple (p, N, N) where the decision block  decides if one of the orders is almost prime, which may be sufficient. The existence of multiple orders stems from the multiplicity of solutions, as described with respect to Algorithm 1 and Algorithm 2, above.","The method  searches for factorizations of polynomials as opposed to the technique of Weng, which searches for factorizations of integers. The method  essentially parameterizes the coefficients of the Frobenius element as non-linear polynomials (e.g., polynomials having a degree greater than 1). In various examples, polynomials having a degree of two were used to represent the coefficients of the Frobenius element. As described herein, polynomials of higher degree may be optionally used; noting that, for sake of simplicity, second order polynomials suffice.","In the method , the decision block  decides if the product, which may be represented by an equation p(x), is a prime number or, in other words, is irreducible. In the decision block , the decision is made based on deciding if the order is almost irreducible. A large integer is almost prime if it can be written as a product of a large prime number and a relatively small cofactor. For example, the following 256-bit number N can be regarded as almost prime:","N=58216888249078746955854475856559517495479835454491180632120016819914968258608 where","N=2*3638555515567421684740904741034969843467489715905698789507501051244685516163, which is a product of a small number 2=16 and a large (252-bit) prime number. For purposes of the method , the standard for almost irreducible or almost prime can be determined by specifying one or more criteria (e.g., number of prime factors).",{"@attributes":{"id":"p-0061","num":"0091"},"figref":"FIG. 2","b":["200","204","208"]},"Once the publication occurs, the method  may be used in a two-party key exchange as follows. As explained in the Background section, the DH protocol assumes that it is infeasible to compute g (the shared secret) knowing only g and g. According to the method , Alice and Bob agree to use a public point on the Jacobian as base g. Alice chooses a secret exponent \u03b1 and then sends Bob g. Bob chooses a secret exponent \u03b2 and then sends Alice g. To derive the shared secret, Alice computes g and Bob computes g.",{"@attributes":{"id":"p-0063","num":"0093"},"figref":"FIG. 3","b":["300","301","303","310","310","312","314","316","303"]},"The system  further includes a network  that allows for communication between parties and acquisition and sharing of cryptographic information. For example, parties Alice  and Bob  desire to communicate in a secure manner over the network . Alice  relies on a computing device  to generate a private key  while Bob  relies on a computing device  to generate a private key . According to the timeline , the computing device  generates and publishes the public key , which is acquired by the devices  and . The device  raises the public key  to a power determined by the private key  (i.e., the private key may simply be a scaler) and the device  raises the public key  to a power determined by the private key . The values determined by the device  and the device  are then transmitted to each other. Once received, the device  and the device  can determine a shared key by, for example, raising the public key to the power determined by a respective private key (i.e., the private key  for the device  and the private key  by the device ).","While several possible schemes have been described, the information generated by the algorithms  may be used in any of a variety of secure transactions. For example, information may be used to secure products such as software products.","An exemplary computing device (e.g., the device  of ) includes a processor; and processor executable instructions to define a CM field, to represent coefficients of a Frobenius element of a hyperelliptic curve over a prime field as non-linear polynomials that are functions of an integer x and to select a value for x whereby the product of the Frobenius element and its complex conjugate is a prime number. Such a device may further include instructions to determine the order of the Jacobian of the hyperelliptic curve where the order comprises an almost prime number. Such a device may further include a network interface configured to communicate the prime number, the almost prime number or the prime number and the almost prime number for use in a cryptographic protocol.","In various examples, a cryptographic protocol may be a discrete logarithm-based protocol (e.g., a protocol selected from a group consisting of an ElGammal protocol, a Diffie-Hellman protocol and a digital signature protocol).","An exemplary computing device optionally includes instructions to protect a software product using, directly or indirectly, a selected integer x that generates the prime number. For example, using the Jacobian of a hyperelliptic curve determined by a selected value for the integer x.","Trial Results: Implementation of the foregoing algorithms produced trial results that were compared to the results achieved using the technique described in the article by Weng. The exemplary algorithms generated (prime, group order) pairs (p, N) with respect to randomly chosen quartic CM fields, specified by parameters a, b, d of small sizes, with class number 1. Trial factorization of integers up to a fixed bound (10,000) was used for the technique of Weng.","Trials for p of size 128-bit (\u03bc):","(A) In the case d\u22612, 3 (mod 4), the exemplary Algorithm 3 generated parameter pairs (p, N) at an average rate of 2.1402 seconds per pair, while the technique of Weng generated pairs at 7.7538 seconds per pair.","(B) In the case d\u22611 (mod 4), our method generates parameter pairs at an average rate of 3.6423 seconds per pair while the technique of Weng generated pairs at 11.4407 seconds per pair.","Trials for p of size 256-bit (\u03bc):","(A) In the case d\u22612, 3 (mod 4), the exemplary Algorithm 3 generated parameter pairs at an average rate of 21.7344 seconds per pair, while the technique of Weng generated pairs at 97.9592 seconds per pair.","(B) In the case d\u22611 (mod 4), the exemplary Algorithm 3 generated parameter pairs at an average rate of 41.0917 seconds per pair, while the technique of Weng generated pairs at 108.5106 seconds per pair.","Trials demonstrated robust operation, noting that in rare instances the exemplary Algorithm 3 failed to find suitable parameters. Given the robust operation of Algorithm 3, on average, as the size of the prime p increases, Algorithm 3 performs better than the technique of Weng, if complete factorization of integers is used for the technique of Weng.","Trials were performed using PARI\/GP, which is a widely used computer algebra system designed for fast computations in number theory (factorizations, algebraic number theory, elliptic curves, etc.) that also contains a large number of other useful functions to compute with mathematical entities such as matrices, polynomials, power series, algebraic numbers etc., and transcendental functions.","In the trial results that follow, the primes p(x), corresponding to value x, are of 128 bits and the group orders N(x) are almost prime (in this case, a product of a positive integer<2000 and a prime number).","Polynomials and p(x)\n\n","Orders N(x) and N(x)\n\n","Integers, Primes and Orders\n\n","Polynomials and p(x)\n\n","Orders N(x) and N(x)\n\n","Integers, Primes and Orders\n\n","Polynomials and p(x)\n\n","Orders N(x) and N(x)\n\n","Integers, Primes and Orders\n\n","Polynomials and p(x)\n\n","Orders N(x) and N(x)\n\n","Integers, Primes and Orders\n\n",{"@attributes":{"id":"p-0091","num":"0173"},"figref":["FIG. 4","FIG. 3"],"b":["400","301","322","342","400"]},"In a very basic configuration, computing device  typically includes at least one processing unit  and system memory . Depending on the exact configuration and type of computing device, system memory  may be volatile (such as RAM), non-volatile (such as ROM, flash memory, etc.) or some combination of the two. System memory  typically includes an operating system , one or more program modules , and may include program data . The operating system  include a component-based framework  that supports components (including properties and events), objects, inheritance, polymorphism, reflection, and provides an object-oriented component-based application programming interface (API), such as that of the .NET\u2122 Framework marketed by Microsoft Corporation, Redmond, Wash. The device  is of a very basic configuration demarcated by a dashed line . Again, a terminal may have fewer components but will interact with a computing device that may have such a basic configuration.","Computing device  may have additional features or functionality. For example, computing device  may also include additional data storage devices (removable and\/or non-removable) such as, for example, magnetic disks, optical disks, or tape. Such additional storage is illustrated in  by removable storage  and non-removable storage . Computer storage media may include volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data. System memory , removable storage  and non-removable storage  are all examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device  may also have input device(s)  such as keyboard, mouse, pen, voice input device, touch input device, etc. Output device(s)  such as a display, speakers, printer, etc. may also be included. These devices are well know in the art and need not be discussed at length here.","Computing device  may also contain communication connections  that allow the device to communicate with other computing devices , such as over a network. Communication connections  are one example of communication media. Communication media may typically be embodied by computer readable instructions, data structures, program modules, or other data forms. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media.","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as example forms of implementing the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF DRAWINGS","p":["Non-limiting and non-exhaustive examples are described with reference to the following figures:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
