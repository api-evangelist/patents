---
title: Method and system for obtaining computer shutdown information
abstract: A method and a system for obtaining shutdown information for a computer allows a user to indicate a reason or reasons for the shutdown. The states of the user mode processes that are running on the computer are saved for later analysis. The state information as well as the shutdown reason entered by the user is stored in a computer-readable memory, such as in the form of a log file. A user may report a shutdown reason by selecting a reason from a predefined reason list and/or by typing a reason in a comment area.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07028172&OS=07028172&RS=07028172
owner: Microsoft Corporation
number: 07028172
owner_city: Redmond
owner_country: US
publication_date: 20011029
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This invention relates to collecting performance information about computer programs, and, more particularly, to obtaining information as to the reasons that a computer is being or has been shut down.","Programs that crash or lock-up can result in substantial down time for machines and users alike. It is, therefore, important to be able diagnose such programs to find out why they are having problems. Having a comprehensive history of the problems greatly aids in the detective work. However, it is not always easy to accumulate an accurate history of crashes or lock-ups. In a corporate network, for example, an administrator may install an error-prone program on many clients throughout a network. If the problem with the program is the kind that prevents users from using the program at all, then the users will usually inform the system administrator immediately, making it easy to build up a history. The problem may not be so catastrophic, however. For example, if the program has intermittent problems that the users can solve simply by shutting it down and restarting it, then the system administrator may seldom, if ever, receive feedback from the users. As a result, the down time resulting from the program may go undetected.","Thus, it can be seen that there is a need for a new method and system for obtaining computer shutdown information.","The present invention provides a method and a system for obtaining information about the shutdown of a computer. According to the invention, when a user shuts down a computer he or she (hereinafter \u201che\u201d) enters the reason for the shutdown. The state of the user mode processes running on the computer is stored in memory along with the reason for the shutdown. In one implementation, the user is presented with predefined reasons for the shutdown, and prompted to select one or more of the predefined reasons. The predefined reasons may be stored as entries in an operating system database and may be user-defined. The user may enter the shutdown reason or reasons before, during or after the shutdown of the computer. The reason or reasons may also be entered as the computer is being restarted after the shutdown. Each predefined reason entry stored in the system database may indicate whether the reason is to be displayed during a shutdown of the program, or during a restart of the program following a shutdown. The invention may be implemented to collect information as to why a computer or computer operating system is being shut down by users.","Additional features and advantages of the invention will be made apparent from the following detailed description of illustrative embodiments that proceeds with reference to the accompanying figures.","The invention is generally directed to a method and a system for obtaining shutdown information for a computer, in which a user is prompted to indicate a reason or reasons for the shutdown. The states of the user mode processes that are running on the computer are saved for later analysis. The state information as well as the shutdown reason entered by the user is stored in a computer-readable memory, such as in the form of a text log file or a mark-up language document. A user may report a shutdown reason by selecting a reason from a predefined reason list and\/or by typing a reason in a comment area.","In one embodiment, the invention is used to obtain shutdown information for an operating system.","In another embodiment of the invention, a user sends a shutdown command and a shutdown reason from a first computer via network link to a second computer to shut down the second computer. The shutdown reason is then be stored on the second computer for later analysis.","Although it is not required, the invention may be implemented by computer-executable instructions, such as program modules, that are executed by a computer. Generally, program modules include routines, objects, components, data structures and the like that perform particular tasks or implement particular abstract data types. The term \u201cprogram\u201d as used herein includes one or more program modules. The invention may be implemented on a variety of types of computers, including personal computers (PCs), hand-held devices, multi-processor systems, microprocessor-based on programmable consumer electronics, network PCs, minicomputers, mainframe computers and the like. The invention may also be employed in distributed computing environments, where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, modules may be located in both local and remote memory storage devices.","An example of a networked environment in which this system may be used will now be described with reference to . The example network includes several computers  communicating with one another over a network , represented by a cloud. Network  may include many well-known components, such as routers, gateways, hubs, etc. and may allow the computers  to communicate via wired and\/or wireless media.","Referring to , an example of a basic configuration for a computer on which the system described herein may be implemented is shown. In its most basic configuration, the computer  typically includes at least one processing unit  and memory . Depending on the exact configuration and type of the computer , the memory  may be volatile (such as RAM), non-volatile (such as ROM or flash memory) or some combination of the two. This most basic configuration is illustrated in  by dashed line . Additionally, the computer may also have additional features\/functionality. For example, computer  may also include additional storage (removable and\/or non-removable) including, but not limited to, magnetic or optical disks or tape. Computer storage media includes volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules, or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disk (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to stored the desired information and which can be accessed by the computer . Any such computer storage media may be part of computer .","Computer  may also contain communications connections that allow the device to communicate with other devices. A communication connection is an example of a communication medium. Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media.","Computer  may also have input devices such as a keyboard, mouse, pen, voice input device, touch input device, etc. Output devices such as a display , speakers, a printer, etc. may also be included. All these devices are well known in the art and need not be discussed at length here.","It is known that users shut down computers for a variety of reasons. Some reasons are normal and only reflect network availability. An example of such a reason is when a user shuts down a server for normal maintenance. Some shutdown reasons, on the other hand, may reflect system reliability. For example, a computer user may have to shutdown and reboot a computer after installing a certain program. A user may also have to shutdown and reboot a computer when it is not responding. The present invention is known to be useful for helping system administrators distinguish between these two categories of shutdown reasons. This helps system administrators conduct root-cause analyses, and improve the reliability and stability of their computer networks. The invention is not limited to this use, however.","There are many possible ways in which shutdown information may be obtained in accordance with the invention. According to one embodiment, the user is shown a dialog box in which he may make selections and\/or enter text. Referring to , for example, a user interface (UI)  is illustrated. In responding to a computer shutdown initiated by the user, the UI  may be displayed to collect the shutdown information. The UI  includes a list  of possible shutdown reasons, \u201cplanned\u201d and \u201cunplanned\u201d selection fields  and , and a comment box . The user may select a reason from the list  that best describes why he is shutting down or restarting the computer. The list  includes reasons that are appropriate to the circumstances. For example, if the operating system is being shut down, the reasons in the list  may include software installation, hardware maintenance etc. To distinguish an expected operation, such as a shutdown for regular maintenance, from an unexpected operation, such as a shutdown for software installation, the user may select the planned or unplanned selection field  or the . Additional shutdown information may be entered in a comment box  by the user. Once the user has entered shutdown information through the list , the selection fields  and , and\/or the box , the information may be stored for later analysis.","Referring to , another example of how the shutdown information may be obtained from the user is shown. In this example, a UI  includes a command line . The command line  has a first field  and a second field . To shutdown a program, the user may enter a shutdown command in the first field  and a reason for the shutdown in the second field . The reason may be expressed in a variety of ways, such as a textual description or a reason code.","A user may be given the opportunity to enter shutdown information before, during or after a computer shutdown, depending on how the invention is implemented. According to one embodiment, as soon as a user indicates a desire to shut the computer down, a UI is presented. In another embodiment the user is presented with a UI upon restarting the computer. The latter embodiment may advantageously be used in situations where the shutdown of the computer came unexpectedly. For example, if the operating system is being shut down, and the computer on which the operating system runs experiences a power failure, then there may not be time for the user to be prompted for shutdown information prior to the shutdown of the operating system. In such a case, the UI may be presented when the user reboots the computer.","Referring to , another example of a UI may be used in an embodiment of the invention is shown. The UI, generally labeled , includes a first pull down menu  and a first explanation field , a second pull down menu  and a second explanation field , and a text input area . The UI  further includes an OK button , a cancel button , and a help button . The first pull down menu  allows the user to choose an action to perform, such as shutting down the computer. Other possible actions listed in the pull down menu  include logging off a network, or restarting the computer. The first explanation field  gives the user a textual explanation of the menu item. The second pull down menu  allows the user choose a reason for performing the action chosen in the first pull down menu . For example, if the action chosen in the first pull down menu  is \u201cshut down,\u201d then the choice given to the user in the second pull down menu  may include, for example, hardware maintenance, operating system configuration, software installation system failure, power failure and system hung. The second explanation field  gives the user a textual explanation of the chosen menu item. The text input area  allows the user to enter additional comments such as \u201cpower failure was building-wide.\u201d","According to an aspect of the invention, a \u201csnapshot\u201d is taken of the states of the computer's user-mode processes just prior to shutdown. The snapshot is then saved in non-volatile memory for later analysis. In one embodiment, the shutdown reason entered by the user determines whether or not a user-mode snapshot is taken. For example, if the user indicates that the shutdown was planned, then there may not need to be a snapshot taken, since a planned shutdown does not generally indicate an anomalous condition. If, however, the user indicates that the shutdown was unplanned\u2014due to a system crash, for example\u2014then the snapshot is taken and stored on the computer's hard drive or other non-volatile memory.","There are a variety of ways in which a user-mode snapshot may be implemented. Referring to , one example of a user-mode snapshot will now be illustrated and described. In this example, a computer  has just experienced an unexpected shutdown, as indicated by the shutdown reason entered by a user . Prior to shutting down, the computer  takes a snapshot  of its user-mode processes and stores it on its internal hard disk . The snapshot  is an extensible mark-up language (XML) file that includes per process parameters  for each user-mode process, pagefile parameters , and system parameters . The per process parameters  describe those conditions that are relevant to a single process, and may include one or more of the following pieces of information:\n\n","The present invention may be implemented on computer hardware, computer software, or any combination thereof. There are also a variety of architectures that may be used for the invention. Referring to , an example of an architecture that may be used in an embodiment of the invention will now be described. The architecture includes a computer system  having a memory , a shutdown reason collector module , a user interface , a snapshot module  for taking a snapshot of the state of the user-mode processes, and an optional system database . The collector module  includes a list  of predefined reasons that a program may be shut down. The memory  includes a repository  of previously collected shutdown reasons. In some implementations, the system database  of the computer system  is used to store additional predefined shutdown reasons that the user or system administrator can modify or customize. The shutdown reasons may be presented to a user on an interactive UI, such as the UI  of  or the UI  of . If the UI  is implemented as a command line interface, such as the UI  of , the collection module  uses the list  to verify that the reason or reason code entered by the user is recognizable. Once the user enters the reason for shutting down the computer, the reason is stored in the repository , which may be a log file or the like. Furthermore, if the collector module  determines the shutdown to be \u201cunplanned,\u201d it invokes the snapshot module , which takes a snapshot of the current state of the user-mode processes and saves the snapshot on the computer's non-volatile memory. The collector module  may prompt the user to enter a reason for shutting down the program prior to, during, or after the program has been shutdown. This allows the total number of recognized shutdown reasons to be extended.","In one implementation, the architecture of  is used in conjunction with the MICROSOFT WINDOWS XP brand operating system to collect information as to why the operating system, and, more generally, the computer system is being shut down. In this implementation, the system database  is the SYSTEM REGISTRY and the repository  is the SYSTEM LOG. The shutdown reasons are compiled into the WINDOWS XP code and stored as keys in the SYSTEM REGISTRY. The shutdown reasons are divided into major and minor reason groups. These keys may be modified by a user having sufficient access privileges (such as an administrator) in a well-known manner, or through an administrative interface (not shown) provided as an external tool. Once the collector module  obtains shutdown reasons from a user, it calls the ExitWindowsEx application programming interface (API). Invoking the ExitWindowsEx API calls a log file helper function to log the reasons into the SYSTEM LOG.","Referring to , an example of the steps taken to collect shutdown information for a computer running the WINDOWS XP operating system will now be described. It is understood that these steps are applicable to non-WINDOWS XP implementations as well, even though described in the context of WINDOWS XP. At step , the user selects \u201cShutdown\u201d from the WINDOWS XP \u201cStart\u201d menu. At step , the collector checks the system database  to determine whether shutdown reason collection has been enabled. If it has not been enabled, then the flow proceeds to steps  and , at which a conventional shutdown dialog box is activated and manipulated by the user. If shutdown reason collection has been enabled, then the collector module  () retrieves the list  of shutdown reasons, and retrieves any custom-defined shutdown reasons from the system database , and displays the reasons on a UI  () at step . As shown in , the UI  includes a check box  to allow the user to indicate that the shutdown is unplanned. At steps \u2013, the collector module  waits for the user to either select a predefined shutdown reason from the pull-down menu, and enter his own reason (five characters minimum) in the comments box. After one of those actions has been taken, the collector module  enables the OK button (step ). After the user clicks OK (step ), then the collector module  stores the entered reason in the reason repository  via the ExitWindowsEx API and log file helper function (step ). At step , the WINDOWS XP operating system shuts down.","Referring to , another example of steps that may be taken to collect shutdown information for a computer running the WINDOWS XP brand operating system will now be described. It is assumed that this procedure occurs during a reboot operation following an unexpected shutdown of the operating system. It is understood that these steps are applicable to non-WINDOWS XP implementations as well, even though described in the context of WINDOWS XP. At step  (), the user logs in. At step , the collector module  () checks the system database  to determine whether shutdown reason collection has been enabled. If it has not been enabled, then the flow proceeds to step , at which a conventional reboot ensues. If shutdown reason collection has been enabled, then the collector module  retrieves the list  of shutdown reasons, and retrieves any custom-defined shutdown reasons from the system database , and displays the reasons on a UI  () at step . At steps ,  and , the system manager module  waits for the user to either select a predefined shutdown reason from the pull-down menu, or enter his own reason in the comments box. Optionally, the user may be sent back to step  after a two minute time-out. After the user selects or enters a reason, the collector module  enables the OK button (step ). After the user clicks OK (step ), then the collector module  calls the log file helper function directly and stores the entered reason in the repository  (step ). At step , the WINDOWS XP operating system resumes its normal booting operation.","Referring to , yet another example of an architecture that may be used in an embodiment of the invention is shown. The architecture comprises a first computer system  that includes a shutdown reason collector module  having a list  of predefined shutdown reasons, a user interface , and an optional system database . The architecture further comprises a computer network , and a second computer system  having a memory , and a snapshot module . The memory  further includes a shutdown reason repository , which may be a lag file. The first and second computer systems may communicate with one another over the network . The system database  may include predefined shutdown reasons in addition to those in the list  of the collector module. A user at the first computer system  may remotely shut down a program on the second computer system  via the user interface . The user interface  also gives the user an opportunity to enter a reason for the shutdown. The collector module  checks the list , as well as the system database  to ensure that the entered reason is recognizable. It based on the entered reason, the collector module  determines the shutdown to be unplanned, then the collector module  invokes the snapshot module , which takes a snapshot of the state of the user-mode processes and saves the snapshot on the non-volatile memory of the computer system . The collector module  then stores the shutdown reason remotely in the log file . Storing the shutdown reason on the second computer system  is advantageous, since it is a program on the second computer system that is being shutdown, even though the action was initiated from the first computer system.","Referring to , an example of how the architecture of  may be implemented to collect shutdown information of computer running the WINDOWS XP brand operating system will now be described. It is assumed for this example that the second computer system  is running the WINDOWS XP brand operating system.  illustrates a command line interface that may be used as the user interface  of . The command line interface includes a command line . The command line  includes an operation field , a machine name field , a timer setting field , and a shutdown code field . When the user wishes to shut down the second computer system , he types in \u201cshutdown\u201d in the operation filed , the name of the computer system  in the machine name field , the time that is to elapse prior to shutdown in the timer field , and the shutdown code in the field . The \u201cshutdown\u201d command causes the collector module  to call the program \u201cshutdown.exe\u201d to run. \u201cShutdown.exe\u201d checks the list  and the system database  (which is the SYSTEM REGISTRY in this example) to determine if the entered reason code is recognized. If the collector module  recognizes the code, then it translates the code into the corresponding shutdown reason text string. The collector module  then calls the remote API InitiateSystemShutdownEx and passes the text string to the second computer system . The second computer system  then stores the text string in the log file  (which the SYSTEM LOG in this example).","It can thus be seen that a new a useful method and system for obtaining computer shutdown information has been provided. In view of the many possible embodiments to which the principles of this invention may be applied, it should be recognized that the embodiments described herein with respect to the drawing figures is meant to be illustrative only and should not be taken as limiting the scope of invention. For example, those of skill in the art will recognize that the elements of the illustrated embodiments shown in software may be implemented in hardware and vice versa or that the illustrated embodiments can be modified in arrangement and detail without departing from the spirit of the invention. Therefore, the invention as described herein contemplates all such embodiments as may come within the scope of the following claims and equivalents thereof."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["While the appended claims set forth the features of the present invention with particularity, the invention, together with its objects and advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings of which:",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIGS. 3\u20135"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIGS. 7 and 8"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIGS. 9 and 10"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 13"}]},"DETDESC":[{},{}]}
