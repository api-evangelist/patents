---
title: Systems and methods for classifying files
abstract: A computer-implemented method for classifying files may include identifying data to be written to a file on a storage system. The method may also include, before the data is written to the storage system, 1) identifying a characteristic of the data, 2) determining, based on the characteristic of the data, a classification for the file, and 3) using the classification of the file to select a location within the storage system where the file should be stored. The method may further include writing the data to the file at the selected location within the storage system. Various other methods, systems, and computer-readable media are also disclosed herein.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08650166&OS=08650166&RS=08650166
owner: Symantec Corporation
number: 08650166
owner_city: Mountain View
owner_country: US
publication_date: 20110711
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"p":["In the electronic information age, people may share, access, and disseminate high volumes of information. The ease of disseminating information electronically is empowering. At the same time, the workforce has become increasingly mobile, and the ubiquity of high-speed Internet access, smart mobile devices, and portable storage means that \u201cthe office\u201d may be anywhere. As a consequence, it has become more difficult than ever for organizations to organize and control data storage. Enterprises may implement a variety of different types of data management systems (e.g., data-loss-prevention systems, security systems, virtualization systems, etc.) to control, protect, and manage data.","Traditional data management systems may employ a variety of technologies to evaluate, organize, and\/or protect data. Unfortunately, traditional data management systems may only evaluate, organize, and\/or protect data after the data has been written to a storage system. This approach of traditional data management systems may have a variety of disadvantages. For example, sensitive data may been compromised if the data is written to an unsecure location before it is identified and moved to a secure location. Furthermore, valuable system resources (e.g., network bandwidth, memory, etc.) may not be used efficiently if data is written to a storage system and later moved by a data management system. What is needed, therefore, is a more effective mechanism for managing data.","As will be described in greater detail below, the instant disclosure generally relates to systems and methods for classifying files. Embodiments of the instant disclosure may classify a file before the file (or a modification to the file) is written to a storage device to ensure that the file is stored in the proper location (e.g., in accordance with a data-loss-prevention policy and\/or a data virtualization policy). For example, a method for classifying files may include identifying data to be written to a file on a storage system and, before the data is written to the storage system: 1) identifying a characteristic of the data, 2) determining, based on the characteristic of the data, a classification for the file (e.g., associating a tag with the file), and 3) using the classification of the file to select a location within the storage system where the file should be stored. The method may also include writing the data to the file at the selected location within the storage system.","The data may be identified in a variety of contexts. In at least one embodiment, identifying the data may include intercepting, at a data classification system, the data as it is being transferred to the storage system and before it is written to the storage system. In such embodiments, the classification for the file may be determined by the data classification system. Alternatively, the classification for the file may be determined by a software application that created the data.","A characteristic of the data may be identified in a variety of ways. In certain embodiments, identifying a characteristic of the data may include analyzing content of the data. Additionally or alternatively, identifying a characteristic of the data may include identifying and\/or analyzing metadata of the data.","According to various embodiments, using the classification of the file to select a location within the storage system where the file should be stored may include using the classification of the file to select a virtualization layer where the file should be stored. In such embodiments, the virtualization layer may overlay a file system location of an underlying operating system such that access requests to the file system location of the underlying operating system are redirected the virtualization layer when the virtualization layer is active.","In some embodiments, using the classification of the file to select a location within the storage system where the file should be stored may include identifying a data-loss-prevention policy that indicates where files with the classification of the file are to be stored and using the data-loss-prevention policy to select the location within the storage system where the file should be stored.","The data may include a modification to an existing file or may be part of a new file. In embodiments where the data includes a modification to an existing file, the file may be moved to the selected location before the data is written to the file. In embodiments where the data includes a new file, writing the data to the file at the selected location may include creating the file at the selected location.","In one embodiment, a system for implementing the above-described method may include: 1) an identification module programmed to identify data to be written to a file on a storage system and identify a characteristic of the data before the data is written to the storage system; 2) a classification module programmed to determine, based on the characteristic of the data, a classification for the file before the data is written to the storage system; 3) a selection module programmed to use the classification of the file to select a location within the storage system where the file should be stored before the data is written to the storage system; 4) a storage module programmed to write the data to the file at the selected location within the storage system; and 5) at least one processor programmed to execute the identification module, the classification module, the selection module, and the storage module.","In some examples, the above-described method may be encoded as computer-readable instructions on a computer-readable-storage medium. For example, a computer-readable-storage medium may include one or more computer-executable instructions that, when executed by at least one processor of a computing device, may cause the computing device to identify data to be written to a file on a storage system. The computer-executable instructions may also be programmed to cause the computing device to, before the data is written to the storage system, 1) identify a characteristic of the data, 2) determine, based on the characteristic of the data, a classification for the file, and 3) use the classification of the file to select a location within the storage system where the file should be stored. The computer-executable instruction may further be programmed to cause the computing device to write the data to the file at the selected location within the storage system.","Features from any of the above-mentioned embodiments may be used in combination with one another in accordance with the general principles described herein. These and other embodiments, features, and advantages will be more fully understood upon reading the following detailed description in conjunction with the accompanying drawings and claims.","Throughout the drawings, identical reference characters and descriptions indicate similar, but not necessarily identical, elements. While the exemplary embodiments described herein are susceptible to various modifications and alternative forms, specific embodiments have been shown by way of example in the drawings and will be described in detail herein. However, the exemplary embodiments described herein are not intended to be limited to the particular forms disclosed. Rather, the instant disclosure covers all modifications, equivalents, and alternatives falling within the scope of the appended claims.","The instant disclosure generally relates to systems and methods for classifying files. Embodiments of the instant disclosure may classify a file before the file (or a modification to the file) is written to a storage device. In this manner, the systems and methods described herein may ensure that data is stored in the proper location, may efficiently use system resources, and may avoid situations where the security of a data is temporarily compromised. For example, before a modification is written to a file, the file may be classified and moved to a new location based on the classification (instead of being classified and moved after the modification is written to the file). The instant disclosure also provides various other features and advantages, as described in greater detail below.","The following will provide, with reference to , detailed descriptions of exemplary systems for classifying files. Detailed descriptions of corresponding computer-implemented methods will also be provided in connection with . Descriptions of exemplary virtualization systems are described in connection with . In addition, detailed descriptions of an exemplary computing system and network architecture capable of implementing one or more of the embodiments described herein will be provided in connection with , respectively.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1","b":["100","100","102","100","104","100","106"]},"In addition, and as will be described in greater detail below, exemplary system  may include a selection module  programmed to use the classification of the file to select a location within the storage system where the file should be stored before the data is written to the storage system. System  may also include a storage module  programmed to write the data to the file at the selected location within the storage system. Although illustrated as separate elements, one or more of modules  in  may represent portions of a single module or application.","In certain embodiments, one or more of modules  in  may represent one or more software applications or programs that, when executed by a computing device, may cause the computing device to perform one or more tasks. For example, and as will be described in greater detail below, one or more of modules  may represent software modules stored and configured to run on one or more computing devices, such as computing device  in , computing system  in , and\/or portions of exemplary network architecture  in . One or more of modules  in  may also represent all or portions of one or more special-purpose computers configured to perform one or more tasks.","As illustrated in , exemplary system  may also include one or more databases . As shown, system  may include a classification database  for storing one or more file classifications and\/or one or more associations between files and file classifications. System  may also include a file placement policy database  for storing one or more file placement policies (e.g., data-loss-prevention policies, security policies, virtualization policies, etc). As used herein, the phrase \u201cfile-placement policy\u201d generally refers to any policy or rule that indicates a preferred or mandated location for storing a file. For example, a file placement policy may indicate that a file that containing confidential information should be stored in a secure location.","Databases  may represent portions of a single database or computing device or a plurality of databases or computing devices. For example, databases  may represent a portion of server  in , computing system  in , and\/or portions of exemplary network architecture  in . Alternatively, databases  in  may represent one or more physically separate devices capable of being accessed by a computing device, such as server  in , computing system  in , and\/or portions of exemplary network architecture  in .","Exemplary system  in  may be implemented in a variety of ways. For example, all or a portion of exemplary system  may represent portions of exemplary system  in . As shown in , system  may include a computing device  in communication with a server  over a network .","Computing device  may include identification module  for identifying data  and for identifying a characteristic  of data . Computing device  may also include classification module  for using characteristic  of data  to select, provide, and\/or create a classification  for data . In some embodiments, classification module  may access classification database  on server  to select classification  for data . Classification module  may also store an association between classification  and data  in classification database  on server .","Computing device  may also include a selection module  for using classification  of data  to select a location  in a storage system  to which data  is to be written. Storage system  generally represents any type or form of non-volatile and\/or non-transient storage devices (e.g., one or more disk drives, one or more solid state drives, one or more flash storage devices, and\/or any other type of non-volatile storage device) local to and\/or remote from computing device .","In some embodiments, selection module  may identify a file placement policy in file placement policy database  on server . Selection module  may then select location  in accordance with the file placement policy. While shown on server , classification database  and\/or file placement policy database  may be located on computing device , may be located at different remote locations, or may not be a necessary part of system .","As also shown in , computing device  may further include storage module  for writing data  to file  at selected location .","Computing device  generally represents any type or form of computing device capable of reading computer-executable instructions. Examples of computing device  include, without limitation, laptops, desktops, servers, cellular phones, personal digital assistants (PDAs), multimedia players, embedded systems, combinations of one or more of the same, exemplary computing system  in , or any other suitable computing device.","Server  generally represents any type or form of computing device that is capable of enabling data management. Examples of server  include, without limitation, application servers and database servers configured to provide various database services and\/or run certain software applications.","Network  generally represents any medium or architecture capable of facilitating communication or data transfer. Examples of network  include, without limitation, an intranet, a wide area network (WAN), a local area network (LAN), a personal area network (PAN), the Internet, power line communications (PLC), a cellular network (e.g., a GSM Network), exemplary network architecture  in , or the like. Network  may facilitate communication or data transfer using wireless or wired connections. In one embodiment, network  may facilitate communication between computing device  and server .",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 3","FIG. 3","FIG. 3","FIG. 1","FIG. 2","FIG. 6","FIG. 7"],"b":["300","100","200","610","700"]},"At step  in  one or more of the systems described herein may identify data to be written to a file on a storage system. For example, identification module  in  (which may, as detailed above, represent a portion of computing device  in ) may identify data  to be written to file  on storage system .","As used herein, the term \u201cdata\u201d generally refers to any type or form of information in a format suitable for use by a computing system. As used herein, the term \u201cfile\u201d generally refers to any type or form of entity or container for storing one or more items of data. The term \u201cfile\u201d may refer to a data file, an executable file, one or more file segments or other portions of files, database entries, and\/or one or more segments of executable code.","Identification module  may identify data  in a variety of different contexts and\/or manners. For example, identification module  may identify data  as it is being transferred to storage system  but before it is written to storage system . In such embodiments, a data classification system may intercept data  using a file system filter driver and\/or any other suitable mechanism for intercepting data input\/output operations to a storage system.","Additionally or alternatively, identification module  may be part of an application program responsible for creating, modifying, and\/or moving data . In such embodiments, identification module  may identify data  as data  is created, modified, and\/or moved. For example, if a user adds data  to a spreadsheet file, identification module , which may be part of the spreadsheet software application, may identify data  before it is written to storage system .","Identification module  may identify data that is to be written to an existing file and\/or may identify data that constitutes a new file to be written to a storage system. In other words, in some embodiments data  may represent one or more modifications to an existing file, while in other embodiments data  may represent a new file.","At step  in , one or more of the systems described herein may, before the data is written to the storage system, identify a characteristic of the data. For example, identification module  in  may identify characteristic  of data  before data  is written to storage system .","Identification module  may identify characteristic  of data  in a variety of different ways. For example, identification module  may identify characteristics  of data  by scanning the content of data . In such embodiments, identification module  may scan the content of data  for information protected by intellectual property, financial information, sales information, personal information of users, information about clients, and\/or any other type of information.","Additionally or alternatively, identification module  may identify characteristic  of data  by identifying a location to which data  is directed to be stored, by identifying an owner of data , by identifying a program that created data , by identifying a time at which data  was created and\/or modified, and\/or by identifying any other attribute of data  (e.g., by identifying metadata of data ).","In some embodiments, characteristic  of data  may be identified by a classification system that intercepts data . Additionally or alternatively, characteristic  of data  may be identified by the application program responsible for generating data .","At step  in , one or more of the systems described herein may determine, based on the characteristic of the data, a classification for the file to which the data is to be written. The file may be classified before the data is written to the storage system. For example, before data  is written to file  on storage system , classification module  (which, as detailed above, may be part of computing device  in ) may determine, based on characteristic  of data , a classification  for file .","Classification module  may determine one or more classifications for file  in any suitable manner. For example, classification module  may classify file  by analyzing characteristic  of data  and selecting a categorization (e.g., a tag) for file  that corresponds to characteristic . In some embodiments, classification module  may select a classification from a set of classifications stored in classification database . Alternatively, classification module  may generate a new classification indicative of characteristic .","Classification module  may use characteristic  in determining any suitable classification (or classifications) for file . As an example, if characteristic  indicates that data  contains corporate financial information, classification module  may classify file  as confidential. As another example, if characteristic  indicates that data  contains information generated within the past week, classification module  may classify file  as containing new information. As a third example, if characteristic  indicates that data  contains executable code capable of transmitting data to an external location, classification module  may classify file  as an potentially risky. Other classifications may include a classification for privileged information, a classification for sensitive information, a classification for intellectual property, a classification for user-generated information, and\/or any other type of classification.","As part of determining classification  for file , classification module  may associate classification  with file . Classification module  may associate classification  with file  in a variety of ways. For example, classification module  may tag file  with classification  (e.g., by storing classification  as metadata of file ). In other embodiments, classification module  may create an association between file  and classification  in classification database .","In some embodiments, classification module  may be part of a classification system that determines classification  for file . Additionally or alternatively, file  may be classified by the application program responsible for writing data  to file . In such embodiments, an application developer may specify one or more classifications to be assigned to a file created by an application developed by the developer. In this manner, application programs (e.g., word processing programs, spreadsheet programs, database programs, and\/or any other type of software program) may classify the data they generate before the data is written to a storage device.","As discussed above, file  may be classified before data  is written to file . File  may be classified while data  exists in volatile memory (e.g., random-access-memory allocated to a program responsible for creating, modifying, and\/or moving data ). In situations where the data is a modification to a file, the file may be classified with respect to the content of the data to be written to the file before the data is actually written to the file. In other words, a file may be pre-classified based on data that is about to be written to the file. In situations where the data is part of a new file, the file may be classified before it is actually created in a storage system (e.g., created in a file system of storage system ), enabling the new file to be created in the correct location (e.g., in a location dictated by a file placement policy).","At step  in , or more of the systems described herein may, before the data is written to a storage system, use the classification of the file to select the location within the storage system where the file should be stored. For example, selection module  in  (which may, as detailed above, be part of computing device  in ) may use classification  of file  to select location  within storage system .","As used herein, the phrase \u201clocation within the storage system where the file should be stored\u201d generally refers to any location where a file is required to be stored and\/or any preferred location for storing a file. In some embodiments, a location where a file should be stored may be defined in negative terms (i.e., by identifying locations where the file system should not be stored). A location within a storage system where a file should be stored may be identified by a file placement policy, by performing an analysis of a storage system, and\/or in any other suitable manner. A location within a storage system where a file should be stored may be a location identified by an application that created the file and\/or may be different than the location identified by the application that created the file.","Selection module  may use classification  of file  to select a location for file  in a variety of ways. For example, selection module  may apply a file placement policy to classification  to determine where file  should be stored. Selection module  may also implement any other suitable algorithm or heuristic to use classification  to select a location where file  should be stored.","Selection module  may be part of one or more of a variety of file-placement systems. For example, selection module  may be part of a data-loss-prevention system that protects an enterprise's data from being compromised, a security system that protects a computing system and\/or a computing network from malware, and\/or a virtualization system that stores data in virtualization layers.","In embodiments where selection module  is part of a data-loss-prevention system, selection module  may apply a data-loss-prevention policy to classification  to determine where file  should be stored. As used herein, the phrase \u201cdata-loss-prevention policy\u201d generally refers to any policy and\/or rule that describes, defines, or otherwise identifies particular file classifications that an organization desires to protect. A data-loss-prevention policy may also indicate where such files should be stored. For example, a data-loss-prevention policy may indicate that files classified as confidential, privileged, and\/or sensitive should be stored in a secure location.","In embodiments where selection module  is part of a security system, selection module  may apply a security policy to classification  to determine where file  should be stored. For example, a security policy may indicate that files classified as being potentially risk should be stored in a quarantined location until the files can be further evaluated and\/or remediated.","In embodiments where selection module  is part of a virtualization system, a file placement policy may include a data virtualization policy. As used herein, the phrase \u201cdata virtualization policy\u201d generally refers to any policy and\/or rule that identifies a virtualization layer to which a file with a particular classification should be stored. As an example, a data virtualization policy may indicate that a file classified as including personal information of a particular user should be stored in a virtualization layer that is only accessible by the particular user.","Data virtualization policies may use data categorization in combination with other types of other information (e.g., inclusion and\/or exclusion entries that indicate locations to which certain types of data should be written, information about a process that is writing the data, etc.) to select storage locations to which the data should be written.","Data virtualization policies may also be used in conjunction with data-loss-prevention policies and\/or data security policies. For example, a data virtualization policy may indicate that confidential data should be stored in a secure virtualization layer. As another example, a data virtualization policy may indicate that potentially risky data (e.g., data that might contain malware) should be sandboxed in a virtualization layer that is isolated from the rest of a system.","As described in greater detail in the discussion of , the phrase \u201cvirtualization layer\u201d generally refers to a virtual container that may overlay a file system location of an underlying operating system (i.e., base operating system) such that access requests to the file system location of the underlying operating system are redirected to the virtualization layer when the virtualization layer is active.","Returning to , at step  one or more of the systems described herein may write the data to the file at the selected location within storage system. For example, storage module  in  (which may, as detailed above, be part of computing device ) may write data  to file  at selected location  within storage system .","In embodiments where file  is an existing file and data  is a modification to file , storage module  may write the data to file  at location  by moving file  to location  before writing data  to file . After file  is moved to location , storage module  may write data  to selected location .","In embodiments where data  is part of a new file that has not yet been written to storage system , storage module  may write data  to file  at selected location  by first creating file  at location  and then writing data  to file  at location . For example, an application program may attempt to create a file in an unsecure location in storage system . Selection module  may determine that the file should be stored at a secure location rather than the unsecure location, and storage module  may cause the file to be created at the secure location rather than the unsecure location.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIGS. 4 and 5","FIG. 4"],"b":["400","410","410","400","408","408","406","408","406","404","406","410","412"]},"If a virtualization policy indicates that data is to be written to a virtualization layer, layer manager  may create a layer (e.g., layer ) and layering system software  may redirect writing of the data to layer . Layer manager  may control configuration of layering system software  through a management Application Programming Interface (API) .","In an ordinary file system, an operating system may apply a file pathname to a file system to reach a file, which might exist, for example, as a series of data blocks on a hard disk. Some operating systems permit access to a plurality of file systems, each existing in a confined name space. For example, in a Microsoft Windows environment a file name is preceded by a drive letter, for example \u201cC:\u201d. A Linux operating system also utilizes prefixed directories; some Linux distributions provide for file systems to be mounted under the \u201c\/rnnt\u201d namespace. In any case, such an operating system can determine the single location of access for a file by an evaluation of a file pathname by extracting and examining the relevant portion thereof.","In contrast, a system that supports file system layering (e.g., such as the system shown in ) may provide for more than one location of access for a particular file pathname. Such a layered operating system can therefore look in two or more repositories of file objects, which are referred to herein as virtualization layers, such as layer . As there may be more than one potential location for a file at a particular pathname, a virtualization system may perform an extra computing step in order to determine the \u201cowner\u201d layer of an accessed file, which may be the layer applied to the file access. For file read accesses, this may involve a search of the layers in an order of priority to find the layer with highest priority that also contains a file corresponding to the requested pathname. For write accesses, this may involve a search of the layers, also in an order of priority (the priority may be determined by a categorization of the file to be written, among a variety of other factors), to determine the highest ranked layer to which the file may be written.","The contents of a virtualization layer may be presented or made inaccessible to operating system  by enabling or disabling the layer, respectively (which may also be referred to as activating and deactivating a layer). Thus the contents of a layer are organized in a single container that can be presented, withdrawn, moved, and\/or deleted as a unit. A layer that is enabled for access to the operating system may overlay its contents to the base file system, and thus the layer contents may appear to the operating system as though they are in their ordinary and expected locations in the base file system. If a layer is disabled or removed, the layer contents no longer appear to the processes of the operating system, and thus a layer may provide a convenient way to deposit or remove files from a computer as a higher-order unit.",{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 5","b":["500","502","504","506","500","520","522","524","530","102","530","502","504","520","522","524","502","504","506"]},"Virtualization layer B may provide a high level of security, virtualization layer A may be protected for use by a particular user, and base file system  may provide no security. Application  may perform a first write operation , and virtualization system  may determine that the write operation is attempting to create a classified document on the base file system. Virtualization system  may determine that classified documents should be written to layer B  and may therefore redirect write operation  to virtualization layer B.","Application  may perform a second write operation  to create a file that contains personal information of a user with access rights to layer A . Virtualization system  may identify the personal information and determine that the attempt to create the file with the personal information should be redirected to layer A .","Application  may perform a third write operation  to create a file containing public marketing data. Virtualization system  may identify the marketing data and determine that the file containing the marketing data does not need to be written to a virtualization layer. Thus, virtualization system  may allow the file to be written to base file system .",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 6","b":["610","410","410"]},"Computing system  broadly represents any single or multi-processor computing device or system capable of executing computer-readable instructions. Examples of computing system  include, without limitation, workstations, laptops, client-side terminals, servers, distributed computing systems, handheld devices, or any other computing system or device. In its most basic configuration, computing system  may include at least one processor  and a system memory .","Processor  generally represents any type or form of processing unit capable of processing data or interpreting and executing instructions. In certain embodiments, processor  may receive instructions from a software application or module. These instructions may cause processor  to perform the functions of one or more of the exemplary embodiments described and\/or illustrated herein.","System memory  generally represents any type or form of volatile or non-volatile storage device or medium capable of storing data and\/or other computer-readable instructions. Examples of system memory  include, without limitation, random access memory (RAM), read only memory (ROM), flash memory, or any other suitable memory device. Although not required, in certain embodiments computing system  may include both a volatile memory unit (such as, for example, system memory ) and a non-volatile storage device (such as, for example, primary storage device , as described in detail below). In one example, one or more of modules  from  may be loaded into system memory .","In certain embodiments, exemplary computing system  may also include one or more components or elements in addition to processor  and system memory . For example, as illustrated in , computing system  may include a memory controller , an Input\/Output (I\/O) controller , and a communication interface , each of which may be interconnected via a communication infrastructure . Communication infrastructure  generally represents any type or form of infrastructure capable of facilitating communication between one or more components of a computing device. Examples of communication infrastructure  include, without limitation, a communication bus (such as an ISA, PCI, PCIe, or similar bus) and a network.","Memory controller  generally represents any type or form of device capable of handling memory or data or controlling communication between one or more components of computing system . For example, in certain embodiments memory controller  may control communication between processor , system memory , and I\/O controller  via communication infrastructure .","I\/O controller  generally represents any type or form of module capable of coordinating and\/or controlling the input and output functions of a computing device. For example, in certain embodiments I\/O controller  may control or facilitate transfer of data between one or more elements of computing system , such as processor , system memory , communication interface , display adapter , input interface , and storage interface .","Communication interface  broadly represents any type or form of communication device or adapter capable of facilitating communication between exemplary computing system  and one or more additional devices. For example, in certain embodiments communication interface  may facilitate communication between computing system  and a private or public network including additional computing systems. Examples of communication interface  include, without limitation, a wired network interface (such as a network interface card), a wireless network interface (such as a wireless network interface card), a modem, and any other suitable interface. In at least one embodiment, communication interface  may provide a direct connection to a remote server via a direct link to a network, such as the Internet. Communication interface  may also indirectly provide such a connection through, for example, a local area network (such as an Ethernet network), a personal area network, a telephone or cable network, a cellular telephone connection, a satellite data connection, or any other suitable connection.","In certain embodiments, communication interface  may also represent a host adapter configured to facilitate communication between computing system  and one or more additional network or storage devices via an external bus or communications channel. Examples of host adapters include, without limitation, SCSI host adapters, USB host adapters, IEEE 1394 host adapters, SATA and eSATA host adapters, ATA and PATA host adapters, Fibre Channel interface adapters, Ethernet adapters, or the like. Communication interface  may also allow computing system  to engage in distributed or remote computing. For example, communication interface  may receive instructions from a remote device or send instructions to a remote device for execution.","As illustrated in , computing system  may also include at least one display device  coupled to communication infrastructure  via a display adapter . Display device  generally represents any type or form of device capable of visually displaying information forwarded by display adapter . Similarly, display adapter  generally represents any type or form of device configured to forward graphics, text, and other data from communication infrastructure  (or from a frame buffer, as known in the art) for display on display device .","As illustrated in , exemplary computing system  may also include at least one input device  coupled to communication infrastructure  via an input interface . Input device  generally represents any type or form of input device capable of providing input, either computer or human generated, to exemplary computing system . Examples of input device  include, without limitation, a keyboard, a pointing device, a speech recognition device, or any other input device.","As illustrated in , exemplary computing system  may also include a primary storage device  and a backup storage device  coupled to communication infrastructure  via a storage interface . Storage devices  and  generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions. For example, storage devices  and  may be a magnetic disk drive (e.g., a so-called hard drive), a solid state drive, a floppy disk drive, a magnetic tape drive, an optical disk drive, a flash drive, or the like. Storage interface  generally represents any type or form of interface or device for transferring data between storage devices  and  and other components of computing system . In one example, databases  from  may be stored in primary storage device .","In certain embodiments, storage devices  and  may be configured to read from and\/or write to a removable storage unit configured to store computer software, data, or other computer-readable information. Examples of suitable removable storage units include, without limitation, a floppy disk, a magnetic tape, an optical disk, a flash memory device, or the like. Storage devices  and  may also include other similar structures or devices for allowing computer software, data, or other computer-readable instructions to be loaded into computing system . For example, storage devices  and  may be configured to read and write software, data, or other computer-readable information. Storage devices  and  may also be a part of computing system  or may be a separate device accessed through other interface systems.","Many other devices or subsystems may be connected to computing system . Conversely, all of the components and devices illustrated in  need not be present to practice the embodiments described and\/or illustrated herein. The devices and subsystems referenced above may also be interconnected in different ways from that shown in . Computing system  may also employ any number of software, firmware, and\/or hardware configurations. For example, one or more of the exemplary embodiments disclosed herein may be encoded as a computer program (also referred to as computer software, software applications, computer-readable instructions, or computer control logic) on a computer-readable-storage medium. The phrase \u201ccomputer-readable-storage medium\u201d generally refers to any form of device, carrier, or medium capable of storing or carrying computer-readable instructions. Examples of computer-readable-storage media include, without limitation, transmission-type media, such as carrier waves, and physical media, such as magnetic-storage media (e.g., hard disk drives and floppy disks), optical-storage media (e.g., CD- or DVD-ROMs), electronic-storage media (e.g., solid-state drives and flash media), and other distribution systems.","The computer-readable-storage medium containing the computer program may be loaded into computing system . All or a portion of the computer program stored on the computer-readable-storage medium may then be stored in system memory  and\/or various portions of storage devices  and . When executed by processor , a computer program loaded into computing system  may cause processor  to perform and\/or be a means for performing the functions of one or more of the exemplary embodiments described and\/or illustrated herein. Additionally or alternatively, one or more of the exemplary embodiments described and\/or illustrated herein may be implemented in firmware and\/or hardware. For example, computing system  may be configured as an application specific integrated circuit (ASIC) adapted to implement one or more of the exemplary embodiments disclosed herein.",{"@attributes":{"id":"p-0090","num":"0089"},"figref":"FIG. 7","b":["700","710","720","730","740","745","750","700","700"]},"Client systems , , and  generally represent any type or form of computing device or system, such as exemplary computing system  in . Similarly, servers  and  generally represent computing devices or systems, such as application servers or database servers, configured to provide various database services and\/or run certain software applications. Network  generally represents any telecommunication or computer network including, for example, an intranet, a wide area network (WAN), a local area network (LAN), a personal area network (PAN), or the Internet. In one example, client systems , , and\/or  and\/or servers  and\/or  may include all or a portion of system  from .","As illustrated in , one or more storage devices ()-(N) may be directly attached to server . Similarly, one or more storage devices ()-(N) may be directly attached to server . Storage devices ()-(N) and storage devices ()-(N) generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions. In certain embodiments, storage devices ()-(N) and storage devices ()-(N) may represent network-attached storage (NAS) devices configured to communicate with servers  and  using various protocols, such as NFS, SMB, or CIFS.","Servers  and  may also be connected to a storage area network (SAN) fabric . SAN fabric  generally represents any type or form of computer network or architecture capable of facilitating communication between a plurality of storage devices. SAN fabric  may facilitate communication between servers  and  and a plurality of storage devices ()-(N) and\/or an intelligent storage array . SAN fabric  may also facilitate, via network  and servers  and , communication between client systems , , and  and storage devices ()-(N) and\/or intelligent storage array  in such a manner that devices ()-(N) and array  appear as locally attached devices to client systems , , and . As with storage devices ()-(N) and storage devices ()-(N), storage devices ()-(N) and intelligent storage array  generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions.","In certain embodiments, and with reference to exemplary computing system  of , a communication interface, such as communication interface  in , may be used to provide connectivity between each client system , , and  and network . Client systems , , and  may be able to access information on server  or  using, for example, a web browser or other client software. Such software may allow client systems , , and  to access data hosted by server , server , storage devices ()-(N), storage devices ()-(N), storage devices ()-(N), or intelligent storage array . Although  depicts the use of a network (such as the Internet) for exchanging data, the embodiments described and\/or illustrated herein are not limited to the Internet or any particular network-based environment.","In at least one embodiment, all or a portion of one or more of the exemplary embodiments disclosed herein may be encoded as a computer program and loaded onto and executed by server , server , storage devices ()-(N), storage devices ()-(N), storage devices ()-(N), intelligent storage array , or any combination thereof. All or a portion of one or more of the exemplary embodiments disclosed herein may also be encoded as a computer program, stored in server , run by server , and distributed to client systems , , and  over network .","As detailed above, computing system  and\/or one or more components of network architecture  may perform and\/or be a means for performing, either alone or in combination with other elements, one or more steps of an exemplary method for classifying files.","While the foregoing disclosure sets forth various embodiments using specific block diagrams, flowcharts, and examples, each block diagram component, flowchart step, operation, and\/or component described and\/or illustrated herein may be implemented, individually and\/or collectively, using a wide range of hardware, software, or firmware (or any combination thereof) configurations. In addition, any disclosure of components contained within other components should be considered exemplary in nature since many other architectures can be implemented to achieve the same functionality.","In some examples, all or a portion of exemplary system  in  may represent portions of a cloud-computing or network-based environment. Cloud-computing environments may provide various services and applications via the Internet. These cloud-based services (e.g., software as a service, platform as a service, infrastructure as a service, etc.) may be accessible through a web browser or other remote interface. Various functions described herein may be provided through a remote desktop environment or any other cloud-based computing environment.","The process parameters and sequence of steps described and\/or illustrated herein are given by way of example only and can be varied as desired. For example, while the steps illustrated and\/or described herein may be shown or discussed in a particular order, these steps do not necessarily need to be performed in the order illustrated or discussed. The various exemplary methods described and\/or illustrated herein may also omit one or more of the steps described or illustrated herein or include additional steps in addition to those disclosed.","While various embodiments have been described and\/or illustrated herein in the context of fully functional computing systems, one or more of these exemplary embodiments may be distributed as a program product in a variety of forms, regardless of the particular type of computer-readable-storage media used to actually carry out the distribution. The embodiments disclosed herein may also be implemented using software modules that perform certain tasks. These software modules may include script, batch, or other executable files that may be stored on a computer-readable storage medium or in a computing system. In some embodiments, these software modules may configure a computing system to perform one or more of the exemplary embodiments disclosed herein.","In addition, one or more of the modules described herein may transform data, physical devices, and\/or representations of physical devices from one form to another. For example, one or more of the modules recited herein may transform a storage device by selecting locations for data writes based on classifications of the data being written.","The preceding description has been provided to enable others skilled in the art to best utilize various aspects of the exemplary embodiments disclosed herein. This exemplary description is not intended to be exhaustive or to be limited to any precise form disclosed. Many modifications and variations are possible without departing from the spirit and scope of the instant disclosure. The embodiments disclosed herein should be considered in all respects illustrative and not restrictive. Reference should be made to the appended claims and their equivalents in determining the scope of the instant disclosure.","Unless otherwise noted, the terms \u201ca\u201d or \u201can,\u201d as used in the specification and claims, are to be construed as meaning \u201cat least one of.\u201d In addition, for ease of use, the words \u201cincluding\u201d and \u201chaving,\u201d as used in the specification and claims, are interchangeable with and have the same meaning as the word \u201ccomprising.\u201d"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings illustrate a number of exemplary embodiments and are a part of the specification. Together with the following description, these drawings demonstrate and explain various principles of the instant disclosure.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
