---
title: System and method for managing data in multiple bills of material over a network
abstract: A method of storing and managing BOMs of different owners in the same environment. One or more BOMs have an owner. An owner's BOM includes may include confidential information such that unrestricted access to the confidential information is limited to the owner and any designates of the owner. In particular, one embodiment of the invention and maintains a list of items that include the items in the BOMs of the different owners. A unique identifier is used for each item of the list. The item identifiers thus form one namespace. BOMs of different owners share data including confidential data within the same namespace.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07558793&OS=07558793&RS=07558793
owner: Arena Solutions, Inc.
number: 07558793
owner_city: Foster City
owner_country: US
publication_date: 20021024
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application is a continuation in part of U.S. patent application Ser. No. 09\/832,753 (now abandoned) filed Apr. 10, 2001 titled SYSTEM AND METHOD FOR MANAGING DATA IN MULTIPLE BILLS OF MATERIAL OVER A NETWORK. U.S. application Ser. No. 09\/832,753 is incorporated herein by reference.","U.S. application Ser. No. 09\/832,753 (now abandoned) claimed priority from U.S. Provisional Application Ser. No. 60\/195,918 entitled \u201cSystem and Method for Hosting Multiple Bills of Material for Multiple Companies in a Single Namespace\u201d filed Apr. 10, 2000 by Eric Larkin and Michael Topolovac; U.S. Provisional Application Ser. No. 60\/206,219 entitled \u201cSystem and Method for Transparent Electronic Processing\u201d filed May 22, 2000 by Eric Larkin and Michael Topolovac; U.S. Provisional Application Ser. No. 60\/206,221 entitled \u201cSystem and Method for Vendor Performance Tracking\u201d filed May 22, 2000 by Eric Larkin and Michael Topolovac; and U.S. Provisional Application Ser. No. 60\/210,935 entitled \u201cSystems and Methods for Utilizing Multiple Bills of Material from Multiple Companies Stored in a Single Namespace\u201d filed Jun. 12, 2000 by Eric Larkin, Michael Topolovac, and Janet Yu, the disclosures of which are hereby incorporated by reference.","1. Field of the Invention","The invention relates generally to the field of data management and more particularly to managing data related to Bills of Material on a computer network.","2. Description of Related Art","During development and manufacturing of a product, elements, parts or components of the product are often kept in a structured item list called a bill of materials (hereinafter BOM while the plural form, bills of material, is abbreviated as BOMs). For each such product, a BOM is used to keep track of information such as the number of parts used in manufacturing the product, the identification of parts, part vendors, and part costs. The BOM may also be used as an index or organizational tool for the documentation of a product's components such as component datasheets and mechanical drawings. Furthermore, in some instances BOMs include non-material elements such as assembly and finishing processes, machining steps, and connections. Finally, BOMs may include reference items such as tooling or agency certifications that are not actually included in the product itself, but which are required for its manufacture.","Note that the words items and elements are often used synonymously. Thus, an \u201citem list\u201d is sometimes referred to an \u201celement list,\u201d and so forth.","During the product development process a BOM is typically changed frequently and considerable effort is undertaken to collect and maintain BOM data. After the development cycle is complete, the BOM may be used as a guide for purchasing, and for inventory maintenance and cost control. As such, parties involved in a wide variety of organizational tasks generally make use of BOMs.","A BOM typically has a nested or hierarchical structure. For example, a typical BOM for a very simple consumer product includes a first level item list that has the box in which the product is delivered, the packing material used to protect the product from damage during shipping, the product assembly and\/or use instructions, and the product itself. The first level item list also includes non-physical reference items such as product certifications and agency approvals. In the case where the product is an assembly of components, the BOM includes a second level item list that has one or more parts of the product enclosure, fasteners, a label, and one or more printed wiring board assemblies, for example. The BOM includes a third level item list for a printed wiring board assembly that typically has the printed wiring board itself and a number of electrical components of various types in various quantities. The printed wiring board item list also includes a non-physical item representing the manufacturing process of assembling the various physical parts together onto the printed wiring board. The printed wiring board item list also includes items such as fiducials and test points that are fabricated as an integral part of the printed wiring board.","It is common to refer to a nested BOM as a multi-level BOM and to an item list for a particular assembly as a single-level BOM. A multi-level BOM is representable as a hierarchical data structure that describes, for example, all the components for manufacturing an item. Such a hierarchical structure may be representable a tree with each node of the tree an item of a BOM. An item, i.e., the node of the tree, may be an article, a process, the material used by the process, and so forth. A node of a BOM may itself be represented by a BOM. An item in a BOM, for example, may be a subassembly, and there may be a separate BOM that describes that subassembly, including the components, and in some cases the process for creating a component.","BOMs are often very complex, with hundreds or thousands of items and five to ten or more levels. It is common for the same item or subassembly to appear multiple times at multiple levels in a BOM. In addition, subassemblies are often used in quantities greater than one. Both of these situations substantially complicate tracking of a total component count. For this reason, a separate single-level item list is sometimes developed that includes one line for each unique item in a BOM, each line including a total quantity of that item used in the product. The development of such an item list is referred to as the flattening of the BOM, and the resulting single-level item list is often called a flattened BOM. Flattening a BOM during product development is often done by a single individual working with a computer application program such as a spreadsheet and is a time-consuming and error-prone process. Further, when the BOM changes frequently during product development, maintaining a flattened BOM is very difficult.","As noted above, BOMs additionally serve as guides for purchasing. The inclusion of non-physical and non-purchasable elements such as fiducials and test points in a BOM can be a source of confusion when the BOM is used in this manner. Non-technical staff may spend considerable time attempting to find sources for non-physical items or for items such as test points that are produced as a by-product of another manufacturing process. For this reason, separate item lists are often developed for purchasable and non-purchasable elements in a BOM. Because the resulting item list is often used as a guide for purchasing items, it is commonly referred to as a purchasing BOM. A purchasing BOM is typically created manually during product development.","The creation of flattened and purchasing BOMs is often combined, resulting in a flattened purchasing BOM. As can be appreciated, the manual process of creating the flattened purchasing BOM is time-consuming and prone to human error.","In a typical industrial setting, a single company manufactures many products each of which requires a BOM. Each such BOM may include common parts and subassemblies. In such situations, it is desirable to maintain a master item list (also called a master element list) of the items used in the company's products and to require that all items in the company's BOMs be included in the master item list. Generally a company's master item list and the BOMs that it references are confidential, e.g., closely guarded trade secrets, as access to such information would assist a competitor in replicating the company's products. The secrecy of such information is even more critical during product development, when access by a competitor would permit the competitor to anticipate the company's future direction and future product features. Thus master item lists and BOMs are conventionally maintained on a company's computer system and not placed in a common computing environment with data from other companies. Further, multiple companies' BOM data is never stored in a single database.","While the master item list and the collection of product BOMs as a whole are generally kept secret, a company must share information about individual items including discrete parts and subassemblies with its suppliers in order to permit the suppliers to manufacture the parts and subassemblies. In cases where a company uses a contract manufacturer to produce an entire product on a turnkey basis, the company must share the entire product BOM with the contract manufacturer. Currently, with prior art systems, information is shared with suppliers on an ad hoc basis, with individual engineers or purchasing agents mailing or e-mailing product documentation to the suppliers. As a result, suppliers frequently have out-of-date or otherwise incorrect information about items and subassemblies. This method of sharing information does not enable a company to easily determine which information each supplier has and if the release of the information is appropriate.","Various software tools have been developed to manage BOMs. Each of these tools provides limited functionality to address a specific aspect of BOM management. For example, to facilitate the manufacturing process and to plan the procurement of product components, conventional computer software called Manufacturing Resource Planning (MRP) software may be employed. MRP software uses a product BOM as the basis for such planning. However, MRP software is very complex to use. In addition, MRP software typically assumes that the product BOM changes very infrequently and as a result only provides inadequate tools for entering changes to the BOM. For these reasons, MRP software is rarely used during product development, when the product BOM may be changing on a daily or weekly basis and ease-of-use is important. Further, the calculations performed by MRP software are quite intensive and a single computer or server is typically dedicated to running the MRP software for one company or user. The computer used for this purpose is typically housed on-site at the company for security and convenience.","The most common category of software tool used for BOM management during product development is the general-purpose spreadsheet, of which Microsoft Excel\u00ae is an example. However spreadsheets are not well suited to BOM management. As noted above, a BOM is a complex collection of information that is typically developed and used by a group of people working together. Such information is more efficiently managed with a multi-user, relational database, while a spreadsheet is best characterized as a single-user flat-file database.","Examples of database applications employed to manage BOMs include Agile Anywhere\u00ae by Agile Software Corp. of San Jose, Calif. and Vendors\u00ae by Trilogy Design of Grass Valley, Calif. These applications provide a dedicated multi-user database for managing a single company's master item list and related BOM data during product development, including vendor and inventory information and item specification documents. However, these applications do not provide any means to maintain master item lists and BOM data from multiple companies or unrelated users in a single computer system or in a single database.","Furthermore, the set-up and management of dedicated computer systems for BOM management is difficult and expensive. This fact is widely recognized, as is evidenced by Agile Software's \u201cHosting\u201d service. This service permits a company to pay Agile Software to maintain a dedicated BOM management database on a dedicated computer at an offsite facility with access to the database provided by secure connections over the Internet. Agile Software claims to be able to set up a customer with hosting in \u201c . . . as little as four weeks\u201d (Agile Hosting Datasheet, Document #DSHOST-B 06\/00, Agile Software Corp.).","The hosting of data from more than one company in a single database is known in the art. For example, Yahoo! Corporation provides a service that permits companies to set up virtual storefronts or catalogs on the Internet for presentation to potential customers. These and related services allow companies to combine non-confidential catalog data into a common database managed by a third party and thereby reduce the cost of set-up and maintenance of an electronic commerce Web site. A notable feature of such services is that the hosted data is considered non-confidential by the participating companies.","Known database systems further enable a contract manufacturer to combine BOM data from multiple customer companies into a single database using conventional MRP or BOM management software. As such, the contract manufacturer combined database is a BOM management database for the contract manufacturer and is established for the sole use of the contract manufacturer. In particular, the contract manufacturer is not permitted to keep track of which customer supplied which data, except through cumbersome manual tabulation and labeling of individual item and BOM relations. Furthermore, customer companies of the contract manufacturer are not generally permitted access to the combined database, as this would violate the confidentiality of other customer companies' data. In the rare situations where customer access is permitted, access privileges must be administered on an ad hoc basis by manually designating which BOM data should be available to which customer. In addition, the combined database represents a duplication of BOM data, that is, the customer maintains one representation of the product BOM on their own system, and the contract manufacturer maintains a second representation on the contract manufacturer's system.","Master item lists in prior BOM management systems include only items as represented by the company that owns the system. That is, the namespace of the items is only for the company that owns the BOMs. The same item cannot appear in another company's BOM, but rather a duplicate instance needs to appear in that other BOM. As a consequence, prior art BOM management systems do not permit representation of another company's items as distinct entities within the BOM management system of a company. For example, documents and information such as supplier datasheets are typically duplicated by the supplier's customer companies and then stored and tracked under each customer company's item identifier, e.g., item number. In some cases, the same supplier item may be approved for use as multiple items for the one customer. For example, a single supplier's 1% tolerance resistor may be approved for use as the one customer's 1% tolerance resistor and also as the same customer's 5% tolerance resistor. In such a situation, the supplier's item information is replicated multiple times in the customer's BOM management system. This presents difficulties when the supplier changes the supplier item data, as each of the duplicate representations of the supplier item in the customer's BOM management system must be updated individually. Thus, there is a need for a BOM management system that permits a company to maintain representations of other companies' BOM data, including items, while minimizing the duplication of such data.","Conventional software tools further include those that provide for the analysis of BOM data and the categorization of items in a master item list. During product development and production, it is common to categorize components as line items of a BOM by type such as molded plastic part, printed circuit board, and integrated circuit and then to conduct design analysis to determine the relative number and value of each type of component contained in a particular product or group of products. A typical statement that would arise from this type of analysis is \u201cin product X, mechanical components account for 5% of the total number of components and 25% of the overall product cost.\u201d This type of analysis is often done to direct cost-reduction efforts, both in development and in production.","Because of the recognized need to categorize components by type, developers of software tools that manage and maintain item lists (also called element lists) and BOMs conventionally include functionality that permits component type categorization. This functionality is implemented with either a fixed \u201cbuilt-in\u201d scheme for type categorization, or support for a single user-specified application-specific categorization scheme. When implemented, these solutions permit only one level of categorization, so either the developer or the user of the software tool must decide how many different categories to include, and what level of detail to include in each category type.","When the categorization scheme is specified by the software tool developer, problems arise because different users typically want different categorization schemes. For example, a manufacturer of optical equipment may need a very precise categorization of different lens types and have no need for a categorization of electrical components. Alternatively, a manufacturer of door locks would need a detailed categorization of mechanical components, but have no need to categorize lenses or electrical components.","Problems also arise when a company using the software tool can specify the categorization scheme in their implementation of the categorization. Different individual users of the system need different levels of detail in the categorization scheme. Clerks who assign item numbers typically prefer a simple system with few categories, as less technical knowledge is required to correctly categorize an element. Engineers and technical managers typically prefer a system with more categories, because this is more useful in performing design analysis. A technical manager may prefer relatively few, broad categories (for example, electrical, mechanical, packaging), while the individual engineers typically want categories that reflect a much more precise categorization. However, even different engineers typically care about different levels of detail. An electrical engineer may wish to categorize electrical components very precisely, but be happy to group all mechanical components together into one category. Conversely, a mechanical engineer may want to categorize mechanical components very precisely and not care about electrical components. Conventional systems do not have the flexibility to meet these varied preferences.","The difficulty of addressing component categorization in a way that adequately serves the needs of different companies and different users within the company is so severe that many developers of software tools that manage and maintain item lists and BOMs have chosen to omit this functionality. Furthermore, prior art categorization systems are inflexible and limited in their use. They do not adapt well to specific applications and are inadequate for analyzing BOMs. Prior art categorization systems also do not support multiple categorization levels, inheritance of category properties, and multiple views of category detail.","In sum, conventional systems do not provide for the flexibility required of BOM management systems. For example, prior art technology does not facilitate the sharing of information between BOMs, particularly when the BOMs are developed by different users. The lack of shared BOM data inhibits activities such as identification of vendors, rating of parts, rating of vendors, rating of manufacturers, calculation of cost estimates, identification of components and alternative components, and execution of electronic transactions. In the prior art, the presence of an element, and data concerning that element, in a BOM is not fully exploited when a second BOM is developed. The prior art technology also does not facilitate the presentation of a variety of views of a BOM or a variety of views of elements within a BOM. Finally, there are no means by which data within a BOM can be used to provide a user with additional useful information about related elements and products.","Conventional systems do not facilitate grouping of user data across separate BOMs. For example, there are no prior art systems for storing more than one BOM, owned by more than one user, in a single namespace. A single namespace includes a set of names, each a unique identifier. The names, for example, may be one or more primary keys of a database. Thus a single namespace shares the one or more primary key to uniquely identify the entity of the key. In the prior art it is not possible to store multiple BOMs within a single data file or set of files that share a set of one or more primary keys, while maintaining ownership and\/or access control to individual BOMs and to the BOM data, and for sharing BOM data among stored multiple BOMs, with the BOMs not necessarily having the same owner. Thus, the prior art does not allow the storage of BOMs from multiple companies, or any other \u201cowning\u201d entity, in a single database or similar computational process. Advantages of BOM aggregation are therefore not achievable in the prior art.","Described herein is a method for managing a plurality of bills of material (BOMs) that includes storing a database in a processing system. The database includes a list of elements each having a unique identifier. one or more elements of the list of elements being for inclusion in one or more of a plurality of bills of material (BOMs). The database further includes one or more data structures for storing the plurality of BOMs. Each BOM is describable as a tree. Each node of the tree is an element of the list of elements. At least one element in two or more of the BOMs is associated with an owner of a set of owners. Two or more of the BOM are associated with a respective owner of the set of owners. The database may contain two BOMS associated with two different owners.","The method further includes providing remote access to one or more items of information in the database to one or more users,","In one embodiment, at least one of the BOMs includes confidential information of the owner of the BOM such that that unrestricted access to the confidential information is limited to the owner and any designates of the owner of the BOM.","In one embodiment, one or more elements in the element list are associated with a respective owner of the set of owners. The list of elements includes an indication of ownership for each element associated with one of the owners. The method includes restricting access to information about a particular element in the element list that is associated with a particular owner to the particular owner or any designates of the particular owner.","A first BOM of a first owner may share one or more elements of the list of elements with a second BOM of a second owner.","In one embodiment, each BOM data structure is for storing the parent-child relationships for at least one BOM of the plurality of BOMs. A BOM data structure includes, for a particular BOM, an entry for each element in the particular BOM. That element entry includes a reference to the element's entry in the list of elements, an entry indicating the owner, and an entry indicating any child of the element in the case the element has a child in the tree representing the particular BOM.","The database maintains the BOMs of multiple owners in an element relations list and also a master item lists (the element list), so that such data is maintained in the one database or in the one computer environment. Having this data in the one database provides different views and different views and different levels of access of a single BOM to different users depending on the owners associated with the user and\/or with the BOM.","The database containing the BOM data associated with more than one owner may be stored remotely from the different users of the system. Each remote user may access the database. In one embodiment, the access is provided by secure connections over the Internet.","The data stored in the database may be confidential to one or more of the owners.","One aspect of the invention is the automatic assigning of access privilege and view according to the identity of the user, for example according to the owner associated with the user or with the role played by the user.","By maintaining representations of a set of owners' BOM data, including a single list of items, the duplication of item data is significantly reduced.","One aspect of the invention is the analysis of BOM data that includes the private categorization of items in a shared master item list. Thus different owners may use different categorization schemes for the same items. Such categorization includes multi-level categorization.","One aspect of the invention is the sharing of information between BOMs, even in the case that the BOMs are associated with different owners. Including the BOM data associated with several owners in the same database provides for identification of vendors, rating of parts, rating of vendors, rating of manufacturers, calculation of cost estimates, identification of components and alternative components, and execution of electronic transactions.","One aspect of the invention is the storing multiple BOMs within a single database that share a set of one or more primary keys, while maintaining ownership and\/or access control to individual BOMs and to the BOM data.","In one aspect of the invention, data of the database may be grouped together into a \u201cworkspace.\u201d In one embodiment, each workspace has an owner, i.e., an entity such as a company. One embodiment includes some common data provided for convenience, e.g., common conversion factors and currency data, that is made available to all workspaces.","In another aspect of the invention, a workspace is defined as a set of data of the database having the same owner.","A vendor list includes data related to vendors for elements in the element list. Vendor list also optionally includes, for each vendor, vendor identification data such as one or more of vendor name, vendor contact information, and vendor identification number.","The database includes a vendor element relations list that includes data delineating which vendors of vendor list supply BOM elements of the element list. The vendor element relations list describes the sourcing relationship between an item in the element list and a supplier in the of vendor list. The vendor element relations list optionally further includes information about the quantity of each element that the referenced vendor can supply.","In one embodiment, the user list includes information data to associate one or more users with a vendor in the vendor list. In one aspect of the invention, code is included that uses this data associating users and vendors in conjunction with vendor element relations list to permit users associated with a vendor to access elements in the element list that are supplied by the vendor.","In one aspect of the invention, elements from multiple BOMs from multiple users are stored together in the element list. These users may \u201cown\u201d BOMs or workspaces that include private user specified element lists. These users, through ownership, control access to and manipulation of data within those BOMs. For example, in one embodiment, multiple companies can add elements in the element list while only those elements introduced or owned by a specific user are edited by that user. The user can provide a variety of access privileges to other users such as other employees of the same enterprise.","Computer code operating within a processing system disaggregates multiple BOMs in the element relation list and\/or the element relation list owned by multiple owners into individual elements, remove proprietary information from the data of the elements, and then compiles the non-proprietary information into a database of sources for the elements. The database of element sources allows computer code operating within the system to recommend sources for elements when a user creates a new BOM.","The foregoing and other aspects of the invention will become apparent to those of ordinary skill in the art after having read the following detailed description as illustrated in the various drawing figures.","The invention provides a method for managing BOMs of disparate owners in the same environment. Each BOM has an owner. An owner's BOM includes confidential information such that unrestricted access to the confidential information is limited to the owner and any designates of the owner. In particular, one embodiment of the invention and maintains a list of items that include the items in the BOMs of the different owners. A unique identifier is used for each item of the list. The item identifiers thus form one namespace. BOMs of different owners share data including confidential data within the same namespace.","The invention may be practiced on a computer system that may be a single computer system or a distributed system.  illustrates a processing system  in which the invention may be practiced. The system  is conventional, and many variations are possible. The simple example shown in  includes at least one central processing unit , a \u201cmemory\u201d , and an input\/output (I\/O) interface , all connected by a \u201csystem bus\u201d . The term system bus is used herein to denote all the busses across which different elements of the system  communicate, and thus typically includes more than one physical bus. I\/O interface  connects system  to users and vendors via a communications network such as the Internet, thereby allowing system  to exchange data with users and vendors. I\/O interface  is thus a general term used her to denote more than one means for communicating data. I\/O interface  thus alternatively connects System  to users and vendors via telephone lines and modems, or by any other means for sending and receiving digital data. By the term \u201cmemory\u201d such as memory  is meant one or more elements including at least one read and write capable memory device. Thus, memory  typically includes RAM and multiple memory\/storage systems such as magnetic storage (hard disks, and so forth), optical storage, ROM and\/or any other memory appliances. In addition, system  optionally includes a keyboard\/mouse , a monitor , and other peripheral devices (not shown).","The system and method of the invention may alternatively be practiced in a distributed system, and one such distributed system, generally designated , is shown in . The distributed system  uses the internet  and includes routers , demilitarized zone virtual LANs (DMZ VLAN) , firewalls , load balancers  that each include database a (DB) VLAN  and a Web VLAN , one or more other DB VLANs  and Web VLANs , database servers , Web servers , RAID storage , VLANs , a management VLAN , a monitoring VLAN, and a connection  to a managing entity. Various elements are disposed in a mirrored and redundant architecture. Monitoring VLAN  and Management VLAN provide control of the distributed system . It will be understood by those in the art that various distributed architectures, not just that shown in , may be used.","As illustrated in  memory  includes a server code  and a database management system that in one embodiment is a relational database management system (RDBMS) that maintains a database . The RDBMS may be incorporated in the database , or may be part of server code . Server code  includes a variety of application code supporting a plurality of applications. Memory  also stores an operating system  such as Microsoft Windows NT\u00ae, Linux\u00ae, or Sun Solaris\u00ae that is capable of supporting server code , and the database management system maintaining the database . Database  includes a data owner list , an element list , and an element relations list . Database  optionally includes a user list  and none or more additional database modules . Elements within additional database modules  are stored separately or combined in a variety of data structures.","Database  optionally is a distributed database and may be located at one or more locations, e.g., on a distributed system such as system .","As described in more detail below, the data owner list maintains information about one or more owners. An owner is an entity that may own one or more BOMs stored in database . The element list  is the list of items that may be in the BOMs. Thus, element list  is a list of items, each of which may be represented as a node in a tree representing a BOM. The element relations list  describes the relationship between items, i.e., elements in element list , in the one or more BOMs. Thus, element relations list  describes the structure of the BOMs stored in database . The user list described the users of the system who may have one or more types access to the data in the BOMs.","Element list  lists individual items that may be in at least one BOM. Such an item can be a physical element, or can reference a set of steps or operations. Such an item can itself be a BOM. Examples of possible elements within element list  include custom mechanical operations such as injection molding, extrusion, and stamping; standard mechanical components such as fasteners and O-rings; printed circuit boards; standard electrical components such as resistors and capacitors; programmed electrical components such as ROMs and ASICs; and the like.","According to one aspect of the invention, Multiple lists of elements from multiple BOMs associated with multiple users or companies can be combined in element list . Additional parameters related to each element are also stored in association within element list . For example, a single element can have an associated description, user and vendor part numbers, cost per item, owner including which company placed the item in the element list , and other information.","In one embodiment, owner information is included in the element list . Such owner information is particularly important because it enables server code  to limit access to particular elements of list  to owners of the particular elements, and in one embodiment, also to the owners' respective designates. An \u201cowner\u201d is either a single user or an enterprise. In this disclosure, the term \u201cuser\u201d refers to either a single user or a group of users. The subset of element list  owned by a user is referred to as the user's \u201cprivate element list.\u201d","In one aspect of the invention, data of database  may be grouped together into a \u201cworkspace.\u201d In one embodiment, each workspace has an owner, i.e., an entity such as a company. One embodiment includes some common data provided for convenience, e.g., common conversion factors and currency data, that is made available to all workspaces. The private element list is the subset of element list  within the workspace of a user designated by the owner of the workspace.","In one aspect of the invention, server code  when running provides access to database  only to users represented in user list . In yet another aspect, server code  provides access to database  only to users represented in data owner list . For each user permitted to access database , server code  identifies data owners represented in data owner list  for which the user has been granted access rights.","Element relations list  provides data describing the relationships in one or more BOMs between various items in element list . For example, in one BOM, a first element (or parent element), e.g., a flange, in element list  can include four of a second element (first child element), e.g., four bolts, and two of a third element (second child element), e.g., two strengthening members. Therefore, producing two of the first element, e.g., two flanges, requires the acquisition of eight of the second element, i.e., 8 bolts, and four of the third element, i.e., four strengthening members. Other children may include welding the members, and so forth. Element relations list  can be used to represent other relationships such as physical or electrical connectivity or assembly order. In general, element list  is used to represent the tree structures of the BOMs, i.e., the hierarchical structure, e.g., with subcomponents filling branches below an element node.","The data items in database  are stored as one or more data structures that, for the case of the database management system being a RDBMS, are tables.  shows\u2014in simplified form\u2014an owner list data structure  for data owner list  according to one aspect of the invention. Owner list data structure  includes a plurality of data records  (rows of the table in the RDBMS case) and typically includes more data records  than the simplified form illustrated in . Each data record  includes several data fields , including a unique owner identifier data field . In one embodiment, the contents of unique owner identifier data field , called owner identifiers herein, are required to be unique with respect to all other data records  of the owner list data structure , and can therefore be used to index and uniquely reference any particular data record  within the namespace of the owner list data structure . In one embodiment, unique owner identifier data field  is a primary key for owner list data structure . In one embodiment, the namespace of database  includes the set of unique owner identifiers. Owner list data structure  optionally and typically includes other data fields .","On one embodiment of the invention, a separate user list is maintained in database  for the users. In one relational database embodiment, the data structure for the user list  is a table.  shows\u2014in simplified form\u2014such a user list data structure  that includes a plurality of data records  (rows), typically more than shown in the simplified illustration of . Each data record includes several data fields generally designated . User list data structure  includes a unique user identifier  and in one embodiment, an owner data field . Each owner data field  contains an owner identifier, and thus matches the contents of unique owner identifier data field  in one and only one owner list data record  of the owner data structure . Thus, owner data field  may references the unique owner identifier data record  as a foreign key. The usernames, i.e., the contents of unique user identifier data field  are a primary key for user list data structure  within the namespace of database . User list data structure  may and typically does include other data fields  such as user username data field  and user password data field . The user password is for containing a password. Password in this context includes biometric data such as fingerprints or voice print or retinal images or any other data used to identify a user and provide access to data to that user. Additional data fields  are optionally added to user list data structure  as desired.","In another embodiment of the invention, no separate user list  need be included in database . In such an embodiment, users and owners are considered identical. Thus the data owner data structure  includes as part of other data fields  an owner username data field  and an owner password data field . In this case, user list  is typically omitted from database .","In one relational database embodiment, the information about items, i.e., the element list  is stored as a table. Such a table is illustrated\u2014in simplified form\u2014in  as an element list data structure  of element list . Element list data structure  includes a plurality of data records  (rows) and typically includes more data records  than shown in the simplified illustration of . Each item has a record in element list data structure , and each record has a unique identifier. Each data record  includes several data fields generally designated . One of the data fields is an element identifier data field  that contains a unique identifier for the item. In one embodiment, each record also includes an owner data field  that identifies an owner, i.e., that identifies a record of owner data structure . Each item is uniquely identified by the item identifier, so that the item identifiers form a namespace, and the element identifier data field  is a primary key for element list data structure  within the namespace of database . Thus, the element identifier data field  is also called the element primary key data field. Owner data field  references unique owner identifier data field  as a foreign key. In one embodiment, each element record also includes a workspace context data field , the purpose of which is explained in more detail below.","Each record of element list data structure  also includes one or more other data field generally designated , including in one embodiment an element name data field , in another embodiment an element number data field , and in yet another embodiment, both fields  and . The element number data field  contains an element (part) number for the item associated with the individual data record . The element name data field  includes further identifying information regarding the item associated with the data record . There typically are other data fields. For example, there may be a unit of measure data field, a price data field, a quantity at hand rata field, and so forth. Users of the system may create additional data fields.","In one relational database embodiment, the information that relates items to other items, i.e., the element relations list  is stored as a table. Such a table is illustrated\u2014in simplified form\u2014in  as an element relations list data structure  of element relations list . Element relations list data structure  includes a plurality of data records  (rows) and typically includes more data records  than are shown in the simplified form of . Each data record  includes several data fields generally designated . In one embodiment, each element relation record in data structure  has a unique identifier. In such an embodiment, the unique identifier of each record is maintained in an element relations identifier data field . In the relational database embodiment, this field can be a primary key for the table. Thus, as shown in , the element relations identifier data field  is also called an element relation primary key data field . Thus, each branch in the tree of each BOM has a unique identifier. Each record of data structure  further includes an element parent data field , and an element child data field . In one embodiment, an owner data field  also is included. Element parent data field  contains a reference to one of the records of the element data structure . Element parent data field , for example, references element identifier data field  as a foreign key. For any record that has a child, element child data field  also references an item of the element data structure , e.g., by referencing the element identifier data field  as a foreign key. Owner data field  defines the owner of the relationship e.g., as a reference to a record of the owner data structure , e.g., by referencing unique owner identifier data field  as a foreign key.","Element relations list data structure  is used to represent BOM relationships between items of the one or more BOMs stored in the database. Such items are elements represented by data records  in element data structure . For example, suppose data record A () represents a BOM or an item in a BOM, and that BOM or item has at the next level a BOM element represented by a data record B (). This might be represented in element relations data structure  by a data record A would contain a reference to data record A in element parent data field , and a reference to data record B in element child data field . Thus table  describes the parent of any item if a parent exists, and the one or more children of any item if the children exist. Each BOM would have the same owner. A BOM is describable as a tree. The root of the tree is the base item of a BOM. When a parent item and a child item are referenced in a single record of element relations list data structure , this indicates that the parent item contains the child item in its BOM. An item that has no children, i.e., a leaf item, is a single component, process, or document that contains no further items.","Thus, by creating one data record  for each BOM element relationship included in a bill of materials, i.e., for each link of the tree of the BOM, it is possible to capture structured, multi-level bill of materials relationships between BOM elements.","Various applications of this method will be apparent to those skilled in the art. For example, element relations list data structure  optionally includes other data fields  in addition to element parent data field  and element child data field . In one embodiment, other data fields  include child quantity data field , which contains a number indicating how many of the child BOM elements are included in a the parent BOM element, i.e. a record of data structure . Users of the system may typically specify the other data fields . Also shown in  is optional workspace context data field , the purpose of which is explained below.","One embodiment further includes additional data in database . In one relational database embodiment, such additional data is stored in a table.  is a simplified illustration of a generalized data structure  for such additional data. Generalized data structure  includes a plurality of data records  (rows) and typically includes more data records  than are shown in the simplified representation shown in . Each data record  includes several data fields generally designated . In one embodiment, generalized data structure  includes a data field  for a unique identifier of each record. In the relational database embodiment, this unique identifier data field  may be used as a primary key for generalized data structure , and thus is called the primary key data field  in . One embodiment further includes an owner data field  for each record that may reference an owner for the record. In one embodiment, the contents of owner data field  is one of the unique owner identifiers of identifier data field , and thus in a relational database embodiment, identifier data field  references table  as a foreign key. At least one other data field  is used for other data owned by the user or data owner indicated in owner data field . In one embodiment, generalized data structure  also includes a workspace context data field . One embodiment further includes, as part of the other data fields , an element name data field . One embodiment further includes an element number data field . Other or alternate data fields such as vendor identifier data fields, and so forth may be included.","In one embodiment, generalized data structure  is used to store all data within memory  that is owned by an entity represented in data owner list . In one aspect, a user referenced by a particular data record  in user list data structure  is granted access by application code  to all data stored in various instances of generalized data structure  for which the contents of the owner data field  in generalized data structure  match the contents of the user's named owner data field  in user list data structure . In other aspects, server code  uses a more complex algorithm to determine a list of one or more data owners represented in data owner list  for which a user represented in user list  has been granted access rights (the user's access list).","Server code  interacts with database  to restrict users to viewing and editing data stored in generalized data structure  for which the data owner referenced in owner data field  is included in the user's access list. In addition, when a user creates a new data record  in any particular instance of generalized data structure , server code  interacts with database  to automatically set the contents of owner data field . In another aspect, the contents of owner data field  are set to match the contents of the user's named owner data field  in user list data structure . In other aspects, server code  uses a more complex algorithm to set the contents of owner data field .","In another aspect of the invention, a workspace is defined as a set of data of database  having the same owner. For example, data records in data structure  with a common owner may be considered part of that owner's workspace. Thus, data records  of generalized data structure  may be grouped by owner data field . The set of data records with a common owner is considered part of that owner's one or more workspaces. The workspace is identified in table  by the contents of workspace context data field .  shows data records A, B, and C as being included in a workspace \u201cA\u201d A. Thus, all these records would reference the same owner in their respective owner data field  and the same workspace (\u201cA\u201d) in their respective workspace context data field . Likewise, data records D through I are divided between workspace \u201cB\u201d B and workspace \u201cC\u201d C. Each of these workspaces typically but not necessarily has a different owner. That is, one owner may in general own more than one workspace. For simplicity, the case of each owner having one workspace is described herein. Owners have control of rights and preferences within their workspaces. They can delegate rights, add records, and delete records. Owners determine what information within their workspace is available to other users and owners. The division of BOM data into individual private workspaces under a single namespace enables significant utility.","Generalized data structure  is optionally used within many of the lists and files in database  and is not restricted to use with data that includes BOM elements. For example, in various aspect of the invention, generalized data structure  is used to facilitate the storage of vendor lists, shipment lists, transaction lists, and other data related to various aspects of the invention.","Inclusion of an owner data field in generalized data structure  enables the aggregation of data from multiple owners, within a single namespace, in each list in which generalized data structure  is incorporated. An owner's workspace can include any of these aggregations and can reside in files storing BOM elements, vendors, transactions, and\/or other related data.","Optional workspace context data fields  in generalized data structure  are used to store data indicating the context in which other data within the data record  is to be interpreted. For example, while the element identifier of an item is unique in database , it is common for two different users to use different element numbers for the same element. In one aspect data within the workspace context field  identifies a user whose element number is used in the element number data field . This user can be different from the user that owns the record  that includes the element number data field . The ability to define context enables owners to make proxy representations of data owned by others. Element numbers can be aliased to reconcile differences in element numbers used by different parties.","The other data fields may include one or more identifying fields in addition to or as an alternative to the data fields  and  shown in . For example, when generalized data structure  is used to facilitate the storage of a vendor list element, a vendor identifier data field may be included.","In one embodiment, database  includes additional database modules . Not all embodiments include these additional database modules . In a relational database embodiment, one or more additional tables may represent the additional database modules.","In one embodiment, the additional database modules  include, as shown in , a vendor list , an vendor element relations list , transaction data , vendor transaction history data , and pre-calculated vendor ratings data .","In one embodiment, the vendor list  is a subset of data owner list  so that vendor list contents are represented by records in the owner data structure . In another embodiment, the vendor list  is maintained separately from data owner list , so that a separate data structure is used to represent the vendors.","Vendor list  includes data related to vendors for elements in element list . Vendor list  also optionally includes, for each vendor, vendor identification data such as one or more of vendor name, vendor contact information, and vendor identification number. Vendor element relations list  includes data delineating which vendors, of vendor list , supply BOM elements of element list . Vendor element relations list  describes the sourcing relationship between an item in the element list  and a supplier in the of vendor list . Vendor element relations list  optionally further includes information about the quantity of each element that the referenced vendor can supply. For example, a vendor is able to supply up to 1,000 of an element per month with a minimum order of 500 units. In contrast, a second vendor is willing to supply lower quantities, perhaps for use in the conceptual or design phases of a user's product. Further, a third vendor is a manufacturer and has the ability to deliver vast quantities of the element. A vendor may be s reseller that resells an element in lower quantities, or a manufacturer that produces an element and supplies it to a client. Vendor element relations list  optionally includes, for each vendor element relation, data indicating whether the vendor is a reseller or a manufacturer.","In one embodiment, user list , and thus the user data structure  includes data to associate one or more users with a vendor in vendor list . In one aspect of the invention, server code  uses this data associating users and vendors in conjunction with vendor element relations list  to permit users associated with a vendor to access elements in element list  supplied by said vendor. Users typically enter vendor element relationship data into with vendor element relations list  in order to facilitate future purchasing of an item of element list . The data associating users with a vendor permit users associated with a vendor to gain access to data for one or more BOM elements and related BOM data, and this provides significant utility. In particular, there is a substantial reduction in the amount of work required to administer access to BOM data. In addition, the timeliness and accuracy of the shared data is improved, because the vendor's users gain automated access to the most current BOM data stored in the system.","Transaction data  includes information used to support transactions. In one embodiment, the data in vendor transaction history  includes the number of each transaction type completed for each vendor. Transactions with vendors may be electronic. Each time an electronic transaction is completed (see below), in one aspect of the invention, the vendor transaction history  is updated with a record of the transaction. For embodiments that include pre-calculated vendor ratings data , this data  includes summaries of such items as the timeliness and reliability of one or more vendors in vendor list . In one embodiment, pre-calculated vendor ratings  are automatically updated at pre-established intervals or whenever a user requests a vendor rating.",{"@attributes":{"id":"p-0107","num":"0106"},"figref":["FIG. 10","FIG. 10"],"b":["940","940","940","1010","1020","1030","1040","1050","1060","1070","940"]},{"@attributes":{"id":"p-0108","num":"0107"},"figref":["FIG. 11","FIG. 11"],"b":["930","930","930","1130","1140","1150","1160","1170","1180"]},"Different embodiments of list of supported transaction types  include one or more of transaction types such as element availability inquiries, e.g., inquiries regarding whether a vendor carries an element, manufacturer availability, e.g., inquiries regarding whether a vendor carries elements from a specific manufacturer, quantity of elements \u201cavailable to promise,\u201d e.g., the quantity of items in stock and unordered, price request for a specific quantity of items, price schedule as a function of quantity, lead time request for a specific quantity, lead time as a function of quantity, requests for quotation, quotation provided, e.g., from vendor to user, purchase order issued, e.g., from user to vendor, PO acknowledged, e.g., from vendor to user, promise to ship, e.g., from vendor to user, notification of shipment, e.g., from vendor to user, notification of receipt e.g., from user to vendor, and so forth.","Different embodiments of supported transaction protocols  include one or more of fax, e-mail, e-mail containing the URL of a Web form for entering vendor response, Rosettanet\u2014a non-profit organization (www.rosettanet.org) that seeks to implement standards for supply-chain transactions on the Internet, Electronic Data Interchange (EDI), postal mail interface, manual protocols such as voice telephone calls, and the like. These protocols are implemented by system  or distributed system , and associated with interfaces described below with reference to .","In one embodiment, vendor and transaction type\/protocol relations  a list of vendors and vendor protocols associated with items in element list . The vendor and transaction type\/protocol relations  include the vendors that can supply an item and which protocol to use for each transaction type with each vendor when requesting the element.","In one embodiment, private user-specified element list  is a subset of element list  with access control so that each enterprise or user can only see selected elements. The user can transfer elements to private user specified element list  from element list , thereby eliminating the need to enter specification data for each element. In one aspect of the invention, private user-specified element list  includes some elements not included in element list . The element list further can include different element numbers assigned by the user, different element names, and different categorizations (se below).","In one embodiment, private user-specified element relations  includes relations that are applicable to private user-specified element list . Private user-specified vendor list  optionally includes a list of at least one vendor for each of the elements in private user-specified element list . Private user-specified vendor list  is generated by the user and is only accessible by the user or his designates. Private user-specified vendor list  optionally makes reference to vendors listed in vendor list  and optionally includes new or unknown vendors.",{"@attributes":{"id":"p-0114","num":"0113"},"figref":"FIG. 12","b":["210","1200","200"]},"At a step , server code  receives from the user at least one private user specified element list  of identified elements (uniquely identified for that user), the elements' attributes, and the elements' relationships to each other, i.e. parts of one or more BOMs. Each of the elements may be a process, a mechanical component, an electrical component, or any other uniquely identifiable element required for the building of a product. Attributes or properties of the elements include quantity of the element required to produce a product or subassembly, part number, and description.","At a step , the RDBMS for database  stores any or all of the elements within private user-specified element list  and their attributes in element list , if such elements are not already included in list . The RDBMS for database  stores, under user instruction, relations between the elements (such as parent-child relationships) in element relations list . Further, the RDBMS for database  stores vendor and\/or manufacturer information for each element in vendor list , typically as a result of user input.","In one aspect of the invention, elements from multiple BOMs from multiple users are stored together in the element list , e.g., in table . These users may \u201cown\u201d BOMs or workspaces that include private user specified element lists. These users, through ownership, control access to and manipulation of data within those BOMs. For example, in one embodiment, multiple companies can add elements in element list  while only those elements introduced or owned by a specific user may be edited by that user. The user can provide a variety of access privileges to other users such as other employees of the same enterprise.","One embodiment of the invention provides for creating a BOM from the list of publicly accessible items. In the master item list, there may be items to which access is not restricted. Such items are called public items. One aspect it the incorporation of such public items into a user's BOM. For example, it may be desirable for an owner to build a BOM wherein as many as possible of the elements are easily obtainable as indicated by the items being public. At a step , server code  sends an interface to a user via the Internet, or similar communications means, for relating elements from element list  into a private user specified element list  or private BOM (in element relations list  as kept in table ). In one aspect the user builds and accesses a list of public elements that are accessible by all users and incorporates and relates those public elements into a BOM. The BOM is presented as a fully nested view with user-selectable expansion of subassemblies\/levels. Further, the BOM is expandable down to a specified level or alternatively only a specific level can be viewed. The interface also allows flattened and component viewing. At a step , the method terminates. Vendors optionally provide elements to element list  for public access. The user-specified element list  or the BOM can be loaded into the workspace  of the user within the database .",{"@attributes":{"id":"p-0119","num":"0118"},"figref":"FIG. 13","b":["207","600"]},"Flattening and aggregation may be applied to a subset of a BOM. The operations may also be performed to support pre-computed views.","At a step , server code  receives a request from a user to send a flattened BOM. At a step , server code  optionally verifies the user's authority to access the BOM that he has requested. At a step , server code  verifies the user's authorization by confirming that a user-entered password matches the password listed in user\/enterprise list . In alternative embodiments, server code  verifies the user's authorization via another means for confirming identity. Such other means may be one or more of fingerprint matching, or retinal scanning or another biometric technique, or another non-biometric technique. If the user is not authorized to access the BOM, the method ends at a step . Alternatively, the user is prompted to reenter his or her password. Further, in one embodiment, the user is locked out of the BOM if he fails to enter the correct password multiple times in a pre-specified time period.","If the user is authorized to access the requested BOM, then at a step  the RDBMS for database  aggregates and flattens the user's BOM. Step  includes the RDBMS for database  identifying the BOM and which items in element list  are parts of the user's BOM using the element relations data  (table ) and matching the user identifier if the owner data field  associated with each element in the BOM. Step  includes extracting the BOM information from the element relations data  (table ) and flattening and aggregating the BOM. At a step , the RDBMS for database  produces a list of BOM elements that include the aggregated and flattened BOM data. This list may be divided by or limited to purchasable or non-purchasable elements. At a step , server code  sends the list to the user and the process ends at a step .","The unique aspect of having a collection of multiple BOMs from multiple users, organizations, or companies within a single system, and the relationships among elements, provide several aspects of the invention. These include automated development of vendor lists, enhanced calculation of system costs, improved element classification, vendor ratings, electronic transaction processing, and targeted advertising based on elements within a BOMs. These aspects are disclosed in detail below.","Development of Vendor Lists","In one aspect of the invention, the data in database  including element list  is used to generate one or more vendor lists, e.g., primary or alternative vendor lists for elements. Since element list  typically includes data submitted by a plurality of users, when a user selects an element for inclusion within one of his or her BOMs, there is a possibility that the same element has already included in a BOM owned an entity other than that of the user. Computer code operating within system , e.g., part of server code  disaggregates multiple BOMs in the element relation list  (in table ) and\/or element relation list  (in table ) owned by multiple owners into individual elements, remove proprietary information from the data of the elements, and then compiles the non-proprietary information into a database of sources for the elements. The database of element sources allows computer code operating within system , e.g., server code  to recommend sources for elements when a user creates a new BOM. Sourcing recommendations are keyed by manufacturer name, vendor name, part number, or the like.","A BOM and\/or data about the elements in a BOM may include multiple interchangeable sources for one or more of the BOM elements. In one embodiment, vendor data for an owner is stored in the vendor list  and the vendor element relation list . A user can indicate one vendor of an individual element as the \u201cpreferred\u201d source, and maintain information about other \u201calternative\u201d vendors in case the preferred sources are unable to meet the requirements of the user. In one aspect of the invention, sourcing recommendations are provided using such data. In a particular embodiment, non-proprietary sourcing recommendations are provided to one owner based using such data owned by another owner.","Thus, one aspect of the invention is a method of providing sourcing recommendation using data in a database such as database  that contains a lists of purchasable elements provided to the database by multiple users or entities. The list of elements is maintained in a single namespace. The database includes information of one or more vendors for at least one element in the element list, e.g., in the form of vendor list  and vendor element relations list . Suppose an entity, e.g., an entity denoted \u201cA\u201d has an element for which a single source is known, e.g., in that owner's vendor element relations list . Because each element is uniquely identified in the element list  in the database, it is possible to search the database for other owners who use the same element, or alternately, other elements of the same or other owners that use the same vendor. For example, if the same element appears in some other owner's vendor element relations list , there may be one or more other vendors specified by that other owner. The server code can provide to entity A the identity of the alternative sources as an alternative sources recommendation without revealing the identity or any other information about the other owners or any other users. In one embodiment, the same or other elements that have the same vendor are searched in the database. If the same vendor appears in one or more vendor element relations list , the server code searches for alternate vendors that may have been provided for any element supplied by that vendor. The server code can provide to entity A the identity of the alternative sources as an alternative sources recommendation without revealing the identity or any other information about any other owners or any other users. Note that in an improved embodiment, users of the system may prefer not to allow their sourcing data to be provided to other users even without revealing identity. In an improved embodiment, the owner is provided with an \u201copt-out\u201d feature.",{"@attributes":{"id":"p-0127","num":"0126"},"figref":"FIG. 14","b":["1410","206","920","910","1420","1410","1430","1410","1440","1450","1460","1470","910"]},"Calculation of System Costs","In one aspect of the invention, data within database  is used for automatically calculate a cost estimate for a product and, in one embodiment, a figure of merit for this calculation. One method embodiment of determining a \u201crolled up\u201d product cost estimate and calculating the accuracy of the estimate based on a preliminary BOM is illustrated in .","In a step  a list of purchasable or non-purchasable elements to be included in a BOM is developed. This list is generated as one or more BOMs are populated. In a step , the list developed in step  is divided into elements that are already used by the user and newly specified elements. The division occurs as the list is developed or at the request of the user, and the division is optionally updated over time as more elements are introduced or changed. Throughout this process, elements having a known, quoted, or estimated cost are tagged as such. In a step , for each element already used by the user, cost information from previous purchasing records are automatically associated with the element. In a step  a cost estimation or price quotation is attained for each newly specified element. Users select to have quotation requests automatically generated and sent to appropriate vendors. In an optional step  a new BOM is developed and in a step  an element is added to the new BOM or a previously existing BOM. Cost estimates are for single or multiple element quantities. Steps  and  are not necessarily performed immediately proceeding steps  through .","In a step  three separate cost subtotals are calculated for the selected BOM, the subtotal of the elements with estimated costs, the subtotal of the elements with quoted costs, and the subtotal of the elements with known costs. Alternatively, these values are maintained in running subtotals. A count of the quantity of elements in each category is optionally maintained. In a step  the total cost estimate is determined by adding the three subtotals.","In a step  figures of merit for the accuracy of the cost estimates are calculated from the values generated in steps  and  or from values generated through a similar process. At a minimum, these include the percentage of the total cost represented by the estimated, quoted, and known cost subtotals, or the percentage of the total number of elements in each cost category. The perceived accuracy of individual price estimates may be considered in an algorithm used to calculate the accuracy of estimated total costs. The calculated figures of merit are optionally reported to a user.","Element Classification","In another aspect of the invention systems for simplified component type categorization and automating design analysis using said type categorizations are provided. These enable methods of multiple, application specific, hierarchical, and other types of categorizations of product components.","A table of classes or \u201ccategories\u201d is maintained in a database as part of database . In one relational database embodiment, with each category represented by at least one row within the table. Categories are related to each other in a tree-like structure, wherein each category is a parent to none, one or more child categories or elements (components). Individual categories and elements are also children to none, one, or more parent categories. The relationships between categories in this system are structurally similar to assemblies in BOMs. In one embodiment, the table of categories is combined with an element relation table (BOM) as a single table in a database. That is, each the category of element in a BOM is referenced in the BOM. In another aspect two separate tables are maintained, one of categories and another of components. The relationship between the parent and children categories and components are maintained as a \u201cparent category\u201d column in the category and element table(s). In one embodiment, a separate \u201ccategory relations\u201d table of category relationships is maintained that describes the parent-child relationship of the categories. The category relations table includes a column for the parent category or component and a column for the child element, if any. In this aspect, each categorization scheme has one \u201ctop-level\u201d category, which typically signifies a \u201cgeneric\u201d categorization. The top-level category is a parent to multiple sub-categories that typically signify broad levels of categorization, such as \u201cmechanical\u201d, \u201celectrical\u201d, or \u201cdocument\u201d. Each sub-category is a parent in turn to further sub-categories that represent subsets of the parent category. This structure is repeated as many times as necessary to reach the desired level of detail in the categorization scheme. Typically, the deepest level of category in the tree is parent to individual elements (components) that belong to that category.","According to one aspect, a user who desires to categorize a particular known element can find the appropriate category in any scheme by starting with the top-level category. The user determines which sub-category applies most closely to the element, and then move on to the further sub-categories of that sub-category. At each level in the categorization tree, if no sub-category applies to the element, the user creates a new sub-category or assigns the element to the current category. Thus, a user need not memorize the details of any particular categorization scheme, and a non-technical person can successfully categorize a well-described element. Also, the categorization scheme can be extended as new elements are added. In some aspects, users also have the ability to edit the category descriptions, to \u201cmove\u201d components individually or in a group to a new category, to delete categories, and to merge categories.","In another aspect of the invention a method for automatically analyzing the content of one or more Bills of Material by component type is provided. This method permits analysis using different categorization schemes and at different levels of detail within each categorization scheme. For example, a user can query the database to calculate the cost subtotals by category for all components contained in a bill of materials at any level in the categorization tree. A product manager can look at the subtotals at the top level of the tree in order to understand how the product cost was divided between electrical and mechanical components. An electrical engineer can look at the subtotals for only the electrical sub-categories to see how the product cost was divided between passive components, active components, and connectors. A salesperson can develop a completely different categorization scheme based on target markets and use it to analyze product offerings by target market. The owner of system  can develop a categorization scheme that is independent of any user's schemes and employ the independent scheme to guide the placement of targeted advertising.","In one embodiment, parameters and default values for each parameter are assigned to a category and, as in other class based schemes, the parameter and value is \u201cinherited\u201d by components belonging to that category or any level of sub-category of that category. For example, the user can assign a \u201cpackage\u201d parameter with a value of \u201cunspecified\u201d to the category of \u201cElectrical Components\u201d, and a \u201cresistance\u201d parameter with a value of \u201cunspecified\u201d to the category of \u201c0603 Surface Mount Resistors.\u201d Further, the user can specify that the value of the \u201cpackage\u201d parameter for 0603 Surface Mount Resistors was \u201c0603\u201d. Whenever a component is added to the \u201c0603 Surface Mount Resistors\u201d category, \u201cpackage\u201d and \u201cresistance\u201d parameters are automatically assigned to the component, and the \u201cpackage\u201d parameter is automatically given the value of \u201c0603\u201d.","Vendor Rating","One embodiment of the invention includes rating vendors.  is a simplified block diagram showing an embodiment of a vendor rating method . The method uses a Web form  and a rating algorithm . Vendor rating method  is for example located on system  and can be part of server code . Vendor rating method  sends Web form  to a user interested in inquiring on vendor ratings. Vendor rating method  uses rating algorithms  to calculate vendor ratings.","Vendor rating method  calculates vendor ratings by comparing data between two or more of the lists in vendor transaction history . In one embodiment, vendor rating processor  calculates vendor responsiveness to requests for quotations (timeliness) by comparing, over multiple transactions, the dates of requests for quotations and their subsequent quotations provided as detailed in request for quotation list  and quotation provided list . Vendor rating method  also calculates the percentage of vendor quotations that result in sales by calculating how often a purchase order is issued, as shown in the purchase order issued list , for each quotation provided, as shown in the quotation provided list .","In one or more embodiments, vendor rating method  calculates vendor responsiveness to POs (timeliness) by comparing the dates between POs issued, as recorded in the purchase order issued list , and the respective POs acknowledged, as recorded in the PO Acknowledged list ; or between the dates of the POs issued, as recorded in purchase order issued list , and the respective promises to ship, as shown in the promise to ship list . Vendor rating method  calculates vendor reliability by comparing, over multiple transactions, the dates between promises to ship, as recorded in promise to ship list , and the respective notifications of shipment, as recorded in notification of shipment list .","In one or more embodiments, vendor rating method  calculates how many transactions a vendor has completed using system  by summing the transactions for the vendor stored in the multiple lists of vendor transaction history . For vendors with a sufficient volume of transactions, vendor processor  illustrates vendor performance over time in an appropriate graph. For example, transaction processor  displays vendor reliability over time so users could see whether a previously reliable vendor is currently extending delivery dates.",{"@attributes":{"id":"p-0141","num":"0140"},"figref":"FIG. 17","b":["1602","1710","1602","200","1610","1602","1602","100"]},"At a step , vendor rating method  receives a request for one or more vendor or manufacturer rating criteria from a user. At a step , vendor rating method  formulates a database query to retrieve the data from vendor transaction history  that is necessary for calculating the user-specified vendor rating or alternatively to retrieve pre-calculated vendor ratings . However, if the user requests a manufacturer rating, vendor rating method  can also formulate a database query to retrieve data from element list .","At a step , vendor rating method  submits the database query to database , which, in turn, searches vendor transaction history  or pre-calculated vendor ratings (or element list  in the case of manufacturer ratings) for the appropriate data. At a step , vendor rating method  receives the results of the database query and at an optional step  calculates any further performance criteria\/vendor ratings (or manufacturer ratings) based on the results of the query. As discussed above in conjunction with , vendor rating method  calculates in one or more embodiments, one or more of vendor responsiveness to requests for quotations, vendor quotation conversion, vendor responsiveness to POs, vendor reliability by comparing dates between the appropriate lists for multiple transactions as stored in vendor transaction history , and the like. In addition, vendor rating method  provides a user with information regarding how many transactions a vendor has completed using system . For vendors with a sufficient volume of transactions, vendor rating method  also correlates and presents vendor performance over time in an appropriate graph.","At a step , vendor rating method  formats and sends the requested performance criteria to the user via server code . The performance criteria are optionally presented graphically such as in x-y charts, pie charts, and color-coding results for a multiple-vendor query. Further, transaction processor  provides multiple vendor ratings for multiple vendors in a single display for the purpose of vendor comparison. At a step , the method ends.","Electronic Transaction Processing",{"@attributes":{"id":"p-0145","num":"0144"},"figref":"FIG. 18","b":["1802","1802","100","200","1805","1810","1820","1830","1840","1850","1860","1870","1880","1802","1890","1802"]},"Transaction processing method  sends a Web form from Internet interface  to a user. The user uses the Web form to send to code in system  an electronic transaction request. In one embodiment, transaction processing method  also sends a second Web form or the like to a vendor. The vendor uses the second Web form to initiate an electronic transaction request such as responding to a request for quotation. Alternatively, a user obtains or programs custom software to connect to code, e.g., the server code in system  by way of an interface such as Internet interface . In this case, the user software uses the application programming interface  to generate electronic transaction requests. If the user desires, such transaction requests may be initiated and executed entirely automatically, without human intervention.","The interfaces shown in  are all used by transaction processing method  to perform electronic transactions as requested by a user. When transaction processing method  is unable to complete an electronic transaction, transaction processing method  sends a notification to a human operator via notification interface .",{"@attributes":{"id":"p-0148","num":"0147"},"figref":"FIG. 19","b":["1905","200","1160","1170","1180","215"]},"In a step , transaction processor , in conjunction with server code , sends a Web form to a user so that the user can initiate a transparent electronic transaction of a type listed in supported transaction types  based on an element or elements stored in private user-specified element list . A vendor can also initiate an electronic transaction, such as acknowledgement of a PO. In a step , transaction processor , via server code  receives an electronic transaction request from a user. In different embodiments, the electronic transaction request can include such information as one or more of the type of transaction to be initiated, the vendor with which to initiate the transaction, and the element to be ordered or inquired about. In addition, if the user-initiated request involves a user-designed element, the request includes design data to further define the element. Different transaction types require a variety of different information. For example, a specific \u201cissue PO for a printed circuit board\u201d transaction requires the user to supply the vendor with certain circuit board design data before the user can initiate the transaction. Alternatively, some transaction types do not require that a specific purchasable element be specified by the user but instead require the user to supply the vendor with descriptive parameters for a particular type of component. Then either code in system  or the vendor resolves the descriptive parameters into one or more particular purchasable or non-purchasable elements as part of the execution of the transaction.","Code, e.g., the server code in system  optionally supports a variety of protocols for vendor-initiated transactions. In one embodiment, code in system  enables the user to specify that he or she prefers to receive vendor-initiated transactions through transaction processor . In this case, the vendor initiates a transaction through one of a variety of protocols supported by transaction processing method  (as listed in supported transaction protocols ) and has that transaction appear to the user as an electronically generated transaction.","In a step , transaction processing method  attempts to match the specified vendor as indicated in the electronic request to a vendor in vendor list  via automated means such as matching vendor contact information. Alternatively, the electronic transaction request specifies a specific vendor from vendor list  and, therefore, step  is skipped.","If transaction processing method  cannot match the specified vendor to a vendor in vendor list , then transaction processing method  optionally notifies a human or automated operator of system , via notification interface , to manually determine if the specified vendor is listed in vendor list . In a step , transaction processing method  receives the results of the operator's determination. If, in a step , the operator determined that the specified vendor was a known vendor, then the method continues to a step , further discussed below. If the operator determines that the new vendor is a previously unknown vendor, then in a step , transaction processing method  adds the new vendor to vendor list  and initializes tracking data associated with the new vendor. In a step  transaction processing method  determines the appropriate transaction protocols from the list of supported transaction protocols  for use in executing a transaction with the new vendor and stores the protocol data for each transaction type in vendor list .","In a step , transaction processing method  establishes a relationship between the vendor specified in step  and a vendor in vendor list  for the purpose of processing future transactions. Even if the vendor specified in step  is a new vendor, the transaction processing method  can still establish the relationship between the new vendor and a vendor in vendor list  because the new vendor would have been added to the vendor list  in step .","One embodiment includes a step  in which the method attempts to establish a relationship (if any) between the element or elements specified in step , with elements in element list  for future processing of electronic transactions. If transaction processing method  matches the buyer-specified element to an element in the element list , then transaction processing method  continues to a step  discussed below. If transaction processing method  is unable to establish a match, the buyer-specified element to an element in element list , then, in a step , transaction processing method  notifies a human operator of system  via internal notification interface .","In a step , transaction processing method  receives the results from the operator's inquiry regarding matching the element. If the operator was able to match the buyer-specified element to an element in element list , then transaction processing method  proceeds to a step . If the element is new (the human operator was unable to match the buyer-specified element to an item in element list ), then in a step , transaction processing method  adds the new item to element list .","In step , transaction processing method  determines the relationship between the buyer-specified element and an item in element list  for the purpose of processing future transactions. In a step , transaction processing method  determines which protocol to use for this transaction by cross-referencing the vendor and transaction type in vendor and transaction type\/protocol relations .","In a step , transaction processing method  executes the transaction using the protocol selected in step .","After the transaction is completed, in one embodiment transaction processing method  updates transaction quantity data item in vendor list  for the transaction type performed. In a step  the method ends.","Targeted Advertising","Categorization of elements within a user's BOM and selection of third-party part numbers by a user provides the manager of the server system  and the database management system that includes  system  with information about the interests and activities of the owners and users. This information allows the manager to display targeted advertising to users. One embodiments provides for the manager of the system to offer advertising to users' element categorizations and, for example how users give item numbers or names. An individual owner's item numbering if used, item naming if used, and categorization if used, may be included user's private user-specified element list . For example, if a user has elements within their private user-specified element list  categorized as \u201celectronic power supply-switch mode,\u201d in one embodiment the server code provides any available advertisements related to alternative power supplies or DC-DC converters to that user. In another example, suppose a user has specified a part number 00-1234 from manufacturer A. Manufacturer B pays for advertisements to be shown to all users that specify part 00-1234 offering an alternative part. This permits vendors to deliver advertising to potential users that are known to be specifying a competitive compatible part and to users that are known to be interested in specific types of components. Vendors are also able to cross-sell to users who have already specified their parts. The targeted delivery of information need not be limited to advertising. For example, product updates, recall notices, and application notes can be delivered to users of specific products.","Reference throughout this specification to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, appearances of the phrases \u201cin one embodiment\u201d or \u201cin an embodiment\u201d in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures or characteristics may be combined in any suitable manner, as would be apparent to one of ordinary skill in the art from this disclosure, in one or more embodiments.","Similarly, it should be appreciated that in the above description of exemplary embodiments of the invention, various features of the invention are sometimes grouped together in a single embodiment, figure, or description thereof for the purpose of streamlining the disclosure and aiding in the understanding of one or more of the various inventive aspects. This method of disclosure, however, is not to be interpreted as reflecting an intention that the claimed invention requires more features than are expressly recited in each claim. Rather, as the following claims reflect, inventive aspects lie in less than all features of a single foregoing disclosed embodiment. Thus, the claims following the Detailed Description are hereby expressly incorporated into this Detailed Description, with each claim standing on its own as a separate embodiment of this invention.","The embodiments described above may be modified. For example, the lists in database  have been described as implemented as tables of a relational database. Other database types may be used in alternate embodiments. Furthermore, an element relations table was described that provides all the parent child relationships of the elements used in a plurality of BOMs. In another embodiment, a separate data structure within database  is used to describe each individual BOM. Such a data structure may be a table, or may be another data structure suitable for describing a tree structure. Many data structures for describing a tree are known, and new ones may be developed, and it would be clear to one in the art how to modify the description above to accommodate such a data structure.","Thus, the embodiments described above are for illustration only and are not meant to be limiting. Such embodiments may be modified in many ways without departing from the spirit and scope of the invention, limited only by the claims and their legal equivalents."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWING","p":[{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 1","b":"100"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 2","b":"104"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 19"}]},"DETDESC":[{},{}]}
