---
title: Apparatus and methods for mediating messages
abstract: Disclosed are methods and apparatus for effectively mediating communications between entities in a computer network. In general, a format preference for a first service is received into a message interchange network. The format preference specifies an expected format for messages received by such first service without specifying a format for any other services. The format preference for the first service is then stored in a repository associated with the message interchange network. Messages sent to the first service are then mediated using the format preference stored for the first service so that the first service receives messages in the expected format specified by the format preference stored for the first service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08775654&OS=08775654&RS=08775654
owner: salesforce.com, inc.
number: 08775654
owner_city: San Francisco
owner_country: US
publication_date: 20031219
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF SPECIFIC EMBODIMENTS"],"p":["The present invention relates to methods and apparatus for processing data within a computer network. More specifically, it relates to mediating messages within such computer network.","Corporate reliance on technology has become more complex and more pervasive. Increasingly, companies are identifying opportunities to extend their core business or cut costs using the Internet. Both trends have put increasing priority on integrating disparate business applications. For this reason, enterprise application integration (EAI) has emerged as a solution for allowing information technology departments to build bridges that are designed to unify their legacy systems into a single enterprise application. Ideally, the creation of this single enterprise application would not require sweeping changes to the underlying structures.","EAI suppliers typically offer end point solutions for managing business process interactions between end points within a computer network. Although a specific enterprise software package may be designed to transparently handle diverse business processes carried out by two or more end nodes, each specific enterprise software package requires releasing customized connectors or adapters which will work for the specific business processes and applications used by the specific end nodes. As a result, these enterprise solutions are not easily scalable. Additionally, scores of adapters need to be built for each vendor (e.g., Oracle, SAP and Peoplesoft). As each supplier releases new versions of their software, EAI vendors find themselves unable to gain traction under the burden of supporting their existing adapters.","Notwithstanding the benefits of EAI, the software costs and resource investments of EAI prevent small-to-medium enterprise (SME) customers from embracing EAI solutions. For SMEs, reliance on web service providers represents an increasingly attractive alternative.","The web service provider market is one of the fastest growing segments of the software industry. Service providers make enterprise applications (e.g., human resources administration, recruiting, travel and expense management, sales force automation) available to customers over the web at a server device. Those applications are fully managed and hosted by the provider, providing significant cost savings to enterprises.","Some providers merely host and manage third-party packaged software for their customers (\u201cmanaged hosters\u201d). Others build new applications from the ground up to take advantage of the benefits and cost-savings of web service provider model. Service providers enjoy the profit margins and operational scalability of consumer Web companies like eBay and Yahoo, while at the same time offering the feature sets of complex enterprise software applications such as PeopleSoft and Siebel.","Although the service provider approach allows a single business to set up a host server for allowing itself and its business partners to use third party or custom applications, this approach does not allow the set up and dismantling of complex arrangements between business partners. Specifically, this approach requires custom set ups when business partners use different formats for their messages and other communications. Using these custom set ups, business partners specify the format of outgoing messages to comport with the recipient's format requirements. These messages can then be delivered to a recipient in a format understandable to the recipient. According to this approach, business entities must keep track of formatting requirements of each of their recipient business partners, which can be costly and time-consuming.","In view of the above, there is a need for facilitating communications between diverse business entities in a scalable manner. In other words, mechanisms for efficiently and reliably mediating communications between business entities (as well as other entity types) is needed.","Accordingly, the present invention provides methods and apparatus for effectively mediating communications between entities or services. In general, a plurality of services is provided and accessible through a message interchange network. For a particular service, an expected format is specified for messages received into such particular service. The message interchange network retains the expected format of the particular service. The message interchange network may also retain the expected formats for any number of services. Thus, when a message is received into the message interchange network destined for a particular service, the message interchange network translates the message if the message's format differs from the expected format for such particular service. Thus, the only information that needs to be specified for a particular service is the expected format for messages received into such particular service. That is, in order for a particular service to interact with other services, the formats used by other services do not need be specified by the particular service.","One aspect of this invention pertains to a method of mediating messages within a computer network. This method may be characterized by the following sequence of operations: (a) receiving a format preference for a first service into a message interchange network, wherein the format preference specifies an expected format for messages received by such first service without specifying a format for any other services; (b) storing the format preferences in a repository associated with the message interchange network; and (c) mediating messages sent to the first service using the format preference stored for the first service so that the first service receives messages in the expected format specified by the format preference stored for the first service.","Another aspect of this invention pertains to a computer system operable to mediate encoded messages within a computer network. Such system may be characterized by the following features: one or more processors; one or more memory devices, wherein at least one of the processors and memory devices are adapted for: (a) receiving a format preference for a first service into a message interchange network, wherein the format preference specifies an expected format for messages received by such first service without specifying a format for any other services; (b) storing the format preferences in a repository associated with the message interchange network; and (c) mediating messages sent to the first service using the format preference stored for the first service so that the first service receives messages in the expected format specified by the format preference stored for the first service.","Yet another aspect of the invention pertains to computer program products including machine-readable media on which are stored program instructions for implementing a portion of or an entire method as described above. Any of the methods of this invention may be represented, in whole or in part, as program instructions that can be provided on such computer readable media. In addition, the invention pertains to various combinations of data generated and\/or used as described herein.","These and other features and advantages of the present invention will be presented in more detail in the following specification of the invention and the accompanying figures which illustrate by way of example the principles of the invention.","Reference will now be made in detail to a specific embodiment of the invention. An example of this embodiment is illustrated in the accompanying drawings. While the invention will be described in conjunction with this specific embodiment, it will be understood that it is not intended to limit the invention to one embodiment. On the contrary, it is intended to cover alternatives, modifications, and equivalents as may be included within the spirit and scope of the invention as defined by the appended claims. In the following description, numerous specific details are set forth in order to provide a thorough understanding of the present invention. The present invention may be practiced without some or all of these specific details. In other instances, well known process operations have not been described in detail in order not to unnecessarily obscure the present invention.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1A","b":["106","104","102","106","104"]},"In the present embodiment, the Provider  may optionally specify which users or services may access the provisioned service . It should be recognized that the service  can be provided by Provider  to any type of entity, such as a user or individual entity from a particular organization or a particular organization entity.","In one embodiment, Provider  is an organization administrator from an organization. An organization may represent a distinct business entity, a particular user of the same business entity, or an administrative domain of a computer application. In this example, Provider  represents a person. In another embodiment, Provider  could itself be a service or computer application.","A service may represent any computer application, process, entity, or device accessible to other applications, processes, entities, or devices through an interface such as an application programming interface (API), user interface, e.g., a graphical user interface, or Internet web user interface by any of a variety of protocols over a network within an entity or over the public Internet. A service may also be comprised of multiple methods or applications on a single device or distributed across multiple devices.","Although not shown, the Provider  may provision any number and type of services. Also, any number and type of Providers may provision services with the message interchange network . Accordingly, the message interchange network  is configured to provision multiple services from multiple Providers.","Several embodiments of mechanisms and techniques for provisioning services are described in U.S. patent application Ser. No. 09\/820,966, entitled \u201cSYSTEM AND METHOD FOR ROUTING MESSAGES BETWEEN APPLICATIONS\u201d, filed Mar. 30, 2001 by Lev Brouk et al. and U.S. patent application Ser. No. 10\/727,089, filed 2 Dec. 2003, entitled \u201cAPPARATUS AND METHODS FOR PROVISIONING SERVICES,\u201d by David Byrne Reese et al., which applications are hereby incorporated by reference in their entirety for all purposes. Any of the provisioning mechanisms described in these referenced applications may easily be applied with the mediation techniques described herein.","After services are provisioned with respect to message interchange network , messages may then be sent between two or more services. That is, a particular service may be accessed by another service. By way of example, a user on a first device may access a particular service on a second device through a communication process (or service) located on their own first device.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1B","b":["110","104","106","106","104","104","110"]},"In one configuration of the present invention, the message interchange network  includes any number of mechanisms for mediating communications between two or more services. In the illustrated embodiment, the message interchange network  includes a mechanism for translating messages sent between the services, such as from service  to service . Messages can use formats such as MIME, DIME, and the like, with AS2, SOAP, and other application bindings. MIME and DIME are attachment\/part formats, while SOAP and AS2 are application logic binding protocols. Of course, a message may use any suitable type of protocol, structuring, or formatting specification which results in a particular format for the message. When different entities use different formats for their messages, the message interchange network can translate messages such that recipients receive the messages in a proper format.","In the illustrated embodiment, a message having a MIME format is sent by service  and received into the message interchange network  via path . Of course, the routing path  may include any number and type of routers and\/or processing nodes. The message interchange network  can then determine that service  expects messages to be received in a DIME format and translate the message from MIME to DIME format along path . The path  may include any number and type of routing devices (or services) and\/or processing device (or services). The translated message, which now has a DIME format, is then sent to service  via path , which may include any suitable number and type of routing devices and\/or processing nodes. In the preceding discussion, Service  and the provider of service  need not be aware of the message format requirements of the message destination (service ), nor of any format translation processing taking place in the message interchange network. Service  may send the message as if service  accepted the same message format as used by service . A more detailed discussion of exemplary processes for mediating messages in different formats is provided below with regard to .","In addition to providing mechanisms for provisioning services and mediating messages sent to such services, the message interchange network  also preferably includes a repository for storing various information regarding the services and entities which provision and\/or use such services. The message interchange network preferably also includes mechanisms for creating services, registering users and their identifying information, and handling messages routed between services and\/or users. The repository may be formed from one or more databases stored on one or more memory devices on one or more computer systems.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 2","b":"202"},"The format preferences for the first service may be received in a variety of ways. In one example, format preference information is received over a public network from a provider provisioning a service with the message interchange network. In the example of , when Provider  provisions service  with message interchange network , the Provider  specifies a format preference for messages received by such service . According to various embodiments, format information is received when a provider or a service is introduced into a network. In another embodiment, format information is received when a provider or service is configured for operation with a message interchange network. In a preferred embodiment, a provider specifies only a format preference. The provider does not need to perform any other actions, such as configuring transformation mappings, specifying translation processes, setting up routing to format conversion services, etc.","At , the format preference information for the particular service is stored and associated with such particular service. Information can be stored in a variety of ways or in any number and type of storage devices, such as one or more databases, caches, or data structures. In one instance, format preference information is stored in a message interchange network database. In another instance, format preference information can be stored at another network entity associated with the message interchange network. In a specific implementation, a format table is used to store entries regarding each service and its associated format preference.","At , messages sent to the particular service are mediated using the format preference stored for the particular service, as described in more detail below with regard to . In the example of , the message interchange network  mediates messages sent to service  by service .",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 3","FIG. 1","FIG. 1"],"b":["106","302","110","104"]},"At , the format of the message is determined. In one example, determining the format may involve scanning the message to determine if formatting mechanisms such as DIME, MIME, SOAP, or AS2 are used. In some examples, multiple formatting mechanisms may be used. In an alternative embodiment, the format of the message may be presumed to be the same as the format preference specified for the sending service. However, a verification of the format is preferably performed by analyzing each particular message. At , the format of the message is compared to the stored format preference for the particular service (i.e., the receiving service). For example, if the format preference stored for the particular service indicates that the particular service should receive messages with DIME formatting and the message format is MIME, translation may be needed.","If it is determined that translation is necessary at , the message is translated at  and sent to the particular service at . If translation is not necessary at , the message is forwarded to the particular service at .","According to various embodiments, the techniques of the present invention recognize whether translation is necessary without a received message explicitly indicating that a translation is needed. Traditional mechanisms typically involve express requests for translation. In contrast, according to various embodiments of the present invention, a provider of a particular service need only specify the format of messages that the particular service is configured to receive. That is, the formatting used by other services (even services which access the particular service) need not be specified. Techniques of the present invention allow transparent translation of formats without involving user intervention.","With reference to , shown is diagrammatic representation of a translation of a message from a SOAP format to an AS2 format in accordance with one embodiment of the present invention. The spacing shown for each message type is merely for clarity purposes and is not meant to accurately represent the formatting of actual SOAP and AS2 type messages. As shown, SOAP message  includes headers that provide various information such as the format of the message. In particular, content type  indicates that the message is multipart\/related. Although not shown, other information can be provided in the headers as well. Next, SOAP message  includes a MIME boundary . Between MIME boundary  and , a SOAP envelope is included. The content type  of this bounded content is indicated as text\/XML. The SOAP envelope contains a SOAP header  and a SOAP body . The content of the SOAP envelope as shown is exemplary only and does not reflect the actual variations and content possible for SOAP envelopes.","The SOAP message  further contains a second part between MIME boundaries  and . The content type  of these contents is indicated as application\/edi-x12. The content  includes an X.12 EDI document. Other MIME headers beyond content type may be present as well. MIME boundary  marks the conclusion of these contents and can mark the beginning of another set of contents. Any number of sets of contents, separated by MIME boundaries, can be included in such a SOAP message . Other content types may include other types of text file formats, image file formats, video file formats, audio file formats, executable formats, etc. Alternatively, MIME boundary  can be a terminal boundary marking the end of the message.","In the present embodiment, when the SOAP message  is translated to AS2 message , the SOAP part  is stripped from the message and the headers  from SOAP message  are replaced with AS2 headers . In addition, a portion of SOAP message  between MIME boundary  and  is included in AS2 message  as follows: content type  in SOAP message  is included as content type  in AS2 message , and content  in SOAP message  is included as content  in AS2 message . Various MIME headers associated with the MIME part would also be included in the translated message. If SOAP message  contains additional contents (MIME parts) beyond boundary , those contents could also be transferred to the AS2 message, in which case the multiple parts of the AS2 message would be separated by MIME boundaries. Alternatively, each of the separate additional MIME parts of the SOAP message could be transformed into a separate AS2 message. The AS2 message  may furthermore contain an added digital signature, in which case the message would contain multiple parts separated by MIME boundaries.","In the present exemplary embodiment, SOAP message  is translated to AS2 message . It should be recognized that an AS2 message can also be translated to a SOAP message in other embodiments. In such an example, a SOAP part is added to the AS2 message so as to result in a SOAP message. The AS2 headers are replaced by headers appropriate to a SOAP message. The content type and content of the AS2 message is inserted as a MIME part following the SOAP MIME part in the resulting SOAP message. Any suitable number of AS2 message parts may also be combined into a single SOAP message with multiple MIME boundaries. Similarly, any message format can be translated to another message format in accordance with various embodiments of the present invention.","With reference to , shown is diagrammatic representation of a translation of a message from a MIME format to a DIME format in accordance with another embodiment of the present invention. The spacing shown for each message type is merely for clarity purposes and is not meant to accurately represent the formatting of actual MIME and DIME type messages. As shown, MIME message  includes headers  and MIME boundaries  and . Content  is located between MIME boundaries  and . Additional sets of contents and MIME boundaries can be included after MIME boundary  according to various embodiments.","In the present embodiment, when the MIME message  is translated to DIME message , headers  from MIME message  are translated to headers  in DIME message . In particular, a content type header in MIME message  may have a value of \u201cmultipart\/related\u201d but will have a value of \u201capplication\/dime\u201d in DIME message . Furthermore, the content type and content id headers  in the first MIME part of MIME message  are stored inside DIME record descriptor  inside DIME message . The content  of the MIME part is included as the DIME record data . The DIME record descriptor  includes information about the length of the content , so there is no need to include boundaries in a DIME message such as MIME boundaries to determine the beginning and end of a set of contents. MIME message  is parsed to determine the location of MIME boundaries  and . Once these boundaries are found, content  can be included as content , and information about the length of content , based on the distance between the boundaries or amount of information between the boundaries, can be included in record descriptor . Although the present embodiment includes content type and content ID in the MIME headers , it should be recognized that additional header information can also be included in various embodiments. Such additional header information may also be stored in the DIME message.","Although the present exemplary embodiment includes translating MIME message  to DIME message , it should be recognized that a DIME message can be translated into a MIME message in other embodiments. For example, information about the length of record data  that is stored in record descriptor  can be used to determine the placement of content  and MIME boundaries  and  in a MIME message . Similarly, any other message format can be translated to another message format according to various embodiments of the present invention.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 6","b":["701","703","705","707","709"]},"If it is determined that translation from MIME to DIME is needed at , the content type of the message is set to \u201capplication\/dime.\u201d At , the main SOAP portion of the message is written as a record with desired content type information. At , attachments to the original message are parsed. For each attachment, a new DIME record copying only some MIME headers are written. In one example, Content-ID fields are unchanged when copied to a DIME format and Content-Type fields are also unchanged when copied to a DIME format. The type format field in the DIME record is set to MIME media type.","If the Content-Transfer-Encoding header is set for a MIME part, the content of the MIME part is decoded since DIME does not support transfer encoded record content. The content is then written in the decoded format. Next, if appropriate, the record can be chunked. DIME generally allows for a single part to be written as multiple records. Since DIME records declare their size in the beginning of the record, chunking allows for more optimal transmission of large amounts of data and streaming.","At , if it is determined that translation from DIME formatting to MIME formatting is needed, the content type for the new MIME message is set to \u201cmultipart\/related\u201d, with proper boundary attribute, at . Next, a boundary for the MIME message to be composed is generated at , in order to separate the new MIME parts. For each portion of the message, boundaries, headers, and payloads are written at . In particular, each DIME record is parsed and a new MIME part is written for each record. This process involves 1) writing a MIME boundary, 2) writing MIME headers, 3) writing data content, and 4) writing another MIME boundary.","More specifically, once the first MIME boundary is written, the MIME headers are written. If the content-type is a MIME type, the content-type can be copied as-is. If content type is URI, then the content-type can be set to \u201ctext\/xml.\u201d If the content-type is in some other form, then the content-type can be set to \u201capplication\/octet-stream.\u201d In addition, if a content-ID is present, it can be left unchanged in the new message. If the record is not chunked, the content-length can be set to the size of the data record. Otherwise, if the record is chunked, then the content-length header may not be set.","Next, the data content of the record is written. In one example, if the data record is the first record (i.e., SOAP part), then the SOAP part may be parsed to replace SOAP headers used by the message interchange network. After the data content of the record is written, a second MIME boundary is written. If the data record is the last record, the MIME boundary is set as the closing boundary.","In the present embodiment, if it is determined that formatting is neither DIME nor MIME at , the message headers are copied unchanged at . According to various embodiments, the SOAP content is also copied, but the SOAP content is parsed in order to replace SOAP headers used by the message interchange network.","It should be noted that  describes one example of translation mechanisms for very specific formats. A variety of other formats and translation mechanisms are also available.","Referring now to , a computer system  suitable for implementing the present invention includes a master central processing unit (CPU) , one or more memory , input and output interfaces , and a bus  (e.g., a PCI bus). When acting under the control of appropriate software or firmware, the CPU  is responsible for implementing various portions of the techniques of the present invention. It preferably accomplishes all these functions under the control of software including an operating system and any appropriate applications software. CPU  may include one or more processors such as a processor from the Motorola family of microprocessors or the MIPS family of microprocessors. In a specific embodiment, a memory  (such as non-volatile RAM and\/or ROM) also forms part of CPU . However, there are many different ways in which memory could be coupled to the system. Memory block  may be used for a variety of purposes such as, for example, caching and\/or storing data, programming instructions, etc.","The input and output interfaces  typically provide an interface to various I\/O devices, such as mouse, keyboard, display, as well as providing an communication interface with other computer systems over a computer network. Among the communication interfaces that may be provided are Ethernet interfaces, frame relay interfaces, cable interfaces, DSL interfaces, token ring interfaces, and the like. In addition, various very high-speed interfaces may be provided such as fast Ethernet interfaces, Gigabit Ethernet interfaces, ATM interfaces, HSSI interfaces, POS interfaces, FDDI interfaces and the like. Generally, these interfaces may include ports appropriate for communication with the appropriate media. In some cases, they may also include an independent processor and, in some instances, volatile RAM.","Although the system shown in  is one specific computer system of the present invention, it is by no means the only system architecture on which the present invention can be implemented.","Regardless of system's configuration, it may employ one or more memories or memory modules (such as, for example, memory block ) configured to store data, program instructions for the general-purpose network operations and\/or the inventive techniques described herein. The program instructions may control the operation of an operating system and\/or one or more applications, for example. The memory or memories may also be configured to store information in a repository.","Because such information and program instructions may be employed to implement the systems\/methods described herein, the present invention relates to computer program products, e.g., computer readable media that include program instructions, state information, etc. for performing various operations described herein. Examples of tangible computer readable media include, but are not limited to, magnetic media such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROM disks and DVDs; magneto-optical media such as floptical disks; and hardware devices that are specially configured to store and perform program instructions, such as read-only memory devices (ROM) and random access memory (RAM). The invention may also be embodied in a carrier wave traveling over an appropriate medium such as airwaves, optical lines, electric lines, etc. Examples of program instructions include both machine code, such as produced by a compiler, and files containing higher level code that may be executed by the computer using an interpreter.","Although the foregoing invention has been described in some detail for purposes of clarity of understanding, it will be apparent that certain changes and modifications may be practiced within the scope of the appended claims. Therefore, the described embodiments should be taken as illustrative and not restrictive, and the invention should not be limited to the details given herein but should be defined by the following claims and their full scope of equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
