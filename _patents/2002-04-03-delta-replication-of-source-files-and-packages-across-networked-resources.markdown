---
title: Delta replication of source files and packages across networked resources
abstract: The disclosed arrangements and procedures replicate source files across networked resources. Specifically, a server receives a package update notification corresponding to a difference between a previous set of source files and one or more new sets of source files. Responsive to receiving the package update notification, a delta set of source files that correspond to the difference are identified. A set of source and/or distribution servers in an enterprise network that are configured for delta replication is determined. The identified delta set of source files is communicated to the determined source and/or distribution servers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07600021&OS=07600021&RS=07600021
owner: Microsoft Corporation
number: 07600021
owner_city: Redmond
owner_country: US
publication_date: 20020403
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","CONCLUSION"],"p":["The following description relates to enterprise management. More particularly, the disclosed subject matter pertains to the installation and maintenance of software applications within enterprise networks.","The Internet and the World Wide Web (www) have had a dramatic effect on corporate networks, with companies using them for electronic commerce and Internet access as well as client\/server applications and traditional network services such as e-mail. Efficient systems and network management practices can cut and control costs by enabling efficient asset management practices, reducing the need for labor-intensive tasks such as the installation, maintenance, and reconfiguration of software, minimizing the cost of wide area data communication links, minimizing the cost of systems related downtime, providing the proper level of services, and much more.","Installing and maintaining software in an enterprise network is a major cost to corporations with locations across a wide geographical area. This is because most of the cost of maintaining a corporate computer system typically comes from software installation, support, and maintenance. Several vendors offer enterprise-wide management solutions to install and maintain software applications across the enterprise.","Unfortunately, conventional enterprise-wide management software installation and maintenance techniques are substantially limited in that they typically require a considerable and possibly prohibitive amount of enterprise network bandwidth to communicate large amounts of data across the enterprise network to perform such software installation, updates, or repairs.","For instance, conventional enterprise-wide management techniques to install, update, or repair software applications typically involve sending complete software packages to any number of source file distribution points (DPs) in the enterprise. A full software package includes, for example, one or more complete software applications along with all of the corresponding files (e.g., data, configuration, scripting files, and so on) that may be needed for installation, removal, repair, or other maintenance of the included software application(s). A DP is the location from which an end-user installs software application source files for new software application installations, updates, and\/or repairs. An enterprise may have thousands of DPs to service the software requirements of various networked devices (e.g., end user computers, printers and other peripheral devices, network appliances, and so on).","Each package that is communicated from the centralized source file server to a target DP, can include any number of files (e.g., possibly tens, hundreds, or thousands of files) that are required for the proper execution and configuration of the particular software application. Additionally each package's software installation\/removal scripts ensure that any previously installed versions of the software application(s) are removed from the target DP, before they copy the current contents of the package onto the target DP. In light of this, it is clear that conventional enterprise-wide management software installation and maintenance techniques generally require utilization of a considerable and potentially prohibitively expensive amount of network bandwidth to install and\/or maintain software at each DP in the enterprise.","These and other limitations of traditional systems and procedures to install, update, and otherwise maintain software applications across enterprise networks are addressed by the following described arrangements and procedures.","The disclosed arrangements and procedures replicate source files across networked resources. Specifically, a server receives a package update notification corresponding to a difference between a previous set of source files and a one or more new sets of source files. Responsive to receiving the package update notification, a delta set of source files that correspond to the difference are identified. A set of source and\/or distribution servers in an enterprise network that are configured for delta replication is determined. The identified delta set of source files is communicated to the determined source and\/or distribution servers.","The following description sets forth exemplary subject matter to perform delta replication of source files and packages between locations with sub-locations. The subject matter is described with specificity to meet statutory requirements. However, the description itself is not intended to limit the scope of this patent. Rather, the inventors have contemplated that the claimed subject matter might also be embodied in other ways, to include different elements or combinations of elements similar to the ones described in this document, in conjunction with other present or future technologies.","Overview","The described subject matter performs delta replication of source packages and files to distribute software to networked computers. Specifically, a centralized or primary server within an enterprise network generates and distributes either full or delta packages to install, upgrade, repair, and\/or generally maintain software at distribution points within the enterprise. Such a primary server and distribution point, for example, can be represented with respective servers that are executing portions of Microsoft's System Management Server\u00ae (SMS) technology, which has been appropriately modified to incorporate the novel teachings of this detailed specification.","Whether source files are distributed in a full package, a delta package, or as delta source (i.e., mirrored copies of only the source changes\/updates), the distributed package will include all the files (e.g., software source files, removal and\/or installation scripts, data files, etc.) that a distribution point requires to install, upgrade, repair, or generally maintain the particular site's software inventory. (End users can access and install site software on their respective clients by accessing the site's software inventory). Specifically, a full package includes scripts to completely remove, if necessary, all files from the DP that correspond to any previous installations of the software application. The full package also include scripts to completely install all of the source files, data files, scripts, and so on, onto the DP that correspond to the software application.","In contrast to such full packages, a delta package or delta source includes only the differences, changes, or deltas\u2014as compared to a previous installation on the particular DP, that are required to upgrade, repair, or otherwise maintain the software application on the DP. Once received by a DP, unpacking the delta file may cause the removal of one or more previously installed source files, data, files, scripts, or the like, as well as corresponding counterpart replacement with the respective upgraded and\/or repaired versions.","Additionally, a centralized enterprise server may generate the delta package such that it upgrades a source file or software application on a particular DP from one particular version to another version. In this example, if the source file or application on the particular DP is several versions out of date as compared to a current version on the centralized server, the generated delta package is configured to only include those files that are needed to remove and install the differences between the various versions on the particular DP. Such a process is called \u201cnormalization\u201d since it causes software inventory at particular DPs to be synchronized with software inventory at a primary parent server (which may or may not be the central server of the enterprise).","Moreover, if source must be replicated to many varying states based on the respective requirements of each DP, delta replication builds and distributes separate delta packages such that each DP is updated with respect only to the files that it requires to properly update the particular DP to a current version state (or to a requested version state). (If a new DP or source location is to be generated, delta replication will send a full package or full source to that particular site, so that may begin to act as a source location for files).","Since efficient movement of source files is crucial to minimizing expensive and potentially prohibitive bandwidth usage between discrete locations within a large or physically disparate enterprise, the described delta source file and package replication between locations with sub-locations may substantially reduce enterprise-wide management software distribution copy times and communication path bandwidth consumption as compared to the conventional distribution techniques described in the background section.","An Exemplary System",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 1","FIGS. 2-4"],"b":["100","102","104","106","102","106","108","110","102","102","106","108"]},"Parent and child sites are represented in system  by organizing sites into a hierarchy. A parent site (e.g. site ) is a site (central and\/or primary) which includes other sites (e.g. sites ) beneath it in the hierarchy. A child site is a site (primary or secondary) that reports to a parent site above it the in the hierarchy. A primary site stores system data such as software inventory information, etc., for itself and its sub-sites (e.g., system data can be stored locally in a database such as an SQL database). A secondary site reports its data (e.g., software inventory information) to a primary site and does not store data for other sites. Each primary and secondary site in system  is able to communicate data (e.g., software inventory, delta replication packages, and so on) to its respective parent site and any immediate child sites.","In this exemplary system , site  is a parent site that is also a central site because it is at the top of the system  or site hierarchy. Thus, central site  is also a primary site for storing system-wide information for managing the distribution of source files in full packages and\/or delta replication packages for all other sites . In another example, primary site - is a parent site (e.g., a patent of site -N) as well as a child site (e.g., of central\/primary site ).","Accordingly, the system  includes a central site  and any number of sub-sites . Thus, the particular architecture of system  is scalable and can be configured to fit particular organization, management, and\/or administrative requirements (e.g., the parent\/child site hierarchy of system  can be nearly flat, or can be quite deep, with few or many sites).","Although servers  and clients  are illustrated as corresponding to site , each other site  also has respective servers  and clients . Each server  is a source server and\/or a distribution server. A source server  includes original source files to be distributed to the distribution servers  located at sub-sites  (a \u201csub-site\u201d is a child site of the current site). A distribution server  receives delta source files (e.g., as a mirror copy) and\/or unpacks full or delta replication packages that are distributed by a source server , thereby making the files (i.e., received delta source or package files) available for clients  at the site. This means that although the following description may refer to communicating delta source and\/or delta packages  from a source server  or  to a distribution server , it can be appreciated that the delta source\/package  receiving distribution server  may in its own right be a source server  for distributing the received delta source\/package  to other distribution servers  located at sub-sites . (Aspects of exemplary servers  are respectively described in greater detail below in reference to ).","Whether a particular server  is configured as a source and\/or a distribution server  is determined according to administrative needs for system . However, because primary site  is also the central site  (i.e., it stores system-wide information to manage distribution of source files for all other primary and secondary sites) of site hierarchy , the central site has at least one source server . Additionally, each site (primary or secondary) must have at least one distribution server .","A client  is any computing device that includes a processor coupled to a memory, wherein the memory includes computer executable instructions to receive and install source files into the memory and report source file inventory to a distribution server . (Memory includes any combination of volatile and nonvolatile computer-readable media for reading and writing). Accordingly, a client device  is operational as any one of a number of different computing devices  such as a personal computer, an image server computer, a thin client, a thick client, a hand-held or laptop device, a multiprocessor system, a microprocessor-based system, a set top box, programmable consumer electronics, a wireless phone, an application specific integrated circuit (ASIC), a network PC, minicomputer, mainframe computer, and so on.","An Exemplary Delta Package and Source File Server",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 2","FIG. 1","FIG. 1"],"b":["200","108","100","200","202","203","204"]},"Bus  represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnects (PCI) bus also known as Mezzanine bus.","The system memory  includes a variety of computer-readable media. Such media may be any available media that is accessible by the processor , and it includes both volatile and non-volatile media, removable and non-removable media. For example, the system memory  includes computer readable media in the form of volatile memory, such as random access memory (RAM), and\/or non-volatile memory, such as read only memory (ROM). A basic input\/output system (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is stored in ROM. RAM typically contains at least portions of data  and\/or program modules  that are immediately accessible to and\/or presently be operated on by processor .","The processor  is configured to fetch and execute computer program instructions from applications or program modules  portion of memory . Program modules  may be described in the general context of computer-executable instructions being executed by a computer. Generally, program modules  include routines, programs, objects, components, data structures, etc., that perform particular tasks or implement particular abstract data types.","An exemplary system and procedure to perform delta replication of source files and packages across networked resources is practiced in a distributed computing environment  of , where tasks are performed by remote processing devices that are linked through a communications network. Accordingly, program modules  may be located in both local and remote computer storage media including memory storage devices.","The program modules  of source server  include, for example, the delta package and delta source manager module , and other applications  (e.g., an operating system, enterprise-wide administrative console applications, a Web browser, and so on). The processor is also configured to fetch data from the data  portion of memory  while executing the program modules . Data  includes, for example, original source files  software inventories  for the site hierarchy, delta packages , configuration data , and other data. Exemplary aspects of the modules  and data  are now described.","The full and delta package manager module  facilitates the installation, upgrade, repair, and\/or configuration of software applications and other source files  at various DP sites  in an enterprise network. To accomplish this, the manager module  builds, maintains, and communicates full packages, delta packages , and\/or delta source (e.g., at least one source files ) to these various DPs along with specified scripts or jobs. The combination of packages and jobs allows the manager module  to communicate software over a LAN or wide area network (WAN), distribute software and other data to specified DP servers in a site , and remove software or source files  from specified sites  (e.g., servers ).","A full package includes all source files  (including data, scripts, and so on) corresponding to a particular application, regardless of whether or not certain ones of the source files  have been changed, updated, and so on, and others have not. In other words, a full package does not include only the changes or \u201cdeltas\u201d as compared to a previous version of the package. Upon receipt of a full package, a distribution server  stores the package in a database (if it is a primary site), and if the package is compressed, decompresses the package before storing its respective contents to memory such as a database for client  access and for possible further distribution to other distribution servers  at subsites  (if any).","In contrast to a full package, a delta-package or delta source  includes only those source files  that have changed since a previous package (full or delta) had been communicated to one or more particular sub-sites . For instance, a source server , and in particular the package manager module , builds a delta package  to update a particular distribution server  with only those source files  that that particular distribution server  needs.","Accordingly, the manager module  generates delta packages  or identifies delta source  to replicate any number of the various configurations of source files  corresponding to an application. Because a delta package  includes only source file changes, updates, fixes, corresponding scripts (for automating installation and configuration of the delta package  contents), or the like, the distributed delta packages can be substantially smaller in size than the full packages, which have traditionally been communicated to distribution servers . Communicating smaller delta packages  (as with delta source ) to any number of distribution servers  in a large and\/or physically disparate enterprise will have substantially less impact on an enterprise's limited communication path data through-put or bandwidth and processing resources.","Upon receipt of a delta package , a distribution server  stores the delta package  in a database (if it is a primary site), and if the package is compressed, decompresses the package before storing its respective contents to memory such as a database for client  access and for possible additional distribution to other distribution servers  at sub-sites  (if any).","Further aspects of the delta package and source file manager  are now described with respect to an exemplary delta package application programming interface (API) and an exemplary procedure  of , each of which further elaborate on corresponding aspects of the generation, maintenance and distribution of delta source files and\/or packages .","An Exemplary API for the Creation and Manipulation of Delta Packages","The package manager module  exposes a number of novel delta replication file APIs to build, maintain, and distribute delta source files and\/or packages  (along with specified scripts or jobs) to distribution servers . (The delta source file and\/or package generation, maintenance, and distribution API is hereinafter referred to as the delta package API). API can be implemented in any number of ways. For instance, the delta package API may be implemented as Component Object Model (COM) objects. COM is a well-known object-oriented programming model that defines how objects interact within a single application or between applications. In COM, client software accesses an object through a pointer to an interface-a related set of functions called methods-on the object. A set of exemplary delta file APIs are now described.","A create compressed file delta interface compares a file source to an original file (both represented by source files ), which may or may not be compressed. Comparison is based on file records stored in the original file; if the file is compressed, no decompression is required. If a file has been added or changed it is compressed and added to the delta package  (a changed file replaces its corresponding out of date file in the package). If a particular file has been removed from an application, this interface will add a record or flag to the delta package  indicating that the particular file has been removed from the corresponding full package .","A merge compressed file delta interface merges a changed or delta file into a compressed file. In other words, this interface adds, replaces, or removes entries from the compressed file according to the contents of the delta file. This is accomplished by creating a temporary output file within which is generated a new compressed file by adding data from either the delta file or the original compressed file as required. The old file in the full package  is then replaced with the new file.","A normalize compressed file deltas interface takes a list of sequential delta files and removes redundant data from older deltas to conserve disk space as well as to reduce network data throughput a delta update requires (e.g., if a file is added to a first delta, removed from a second delta, and then added again with some modifications (i.e., as compared to the file in the first delta) to a third delta, the file will be communicated only one time to a particular distribution server, regardless of the three delta versions.","A merge compressed file deltas interface takes a list of sequential delta files and creates a single file that contains all of changes in the original file. Applying this delta to the compressed file is equivalent of applying each of the original deltas to the source location from which the clients will install the application\/files.","A replicate package interface evaluates a package version difference at a destination child site , and creates the appropriate delta package . For instance, a get remote package version interface determines the lowest distribution server  package version of the child site distribution point version entry, as expressed in the database at the parent site. This difference between the package versions between the parent site in the lowest distribution point package version is communicated to the create package delta interface to merge the deltas of these versions to create a complete delta package  to be communicated to the child site .","A create package delta interface merges deltas of intermediate delta package versions to create an up-to-date delta package to be sent to any child site . If any intermediate deltas are missing or corrupt, they are deleted from the compressed package source folder on site  where the package is created, and any deltas for that package comprising versions earlier than a corrupt version are also marked for deletion.","A get remote package version function queries for delta in full package versions of the source  on a parent site, parent site distribution points, child site and child site distribution points. This interface returns a minimum of the source  version for the site  specified.","An Exemplars Procedure for Delta Package Generation and Management",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 3","FIG. 1"],"b":["300","302","102","222","102","222"]},"When such a full package  is generated and\/or updated, and the administrator specifies a particular package data source option to indicate whether: (1) a compressed copy of source files (a package) should be communicated from a respective source server  to respective distribution servers ; or, (2) the source files should be communicated in an unpackaged form (i.e., delta source files) from the source directory  or  on the source server  to respective distribution servers .","The package data source option can be associated with a particular package  in a number of different ways. For example, a package data source option can be stored on a source server  as configuration data , software inventory data , as a header in the particular package , and so on.","At block , responsive to having received the package update notification (block ), the package manager evaluates a site control file . This evaluation identifies specific target site(s)  to receive the update and further indicates whether the distribution server(s)  at the target site  is configured for delta replication (DR); i.e., the ability to receive and manage the update as a delta package\/source . A server  is delta enabled if a server  is able to both receive delta updates and generate delta updates for any child distribution points and\/or sites.","At block , the package manager  communicates full package is  to those distribution servers  that are not DR enabled.","At block , the package manager  communicates a delta package or delta source to those distribution servers  that are DR enabled. (Whether or not a particular site  is sent a delta package or source depends on the package data source option of the package  that corresponds to the received package update notification (block ); these aspects are described in greater detail below in reference to .) At block , the package manager  performs auto-recovery for all sites  that indicate that communication of a particular delta package  (regular or normalized) was unsuccessful for some reason (e.g., due to communication failure, corrupt data, etc.). Such a success\/failure indication can be determined in the number of ways. For instance, a distribution server  may communicate a status message to the sending source server , wherein the status message indicates the success or failure of receiving or installing the communicated delta package or delta source .","To perform the auto-recovery operation of block , the package manager  may again attempt to send the newly generated delta package  (regular or normalized) to those distribution servers  that indicated prior failure to receive, install, or otherwise configure the communicated package  or . Alternatively, the package manager  may communicate a compressed updated full package  to a distribution server  that indicates such a failed status. (An exemplary compressed updated full package  is described in greater detail below in reference to block  of ). In this manner, the package manager  is able to perform an auto-recovery mechanism in the event of delta package\/source communication\/installation failures with respect to distribution servers .","At block , the delta package manager  normalizes delta packages  by removing redundant data from older delta packages . Specifically, the package manager  evaluates the contents of previously generated delta packages  with respect to the contents of the newly generated delta package  (block ). The contents of respective older delta packages  can readily be determined in view of the delta version history data file  of , which maintains such information. Data storage requirements can be further reduced by normalizing all cached delta packages  (i.e., corresponding to a particular full package ) into a single most recent delta package .",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 4","FIG. 3","FIG. 4","FIG. 3"],"b":["300","108","308"]},"At block , it having been determined that DR is enabled at a particular site  (block  of ), the delta package manager  at the central source server  determines the particular data source options that were previously selected for distribution of the new package . (I.e., as discussed above with respect to block  of , when a package  of source files  is generated for the first time, an administrator specifies a particular the package  data source option. The data source options are: (1) use a compressed copy of the source; or, (2) always obtain files from the source directory. The package manager  generates and distributes delta package(s)  differently for parent site  DPs  based on which particular option was selected by the administrator when the package  was distributed for the first time.","At block , if \u201calways obtain files from source directory\u201d is not the package distribution option, the specifics of block  of procedure  continue at page reference \u201cA\u201d, block  of . Otherwise, at block , the package manager  performs a mirror copy operation of the delta source files  to the site  DPs . To accomplish this operation, the delta source manager  compares file attributes between source files in the new package  to the software inventory or source files that are already at respective targeted distribution servers . The source file attributes that are compared in this operation include, for example, file name, file size, file time stamp, and\/or file path.","The delta package manager  maintains site software inventories in the software inventory  data file. If a particular source file in the new package  is different (e.g., added, removed, modified, etc.) as compared to a source file on a particular distribution server , the particular source file is copied to the particular distribution server ; otherwise the particular source file is not copied to the particular distribution server .","The particular data distribution determination operations of blocks  and  (i.e., whether package or source files are to be communicated to child sites ) are more specifically directed to an enterprise's centralized source server . When a child site  receives a package or source files from a parent site  or , the any further dissemination of the received package of source file is communicated to any of the receiving site's  children sites  (if any), in the same manner as they were received.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 5","FIG. 3","FIG. 5","FIGS. 3 and 4"],"b":["300","108","308"]},"At block , if \u201cuse a compressed copy of the source\u201d was the package distribution option, the delta package manager  generates a delta package  by comparing the source files in the originally distributed full package  to the source file contents of the new package . The differences between the original package  and the new package  are saved to the new delta package .","At block , the package manager  merges the newly generated delta package  (block ) into the original compressed package file  which corresponds to the received update notification (block  of ), to generate the binary equivalent of a full compression of the source files in the new package . This compressed updated full package  is then stored for subsequent use (e.g., for responding to additional update notification messages (block  of ), for use in an auto-recovery mechanism of block  of , etc.) by the source server .","At block , the delta package manager , for each distribution server  that is targeted to receive the package update (block  of ), determines whether the version of the package that is currently being used by each respective targeted distribution server  is more than one (1) version out of date from the source files represented in the received package update (block ). At block , for each respective distribution server  using a package that is not more than one version out of date as compared to the received package update (block ), the delta package manager  communicates the newly generated delta package  (block ) to the respective distribution server .","At block , for each respective distribution server  that currently has a package that is more than a single version out of date as compared to the received package update (block ), the delta package manager  generates a corresponding normalized delta package . A normalized delta package  includes the entire source files required to bring a particular distribution server  from its outdated version of source files to the current source file versions, as represented by the newly generated delta package .","To perform this normalization operation, the delta package manager  determines each of the respective source files that are needed to bring the respective distribution server  content from its particular version of source files to the current version of source files, as represented by the newly generated delta package  (block ). The delta package manager  merges one or more previously generated delta packages  with the newly generated delta package  (block  to generate a normalized delta package  based on these determined source file differences.","Previous delta package files  are cached by the package manager  up to a maximum number identified in a particular source distribution server's  configuration data . Such a maximum delta package cache number can be based on a number of criteria. For instance, a default number of cached delta packages  may depend on the particular site  configuration of a system ; the number of child sites , the number and frequency of updates to packages , and so on.","Alternatively, the package manager  can generate a normalized delta package  that includes only those source file differences required to bring a particular software application on a distribution server  from a particular version up to another specified version, which does not necessarily need to be the most recent version. The package\/source manager  determines which software application version the distribution server  desires in any one of a number of different ways. For instance, the package\/source manager  can inquire via a communicate message to the server , as to which version of the software application is desired and responsive to such an inquiry, the distribution server  responds with its desired version. Additionally, such versioning information can be stored as configuration data  and updated accordingly.","At block , the delta package manager  communicates the respective normalized delta package(s)  to those distribution servers  that have a corresponding package that is more than a single version out of date as compared to the received package update (block ).","Computer-Readable Media","Exemplary subject matter to perform delta replication of source files and packages from a central parent site  across a communication path  such as a network (e.g., an organizational intranet and\/or the Internet) to any number of child sites  may be stored on or transmitted across some form of computer-readable media. Computer-readable media can be any available media that can be accessed by a computer. By way of example, and not limitation, computer readable media may comprise \u201ccomputer storage media\u201d and \u201ccommunications media.\u201d","\u201cComputer storage media\u201d include volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules, or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by a computer.","\u201cCommunication media\u201d typically embodies computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as carrier wave or other transport mechanism. Communication media also includes any information delivery media.","The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared, and other wireless media. Combinations of any of the above are also included within the scope of computer readable media.","The described arrangements and procedures provide for performing delta replication of source files and packages across networked resources. Although the arrangements and systems to perform delta replication of source files and packages across networked resources have been described in language specific to structural features and methodological operations, it is to be understood that the arrangements and procedures as defined the appended claims are not necessarily limited to the specific features or operations described. Rather, the specific features and operations are disclosed as preferred forms of implementing the claimed subject matter."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The same numbers are used throughout the drawings to reference like features and components.",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 4","FIG. 3","FIG. 4"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 5","FIG. 3","FIG. 5"]}]},"DETDESC":[{},{}]}
