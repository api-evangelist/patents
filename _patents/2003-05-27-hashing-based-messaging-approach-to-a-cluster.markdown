---
title: Hashing based messaging approach to a cluster
abstract: In a system and method for distributing and processing messages, a message may be sent to a message middleware component by a message producer. The message middleware component may provide the message to a cluster of nodes (such as a cluster of application servers or a cluster of application components). The node may implement a message verifier to determine if it is the node responsible for processing the message. The node that is responsible for processing the message may process the message and communicate the result to the other nodes. The other nodes not responsible for processing the message may ignore the message.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07400624&OS=07400624&RS=07400624
owner: Sun Microsystems, Inc.
number: 07400624
owner_city: Santa Clara
owner_country: US
publication_date: 20030527
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION OF EMBODIMENTS"],"p":["1. Field of the Invention","This invention relates to computer application messaging, and more particularly to managing application messages in a clustered container.","2. Description of the Related Art","As network functionality increases, it is becoming increasingly more important for systems to allow applications and application components to be distributed across networks (e.g., on multiple application servers). For applications and application components to be effectively distributed, various distributed parts of applications and application components (i.e. nodes) need to be able to communicate with each other. Nodes may communicate with each other using messaging to exchange information. The information may be sent and received by nodes using only a predetermined message format and a destination address for the message. A node may be a software component or process that runs on a common computer or different computers connected by a network or networks. A node may be a message producer and\/or a consumer. The predetermined message format may include a message header for message identification, a properties section for application-specific, provider-specific, and optional header fields, and a body section that contains the content of the message. The content of a message may include text, data packets, objects, or other information to be communicated between nodes.","Several different types of messaging systems may be used for communicating between nodes including point-to-point and publish-and-subscribe. As seen in , in a point-to-point messaging system (generally a one-to-one delivery), a message  may be sent by a message producer  to a message consumer  through a message queue  (also known as a virtual channel). For example, a message producer  may send a message  to a message queue  for a message consumer . The message consumer  receives and processes the message  from the message queue .","As seen in , in a publish-and-subscribe messaging system (generally a one-to-many broadcast), the message producer  may be a publisher for a topic  (also known as a virtual channel) that sends a message  to several message consumers (known as subscribers) that have subscribed to the topic . For example, the message producer  may send a message  to a topic . Several nodes, such as the message consumer  and the second message consumer  may subscribe (i.e., request that messages of a certain type be sent to the node when available) to the topic . The topic  may deliver the message  to the message consumer  and the second message consumer . Message consumers not subscribed to the topic do not receive the message.","To facilitate sending and receiving messages, nodes typically connect to a messaging agent for implementing message queues and\/or topics. One example of a messaging agent may be implemented according to the Java Messaging Service (JMS). Messages may be sent and received asynchronously, and nodes sending and receiving messages do not typically need to know anything about the nodes they are communicating with. This allows more freedom between nodes and makes it easier to design interfaces between nodes and easier to distribute applications and application components across a network.","Some network environments may utilize clustered systems (e.g., clustered message driven bean (MDB) containers). A clustered system may include nodes participating in a messaging system. A cluster may include multiple nodes that behave as a single node in the messaging system. For example, a node may be a \u201cbean\u201d (e.g., an application component) clustered with other message driven beans. Message driven beans may use JMS to access message-oriented middleware (MOM) for messaging with other nodes (e.g., MDBs) in a network. A cluster of nodes may need to appear as a single producer\/consumer for typical messaging systems. For example, confusion may result if two nodes in a cluster receive and process a topic message for which the cluster has subscribed to as a single entity. Also, it may be desirable for a cluster to support numerous different message-oriented middleware products.","In one embodiment, a system may include a message producer, a message middleware component, and at least one message consumer. A message middleware component may be configured to receive a message from the message producer and pass the message to a message consumer. In one embodiment, a message consumer may include a cluster of message consumer nodes (each of which may be a message consumer to receive the message). In one embodiment, at least one node in the cluster of nodes may receive the message from the message middleware component and determine for each message received whether it is the node assigned to process the message. In one embodiment, only the node assigned to process the message processes the message. For example, if a node should not process the message, the node may ignore the message.","In one embodiment, at least one node in the plurality of nodes may receive the message through a point-to-point transfer. In one embodiment, the plurality of nodes may receive the message as subscribers to a topic. In another embodiment, at least one node in the plurality of nodes may receive the message from a message-oriented middleware as a subscriber to a topic. In one embodiment, determining whether the node is the node assigned to processing the message may include using a message verifier to calculate a relative value and comparing the calculated relative value to a range of calculated relative values each node is assigned to. In one embodiment, the message verifier may determine a node to process the message using information in the message. For example, the information in the message may include a destination of the message, delivery mode of the message, an identification of the message, a time the message was sent, a type of the message, an expiration of the message, or a priority of the message. In one embodiment, the message may be a Java Message Service (JMS) message and the node may implement a message driven bean.","While the invention is susceptible to various modifications and alternative forms, specific embodiments thereof are shown by way of example in the drawings and will herein be described in detail. It should be understood, however, that the drawings and detailed description thereto are not intended to limit the invention to the particular form disclosed, but on the contrary, the intention is to cover all modifications, equivalents and alternatives falling within the spirit and scope of the invention as defined by the appended claims.","Referring to , an embodiment of a messaging system including multiple clustered consumers is illustrated. As applications and application components (i.e., message producers ) need to communicate with other components, the message producers  may use a messaging system to pass information in the form of messages. A messaging system may be used by a message producer  that wants to send a message to a particular message consumer (e.g., message consumer ) or to broadcast a message to several message consumers (e.g., message consumer  and clustered consumer ). For example, a message producer , such as, but not limited to, message producer (which may, for example, be an application on an application server), may produce messages with information for one or more message consumers (which may contain one or more nodes) in the system. For example, clustered consumer  may contain nodes , , and . Each node may be an application component running on one or more application servers.","In one embodiment, the nodes  may receive a message from a message producer  through the message-oriented middleware (MOM) . In one embodiment, the MOM  may be software distributed among nodes. Other embodiments of MOM  are also contemplated. In one embodiment, the MOM may provide an Application Programming Interface (API) to allow application components to be distributed across networks and allow messaging communication between the components and\/or between applications by using the MOM .","In one embodiment, clustered message consumers ,  may receive messages in a point-to-point message delivery to a respective clustered consumer, or message consumers ,  may receive the message as a subscriber to a topic. In one embodiment, the MOM  may receive the message and then distribute a copy of the message to each node ,  in the clustered consumer , . In one embodiment, each node may include a message verifier ,  to determine if it is the node in the clustered consumer that is responsible for processing the message. In one embodiment, the message verifier may perform a hash or a calculation resulting in a relative value that is compared to a range of relative values each particular node is responsible for. For example, the message verifier may calculate a remainder of dividing a message identifier by a node identifier and then comparing the remainder to a unique message range of values that each node is responsible for. Other calculations, hashes, and methods of distributing responsibility for message processing among nodes  in clustered consumer are also contemplated. For example, the message verifier may determine if its node in the cluster of nodes will process the message based on a different message property or other information in the message. For example, the information in the message that may be used in the message verifier to determine which node will process the message may include, but is not limited to, a destination of the message, a delivery mode of the message, an identification of the message, a time the message was sent, a type of the message, an expiration of the message, and a priority of the message. In some embodiments, a hash of one or any combination of such properties may be used to determine if a message is assigned to a particular node.","Messages communicated between message producers  and message consumers may contain several different types of information such as, but not limited to, formatted data and requests for action. In addition, the messages may be in several different formats including, but not limited to, streams of values that are written and read sequentially, pairs of data values including a string and a value, continuous streams of bytes to fit a predetermined message format, and serializable Java objects. In one embodiment, the message may be a Java Message Service (JMS) message.","In one embodiment, the message processing may be handled independent of the type of MOM used (e.g., the message processing may be message-oriented middleware neutral). Because the message processing is independent of the MOM , numerous different MOM products may be interfaced with clustered consumers.","In one embodiment, responsibility for message handling may be divided among the nodes of the cluster. Each node may be responsible for determining if it should handle the message. Each node  receiving the message may use a message verifier  to determine if it should process the message so that only one node the cluster processes the message. If the message verifier determines that messaging handling responsibility is not assigned to its node, the message maybe ignored by that node. As a result, the cluster may act as a single consumer in the messaging system. For example, the MOM  may send copies of the message to each node in the cluster. The nodes  in the cluster may use a message verifier  to determine which node of the message consumer nodes  should process the message. For a subsequent message received from a queue, the MOM  may send a copy of the message to all of the nodes  in the cluster and a different node may be responsible for handling the message according to the message verifier . For topic messages, the MOM  may send a copy of the message to each node  in the cluster. Each node  in the cluster may use a message verifier  to select a single one of the nodes  of the cluster to process the topic message. In one embodiment, each node may perform a hash of one or more message properties for each message received by the cluster to determine if the hash value falls within a predetermined range assigned to that node. If the hash falls within a range assigned to a node, that node processes the message and the other nodes ignore the message.","The MOM  may establish a queue for each message consumer node in the cluster. In one embodiment, the MOM  may put each message in an appropriate queue for each cluster node. Each node receives the message and determines if it is the node responsible for processing the message.","Referring to , an embodiment of a JMS based messaging system including multiple clustered application servers is shown. In one embodiment, a message producer  may produce messages to provide to a messaging middleware, such as, but not limited to Java Messaging Service (JMS) compliant middleware . In one embodiment, the JMS compliant middleware  may provide the message to each application server  in the clustered consumer . For example, the MOM  may receive the message in a point-to-point message transfer or as a subscriber to a topic. The MOM  may then provide the message to each node (e.g., application servers ) in a clustered consumer . In one embodiment, each application server  may implement a message verifier, such as message verifier , message verifier , and message verifier , to determine which node in a cluster of nodes will process the message. The node responsible for processing the message may then process the message. The other nodes may ignore the message. In one embodiment, the node may implement a message driven bean (an application component), such as, but not limited to, message driven bean , , and . Message driven beans  may act as consumers of the message in the application servers . Other consumers are also contemplated.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4"},"In , each node in a cluster of nodes (e.g., a clustered consumer) may receive a message. In one embodiment, the message received may be received because the node was subscribed to a topic. In one embodiment, the node may receive the message in a point-to-point message delivery.","In , each node may determine if the message falls within its assigned unique message range. For example, each node may implement a hash to determine if it is the node responsible for processing the message.","In , the node for which the message is in range may process the message. In one embodiment, a message driven bean may process the message. In one embodiment, results from processing the message may be sent from the node that processed the message to the other nodes in the cluster of nodes.","In , the other nodes in the cluster of nodes may ignore the message. In one embodiment, the messaging system may want to insure that only one node processes the message. In addition, the messaging system may want to insure that it only needs to send the message once. In one embodiment, the other nodes may send an acknowledgement of receipt of the message and then ignore it. In one embodiment, only the node that processes the message may send an acknowledgement of receipt. In another embodiment, no acknowledgement of receipt may be sent.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 5"},"In , a message may be received. For example, each node in a cluster of nodes may receive a message from a MOM coupled to the nodes. The node may receive the message as a point-to-point message transfer or as a subscriber to a topic. In one embodiment, each node may receive a message directly from a message-oriented middleware (e.g., each node may subscribe to a topic).","In , a hash may be computed by each node to determine if the node is the node responsible for processing the message. In one embodiment, the hash may be computed based on a message property. For example, a message identification number for the message may be divided by a node number for the node in the cluster of nodes and the remainder used as the hash value.","In , the node may determine if the hash falls within an assigned range. In some embodiments, the assigned range may not be sequential. For example, a table may indicate hash values for a particular node.","In , if the hash is within an assigned range, the message may be processed. In one embodiment, a result from processing the message may be accessible to the other nodes in the cluster of nodes.","In , if the hash is not within the assigned range, the message may be ignored by that node. In one embodiment, the node may send an acknowledgement of receipt for the message even if it is not the node that is responsible for processing the message.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 6","b":["600","620","611","625","615","611","611","650","650","651","625","630","635","640","645"]},"Various embodiments may further include receiving or storing instructions and\/or information implemented in accordance with the foregoing description upon a computer accessible medium. Suitable computer accessible media may include storage media or memory media such as magnetic or optical media, e.g., disk or CD-ROM, random access memory, or other memory, as well as transmission media or signals such as electrical, electromagnetic, or digital signals, conveyed via a communication medium such as a network and\/or a wireless link.","Further modifications and alternative embodiments of various aspects of the invention may be apparent to those skilled in the art in view of this description. Accordingly, this description is to be construed as illustrative only and is for the purpose of teaching those skilled in the art the general manner of carrying out the invention. It is to be understood that the forms of the invention shown and described herein are to be taken as the presently preferred embodiments. Elements and materials may be substituted for those illustrated and described herein, parts and processes may be reversed, and certain features of the invention may be utilized independently, all as would be apparent to one skilled in the art after having the benefit of this description of the invention. Changes may be made in the elements described herein without departing from the spirit and scope of the invention as described in the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A better understanding of the present invention may be obtained when the following detailed description is considered in conjunction with the following drawings.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1","i":"a "},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1","i":"b "},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
