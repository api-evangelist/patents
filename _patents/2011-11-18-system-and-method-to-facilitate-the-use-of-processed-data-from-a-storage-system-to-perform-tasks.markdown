---
title: System and method to facilitate the use of processed data from a storage system to perform tasks
abstract: A system and method for facilitating the use of use processed data from a storage system to perform one or more tasks are disclosed. For example, the method can include identifying data, stored within a storage system, and needed to perform a task. Such data can be stored in a processed form, as a result of such data having been previously processed by the storage system. A determination is made to determine whether the identified data is stored in a processed form. If so, a subsequent determination is made to determine whether the data in the processed form is usable to perform the task. If the data in the processed form is usable to perform the task, a request is generated to request the data in the processed form. The processed data can then be used to perform the task.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09529829&OS=09529829&RS=09529829
owner: Veritas Technologies LLC
number: 09529829
owner_city: Mountain View
owner_country: US
publication_date: 20111118
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","DESCRIPTION OF THE RELATED ART","DETAILED DESCRIPTION"],"p":["This invention relates to storage systems, and more particularly, to utilizing processed data from a storage system to perform tasks.","Storage systems sometimes process data, using one or more processing techniques, prior to storing such data. For example, a storage system may perform data compression, data deduplication, data encryption on data prior to storing such data in the storage system's storage units. This type of processing can be performed in order to minimize the storage space required when storing data in the storage system.","However, the processing performed by a storage system on a given set of data is typically performed in a manner that is seamless and, frequently, the details of which are unknown to an application accessing the storage system. However, an application may perform a task that might otherwise benefit from data in a processed form. In such cases, lack of such recognition, as well as information regarding the details of such processing techniques, leads to inefficiencies in the use of computing resources to perform such tasks.","While the invention is susceptible to various modifications and alternative forms, specific embodiments of the invention are provided as examples in the drawings and detailed description. It should be understood that the drawings and detailed description are not intended to limit the invention to the particular form disclosed. Instead, the intention is to cover all modifications, equivalents, and alternatives falling within the spirit and scope of the invention defined by the appended claims.","Data can be processed by a storage system in one of several different ways. For example, data can be processed in an effort to reduce the amount of storage space needed to store the data. Data processing can include data compression techniques in which data is compressed according to an algorithm, data deduplication techniques in which duplicate copies of data are removed, and other similar approaches. In other examples, data can also be processed to organize data in a particular order, to encrypt data, to divide a set of data into subsets of data, and so on. Techniques such as data compression, data deduplication, data organization, data encryption, and data division are herein after referred to as data processing techniques.","Data, as it exists prior to processing, is referred to herein as unprocessed data, or data in an unprocessed form. Data, as it exists after processing, is referred to herein as processed data, or data in a processed form. An application may be able to use processed data in a processed form to perform various operations. These operations can include operations such as backups, replication, archiving, and so on. Performing these types of operations are referred to herein as performing tasks.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","105","105","110","115","120","130","105","133","135","133","140","130","145","150","1","100","160","160","170","175","180","130","160","133","135"],"i":["a","b","c"]},"Primary computing device  and secondary computing device  can be any type of computing device, such as a desktop computer, a laptop computer, a smart-phone, a portable computing device, a server, and so on. Application  is executed by primary computing device  and application  is executed by computing device . These applications access data via respective file systems, such as file systems  and . Applications  and  can generate and\/or consume data organized by the file systems. Applications  and  can initiate tasks such as replication, backups, organization, encryption, and so on.","File systems  and  facilitate the organization of data into files and\/or folders (e.g., special files that can contain additional files and\/or folders) and allow applications, such as applications  and , to access the organized data. This data can be stored within storage volumes ()-(N). Typically, applications  and  access data as files and folders presented by file systems  and . File systems  and  thus provide organization to the data accessed by applications  and  allowing such data to be found, retrieved, accessed, and modified within file systems  and . File systems  and  can use one of several possible file system architectures for organizing data into files and folders. Examples of file system architectures include File Allocation Table (FAT), New Technology File System (NTFS), Hierarchical File System (HFS), High-Performance File System (HPFS), Unix File System (UFS), Veritas File System (VxFS), and so on.","Volume managers  and  organize the physical elements of a storage system (e.g., storage system ) into one or more logical volumes. These logical volumes include the files and folders represented by file systems  and .","A data processing module  (illustrated, for example, as some combination of data processing sub-modules () and (), or data processing sub-modules () and (), which are referred to in the aggregate as data processing module ) identifies, analyzes, requests, retrieves, and transmits processed and un-processed data from storage volumes ()-(N). Thus, the functionality provided by a data processing module, such as data processing module  can be divided into two sub-modules, data processing sub-module () and data processing sub-module () or data processing sub-module () and data processing sub-module (). Alternatively, the functionality of data processing module  can be implemented solely in data processing sub-modules () or (), or solely in data processing sub-module ().","Data processing module  identifies data to be used as part of performing a task. Some or all of this data may have been previously processed by storage system  prior to the data being stored. Data processing module  can perform an analysis of the identified data, or alternatively processing information pertaining to such data, to determine if the data has been previously processed.","Determining whether data has been previously processed can be advantageous to an application performing tasks. This is because such tasks may involve copying and sending data from one location (e.g., primary computing device ) to another location (e.g., secondary computing device ) for storage. The amount of data copied and transmitted from one computing device to another affects the amount of computing resources necessary to perform such tasks. For example, if a task involves copying a large amount of data from one computing device to another, the amount of network bandwidth and processing needed to perform such a task can quite significant.","Often, data is processed in some manner by a storage system (e.g., storage system ), prior to such data being stored. Information regarding the details of such processing, however, is frequently unavailable to an application that performs a task. Thus, data needed for a task is processed prior to storing such data in a storage system (to which a primary computing device is coupled), un-processed when such data is retrieved for the application, transmitted to a secondary computing device, and re-processed by the storage system to which the secondary computing device is coupled, prior to storing such data. However, in some cases, the storage systems may be the same, as is the case in . Alternatively, the primary and secondary computing devices may be coupled to different storage systems, where the two storage systems process data similarly (e.g., using similar processing techniques) prior to storing data.","In these types of scenarios, performing certain tasks can be made more efficient by providing information to an application that indicates the data has been previously processed. This is because an application can use information regarding the details of such processing to determine whether using data in a processed form would be advantageous for completing a task. For example, data processing module  can determine that retrieving data in a processed form reduces the amount of data to be transmitted from a primary computing device to a secondary computing device and reduces the amount of network bandwidth consumed in transmitting such data.","If having the data in a processed form is useful for performing a task, data processing module  can then specifically request that the data needed for performing the task be provided to the application in its processed form. Doing so leads to a more efficient use of computing resources. This is because, for example, in the case of data compression and deduplication techniques, the application will need less storage space, less network bandwidth when transmitting the processed data, and less processing resources by avoiding the need to de-process (e.g., de-compress) and re-process (e.g., re-compress) data that already existed in a processed form (e.g., was already available in a compressed form).","An application can map the identified data needed for a task to underlying logical unit numbers (LUNs) within storage system . Doing so allows storage system  to locate and retrieve data within storage volumes ()-(N). The application can further invoke an application programming interface (API) to read the requested data in the processed form. Data processing module can thus generate a request for the data mapped to the specific LUNs in storage system .","Data processing module  can also generate a request for information describing the processing technique used to process data. This information can indicate whether data has been processed and can indicate what, if any, processing technique and algorithms were employed. For example, the information provided to an application can include an indication that the data has been processed, an indication that the information was processed according to a compression technique, and an indication of the compression algorithm used to compress the data. This type of information can be determined by analyzing the data itself or by analyzing processing information  within storage controller . An example of processing information  can be metadata.","In some cases, data needed for a task may not have been previously processed. However, having the data in a processed form can still advantageous. In these cases, data processing module  can request that storage system  perform a processing technique on the data, prior to providing such data to the application.","Data processing module  receives data retrieved by storage system  and prepares to provide such data to the requesting application via an API invoked for receiving such data. Additionally, data processing module  can also receive information regarding the details of a processing technique and may prepare to provide such data to the application via the same API or a secondary API dedicated to receiving such information.","Data processing module  also receives data (e.g., via data processing subm-module ()) from primary computing device . This data can be received in a processed or un-processed form. In addition, data processing module  can also receive information describing one or more processing techniques applied to the data. For example, data processing module  can receive information indicating that the received data has been processed according to a compression technique using a particular compression algorithm. Data processing module  can then identify the data (in its current form) and the corresponding information for storage in a secondary storage system.","Network  provides a communication path from primary computing device  to secondary computing device  and storage controller  to facilitate transporting data (in a processed or un-processed form) between primary computing device , secondary computing device , and storage system . In some cases, network  also provides a communication path to facilitate transporting information describing the details of a processing technique. Network  can be any type of network, such as an intranet, a wide area network (WAN), a local area network (LAN), a personal area network (PAN), or the Internet.","As shown, network  is illustrated as a single communication medium for providing all types of communication between primary client device , secondary computing device , and storage system . Alternatively, although not shown, network  can also be divided into two or more communication mediums. In such cases, at least one communication medium is used to send data in a processed or un-processed form and at least one other communication medium is used to send information describing the details of a processing technique.","As shown, storage system  provides a data storage mechanism shared by primary computing device  and secondary computing device . Storage system  includes a storage controller , processing information , and one or more storage volumes illustrated as storage volumes ()-(N). Examples of storage system  include a disk array, just a bunch of disks (JBOD), a redundant array of independent disks (RAID), a DVD\/CD jukebox, a tape array, and other types of media.","Storage controller  provides a mechanism for organizing, communicating with, and accessing data stored within storage volumes ()-(N). Storage controller  organizes data in storage volumes ()-(N) into logical blocks. A LUN is used to represent each logical block. Storage controller  typically locates data within a logical block of storage system  by referencing a LUN that corresponds to such a logical block.","Storage volumes ()-(N) are storage volumes of a fixed size. In addition, storage volumes ()-(N) provide data storage for primary computing device  and secondary computing device . Thus, storage volumes ()-(N) provide storage for data and corresponding attributes of the data (e.g., attributes describing the details of the processing techniques applied to such data). Each storage volume  can include one or more storage media, such as hard disks, compact discs (CDs), digital versatile discs (DVDs), magnetic tapes, solid state memory, or the like.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 2","FIG. 1"],"b":["200","100","200","205","223","225","130","230","235","1","245","263","265","130","270","275","1"],"i":["b","c"]},"Storage system  and storage system  can perform similar processing techniques on data to be stored, prior to storing the data. In such cases, a task can be made more efficient by using data in a processed form. This is because processing the same data at storage system  and storage system  will yield the same processed data in the same processed form. Thus, processed data from storage system  can be sent as-is (e.g., in a processed form) from primary computing device  to secondary computing device .","However, in scenarios where storage system  and storage system  do not perform similar processing techniques before storing data, the data requested by an application may need to be un-processed by storage system  prior to providing such data to an application performing a task.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 3","b":["130","130","310","320","330","340","350","310"]},"Data identification module  identifies data needed to perform a task. Data needed for a task can be identified based on blocks, data segments, files, and\/or applications. The data can then be further identified by mapping the data to underlying LUNs of a storage system. Doing so allows data in logical units to be identified and retrieved. Data analysis module  then determines whether the identified data has been previously processed by a storage system. This determination can be made by analyzing the data or by analyzing information (e.g., metadata) describing the details of a processing technique applied to the data.","Request generation module  generates requests for retrieving data from a storage system. These requests are requests for data corresponding to underlying LUNs in a storage system. The request may include a request for information indicating that the data should be returned to the requesting application in a processed or un-processed form. Data retrieval module  initiates a search of such data. Once located, the data is retrieved and provided to the requesting application. Moreover, data retrieval module  can also initiate the storage of data and information (e.g., attributes) describing the processing techniques applied to such data within a secondary storage system. Processing module  initiates the processing of data according to a processing technique. Processing module  can also initiate a reversal of the processing performed on the data.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 4","FIG. 3","FIG. 4"],"b":"130"},"The process begins at  where the data to be accessed to perform a task is identified. The identified data can include subsets of data, files, or a combination of both. Data identified at  can be identified by an application referencing a file system to select certain data subsets or files. In addition, the application can map the identified data to identify corresponding LUNs in a storage system.","Once the data has been identified, the process continues to  where a determination is made as to whether the identified data has been previously processed. Determining whether data has been previously processed is a determination that can be made by analyzing the data itself or by analyzing processing information regarding the details of a processing technique applied to the data. Processing information can facilitate identification of a processing technique and a specific algorithm used when performing the processing technique. For example, processing information can indicate that the identified data was previously processed, can indicate that the data was processed according to a compression technique, and can indicate the compression algorithm employed.","In the event that the data has not been processed previously, the process continues to  where a determination is made as to whether the data should be processed. Data can be processed at this point if an application determines that using the identified data in its processed form would be advantageous in performing a task. If a determination is made at  that the data is not to be processed (e.g., because having the data in the processed form would not be advantageous to perform a task), a determination is made at  that the identified data should be retrieved as-is from the storage system. Alternatively, if a determination is made at  that the data should be processed (e.g., because having the data in the processed form would be advantageous to perform a task), the process continues to  where a request is issued to the storage system requesting that the identified data be processed accordingly. Once the data is processed, a determination is made at  that the identified data should be retrieved in the processed form from the storage system.","Referring back to , if a determination is made that the data has been previously processed, the process continues to . At , a determination is made as to whether the data in a processed form can be used in performing a task. For example, data in a processed form can be used to perform a task in cases where a secondary computing device and\/or secondary storage system are able to receive data in the processed form and are able to reverse a processing technique to re-create the data in the un-processed form, as needed, as part of completing a task. This might be the case, for example, where a primary and secondary computing devices share the same storage system or where the primary and secondary computing devices and\/or the primary and secondary storage devices employ similar processing techniques (e.g., the same techniques for compression, deduplication, encryption, and so on).","If a determination is made at  that the data in the processed form cannot be used to perform a task, the process continues to  where a determination is made that the data should be retrieved in an un-processed form from the storage system. Alternatively, if a determination is made at  that the data in the processed form can be used to perform a task, a determination is made at  that the data should be retrieved in a processed form from a storage system. At this point, the process ends.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 5A","FIG. 5A","FIG. 3"],"b":["130","510","515"]},"An analysis of whether data should be retrieved in a processed form can be performed, for example, by the process of . If a determination is made at  that the identified data should not be retrieved in a processed form, the process continues to . At , a request is generated to request the identified data in a processed form.","Alternatively, if the determination made at  indicates that the identified data should be retrieved in a processed form, the process continues to . At , a request is generated to request the identified data in the processed form. An additional request may also be generated to request information regarding a processing technique used to process the data. The request for information regarding the processing technique can be part of the same request for information or it can be a separate request.","The level of information that is needed to describe a processing technique can vary depending on system architecture. For example, if primary and secondary computing devices share the same storage system, the information requested at  is fairly minimal. In this case, the information requested at  need only describe that a processing technique has been utilized and need only identify the processing technique. The same would apply for an architecture in which the two computing devices are coupled to different storage systems, but the two storage systems employ similar processing techniques. By contrast, if the two computing devices are coupled to different storage systems, the information requested at  may need to be more significant. For example, the information regarding the processing technique may need to include an indication that a processing technique has been employed and may also need to provide the processing algorithm used to employ such a technique.","Once a request has been generated at either  or , the process continues to , where the request is sent to a primary storage system for processing. At , the process awaits receipt of the requested data and information regarding a processing technique, if applicable. At , a determination is made as to whether the data and the optional information requested have been received. If the data and the information have not been received, the process reverts back to  where the process continues to wait for the receipt of the data and the information. However, if the data and the information have been received, the process continues to , where the task is performed. Performing the task may involve sending the data and the information regarding a processing technique to a secondary computing device for storage within a secondary storage system. At this point, the process ends.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 5B","FIG. 5B","FIG. 3","FIG. 5B","FIG. 4"],"b":["130","415"]},"The process begins at , where identified data is analyzed to determine if the data has been previously processed. The data itself, or information associated with the data, may include an indication that the data has been previously processed. At , a determination is made as to whether the analysis of the data indicates that the data has been previously processed. If a determination is made at  that the data has been previously processed, an indication is provided to indicate that the data is in a processed form at .","Alternatively, if the analysis of the data does not provide an indication that the data has been previously processed, the process continues to . At , a further analysis is performed to analyze processing information pertaining to the data, to determine if the processing information indicates previous processing of the data. Processing information can be information such as metadata and can include information describing processing techniques and algorithms used to process data. A determination as to whether the processing information indicates previous processing of the data is performed at . If a determination is made at  that the data has been previously processed, the process continues to  where an indication is provided to indicate that the data is in a processed form. On the contrary, if the processing information does not indicate previous processing, the process continues to  where an indication is provided to indicate that the data is in an un-processed form. At this point, the process ends.","Alternatively, the process of  can make a determination as to whether data has been previously processed by analyzing processing information first. If no determination can be made from the processing information, a subsequent analysis can then be performed to analyze the data and its form. If the analysis of the processing information and the data are unable to provide an indication as to whether the data has been previously processed, further analysis can also then be performed.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 6","b":["610","620","625"]},"In the event that the data is not found in the storage system, an error message is sent to the requesting application at . The process then continues to . In the event that the data is found in a storage system, a further determination is made at  to determine whether the data found is in a processed form. If the data is not in a processed form, the process continues to  where the data is retrieved and sent to the requesting application in its current form. The process then continues to . Alternatively, if the data is in a processed form, the process continues to  where a determination is made to determine whether the data in the processed form is usable to perform a task.","If a determination is made that the identified data in usable for performing a task, the process continues to . At , the identified data is un-processed and subsequently sent to the requesting application in the unprocessed form. The process then continues to . If the determination at  indicates that the data in the processed form is usable to perform a task, the data in its current processed form, along with processing technique information, are sent to the requesting application at . The process then continues to  where a determination is made as to whether any further requested data remains to be retrieved. If more data is to be retrieved, the process loops back to . However, if there is no further data to be retrieved from a storage system, the process ends.",{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 7","b":["710","712","710","714","130","717","718","720","722","724","726","728","730","732","733","734","737","738","735","790","735","739","740","742","746","712","728","747","712","730","748","712"]},"Bus  allows data communication between central processor  and system memory , which can include read-only memory (ROM) or flash memory (neither shown), and random access memory (RAM) (not shown), as previously noted. The RAM is generally the main memory into which the operating system and application programs are loaded. The ROM or flash memory can contain, among other code, the Basic Input-Output system (BIOS) which controls basic hardware operation such as the interaction with peripheral components. Applications resident with computer system  are generally stored on and accessed via a computer-readable medium, such as a hard disk drive (e.g., fixed disk ), an optical drive (e.g., optical disk drive ), a floppy disk unit , or other storage medium. Additionally, applications can be in the form of electronic signals modulated in accordance with the application and data communication technology when accessed via modem  or network interface .","Storage interface , as with the other storage interfaces of computer system , can connect to a standard computer-readable medium for storage and\/or retrieval of information, such as a fixed disk drive . Fixed disk drive  can be a part of computer system  or can be separate and accessed through other interface systems. Modem  can provide a direct connection to a remote server via a telephone link or to the Internet via an internet service provider (ISP). Network interface  can provide a direct connection to a remote server via a direct network link to the Internet via a POP (point of presence). Network interface  can provide such connection using wireless techniques, including digital cellular telephone connection, Cellular Digital Packet Data (CDPD) connection, digital satellite data connection or the like.","Many other devices or subsystems (not shown) can be connected in a similar manner (e.g., document scanners, digital cameras, and so on). Conversely, all of the devices shown in  need not be present to practice the present invention. The devices and subsystems can be interconnected in different ways from that shown in . The operation of a computer system is readily known in the art and is not discussed in detail in this application. Code to implement the present invention can be stored in computer-readable storage media such as one or more of system memory , fixed disk , optical disk , or floppy disk . The operating system provided on computer system  can be MS-DOS\u00ae, MS-WINDOWS\u00ae, OS\/2\u00ae, UNIX\u00ae, Linux\u00ae, or another known operating system.","Moreover, regarding the signals described herein, those skilled in the art will recognize that a signal can be directly transmitted from a first block to a second block, or a signal can be modified (e.g., amplified, attenuated, delayed, latched, buffered, inverted, filtered, or otherwise modified) between the blocks. Although the signals of the above described embodiment are characterized as transmitted from one block to the next, other embodiments of the present invention can include modified signals in place of such directly transmitted signals as long as the informational and\/or functional aspect of the signal is transmitted between blocks. To some extent, a signal input at a second block can be conceptualized as a second signal derived from a first signal output from a first block due to physical limitations of the circuitry involved (e.g., there will inevitably be some attenuation and delay). Therefore, as used herein, a second signal derived from a first signal includes the first signal or any modifications to the first signal, whether due to circuit limitations or due to passage through other circuit elements which do not change the informational and\/or final functional aspect of the first signal.",{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIG. 8","FIG. 7","FIG. 3"],"b":["800","810","820","830","840","845","850","810","820","830","710","810","130"]},"Similarly, servers  and  generally represent computing devices or systems, such as application servers or database servers, configured to provide various database services and\/or run certain software applications. Network  generally represents any telecommunication or computer network including, for example, an intranet, a wide area network (WAN), a local area network (LAN), a personal area network (PAN), or the Internet. In one example, client systems , , and\/or  can include a data processing module , as shown in .","As illustrated in , one or more storage devices ()-(N) can be directly attached to server . Similarly, one or more storage devices ()-(N) can be directly attached to server . Storage devices ()-(N) and storage devices ()-(N) generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions. In certain embodiments, storage devices ()-(N) and storage devices ()-(N) can represent network-attached storage (NAS) devices configured to communicate with servers  and  using various protocols, such as Network File System (NFS), Server Message Block (SMB), or Common Internet File System (CIFS).","Servers  and  can also be connected to a storage area network (SAN) fabric . SAN fabric  generally represents any type or form of computer network or architecture capable of facilitating communication between multiple storage devices. SAN fabric  can facilitate communication between servers  and  and a plurality of storage devices ()-(N) and\/or an intelligent storage array . SAN fabric  can also facilitate, via network  and servers  and , communication between client systems , , and  and storage devices ()-(N) and\/or intelligent storage array  in such a manner that devices ()-(N) and array  appear as locally attached devices to client systems , , and . As with storage devices ()-(N) and storage devices ()-(N), storage devices ()-(N) and intelligent storage array  generally represent any type or form of storage device or medium capable of storing data and\/or other computer-readable instructions.","In certain embodiments, and with reference to computing system  of , a communication interface can be used to provide connectivity between each client system , , and  and network . Client systems , , and  can be able to access information on server  or  using, for example, a web browser or other client software. Such software can allow client systems , , and  to access data hosted by server , server , storage devices ()-(N), storage devices ()-(N), storage devices ()-(N), or intelligent storage array . Although  depicts the use of a network (such as the Internet) for exchanging data, the embodiments described and\/or illustrated herein are not limited to the Internet or any particular network-based environment.","In at least one embodiment, all or a portion of one or more of the embodiments disclosed herein can be encoded as a computer program and loaded onto and executed by server , server , storage devices ()-(N), storage devices ()-(N), storage devices ()-(N), intelligent storage array , or any combination thereof. All or a portion of one or more of the embodiments disclosed herein can also be encoded as a computer program, stored in server , run by server , and distributed to client systems , , and  over network .","In some examples, all or a portion of the computing devices in  can represent portions of a cloud-computing or network-based environment. Cloud-computing environments can provide various services and applications via the Internet. These cloud-based services (e.g., software as a service, platform as a service, infrastructure as a service, etc.) can be accessible through a web browser or other remote interface. Various functions described herein can be provided through a remote desktop environment or any other cloud-based computing environment.","In addition, one or more of the components described herein can transform data, physical devices, and\/or representations of physical devices from one form to another. For example, a data processing module  in  can transform processed data into de-processed data and vice versa.","Although the present invention has been described in connection with several embodiments, the invention is not intended to be limited to the specific forms set forth herein. On the contrary, it is intended to cover such alternatives, modifications, and equivalents as can be reasonably included within the scope of the invention as defined by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention may be better understood, and its numerous objects, features and advantages made apparent to those skilled in the art by referencing the accompanying drawings.",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
