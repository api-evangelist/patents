---
title: Object classification using taxonomies
abstract: As provided herein objects from a source catalog, such as a provider's catalog, can be added to a target catalog, such as an enterprise master catalog, in a scalable manner utilizing catalog taxonomies. A baseline classifier determines probabilities for source objects to target catalog classes. Source objects can be assigned to those classes with probabilities that meet a desired threshold and meet a desired rate. A classification cost for target classes can be determined for respective unassigned source objects, which can comprise determining an assignment cost and separation cost for the source objects for respective desired target classes. The separation and assignment costs can be combined to determine the classification cost, and the unassigned source objects can be assigned to those classes having a desired classification cost.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08275726&OS=08275726&RS=08275726
owner: Microsoft Corporation
number: 08275726
owner_city: Redmond
owner_country: US
publication_date: 20090330
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Enterprises often maintain a comprehensive \u201cmaster\u201d catalog that organizes their products or items used in the enterprise, such as a commercial seller of products. The catalog can comprise a taxonomy, for example, which may comprise many nodes of very diverse products, at varying levels of granularity. Typically, a master catalog is maintained in a computer-based database that may comprise the products, product features, and links that organize the taxonomy of the varying products in the catalog.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.","An enterprise may wish to add products or items from a provider, such as a new seller of items joining a large online commercial portal. When products or items are added to an enterprise, the provider's catalog can be incorporated in the enterprise's master catalog, thereby requiring the provider's items be incorporated into the master taxonomy. The provider's individual products can be classified in the master taxonomy, and a mapping between the different taxonomies can be provided. However, merging catalogs from two different enterprises can be an inherently difficult problem based on a size of the taxonomy, and a size of the catalogs that are to be classified.","Accuracy of the classification can be improved by exploiting information provided by a structure of the taxonomy of the provider. Intuitively, products that are in \u201cclose-by\u201d categories in the provider's taxonomy should be classified in \u201cclose-by\u201d categories in the master taxonomy. This idea underlies many \u201ccollective classification\u201d approaches, and has been shown to work well in the past. However, most of these approaches suffer from scalability issues due to a large number of pairwise relationships that need to be computed for appropriate merging of the catalogs.","Techniques and systems are disclosed that integrate the catalog of a provider (source) into a master taxonomy (target) of an enterprise, that is, classify the products of the source in the target taxonomy. Scalable collective classification is provided by utilizing information about the taxonomy of the source for the classification in a scalable way. Further, incremental updates to the provider's taxonomy can be performed, such as classifying new products from the provider that did not belong in the original catalog, and improve the quality of the classification as new items are added to the enterprise taxonomy. Additionally, a mapping between the provider and target taxonomies can be performed using the classification results. Also, candidate products for manual labeling can be identified based on the rearrangements imposed by a collective classification.","In one embodiment, a baseline classifier can be used to determine a probability that an object from a source catalog belongs to a class in a target catalog for respective source objects, for example, resulting in a list of target class probabilities for a source object. If a target class probability for a source object meets a desired threshold (e.g., one that allocates a particular error rate), the source object can be assigned to the target class having a desired probability (e.g., highest). For those unassigned source objects, a classification cost can be determined for respective target classes from a set of desired target classes.","Determining a classification cost can comprise determining an assignment cost for respective desired target classes for the unassigned source object, where the assignment cost comprises a function of the probability that the unassigned source object belongs to the target class. In this embodiment, for example, an assignment cost may be a cost of assigning the source object to the target class under consideration, where a lower cost may be preferred. Determining a classification cost can further comprise determining a separation cost of the unassigned source object for respective desired target classes, which can comprise combining a function of distance between a desired target class for the unassigned source object and an assigned source object's target class and a function of similarity between the unassigned source object and the assigned source object.","Further, the assignment cost and separation cost of the source object for respective desired target classes can be combined to determine a classification cost for classifying the source object to a target class, for respective desired target classes. In this embodiment, the unassigned source object can be assigned to a target class corresponding to a desired classification cost (e.g., lowest) for the unassigned source object.","To the accomplishment of the foregoing and related ends, the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects, advantages, and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.","The claimed subject matter is now described with reference to the drawings, wherein like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident, however, that the claimed subject matter may be practiced without these specific details. In other instances, structures and devices are shown in block diagram form in order to facilitate describing the claimed subject matter.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":["100","150","100","150","102","152"]},"For example, a first level of the source taxonomy  comprises one class, the \u201call source\u201d node, which comprises all of the products in the source catalog. In this example, the \u201call source\u201d class comprises two sub-classes, the nodes \u201cIT\u201d and \u201cconsumer electronics\u201d in a second level of the source taxonomy . Further, the \u201cconsumer electronics\u201d class comprises three sub-classes, the nodes \u201caudio\u201d, \u201chandhelds\u201d, and \u201cvideo\u201d in a third level of the source taxonomy . This example illustrates one embodiment of a hierarchical tree taxonomy, where respective classes of products may comprise sub-classes of products that are more narrowly descriptive of the products than the class above to which they belong, such as \u201cPDAs\u201d being merely one type of \u201chandhelds.\u201d","Additionally,  illustrates how two taxonomies  &  may comprise a differing type and arrangement of nodes  & . For example, where the source taxonomy's products are divided into two second-level classes, \u201cIT\u201d and \u201cconsumer electronics\u201d, the target taxonomy's products are arranged into three second-level classes, \u201ccameras\u201d, \u201celectronics,\u201d and \u201ccomputing.\u201d Further, while the source taxonomy  divides \u201cconsumer electronics\u201d into three sub-classes, \u201caudio,\u201d handhelds,\u201d and \u201cvideo,\u201d the target taxonomy uses merely two sub-classes for it \u201celectronics\u201d class. This example illustrates how differing taxonomies may classify similar products into differently named classes in the taxonomy.","In , a digital media player device  is classified under the \u201cmultimedia\u201d node  of the source taxonomy . In this example, the classified device  comprises a name, description and attributes that may enable an appropriate classification of the device into the source node \u201cmultimedia\u201d .","If a provider of products wishes to make their products available to an online commercial sales portal, for example, the products may need to be added to the commercial portal's master catalog. In one embodiment, the source taxonomy  may be a provider's product catalog, and the target taxonomy  may be a commercial portal's master catalog. Because the two taxonomies  &  utilize different classes as classification nodes  & , the device  will be reclassified  to identify an appropriate location  in the target taxonomy , for example. In this example, the device  can be classified  utilizing its name, description, and attributes (features) to determine which of the target classes  may be appropriate.","A method can be devised that improves accuracy of object classification from a source catalog (e.g., a product provider's catalog) to a target catalog (e.g., a sales portal's master catalog), and provides scalability for introducing source catalog objects to a master catalog.  is a flow diagram of an exemplary method  for classifying objects from a source catalog to a target catalog, which exploits information provided by classes of products provided by taxonomies of the catalogs, for example.","The exemplary method  begins at  and involves determining a probability that an object from a source catalog belongs to a class in the target catalog for respective classes in the target catalog using a baseline statistical classification algorithm, at . For example, products from a product provider's catalog can be run through a baseline classifier that is not aware of the source taxonomy (e.g., has not been trained to specifically recognize the source taxonomy), such as a Na\u00efve Bayes, logistic regression, support vector machine (SVM), or some other machine learning techniques.","In one embodiment, the baseline classifier can be trained on a sub-set of classes from the target catalog, using product features, such as names, descriptions, and attributes. In this embodiment, for each of the respective objects from the source catalog, the baseline classifier can determine a probability that the object belongs to a class in the target catalog, for each of the target classes. Therefore, an output of the baseline classifier for a source object run through the classifier may be a list of probabilities that correspond to respective target classes, representing a probability that the source object belongs to the target class.","In another embodiment, a baseline classifier may be trained to classify objects into a first level of classes of the target catalog, and other baseline classifiers may be trained for the respective first level classes to classify objects into sub-classes for the respective first level classes of the target catalog. In this embodiment, for example, an object may be run through a first classifier that places it into one of the first-level classes of the target catalog, then run through a second classifier specific to the first-level class chosen by the first classifier.","At , in the exemplary method , a source object is assigned to a target class having a desired probability, as determined by the baseline classifier, if the probability meets a desired threshold. For example, an output of a classification algorithm can be an estimated likelihood that a product belongs to a class. In one embodiment, for example, the object can be assigned to a class that the baseline classifier has assigned a highest probability that the object belongs in that class, out of the respective classes of the target catalog. In another embodiment, for example, the object may first be assigned to a first-level class having a highest probability from a first classifier, then assigned to a sub-class of the first-level class having a highest probability from a second classifier, as described above.","The target class probability needs to meet a desired threshold in order for the object to be assigned to that target class. In one embodiment, the desired threshold is a parameter that separates those objects that can be assigned to a target class from those objects that remain unassigned after this step. In this embodiment, a desired threshold can be selected based on a level of confidence that the baseline classifier can appropriately classify objects into target classes with little error; and a desire to restrict a number of unassigned objects in order to speed up additional classification steps. In this embodiment, these objectives may be met, for example, by selecting a lowest threshold, below which error can be introduced into the classification.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 3","FIG. 3"],"b":["300","302","304","310","308","312","308"]},"In , a vertical distance  between the curves  &  at a point \u03b8  shows an error that may be introduced into the classification if \u03b8  is selected as the threshold. In one embodiment, an error threshold of two percent may be acceptable in the classification (e.g., having an accuracy of 98%), for example, thereby setting the threshold value \u03b8  at 0.87, in . In this way, in this embodiment, one may select a threshold value for classification based on a tolerable amount of error, compared with an amount of unassigned objects that may increase classification speed.","Turning back to , at , a classification cost for assigning an unassigned source object to a target class for respective target classes from a set of desired target classes is determined. In one embodiment, after some source objects have been assigned (fixed) to target classes, a number of unassigned source object may remain. In this embodiment, in order to determine potential target class classifications for the unassigned objects a classification cost can be determined for an object for the respective desired target classes.","In this embodiment, in order to speed up classification, for example, classes used for determining classification cost can be reduced to merely a set of desired classes. The set of desired classes is a sub-set of the set of all the target classes, and can comprise merely those classes having a desired probability for the object, as determined by the baseline classification, described above. For example, a top k classes may be selected, where k is a number that corresponds to a number of target classes that meet an accuracy threshold for object classification, determined when training the baseline classifier. In this example, the k number of classes having a highest probability for the object can be selected as the set of desired classes.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 4","b":["400","400","402","404"]},"In , the graphical representation  has four bars representing one embodiment where a one utilizes four top classes (e.g., having a highest probability for the object) in the target catalog. Bar one  shows an accuracy  of the classifier if merely the category having the highest probability is selected (e.g., k=1, accuracy=58%). Bar two  shows that for approximately 95% of the objects, the correct class is either of the top two highest probabilities output by the classifier. In this embodiment, an accuracy rating of 98% is considered as an accuracy threshold , which is achieved when k is equal to three . Therefore, in this embodiment, if a set of desired classes is the three target classes having a highest probability for the source object, the subsequent classification is likely to have an approximate error rate of two percent.","Turning back to , determining a classification cost comprises determining an assignment cost for respective desired target classes for the unassigned source object, at . An assignment cost comprises a function of the probability that the unassigned source object belongs to the target class. In one embodiment, cost for assigning the unassigned object to a target class, from the set of desired target classes, can be determined by taking the probability determined by the baseline classifier for that target class, and subtracting it from one.","For example, a formula for determining the assignment cost may be represented as: A(x,l)=1\u2212P(x,l), where P(x,l) is the probability that object x belongs to class l, and A(x,l) is the cost of assigning object x to class l (assignment cost). In this example, an assignment cost can be determined for the source object (x) for the respective desired target classes (l), resulting in respective desired target classes having corresponding assignment costs for the source object.","In the exemplary method , at , determining a classification cost further comprises determining a separation cost of the unassigned source object for respective desired target classes. Determining a separation cost comprises combining a function of distance between a desired target class for the unassigned source object and an assigned source object's target class and a function of similarity between the unassigned source object and the assigned source object.","In one embodiment, a function of distance may be defined by a length of a path between two nodes in a taxonomy. For example, where a hierarchical taxonomy has tree-like structure with parent and children nodes, one may count a number hops between nodes in the hierarchy to determine the function of distance for the nodes. As an example, in , , a number of hops between nodes  multimedia and video is three; two hops up to consumer electronics, and one hop down to video.","In one embodiment, an exponential decay may be applied to the distance function, for example, so that classes that are far apart may be further penalized. In this embodiment, a function of distance may be represented by the formula: Dist(l,c)=1\u22122, where Dist(l,c) is a distance metric between the desired target class (l) for the unassigned source object and the assigned source object's target class (c); and hops(l,c) is a number of hops (e.g., along a shortest path) between the l and c. In this example, zero hops would yield a distance metric of zero, one hop would yield a distance metric of 0.5, two hops would yield a distance metric of 0.75, three hops would yield a distance metric of 0.875, and so on. Therefore, a higher number of hops yields a higher distance metric, in this example.","In one embodiment, the source object can be compared with the respective assigned objects (e.g., those source objects that have already been fixed to a target class), from the set of desired target classes, to determine a function of similarity between them. For example, in order to determine similarity, a distance between source classes that the two objects occupied in the source catalog taxonomy can be identified. As an example, a function of similarity between an unassigned source object and an assigned source object may be represented by the formula: sim(x,y)=sim(s,s)=1\u2212Dist(s,s), where sim(x,y) represents the similarity metric between the unassigned source object (x) and the assigned source object (y); sim(s,s) is a similarity metric between a source class (s) containing x and a source class (s) containing y; and Dist(s,s) is the distance metric between sand s.","In this example, a distance between the source taxonomy nodes containing the unassigned source object and the assigned source object can be determined and used to determine the distance metric for these source classes. Further, the distance metric can be subtracted from one to determine a similarity metric for the source objects. In this example, if the source objects occupied a same node in the source taxonomy, the similarity metric would be one, and if the source objects were one node apart the similarity metric would be 0.5, and so on.","Determining a separation cost for a source object with respect to being assigned to a desired target class can comprise combining the distance metric and separation metric for the source object with respect to the desired target class. In one embodiment, in order to obtain a separation cost for assigning the source object to the desired target class, a similarity metric and distance metric is determined for the respective assigned objects with respect to the desired target class. Further, in this embodiment a sum of the combination of the similarity metric and distance metric for the respective assigned objects with respect to the desired target class is taken.","As an example, a formula for determining a separation cost (S(x,l)) for assigning a source object (x) to a desired target class (l) can be represented as follows:",{"@attributes":{"id":"p-0047","num":"0046"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":[{"mi":"S","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","l"],"mo":","}}},{"munder":{"mo":"\u2211","mrow":{"mi":["y","F"],"mo":"\u2208"}},"mo":"\u2062","mrow":{"mrow":[{"mi":"sim","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","y"],"mo":","}}},{"mi":"dist","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"l","mo":",","msub":{"mi":["t","y"]}}}}],"mo":"\u2062"}}],"mo":"="},"mo":","}}},"br":{},"sub":"y "},"In another embodiment, a normalization factor (Z) may be introduced into the formula for determining a separation cost, for example,",{"@attributes":{"id":"p-0049","num":"0048"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":[{"mi":"S","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","l"],"mo":","}}},{"munder":{"mo":"\u2211","mrow":{"mi":["y","F"],"mo":"\u2208"}},"mo":"\u2062","mrow":{"mfrac":{"mn":"1","msub":{"mi":"Z","mrow":{"mi":["x","y"],"mo":","}}},"mo":["\u2062","\u2062"],"mrow":[{"mi":"sim","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","y"],"mo":","}}},{"mi":"dist","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"l","mo":",","msub":{"mi":["t","y"]}}}}]}}],"mo":"="},"mo":","}}},"br":{}},"Using a normalization factor can provide compensation for an uneven distribution of objects in a taxonomy tree. For example, some classes may comprise a greater amount of objects than others. In this example, if a normalization factor is not used in the above formula, a class with many objects may pull in most of the unassigned objects due to the large number of objects in the class. One example of a normalization factor can be formulated as follows: Z=|R(hops(s,s))|, where R(hops(s,s)) is a set of objects that are at a distance (h)=hops(s,s) from object x in the source taxonomy tree.","In the exemplary method  of , at , determining a classification cost further comprises combining the assignment cost and separation cost of the source object for respective desired target classes. In one embodiment, the assignment cost and separation cost may be summed to obtain a classification cost, for example, C(x,l)=A(x,l)+S(x,l), where C(x,l) is the classification cost for assigning the unassigned source object (x) to a desired target class (l); and A(x,l) and S(x,l) are the assignment cost, as described above. In this embodiment, a classification cost for an unassigned source object can be determined for the respective target classes in the set of desired target classes, resulting in set of classification costs corresponding to target classes.","In another embodiment, a regularization factor may be introduced into the combination of the assignment cost and separation cost. In one embodiment, a regularization factor can be utilized to mitigate overfitting, when attempting to fit the classification model that may have too many parameters. For example, a model may only fit if it contains enough complexity; however, obtaining that complexity may be extremely inefficient. As an example of utilizing a regularization factor (\u03b3) in this embodiment, the following formula may be used to determine classification cost of an unassigned source object (x) to a target class (l): C(x,l)=A(x,l)+\u03b3S(x,l).","In the exemplary method , at , the unassigned source object can be assigned to a target class having a desired classification cost for the unassigned source object. As described above, a classification cost is determined for the unassigned object with respect to the target classes from the set of desired target classes. In one embodiment, the desired (e.g., minimum) target class having a lowest classification cost for the unassigned source object can be selected. Further, in this embodiment, now that the formerly unassigned source object has been assigned to a target class, it can be added to a set of assigned objects.","I will be appreciated that, while the embodiments above describe determining assignment costs, similarity and distance metrics, separation costs, and classifications costs using example formulas and calculations, the techniques and systems described herein are not limited to these embodiments. It is anticipated that those skilled in the art may devise alternate embodiments for determining the features described above. Some of the embodiment describe utilize common statistical analysis, however the exemplary methods use a combination of analysis, described herein, that provide a novel approach to classifying objects from a source catalog to a target catalog.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 5","b":["500","502","504"]},"In this embodiment, the respective objects from the source catalog  are run through the trained baseline classifier, at . A source object comprises features in its content as stored in the source catalog, such as the object name, description, and attributes. As the baseline classifier has been trained on the target catalog  based on features of the target classes, at , target class probable matches can be identified by the baseline classifier based on a source object's content. A probability that the source object belongs to a target class is determined by the baseline classifier for the respective target classes.","At , a target class having a highest probability for the source object is selected for respective source objects. If the probability determined by the baseline classifier is equal to or greater than a desired probability threshold, at , the source object is fixed to that class, at . As described above, a threshold can be determined, at , based on a desired potential error rate for the fixing of a source object to a target class. For example, if a ninety eight percent accuracy rating is chosen, a threshold value can be determined based on this chosen rating. Once a source object is fixed to a target class, it can be added to a set of fixed objects, at .","If the probability determined by the baseline classifier is less than the desired probability threshold, at , a top k number of target class is assigned for the source object. As described above, a k number of classes can be determined  for the target catalog based on a tolerable error threshold. For example, the five target classes having a highest probability determined by the baseline classifier for the object may be assigned to the source object.","At , for those source objects that have not been fixed to a target class, a classification cost can be determined. As described above, an assignment cost can be determined for the source object for the respective top k classes, and a separation cost can be determined for the respective top k classes by using the fixed object set. At , the source objects that are not previously fixed to a target class can be assigned to a target class having a lowest classification for the source object. Now that the respective source objects have either been fixed to target classes, at , or assigned to a target class at , the source objects can be classified into the target taxonomy, at .","In one aspect, the techniques described above, comprise a scalable approach to classifying objects from a source catalog to a target catalog. Previous approaches are limited by specifically accounting for pairwise interactions between elements, which incurs a quadratic cost in the classification. Here, classification can be fixed to a limited number of entries (e.g., those chosen by the classifier), and then accounting for interactions between the unclassified objects and the fixed classes, thereby reducing a number of calculations used in the classification algorithm, allowing for a faster classification.","Further, in this aspect, classification of object from the source catalog to a target catalog is linear. Respective source objects can be classified in a linear fashion (e.g., as they come in or from a list) instead of as a group of objects. In this way, data storage of objects undergoing classification is mitigated, as once an object is classified it may not be utilized again in the classification process. Additionally, as described above, the produced classifications, and associations between the source and target taxonomies, can be used to produce a mapping between nodes of the different taxonomies. In this way, in one embodiment, the object classification can be improved to a point where use the second classification step may be mitigated.","A system can be devised that may be used to merge products from a provider's catalog into a master catalog, for example.  is a component block diagram of an exemplary system  for classifying objects from a source catalog to a target catalog. The exemplary system  comprises a baseline classifier , which is configured to determine a probability that an object from a source catalog  belongs to a class in a target catalog  for respective classes in the target catalog . For example, the respective products in a provider's catalog can be run through the baseline classifier , and the baseline classifier  can produce a probability value for the respective target catalog classes that the source object belongs in that target class.","The exemplary system  further comprises an object assignment component  configured to assign a source object to a target class corresponding to a desired probability for the source object if the desired probability meets a desired threshold. Those objects from the source catalog  that have a target class probability above a threshold, as determined by the baseline classifier , can be assigned to the corresponding target class. Those objects whose target class probabilities do not meet the probability threshold will not be assigned to a target class, but sent to a classification cost determiner .","The exemplary system  further comprises the classification cost determination component , which is configured to determine a classification cost of an unassigned source object for respective target classes from a set of desired target classes. In this embodiment, the classification cost determination component  comprises an assignment cost determination component  that is configured to determine an assignment cost for assigning a previously unassigned source object to a desired target classes for the respective desired target classes.","The assignment cost comprises a function of a probability that the unassigned source object belongs to a desired target class. In one embodiment, a desired set of target classes are selected for a source object, and a function of probability that the source object belongs to the desired target class is determined for the respective desired target classes. For example, the probability determined by the baseline classifier  for the class can be subtracted from one to obtain the function of probability. The assignment cost for respective classes is sent to a combination component .","The classification cost determination component  further comprises a separation cost determination component  that is configured to determine a separation cost for an unassigned source object for the respective desired target classes. In this embodiment, the separation cost comprises a combination of a function of similarity between the unassigned source object and an assigned source object and a function of distance between a desired target class for the unassigned source object and the assigned source object's target class. For example, an unassigned source object is compared with respective assigned source objects that had been previously assigned by the object assigner . A similarity function between the objects is determined by looking at their position in the source catalog , for example; and a distance function is determined by looking at the objects' target classes, for the respective desired target classes. The separation cost is sent to the combination component .","The classification cost determination component  further comprises the combination component , which is configured to combine the assignment cost and separation cost of respective source objects for respective desired target classes. For example, for each of the desired target classes selected for the unassigned source object, a classification cost can be determined by summing the assignment cost and separation cost. In another embodiment, a regularization factor may be combined with the separation cost before combining with the assignment cost.","The exemplary system  further comprises an unassigned object assignment component , which is configured to assign unassigned source objects to corresponding target classes that have a desired classification cost. For example, in one embodiment, the unassigned source object can be assigned to the target class that has a lowest classification cost by the unassigned object assignment component . In this way, in this example, the lowest classification cost may indicate that the class has a highest probability with a closest similarity and distance.","In one embodiment, the unassigned object can be sent to the target catalog and classified into the assigned target class from the unassigned object assignment component . Those source object previously assigned by the object assigner  can also be classified into the target catalog , thereby populating the target catalog with the source catalog objects, for example.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":["FIG. 7","FIG. 6"],"b":["700","700","702"]},"For example, when the baseline classifier is trained using a subset of target classes, as described above, it may be determined how many classes are needed to reach a particular desired accuracy rating for classifying unassigned source objects. A desired number of classes (k) can be determined and sent to the classification cost determiner , for example, where a k number of target classes can be selected that have a highest probability of the source object belonging to a target class. In this embodiment, the set of desired target classes may be used by the assignment cost determiner , separation cost determiner , and combination component .","In the exemplary embodiment , the separation cost determination component  comprises a distance determiner  configured to determine a function of a number of node hops from the target class for the unassigned source object to the assigned source object's target class in a hierarchical taxonomy tree of target classes. For example, the distance determiner  may count a number of hops between the target classes and use it to determine a distance metric, to be used by the separation cost determination component  to determine a separation cost for the target class, as described above.","The separation cost determination component  further comprises a similarity determiner  that is configured to determine a similarity between the unassigned source object's source class and the assigned source object's source class from the source catalog. For example, the similarity determiner  can determine a distance between the objects in the source catalog to calculate a similarity metric, to be used by the separation cost determination component  to determine a separation cost for the target class, as described above.","Further, this exemplary embodiment  comprises a normalization factor determination component that is configured to determine a normalization factor. The normalization factor can be used by the separation cost determination component  to compensate for an uneven distribution of objects in a hierarchical taxonomy tree when combining the function of similarity and the function of distance of source objects for desired target classes. For example, the normalization factor can be combined with the separation metric and distance metric for the respective target classes for an object to determine the separation cost.","Still another embodiment involves a computer-readable medium comprising processor-executable instructions configured to implement one or more of the techniques presented herein. An exemplary computer-readable medium that may be devised in these ways is illustrated in , wherein the implementation  comprises a computer-readable medium  (e.g., a CD-R, DVD-R, or a platter of a hard disk drive), on which is encoded computer-readable data . This computer-readable data  in turn comprises a set of computer instructions  configured to operate according to one or more of the principles set forth herein. In one such embodiment , the processor-executable instructions  may be configured to perform a method, such as the exemplary method  of , for example. In another such embodiment, the processor-executable instructions  may be configured to implement a system, such as the exemplary system  of , for example. Many such computer-readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as example forms of implementing the claims.","As used in this application, the terms \u201ccomponent,\u201d \u201cmodule,\u201d \u201csystem\u201d, \u201cinterface\u201d, and the like are generally intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a controller and the controller can be a component. One or more components may reside within a process and\/or thread of execution and a component may be localized on one computer and\/or distributed between two or more computers.","Furthermore, the claimed subject matter may be implemented as a method, apparatus, or article of manufacture using standard programming and\/or engineering techniques to produce software, firmware, hardware, or any combination thereof to control a computer to implement the disclosed subject matter. The term \u201carticle of manufacture\u201d as used herein is intended to encompass a computer program accessible from any computer-readable device, carrier, or media. Of course, those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.",{"@attributes":{"id":"p-0079","num":"0078"},"figref":["FIG. 9","FIG. 9"]},"Although not required, embodiments are described in the general context of \u201ccomputer readable instructions\u201d being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media (discussed below). Computer readable instructions may be implemented as program modules, such as functions, objects, Application Programming Interfaces (APIs), data structures, and the like, that perform particular tasks or implement particular abstract data types. Typically, the functionality of the computer readable instructions may be combined or distributed as desired in various environments.",{"@attributes":{"id":"p-0081","num":"0080"},"figref":["FIG. 9","FIG. 9"],"b":["910","912","912","916","918","918","914"]},"In other embodiments, device  may include additional features and\/or functionality. For example, device  may also include additional storage (e.g., removable and\/or non-removable) including, but not limited to, magnetic storage, optical storage, and the like. Such additional storage is illustrated in  by storage . In one embodiment, computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage  may also store other computer readable instructions to implement an operating system, an application program, and the like. Computer readable instructions may be loaded in memory  for execution by processing unit , for example.","The term \u201ccomputer readable media\u201d as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory  and storage  are examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, Digital Versatile Disks (DVDs) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .","Device  may also include communication connection(s)  that allows device  to communicate with other devices. Communication connection(s)  may include, but is not limited to, a modem, a Network Interface Card (NIC), an integrated network interface, a radio frequency transmitter\/receiver, an infrared port, a USB connection, or other interfaces for connecting computing device  to other computing devices. Communication connection(s)  may include a wired connection or a wireless connection. Communication connection(s)  may transmit and\/or receive communication media.","The term \u201ccomputer readable media\u201d may include communication media. Communication media typically embodies computer readable instructions or other data in a \u201cmodulated data signal\u201d such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.","Device  may include input device(s)  such as keyboard, mouse, pen, voice input device, touch input device, infrared cameras, video input devices, and\/or any other input device. Output device(s)  such as one or more displays, speakers, printers, and\/or any other output device may also be included in device . Input device(s)  and output device(s)  may be connected to device  via a wired connection, wireless connection, or any combination thereof. In one embodiment, an input device or an output device from another computing device may be used as input device(s)  or output device(s)  for computing device .","Components of computing device  may be connected by various interconnects, such as a bus. Such interconnects may include a Peripheral Component Interconnect (PCI), such as PCI Express, a Universal Serial Bus (USB), firewire (IEEE 1394), an optical bus structure, and the like. In another embodiment, components of computing device  may be interconnected by a network. For example, memory  may be comprised of multiple physical memory units located in different physical locations interconnected by a network.","Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example, a computing device  accessible via network  may store computer readable instructions to implement one or more embodiments provided herein. Computing device  may access computing device  and download a part or all of the computer readable instructions for execution. Alternatively, computing device  may download pieces of the computer readable instructions, as needed, or some instructions may be executed at computing device  and some at computing device .","Various operations of embodiments are provided herein. In one embodiment, one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media, which if executed by a computing device, will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further, it will be understood that not all operations are necessarily present in each embodiment provided herein.","Moreover, the word \u201cexemplary\u201d is used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as \u201cexemplary\u201d is not necessarily to be construed as advantageous over other aspects or designs. Rather, use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application, the term \u201cor\u201d is intended to mean an inclusive \u201cor\u201d rather than an exclusive \u201cor\u201d. That is, unless specified otherwise, or clear from context, \u201cX employs A or B\u201d is intended to mean any of the natural inclusive permutations. That is, if X employs A; X employs B; or X employs both A and B, then \u201cX employs A or B\u201d is satisfied under any of the foregoing instances. In addition, the articles \u201ca\u201d and \u201can\u201d as used in this application and the appended claims may generally be construed to mean \u201cone or more\u201d unless specified otherwise or clear from context to be directed to a singular form.","Also, although the disclosure has been shown and described with respect to one or more implementations, equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components (e.g., elements, resources, etc.), the terms used to describe such components are intended to correspond, unless otherwise indicated, to any component which performs the specified function of the described component (e.g., that is functionally equivalent), even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition, while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations, such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore, to the extent that the terms \u201cincludes\u201d, \u201chaving\u201d, \u201chas\u201d, \u201cwith\u201d, or variants thereof are used in either the detailed description or the claims, such terms are intended to be inclusive in a manner similar to the term \u201ccomprising.\u201d"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
