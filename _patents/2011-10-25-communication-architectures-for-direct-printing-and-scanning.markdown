---
title: Communication architectures for direct printing and scanning
abstract: One example of a communication architecture for direct printing and scanning includes a computing device for generating an electronic image and a page description language for producing a deterministic print file of the electronic image, the deterministic print file being natively viewable in a Portable Document File (PDF) viewer. The architecture also includes a printer for receiving the deterministic print file and for beginning printing the electronic image before the complete deterministic print file is received by the printer. A method for printing a document is also provided.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09179016&OS=09179016&RS=09179016
owner: HEWLETT-PACKARD DEVELOPMENT COMPANY, L.P.
number: 09179016
owner_city: Houston
owner_country: US
publication_date: 20111025
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["Computing devices can send data such as pictures and text to a printer for printing. However, printer drivers are installed on the computing devices before they can utilize printers and printer services. The printer drivers are specific to both the operating system and a given printer and act as a software interface between the computing device and the printer. The use of operating system\/printer specific print drivers has a number of disadvantages. Separate print drivers are installed on the computing device for each printer the device will interface with. For portable and handheld computing devices, the complexity and size of the print drivers may exceed the capacity of the devices and consequently may prevent efficient printing from these devices. In addition, can be difficult and costly for printer vendors to supply drivers for all the current computing devices, operating systems and printers.","Throughout the drawings, identical reference numbers designate similar, but not necessarily identical, elements.","Computing devices generate and store a wide range of data that can be printed. The computing devices may generate documents, pictures, models, files, presentations, scanned images, forms, web pages and other data. For a variety of reasons, a user may wish to print a hard copy of this data using a printer. The user may have access to a number of computing devices and printers. However, to access the printing devices, drivers need to be installed on the computing devices before they can utilize printers and printer services. The printer drivers are specific to both the operating system and a given printer and act as a software interface between the computing device and the printer. The use of operating system and printer specific print drivers has a number of disadvantages. Separate print drivers are installed on each device for each printer the device will interface with. The installation of the printer driver can be a time consuming and complex process. Installation of a print driver includes ascertaining which printer is available and then determining which printer driver is compatible with their computing device, operating system and printer. The user then downloads this driver from the printer vendor's web site and then proceeds through the installation and setup. If the download, installation, and setup are successfully concluded, the user can then print the desired document. This process is repeated by the user for each of their computing devices and for each new printer encountered. For portable and handheld compute devices, the complexity and size of the print drivers may be too great and consequently may prevent efficient printing with these devices. In addition, it is difficult and costly for printer vendors to supply drivers for all the current computing devices, operating systems and printer architectures.","In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the present systems and methods. It will be apparent, however, to one skilled in the art that the present apparatus, systems and methods may be practiced without these specific details. Reference in the specification to \u201can example\u201d or similar language means that a particular feature, structure, or characteristic described in connection with the example is included in at least that one example, but not necessarily in other examples.","As discussed above, individual print drivers have to be installed on each computing device for each printer.  is a diagram of an illustrative computing system that includes a number of computing devices and printers that are connected using various networks and protocols. The printers include an enterprise printer (), a multifunction desktop printer () and a basic printer (). The enterprise printer () may include a wide range of capabilities including duplexing, selection of different paper sizes, color printing and other options. The multifunction desktop printer () may include features such as scanning, copying, faxing, and printing. The basic printer () has minimal computing and memory capabilities and produces basic prints in a straightforward manner.","Computing devices in the system () include a rack mounted server (), a laptop () and a mobile device (). Each of these devices may have different capabilities and use a different operating system. For example, the rack mounted server () may have large amounts of memory and multiple processors running Linux based operating systems. The laptop () may have more limited capabilities and run a Windows based operating system. The mobile device () may have a low power processor and limited memory and use an Android or iOS operating system. The computing devices many be communicatively connected in a variety of ways including hardwired connections, such as Universal Serial Bus (USB) and Ethernet protocols, and wireless connections, such as cellular, WiFi, and WiFi Direct.","To communicate with the printers (, , ) the computing devices need a print driver that is specific to both the operating system and the printer. Each print driver is specifically designed to interface with a particular operating system and correctly represent the capabilities of the printer. When correctly installed, the print driver acts as a translator between the software operating within the operating system and the printer. In this example, nine different printer drivers are needed. Printer drivers A, B, and C are specific to the Linux operating system. Printer driver A interfaces between the Linux operating system and the enterprise printer (). Printer driver B interfaces between the Linux operating system and the basic printer (). Printer driver C interfaces between the Linux operating system and the multifunction desktop printer (). Similarly, printer drivers D, E and F are specific to the Windows operating system on the laptop and connect it to the printers (, , ). Printer drivers G, H, I are specific to the iOS operating system of the mobile device ().","As discussed above, to print data from a computing device to a printer, the printer must first be identified and the correct print driver obtained. The driver is then installed on the computing device and a connection made with the printer. Only after installing the correct print driver can printing proceed.","In some cases, the printer drivers may exceed the computational and memory capacity of the computing device. The overall trend in computing devices is moving toward physically smaller and more portable devices. This trend often reduces the computing device's rendering capabilities and available RAM and permanent storage. For these portable and handheld computing devices, the complexity and size of the print drivers may be too large or complex for the devices and consequently may prevent efficient printing from these devices. Additionally, the challenge of identifying, obtaining, and installing the correct printer driver can be particularly frustrating when using a computing device in new locations with new printers. Further, creating and maintaining printer drivers for all operating systems and printers can be a significant burden on the printer manufacturer.","To address these and other issues, the inventors have developed a unique Printer Control Language (ePCL) to allow computing devices to quickly identify available printers (both local and remote), discover the printers' capabilities and preferences, configure the printers for job preferences, and deliver print payloads, all without the need for installation of print drivers. This simplifies the process of connecting computing devices to printers as well as reducing the time involved in setting up the printer connection. A user simply identifies the printer that they would like to print to, selects the job specific settings (such as media and duplex settings), and initiates the print job.","ePCL is both operating system agnostic and compatible with a wide range of printers having a varying range of capabilities. Consequently, there is no need for individual printer drivers. ePCL produces deterministic streaming print files that can be accepted by a wide range of printers, including printers that have very limited computational and memory capabilities. Further, the print files can be viewed, edited, and archived in their native format. This allows for a wide range of operations without conversion of the print file into a different file format.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2","b":["210","205"]},"Authentication functions in the ePCL stack are provided by the 802.11 set of standards. 802.11 standards describe implementation of wireless local area networks and provide the basis for wireless networks produced using WiFi and WiFi direct. In general the 802.11 standards provide for initiation, negotiation, and authentication of connections between computing devices.","Discovery in the ePCL stack () utilizes the Multicast Domain Name System (mDNS). mDNS is a set of techniques that automatically creates usable Internet Protocol network without user intervention. mDNS uses application programming interfaces to communicate between computers, devices, and services assigned domain names. Each computing device in the network, including printers, stores a list of DNS resource records and joins the mDNS multicast group. When an mDNS client wants to know an IP address of another participating device, the mDNS client sends the request to a well-known multicast address. The request is then broadcast over the network. The participating device then responds with its IP address. mDNS also includes Service Discovery (SD) that uses DNS messages, such as SRV, TXT, and PTR records, to advertise service instance names. The hosts, such as printers, then publish details of the available services: instance, service type, domain name, and optional configuration parameters. The use of mDNS allows for automatic discovery of printers and their capabilities by connected computing devices.","The Page Description Language (PDL) is a language that describes the appearance of a printed page at a higher level than an actual output bit map. The ePCL stack supports a number of page description languages for flexibility to adapt to various printer capabilities. For example, the ePCL uses Portable Document Format (PDF) to represent documents in a manner that is independent of application software, hardware and operating systems. In some situations, it may be desirable to use a PDF version with a full complement of commands, such as PDF 1.4, PDF 1.7 or PDF 2.0.","However, for devices with low computational ability and\/or low memory capacity or networks with lower data transmission rates, documents rendered using full function PDF can be undesirable. Documents rendered in PDF are typically not streamable because the entire document must be sent to the computing device or printer before the document can be entirely understood. For example, the first bit of a PDF file can be, in theory, altered by the last bit of the PDF file. For example, the last segment of the PDF file could change the font table for the whole file. Thus, the whole PDF file must be received by the printer prior to printing. For large PDF files, there can be an unacceptable delay while the complete PDF file is downloaded to the printer. Further, printers with low computational ability and\/or low memory capacity may be unable to store and render large PDF files. Even so called \u201cstreamable\u201d or \u201clinear\u201d PDF files are not actually streamable. Linear PDF files use commands that can radically alter the printing of preceding portions of the data file. A specific example is a linear PDF file that is transmitted to a printer where, near the end of the PDF file, the orientation of the page is designated as being in landscape orientation rather than portrait orientation. This changes the printing of the entire document.","Consequently, the printing of a full function PDF document cannot be started until the complete PDF file is available to the printer. As discussed above, some printers may lack the memory and\/or computing power to store and process large PDF files. Further, waiting for the complete PDF file to be transferred to the printer can result in an unacceptably long delay before printing begins. Thus, using the PDF format with its complete command set is not tenable for some printing situations.","To create a streamable PDF document, a new protocol called Printer Control Language\u2014Mobile (PCLm) has been created. PCLm has been developed using a subset of the PDF grammar. PCLm allows for consumption of the print files by all PDF 1.4 or later compliant devices and allows for both printing and viewing of the rasterized pages. PCLm may exclude a number of PDF grammar constructs including text, vector, images, patterns, transparency and blending instructions. The exclusion of these commands makes PCLm deterministic because commands that could be retroactively applied to data which has already been streamed have been eliminated. This allows printers to begin printing as soon as the PCLm data stream begins to be received. This minimizes the amount of memory and computation required by the printer and allows low end printers to effectively print large documents.","PCLm is device independent because PCLm supports standard and device independent imaging constructs. Image data is in contone space (8 bit gray and 24 bit RGB) and has not been altered in any device dependent way. PCLm is also minimalistic because it is designed to be lightweight and efficient. This allows low-end consuming devices with limited processing power and memory to consume PCLm files. However, the configurability of the language also enables high-end devices to improve throughput and performance.","As used in the specification and appended claims, the term \u201cstreamable\u201d refers to print files whose data is not retroactively altered by subsequent data in the file. This allows the print files to be streamed to the printer and printing to begin prior to receiving the entire print file because portions of the print file that are received by the printer are not modified by subsequent data. Consequently, the printer can begin printing once a predetermined amount of data has been received. For example, after receiving a swath or page, the printing can commence because subsequent data will not retroactively alter the data already received. In some embodiments, the print files may be streamable in that each bit of data representing a portion of an image to be printed is not altered once it is received by the printer.","As used in the specification and appended claims, the term \u201cdeterministic\u201d refers to files, protocols and techniques that produce print jobs (payload) of known size and complexity. This guarantees that the printer will always be able to print the job without causing a memory out or a performance issue. For example, a print file that uses retroactive commands is not deterministic because the complete print file must be received, stored and manipulated by the printer. Because print files have varying sizes (sometimes as large as hundreds of megabytes), there is no guarantee that the printer will have enough memory or processing power to print the job.","PCLm is viewable by all standard PDF viewers because it is constructed with a proper subset of PDF. Some PCLm language constructs are added to the grammar to facilitate viewing. These additional constructs can be ignored by consuming devices. PCLm documents are also archivable because they are constructed so that they can be stored and re-printed at later times. Additionally, PCLm is predictable and deterministic in its rate of document consumption and page production. Some performance variability can be incurred by the size and complexity of the input page image, but this will not cause significant throughput degradation. PCLm formatted documents are streamable because all the content for imaging a page is delivered by the end of that page's description within the PCLm stream. Raster data contained within the page is delivered in a page-logical-top to page-logical-bottom, thus allowing trivial consumption by the consumable device. To enhance page streamability in low memory devices, PCLm can support segmentation of individual pages into strips or swaths. The height of the strips will be device dependent and discovered during the IPP device capabilities query. This process may reduce the amount of memory required to buffer the raster page.","The printer status, job control, and job transmission are performed using Internet Printing Protocol (IPP). IPP provides a standard network protocol for remote printing and managing print jobs, media size, resolution, etc. IPP is implemented using Hypertext Transfer Protocol (HTTP) and inherits all of the HTTP streaming and security features, including encryption protocols such as Transport Layer Security (TLS) and HTTPS. IPP allows clients to query a printer's capabilities, submit print jobs, query the status of a printer, query the status of print jobs, cancel previously submitted jobs, and other actions.","Some PCLm devices have limited resources and thus cannot perform all necessary raster and page-order transformations to support duplex printing. Therefore, PCLm devices may require that the client develop the raster for the backside of duplex jobs so that it is oriented (flipped and or mirrored) correctly for the consuming device and possibly reorder the pages. The client computing device can discover the requirements of the consuming device by the IPP attribute backside-orientation and backside-scan-direction. PCLm can support a number of scanline orientations for backside duplex pages including: bottom-to-top or top-to-bottom, right-to-left or left-to-right, and frontside-first or backside-first. These scan line orientations are noted in the file and may not adversely affect the viewing of the file.","Print files are immediately viewable by any PDF enabled device without conversion. As discussed above, the display file and the print file are the same.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 3","FIG. 3"],"b":["115","110","120","135","320","315","300","105","125","130","105","130","125"]},"As discussed above, the ePCL architecture initiates communication between the various devices using mDNS protocols. As discussed above, the mDNS client sends the request to a well-known multicast address. This request is then broadcast to over the network. The participating printers then respond with their IP addresses and publish details of the available services. This two way mDNS interchange is shown by the double headed arrow (). During this two way communication, the printer may communicate with the computing device using internet printing protocol (IPP). For example, the computing device may query the printer to determine the capabilities of the printer. The computing device may query the printer regarding PCLm raster orientations, chromatic mode, backside duplex orientation, compression information, ePCL version information, and other ePCL specific information.","After a connection is made to the desired printer, the computing device generates a PCLm print file () that is compatible with the printer. The PCLm print file () includes a header () that identifies the file as a PCLm print file and a body () of raster data that describes the page content. Because generation of a PCLm print file has low computational requirements even rudimentary computing devices, such as a camera (), are capable of formatting its image data into the file format. The PCLm print file can be accepted by any of the printing devices. Because the print file is streamable and deterministic, the printers can immediately begin printing when they receive the file. Further, printing the PCLm file does not consume large amounts of memory. Consequently, even the basic printer () is capable of printing large PCLm files in an efficient manner. Alternatively, the computing device could generate a PCLm file that is specifically tailored to capabilities of the printer, such as generating scanline orientations for backside duplex pages on the enterprise printer ().","The system shown in  is only one example. A variety of other configurations and devices could be used. For example, the multifunction desktop printer () and the enterprise printer () may both be capable of producing PCLm files when scanning documents and may communicate these PCLm files to computing devices for storage, viewing or manipulation or may communicate the PCLm files directly to other computing devices.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 4","b":["400","405","410"]},"After the proximal printers and their capabilities have been discovered, the user simply selects the desired printer (block ). The print job is then set up for the printer (block ). In the past, the job setup capabilities were static in nature, derived from the specific driver that was installed. So, if the user wanted to print to a duplexing printer, they would have to inform the driver that the duplex option was installed, and then select the duplex option in the driver menu. ePCL provides dynamic discovery of the device capabilities and will present the relevant options to the user. Because ePCL is generic and dynamic, no print-driver setup is necessary to recognize or utilize the printer options.","A PCLm compliant print file is generated or retrieved (block ). Job formatting is based upon the printer's capabilities and its preferences. Some printers may have the ability to print both raster and PDL and will issue a preference for one or the other format, based upon printer capabilities and job information.","Once the device is discovered, its capabilities identified, and the user selections made, and the PCLm compliant print file generated, ePCL streams the print job to the printer and monitors the job until it completes (block ). The device will then notify the user that the job is completed and ready for pickup.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 5","b":["500","130","520","505","510","530","525","130","535","525","130","540"]},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 6A"},"The business person then instructs an assistant to scan the document using an enterprise printer () to create a PCLm compliant print file. This PCLm compliant print file is then streamed across a cellular network as it is scanned. The business person receives the streamed PCLm compliant print file on their mobile computing device () and reviews and edits the file. Even though the stream rate across the cellular network was not particularly fast, the review and editing of the file on the computing device () can begin as soon as the streaming data begins to arrive. There is no need for the complete file to arrive prior to viewing or editing. After making any desired modification, the business person instructs the document to begin printing on a nearby basic printer () that is ePCL enabled. The basic printer () does not need to receive the entire PCLm compliant print file prior to beginning to print. Instead, the basic printer () begins printing the pages as it receives them. In some circumstances, the basic printer () may begin printing prior to the completion of the scanning of the original document.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 6B","FIG. 6A"],"b":["600","605"]},"To generate a print file compatible with the printer, the computing device can generate a streamable raster file that incorporates only basic commands and formats used by all ePCL compliant devices. Alternatively, the computing device can obtain specific information about the printer capabilities by sending a query of to the printer using internet printing protocol. The query and the printer's response may include a variety of information, including PCLm raster orientations, chromatic mode, backside duplex orientation, compression information, ePCL version information and other information.","The deterministic print file begins to be streamed to a printer from the computing device (block ). In the example above, the PCLm compliant print file is streamed from the computing device () to the basic printer (). Before the basic printer () receives the entire deterministic print file, the printer starts printing (block ). In some embodiments, the computing device () may receive an indication that printing has begun prior to streaming the complete deterministic print file to the printer.","A variety of enhancements data may be layered on top of the PCLm raster data. For example, sections of the raster data may be labeled as text and other sections labeled as images.  is a diagram that shows an illustrative page () of raster data with portions of the page designated as text () and portions of the page designated as images (). This designation can provide additional context that may assist in the printing, viewing or manipulation of the PCLm file. For example, a printer may apply a first set of printing enhancements when printing portions of the file are designated as text and a second set of printing enhancements when printing portions of the file are designated as images. The text portions may be printed using edge enhancement and using monochrome ink. Image portions may be printed using enhanced red\/green\/blue techniques that increase the saturation and contrast in the printed images. The images may also have softer edges and transitions.","The designation of text and image portions of the file also provide other advantages. For example, when viewing or printing a file, the user may wish to differentiate between the images and text.  shows the PCLm page () with only the text displayed. If the user is only interested in the text, presenting the document in this way can shrink the file size and allow for quicker and more efficient printing of the document. The user can conserve a significant amount of ink by only printing the text. Additionally, if the user wishes to apply optical character recognition to the file, the optical character recognition can be applied only to the portions labeled as text. This can provide faster processing and the ability to process the file on computing devices with lower processor and memory capacity. Additionally or alternatively, the file may designate each pixel in the raster data as being a text pixel or image pixel.","The image enhancements do not interfere with printing or viewing of the file by devices that do not recognize the enhancements. For example, if a basic printer does not recognize or support the enhancement, the printer simply ignores the enhancements.","In sum, the ePCL architecture allows users to rapidly discover a print device, its capabilities, setup the print job with their specific requirements, and print. Using this process, a new device may be able to begin printing in less than 2 minutes after logging onto the network. ePCL is uniquely designed to eliminate all the complexity of the initial process of printer setup as well as providing sufficient imaging technology to guarantee high quality output and page fidelity for any ePCL compliant print-device.","The preceding description has been presented only to illustrate and describe examples of the principles described. This description is not intended to be exhaustive or to limit these principles to any precise form disclosed. Many modifications and variations are possible in light of the above teaching."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings illustrate various examples of the principles described herein and are a part of the specification. The illustrated examples are merely examples and do not limit the scope of the claims.",{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 6B"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 7A and 7B"}]},"DETDESC":[{},{}]}
