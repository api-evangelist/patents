---
title: Method and system for application development
abstract: A system for application development is disclosed. The system includes programming entities, which include a workflow and a container. A contract specifies an interaction between at least two programming entities.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06889375&OS=06889375&RS=06889375
owner: Cisco Technology, Inc.
number: 06889375
owner_city: San Jose
owner_country: US
publication_date: 20001117
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE DRAWINGS"],"p":["This invention relates generally to the field of computer systems and more specifically to a method and system for application development.","Application designers typically need to efficiently create and edit workflows in order to design a computer application. Workflows include a directed graph of workflow steps that perform the operations of an application. Often, however, workflows cannot be readily edited, resulting in slower application development. Thus, effective application development has posed challenges for application designers.","In accordance with the present invention, a method and system for application development are provided that substantially eliminate or reduce the disadvantages and problems associated with previously developed systems and methods.","According to one embodiment of the present invention, a system for application development is disclosed. The system includes multiple programming entities: a workflow, a run-time container that executes the workflow, and a design-time container that edits the workflow. A contract specifies an interaction between at least two programming entities.","According to another embodiment of the present invention, a method for application development is disclosed. Multiple programming entities are defined: a workflow, a run-time container that executes the workflow, and a design-time container that edits the workflow. A contract specifying an interaction between at least two programming entities is also defined.","Embodiments of the invention may provide numerous technical advantages. A technical advantage of one embodiment is that contracts are used to specify interactions between a workflow and a workflow step, resulting in more efficient design of workflows. A workflow step may be used in multiple workflows, where a contract describes the behavior of the workflow step. Reusing a workflow step is more efficient than generating a new workflow step for each workflow.","Another technical advantage of one embodiment is that contracts allow a user to specify the interactions between containers and workflows. Contracts specify, for example, from where a design-time container is to retrieve a workflow step and how a run-time container is to monitor a workflow, resulting in more efficient design of workflows.","Other technical advantages are readily apparent to one skilled in the art from the following figures, descriptions, and claims.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1","b":["104","108","104","108","110","112","108","109","109","108","110","108","112","108","102","108","109","110","112","108","110","112","109","102"]},"In one embodiment, system  is used to design and execute workflows  for managing an interactive voice response (IVR) unit. An example of a workflow  for managing an IVR is described in connection with FIG. . System , however, may be used for other types of workflows , for example, computing, production, management, financial, or other suitable workflows .","In one embodiment, a telecommunications device  communicates with system  through a communications network . Telecommunications device  may include, for example, a telephone, a modem, a facsimile machine, a voice response unit, or any other suitable device for communicating with system . Communications network  may include a local, wide, or global area network, a private branch exchange, a public switched telephone network, wired and\/or wireless communication links, and\/or any combination of the previously mentioned communication links.","System  includes a gateway , a call processing server , an application server , design-time container , and a workflow library . Gateway  directs signals between communications network  and system . Gateway  integrates resources of system , such as voice over Internet Protocol (IP) resources, with communications network . Gateway  may provide an Ethernet interface for connecting to a voice over packet network and\/or various voice ports for connecting to telephony devices, such as plain old telephone system (POTS) device. Gateway  may include, for example, a Cisco access analog station gateway, a Cisco access digital trunk gateway, or a Cisco Catalyst 6000 with an analog interface module or with a T1 and services module, or any other suitable gateway. Gateway  may use Cisco Skinny Station Protocol, H.323 protocol, and\/or Media Gateway Control Protocol, or any other suitable protocol.","Call processing server  provides communication services by determining whether there are any requests for service, checking instructions for setting up connections, and setting the connections accordingly. Call processing server  may include a Cisco Call Manager. Call processing server  may manage deployment of voice applications and integrate system  with intranet applications by using open standards such as transmission control protocol (TCP)\/IP. Call processing server  may use a server, for example, Microsoft Internet Information Server (IIS), to allow remote administration with a standard web browser. Call processing server  may provide services for managing IP phones, such as matching IP addresses to specific devices and extensions, and for managing the operation of gateway . Call processing server  may support a telephony application programming interface (TAPI) and\/or a Java telephony application programming interface (JTAPI) for deploying interactive voice response units and other telecommunications applications.","Design-time container  includes an interface used to build and edit workflows , and may be included in the same or different program as run-time container . Microsoft Windows Foundation Class or Java Foundation Class may be used by design-time container . The display may include a palette of workflow steps  that may be selected to build or edit a workflow  by, for example, a drag-and-drop operation. Design-time container  retrieves workflow steps  from workflow library  and inserts them into workflow  as a user designs workflow .","A display  presents icons representing workflows  and workflow steps  in an editor window , enabling a user to easily create and edit workflows . Contracts specify interactions between design-time container  and workflows  and workflow steps  typically by describing service that design-time container is to provide to workflow steps . For example, a contract specifies that design-time container  is to retrieve workflow steps  for workflow  by associating workflow  with the retrieval of workflow steps . Another contract specifies that design-time container  is to retrieve input data from a user for workflow step  by associating workflow step  with the retrieval of input data.","Application server  provides and manages workflows , and may include a Windows 2000 server that runs JTAPI. Call processing server  and application server  may be implemented on the same or separate machines. Application server  includes a workflow repository , a workflow administrator , and run-time container . Workflow repository  stores workflows  and contracts associated with the workflows. Contracts specify interactions between workflows  and workflow steps . For example, a workflow step  is designed to retrieve a file and includes a file name variable. An instantiation of workflow , called a task, supplies the file name value to be used for the file name variable. A contract  specifies the file by associating the file name variable of workflow step  and the file name value of the task. Table 1 illustrates an example of a contract associating three variables and values.",{"@attributes":{"id":"p-0024","num":"0023"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Workflow step variable","Task value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"server name","A"]},{"entry":[{},"directory name","accounts"]},{"entry":[{},"file name","10352.db"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Workflow administrator  manages run-time container , and may be implemented using Microsoft IIS. Workflow administrator  retrieves workflows  and contracts from workflow repository  and supplies workflows  and contracts to run-time container .","Run-time container  includes an interface that executes workflows  and provides services to workflows  during execution. Run-time container  may be included in an IVR unit. Run-time logic  manages the operation of run-time container . Workflow subsystems  provide connections to other systems. For example, a workflow subsystem  receives notification of a triggering event, for example, receiving a call from telecommunications device . In response to receiving the triggering event, workflow subsystem  initiates execution of a workflow  and retrieves an execution context  for workflow . Contracts typically specify the interactions of run-time container  and workflows . For example, a contract associates receiving the triggering event with initiating workflow  and with retrieving execution context .","Run-time container  provides additional services to workflows , which are described by contracts . Run-time logic  retrieves workflow step  from workflow library  in order to execute workflow . Contract associates reaching a certain point of workflow  with retrieving workflow step . Run-time logic  also retrieves data from a database  in response to a workflow step  requesting data retrieval. Contract associates workflow step  with retrieving data. Additionally, run-time logic  initiates message generator  to play messages to a caller in response to a workflow step  requesting the message. A contract associates workflow step  with the message request.","Additionally, system services module  of run-time container monitors the execution of workflow  by, for example, recording which workflows  have been executed, tracing the execution of workflows , and\/or determining any errors in the execution of workflows . Contract specifies how workflows  are to be monitored and how monitoring information is to be recorded. For example, contract associates the initiation of workflow  with tracing the execution of workflow  and recording the results in a reporting module . Reporting module  provides reports of workflow activities. In one embodiment, the reports may record, for example, workflow usage, the ratio of calls handled versus calls abandoned, and the average queue time for calls. Reporting module  receives monitoring information from system services  and communicates the report to a database . A contract associates receiving the monitoring results of workflow  with placing the results in a summary form and outputting the results to database .","Contracts  also describe interactions between workflows  and workflow steps , allowing for extensibility of workflows . A workflow step  may be used in multiple workflows , where a contract  describes the behavior of workflow step . Reusing a workflow step  is more efficient than generating a new workflow step for each workflow . Moreover, contracts  allow design-time container  and run-time container  to efficiently provide services to workflows . Contracts specify the interaction between the containers  and  and workflows , reducing the need for additional description during design of workflows .",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 2","b":["200","104","1","200","104","200","109","108","102","109"]},"Workflow task  is initiated at workflow step , where system  receives a call from a caller using telecommunications device . In response, a welcome message is played for the caller at workflow step . Workflow step  is designed to retrieve and play a message and includes a message variable representing the message to play. Workflow task  supplies the message value indicating the specific message to be played. A contract  associates the variable and the value. Run-time container  initiates the playing of the message. A contract  specifies that run-time container  is to initiate message playing in response to workflow step . The welcome message requests an account number from the caller at workflow step . System  receives an account number input by caller at workflow step .","At workflow step , the account number is checked. A contract specifies that run-time container  checks database  for the account number in response to workflow step . If the account number is not authentic, a troubleshooting workflow is initiated at workflow step . Workflow step  is designed to initiate another workflow, and workflow task  supplies the specific workflow that workflow step  is to initiate. A contract  specifies the workflow by associating a task value with a workflow step variable. After initiating the trouble-shooting workflow, workflow  terminates. If the account number is authentic, a menu options message is presented at workflow step . The menu options message instructs the caller to select a particular key of telecommunications device  or say a particular word in order to transmit a signal that indicates the selected option. The options may include, for example, obtaining the balance of a bank account, applying for a credit card, and transferring to a customer representative.","If system  receives a signal indicating that the balance option has been selected at workflow step , processor  retrieves information about the balance from database  at workflow step . Workflow step  is designed to retrieve a file from a database, and workflow task  supplies the file name and location. A contract  associates the file name and location with a variable of workflow step . A message providing the balance information is presented at workflow step . After completing the message, workflow  terminates.","It at workflow step  processor  receives a signal indicating that the credit card option has been selected at workflow step , a credit card application workflow is initiated at workflow step . Workflow step , which may be the same as workflow step , is designed to initiate another workflow. A contract specifies the workflow by associating a task value with a workflow step. After initiating the credit and application workflow, workflow task  terminates. If processor  receives a signal indicating that the customer representative option has been selected at workflow step , the call is transferred to an operator at workflow step . After the call has been transferred, workflow task  terminates.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 3","b":["150","104","1","150","152","154","156","158","160","152","108","109","109","108","154","152"]},"Palette window  provides a list of the workflow steps  available for designing workflows . Workflow steps  may be placed in folders to organize the steps . In one embodiment, a general folder  includes workflow steps  that may be used to design workflows  in general, and a Java folder  includes workflow steps  designed to create and manipulate Java objects. A folder of steps that may be used to design workflows for an IVR unit is described in connection with FIG. .","General folder  includes, for example, a Label step that inserts a label such as \u201cLabel 0\u201d into a workflow  to identify a workflow step . A Goto step directs a workflow  to a workflow step  identified by a label. A Delay step delays the processing of a workflow  for a specified length of time. Contracts  specify a particular task that a workflow step  is to perform. For example, for a Goto step, a contract  specifies that workflow is directed to a workflow step . For a delay step, a contract  specifies that workflow  is delayed.","Java folder  includes, for example, a Create Java Object step that instantiates a variable or an object of a specified Java class. An Execute Java Method step executes a specified method of a Java class. As with the other workflow steps , contracts  specify the particular task that workflow step  performs in workflow .","Variable window  allows the user to create, edit, and view variables available for use by workflows  and workflow steps . For example, a user creates a Database Name variable. A Database Write step uses the Database Name variable to identify the database to which to store data.","Design window  displays an example workflow  that includes Label and If steps. A user builds workflow  by selecting the Label step from general folder , dragging the step to design window , and inserting the step into workflow . The drag-and-drop process allows the user to efficiently insert workflow steps into a workflow . A contract  specifies that there is an antecedent of the \u201cif\u201d statement, for example, n<100. A contract  also specifies that there is a next workflow step if the condition is true, for example, increment n and Goto Label 0, and a next workflow step if the condition is not satisfied, for example, end workflow .",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 4","b":["150","180","180","126","108","102"]},"A Get Session Info step retrieves specified values associated with a call and stores the values in specified variables. The Get Session Info step may be used to specify different outcomes depending on the source of the call. A contract associates the values and variables. An Output step plays a message, specified by a contract, to a caller. A Parsed Input step captures the sequence of keys that a caller enters in response to a message. The Parse Input step listens for input until the user presses a terminating key, exhausts the maximum number of retries, or enters the maximum number of keys. As with other steps, contracts specify the particular tasks of the workflow steps. The user may utilize a Menu step to create a menu from which callers can select a series of options. The Menu step associates keys of telecommunications device  with the options in order to create the menu. A Name To Address step determines a telephone extension based on alphabetic input from a caller.","A Database (DB) Read step selects a database and enters structured query language (SQL) statements required to retrieve data. The user provides the name and location of the data to be retrieved and SQL statements required to retrieve the data from the selected database. A Database Get step assigns the retrieved data to specific variables so that the retrieved data may be used by workflow . A Database Release step closes the query and releases the database resources. A Database Write step stores data in a specified database.","A Time of Day step directs workflow  to different workflow branches depending upon the current time of day. A Day of Week step directs workflow  to different workflow branches depending on the current day of the week. Contracts  specify the particular tasks for each workflow step, allowing for efficient design of workflows.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 5","b":["310","110","112","108","102","102","110","109","111","109","108","102","136","112","108","312","109","109","110","112","109","145","314","109","111"]},"At step , the method determines whether workflow step  defined for design-time container . If workflow step  is for design-time container , the method proceeds to step , where workflow step  is included in a palette. At step , design-time container  selects workflow step  from the palette, and inserts workflow step  into workflow . At step , workflow  is completed, and the method terminates.","If workflow step  is not for design-time container  at step , the method proceeds to step , where the method determines whether workflow  is to be used in run-time container . If workflow step  is not to be used in run-time container , the method terminates. If workflow step  is to be used in run-time container , the method proceeds to step , where run-time container  retrieves workflow step  from workflow library . Workflow step  performs its defined operation, that is, retrieves account information from database  at step . Workflow  proceeds to the next workflow step . At step , workflow  terminates, and the method terminates.","Although an embodiment of the invention and its advantages are described in detail, a person skilled in the art could make various alterations, additions, and omissions without departing from the spirit and scope of the present invention as defined by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a more complete understanding of the present invention and for further features and advantages, reference is now made to the following description, taken in conjunction with the accompanying drawings, in which:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
