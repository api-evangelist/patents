---
title: Method and system for packing and unpacking web pages
abstract: A method for packing the multiple files and folders of an HTML Web page into a single MHTML file. The packing process begins by determining whether the user has write privileges to the current location. If not, the user is prompted to save the MHTML file in an alternate location (e.g., the desktop). If the user has write privileges to the current location, the process opens the main HTML Web page and searches for supporting resource files. In short, the supporting resource files are identified by searching for known, common resource file references in the main HTML source file. When the resource file references have been identified, the process packages the main HTML document and all of the supporting resource files into a single file in MHTML format. The unpacking process opens the MHTML file and identifies the main HTML document portion, as well as the portions of the MHTML file containing the supporting resource files. Once all of the components have been identified, the Web page's folder structure is determined by referring to the content location field contained in each separate portion of the MHTML file. The individual MHTML components are converted into files and the main HTML file is stored. The resource files are stored in locations relative to the main HTML file, as identified by the unpacked folder structure.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06886132&OS=06886132&RS=06886132
owner: Microsoft Corporation
number: 06886132
owner_city: Redmond
owner_country: US
publication_date: 20000606
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This invention relates to storing a Web page as a single file. More particularly, this invention relates to a method and system for packing a Web page in HTML format as a MHTML file and unpacking a Web page in MHMTL format to HTML format.","With the advent of the World Wide Web (hereinafter Web) and graphics-based Web browsers, the Web has grown exponentially to provide an information exchange of unprecedented proportion. The Web is an Internet facility that links documents both locally and remotely. A Web document, or Web page, is accessed and read via a Web browser. In the last half of the 1990s, the Web became the focus of Internet activity because Web pages containing both text and graphics were easily accessible via a Web browser. Today, those Web pages can also utilize new browser features and plug-in extensions that allow for audio, video, telephony, 3-D animations, and videoconferencing.","Hypertext Markup Language, or \u201cHTML,\u201d is the coding behind standard Web pages. Referring now to , one of the key features of HTML is the ability to render a Web page  composed of separate resources such as images , sound files, cascading style sheets, and ActiveX objects, in-lined with the marked up text . Referring now to , the separate resources that make up the Web page  are typically stored in a multiple related-file storage format . In other words, a single Web page  containing text , sound files, and images  is stored as multiple related-files comprising separate files for each sound file, image, and text. For example, the main document, or Web page HTML source , may be stored as \u201cFront_Page.htm\u201d file . The Web page HTML source  may contain \u201clinks\u201d or \u201cpointers\u201d to each individual sound file, image, text, etc. For example, link  may point to the star.gif file  stored in folder  and link  may point to text_box.txt file  stored in folder .","Storing a Web page in HTML format is unwieldy because it requires the storage of separate files for each resource. These separate files can be hard to manage and maintain. For example, Web site administrators or individuals may want to delete, copy, or move files around but may not know the name, location, or number of files referenced by the main HTML file. Moreover, they may rename the main HTML file but be unaware of the necessity for renaming the other supporting files or vice versa. Users have grown accustomed to having a single file per document and therefore generally have trouble managing all these files.","As may be understood from the description above, a typical Web page consists of a main HTML source file and a host of resource files, such as graphics files, sound files, etc. Often, resource files are maintained within a folder structure and the main HTML document includes links to the locations of the resource files within that folder structure. Because any given resource file may be in a folder that is different than the folder containing the main HTML document, the links in the HTML document will not be accurate unless the resource files are maintained in the folder structure.","Modern Internet users desire to integrate the components of a Web page into a single file. Such a file is easier to manage because it can be saved in a single location, can be viewed offline, and can be sent as a single attachment via e-mail. Unfortunately, the structure of an HTML Web page and its components is not conducive to such integration.","Various approaches exist for putting Web pages into a single file. One of these approaches involves storing all the different parts of a Web page inside a self-extracting executable (\u201c.exe\u201d) file. Initiating this executable file causes the different files of the Web page to be written to a temporary location and opened into a main page. Documents in executable file format, however, suffer from several drawbacks. First, they tend to be fairly large because they require additional code within the executable file. Second, users are often wary of opening executable files because there is a risk that the executable files may contain a hidden computer virus. In fact, some companies automatically remove any attached executable files from e-mail received over the Internet for fear of viruses. Additionally, not only are executable files incapable of being natively displayed in a Web browser, they are also not directly editable by any Web page authoring application.","Another approach is Hewlett-Packard's \u201cPRINTSMART\u201d application which allows a user to define a list of Web pages and \u201cbundle\u201d them together into a single reference file for printing. However, the single reference file does not actually include the resource files of the Web pages. In other words, if this single reference file is mailed to another user, they would not be able to view the resources of the Web page unless they could link to the locations of the resource files.","Previous versions of Microsoft's \u201cINTERNET EXPLORER\u201d Web browser included a \u201cSave as Web Archive\u201d feature. A user may navigate to a Web page, choose the \u201cSave as\u201d command and choose \u201cWeb archive\u201d as a file format. However, this feature had several drawbacks. First, the Web page needed to be loaded into the \u201cINTERNET EXPLORER\u201d Web browser before it could be saved. Second, this feature did not save all of the resource files associated with the Web page such that the files could be returned to their original locations with respect to the main HTML document upon opening. For example, this feature did not capture all the slides in a slideshow presentation saved as HTML, just the first slide.","Microsoft's \u201cINTERNET EXPLORER\u201d Web browser also includes a \u201cSend Page\u201d feature. A user may load a Web page and choose \u201cFile\u201d, \u201cSend\u201d, and \u201cPage as E-mail.\u201d This feature creates a new mail message with the contents of the Web browser as the contents of the message. This suffers from the limitations described for the \u201cSave as Web Archive\u201d feature as well as additional limitations. Framesets and script aren't supported in the body of an e-mail message. Moreover, a MAPI compliant mail client that understands HTML mail is required to view the e-mail message.","Therefore, there is a need for a process for packing a Web page into a single file, so that the Web page's resource file structure is maintained and the Web page can be displayed in its original form. There is also a need for a process that packs all of the Web page content so that the unpacked Web page may be immediately viewable without an expensive extraction process.","The present invention satisfies the above described needs by allowing a user to click a right mouse button and save all of the separate HTML files that make up a Web page as a single MHTML file. A user may then manage the Web page as a single file, attach the Web page to e-mail messages, store it in a document management system, etc. When a user needs to return the Web page to HTML format, the user can click a right mouse button and unpack the Web page to its original HTML format.","Generally described, the present invention provides a computer-implemented method for packing a Web page as a MHTML file. In another embodiment, the invention is directed to a method and system for unpacking a Web page saved in MHTML format to HTML format.","In one aspect, the packing process begins by determining whether the user has write privileges to the current location. If not, the user is prompted to save the Web page in an alternate location (e.g., the desktop). If the user has write privileges to the current location, the process opens the main HTML document, or HTML source file, and searches for supporting resource files. In short, the supporting resource files are identified by searching for known, common resource file references in the main HTML document. When the resource file references have been identified, the process packages the main HTML document and all of the supporting resource files into a single file in MHTML format.","In another aspect, the unpacking process begins by opening the MHTML file and identifying the main HTML document portion, as well as the portions of the MHTML file containing the supporting resource files. Once all of the components of the Web page have been identified, the Web page's folder structure is determined by referring to the content location field contained in each separate portion of the MHTML file. The individual MHTML components are converted into files and the main HTML file is stored in the current location. The resource files are stored in locations relative to the main HTML file, as identified by the unpacked folder structure. If a resource file does not have a content location field, then it is stored in a default folder.","Combining the HTML Web page files, including the resource files, into a single MHTML file is advantageous for several reasons. First, e-mail programs do not allow folders to be sent via e-mail. An entire Web page may be sent via e-mail after using the present invention to combine multiple folders in HTML format into a single MHTML file. The present invention uses parsing techniques to ensure that all the necessary HTML resource files are included in the single MHTML file. Second, document management systems either do not allow users to create folders or their storage system is not accessible to Web browsers so that Web browsers can not display the supporting files of a Web page. Because the present invention combines an HTML Web page into a single file, an entire Web page (including supporting files) may be posted to a document management system.","These and other features, advantages, and aspects of the present invention may be more clearly understood and appreciated from a review of the following detailed description of the disclosed embodiments and by reference to the appended drawings and claims.","The present invention is directed to a method and system for packing a Web page as a MHTML file. In another embodiment, the invention is directed to a method and system for unpacking a Web page saved in MHTML format to HTML format.","In one embodiment, the invention is incorporated into the \u201cOFFICE\u201d program module, marketed by Microsoft Corporation of Redmond, Wash. Briefly described, the \u201cOFFICE\u201d program module is a suite of word processing, spreadsheet, presentation, database, and time management application programs along with program modules that integrate and enhance these application programs. While the invention will be described in the general context of the \u201cOFFICE\u201d program module running in conjunction with a personal computer, those skilled in the art will recognize that the invention also may be implemented in combination with other program modules.","An embodiment of the present invention allows a user to click a right mouse button and save all of the separate HTML files that make up a Web page as a single MHTML file. A user may then manage the Web page as a single file, attach the Web page to e-mail messages, store it in a document management system, etc. When a user needs to return the Web page to HTML format, the user can click a right mouse button and unpack the Web page to its original HTML format.","Combining the HTML Web page files, including the resource files, into a single MHTML file is advantageous for several reasons. First, e-mail programs do not allow folders to be sent via e-mail. An entire Web page may be sent via e-mail after using the present invention to combine multiple folders in HTML format into a single MHTML file. The present invention uses parsing techniques to ensure that all the necessary HTML resource files are included in the single MHTML file. Second, document management systems either do not allow users to create folders or their storage system is not accessible to Web browsers so that Web browsers can not display the supporting files of a Web page. Because the present invention combines an HTML Web page into a single file, an entire Web page (including supporting files) may be posted to a document management system.","Having briefly described an embodiment of the present invention, an exemplary operating environment for the present invention is described below.","Exemplary Operating Environment","Referring now to the drawings, in which like numerals represent like elements throughout the several figures, aspects of the present invention and the exemplary operating environment will be described.","FIG.  and the following discussion are intended to provide a brief, general description of a suitable computing environment in which the invention may be implemented. While the invention will be described in the general context of an application program that runs on an operating system in conjunction with a personal computer, those skilled in the art will recognize that the invention also may be implemented in combination with other program modules. Generally, program modules include routines, programs, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the invention may be practiced with other computer system configurations, including hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, minicomputers, mainframe computers, and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","With reference to , an exemplary system for implementing the invention includes a conventional personal computer , including a processing unit , a system memory , and a system bus  that couples the system memory to the processing unit . The system memory  includes read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within the personal computer , such as during start-up, is stored in ROM . The personal computer  further includes a hard disk drive , a magnetic disk drive , e.g., to read from or write to a removable disk , and an optical disk drive , e.g., for reading a CD-ROM disk  or to read from or write to other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the system bus  by a hard disk drive interface , a magnetic disk drive interface , and an optical drive interface , respectively. The drives and their associated computer-readable media provide nonvolatile storage for the personal computer . Although the description of computer-readable media above refers to a hard disk, a removable magnetic disk and a CD-ROM disk, it should be appreciated by those skilled in the art that other types of media which are readable by a computer, such as magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, and the like, may also be used in the exemplary operating environment.","A number of program modules may be stored in the drives and RAM , including an operating system , one or more application programs , an \u201cOFFICE\u201d program module , program data , and other program modules (not shown).","A user may enter commands and information into the personal computer  through a keyboard  and pointing device, such as a mouse . Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a serial port interface  that is coupled to the system bus, but may be connected by other interfaces, such as a game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adapter . In addition to the monitor, personal computers typically include other peripheral output devices (not shown), such as speakers or printers.","The personal computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a server, a router, a peer device or other common network node, and typically includes many or all of the elements described relative to the personal computer , although only a memory storage device  has been illustrated in FIG. . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the personal computer  is connected to the LAN  through a network interface . When used in a WAN networking environment, the personal computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, is connected to the system bus  via the serial port interface . In a networked environment, program modules depicted relative to the personal computer , or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","MIME Encapsulation of Aggregate HTML Documents (\u201cMHTML\u201d)","MHTML is a known Internet standard that defines the MIME structure used to send HTML content in electronic mail message bodies. The following example illustrates an MHTML message with a relative reference to an embedded GIF:",{"@attributes":{"id":"p-0045","num":"0044"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Mime-Version: 1.0"]},{"entry":[{},"Content-Type: multipart\/related; boundary = \u201cboundary\u201d"]},{"entry":[{},"--boundary"]},{"entry":[{},"Content-Location: c:\\page1.htm"]},{"entry":[{},"Content-Type: text\/html"]},{"entry":[{},"Content-Encoding: quoted-printable"]},{"entry":[{},"[text of an HTML document, which might contain a"]},{"entry":[{},"hyperlink to the other body part, for example through a"]},{"entry":[{},"statement such as:]"]},{"entry":[{},"<IMG SRC = 3D \u201cpage1_file\\images001.gif\u201d>"]},{"entry":[{},"--boundary"]},{"entry":[{},"Content-Location: c:\\page1_file\\images001.gif"]},{"entry":[{},"Content-Type: image\/gif"]},{"entry":[{},"Content-Transfer-Encoding: base64"]},{"entry":[{},"AAAFFDDlhGAGgAPEAAP\/\/\/\/\/ZRaCgoAAAACH+PUNv"]},{"entry":[{},"cHlyaWdodCAoQykgMT"]},{"entry":[{},"NSBJRVRGLiBVbmF1dGhvcml6ZWQgZHVwbGIjYXRpb"]},{"entry":[{},"24gcHJvaGliaXRlZC4A"]},{"entry":[{},"etc . . ."]},{"entry":[{},"--boundary--"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"Generally described, the present invention uses MHTML as a document storage format for Web pages by providing the architecture to encapsulate referenced resources within the MHTML document. This allows the rendering of a Web page without the necessity of retrieving these resources directly over a network Thus, the resources of the Web page, such as pictures and sound, are stored directly in the MIME hierarchy of the MHTML file. These resources can be referenced through \u201clocal\u201d links within the MHTML file and used to complete the rendering of the Web page.","Referring now to , a method  for packing a Web page as an MHTML file will be described. It should be understood that the method  packs an entire Web page, including supporting files, into a single MHTML file.","The method  begins at step  and proceeds to step  when the user navigates to the location of a Web page, such as Web page  (FIG. A). It should be understood that the location of the Web page may be a traditional hard drive location such as \u201cc:\\My Documents\\\u201d, a server location such as \u201c\\\\fileshare\\documents\u201d, a server location such as \u201cm:\\documents\u201d, or a folder on a Web server such as \u201chttp:\/\/Webserver\/\u201d. The user may navigate to this location either through a shell, such as shell  shown in , or through a file dialog. The method then proceeds to step .","At step , an indication is received that the user has clicked the right mouse button on a Web page, such as Web page  (FIG. A), and has chosen the action \u201cSave as Web Archive\u201d  (FIG. B). The method then proceeds to step .","At step , an executable file known as webarch.exe is invoked and a progress dialog is displayed to the user to inform the user of the progress being made toward packing the Web page as a MHTML file and creating a Web archive file. The method then proceeds to decision step .","At decision step , it is determined whether the user has write permissions to the current location that has been selected as the save location. If, at decision step , it is determined that the user does not have write permissions to the current location, then the method proceeds to decision step . However, if, at decision step , it is determined that the user does have write permissions to the current location, then the method proceeds to decision step .","At decision step , it is determined whether the user wants to save the Web archive file to the desktop. If not, then the method ends at step . However, if the user does want to save the Web archive file to the desktop, then the method proceeds to decision step .","At decision step , it is determined whether the name selected for the Web archive file is already in use in the save location. If not, then the method proceeds to step . If the name is already in use in the save location, then the method proceeds to decision step .","At decision step , it is determined whether the user wants to replace the existing file with the new Web archive file. If not, then the method ends at step . If so, then the method proceeds to step .","At step , the main HTML Web page, or HTML source file, is opened. In a preferred embodiment, the main HTML page is opened using a dynamic-link library (DLL) referred to as \u201cMSHTML.dll\u201d. This DLL is disclosed in U.S. Pat. 6,585,777. The method then proceeds to step .","At step , the main HTML Web page is searched for links to supporting files and a list of supporting files is gathered. The method then proceeds to step .","At step , the supporting files are placed into an MHTML file. The method then proceeds to step .","At step , the progress dialog that is displayed to the user is removed. The method then ends at step .","Having described an exemplary embodiment of the present invention, a preferred method for performing step  () will be described below in reference to FIG. .","The method begins at step  when the main HTML Web page is searched for \u201csrc\u201d, \u201clowsrc\u201d and \u201cdynsrc\u201d files referenced in <img> tags. It should be understood that these files are images. These files are marked to be included in a list of supporting files. The method then proceeds to step .","At step , the main HTML Web page is searched for \u201cbackground\u201d files referenced in <body> tags. It should be understood that these files are images. These files are marked to be included in the list of supporting files. The method then proceeds to step .","At step , the main HTML Web page is searched for \u201csrc\u201d files referenced in <script> tags. It should be understood that these files are script files. These files are marked to be included in the list of supporting files. The method then proceeds to step .","At step , the main HTML Web page is searched for \u201csrc\u201d files referenced in <bgsound> tags. It should be understood that these files are audio files. These files are marked to be included in the list of supporting files. The method then proceeds to step .","At step , the main HTML Web page is searched for \u201csrc\u201d files referenced in <embed> tags. It should be understood that these files are any arbitrary piece of content, including, but not limited to, a picture, a sound file, an executable file or a text file. These files are marked to be included in the list of supporting files. The method then proceeds to step .","At step , the main HTML Web page is searched for \u201chref\u201d files referenced in <link rel=\u201cStylesheet\u201d> tags. It should be understood that these files are stylesheets. These files are marked to be included in the list of supporting files. The method then proceeds to decision step .","At decision step , it is determined whether any files were found at step . If not, then the method proceeds to step . However, if some files were found at step , then the method proceeds to step .","At step , the stylesheets found at step  are loaded and searched for \u201c@import url ( . . . )\u201d references. This search continues three levels of stylesheets deep (searching for \u201chref\u201d files referenced in <link rel==\u201cStylesheet\u201d> tags and then searching for \u201c@import url ( . . . )\u201d references in the stylesheets found). These files are marked to be included in the list of supporting files. The method then proceeds to step .","At step , the main HTML Web page is searched for \u201csrc\u201d files referenced in <frame> tags. It should be understood that these files are HTML files. These files are marked to be included in the list of supporting files. The method then proceeds to decision step .","At decision step , it is determined whether any HTML files were found at step . If not, then the method proceeds to step . However, if some files were found at step , then the method proceeds to step .","At step , the HTML file(s) found at step  is loaded and recursively examined according to the method described herein FIG. . It should be understood that, in a preferred embodiment, there is no bound to how many levels deep this examination is. However, any loops are avoided. After the HTML file found at step  is examined at step , the method proceeds to step .","At step , the main HTML Web page is searched for \u201chref\u201d files referenced in <link rel=FileList> tags. It should be understood that these files point to filelist.xml, which is a file in Microsoft's \u201cOFFICE 2000\u201d (and later versions). This file list keeps track of all the files that make up the Web page, not just the files referenced in the first page of the Web page. These files are marked to be included in the list of supporting files. The method then proceeds to decision step .","At decision step , it is determined whether any files were found at step . If not, then the method ends and the results are sent to step  (FIG. ). However, if some files were found at step , then the method proceeds to step .","At step , the filelist.xml is parsed through and all \u201cHref\u201d references on an <o:File> tag are marked to be included in the list of supporting files. The method then ends and the results (the list of supporting files) are sent to step  (FIG. ).","Having described a preferred method for performing step  () above with regard to , a preferred method for performing step  () will be described below in reference to FIG. .","The method begins at step  when the INETCOMM.DLL application programming interface (API) is called to put the list of supporting files gathered at step  and the main HTML source file into an MHTML file. The method then proceeds to step .","At step , a file is created called \u201cWebpage(web archive).mht\u201d, where \u201cWebpage\u201d is the name of the Web page that was right clicked on at step  (FIG. ). The new file is created next to the main Web page if the user had write permissions or on the user's desktop if the user did not have write permissions. The main HTML Web page that the user right-clicked on becomes the main MIME part of the MHTML file. All the supporting files found at step  are added to the MHTML file. Each supporting file is assigned the appropriate content-type and content-location, where the content-location is set to the real world location of the file. A sample MHTML file  created using an embodiment of the present invention is shown in FIG. .","The preferred method for performing step  then ends and step  () is performed. The user is then presented with the shell  shown in , including the newly created Web archive file . The user now has a single file containing all the content in the Web page. The file  may be attached to an e-mail message, saved in a document management system, etc.","Unpacking the Web Page","Referring now to , a method  for unpacking an MHTML file to return the original Web page will be described. The method  begins at start step  and proceeds to step  as the user right-clicks on an MHTML file, such as file  (FIG. ), and selects an \u201cUnpack Web archive\u201d command from the drop-down menu. The method then proceeds to step .","At step , a progress dialog is displayed to indicate the progress made in unpacking the MHTML file. The method then proceeds to step .","At step , the name of the main HTML Web page is determined. If the main HTML part of the MHTML file has a content-location, then a leaf name is extracted from the content-location and that leaf name is used as the name of the Web page. If a leaf name can not be found, the name of the MHTML file the user right-clicked on is used as the name (with an .htm extension). The method then proceeds to step .","At step , the locations of supporting files are determined. If a valid file name for the main HTML page could not be determined, then each supporting file is located inside a folder called \u201cWebpage_files\u201d, where \u201cWebpage\u201d is the name of the Web archive file. If a supporting file does not have a content-location (e.g. it is referenced using a content-id) or if the content-location does not have a file name, the supporting file is located inside the \u201cWebpage_files\u201d folder.","The content-location of the supporting file is compared with the content-location of the main file. If the supporting file is in the same folder as the main file, or in a folder below the main file, then the folder structure is recreated and the supporting file is placed there. Otherwise, the supporting file is placed inside the \u201cWebpage_files\u201d folder.","For example, suppose the content location configuration of MHTML file  in  is used to unpack MHTML file . If the file  was unpacked to the desktop, the file structure  shown in  would be created. As illustrated in , content-location  is unpacked to create the main HTML Web page file  under Folder  (not shown). Content location , which is in the folder containing the main HTML Web page file , is then unpacked and Folder and Folder are then created under Folder. The Image.gif  is then placed inside Folder. However, content location  is not in the folder containing the main HTML Web page file  or in a folder below the main file. Therefore, the Image.gif  is placed inside the \u201cWebpage_files\u201d folder (Page_files folder  in FIG. B).","Returning now to , the method  then proceeds to decision step  where it is determined whether any of the file locations found at step  are already in use. If so, then the method proceeds to decision step . If not, then the method  proceeds to step .","At decision step , it is determined whether the user wants to replace the files that are already in use. If not, then the method  ends at step . If so, then the method proceeds to step .","At step , each MIME part of the MHTML file is converted into HTML and saved. In a preferred embodiment, the INETCOMM DLL is used for the conversion. The method  then proceeds to step .","At step , the progress dialog is dismissed and the user will see the unpacked Web page and all its files. The method then ends at step .","It should be understood that in unpacking the MHTML file there may be instances where the leaf name for a supporting file cannot be determined. In these instances, a preferred embodiment of the present invention assigns the name \u201cfileNNNN\u201d, where \u201cNNNN\u201d starts at \u201c0001\u201d and increases upward for each supporting file. If the appropriate content-type for the supporting file can be determined, then the appropriate extension is attached to the file. If the appropriate content-type for the supporting file can not be determined, then the extension \u201c.tmp\u201d is attached to the file.","It should be understood that in unpacking the MHTML file there may be instances where the two supporting files with the same name are saved to the \u201c_files\u201d directory. In these instances, a preferred embodiment of the present invention renames one of the files using the \u201cfileNNNN\u201d scheme described above to avoid any confusion with regard to the same-named files.","It should be understood that, in a preferred embodiment, the unpacking would fix references to files that were renamed or moved in the unpacking process so that the resulting Web page does not lose any content.","It should be understood that the present invention utilizes an existing open standard, MIME Encapsulation of Aggregate HTML Documents (\u201cMHTML\u201d) as a Web page storage format. The MHTML document format provides single-file simplicity as well as the functionality of being natively rendered in Web browsers such as Microsoft's \u201cINTERNET EXPLORER\u201d Web browser. In addition, MHTML documents can be edited using document authoring tools such as Microsoft's \u201cWORD\u201d word processor application program.","It should be understood that the present invention avoids the limitations of the prior art. The present invention is a method for using an existing open standard, MIME Encapsulation of Aggregate HTML Documents (\u201cMHTML\u201d) as a storage format for a Web page. A single file contains all of the Web page content. The file is not an executable file and so it avoids security risks. If a user has Microsoft's \u201cINTERNET EXPLORER\u201d Web browser (version 4.0 or later), the file is immediately viewable without an expensive extraction process. Packing and unpacking a Web page are symmetric. Both are right-click menus and user gets the result in their current window. A user does not need to first load the Web page in a different application before packing or unpacking. A user can even package a Web page in the \u201cInsert File\u201d dialog. The content of any Web page may be packaged, including a Web page created with document creation tools such as Microsoft's \u201cOFFICE\u201d suite of applications.","Although the present invention has been described above as implemented in a preferred application program module, it will be understood that alternative embodiments will become apparent to those skilled in the art to which the present invention pertains without departing from its spirit and scope. Accordingly, the scope of the present invention is defined by the appended claims rather than the foregoing description."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 6B"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 10A"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 10B"}]},"DETDESC":[{},{}]}
