---
title: System and method for coordinating deduplication operations and backup operations of a storage volume
abstract: A system and method are described for coordinating deduplication operations and backup operations of a storage volume. In one embodiment, a request is identified to eliminate duplicate data from a storage volume. The storage volume may be scheduled to be backed up on a periodic basis. The duration of time required to complete an operation to eliminate duplicate data from the storage volume may be determined. The determination may be based on the amount of data modified on the storage volume since the last operation to eliminate duplicate data from the storage volume. The determined duration of time may be used to schedule the start time of the operation to eliminate duplicate data such that the operation is completed prior to the next scheduled backup of the storage volume. The operation may be initiated at the scheduled start time, ensuring the operation is completed prior to the next scheduled backup.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08095756&OS=08095756&RS=08095756
owner: NetApp, Inc.
number: 08095756
owner_city: Sunnyvale
owner_country: US
publication_date: 20090428
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["Deduplication refers to the process of eliminating duplicate data objects from a storage volume. A storage volume may only require one instance of a data object to be stored; additional instances of the data object may be replaced with a pointer to the original data object. By eliminating redundant data objects and referencing only the original object, immediate benefits may be obtained through storage space efficiencies. However, deduplication operations may be ineffective on read-only storage volumes, such as some backup volumes, because the duplicate data can not be removed from read-only storage volumes. Thus, if a backup volume is created from a storage volume containing duplicate data, the duplicate data may be \u201clocked\u201d in the backup volume. Furthermore, if a snapshot operation begins while a deduplication operation is occurring, temporary metadata used by the deduplication operation may be locked in the snapshot volume.","In order to ensure duplicate data is not locked in a backup of a storage volume, the storage volume should be deduplicated immediately prior to creating the backup. Backup operations of a storage volume are often scheduled to occur at periodic intervals. The scheduled start time of each backup operation may be controlled by service level agreements, or other regulations, which may stipulate that the scheduled backups not be delayed. In these cases, a backup operation on a storage volume can not be delayed to allow a deduplication operation on the storage volume to complete. If a deduplication operation is not complete prior to the scheduled start time of a backup, any duplicate data on the storage volume will be locked in the backup. Therefore, deduplication operations are often scheduled to occur at regular intervals offset from the periodic backups. However, the time interval required for a deduplication operation may vary greatly depending upon the amount of data that needs to be deduplicated. The variance in time required for each deduplication operation renders deduplication operations scheduled at regular intervals largely ineffective. The deduplication operations may not always complete prior to the start of the next scheduled backup, resulting in any duplicate data being locked in the backup. Thus, there may be a need for coordinating deduplication and backup operations of a storage volume to ensure duplicate data is not stored in the periodic backups of the storage volume.","In these embodiments, a system is presented for coordinating deduplication operations and backup operations of a storage volume, which provides an advantage over the prior systems by ensuring duplicate data is removed from a storage volume prior to performing a backup operation on the storage volume. Ensuring duplicate data is removed from a storage volume prior to performing a backup operation on the storage volume reduces the storage space required for each backup, thereby greatly reducing the cost associated with storing each backup of the storage volume. Coordinating deduplication operations and backup operations of a storage volume may be achieved by scheduling each deduplication operation to complete immediately prior to the start of the next scheduled backup operation. By scheduling each deduplication operation to complete immediately prior to the start of the next backup operation, the system can ensure the storage volume is deduplicated immediately prior to creating a backup of the storage volume, thereby ensuring that no duplicate data is stored in the backup.","The system in these embodiments may prevent duplicate data from being stored in any backup datasets of a storage volume, such as a backup, a snapshot, or a mirror. The backup datasets may be read-only, meaning duplicate data can not be removed from the backup datasets. As such, any duplicate data needs to be eliminated from a storage volume immediately prior to creating a backup of the storage volume. The storage volume may be backed up at scheduled periodic intervals. The scheduled intervals may be identified by a service level agreement, or other regulations, which may require that the backup intervals not be modified or delayed. Thus, a scheduled backup of a storage volume can not be delayed to allow a deduplication of a storage volume to complete. In this case, the system must ensure that the deduplication of a storage volume is completed prior to the start of the next scheduled backup. The duration of time required to complete a deduplication of the storage volume may be determined based on the amount of data on the storage volume that has been modified since the last deduplication. The duration of time may be used to schedule the deduplication of the storage volume, such that the deduplication will complete immediately prior to the start of the next scheduled backup.","If the scheduled backup intervals of a storage volume can be delayed or rescheduled, the system may allow a deduplication of a storage volume to complete prior to backing up the storage volume. In this instance, the system may delay, reschedule, or otherwise prevent any backup operations from starting while a deduplication of the storage volume is occurring. The storage volume may be backed up immediately after the deduplication of the storage volume completes. Coordinating the deduplication and backup operations of a storage volume ensures that duplicate data is not stored in the backup datasets.","Turning now to the drawings,  provides a general overview of an exemplary network environment  implementing an embodiment for coordinating deduplication operations and backup operations of a storage volume. Not all of the depicted components may be required, however, and some implementations may include additional components. Variations in the arrangement and type of the components may be made without departing from the spirit or scope of the claims as set forth herein. Additional, different or fewer components may be provided.","Network  can be a local area network (LAN), a wide area network (WAN), virtual private network (VPN) utilizing communication links over the interne, for example, or a combination of LAN, WAN, and VPN implementations. For the purposes of this description, the term network should be taken broadly to include any acceptable network architecture. The network  interconnects various clients A-N. Also attached to the network  is a server . The server , which is described in more detail in  below, is configured to control storage of, and access to, data and a set  of interconnected storage volumes . The server  may also provide operations related to the storage volumes , such as backup operations, deduplication operations, and scheduling operations. A storage volume  may be single accessible storage area with a single file system, such as an accessible storage area on a hard disk, an optical disc, a tape drive, or generally any storage medium. The server  may also control storage of, and access to, a backup volume . The backup volume  may store a point in time image, also known as a backup, of one of the storage volumes . The server , the storage volumes , and the backup volume  may be connected to a common communication and data transfer infrastructure, such as Fibre Channel, and may collectively comprise a storage area network (SAN). Mirror volume  may be located remotely from the storage volumes  and the backup volume , and may store a copy of data stored on the backup volume . The mirror volume  may be network attached storage (NAS) directly attached to the network , or the mirror volume  may be accessed through a second server connected to the network .","Each of the devices attached to the network  includes an appropriate network interface arrangement (not shown) for communicating over the network using desired communication protocols such as the well-known Transport Control Protocol\/Internet Protocol (TCP\/IP), User Datagram Protocol (UDP), Hyper Text Transport Protocol (HTTP), Simple Network Management Protocol (SNMP), or Virtual Interface Connections (VI).","The server  may be an example of a computer that uses a deduplication engine to eliminate duplicate data stored on the storage volumes . The deduplication engine may be provided by NetApp, Inc.'s Data ONTAP\u2122 operating system and is discussed in more detail in  below. The deduplication engine may eliminate duplicate data blocks by replacing the duplicate data blocks with a pointer to the original data block. For example, an email system may contain twenty instances of the same one megabyte file attachment, requiring twenty megabytes of physical storage space. However, if the storage volume of the email system is deduplicated, only one instance of the email attachment is stored; each subsequent instance is referenced back to the original instance. Thus, through deduplication, the twenty megabytes of storage originally allocated to the email attachments can be reduced to only one megabyte of storage. The deduplication engine may perform deduplication operations on the storage volumes  at periodic intervals, such as on a daily basis.","The server  may utilize a backup engine to perform data protection and other tasks such as data mining and data cloning on the storage volumes . The backup engine also may be provided by NetApp, Inc.'s Data ONTAP\u2122 operating system and is discussed in more detail in  below. The backup engine may be used to perform a snapshot operation on a storage volume . The snapshot operation may create a point-in-time image of a storage volume , referred to as a snapshot of the storage volume . The snapshot data is often read-only, such that the snapshot data can not be modified. The snapshot data may include files, directories and\/or entire storage volumes and may be stored in the backup volume . The backup engine may also be used to perform a backup operation on the storage volumes . The backup operation may copy all of the data stored on a storage volume  to a backup volume . The backup volume  is often read-only. The backup engine may be configured to create snapshots and\/or backups at periodic intervals, such as every hour. In some instances regulations may be in place, such as service level agreements, which require that snapshots and\/or backups be created at periodic intervals. The regulations may stipulate that the snapshot and\/or backup operations can not be delayed from the periodic intervals.","Since the data stored on the backup volume  is often read-only, the backup volume may not be deduplicated, as the deduplication operation requires write access to the data to remove duplicate data blocks. Accordingly, any duplicate data blocks stored on the backup volume  are \u201clocked\u201d and can not be removed. In order to prevent duplicate data from being locked in the backup volume , the storage volume  needs to be deduplicated immediately prior to performing a snapshot or backup operation on the storage volume . Since the above mentioned service level agreements may require that periodic snapshot operations and\/or backup operations not be delayed, the deduplication of the storage volume  must be completed immediately prior to the scheduled start time of the next snapshot or backup operation. If the deduplication operation completes after the start of the periodic snapshot operation or backup operation, duplicate data may be locked in the backup volume . Conversely, if the deduplication operation is completed well in advance of the periodic snapshot operation or backup operation, additional duplicate data may accrue in the storage volume  prior to the snapshot operation or backup operation, and may be locked in the backup volume . The steps of coordinating deduplication operations with backup operations or snapshot operations  are discussed in more detail in  below.","The server  may also utilize the backup engine to perform mirror operations on the storage volumes  and\/or backup volume . A mirror operation may create a \u201cmirror\u201d or second copy of a data source, such as a mirror of the backup volume . The mirror volume  may be located remotely from the storage volume  and the backup volume , so as to ensure that the data stored on the storage volume  and backup volume  is available for disaster recovery. For example, should a disaster occur at the location of the storage volume  and backup volume , the data stored on the storage volume  could be recovered from the remotely located mirror volume .","In a mirror operation, the data stored on the backup volume  is transferred over the network  to the mirror volume . The backup engine may be configured to transfer data from the backup volume  to the mirror volume  at periodic intervals, such as every hour. Alternatively, the backup engine may be configured to transfer data stored on the backup volume  to the mirror volume  after each backup operation on the storage volume .","The amount of data transferred over the network  during a mirror operation to the mirror volume  may be minimized by deduplicating the data on the backup volume  prior to transferring the data over the network  to the mirror volume . A backup volume  used in conjunction with a mirror volume  may not be read-only and, therefore, may be deduplicated. The deduplication operation may be automatically triggered whenever the backup volume  is updated. Alternatively, the deduplication of the backup volume  may occur on a periodic basis, such as a daily basis. If a mirror operation is scheduled to occur while the backup volume  is being deduplicated, the mirror operation may be rescheduled until after the deduplication of the backup volume  completes. The steps of coordinating deduplication operations and mirror operations are discussed in more detail in  below.","In some instances, the schedule of the periodic backup or snapshot operations of a storage volume  may not be controlled by service level agreements or other regulations. In these cases, if a backup or snapshot operation is scheduled to start while a deduplication operation is occurring, the backup operation or snapshot operation may be rescheduled to start after the completion of the deduplication operation. The steps of coordinating deduplication operations and backup operations when the backup operations can be rescheduled are discussed in more detail in  below.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 2","FIG. 1"],"b":["200","100","200","200","200","200","202","204","206","208","210","212","204","300","204","202","300","204","202","300","200","200"]},"The network adapter  comprises the mechanical, electrical and signaling circuitry needed to connect the server  to clients A-N over network  (). Clients A-N may be general-purpose computers configured to execute applications, such as data base applications. Moreover, clients A-N may interact with the server  in accordance with the client\/server model of information delivery. That is, a client A A may request the services of the server , and the server  may return the results of the services requested by client A A, by exchanging packets defined by an appropriate networking protocol.","The storage adapter  incorporates with the operating system  executing on the server  to access information requested by a client A A. Information may be stored on the storage volumes  () which may be attached via the storage adapter  to the server . The storage adapter  includes input\/output (I\/O) interface circuitry that couples to the storage volumes  over an I\/O interconnect arrangement, such as a high-performance Fibre Channel serial link topology. The information is retrieved by the storage adapter  and, if necessary, processed by the processor  (or the adapter  itself) prior to be forwarded over the system bus  to the network adapter , where information is formatted into appropriate packets and returned to client A A.","In one exemplary server implementation, the server  can include a non-volatile random access memory (NVRAM)  that provides fault-tolerant backup of data, enabling the integrity of server transactions to survive a service interruption based upon a power failure or other fault.","One type of file system that may be configured to operate on the server  is a \u201cwrite in-place\u201d file system, an example of which is the Berkeley Software Distribution (BSD\u2122) Fast File System. In a write in-place file system, the locations of the data structures, such as inodes and data blocks, on disk may be fixed. The references to the locations of the file data are provided by pointers, which may further reference indirect blocks that, in turn, reference the data blocks, depending upon the quantity of data in the file. Changes to the inodes and data blocks are made \u201cin-place\u201d in accordance with the write in-place file system. If an update to a file extends the quantity of data for the file, an additional data block is allocated, and the appropriate inode is updated to reference that data block.","Another type of file system that may be configured to operate on the server  is a write-anywhere file system that does not overwrite data on disks. If a data block on disk is retrieved (read) from disk into memory and \u201cdirtied\u201d with new data, the data block is stored (written) to a new location on disk to thereby optimize write performance. A write-anywhere file system may initially assume an optimal layout such that the data is substantially contiguously arranged on disks. The optimal disk layout results in efficient access operations, particularly for sequential read operations, directed to the disks. A particular example of a write-anywhere file system that is configured to operate on the server  is the Write Anywhere File Layout (WAFL\u2122) file system available from NetApp, Inc. of Sunnyvale, Calif. The WAFL file system is implemented within a microkernel as part of the overall protocol stack of the server  and associated disk storage. This microkernel is supplied as part of NetApp, Inc.'s Data ONTAP\u2122 operating system, residing on the server , which processes file-service requests from network-attached clients.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 3","FIG. 2"],"b":["300","200"]},"The operating system , such as NetApp, Inc.'s Data ONTAP\u2122 operating system, includes a series of software layers, such as a media access layer  of network drivers (e.g., an Ethernet driver). The operating system  further includes network protocol layers, such as an Internet Protocol (IP) layer  and its supporting transport mechanisms, the Transport Control Protocol (TCP) layer  and the User Datagram Protocol (UDP) layer .","A file system protocol layer provides multi-protocol data access and includes support for the Network File System (NFS) protocol , the Common Internet File System (CIFS) protocol  and the Hyper Text Transfer Protocol (HTTP) . In addition, the operating system  includes a disk storage layer  that implements a disk storage protocol, such as a RAID protocol, and a disk driver layer  that implements a disk access protocol such as a Small Computer System Interface (SCSI) protocol.","A file system layer  bridges the disk software layers with the network and file system protocol layers. Generally, the file system layer  implements a file system having an on-disk format representation that is block-based using, e.g., 4-kilobyte (KB) data blocks and using inodes to describe the files. In response to transaction requests, the file system  generates operations to load (retrieve) the requested data from storage volumes  if it is not resident \u201cin-core\u201d, i.e., in the memory  of the server . If the information is not in memory , the file system layer  indexes into the inode file using the inode number to access an appropriate entry and retrieve a logical volume block number. The file system layer  then passes the logical volume block number to the disk storage (RAID) layer, which maps that logical number to a disk block number and sends the latter to an appropriate driver (for example, an encapsulation of SCSI implemented on a fibre channel disk interconnection) of the disk driver layer . The disk driver accesses the disk block number from storage volumes  and loads the requested data in memory  for processing by the server . Upon completion of the request, the server  (and operating system ) returns a reply, such as an acknowledgement packet defined by the CIFS specification, to client A A over the network .","The storage access request data path  needed to perform data storage access for the client requests received by the server  may alternately be implemented in hardware, software or a combination of hardware and software. That is, in an alternative embodiment, the storage access request data path  may be implemented as logic circuitry embodied, for example, within a microprocessor or controller, like a programmable gate array or an application specific integrated circuit (ASIC). A hardware implementation may increase the performance of the file service provided by the server  in response to a file system request issued by the client A A.","To facilitate the generalized access to the storage volumes , the operating system  may implement a write-anywhere file system that logically organizes the information as a hierarchical structure of directories and files on the disks. Each \u201con-disk\u201d file may be implemented as a set of disk blocks configured to store information, such as data. Each \u201con-disk\u201d directory may be implemented as a specially formatted file, which stores other files and directories. The operating system  can support both file-based access requests and block-based access requests.","The backup engine  may control the backup, snapshot, and mirror operations on the storage volumes . In one example, the backup engine  may utilize NetApp, Inc.'s Data ONTAP SnapVault\u2122 to provide snapshot operations and backup operations, and the backup engine  may utilize NetApp, Inc.'s Data ONTAP SnapMirror\u2122 to provide mirror operations. The snapshot, backup, and mirror operations may be scheduled to run on a periodic basis. The schedules may be identified by a client A A when the backup, snapshot or mirror operations are first configured for a storage volume . The scheduling engine  may monitor and modify the schedules for the snapshot, mirror, and backup operations of the storage volumes . The scheduling engine  may be a standalone application which runs on the server . The scheduling engine  may run external to the operating system , or the scheduling engine  may run on the operating system . Alternatively, the scheduling engine  may reside on a second server. The second server may have the same configuration as the server , such as including a processor, a memory and a network adapter, and the second server may be in communication with the server  via the network . The scheduling engine  may communicate an instruction to the backup engine  to perform a snapshot, backup, or mirror operation at a scheduled time. The instruction may be communicated to the backup engine  by calling an application programming interface (API) of the backup engine . The backup, snapshot and mirror schedules are often stored in a scheduling database , which may be stored on a disk which may be external to the set of storage volume . Alternatively, the schedules may be stored in the memory . In one example, the scheduling engine  may be provided by a provisioning manager which provisions the storage volumes  controlled by the server .","The deduplication engine  may perform the deduplication operations on the storage volumes . In one example, the deduplication engine  may utilize NetApp, Inc.'s A-SIS\u2122 (Advanced Single-Instance Storage), part of NetApp, Inc.'s Data ONTAP\u2122 operating system, to provide deduplication operations. For example, the deduplication engine  may use a fingerprint database  to store a hash, or \u201cfingerprint\u201d of each data block stored on a storage volume , and an address identifying the data block on the storage volume , such as a data block number. The fingerprint of each data block may be generated by a hash function, such as the Message-Digest algorithm 5 (MD5). The fingerprint database  is often stored on the disks where the storage volumes  are stored. However, the fingerprint database  may often be stored outside of the storage volumes  in order to achieve higher space savings when performing a deduplication operation on the storage volumes . Alternatively or in addition, the fingerprint database  may be stored in the memory  of the server .","The first time a storage volume  is deduplicated the deduplication engine  populates the fingerprint database  with a fingerprint of each data block on the storage volume , and the address identifying the data block on the storage volume . The deduplication engine  then sorts the fingerprint database  and identifies any duplicate fingerprints in the fingerprint database . If two duplicate fingerprints are found, the deduplication engine  uses the address associated with each fingerprint to retrieve the data blocks from the storage volume . The deduplication engine  may then perform a byte-by-byte comparison of the two data blocks to verify that the data blocks are duplicates. If the byte-by-byte comparison verifies that the data blocks are duplicates, the deduplication engine  deduplicates the data blocks.","After the storage volume  is deduplicated the first time, the deduplication engine  begins to generate metadata related to the storage volume  referred to as a change log . The change log  is often stored on the disks where the storage volumes  are stored. However, the change log  may often be stored outside of the storage volumes  in order to achieve higher space savings when performing deduplication operations on the storage volumes . Alternatively or in addition, the change log  may be stored in the memory  of the server . The change log  stores a fingerprint of each new data block written to the storage volume . Thus, each time a new data block is written to the storage volume , the deduplication engine  generates a fingerprint of the data block and stores the fingerprint in the change log . For each subsequent deduplication of the storage volume , the fingerprints stored in the change log  are compared with the fingerprints in the fingerprint database . In order to identify duplicate fingerprints, the deduplication engine  may merge the change log  into the fingerprint database , and then sort the fingerprint database . If a duplicate fingerprint is found, the deduplication engine  retrieves the actual data blocks and performs a byte-by-byte comparison of the data blocks. If the byte-by-byte comparison verifies that the data blocks are duplicates, the deduplication engine  deduplicates the data blocks. The change log  is cleared of fingerprints after each deduplication operation completes.","A storage volume  may be deduplicated by the deduplication engine  on a periodic basis, such as every hour. The deduplication schedule for each storage volume  may be determined by a client A A when the storage volume  is first configured for deduplication. The deduplication schedules may be stored in the scheduling database , which may be stored on a disk which is external to the set of storage volume . Alternatively, the schedules may be stored in the memory . The scheduling engine  may monitor and modify the deduplication schedules for the storage volumes , and may instruct the deduplication engine  to begin a deduplication operation at a scheduled time, such as by calling an API of the deduplication engine .","The scheduling engine  may coordinate the deduplication operations of the storage volume , and the backup, snapshot, and mirror operations of the storage volume to ensure the storage volume  is deduplicated prior to performing a backup, snapshot, or mirror operation. Since service level agreements often require that the backup, snapshot, and mirror operations not be rescheduled, the scheduling engine  may need to reschedule deduplication operations to ensure that each storage volume  is deduplicated prior to the start of the next backup, snapshot or mirror operation. The scheduling engine  may determine the time interval required to complete a deduplication operation and may use the time interval to schedule the deduplication operation such that the deduplication operation will complete prior to the next backup, snapshot, or mirror operation. The steps of coordinating deduplication operations with backup, snapshot, and mirror operations are discussed in more detail in  below.","The time interval required to perform a deduplication operation on a storage volume  may vary greatly for each deduplication operation. The scheduling engine  may determine the time interval required to complete a deduplication of a storage volume  by multiplying the amount of data which needs to be deduplicated on the storage volume  by the deduplication rate of the storage volume . The amount of data which needs to be deduplicated on the storage volume  may be equivalent to the amount of data modified on the storage volume  since the last deduplication of the storage volume . In one example, the scheduling engine  may determine the amount of data modified since the last deduplication based on the number of fingerprints in the change log  of the storage volume  and the size of the data blocks on the storage volume . The steps of determining the amount of data modified on a storage volume  since the last deduplication of the storage volume  are discussed in more detail in  below.","The deduplication rate of the storage volume  may refer to the rate at which the storage volume  can be deduplicated. The deduplication rate for a particular deduplication operation can be determined by dividing the amount of data deduplicated by the deduplication operation by the time interval required to complete the deduplication operation. For example, if a deduplication operation deduplicated five megabytes of data and the deduplication operation required five seconds to complete, then the deduplication rate for the deduplication operation would be one megabyte per second. The deduplication rate of a storage volume  may be based on the time intervals required to complete previous deduplication operations of the storage volume  and the amount of data deduplicated during the previous deduplication operations. For example, after each deduplication operation of a storage volume , the deduplication engine  may store the amount of data which was deduplicated and the time interval required to complete the deduplication operation. Alternatively, the after each deduplication operation the scheduling engine  may store the amount of data which was deduplicated and the time interval required to complete the deduplication. The amount of data and time interval may be stored in the scheduling database , on the storage volume , or in the memory . The stored amount of data modified and time interval values may later be retrieved to determine the deduplication rate of the storage volume  prior to subsequent deduplication operations. The steps of determining the deduplication rate of a storage volume  are discussed in more detail in  below. If a storage volume  is being deduplicated for the first time, and a deduplication rate can not be determined, the deduplication rate of a storage volume of a similar capacity may be used.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 4","FIG. 4"],"b":["106","106","106","106","106","336","300","200","202","200","200"]},"At step , the scheduling engine  retrieves a change log  of a storage volume  to be deduplicated. As mentioned above, the change log  stores a hash, or fingerprint, of each data block on the storage volume  which has been modified since the previous deduplication of the storage volume . At step , the scheduling engine  identifies the size of the change log  of the storage volume . The size of the change log  can be identified by measuring the amount of storage space occupied by the change log . At step , the scheduling engine  identifies the size, or length, of each fingerprint in the change log . The size of each fingerprint is often determined by the deduplication engine  when the storage volume  is first configured for deduplication, and may be retrieved from metadata on the storage volume . For example, the size of an exemplary fingerprint may be four bytes.","At step , the scheduling engine  determines the number of fingerprints in the change log . The number of fingerprints in the change log  may be determined by dividing the size of the change log  by the size of each fingerprint. At step , the scheduling engine  identifies the size of each data block on the storage volume . The size of each data block is often determined when the storage volume  is first created and may be retrieved from metadata on the storage volume , or by measuring the amount of space occupied by a single data block on the storage volume . For example, the size of an exemplary data block may be four kilobytes. At step , the scheduling engine  determines the amount of data modified since the last deduplication of the storage volume  by multiplying the number of fingerprints in the change log  by the size of each data block. Since there is a one to one correlation between the fingerprints and the data blocks, the number of fingerprints in the change log  will equal the number of modified data blocks. The amount of data modified since the last deduplication can then be determined by multiplying the number of fingerprints in the change log , equivalent to the number of data blocks modified, by the size of each data block. The scheduling engine  may use the amount of data modified on the storage volume  since the last deduplication operation to determine the time interval required for the next deduplication operation of the storage volume  as discussed in  below.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 5","FIG. 5"],"b":["106","336","300","200","202","200","200"]},"At step , the scheduling engine  retrieves the amounts of data deduplicated during previous deduplications of the storage volume . As mentioned above, after a deduplication operation completes the amount of data deduplicated during the deduplication operation may be stored in the scheduling database , on the storage volume , or in the memory . The amount of data deduplicated during a deduplication operation is equal to the amount of data modified on the storage volume  since the last deduplication operation. The scheduling engine  may retrieve the amounts of data deduplicated for all previous deduplication operations, or the scheduling engine  may retrieve the amounts of data deduplicated from the most recent deduplication operations of the storage volume , such as the last five deduplication operations. If the storage volume  was not previously deduplicated, the scheduling engine  may retrieve the amounts of data deduplicated during previous deduplications of a storage volume  of a similar capacity.","At step , the scheduling engine  retrieves the time intervals required to complete the previous deduplications of the storage volume . As mentioned above, after a deduplication operation completes the time interval required to complete the deduplication operation may be stored in the scheduling database , on the storage volume  or in the memory . The scheduling engine  may retrieve the time intervals for all of the previous deduplication operations of the storage volume , or the scheduling engine  may retrieve the time intervals for the most recent deduplication operations of the storage volume, such as the last five deduplication operations. If the storage volume  was not previously deduplicated, the scheduling engine  may retrieve the deduplication time intervals of a storage volume  of a similar capacity.","At step , the scheduling engine  determines the total amount of data deduplicated during previous deduplications of the storage volume . The scheduling engine  may determine the total amount of data deduplicated by adding each of the individual amounts of data deduplicated. At step , the scheduling engine  determines the total time interval of all the previous deduplications. The total time interval of all the previous deduplications may be determined by adding the time intervals for each of the previous deduplications.","At step , the scheduling engine  determines the deduplication rate of the storage volume  by dividing the determined total amount of data deduplicated during all previous deduplications of the storage volume  by the determined total time interval of all previous deduplications of the storage volume . The scheduling engine  may then use the deduplication rate of the storage volume  to determine the time interval required to complete the next scheduled deduplication of the storage volume . The time interval required to complete the next scheduled deduplication of the storage volume  may be used by the scheduling engine  to coordinate the next scheduled deduplication of the storage volume  with backup, snapshot, and mirror operations as discussed in  below.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 6","FIG. 6"],"b":["336","300","200","202","200","200"]},"At step , the scheduling engine  may identify a request to start a deduplication operation on the storage volume . The request may be received by the scheduling engine  from the client A A. Alternatively, the request may be identified by the scheduling engine  in a deduplication schedule of the storage volume . As mentioned above, the scheduling engine  may monitor a deduplication schedule of the storage volume . A deduplication schedule may be a set of requests to deduplicate the storage volume  at a set of start times determined by the client A A. The scheduling engine  may also be configured to generate a request to deduplicate the storage volume  when the change log  of the storage volume  exceeds a certain size.","At step , the scheduling engine  identifies the next backup operation scheduled for the storage volume . Alternatively, the scheduling engine may identify the next snapshot operation scheduled for the storage volume . As previously mentioned, a snapshot may be a point-in-time image of the storage volume . The backup and snapshot operations may be scheduled to occur on a periodic basis. The backup and snapshot schedules may be governed by a service level agreement, or other regulations, which may require that the start time of each scheduled backup or snapshot operation may not be delayed.","At step , the scheduling engine  determines the time interval which will be required to perform the identified deduplication operation on the storage volume . As mentioned above, the time interval may be determined by multiplying the amount of data modified on the storage volume  since the last deduplication of the storage volume  by the deduplication rate of the storage volume . Thus, the formula for the determination of the time interval is: time_interval=data_modified*deduplication_rate. For example, if ten megabytes of data were modified on the storage volume  since the last deduplication, and if the deduplication rate of the storage volume  is one megabyte per second, then it may take ten seconds to deduplicate the storage volume . The steps of determining the amount of data modified on the storage volume  since the last deduplication of the storage volume  are discussed in more detail in  above. The steps of determining the deduplication rate of the storage volume  are discussed in more detail in  above.","At step , the scheduling engine  may schedule the deduplication of the storage volume  such that the deduplication operation will complete immediately prior to the start of the next scheduled backup or snapshot operation of the storage volume . The scheduling engine  may utilize the start time of the next scheduled backup or snapshot operation, and the time interval required to complete the deduplication operation, to schedule the start of the deduplication operation. For example, the scheduling engine  may subtract the time interval required to complete the deduplication operation from the start time of the next scheduled backup or snapshot operation to determine the start time of the deduplication operation. In this example, the deduplication of the storage volume  would be scheduled to start at a time that ensures the deduplication operation will complete immediately prior to the start of the next backup or snapshot operation. By scheduling the deduplication operation to complete immediately prior to the start of the next backup or snapshot operation, the scheduling engine  ensures that no duplicate data is stored in the backup volume . The scheduling engine  may store the scheduled start time in the scheduling database .","At step , the scheduling engine  communicates an instruction to the deduplication engine  to start the deduplication operation of the storage volume  at the determined start time. The scheduling engine  may communicate the instruction by calling an API of the deduplication engine . The deduplication engine  receives the instruction and deduplicates the storage volume . At step , the scheduling engine  communicates an instruction to the backup engine  to start the backup or snapshot operation of the storage volume  at the scheduled time, after the deduplication operation has completed. The scheduling engine  may communicate the instruction to the backup engine  by calling an API of the backup engine . The backup engine  receives the instruction and performs the backup or snapshot operation on the storage volume . Since a deduplication operation was performed on the storage volume  prior to the backup or snapshot operation, no duplicate data is locked in the backup or snapshot volume, thereby conserving storage resources.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 7","FIG. 7"],"b":["336","332","300","200","202","200","200"]},"At step , the backup engine  performs a backup operation on the storage volume . The backup operation may transfer data from the storage volume  to the backup volume . The storage volume  and the backup volume  may be located in close proximity, and the data may be transferred from the storage volume  to the backup volume  over a local area network. The backup volume  may not be read-only and, therefore, may be deduplicated. The backup volume  may be configured by the client A A to be mirrored by a mirror volume , or a remote copy, of the backup volume . The mirror volume  may be remotely located from the backup volume , so as to ensure at least one of the backup volume  or the mirror volume  is available for disaster recovery. The client A A may create a mirror schedule for the backup volume . The mirror schedule may be a set of requests to perform a mirror operation on the backup volume  at a set of start times determined by the client A A.","At step , the scheduling engine  identifies a request to perform a deduplication operation on the backup volume . For example, the backup engine  may request that a deduplication operation be performed on the backup volume  after each backup operation completes. Alternatively, the scheduling engine  may identify a scheduled deduplication operation in the scheduling database . At step , the scheduling engine  determines the time interval which will be required to perform the deduplication operation on the backup volume . As mentioned above, the time interval may be determined by multiplying the amount of data modified on the backup volume  since the last deduplication of the backup volume  by the deduplication rate of the backup volume . The steps of determining the amount of data modified on the backup volume  since the last deduplication of the backup volume  are discussed in more detail in  above. The steps of determining the deduplication rate of the backup volume  are discussed in more detail in  above.","At step , the scheduling engine  may communicate an instruction to the deduplication engine  to start a deduplication of the backup volume . The scheduling engine  may communicate the instruction to the deduplication engine  by calling an API of the deduplication engine . The deduplication engine  receives the instruction and starts a deduplication operation on the backup volume . At step , the scheduling engine  may determine whether a mirror operation on the backup volume  is scheduled to start during the deduplication operation of the backup volume  based on the determined time interval required to deduplicate the backup volume . For example, the scheduling engine  may retrieve the start time of the next scheduled mirror operation from the mirror schedule of the backup volume . If the next mirror operation is scheduled to start before the time interval required to deduplicate the backup volume  has elapsed, then the mirror operation is scheduled to start during the deduplication of the backup volume . If a mirror operation is scheduled to start during the deduplication of the backup volume , the scheduling engine  may move to step . At step , the scheduling engine  may reschedule the mirror operation to start immediately after the completion of the deduplication of the backup volume . The scheduling engine  may use the time interval required to complete the deduplication of the backup volume  to reschedule the mirror operation. The scheduling engine  may store the rescheduled start time of the mirror operation in the scheduling database .","If, at step , the scheduling engine  determines there is not a mirror operation scheduled to start during the deduplication operation, the scheduling engine  moves to step . At step , the deduplication engine  completes the deduplication of the backup volume . At step , the scheduling engine  communicates an instruction to the backup engine  to start the mirror operation of the backup volume . The scheduling engine  may communicate the instruction to the backup engine  by calling an API of the backup engine . The backup engine  performs the mirror operation by transferring the data from the backup volume  to the mirror volume  over the network . Since a deduplication operation was performed on the backup volume , no duplicate data is transferred from the backup volume  to the mirror volume  over the network , thereby conserving network resources.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 8","FIG. 8"],"b":["336","300","200","202","200","200"]},"At step , the scheduling engine  may identify a request to start a deduplication operation on the storage volume . The request may be received by the scheduling engine  from the client A A. Alternatively, the request may be identified by the scheduling engine  in a deduplication schedule of the storage volume . As mentioned above, the scheduling engine  may monitor a deduplication schedule of the storage volume . The scheduling engine  may also be configured to generate a request to deduplicate the storage volume  when the change log of the storage volume  exceeds a certain size.","At step , the scheduling engine  determines the time interval which will be required to perform the deduplication operation on the storage volume . As mentioned above, the time interval may be determined by multiplying the amount of data modified on the storage volume  since the last deduplication of the storage volume  by the deduplication rate of the storage volume . The steps of determining the amount of data modified on the storage volume  since the last deduplication of the storage volume  are discussed in more detail in  above. The steps of determining the deduplication rate of the storage volume  are discussed in more detail in  above.","At step , the scheduling engine  may determine whether a backup or snapshot operation of the storage volume  is currently occurring. The scheduling engine  may determine if a backup or snapshot operation of the storage volume  is currently occurring by polling the backup engine  or calling an API of the backup engine . Alternatively, the scheduling engine  may determine whether a backup or snapshot operation of the storage volume  is currently occurring by retrieving the backup schedule of the storage volume . If a backup operation of the storage volume  is currently occurring, the scheduling engine  moves to step .","At step , the scheduling engine  communicates an instruction to the backup engine  to stop the backup operation. The scheduling engine  may communicate the instruction to the backup engine  by calling an API of the backup engine. The backup engine  receives the instruction and stops performing the backup operation. In some instances the backup engine  may not support an operation for stopping the backup operation and therefore the backup operation may not be stopped at step . At step , the scheduling engine  reschedules the backup operation to start immediately after the completion of the deduplication operation of the storage volume . The scheduling engine  may use the time interval required to deduplicate the storage volume  to reschedule the backup operation to start after the completion of the deduplication operation. The scheduling engine  may store the rescheduled start time of the backup operation in the scheduling database .","If, at step , the scheduling engine  determines that a backup of the storage volume  is not currently occurring, the scheduling engine  moves to step . At step , the scheduling engine  determines whether a backup operation of the storage volume  is scheduled to start during the time required for completing the deduplication operation, based on the time interval required to deduplicate the storage volume . For example, the scheduling engine  may retrieve the start time of the next scheduled backup operation. If the next scheduled backup operation is scheduled to start before the time interval required to deduplicate the backup volume  has elapsed, then the backup operation is scheduled to start during the deduplication of the storage volume . If a backup operation is scheduled to start during the time interval required for the deduplication operation, the server  moves to step . At step , the scheduling engine  reschedules the backup operation to start after the completion of the deduplication operation. The scheduling engine  may store the rescheduled start time of the backup operation in the scheduling database .","If, at step , the scheduling engine  determines that a backup operation is not scheduled to start during the time interval required for the deduplication operation, the scheduling engine  moves to step . At step , the scheduling engine  communicates an instruction to the deduplication engine  to perform a deduplication operation on the storage volume . The scheduling engine  may communicate the instruction to the deduplication engine  by calling and API of the deduplication engine . The deduplication engine  receives the instruction and performs the deduplication operation on the storage volume . At step , the scheduling engine  communicates an instruction to the backup engine  to perform a backup operation on the storage volume . The scheduling engine  may communicate the instruction to the backup engine  by calling an API of the backup engine . The scheduling engine  communicates the instruction after the deduplication engine  completes the deduplication operation. The backup engine  receives the instruction and performs the backup operation on the storage volume . Since the backup operation was delayed until after the completion of the deduplication operation, no duplicate data is stored in the backup volume , thereby conserving storage resources.","The above disclosed subject matter is to be considered illustrative, and not restrictive, and the appended claims are intended to cover all such modifications, enhancements, and other embodiments, which fall within the true spirit and scope of the description. Thus, to the maximum extent allowed by law, the scope is to be determined by the broadest permissible interpretation of the following claims and their equivalents, and shall not be restricted or limited by the foregoing detailed description."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
