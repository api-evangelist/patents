---
title: System and method for identifying and utilizing a secondary index to access a database using a management system without an internal catalogue of online metadata
abstract: A system for identifying and utilizing a secondary index to access a database using a management system without an internal catalogue of online metadata. The system receives an application request to access a database from the application program, and parses the application request to determine at least one column name and at least one table name. The system utilizes an online catalogue containing metadata to translate the column name to a field name and the table name to a segment name, wherein the segment name has an associated secondary index. The system utilizes the online catalogue to determine an associated secondary index name, and builds a database request that includes the segment name, the field name, and the associated secondary index name. The system then sends the database request to the database management system, so that the associated secondary index can be used by the database management system in response to the database request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07020648&OS=07020648&RS=07020648
owner: International Business Machines Corporation
number: 07020648
owner_city: Armonk
owner_country: US
publication_date: 20021214
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["The present invention generally relates to database management systems, and particularly to a method for providing online catalogue capability to database management systems without online catalogues in a manner that can accommodate secondary indexes. More specifically, this invention provides capability for interaction with application programming interfaces such as JDBC\u00ae, so that application programs written in programming languages such as Java\u00ae can access hierarchical databases utilizing secondary indexes to achieve improved performance.","Physical information management system (IMS) databases are hierarchical, non-relational databases. Each database has a schema defined as a hierarchy or tree of segment types, each of which is defined, in turn, as a collection of fields. This definition of a physical database schema is contained in an IMS control block called a database description (DBD). One or more optional secondary indexes may also be defined for an IMS hierarchical database each of which is defined with their own unique DBD control blocks. Online catalogues in the prior art capture available information from the primary database DBD but otherwise ignore all other related DBDs associated with defined secondary indexes. Consequently, this secondary index metadata is only available in assembler language macro format, or as compiled object code, and thus the IMS has no online catalogue capability pertaining to secondary indexes.","Users operating IMS databases may wish to query and manipulate the data contained in the database. Current methods for accessing and manipulating the data in databases often use an application programming interface (API) written in Java\u00ae, such as JDBC\u00ae (Java\u00ae DataBase Connectivity). JDBC\u00ae is a programming interface that lets Java\u00ae applications access a database via the SQL language.","Since Java\u00ae interpreters (Java\u00ae Virtual Machines) are available for major client platforms, this allows a platform-independent database application to be written. However, JDBC\u00ae cannot be used with prior art IMS to access a database using a secondary index because the prior art online catalogue cannot accommodate secondary indexes. The catalogue defines all the attributes of the segments, fields and their inter-relationships. Segments and fields in a hierarchical database are analogous to tables and columns within relational databases. A catalogue is online if it can be accessed dynamically (during execution of the application) at runtime.","A database with an online catalogue will access the online catalogue and perform maintenance functions when data is retrieved or stored. Such maintenance functions include strong type checking which ensures type consistency and eliminates type conflict. JDBC\u00ae also requires strong type checking. Consequently, JDBC\u00ae cannot be used with IMS databases when access to the data is through a secondary index to achieve enhanced performance. Therefore, in the prior art, applications requiring dynamic access to IMS metadata must forego the use of secondary indexes and incur significant performance penalties.","What is therefore needed is an online catalogue that can be introduced in an IMS setting, or in any other hierarchical database setting that has no online catalogue, to facilitate the use of secondary indexes for accessing the data in a more efficient manner. The need for such a system has heretofore remained unsatisfied.","The present invention satisfies this need, and presents a system and associated method (collectively referred to herein as \u201cthe system\u201d or \u201cthe present system\u201d) for identifying and utilizing a secondary index to access a database using a management system without an internal catalogue of online metadata.","A secondary index provides alternate search paths to any segment type in the database hierarchy (logical or physical), and affects the application programming interface's view of the data. Each secondary index represents an access path to the database record other than via the root key. The additional access path is a new relationship that can result in faster retrieval of data.","The present system receives an application request to access the database from the application program, and parses the application request to determine at least one column name and at least one table name. The system utilizes an online catalogue containing metadata to translate the column name to a field name and the table name to a segment name, wherein the segment name has an associated secondary index.","The system utilizes the online catalogue to determine an associated secondary index name, and builds a database request that includes the segment name, the field name, and the associated secondary index name. The system then sends the database request to the database management system, so that the associated secondary index can be used by the database management system in response to the database request.","The following definitions and explanations provide background information pertaining to the technical field of the present invention, and are intended to facilitate the understanding of the present invention without limiting its scope:","API: (Application Program Interface) A language and message format used by an application program to communicate with the operating system or some other system or control program such as a database management system (DBMS) or communications protocol.","Catalogue (or catalog): Defines attributes, including IMS metadata. Exemplary attributes include the attributes of the tables and columns within databases.","Class: In object-oriented programming, an object type; a group of objects that have the same properties, operations, and behavior.","Database systems, also referred to as Database Management System (DBMS): Software used to manage databases. Generally provides services by which applications can access and manipulate the data in the databases under its control, and other services for the administration, security, and integrity of the databases.","Dynamically: during the execution of an application.","Metadata: Data about data. Metadata is definitional data that provides documentation of or information about other data managed within an environment or by an application. Metadata may document data about data elements or attributes such as name, size, or data type. It may also log data about data structures including length, fields, and columns. Other data included in Metadata encompass the association, storage location, and ownership of data. Metadata may additionally include descriptive information about the context, quality and condition, and\/or characteristics of data.","Online catalogue: A catalogue that is dynamically accessible at runtime during execution of the application.","Schema: A structure of hierarchical or relational databases. For example, the schema of a relational database is comprised of tables with columns, indexes, constraints, and relationships to other tables.","Segment: A partition, reserved area, partial component or piece of a larger structure.","Tree: A hierarchical structure which is made up by nodes. Nodes are connected by edges from one node (parent) to another (child). A single node at apex of the tree is known as the root node, while the terminus of a path in the opposite direction is a leaf.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1","b":["10","10"]},"System  includes a software programming code or computer program product that is typically embedded within, or installed on a computer. Alternatively, system  can be saved on a suitable storage medium such as a diskette, a CD, a hard drive, or like devices. In a preferred embodiment, system  is an integral extension of the online catalogue. The entire catalogue  can be saved on a suitable storage medium.","System  is imbedded in an online catalogue  that uses known or available technology. In an exemplary preferred embodiment, a JDBC\u00ae application program  queries an information management system (IMS) JDBC\u00ae driver . The IMS JDBC\u00ae driver  interacts with online catalogue  to formulate queries for an information management system (IMS) . The information management system  retrieves the responses to these queries from database .","A database management system (DBMS)  is also shown for comparison, and includes an internal catalogue . The JDBC\u00ae application program  queries the database management system JDBC\u00ae driver . The database management system JDBC\u00ae driver  queries the DBMS  that then retrieves responses to these queries from database .","Although the online catalogue  including system , is not part of the database management system, IMS, its performance is similar to that of database management system . The database management system JDBC\u00ae driver  communicates with database management system  using SQL.","In contrast, the information management system JDBC\u00ae driver  parses the query from the JDBC\u00ae application program , and interacts with the online catalogue  with system  to form segment search arguments.","The information management system  has a schema defined as a hierarchy or tree of segment types, each of which is defined, in turn, as a collection of fields. This definition of a physical database schema is contained in control block called a \u201cDatabase Description\u201d (DBD). System  facilitates alternate search paths to any segment type in the database hierarchy (logical or physical), representing a different access path to the database record other than via the root key.","With reference to , the online catalogue  contains metadata  for database . The secondary index system  of online catalogue  comprises additional metadata extracted from the secondary index DBDs. The online catalog  contains all the information representing the database hierarchy of the information management system  in a format that can be referenced at runtime.","The database hierarchy includes all the segments in the database, shown as segment , , , , and all the fields in the database segments. Information about the fields in the segments includes types of fields and the offsets and lengths of those fields.","The secondary index system contains secondary index segments (SIS), such as secondary index segment , ,  that point to segments in the physical database , shown by link . This link  from secondary index segment  to segment  represents an alternate search path to segment ","The JDBC driver  () inspects the online catalogue  at runtime. The view of the main physical database  by the online catalogue  is modified to include this alternate search path (represented by link ), so that the online catalogue  can accommodate requests from IMS JDBC Driver  referencing secondary indexes.","The segment  contains \u201ckey\u201d values that define a key for the secondary index segment . The segment  contains fields in a segment, which define a key for the secondary index segment. The two main classes involved in system  are SecondaryIndexInfo and DLITypeInfo. A SecondaryIndexInfo object is a specialization of a DLITypeInfo object that defines a field, or a set of fields, that make up secondary index segment , , .","A SecondaryIndexInfo object is constructed by providing the field name alias, an array of ordered strings that indicate the field names (by field name alias), the secondary index references (via the SRCH parameter), and the actual name of the secondary index segment , ,  as defined in the DBD.","A DLITypeInfo object is used to provide the layout of the fields in segment , , ,  to the base class DLISegment. With this metadata, the DLISegment class is able to provide access to all of the fields in any segment , , , . This access is achieved using either the defined field name or the 1-based index of the DLITypeInfo object in the array that is registered for each segment type. The defined field name can be an alias for the defined search field name in the DBD source file. When referring to the field, the field alias can be used instead of the search or key field name.","The following code illustrates an exemplary way for defining a segment containing a secondary index:",{"@attributes":{"id":"p-0043","num":"0042"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"public class TelephoneDirectory extends DLISegment {"},{"entry":"\u2003\u2003static String[] keys = {\u201cLastName\u201d, \u201cFirstName\u201d};"},{"entry":"\u2003\u2003static DLITypeInfo[] typeInfo = {"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003new DLITypeInfo(\u201cEmployeeNumber\u201d,","DLITypeInfo.CHAR,","\u20021, 6, \u201cEMPNO\u201d),"]},{"entry":["\u2003\u2003\u2003\u2003new DLITypeInfo(\u201cLastName\u201d,","DLITypeInfo.CHAR,","\u20027, 10),"]},{"entry":["\u2003\u2003\u2003\u2003new DLITypeInfo(\u201cFirstName\u201d,","DLITypeInfo.CHAR,","17, 10, \u201cFNAME\u201d),"]},{"entry":["\u2003\u2003\u2003\u2003new DLITypeInfo(\u201cExtension\u201d,","DLITypeInfo.CHAR,","27, 10),"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\u2003\u2003new SecondaryIndexInfo(\u201cEmployeeInfo\u201d, \u201cDirectory\u201d, keys, \u201cEMPINFO\u201d, 20)"},{"entry":"\u2003\u2003};"},{"entry":"\u2003\u2003public TelephoneDirectory( ) {"},{"entry":"\u2003\u2003\u2003\u2003super(\u201cDirectory\u201d, \u201cTELEDIR\u201d, typeInfo, 36);"},{"entry":"\u2003\u2003}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"An example of a segment in the main physical database  is shown in . In this example, the segment  is named \u201cdirectory\u201d. Segment  comprises four fields, employee number , last name , first name , and extension .","In this example, the secondary index segment  is keyed off the employee number  and the last name . The secondary index segment  is named \u201cemployee_info\u201d. The IMS JDBC\u00ae driver  parses the query from the JDBC\u00ae application program . If any field in the parsed query refers to \u201cemployee_info\u201d, an alternate path is requested to the specific segment sought by the JDBC\u00ae application program ","Secondary index segment  points to two keys in segment . From these two keys, the IMS  can find the correct segment in the database  and retrieve the data associated with the two key fields in dB. In this case, system  provides sufficient information about segments, fields, secondary indexes and relationships to allow JDBC driver  to construct an SSA for accessing that particular segment in information management system  utilizing the secondary index named \u201cemployee_info\u201d. Indexed access implies faster access to data.","In a preferred embodiment, and as shown in the example of , the secondary index segment  can be viewed as another field in segment .","Method  of  illustrates the operation of system . With further reference to , the IMS JDBC\u00ae driver  receives an application request, such as an SQL query, from the JDBC\u00ae application program  at block , to access the database  from the application program.","The IMS JDBC\u00ae driver  parses the application request to retrieve segments and field references at block . In the present example, the IMS JDBC\u00ae driver  parses the application request (represented by link ) to determine at least one column name and at least one table name.","At block , the IMS JDBC\u00ae driver  accesses the online catalogue  to retrieve segment and field information. At decision block , the IMS JDBC\u00ae driver  examines the retrieved segment information to determine if it is a secondary index segment. A field in the DLITypeInfo object for the field, identifies the retrieved segment information as a secondary index segment. If not, the IMS JDBC\u00ae driver  builds a segment search argument (SSA) for the application request  at block . The IMS JDBC\u00ae driver  then sends the secondary search argument to the information management system  (block ).","If at decision block  the segment field is determined to be a secondary index segment, the IMS JDBC\u00ae driver  utilizes this secondary index segment to build a secondary search argument at block . The IMS JDBC\u00ae driver  then sends the secondary search argument to the information management system  (block ). Process  repeats steps , , , and , as described herein, for each field in the SQL query that was parsed at block .","In the present example, the system  utilizes the online catalogue  containing metadata, to translate the column name to a field name and the table name to a segment name, with the segment name having an associated secondary index. The system  utilizes the online catalogue  to determine an associated secondary index name, and builds a database request that includes the segment name, the field name, and the associated secondary index name. The system  then sends the database request to the IMS JSBC\u00ae drive , so that the associated secondary index could be used by the database management system in response to the database request.","It is to be understood that the specific embodiments of the invention that have been described are merely illustrative of certain application of the principle of the present invention. Numerous modifications may be made to the system and method for providing a secondary index within an online catalogue invention described herein without departing from the spirit and scope of the present invention. Moreover, while the present invention is described for illustration purpose in relation to JDBC\u00ae, Java\u00ae, and IMS databases, it should be clear that the invention is applicable as well to other application program interface drivers for other programming languages such as C++ language, and can be applied to a database management system that does not have an online catalogue."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The various features of the present invention and the manner of attaining them will be described in greater detail with reference to the following description, claims, and drawings, wherein reference numerals are reused, where appropriate, to indicate a correspondence between the referenced items, and wherein:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 3","FIGS. 1 and 2"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 4","FIGS. 1 and 2"]}]},"DETDESC":[{},{}]}
