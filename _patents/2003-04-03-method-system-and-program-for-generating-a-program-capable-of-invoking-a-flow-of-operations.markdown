---
title: Method, system, and program for generating a program capable of invoking a flow of operations
abstract: Provided are a method, system, and program for generating a program capable of invoking a flow of operations, wherein the program is capable of being initiated from an external call. A definition file defining a flow of operations and mapping information defining input parameters to the flow of operations are received. The received definition file and mapping information are processed to generate program statements within the program that when executed perform: setting input parameters to the flow of operations to values received from an external call to the program; invoking the flow of operations with the input parameters including values from the external call; and receiving output from the flow of operations and extracting at least one value from the received output to return to the external call.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08914807&OS=08914807&RS=08914807
owner: International Business Machines Corporation
number: 08914807
owner_city: Armonk
owner_country: US
publication_date: 20030403
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE DESCRIBED IMPLEMENTATIONS","DETAILED DESCRIPTION","Invoking Web Services from a Database","Accessing a Workflow from a Database Environment","Additional Implementation Details"],"p":["This patent application is a continuation-in-part of the copending and commonly assigned U.S. patent application, Ser. No. 09\/968,353, filed on Sep. 28, 2001, which patent application is incorporated herein by reference in its entirety.","1. Field of the Invention","The present invention relates to a method, system, and program for generating a program capable of invoking a flow of operations","2. Description of the Related Art","A workflow program allows businesses and other organizations to define their business operations as a computer model known as a workflow. A workflow defines a series of processes to be performed by users at a client computer. The user activities at the client computers may involve updating an electronic form, reviewing information, etc. After one user in the workflow performs a specified action, the work item or other information is then routed to one or more further nodes where further action may be taken. For instance, an on-line purchase of a product may involve numerous steps, such as receiving the customer order, routing the customer order to the credit department to process the bill and then routing the order to the shipment department to prepare the shipment. Once the shipment is prepared, the product may be shipped and information on the purchase is then transferred to the customer service department to take any further action. Each of these processes may be defined as nodes in a workflow. A workflow program would then route the customer order to the business agents designated to handle the job. For instance, the initial order would be received by the order department and then routed to a person in shipping and billing. Once the bill and package are prepared, a further invoice may be forwarded to shipping. After shipping sends the package, the shipping agent may then enter information into the invoice and forward the electronic invoice to customer service for any follow up action.","A workflow is designed using workflow software, such as the International Business Machines (IBM) MQSeries Workflow software product. There is a need in the art to develop techniques to utilize workflow technologies with different computing platforms.","Provided are a method, system, and program for generating a program capable of invoking a flow of operations, wherein the program is capable of being initiated from an external call. A definition file defining a flow of operations and mapping information defining input parameters to the flow of operations are received. The received definition file and mapping information are processed to generate program statements within the program that when executed perform: setting input parameters to the flow of operations to values received from an external call to the program; invoking the flow of operations with the input parameters including values from the external call; and receiving output from the flow of operations and extracting at least one value from the received output to return to the external call.","In further implementations, the flow of operations comprises a workflow, wherein the mapping information indicates methods used to set and retrieve input parameters to the workflow and information on output returned from the workflow.","In yet further implementations, the mapping information includes information to map values received from the database program of a database data type to the input parameters to the flow of operations in a flow data type used by the flow of operations, and to map values in the flow data type received from the flow of operations to the database data type to return to the database program.","Further provided are a method, system, and program for invoking a workflow. A call is received from a database program to invoke a workflow. The workflow is invoked in response to the call. Output from the workflow is received and returned to the database program.","In further implementations, the received call includes input parameters, wherein the workflow is invoked with workflow parameters including input parameters included with the call.","Yet further, the received call includes input parameters, wherein the workflow is invoked with workflow parameters including input parameters included with the call.","Described implementations provide techniques to enable workflow operations to be invoked from a database program.","In the following description, reference is made to the accompanying drawings which form a part hereof and which illustrate several embodiments of the present invention. It is understood that other embodiments may be utilized and structural and operational changes may be made without departing from the scope of the present invention.","The nature of Web services make them natural components in a service-oriented architecture. A typical service-oriented architecture is shown in . Service providers  host a network accessible software module. A service provider defines a service description for a Web service and publishes it to a service registry , as depicted by arrow . A service requester  at a client computer uses a find operation, represented by arrow , to retrieve the service description from the registry  and uses the service description to bind with the service provider, as represented by connector , and to invoke or interact with the Web service implementation. To facilitate this architecture, the client is connected to a router (not shown) at the service provider's server. Preferably, the connection between the client computer and the router is established via the Internet, but other connections can be used. It can be appreciated that the client computer connects to the Internet via telephone modem, cable modem, LAN, WAN, T1 or any other means well known in the art.","Applying the preceding model to web services and referring to , a service provider  makes an application available over the web as a Web service by wrapping the application in such a way that it can be accessed using standard XML messages, i.e., application-specific messages  are sent in standard XML document formats conforming to the corresponding service description. The XML messages  are themselves placed in a wrapper  in such a way that masks the underlying transport protocol. For example, an application message is placed in an XML wrapper by an XML extender administrative servlet (DXX admin servlet, not shown) included in the router at the service provider's database . XML messages  are then wrapped in Simple Object Access Protocol (SOAP) envelopes  at SOAP server  and posted to the web via HTTP server .","The DXX admin servlet configures at least one DXX invoker, which in turn can access at least one document access definition extension (DADx) file. The DADx file, in turn, can access one or more document access definition (DAD) files.","DXX is a collection of stored procedures, user defined types (UDTs), and user defined functions (UDFs) that are typically used in programs written in SQL, Java, C++, and other languages. The DXX invoker handles universal resource locators (URLs) having the extensions \u201c.dadx\u201d that reference web services and \u201c.dtd\u201d that reference document type definition (DTD) documents. Specifically, the DXX invoker provides runtime support for invoking DADx documents as web services written, e.g., in Apache Simple Object Access Protocol (SOAP). The servlet of the router connects to a database at invocation times. Preferably, this connection is established by a Java database connection (JDBC).","In one possible embodiment, the DXX Invoker, a Java component, interfaces with Apache SOAP 2.1 runtime using a pluggable provider support. A web application developer creates an instance of the DXX Invoker for each database that is to be accessed. Each instance of the DXX Invoker is associated with a database connection and a set of DADx files. The DXX Admin servlet is provided to simplify the task of creating instances of the DXX Invoker. Specifically, the DXX Admin servlet provides a web user interface for configuring instances of the DXX Invoker. Someone, e.g., a database administrator, sets up the databases and enables them for use by DXX. The service provider creates DAD and DADx documents and deploys them to the web application. Each DADx document is associated with a URL that identifies a specific web service.","SOAP is an application invocation protocol developed by IBM, Microsoft, and others that defines a simple protocol for exchanging information encoded as XML messages . SOAP is in the process of being more formally specified by the World Wide Web Consortium (W3C) as XML Protocol. The beauty of SOAP is that it makes no assumptions on the implementation of the endpoints. This means that a service requester  needs only to create an XML request, send it to a service provider , and understand the XML response that comes back.","A SOAP request  consists of the envelope itself, which contains the namespaces used by the rest of the SOAP message, an optional header, and the body, which may be a remote procedure call (RPC) or an XML document. SOAP builds on existing Internet standards such as HTTP and XML, but can be used with any network protocol, programming language, or data encoding model. For example, it is possible to send SOAP messages over IBM MQSeries\u00ae, FTP or even as mail messages.","The logical interface and the service implementation are described by the Web Services Description Language (WSDL). WSDL is an XML vocabulary used to automate the details involved in communicating between Web services applications. There are three pieces to WSDL: a data type description (XML schema), an interface description, and binding information. The interface description is typically used at development time and the binding information may be used at either development or execution time to actually invoke a particular service at the specified location. The service description is key to making the Web services architecture loosely coupled and reducing the amount of required shared understanding and custom programming between service providers and service requesters. As previously noted, the WSDL description is stored in a WSDL document. This WSDL document may be stored in numerous ways; in a file, in a DB2 XML Registry\/Repository, or in a DB2 based UDDI Registry.","Referring back to , the service can be publicized by being registered in a standard-format service registry . This registry makes it possible for other people or applications to find and use the service. For example, one can publish descriptive information, such as taxonomy, ownership, business name, business type and so on, via a registry that adheres to the Uniform Description, Discovery and Integration (UDDI) specification or into some other XML registry. The UDDI information can include a pointer to WSDL interfaces, the binding information, and a business name (the name that makes the purpose of the Web service understandable to humans). A UDDI registry is searchable by programs, enabling a service requester to bind to a UDDI provider to find out more information about a service before actually using it.","The ability to compose Web services together is provided, for example, by Web Services Flow Language (WSFL), another specification defined by IBM and others. WSFL can be used to describe a business process (that is, an execution flow from beginning to end), or a description of overall interactions between varying Web services with no specified sequence. It is more fully described in the WSDL V1.0 specification available at http:\/\/www-4.ibm.com\/software\/solutions\/webservices\/pdf\/WSFL.pdf, (Referenced as Appendix C) appended hereto and incorporated herein by reference. The mechanism for creating a WSFL description is described in an article at http:\/\/www-106.ibm.com\/developerworks\/webservices\/library\/ws-ref4\/, (Referenced as Appendix D) appended hereto and incorporated by reference.","Looking at how all of these specifications work together, a Web service can be defined as a modular application that can be:\n\n","Access to Web services may be restricted much as one would restrict access to Web sites that are not available to everyone. For example, IBM WebSphere\u00ae provides many options for controlling access and for authentication. The standards for this are still emerging. Microsoft and IBM have proposed a SOAP security extension to the W3C as the mechanism for XML digital signatures. The SOAP security extension included with WebSphere Application Server 4.0 is intended to be a security architecture based on the SOAP Security specification, and on widely-accepted security technologies such as secure socket layer (SSL). When using HTTP as the transport mechanism, there are different ways to combine HTTP basic authentication, SSL, and SOAP signatures to handle varying needs of security and authentication.","IBM is enabling its key programming models and application servers with Web services and is providing and developing tools to automatically generate Web services from existing artifacts such as Java Beans, EJBs, and stored procedures. The following types of web service operations are provided: XML-based query or storage, wherein an XML document is decomposed for storage in DB2 relational tables and composed again on retrieval; and SQL-based operations, such as calling stored procedures, or inserting, updating, deleting DB2 data.","XML-based query: Referring now to , XML-based querying permits composition of XML documents  from relational data stored in tables  of a database . One may also break an XML document  down into its component parts and store it into relational tables  of the database . Part of the underlying support for this functionality is provided by DB2 XML Extender. The store and retrieve operations are handled by special stored procedures that are shipped with DB2 XML Extender.","One of the inputs into both storage and retrieval is the user-specified mapping file  that creates the association between relational data and XML document structure. This mapping file  is called a Document Access Definition (DAD)  and provides a way to create an XML document  and specify the XML elements, attributes and shape desired. The focus of this approach is in moving and manipulating XML documents. SQL-based query: Referring now to , SQL-based querying is simply the ability to send SQL statements, including stored procedure calls, to the database  and to return results with a default tagging .","The focus of this approach is actually the data in and out of the database , not on shaping the results in a particular way. SQL-based query does not require the use of an XML Extender because there is no user-defined mapping of SQL data to XML elements and attributes. Instead, the data is returned using only a simple mapping of SQL data types, using column names as elements.","However, if one is using DB2 XML Extender to store XML documents within a single column of a table, one may use SQL-based queries to retrieve those documents intact as a character large object (CLOB), or to invoke the user-defined functions that extract parts of the document. Another feature of DB2 XML Extender is the ability to store frequently-accessed data in side tables, thereby enabling speedy searches on XML documents that are stored in columns.","Another useful thing one may do with SQL-based query is to invoke DB2 stored procedures. Stored procedures are natural for conversion to Web services since they are themselves an encapsulation of programming logic and database access. A Web service invocation of a stored procedure makes it possible to dynamically provide input parameters and to retrieve results.","Both the XML-based and SQL-based forms of querying are controlled by the DADX, a configuration file shown in . The DADX configuration file defines the operations that can be performed by the Web service. For example, one might have a DADX file that specifies the operations to find all orders for parts, find all orders for parts with a particular color, and orders for parts that are above a certain specified price. The color or price can be specified at runtime as input parameters by using host-variable style notation in the query.","Use of DADX or similar mechanisms has enabled the development of a tool that automatically generates the WSDL description of the interfaces and publishes the interfaces to a UDDI registry or some other service directory. The tool also generates the artifacts needed to deploy the Web service into a web development tool such as WebSphere, and the client proxies that may be utilized for testing and as a basis for building the client part of one's Web application.","To help with the configuration task, a database connection configuration servlet is also provided. This servlet provides a Web-based interface to guide a user through the task of configuring database connections. One may have many DADX files that use the same database configuration.","A database both manages data and provides intelligent access to it. Optimized queries, complex analysis, and efficient execution of business logic may all be provided by the database engine. The database can be viewed as an efficient and powerful set-oriented execution engine that typically works on locally managed data. Indeed, the set-oriented processing of DB2 can be used to operate on more than just locally managed data. DB2 Relational Connect allows remote, heterogeneous relational databases to be treated as local resources. DB2 also provides features built-in to SQL that enable external applications and systems to be manipulated in a set-oriented manner.","According to the present invention, a database can invoke a web service by representing the remote web service as a virtual table or function residing on the database. The virtual table may then be manipulated within an SQL statement. The mechanisms proposed for representing the remote web service according to the preferred embodiment are a user-defined function (UDF) contained within an SQL statement, a stored procedures (SP) containing calls or SQL statements to invoke the web service, or a wrapper created around the web service and providing the machinery for communicating with the external web service.","User defined functions (UDFs) are a powerful SQL mechanism enabling users to define new operators to SQL that return either a single value or that return a tabular value. This UDF mechanism may be used to invoke external applications and to return virtual tables of data back to DB2.",{"@attributes":{"id":"p-0056","num":"0061"},"figref":["FIG. 7","FIG. 7"],"b":["71","73","77","71","73","75","77","71"],"ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":{"@attributes":{"id":"ul0003-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0004","list-style":"none"},"li":"ex 1: string GET_PO_STATUS(string URL, string PO_NUM)"}}}},"The preceding function is implemented as a very simple Web service by the suppliers  according to emerging web service protocols. Implementing the function as a Web service allows it to be easily invoked by a wide variety of clients. The invoking application may execute, for example, on a Unix-based system, a laptop, a mainframe, a browser or a Java application . However, according to the present invention the manufacturer  preferably invokes the application from within its database . Invocation is accomplished from a DB2 database with a user-defined function (UDF)  having the following signature:\n\n","Here the return value is the PO status and the input parameters are the URL to which the request is to be sent and the identity of the purchase order whose status is of interest. To find the status of a specific purchase order, e.g., \u201c12345\u201d, at a supplier  that offers this service at http:\/\/www.Asupplier.com\/GET_PO_STATUS, the following SQL statement is issued:\n\n","Now assume that the manufacturer  has a table  filled with outstanding purchase orders and another  containing information about the web service operations each supplier offers. Such tables might look like:",{"@attributes":{"id":"p-0060","num":"0068"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"PURCHASE_ORDERS"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Customer","Supplier","PO_NUM","O_NUM"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},"C1","ASupplier","12345","a456"]},{"entry":[{},"C1","BSupplier","12347","b456"]},{"entry":[{},"C3","BSupplier","34656","d435"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0061","num":"0069"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"SUPPLIER_OPS"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Supplier","Operation","URL"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["ASupplier","GET_PO_STATUS","http:\/\/www.Asupplier.com\/GET_PO_STATUS"]},{"entry":["ASupplier","GET_QUOTE","http:\/\/www.Asupplier.com\/GET_QUOTE"]},{"entry":["Bsupplier","GET_QUOTE","http:\/\/www.Bsupplier.com\/services\/GET_QUOTE"]},{"entry":["BSupplier","GET_PO_STATUS","http:\/\/www.Bsupplier.com\/services\/GET_PO_STATUS"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"To find out the status of outstanding purchase orders from ASupplier for all of the manufacturer's customers, the following SQL is issued:\n\n","In the forgoing example, the address of the service to be invoked is explicitly stated. It is more likely that the manufacturer  would like to find the status of all outstanding purchase orders from all suppliers  offering a web service interface. This is achieved by replacing the web address with a parameter, e.g.:\n\n","Alternatively, one may query the UDDI or other registry directly rather than having to maintain a Supplier_Ops table. For example, the UDDI can be browsed for web services that satisfy the required information, and those web services of interest may be incorporated into the select statement. Or, the manufacturer  may require suppliers  to name their web services with a pre-determined name and then query the registry for the name directly in the query.","A further aspect of the invention, described subsequently, a tool may be used to automatically generate a user-defined function from the WSDL definition of a web service for use in the SQL query.","For convenience, the query of example 5, above may be represented as an output table or \u201cview\u201d to provide a simpler interface:\n\n","This query may be extended to exploit features of SQL. For instance, to sort the result by supplier and purchase order status one simply appends an order by clause such as:\n\n","All the examples so far show how a web service that returns a single value can be integrated with DB2 SQL, but how are multiple return values handled? Assume that the manufacturing company , excited by the power of such a simple Web service as GET_PO_STATUS, now convinces its suppliers  to implement a service to respond to quotation requests (RFQs). This RFQ Web service would have the following signature:",{"@attributes":{"id":"p-0069","num":"0088"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]},{"entry":[{},"RFQ"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Inputs","part_num","qty","desired_date"]},{"entry":[{},{},"string","iInteger","date"]},{"entry":[{},"Outputs","price","proposed_date"]},{"entry":[{},{},"decimal","date"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}]}},"ul":{"@attributes":{"id":"ul0020","list-style":"none"},"li":{"@attributes":{"id":"ul0020-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0021","list-style":"none"},"li":"ex 9: RFQ inputs: String part_num, Integer qty, Date desired_delivery_date outputs: Decimal price, Date proposed_delivery_date"}}}},"This service may be made accessible to DB2 by turning it into a DB2 Table Function, i.e., by creating a virtual table representative of the web service. Other relational database products may provide similar mechanisms for creating a virtual table. The DB2 Table function has the following parameters:",{"@attributes":{"id":"p-0071","num":"0091"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"329pt","align":"left"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"GET"},{"entry":"Quote"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"7","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"8","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"9","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Inputs","supplier","URL","part_num","qty","desired_date",{},{},{}]},{"entry":[{},"varchar(30)","varchar(80)","varchar(20)","iInteger","date"]},{"entry":["Outputs","supplier","URL","part_num","qty","desired_date","price","currency","proposed"]},{"entry":[{},"varchar(30)","varchar(80)","varchar(20)","iInteger","date","decimal","varchar","date"]},{"entry":[{},{},{},{},{},{},{},"(10)","date"]},{"entry":{"@attributes":{"namest":"1","nameend":"9","align":"center","rowsep":"1"}}}]}}]}}},"To provide more meaningful context, the table function includes as outputs all of the interesting input parameters. The Get_Quote table function is invoked inside of a query such as:\n\n","This statement will return back a table containing a single row with the response from this supplier. But what if the manufacturing company  dealt with suppliers in other countries? The Get_Quote function contains the currency units, so it would be an easily matter to convert the price to dollars. Now to perform the conversion one could, of course, try to manually maintain a table of currency conversion data\u2014but given the volatile nature of foreign exchange, it would be better to invoke another Web service, perhaps provided by a foreign exchange trading firm, to perform this conversion for us using up to the minute information. The DB2 function to invoke this service will be:\n\n","Using this additional service, one may obtain a more accurate quote using a query such as:\n\n","In the preceding example the columns have been explicitly stated and, using the power of SQL, an output column named timeliness has been defined to reflect the deviation between the manufacturer's desired date and the date proposed by the supplier  for the part. The currency conversion web service, to_dollars, has been utilized to convert the quoted price to U.S. currency. This query will return a single row with the quote from a single vendor for a single part. What if the manufacturer  had a list of needed parts that it wished to get quotes on? A table called NEEDED_PARTS is defined for this purpose:",{"@attributes":{"id":"p-0076","num":"0099"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"NEEDED_PARTS"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"part_num","qty","desired_date"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"\u200234dsaf","20","7\/1\/2001"]},{"entry":[{},"\u200235gfds","34","8\/1\/2001"]},{"entry":[{},"809gds","10","6\/30\/2001"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}}},"Now to get quotes on all of these parts from ASupplier, the following SQL is issued:\n\n","This query returns a table of quotes for each part listed in the NEEDED_PARTS table from Asupplier. But what the manufacturer  wanted to get quotes for each of its suppliers? To do so, the following query is issued:\n\n","So the above query generates quotes for all the needed parts from all the suppliers that offer the GET_QUOTE Web service and returns a table of these quotes ordered by part number and timeliness. Very powerful, yet simple, standard DB2 SQL.","Finally, the manufacturer  may want to expose this query as a Web service itself so that its purchasing agents can invoke the query from wherever they are as long as they have access to the internet. DB2 7.2 with the XML Extender provides a simple mechanism that allows Web services to be created in support of such queries. The extender allows stored procedures and SQL statements to be exposed as invokable Web service operations, as is described more fully in http:\/\/www.ibm.com\/software\/data\/db2\/extenders\/xmlext, (Referenced as Appendix E) appended hereto and incorporated by reference herein. Any catalogued stored procedure may be exposed. The operation signature includes the input and output parameters and will also return one or more stored procedure result sets as an XML document.","To summarize, the preceding example illustrates how Web services may be integrated into DB2 SQL as User Defined Functions. Once Web services can be invoked as UDFs one can leverage the full power of SQL to perform queries across combinations of Web services and persistent data.","Additional invocation mechanisms available for integrating a web service into a database are described below.","In a third specific embodiment, the mechanism for invoking a web service is a stored procedure. Stored procedures are well-known in the art of relational databases. A stored procedure is invoked by a call, e.g., from a database client, e.g., a command line processor, a JDBC client, another stored procedure, a static c program or embedded SQL application. The stored procedure invokes a web service with, for example, an embedded java class or an SQL statement containing an invocation of the service, e.g., through a UDF or table function, or through any of a number of common client interfaces to web services known to those skilled in the art. For example, creation of Java classes to invoke web services is described in the IBM web services toolkit.","In a fourth specific embodiment, the mechanism for invoking a web service comprises a trigger. Triggers are well-known in the art of relational databases. A trigger is invoked by a triggering event, e.g., a table state change such as inserting a row into a table. The trigger invokes the web service with a call to the web service, or an SQL statement containing an invocation of the service, e.g., through a UDF or table function.","In a fifth specific embodiment, the mechanism comprises a federated table accessed via a nickname and implemented using a wrapper. Such federated tables are known to those skilled in the art of federated databases. The federated table looks like a local table to the database. The wrapper, e.g., a DB2 Relational Connect wrapper, provides the machinery for invoking the external service and receiving the response back.","As a further aspect of the invention, a unique tool is provided for generating user defined functions (UDFs) from web services defined by the WSDL (Web Services Definition Language) notation. These UDFs may then be invoked through standard SQL statements. Used in conjunction with UDDI and the XML Registry\/Repository, this means that a user may easily locate useful web services using UDDI, retrieve descriptions of these web services using UDDI and\/or XRR and then extend a database with access to these web services by using this tool to generate UDFs.","The steps preformed by the UDF generator are described below, with reference to . A user browses a UDDI or other registry for a desired web service, e.g., a web service that will return the current exchange rate to US dollars from a given currency. This step is represented as step a) in  and may be executed, for example, using an XML query wrapped as a SOAP request. The web service description is returned, for example, as an XML document.","The user then issues a query to XRR or UDDI to find the name of the WSDL file that implements this web service, as shown in  by step b). The contents of the WSDL file of the present example are:",{"@attributes":{"id":"p-0089","num":"0117"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?xml version = \u201c1.0\u201d?>"]},{"entry":[{},"<definitions name = \u201cCurrencyExchangeService\u201d targetNamespace ="]},{"entry":[{},"\u201chttp:\/\/www.xmethods.net\/sd\/CurrencyExchangeService.wsd1\u201d"]},{"entry":[{},"xmlns:tns=\u201chttp:\/\/www.xmethods.net\/sd\/CurrencyExchangeService.wsd1\u201d"]},{"entry":[{},"xmlns:xsd = \u201chttp:\/\/www.w3.org\/2001\/XMLSchema\u201d xmlns:soap ="]},{"entry":[{},"\u201chttp:\/\/schemas.xmlsoap.org\/wsd1\/soap\/\u201d xmlns ="]},{"entry":[{},"\u201chttp:\/\/schemas.xmlsoap.org\/wsd1\/\u201d>"]},{"entry":[{},"<message name = \u201cgetRateRequest\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<part name = \u201ccountry1\u201d type = \u201cxsd:string\u201d\/>"]},{"entry":[{},"<part name = \u201ccountry2\u201d type = \u201cxsd:string\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/message>"]},{"entry":[{},"<message name = \u201cgetRateResponse\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<part name = \u201cResult\u201d type = \u201cxsd:float\u201d\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/message>"]},{"entry":[{},"<portType name = \u201cCurrencyExchangePortType\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<operation name = \u201cgetRate\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<input message = \u201ctns:getRateRequest\u201d \/>"]},{"entry":[{},"<output message = \u201ctns:getRateResponse\u201d \/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/operation>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/portType>"]},{"entry":[{},"<binding name = \u201cCurrencyExchangeBinding\u201d type ="]},{"entry":[{},"\u201ctns:CurrencyExchangePortType\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<soap:binding style = \u201crpc\u201d transport ="]},{"entry":[{},"\u201chttp:\/\/schemas.xmlsoap.org\/soap\/http\u201d\/>"]},{"entry":[{},"<operation name = \u201cgetRate\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<soap:operation soapAction=\u201c\u201d\/>"]},{"entry":[{},"<input>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<soap:body use = \u201cencoded\u201d namespace = \u201curn:xmethods-"]},{"entry":[{},"CurrencyExchange\u201d encodingStyle ="]},{"entry":[{},"\u201chttp:\/\/schemas.xmlsoap.org\/soap\/encoding\/\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/input>"]},{"entry":[{},"<output>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<soap:body use = \u201cencoded\u201d namespace = \u201curn:xmethods-"]},{"entry":[{},"CurrencyExchange\u201d encodingStyle ="]},{"entry":[{},"\u201chttp:\/\/schemas.xmlsoap.org\/soap\/encoding\/\u201d\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/output>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/operation>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/binding>"]},{"entry":[{},"<service name = \u201cCurrencyExchangeService\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<documentation>Returns the exchange rate between the two"]},{"entry":[{},"currencies<\/documentation>"]},{"entry":[{},"<port name = \u201cCurrencyExchangePort\u201d binding ="]},{"entry":[{},"\u201ctns:CurrencyExchangeBinding\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<soap:address location = \u201chttp:\/\/services.xmethods.net:80\/soap\u201d\/>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/port>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/service>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/definitions>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"A simple form of the command is executed with the following:\n\n","This command will result in an SQL script file called CurrencyExchangeService.SQL that contains the definition and implementation of a user-defined function to invoke the currency exchange web service.","Optionally, the user may then query the UDDI or other repository to determine all suppliers who offer the identified web service, as shown in step a) of . For example, the user may issue an SQL query to the remote UDDI and receive tuples containing information about the suppliers. As represented by the forward arrow in step b) of , the UDF may then be invoked within standard SQL statements such as the following:\n\n","In addition to creating scalar functions such as above, one may also create table functions where the invocation of the web service yields a table of one or more rows, as represented by the backward arrow in step b) of . For instance, assume that there is a web service that returns status about commercial flights. Using the UDF generating tool one may generate a table function getFlightInfo that returns a table containing the airline, flight number, location, speed, altitude and equipment. The following query illustrates how this may be used:\n\n","Of course, once a table function is created, it may be utilized in a variety of ways. For instance, one may return the status of a set of flights, combine this information from other tables and web services, and store information about this flight in a table.","The constructed UDFs make use of general Web Service invocation functions. A general function to invoke HTTP based Web Services, soaphttp, accepts as input parameters the URL of the web service provider, the name of the web service and the name of the particular operation or method to be performed in addition to a string containing the input parameters. The function returns the a single string containing the result of the invocation.","The following example shows an invocation of a very simple web service that accepts a single input parameter (country) and returns a single output parameter.","Values soaphttp(\u2018http:\/\/services.xmethods.net:80\/soap\u2019, \u2018urn:xmethods-CurrencyExchange\u2019, \u2018getRate\u2019, \u2018UK\u2019)","Most web services are more complex with multiple input and output parameters, often with complex structures. The web service UDF generator creates the code to construct the input parameters and parse the result into one or more values.","In the examples above, the tool is shown to create UDFs that invoke the web service from a particular provider. Often, a web service will be defined such that it may be implemented by multiple providers. For instance if a company worked with its suppliers to develop a standard web service interfaces to get the order status of outstanding orders, one might want to invoke the same UDF implementing the web service request against many different web service providers, perhaps even in the same statement. The tool currently allows you to specify that a UDF be generated to support this by allowing an additional parameter containing the location of the service provider to be passed at execution time. For example, if we had a table containing the names of suppliers and the URL of the po_status web service they implement then we could issue the following query:\n\n","This query invokes the po_status web service for each row in the purchase orders table sending each request to the appropriate supplier service.",{"@attributes":{"id":"p-0101","num":"0134"},"figref":"FIG. 10","b":["81","82","83","84","85","86","87","88","89","91","92","93","94","95","96","97"]},"Further implementations provide techniques for enabling a workflow to be invoked from a database process that is invoked in response to a database event, such as a database trigger or database query. A workflow comprises a series of pre-defined tasks that are executed based on certain conditions. A workflow program allows businesses and other organizations to define their business operations as a computer model known as a workflow. A workflow may define a series of processes to be performed by users at a client computer. The user activities at the client computers may involve updating an electronic form, reviewing information, etc. After one user in the workflow performs a specified action, the work item or other information is then routed to one or more further nodes where further action may be taken.","A workflow is designed using workflow software, such as the International Business Machines (IBM) Process Choreography Beans (\u201cIBM PC Beans\u201d), MQSeries Workflow, etc. A workflow may be defined using a Worfklow Definition Language (WDL), such as the Flow Definition Markup Language (FDML) that provides a programming language whose statements are coded in an XML file to define a workflow. A workflow defined by an FDML file may be implemented as Java classes or through another programming language. The workflow model is imported into a runtime program that verifies and translates the workflow model into a process template. An instance of the process template can then be invoked to automate the sequence of events defined by the model.",{"@attributes":{"id":"p-0104","num":"0137"},"figref":["FIG. 11","FIG. 12"],"b":["200","202","204","206","208","208","208","208","208","208","210","210","212","214","214","244","218","212","212","212","212","218","220","220","220","220","220","220"],"i":["a","b ","n ","a","b ","n ","a","b ","n","a","b ","n "]},"The workflow server  coordinates and manages the execution of processes for a defined process template . The workflow server  executes any programs associated with a process defined for the workflow, interprets the process definitions, creates process instances and manages their execution, manages processes and states, logs events, communicates with users as part of the workflow, etc. The workflow server  may include a database client program (not shown) to access and update records related to the workflow being processed maintained in the runtime database . The workflow engine , UDFs , . . . , SQL program , DBMS , and database tables  may be distributed across multiple computers to achieve workload balancing.","A database trigger, invoked in response to a database event, or an SQL program  (such as a user written application invoked by a user or scheduled to execute at a specific time) may call a UDF , . . . to invoke a workflow , . . . within the workflow engine . This may occur in response to a database event or on an ad hoc basis. Multiple UDFs , . . . may be capable of invoking different workflow operations , . . . . The UDFs , . . . would further map input parameters passed by the SQL program  call to the UDF to input data to pass to the workflow engine  when invoking a particular workflow , . . . . For instance, in implementations where workflows , . . . are invoked through Java functions, the UDF , . . . would have to generate a Java object to pass with the Java function to invoke the workflow , . . . . This requires the UDF , . . . to translate the input parameters from the SQL program  comprising database data types to the input format of the workflow command, which may comprise a Java object.",{"@attributes":{"id":"p-0107","num":"0140"},"figref":["FIG. 12","FIG. 12","FIG. 11"],"b":["208","208","208","202","220","220","220","240","242","240","244","246","208","208","208","244","244","218","240","248","202","248"],"i":["a","b ","n ","a","b ","n ","a","b ","n "]},{"@attributes":{"id":"p-0108","num":"0141"},"figref":"FIG. 13","b":["246","260","262","260","210","262","220","220","220","208","208","208","202"],"i":["a","b ","n ","a","b ","n "]},{"@attributes":{"id":"p-0109","num":"0142"},"figref":"FIG. 14","b":["260","260","210","220","220","220","240","280","208","208","208","282","282","280","260","220","220","220","204","220","220","220"],"i":["a","b ","n ","a","b ","n","a","b ","n ","a","b ","n"]},"The flow section  of the mapping information  provides information on the workflow(s) that will be invoked from the UDF , . . . being generated.  illustrates the content of the flow section , which includes:\n\n",{"@attributes":{"id":"p-0111","num":"0148"},"figref":["FIG. 16","FIG. 12","FIG. 15","FIG. 12","FIG. 13"],"b":["240","248","208","208","208","300","244","246","248","240","302","262","290","240","306","244","290","306","244","220","220","20","260","308","202","240","310","202","208","208","208","220","220","220","312","248","202"],"i":["a","b ","n","a","b ","n ","a","b ","n","a","b ","n "]},"The function generator  further processes (at block ) the flow section to determine any return values ,  (if any). If (at block ) the type of the called workflow function in the function definition  is \u201cspawn\u201d, then no values are returned and the function generator  generates (at block ) a statement to return confirmation to the SQL program  that the flow request was received. In certain situations, a flow may execute asynchronously over a long period of time. For such flows, the workflow engine will asynchronously inform the calling UDF that the call was received, and the caller will not have to wait until the flow is completed. Otherwise, the function generator  generates (at block ) code in UDF to extract return value\/values from the class structure of the workflow's output. For instance, if the return data is of type \u201cscalar\u201d as indicated in the function field , then a single value is returned. If the type is \u201ctable\u201d, then a table is returned, and the function generator  will have to generate code in the UDF source file  to get the number of rows to return as indicated in the rows field . Code is further generated (at block ) into the UDF file  to return any extracted value\/values to the calling SQL program . After generating all the necessary code in the UDF file  to set values in an input object, invoke the workflow with the set input object, and extract any return values to return to the calling SQL program , the UDF source file  is returned (at block ). The function generator  further generates an executable script file  that includes statements to register object oriented classes with the DBMS  that enable the SQL program  to call the UDFs , . . . ","An executable UDF , . . . may be compiled from the generated UDF source file . The SQL program  may then call the executable UDFs , . . . to cause the invocation of the external workflow , . . . for which the UDF , . . . is defined.  illustrates logic implemented by executing the UDFs , . . . to invoke a workflow , . . . in response to a call (at block ) from the SQL program . As discussed, the SQL program  may make the call to the UDF , . . . in response to a database event, such as a database trigger. Further, the executable script  would have been executed within the DBMS  to load any requisite classes to allow the SQL program  to call UDF , . . . functions. The UDF , . . . statements are executed to set (at block ) values within the object(s) to pass to the invoked workflow , . . . that include parameters passed with the call from the SQL program . The executed statements within the UDF , . . . would then invoke (at block ) the workflow , . . . by transmitting a workflow function call to the workflow engine  with the input object including values set from parameters received from the SQL program . Upon receiving (at block ) a response from the workflow, the UDF , . . . would process (at block ) the returned output to extract any value(s) returned from the workflow and return (at block ) extracted value(s) or other information to the SQL program  that called the UDF , . . . ","The described implementations provide a technique by which a database administrator can generate a UDF source file  whose executable form , . . . is callable from a database program, such as SQL program , by providing a mapping information  and a workflow description file . In this way, the database administrator does not have to manually code UDFs. The executable UDFs compiled from the UDF source file  generated in the manner described herein may then be called from within an SQL program to enable the SQL program to invoke workflows to extend the operations that may be set in motion in response to a database event.","The described techniques for generating a program capable of invoking a workflow may be implemented as a method, apparatus or article of manufacture using standard programming and\/or engineering techniques to produce software, firmware, hardware, or any combination thereof. The term \u201carticle of manufacture\u201d as used herein refers to code or logic implemented in hardware logic (e.g., an integrated circuit chip, Programmable Gate Array (PGA), Application Specific Integrated Circuit (ASIC), etc.) or a computer readable medium, such as magnetic storage medium (e.g., hard disk drives, floppy disks, tape, etc.), optical storage (CD-ROMs, optical disks, etc.), volatile and non-volatile memory devices (e.g., EEPROMs, ROMs, PROMs, RAMs, DRAMs, SRAMs, firmware, programmable logic, etc.). Code in the computer readable medium is accessed and executed by a processor complex. The code in which preferred embodiments are implemented may further be accessible through a transmission media or from a file server over a network. In such cases, the article of manufacture in which the code is implemented may comprise a transmission media, such as a network transmission line, wireless transmission media, signals propagating through space, radio waves, infrared signals, etc. Thus, the \u201carticle of manufacture\u201d may comprise the medium in which the code is embodied. Additionally, the \u201carticle of manufacture\u201d may comprise a combination of hardware and software components in which the code is embodied, processed, and executed. Of course, those skilled in the art will recognize that many modifications may be made to this configuration without departing from the scope of the present invention, and that the article of manufacture may comprise any information bearing medium known in the art.","The workflow client and server may be implemented within any vendor workflow program known in the art.","In the described implementations, certain statements were described as implemented using the Java programming language. Alternatively, any programming language known in the art may be used to code any of the described program components.","In the described implementations, the generated UDFs were described as invoking one or more workflows within a workflow engine. The workflow generated may perform any type of operation, including internal business operations that involve the transmission of additional communications, via emails, facsimiles, phone calls with electronic voice messages, printer output sent via mail, etc. Further the workflows may cause any type of operation to initiate, whether such operation involves additional entry of data into a database. The invoked operations may invoke automated manufacturing or other machine operations.","In certain described implementations, the mapping information provided to the function generator is used to generate a UDF capable of invoking a workflow. In alternative implementations, the UDF may be generated to invoke external operations other than workflows, such as Web Services or other flow of operations.","The mapping information was described as including a specific format, having a mapping section and flow section, each with specific components. In alternative implementations, the mapping information may be arranged in a data structure format different than that of the mapping information . Further, additional or different information may be included with the mapping information than described above.","In the described implementations, the UDFs were invoked by an SQL program. In alternative implementations, the UDFs may be invoked by applications other than a database application.","The illustrated logic of , , and  show certain events occurring in a certain order. In alternative implementations, certain operations may be performed in a different order, modified or removed. Morever, steps may be added to the above described logic and still conform to the described implementations. Further, operations described herein may occur sequentially or certain operations may be processed in parallel. Yet further, operations may be performed by a single processing unit or by distributed processing units.",{"@attributes":{"id":"p-0123","num":"0160"},"figref":"FIG. 18","b":["400","400","402","404","406","406","406","404","402","408","410","402","412","402"]},"The foregoing description of various implementations of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description, but rather by the claims appended hereto. The above specification, examples and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention, the invention resides in the claims hereinafter appended."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Referring now to the drawings in which like reference numbers represent corresponding parts throughout:",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIGS. 11 and 12"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIGS. 13","b":["14","15"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 18"}]},"DETDESC":[{},{}]}
