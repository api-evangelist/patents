---
title: Network processor with traffic shaping response bus interface
abstract: An integrated circuit is disclosed. The integrated circuit includes a receive port interface to receive request data at a first data rate from a first host and a transmit port interface. The transmit port interface to transmit response data words across plural serial lanes to a second host at a second data rate. The second data rate is less than a predefined line rate of symbol transfers across the plural serial lanes. The transmit port interface includes shaping logic to transmit a data word stream at the second data rate and selectively insert idle words into the data word stream such that the data words and the idle words are together transferred at the predefined line rate.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08848526&OS=08848526&RS=08848526
owner: NetLogic Microsystems, Inc.
number: 08848526
owner_city: Irvine
owner_country: US
publication_date: 20110224
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF RELATED ART","DETAILED DESCRIPTION"],"p":["This disclosure relates generally to network processor interfaces, and more particularly to methods and associated apparatus for controlling data rates across a transmit interface through programmable idle insertion operations.","Network processors are employed in a variety of applications to manage traffic within network devices such as switches and\/or routers. Data traffic typically flows between interconnected processors via request (receive) and response (transmit) interfaces. Each processor typically includes core circuitry that operates at a core rate to process requests and responses and sufficient buffer circuitry to temporarily store data received via various transfer rates.","A problem often encountered by network processors involves peak data reception and\/or transfer, where the processor core may be unable to keep up with the rate of incoming data traffic from an upstream device. In such circumstances, the buffer circuitry plays a pivotal role in temporarily storing the data, thereby preventing packets from being lost (resulting in retransfers, etc.). Unfortunately, network processor buffers are of limited size to conserve integrated circuit real estate.","One solution to the buffer overflow problem involves slowing the data rate from upstream devices until the core circuitry can catch up. This is generally referred to as \u201ctraffic shaping.\u201d In some instances, flow control information may accompany the data to help in allowing multiple network processors to manage variable data transfer rates. However, many modern high-speed networks require coded symbol transfers at fixed line rates in order to satisfy edge transition density requirements.","Thus, the need exists for traffic management methods and apparatus that maintain predefined line rates while minimizing the risk of buffer overflows.","Like Reference Numerals Refer to Corresponding Parts Throughout the drawing figures.","In the following description, numerous specific details are set forth such as examples of specific components, circuits, and processes to provide a thorough understanding of the present embodiments. In the following description, for purposes of explanation, specific nomenclature is set forth to provide a thorough understanding of the present embodiments. However, it will be apparent to one skilled in the art that these specific details may not be required to practice present embodiments. In other instances, well-known circuits and devices are shown in block diagram form to avoid obscuring the present embodiments unnecessarily. It should be noted that the steps and operation discussed herein (e.g., the loading of registers) can be performed either synchronously or asynchronously. The term \u201ccoupled\u201d as used herein means connected directly to or connected through one or more intervening components or circuits. Any of the signals provided over various buses described herein may be time multiplexed with other signals and provided over one or more common buses. Additionally, the interconnection between circuit elements or blocks may be shown as buses or as single signal lines. Each of the buses may alternatively be a single signal line, and each of the single signal lines may alternatively be buses. Further, the prefix symbol \u201c\/\u201d or the suffix \u201cB\u201d attached to signal names indicates that the signal is an active low signal. Each of the active low signals may be changed to active high signals as generally known in the art.","An integrated circuit is disclosed. The integrated circuit includes a receive port interface to receive request data at a first data rate from a first host and a transmit port interface. The transmit port interface transmits response data words across plural serial lanes to a second host at a second data rate. The second data rate is less than a predefined line rate of symbol transfers across the plural serial lanes. The transmit port interface includes shaping logic to transmit a data word stream at the second data rate and selectively insert idle words into the data word stream such that the data words and the idle words are together transferred at the predefined line rate. By selectively inserting idle words into a data word stream in this manner, a maximum transmit data rate may be established to minimize the risk of overflowing data buffer circuitry in the second host, yet maintain the line rate to provide sufficient edge density for optimal operation of the high-speed serial lanes.","In one embodiment, a method of operation in an integrated circuit is disclosed. The method includes receiving request data words from a first host at a first data rate; establishing a line rate for transmitting symbols to a second host; and transmitting response data words defining a data word stream to a second host at a second data rate and idle words at an idle rate. The second data rate and the idle rate together correspond to the line rate.","In a further embodiment, a system is disclosed that includes a first host for generating request data at a first data rate and a second host. A network processor is coupled to the first host via a request bus and coupled to the second host via a response bus. The network processor includes a response interface to transmit output symbols at a line rate and response data words to the second host at a second data rate. The transmit interface includes shaping logic to transmit data words at the second data rate and selectively insert idle words into the data word stream at a predefined idle word rate.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1","b":["100","102","104","106","108","110","112","114","102","100"]},"In one embodiment, an Interlaken serial protocol (\u201cInterlaken\u201d) is employed for communicating data and control information between the network processor  and each of the hosts  and . Interlaken enables the use of a configurable number of lanes in the request and response buses to establish a desired overall data rate between the chips, and provides a correspondingly scalable serial interface. Interlaken's data transmission format involves segmenting the data into bursts to generate data words. Control words that have a similar packet structure to the data words are inserted at the beginning and end of each data burst, and sub-fields within the control words may affect either the data following or preceding them. Segmenting bursts enables the interface to, if desired, interleave data transmissions from different channels or links to minimize latency. Although the examples described herein focus on use of the Interlaken protocol, many other serial protocols provide similar data and control word structures and may benefit from application of the methods and apparatus described herein.","Each of the serial links employed in the request and response buses between the hosts  and  and the network processor  generally include a differential pair of conductors for propagating differential signals or symbols. The paths may be implemented on printed circuit board substrates, such as FR4, backplanes, or via suitable cables. Symbols propagate on the links at a predefined line rate in a manner that meets any edge transition density requirements for the signaling protocol. To generate and receive the symbols, each link is bounded by respective transmitter and receiver link partners. The edge density requirements enable the serial links to maintain signal tracking capabilities to ensure high-speed operation in a variety of conditions. Symbols transmitted at the symbol rate may include data words, control words, or idle words, while the use of the term data rate used herein refers to the transmission rate of data words only, or a combination of data words and control words (generally excluding idle words).","With continued reference to , the network processor  may include a programmable logic device having a programmable logic core  to allow for configurability of the receive and transmit interfaces  and . The receive interface  includes a receive port  having receiver and processing circuitry to carry out, various functions such as decoding and deserialization of request data. The request data is generally in the form of data and control words consistent with the Interlaken protocol. Buffer circuitry  in the form of a FIFO, for example, provides temporary storage in the event peak data reception exceeds the processing rate of the core . Data words are received at the receive interface  at a predefined maximum data rate and appropriately queued at the buffer  prior to being forwarded for processing in the core . In one embodiment, described more fully in U.S. patent application Ser. No. 13\/034,570, filed Feb. 24, 2011, titled \u201cSerial Link Interface Power Control Method and Apparatus with Selective Idle Data Discard\u201d, assigned to the assignee of the present disclosure, and expressly incorporated by reference herein, idle words transmitted with data words that are received from the request bus are selectively inhibited from being forwarded to the request buffer circuitry to minimize power dissipation in the receive interface . A processor data bus  routes request data to the core for processing and generating appropriate response data.","At the response side of the network processor , the transmit interface  includes a transmit data buffer  coupled to the core  via an output data bus  and shaping logic . The shaping logic  controls response bus data word transmit rates while maintaining a fixed transmit line rate. The shaping logic  responds to programmed values to establish an idle word transmission rate that cooperates with the predefined line rate to effectively set a maximum transmit data rate. As more fully explained below, during peak periods of transmit data traffic, data word transmissions along the response bus  may be selectively paused (because of one or more idle word insertions into the data stream) to inhibit data word transmission rates above a programmed threshold. This provides an effective way to prevent lost packets due to data buffer overflows at a request interface  of the second host .","In some embodiments, the status of the transmit FIFO  may be communicated to the core  to vary the rate at which data is fed to the FIFO along the output bus . Thus, when the FIFO is close to filling, the core can be alerted to slow the flow of response data from the core, and assist the FIFO in freeing buffering resources. In a similar way, flow control information received by the second host  may be communicated to the first host  to cause a variance in the request data traffic fed to the network processor request interface . The overall systematic rate control scheme minimizes lost packets from FIFO  overflows while maintaining the high-speed features provided by the serial link interfaces.","Referring now to , the data buffer  preferably includes a first-in-first-out (FIFO) circuit that provides a write data interface  to sequentially load parallel data words in response to a system clock signal, and a read data interface  to read out the oldest data words for serialization and distribution to the response bus . As explained above, the overall function of the data buffer includes, among other things, temporarily storing the received data words as a queue for subsequent transmission via the response bus . The size of the data buffer may be based on several criteria, including the level of expected data traffic, the available area on-chip, the speed of the chip core, and other similar factors.","For embodiments involving the Interlaken protocol, data words loaded into the transmit FIFO  are bounded at each end by respective \u201cStart-of-Packet\u201d (SOP) and \u201cEnd-of-packet\u201d (EOP) control words. This is shown in the data buffer by noting the contents of the first five FIFO locations\u2014\u201cSOP\u201d, \u201cDATA\u201d, \u201cDATA\u201d, \u201cDATA\u201d, and \u201cEOP.\u201d An SOP is always a burst control word (a burst control word will always contain the SOP of the next packet and the EOP of the previous packet). An EOP may be a burst control word or an idle control word. Where there is no further data payload to be sent from a device, the last EOP goes out as an idle control word with an EOP bit set. Additional idle control words, however, provide little-to-no data value and do not contribute to data word data rates. However, idle control words do provide edge transitions, and thus contribute to the transmit line rate. By programmatically inserting idle words into a data word stream, a maximum data word transmission rate may be established with little to no impact to the transmit line rate. This preserves line rate edge transition density requirements over the serial links while providing additional reliability for the network by minimizing the risk of lost packets due to data buffer overflows.","Further referring to , idle word insertion may be carried out in one embodiment by idle insertion operations performed by the shaping logic  to respond to programmed values loaded, for example, in register circuitry  via a suitable application programming interface (API). Additional circuitry in the transmit interface includes serializer circuitry  to convert parallel data words from the FIFO to serial data words, and lane distribution circuitry  to, for example, distribute the data words among the plurality of lanes to the response bus . Idle words may be inserted into a response data word stream at various access points (shown in phantom) such as the input to the data FIFO, the output of the data FIFO, or the input or output of the lane distribution circuitry.","In one embodiment, programming the idle word rate involves defining at least two values. The first value defines a \u201cresponse window\u201d size, which generally defines a fixed number of adjacent words for transmission across the available transmit serial links. The second value defines a minimum number of idle words that must be inserted (or included) in the defined \u201cresponse window.\u201d The result is a rate-limiting of the transmitted data words within the defined response window. The ratio of idle words to response window words generally corresponds to the ratio of the line rate from the transmit interface  to the data rate for the second host request interface . Practically speaking, should the host  have a maximum request data rate of 5 GB\/s, for example, and the network processor response bus has a maximum transmit rate of 6 Gb\/s, unless a maximum data rate of 5 Gb\/s is established on the response bus, the host data FIFO may be at risk of overflowing during peak data transmissions. By programming the response word size and idle count into the shaping logic , this risk may be minimized while still maintaining adequate line rate requirements for the serial links.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3"},"As shown in , each word sequentially output from the transmit FIFO  is steered to a different lane, beginning with Lane 0, until all the lanes are loaded for a given transmit interval (word interval). Idle words are inserted by the shaping logic  in accordance with the programmed idle word count value and response window size value. In the example of , the response word size is nine, with an idle count of two. In some embodiments, one or more lanes may be deactivated to cooperate with idle insertions to further shape the data rate of response data words transmitted to the host .",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIGS. 4A-4C","FIG. 4A","FIG. 4A","FIG. 4A"],"b":["402","128","404"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 4B","FIG. 4C"],"b":["406","128","408","410"]},"In operation, the network processor transmit interface  carries out steps in accordance with a method, generally designated , and shown by the flowchart of . The method begins, at step , with identifying a defined response word window programmed into the register circuitry  by a programmer. An idle word count is also identified, at step , to establish the desired rate-limiting ratio of idle words to the defined word stream window. Original response data is then received from the network processor core , at step , and evaluated, at step , to determine whether idle words are present in the stream. If no idle words are present in a given response word window, then the shaping logic  forcibly inserts a number of idle words matching the programmed idle count value, at step . The resulting data word stream, including the forcibly inserted idle words, is then transmitted to the host  at the effectively reduced data rate, at step .","Further referring to , If the determination at step  indicates that idles are present in the original data word stream, then a second determination is made, at step , as to the number of idle words in the stream. If the number of idles is less than the programmed idle count, then sufficient idle words are inserted by the shaping logic, at , until a resulting data stream response window is generated with the requisite idles. Should the original idle words match or exceed the idle count value, then no additional idle words are inserted, and the original data word stream is transmitted to the host, at . In one embodiment, the two determinations at steps  and  may be combined as a single evaluation to detect and ensure that a number of idle words at least the value of the idle count are present in the response data word stream.","Those skilled in the art will appreciate the many benefits and advantages afforded by the embodiments described herein. For example, by including shaping logic  within the transmit interface , the network processor  enables a straightforward way to establish a maximum data rate for data transfers from the network processor to the host . Rate-shaping may thus be provided while still maintaining a requisite line rate for high-speed serial links.","In the foregoing specification, the present embodiments have been described with reference to specific exemplary embodiments thereof. It will, however, be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the disclosure as set forth in the appended claims. The specification and drawings are, accordingly, to be regarded in an illustrative sense rather than a restrictive sense."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present embodiments are illustrated by way of example and are not intended to be limited by the figures of the accompanying drawings, where:",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 5","FIG. 1"]}]},"DETDESC":[{},{}]}
