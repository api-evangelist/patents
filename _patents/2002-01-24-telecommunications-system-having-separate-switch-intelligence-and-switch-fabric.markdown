---
title: Telecommunications system having separate switch intelligence and switch fabric
abstract: The present invention is a telecommunications system having separate switch fabric and switch intelligence. The system comprises a switch fabric, a switch intelligence, and a feature processor. The switch intelligence is logically separated from the switch fabric and comprises a switch fabric proxy, a facility service, a connection manager service, and a call segment instance service. The switch fabric proxy is coupled to the switch fabric via a vendor-specific first Application Programming Interface (API). The switch fabric proxy supports a second API, which is common across all vendors, representing functions supported by the switch fabric. A facility instance, which is instantiated by a facility service using a facility model, represents the bearer and signaling facilities of a party to a call, and interacts with the switch fabric proxy via the second API to communicate with the switch fabric. The connection manager service represents the connectors for a party to a call, and interacts with the switch fabric proxy via the second API to communicate with the switch fabric. A call segment instance, which is instantiated by a call segment instance service using a call model, represents the call logic and call data for a party to a call, and interacts with the connection manager service via a third API and with the facility instance via a fourth API. The feature processor interacts with the call segment instance via a fifth API to provide the telecommunications feature.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=RE043361&OS=RE043361&RS=RE043361
owner: MCI Communications Corporation
number: RE043361
owner_city: Basking Ridge
owner_country: US
publication_date: 20020124
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION ","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["1. Field of the Invention","The present invention relates generally to network switching and more particularly to a telecommunications system having separate switch intelligence and switch fabric.","2. Related Art","A conventional telecommunications network comprises three basic components: user terminals (e.g., telephones), communications busses (e.g., telephone lines) and switches. The switches are used to selectively connect the user terminals via the communications busses. Each switch comprises two basic components: the switch fabric, which physically interconnects the communications busses, and the switch intelligence, which directs the operation of the switch fabric based on control signals (e.g., telephone numbers) received by the switch.","In recent years, however, the telecommunications features offered by service providers (including both local and long distance service providers) have increased dramatically in both number and complexity. Because many of these features are implemented primarily at the switch, the complexity of the switch intelligence has increased in kind to include complex call processing logic. Despite the dual nature of the switch, standard telecommunications architectures such as Advanced Intelligent Network (AIN) and SS7 have continued to incorporate both switch intelligence and switch fabric into a single device. The retention of this monolithic switching approach in the face of these changes has substantial disadvantages.","The primary disadvantages result from the fact that switches from different manufacturers may employ unique methods of control and\/or unique computing languages in their switches. Thus when a service provider offers a new feature requiring a change in switch intelligence, the change must be implemented by the switch vendor. In a network comprising switches from several manufacturers, these changes must be coordinated to ensure a coincident release of the new feature at all switches. Further, each switch vendor must implement a switch change required by one service provider without disturbing the switch intelligence aspects required by other service providers. Finally, changes cannot be implemented centrally, but must be implemented separately at each switch. This arrangement requires substantial lead time for a change, typically on the order of two years or more.","What is needed, therefore, is a telecommunications network where the switch intelligence is separated from the switch fabric.","The present invention is a telecommunications network having separate switch fabric and switch intelligence. The system comprises a switch fabric, a switch intelligence, and a feature processor. The switch intelligence is logically separated from the switch fabric and comprises a switch fabric proxy, a facility service, a connection manager service, and a call segment instance service. The switch fabric proxy is coupled to the switch fabric via a vendor-specific first Application Programming Interface (API). The switch fabric proxy supports a second API, which is common across all vendors, representing functions supported by the switch fabric. A facility instance, which is instantiated by a facility service using a facility model, represents the bearer and signaling facilities of a party to a call, and interacts with the switch fabric proxy via the second API to communicate with the switch fabric. The connection manager service represents the connectors for a party to a call, and interacts with the switch fabric proxy via the second API to communicate with the switch fabric. A call segment instance, which is instantiated by a call segment instance service using a call model, represents the call logic and call data for a party to a call, and interacts with the connection manager service via a third API and with the facility instance via a fourth API. The feature processor interacts with the call segment instance via a fifth API to provide the telecommunications feature.","The switch intelligence further comprises two call processing creation environments. The first, called a call model creation environment, is employed to access the call segment instance service via a programming API to modify existing call models and to create new call models. The second call processing creation environment is employed to access the facility service via a programming API to modify existing facility models and to created new facility models.","One advantage of the present invention is to facilitate rapid creation and deployment of new telecommunications features.","Another advantage of the present invention is to allow software and hardware components to be reused across multiple features and products.","Another advantage of the present invention is to permit scalability both at the processor level and at the level of the communications infrastructure.","Another advantage of the present invention is to provide an architecture that is reusable across future switch and port infrastructures (for example, broadband).","Another advantage of the present invention is to provide an infrastructure that supports the ability to engineer applications in varying levels of centralization or distribution, based on usage.","Another advantage of the present invention is to define a call processing environment in which buy\/build decision can be made on major components of the call processing system, including facilities, signaling, and call data processing.","Another advantage of the present invention is to define a call processing environment in which the price\/performance decisions of the switch call processing and switch hardware capabilities are decoupled, resulting in an optimized business buying strategy.","I. Introduction","The preferred embodiment of the invention is discussed in detail below. While specific steps, configurations and arrangements are discussed, it should be understood that this is done for illustrative purposes only. A person skilled in the relevant art will recognize that other steps, configurations and arrangements can be used without departing from the spirit and scope of the invention.","II. The Intelligent Distributed Network Architecture","As used herein, the Intelligent Distributed Network Architecture (IDNA) defines the infrastructure and network elements of an advanced switching system. The term network element (NE) is used herein to describe any physical device within the IDNA. An NE within the IDNA is named according to its primary function. Therefore, an NE that performs primarily switch intelligence functions is named a Switch Intelligence Network Element (SI-NE). A functional entity (such as switch intelligence) may be split across multiple NEs, in which case all of the NEs are denoted by their primary functions (such as SI-NE).",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 1","FIG. 1"],"b":["100","102","104","104","104","100"]},"Each Domain IDNOS  is coupled to Nationwide IDNOS  and at least one Intelligent Computing Complex (ICC) . ICC  is a computing element that provides services to control the calls processed by Switch Intelligence NEs . Each ICC  comprises at least one Feature Processor . Feature Processor  is the functional entity which contains all IN-style logic associated with call processing. This logic is all logic which controls advanced call services and call structure, and may overlap the logic of Switch Intelligence NE  in areas where rapid service creation has forced this structure. Feature Processor  is usually thought of as comprising all logic not associated with either signaling or call models.","Each Domain IDNOS  supports a switching function comprising at least one Switch Intelligence NE  coupled to at least one Switch Fabric NE . Switch Intelligence NEs  are the elements of network  that provide call processing functions to manage and process the facilities provided by Switch Fabric NEs . Switch Intelligence NE  contains all aspects of data processing required to complete a simple bearer connectivity request, as well as all logic required to determine points in call where feature involvement is required. Switch Intelligence NE  can be a general-purpose computer, such as a Sun or HP Workstation.","Switch Fabric NE  is the element of network  that provides the physical facilities necessary to complete a call. These resources include, but are not limited to, bearer devices (T1's, DS0's), network matrix devices (network planes and their processors), link layer signal processors (SS7 MTP, ISDN LAPD), and specialized circuits (conference ports, audio-tone-detectors). Switch Fabric NE  represents the hardware switch component provided by a switch manufacturer, such as Nortel.","In a preferred embodiment, network  is implemented as a client-server system using functional application programming interfaces (APIs) defined for each service. For example, if an application running on a SI-NE  requires a service provided by a FP , the SI-NE  acts as a client to request the service via an API, and the FP  acts as a server to provide the service. Conversely, if an application running on a FP  requires a service provided by a SI-NE , the FP  acts as a client to request the service via an API, and the SI-NE  acts as a server to provide the service.","Each call to a server is made through these APIs, regardless of the geographic separation between the client and server. IDNOS  allows the client and server to be separated geographically across IDNOS-compatible interfaces and provides a remote procedure call (RPC) capability that is transparent to the client and the server. Thus, applications can be designed as though both client and server were in the same processor, independent of the actual underlying RPC mechanism. Thus, the present invention provides location transparency.","This functional interface method is substantially different from the message-based interfaces provided by traditional IN architectures. These interfaces typically assume a specific distribution topology, and require an underlying infra-structure that is inherently tied to a particular communications method (CCS7, MTP, etc.). The RPC-based approach employed in network  allows the underlying communications method to be evolved independently of the design of upper-layer clients and servers.","The RPC client-server model is restricted to interfaces at the service level. Interfaces within the actual servers (between components of the server) are vendor-proprietary, and are not subject to this specification.","In one embodiment, the present invention is implemented as computer software embedded in a computer usable medium as computer readable program code means. The computer usable medium can be, for example, a hard disk drive or a removable storage medium such as a floppy disk.","A. IDNA Services",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 2","FIG. 1"],"b":["200","100","200","222","112","112"]},"For clarity, the depiction of Switch Node  is divided into bearer functions and control functions. The control functions comprise Feature Processor Function  and Switch Intelligence Function . Switch Intelligence Function  further comprises Call Segment Instance Service , Facility Service , Switch Fabric Proxy Service , and Connection Manager Service . The bearer functions comprise Switch Fabric Function . For ease of explanation,  also depicts external functions comprising External Function  (for example, a PBX function).","Switch Fabric Proxy Service  is a device driver preferably supplied by the manufacturer of the Switch Fabric NE(s) executing Switch Fabric Function . Switch Fabric Proxy Service  provides Connection Manager Service  and Facility Service  with a common interface to Switch Fabric Function  and a common view of the services provided by Switch Fabric Function .","In a preferred embodiment, the interface between Switch Fabric Proxy Service  and Switch Fabric Function  is a vendor-specific ATM interface, and the interface between Call Segment Instance Service  and Facility Service  is an ISDN variant Q.931.","Call Segment Instance Service  is the process which actually brings up and takes down individual connections to complete a call. Facility Service  is a protocol state machine that provides all data processing related to the physical resources (that is, facilities) involved in a call. As discussed below, Call Segment Instance Service  and Facility Service  are programmable to generate a call model which provides a run-time environment for Feature Processor Function  to establish calls.","Connection Manager Service  rationalizes abstract connection requests from Call Segment Instance Service  and resolves these requests into physical connection requests to Switch Fabric Function . For example, Connection Manager Service  will receive a request to make a particular connection, and translate this request into a request to Switch Fabric Function  to physically connect two particular ports.","Services , , and  are not instances, but rather monolithic services which maintain instances within themselves to establish a particular call segment. Each of the services described herein fulfills the interfaces described within this specification using specific procedures. However, as will be apparent to one skilled in the relevant art, other procedures will satisfy the interfaces described, so long as all of the API-specified interfaces are satisfied.","As stated above, the switching function is divided into two primary functions: Switch Intelligence Function  and Switch Fabric Function . These two functions cooperate in a client\/server relationship to complete requests for bearer connectivity (e.g., phone calls). A fundamental conceptual distinction between Switch Intelligence Function  and Switch Fabric Function  is the assignment of data and devices. All devices necessary to complete a bearer connectivity, including trunk cards, switch matrix networks, specialized circuitry, and link processor cards, are assigned to Switch Fabric Function . All data (i.e., processing of information) from these devices, including the processing of signaling, call state, and feature request information, is assigned to Switch Intelligence Function .","As stated above, Switch Intelligence Function  and Switch Fabric Function  correspond logically to two physical computing devices called Network Elements (NEs). Switch Intelligence Function  resides within one or more Switch Intelligence NEs (SI-NEs) , whereas Switch Fabric Function  resides within one or more Switch Fabric NEs (SF-NEs) .","Communication between these SF-NEs and SI-NEs is performed using an interface which is preferably supplied by the manufacturer of the Switch Fabric Function . This interface consists of Switch Fabric Proxy Service  and API . Switch Fabric Proxy Service  is a software element, usually residing on an SI-NE, which provides a normalized interface to the functional elements of Switch Intelligence Function . Switch Fabric Proxy Service  permits SF-NE vendors to use any control interface between an SF-NE and Switch Fabric Proxy Service  (API ), but forces SF-NE vendors to provide a uniform interface from Switch Fabric Proxy Service  to Switch Intelligence Function  (APIs  and ). Requests flow between Switch Intelligence Function  and Switch Fabric Proxy Service  as API procedure calls and responses defined by APIs  and . As will be apparent to one skilled in the relevant art, APIs  and  can be considered to be two portions, perhaps overlapping, of a single API.","1. The IDNA Call Model","The IDNA call model is a method of representing the bearer, signaling, and call processing facilities associated with a call.  is an object view of a three-way call  as an instance of the call model according to a preferred embodiment of the present invention. The call model described in this specification is based on several fundamental concepts.","A call is composed of a number of participating members, one for each party to a call; each member is known as a \u201ccall half.\u201d A call half provides all control for the facilities, subscribers, databases, and call states for the participating member. Call  comprises three parties A-C, and thus three call halves A-C.","Each call half  is composed of two primary elements: Call Segment Instance  and Facility Instance . Call Segment Instance  is an instance of Call Segment Instance . Call Segment Instance  supports the data and interfaces required for call state, subscriber, and feature processing. Call Segment Instance  represents the processing of an endpoint in a call. Facility Instance  is an instance of Facility Service . Facility Instance  supports the processing of events on a facility and correlates these events into requests to Call Segment Instance .","The processing of data related to physical facilities, contained within Facility Instance , is isolated from the actual physical facilities contained within Switch Fabric NE  (represented by Switch Fabric Proxy Service ). Switch Fabric NE  provides minimal data processing capabilities.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 4"},"The following paragraphs define the services of Switch Intelligence Function  according to a preferred embodiment of the present invention, as well as the conceptual entities contained within these services, with reference to .","2. The Call Segment Instance Service","Call Segment Instance Service  is the IDNOS service that performs call half processing, and is the entity that represents the status of call half , including all connection points and associated resources. Call Segment Instance Service  communicates to Facility Service  (for protocol processing), to Feature Processor Function  (for feature processing), and to Connection Manager  (for connection control). Call Segment Instance Service  corresponds to the AIN 1.0 Call Segment (CS) object.","Call Segment Instance Service  is provided via a Call Segment Instance  that is specifically associated with a particular active facility at a particular call state. Identical active facilities with different call states are considered different Call Segment Instances .","Call Segment Instance Service  comprises two conceptual entities: Connection Point (CP) Conceptual Entity  and Segment Call-Half Manager Conceptual Entity .","Connection Point (CP) Conceptual Entity  is the entity aware of the connectivity of connectors within a Call Segment Instance . A CP  is a representation of connectors in some state of bearer connectivity (one-way, two-way, multi-way, etc.). Multiple CPs  within a call are not in a state of bearer connectivity, but may be either brought into connectivity by joining them. A CP  may be removed from a state of bearer connectivity by splitting it.","CP  maintains information relevant to the status of a call half's connectors; as such, no state machine is needed to provide that capability. A connector represents the connection between two (or more) connection points. A connector may be either an active connector or a passive connector. An active connector is any connector between a Call Segment Instance  and a Facility Instance ; a Call Segment Instance  can have only one active connector. A passive connector is any connector between two Call Segment Instances . A CP can have a maximum of one active connector, but can have any number of passive connectors. However, a CP does not require an active connector; a CP may represent a connection of two passive connectors (for example, a call on hold with music). Since CPs are not required to have an active connector, there may be a situation where segments are not managing actual facilities, but are instead managing the connection between other segments. If a segment were placed in such a situation, it would represent and control the relationship between two end-point segments.","Segment Call-Half Manager Conceptual Entity  represents the call data processing within a segment. The primary aspect of Segment Call-Half Manager  is a Call State Machine, which is a finite state machine responsible for the execution of basic call processing. This object is the state machine typically associated with call processing within ITU standards.","3. The Facility Service","Facility Service  is a protocol state machine which provides all data processing related to the physical resources (i.e., facilities) involved in a call. Facility Service  processes raw signaling data provided by Switch Fabric Proxy Service . The resulting actions describe detailed call progress changes that initiate abstract call progress changes (which are given to Call Segment Instance ). Information provided to Facility Service  by Switch Fabric Proxy Service  is usually formed of facility-related events (on-hook, off-hook, wink) and actual data received (DTMF digits, ISUP messages, Q.931 messages) from the facility. Switch Fabric Proxy Service  provides this information in an unprocessed form, allowing Facility Service  to process this data into abstract events for Call Segment Instance  (e.g., Call Setup Request, Call Disconnect Request, etc.).","Facility Service  also acts as a server to the Call Segment Instance Service , fulfilling requests for facility manipulation. This manipulation is received as abstract requests (e.g., Provide Tone, Setup Request, Disconnect) and causes the facility to perform actions on the Switch Fabric Proxy Service to fulfill the manipulation requests. The majority of the APIs defined for Facility Service  that are provided to Call Segment Instance Service  are not protocol-specific. Rather, these requests are abstract interfaces that span all protocol families and yield protocol-specific actions based on logic contained entirely within Facility Service .","Facility Service  comprises Facility Channel Conceptual Entity , Signaling Channel Conceptual Entity , and Bearer Channel Conceptual Entity .","Facility Channel (FCH) Conceptual Entity  is a functional component which provides the ability to logically \u201cbind\u201d a bearer channel to its associated signaling. This binding happens on indication from the Signaling Channel that a Bearer Channel is required for the call.","Signaling Channel (SCH) Conceptual Entity  is the object that addresses all of those aspects of FCH  associated with communications with distant SF-NEs  and SI-NEs . SCH  takes care of the signaling for a call half. It is minimally available in three flavors: SS7 ISUP, PRI, and inband. SCH  is where new types of signaling are implemented (for example, BTUP or R).","Bearer Channel (BCH) Conceptual Entity  provides an association between a Call Segment Instance  and the set of physical devices associated with providing bearer services for that Call Segment Instance . These physical devices include T1s, E1s, DS0s, and other bearer devices, but exclude any device strictly associated with signaling. This association permits invoking entities to refer to these devices in an abstract command structure, eliminating the need to refer to all devices within the association. There is one BCH  associated with each FCH . However, BCH  may represent a group of circuits; for example, a 6\u00d764 wideband call would have six circuits actually involved but would be represented as one BCH .","4. The Connection Manager Service","Connection Manager Service  provides the ability to establish and track connections within an SF-NE . Connection Manager Service  rationalizes abstract connection requests from Call Segment Instance Service  and resolves these requests into physical connection requests for Switch Fabric Function . For example, Connection Manager Service  will receive a request to make a particular connection, and translate this request into a request to physically connect two particular ports. Connection Manager Service  will minimally receive connection instructions from each Call Segment Instance , and will resolve these instructions into specific matrix actions for Switch Fabric Function  which connect the devices controlled by each segment. A very basic call will result in two segments which provide data to Connection Manager Service , which then resolves this data into a single connection request to Switch Fabric Proxy Service .","5. The Switch Fabric Proxy Service","Switch Fabric Proxy Service  provides all mechanisms to control Switch Fabric Function  bearer and connectivity resources. It is the fundamental aspect of Switch Fabric Service  that it provides clients, such as Call Segment Instance , the ability to associate bearer resources and to request connectivity of resources.","Switch Fabric Proxy Service  provides IDNOS-compatible APIs  and  towards the remainder of call processing, and provides Switch Fabric-specific API  towards the actual switch fabric equipment (SF-NEs ). As such, Switch Fabric Proxy Service  acts as a gateway between the IDNOS client\/server environment and the Switch Fabric-specific messaging environment. Switch Fabric Proxy Service  is required to be accessible through the IDNOS RPC execution support capability, whereas SF-NEs  are not required to be accessible through the IDNOS RPC. It is acceptable to have the Switch Fabric Proxy Service  built within an SF-NE , but such a configuration would require an IDNOS-compliant physical interface between the SF-NE  and communicating SI-NEs .","Switch Fabric Proxy Service  provides interfaces to the call processing clients that deal with device connectivity, signaling, etc. These interfaces (also called \u201cagents\u201d) are grouped into the conceptual entities described below.","Signal Protocol Manager (SPM) Conceptual Entity  is a distributor of signaling information to the various Signaling Channels which process such information. SPM  is capable of rudimentary processing of signaling information and may combine multiple events into a single Signaling Channel indication (under the guidance of Signaling Channel ).","Matrix Conceptual Entity  is the functional component responsible for interconnection of compatible bearer channels, enabling the transfer of information between bearer channels on facilities external to SF-NE . Matrix  performs its functions under the control of Connection Manager  within SI-NE .","External Device Conceptual Entity  is the functional component that comprises all physical interfaces external to SF-NE . These external interfaces may provide bearer transport, data transport, or a mixture of bearer and data transport. External Device Conceptual Entity  also encompasses those devices that provide service circuit-typed capabilities (receivers, voice recognizers, etc.).","OAM&P Manager Conceptual Entity  is the functional component that handles the operation, administration, maintenance, and provisioning functions for an SI-NE  and an SF-NE . This functionality is distributed between the SI-NE  and SF-NE .","Resource Manager Conceptual Entity  is the object responsible for maintaining a distributed view of the current availability of resources throughout a Switch Node , including all resources that directly apply to a Switch Intelligence Function .","Device Pool Conceptual Entity  represents all available external devices that may be attached to Facility Channel  as External Devices  for purposes of signaling or bearer service.","B. API Interfaces","In a preferred embodiment of the present invention, many of the interfaces are implemented as application programming interfaces (APIs). As will be apparent to one skilled in the relevant arts, other interface implementations may be employed without departing from the spirit and scope of the present invention.","The capability to customize Switch Intelligence Function  is a hallmark of the present invention. In a preferred embodiment of the present invention, Call Segment Instance Service  and Facilities Service  are independently customizable. Thus, according to a preferred embodiment of the present invention, Call Segment Instance Service  and Facilities Service  each provide two types of APIs: programming APIs and control APIs.  is an object view of Call Segment Instance Service , and is useful in explaining the difference between these two types of APIs. As will be apparent to one skilled in the relevant art, this discussion is applies in a similar fashion to Facilities Service .","A significant advantage of the provision of standard control APIs is that Call Segment Instance Service , Facilities Service , Connection Manager Service , and Switch Fabric Proxy Service  may each be provided by different vendors.","1. Programming (Non-Instance) APIs","In , Call Segment Instance Service  is depicted as being comprised of two environments: Offline Environment  and Runtime Environment . Offline Environment  is accessed by Call Model Creation Environment  via call Model Definition Language (CMDL) Toolkit API 414. CMDL Toolkit API 414 is a programming (non-instance) API. Facility Service  has a similar toolkit interface. Call Model Creation Environment  is based on the service creation environment concept. Facility Service  has a similar service creation environment.","These API interfaces permit element behaviors to be redefined to facilitate the creation of new services, either within the switching system or within an associated feature engine. CMDL Toolkit API  can be employed to create class definitions for aspects of the call model, such as Call State Machines , prior to runtime. For example, these class definitions may include a Call State Machine A for AIN 1.0, a Call State Machine B for ITU CS-1, and a Call State Machine C for an MCI call state machine. Call Segment Instance Service  creates instances  of the defined call state machines, and maintains call data instances  in response to requests from Feature Processor Function  received via control APIs , , and . The programming API for Facility Service  can be employed in a similar fashion, for example, to create a Signaling State Machine.","Call Model Creation Environment  provides a CMDL Library  of the states, events, and atomics which make up the CMDL. In a state machine, an atomic is a non-controlling single step action (for example, a procedure call). An event is a notification to the Switch Fabric Function of activity.","2. Control (Instance) APIs","In operation, the Runtime Environment  of Call Segment Instance Service  interacts with Feature Processor Function , Connection Manager Service , and Facility Service  via control APIs , , and , respectively, to perform call processing. Call Segment Instance Service  instantiates (i.e., creates), for example, Call State Machine Instances  and Call Data Instances  in response to requests for service.","Because Connection Manager Service  and Facility Service  provide standard control APIs, the provider of Switch Intelligence Function  has the ability to \u201cmix and match\u201d components within the Switch Intelligence Function, allowing a \u201cbuy\/build\u201d decision on a case by case basis.","III. An Example: Three-Way Call","As an example of the operation of the present invention according to a preferred embodiment, consider a three-way call, which is a specific type of a conference call. This example will be described with reference to . The three way call is a feature which has been created for, and is running on, a Feature Processor .","A three-way call is placed via an External Function  having both bearer and signaling components (e.g., a LEC or PBX). In response, the signaling component of External Function  provides a signaling request to Switch Fabric Function , which maps the request to Switch Intelligence Function . Facility Service  performs certain signaling processing (perfoming early address determination, unpacking various protocols into a common protocol, parsing of the common protocol) and passes the event to Call Segment Instance Service , which instantiates a Call Segment Instance A, including a Call State Machine Instance , to represent call half A.","Call Segment Instance Service  informs Connection Manager  of the status of Active Connector A and any Passive Connectors  (there are none yet, as Party A is still the only party to the call). In response, Connection Manager Service  directs Switch Fabric Function  (via Switch Fabric Proxy Service ) to make the required physical connections.","Because Party A is requesting a feature (the three-way call), Call Segment Instance Service  triggers Feature Processor Function . In response, Feature Processor Function  provides a command, via API , to Call Segment Instance Service , to add Parties B and C to the call. In response, Call Segment Instance Service  instantiates Call Segment Instances B and C, instructs Facility Service  to instantiate Facility Instances B and C, and instructs Connection Manager Service  to create Passive Connectors A and B and Active Connectors B and C. Connection Manager Service  directs Switch Fabric Function  (via Switch Fabric Proxy Service ) to make the necessary physical connections, thus creating the three-way call.","IV. Conclusion","While various embodiments of the present invention have been described above, it should be understood that they have been presented by way of example, and not limitation. It will be apparent to persons skilled in the relevant art that various changes in form and detail can be made therein without departing from the spirit and scope of the invention. Thus the present invention should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"p":["Further features and advantages of the present invention as well as the structure and operation of various embodiments of the present invention are described in detail below with reference to the accompanying drawings. In the drawings, like reference numbers indicate identical or functionally similar elements. Additionally, the left-most digit of a reference number identifies the drawing in which the reference number first appears.","The present invention will be described with reference to the accompanying drawings, wherein:",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 5"}],"heading":"BRIEF DESCRIPTION OF THE FIGURES"},"DETDESC":[{},{}]}
