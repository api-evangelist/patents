---
title: Providing secure access to a set of credentials within a data security mechanism of a data storage system
abstract: A technique provides secure access to a set of credentials within a data storage system. The technique involves obtaining a unique identifier (e.g., a hostname which is unique to the system) and a set of stable values (e.g., machine-generated codes which are random to users of the system); and, in response to a storage request from a client application, storing a set of credentials of the client application within a data security mechanism of the data storage system. The set of credentials is in encrypted form when stored within the data security mechanism of the data storage system. The technique further involves configuring the data security mechanism of the data storage system to provide the set of credentials in non-encrypted form in response to new fingerprints matching a system fingerprint which is formed at least in part from the unique identifier and the set of stable values.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08555342&OS=08555342&RS=08555342
owner: EMC Corporation
number: 08555342
owner_city: Hopkinton
owner_country: US
publication_date: 20091223
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["A conventional data storage system includes a set of hosts, a set of storage processor modules and an array of disk drives. During operation, the set of storage processor modules performs data storage operations on behalf of the set of hosts (e.g., stores host data into the array of disk drives, and loads host data from the array of disk drives).","Some disk drive arrays contain hundreds of replaceable disk drives (e.g., hot swappable disk drives). If a particular disk drive fails, a technician simply removes the failed disk drive from its slot, and inserts a new disk drive in its place. The set of storage processors then performs a data recovery operation to restore data, which resided on the failed disk drive, onto the new disk drive.","Similarly, other parts of the data storage system may fail and require replacement. For example, some data storage systems include two replaceable storage processor modules and replaceable network modules for fault tolerance and load balancing purposes.","Unfortunately, the above-described conventional data storage system may lack certain capabilities. For example, for security, it may be important to impose the need for login usernames and passwords on certain client applications running on the data storage system. This username and password information must be stored in a secure manner for the login mechanism to be effective. Similarly, other types of data may need to be securely stored by the data storage system such as virtual machine configuration information (e.g., if software managing the data storage system requires the ability to display certain virtual machine information), as well as other configuration data for the data storage system.","Improved techniques provide applications with the ability to securely store credentials within data security mechanisms of a data storage system. In particular, a set of credentials remains in encrypted form when stored deeply within a particular data security mechanism, and a fingerprint which includes a unique identifier and a set of stable variables is required to properly retrieve the set of credentials from the particular data security mechanism. Moreover, storage for the particular data security mechanism can be located among critical storage devices for the data storage system (e.g., a persistent storage manager area) to prevent loss of the credentials as data storage system components are replaced over time (e.g., disk drives, storage processor modules, etc.).","One embodiment is directed to a method of providing secure access to a set of credentials within a data storage system. The method includes obtaining a unique identifier and a set of stable values; and, in response to a storage request from a client application, storing a set of credentials of the client application within a data security mechanism of the data storage system. The set of credentials is in encrypted form when stored within the data security mechanism of the data storage system. The method further includes configuring the data security mechanism of the data storage system to provide the set of credentials in non-encrypted form in response to new fingerprints matching a system fingerprint which is formed at least in part from the unique identifier and the set of stable values.","Other embodiments are directed to improved data storage systems, data storage assemblies, computer program products, and other processes, etc. Such embodiments provide secure techniques for safely guarding credentials on behalf data storage system applications (e.g., a system graphical user interface, service role tools, upgrade routines, component replacement utilities, etc.).","An improved technique provides an application with the ability to securely store a set of credentials within a data security mechanism of a data storage system. The set of credentials remains encrypted when stored deeply within the data security mechanism. Additionally, a fingerprint which includes (i) a unique identifier (e.g., a hostname which is unique to the system) and (ii) a set of stable variables (e.g., machine-generated codes which are random to users) is required to properly access the set of credentials from the data security mechanism. Furthermore, storage for the data security mechanism can be located among critical storage devices for the data storage system (e.g., a persistent storage manager area) to safeguard the set of credentials as components are replaced over time (e.g., disk drives, storage processor modules, etc.).",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1","b":["20","22","24","20","26","1","26","2","26","28","26","28","30","32","26","28"]},"The data storage assembly  includes storage processing circuitry  and an array  of non-volatile storage devices . The storage processing circuitry  is constructed and arranged to provide an interface  which creates and utilizes the data security mechanisms  to secure and protect the credentials  on behalf of various applications  running within the system . In some arrangements, the storage processing circuitry  includes multiple storage processors (A), (B), . . . (collectively, storage processors ). Each storage processor  is capable of being replaced during the lifetime of the data storage system .","The interface  initially creates and configures the data security mechanisms  to provide secure storage for the applications . This activity will be described in further detail shortly. Although an application  will typically access a respective data security mechanism , it is possible for multiple applications  to share access to a single data security mechanism . The applications  may run in the hosts , in the user space of the storage processors , or in both.","As further shown in , the array  of non-volatile storage devices  provides a configuration data area  and a host data area . The storage processing circuitry  writes system configuration data  into and reads system configuration data  from the configuration data area  when carrying out certain operations such as when making changes to the data storage system  and when reporting certain status to a user application. The configuration data  preferably includes, among other things, configuration information required for proper operation of the data storage system  (e.g., hostnames, LUN or volume information, username and password information, virtual machine configuration information, and so on). An example of the configuration data area  is storage allocated for a persistent storage manager module (PSM) of the data storage system .","Additionally, during array operation, the storage processing circuitry  writes host data  into and reads host data  from the host data area  on behalf of the hosts . Such operations occur in response to data storage requests  from the hosts  (also see the electronic signals  in ).","It should be understood that both the configuration data area  and the host data area  are allocated storage areas which are preferably formed by multiple storage devices  (e.g., disk drives, flash memory drives, etc.) running a fault tolerant protocol. Along these lines, the storage devices  can be organized as just a bunch of disks (JBOD), volumes, LUNs, RAID groups (e.g., RAID 0, RAID 1, RAID 5, etc.), and so on which are capable of protecting data against various types of failures. For example, in some arrangements, the configuration data area  redundantly resides on a small set of disk drives (e.g., four disk drives running a RAID protocol) which are designated for holding PSM data. Similarly, other storage devices  can be grouped and arranged to effectively and efficiently hold the host data area . Each storage device  of the array  is capable of being replaced (e.g., hot swapped) during the lifetime of the data storage system .","As mentioned earlier, the interface  creates a data security mechanism  and then stores credentials  of an application  securely within the data security mechanism  on behalf of the application . To store the credentials  within the data security mechanism  and subsequently retrieve the credentials  from the data security mechanism , the interface  provides a set of standard library of routines, function calls, procedures, etc. which can be invoked by the application . In some implementations, the interface  provides an application programming interface (API) and the application  stores a credential  by passing it to the interface  which then, in combination with the data security mechanism , handles encryption\/decryption, guarding of encryption keys, and direction of credential storage to the configuration data area  of the array  in a manner that is transparent to the application .","To initially create and configure the data security mechanism  to provide secure storage for an application , the interface  obtains a unique identifier  and a set of stable values . In some arrangements, the unique identifier  is a hostname of the particular host  running the application  when the hostname is unique to the data storage system . The hostname is obtainable from the configuration data area  which stores the configuration data of the data storage system . In some arrangements, the set of stable values  are machine-generated codes from a code generator  which are random to users of the system .","The set of stable values  is preferably generated by a code generator  of the storage processing circuitry  (e.g., a separate application\/module running on the storage processing circuitry ). In some arrangements, each stable value  is randomly generated and has a minimum length of 8 characters (64 bits) and a maximum length of 255 characters (2040 bits). In some arrangements, each stable value  contains at least one lower case character, one upper case character, one digit and one special character for added security.","Once the interface  receives the unique identifier  and the set of stable values , the interface  creates the data security mechanism  and configures the data security mechanism  to allow access to secure storage using a system fingerprint. The system fingerprint is based on both the unique identifier  and the set of stable values , e.g., a combination of the unique identifier  and the set of stable values .","It should be understood that the operations of (i) obtaining the unique identifier  and the set of stable values , (ii) creating the data security mechanism , and (iii) configuring the data security mechanism  to use the system fingerprint, are preferably performed in a manner which is transparent to the application . In particular, the interface  is able to acquire, as the unique identifier , the hostname of the host  running the application  from the configuration data stored in the configuration data area . Additionally, the interface  is able to acquire and save, as the set of stable values , machine-generated codes. The interface  is able to carry out these activities independently without assistance from the application .","Once the data security mechanism  is created and configured, the interface  is capable of receiving the credentials  from the application  and storing the credentials  in encrypted form as a set of files within the configuration data area  of the array . Accordingly, the credentials  enjoy the same safeguarding as other configuration data  of the system .","When the application  requires subsequent access to the credentials  (e.g., during a user login operation), the interface  obtains the unique identifier  and the set of stable values  in real time, and delivers this information to the data security mechanism . The data security mechanism  dynamically generates a current fingerprint and compares the current fingerprint to the earlier-created system fingerprint. Only if the current fingerprint matches the system fingerprint does the data security mechanism  decrypt the credentials  and provide the decrypted credentials  to the application  through the interface .","As mentioned earlier, the interface  initially creates and configures a data security mechanism  for an application  and then operates as a conduit which enables that application  to subsequently access the credentials  stored within the data security mechanism  (e.g., the interface  provides wrapper and callback functions to the data security mechanism ). To this end, the data security mechanism  includes an executable portion which runs within the storage processing circuitry  and a storage portion which resides within the configuration data area  (e.g., within the PSM). Once the data security mechanism  is created, the data security mechanism  uses keys for encryption and decryption. These keys are unique and random from a user's perspective and are automatically managed by the data security mechanism .","It should be understood that the data security mechanism  may employ certain features from standard lockbox modules\/files such as cryptographic keys, passwords, and configuration data. An example of product which is similar to such a standard lockbox module\/file is the Common Security Toolkit (CST) Lockbox which is available from RSA Security Inc. of Bedford, Mass.","In some arrangements, the data security mechanism  further includes in-memory storage within the storage processing circuitry  (i.e., local semiconductor memory). In these arrangements, the credentials  always remain in encrypted form while the credentials  of the application  reside in the configuration data area . The credentials  are decrypted only after a copy of the credentials  is moved into the in-memory storage within the storage processing circuitry . Such operation by the interface  enables the reduction of frequent input\/output (I\/O) operations to the configuration data area  (i.e., a large number of reads of the configuration data area  in a short period of time) since access can be restricted at least temporarily to the local, in-memory copy of the credentials .","An example of an application  which benefits from the secure handling of credentials  in the manner described above is a service role tool application which provides a set of service accounts requiring user logins which use usernames and passwords. Another example of such an application  is a graphical user interface (GUI) (i.e., a system management application) which displays particular views of virtual machine information of the data storage system  such as information regarding ESX servers offered by VMWare of Palo Alto, Calif. Other application examples include upgrade routines and procedures, new storage processor routines, and the like. For such applications , the interface  directs the data security mechanisms  to maintain their credentials  (e.g., usernames and passwords, virtual machine configuration information) in encrypted form within the configuration data area  of the array . As a result, the applications  are able to store their credentials  securely within the data security mechanisms  through the interface .","It should be understood that the set of stable values  is preferably stored in a secure and safe manner outside the data security mechanism . In some arrangements, the interface  stores the set of stable values  on behalf of the application  as configuration data  in the configuration data area  of the array  but separately from the data security mechanism . As a result, any part of the data storage system  can be lost and replaced with the exception of the configuration data area , and the application  will be able to maintain access to the credentials . For example, the hardware of the host  can be replaced with new hardware which is given the same hostname. As another example, the storage processing circuitry  can be replaced with new storage processing circuitry . Moreover, any of the storage devices  can be replaced (even one or more disks forming the configuration data area ) as long as coherency of the configuration data area  is preserved. In all of these situations, the interface  is capable of dynamically generating a current fingerprint from the unique identifier  and the set of stable value , and then gaining access to the credentials  which are securely stored in the configuration data area .","It should be further understood that the interface  is capable of being delivered to and installed in the storage processing circuitry  from a computer program product  (illustrated generally by a diskette icon ). Such a computer program product  includes a computer readable storage medium which stores instructions that are executed by the storage processing circuitry . Examples of suitable computer readable storage media include CD-ROM, flash memory, disk memory, tape memory, and so on. Further details of how the interface  creates and uses a data security mechanism  will now be provided with reference to .",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIGS. 2 and 3","FIG. 2","FIG. 3"],"b":["100","200","46","100","24","22","24","200","22","24"]},"With reference to , in step  of the procedure , the interface  receives a command from an application  to securely store a set of credentials . In response to the command, the interface  obtains a unique identifier  and a set of stable values . While it is possible to configure a data security mechanism  to be accessible from multiple applications , a more-typical situation includes each application  creating and accessing a respective data security mechanism .","In step , the interface  creates the data security mechanism  to store the set of credentials  on behalf of the application . The created data security mechanism runs on the storage processing circuitry  and has storage residing in the array  of non-volatile storage devices . In particular, the interface  directs the storage to reside within the configuration data area  (e.g., the PSM, also see ).","In step , the interface  configures the data security mechanism  to store the set of credentials  in encrypted form, and to provide the set of credentials in non-encrypted form in response to new fingerprints matching the system fingerprint. At this point, the interface  stores a set of credentials  (e.g., as one or more encrypted files) within the data security mechanism  on behalf of the application .","At this point, the set of credentials  is securely protected within the data security mechanism . Along these lines, the interface  requires continued access to the unique identifier  and the set of stable values  in order to properly retrieve the set of credentials .","With reference to , the procedure  is performed during any subsequent attempt to access the set of credentials  stored in the data security mechanism . In step , the interface  receives an access request from the application . In response to the access request (e.g., a command sent by the application  to the interface ), the interface  re-acquires the unique identifier  the set of stable values . Recall that, in some arrangements, the unique identifier  is the hostname of the host  running the application  and is read from the configuration data area  of the array , and the set of stable values is a set of machine-generated codes which are random to the users of the application  and which are saved separately outside the data security mechanism  by the interface .","In step , the interface  directs the data security mechanism  to generate a current fingerprint having the unique identifier  and the set of stable values . As a result, the data security mechanism  dynamically derives the current fingerprint.","In step , the interface  obtains access to the set of credentials  in non-encrypted form and provides the set of credentials  to the application  when the current fingerprint matches the system fingerprint, and does not obtain access to the set of credentials  when the current fingerprint does not match the system fingerprint. In particular, under direction of the interface , the data security mechanism  compares the current fingerprint to the earlier-created system fingerprint to determine whether to provide access to the set of credentials . If there is a match, the data security mechanism  decrypts the set of credentials and allows the application  to access the decrypted set of credentials  through the interface . However, if the current fingerprint does not match the system fingerprint, the data security mechanism  provides a failure signal and the interface  provides a failure response to the application . Further details will now be provided with reference to .",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 4","FIG. 1","FIG. 2"],"b":["20","50","50","22","48","50","300","46","302","24","48","304","306","50","300","46","302","24","48","304","306"]},"As further shown in , the configuration data area  of the array  (e.g., the PSM) holds a storage portion  of the data security mechanism  which stores the set of credentials  of the application . Furthermore, the application  may run on a host , the user space of the storage processors , or both.","During operation, the application  communicates with one of the portions (A), (B) of the interface  running on one of the storage processors (A), (B). That portion of the interface  then directs a corresponding portion (A), (B) of the data security mechanism  to access the set of credentials  within the configuration data area  of the array .","To coordinate access to the set of credentials , the portions (A), (B) of the data security mechanism  employ distributed locks, e.g., see the portions (A), (B) of the distributed locking mechanism . Such locks ensure coherency of the set of credentials .","As further shown in , the configuration data area  holds the set of stable values  separately from the storage portion  of the data security mechanism . Accordingly, the host  running the application  can be replaced and the data security mechanism  maintains access to the set of stable values  for proper dynamic generation of new fingerprints  (e.g., see the portion (A) of the data security mechanism ).","Moreover, the original system fingerprint  can be stored safely in the configuration data area  as well. Accordingly, the storage processing circuitry  can be replaced and the data security mechanism  will still have access to the system fingerprint  for proper security control.","As described above, improved techniques provide applications  with the ability to securely store credentials  within data security mechanisms  of a data storage system . In particular, the credentials  remain in encrypted form when stored deeply within a particular data security mechanism , and a fingerprint  which includes a unique identifier  and a set of stable variables  is required to properly retrieve the credentials  from the particular data security mechanism . Moreover, storage  for the particular data security mechanism  can be located among critical storage devices  of the data storage system  (e.g., the PSM) to prevent loss of the credentials  as components of the system  are replaced over time (e.g., disk drives, storage processor modules, etc.).","While various embodiments of the invention have been particularly shown and described, it will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the spirit and scope of the invention as defined by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing and other objects, features and advantages will be apparent from the following description of particular embodiments of the invention, as illustrated in the accompanying drawings in which like reference characters refer to the same parts throughout the different views. The drawings are not necessarily to scale, emphasis instead being placed upon illustrating the principles of various embodiments of the invention.",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 4","FIG. 1"]}]},"DETDESC":[{},{}]}
