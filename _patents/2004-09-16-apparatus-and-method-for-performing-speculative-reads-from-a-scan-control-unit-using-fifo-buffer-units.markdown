---
title: Apparatus and method for performing speculative reads from a scan control unit using FIFO buffer units
abstract: A method for debugging a target processor is provided that includes storing a plurality of data values to be sent to the target processor in a first-in first-out (FIFO) buffer unit, saving a copy of an address in a read address counter of the FIFO buffer unit, wherein the address is that of an initial data value of a sequential portion of the plurality of data values, performing a transfer operation to send the sequential portion to the target processor, wherein the read address counter is incremented as each data value is sent. The method also includes resetting the read address counter with the copy of the address if the transfer operation fails and performing the transfer operation again.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07437623&OS=07437623&RS=07437623
owner: Texas Instruments Incorporated
number: 07437623
owner_city: Dallas
owner_country: US
publication_date: 20040916
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application claims priority under 35 USC \u00a7119(e) (1) of Provisional Application No. 60\/517,536 (TI-37248P) filed Nov. 5, 2003.","This invention relates generally to the use of emulation units to perform test and debugging operations on a digital signal processor target system and, more particularly, to providing a method for optimizing JTAG (Joint Test Action Group) transfers between a test and debug unit and target processor. The present invention improves the performance of the test and debug unit in boundary scans.","In the past, test and debug procedures on digital signal processors was done using a scan control unit that converts parallel information from a test and debug unit into a serial data stream. The data values to be scanned out needed to be loaded each time a scan was executed, unless all of the data values were identical.","In a high performance scan controller, the number of times the test and debug unit must load the registers in the scan control unit can become a limiting factor of the performance of the testing procedure. This problem is compounded by the increasing speed of the test clock, which is the speed at which data is serialized and sent to the target processor.","There are two efficiency factors that govern the performance of a test and debug system. These factors are the inherent efficiency of the target processor itself, and the efficiency of the scan control unit. The efficiency of the target processor relates to how many bits of information and control signals must be sent to the target processing unit to perform an operation such as a single step operation, memory access operation, or register access operation. This factor is ignored by this invention since the digital signal processor efficiency cannot be altered by the scan control unit implementation.","The efficiency of the scan control unit relates to how many bits must be loaded into the scan control unit to cause it to send out the required number of bits for the digital signal processor to perform an operation with no dead time between operations. For certain types of operations, the information to be scanned out consists of a fixed value, possibly an opcode, and a variable value, possibly and address or data value.","If a scan control unit has a 16-bit interface with the test and debug unit, and the test clock rate is 32 MHz, the scan control unit must be provided with a data value every 500 ns in order to run at 100% efficiency. In addition, the test and debug unit must load control information into the scan control unit to control the scans and the target processor JTAG interface, as well as access status from the scan control unit related to the scan operations. If the scan control unit access time and test and debug unit memory access times are on the order of 100 ns, then 40% of the bus bandwidth is consumed just by data transfers to the target signal processor. If the target processor is also returning information, then data transfers will be consuming 80% of the bus bandwidth. If the test and debug unit must access the scan controller to determine if a data value can be loaded or read, the remaining 20% of the bus bandwidth is used up, leaving no time for loading control information into the scan controller, or execution of instructions by the test and debug unit.","These limitations can be addressed in 3 ways, widen the data path between the test and debug unit and the scan control unit and memory, reduce the access time, and reduce the number of times the scan control unit must be accessed. Widening the data path requires additional pins on the scan controller device, the debug unit and the memory, and may not always be possible. Reducing the access time of the scan control unit or memory might be possible, but is limited by the particular implementation of both. Reducing the number of accesses of the scan control unit provides a means of improving the efficiency, which can be applied in conjunction with the other two techniques.","Referring to , a block diagram of a test and debug system capable of advantageously using the present invention is shown. The test and debug system includes a user interface , a test and debug unit , and a target processor . The user interface  includes the apparatus that permits a user to interact with, and control the testing of, the target processing unit . The user interface  can include display apparatus, input apparatus such as a keyboard, etc. for initiating test and debug procedures and for receiving the results of these procedures. The user interface  is coupled to the test and debug unit  through interface unit . The interface unit  exchanges signals with the processing unit  of the test and debug unit . The processing unit  applies signals to and receives signals from the scan control unit . The scan control unit  includes a local processor , and memory unit out  for exchanging signals with the local processor , a memory unit in  for storing signals from the target processing unit , a shift register out  and a shift register in , the shift registers  and  transferring data in and out of the test and debug unit  under control of the local processor . For purposes of the present invention, the processing unit  provides commands to the scan control unit  and supplies the contents of the memory unit . The target processing unit  includes a test access port , a shift register , an instruction register , a data register , a mini-status register  and a data register . The test access port  is a state machine responsive to test mode select (TMS) signals from the processing unit  for controlling the JTAG apparatus in the target processing unit . The shift register  receives signals from the shift register out  and transfers signals to the shift register in . The shift register  applies signals to the instruction register  and with the data register  and receives signals from the mini-status register  and the data register .","Referring to , a portion of the contents of the memory unit out , according to the prior art, is illustrated. In particular, the memory unit out  includes a command parameter section A. Examples of the parameters included in the command parameter section are parameters defining a JTAG scan length and parameters defining JTAG end states. A command from the processing unit  will include reference to these parameters and these parameters will be accessed and appropriate control signals applied to the test access port  by the local processor.","Referring to , the execution of a command is illustrated. When command A is issued, the command active signal is activated. The command active signal allows the go to shift state function, the send\/receive function, and the go to end state to be executed by the scan control unit . When the command active signal is no longer active, then a next command B can be executed. If a command C is issued while the target processor is still executing command A, command C will fail and be must retried.","In the past, configurations employing a JTAG emulation unit to test and debug a digital signal processor have had to issue a transaction, such as a read memory command, and then issue additional commands to retrieve the data or to determine if the original transaction was successful. The delay between the commands was usually sufficient to allow the target system the opportunity to complete the transaction. Transactions are usually initiated when the JTAG state (machine) transitions through \u201cUpdate IR\u201d to \u201cIdle\u201d or Pause. (The state diagram for the JTAG test and debug procedure is shown in . The four stable, non-shift JTAG states are indicated in this Figure as states , ,  and .) New transactions are initiated by entering the \u201cScan\u201d state. When the target system does not respond in a timely manner, the transaction will fail, and the test and debug unit  must retry the transaction. The transaction retries impact the performance of the test and debug configuration and, in the situation involving large data transfers with many retries, can result in a significant degradation of the configuration performance.","When dealing with large, variable amounts of data, registers become impractical. RAMs and FIFOs are well suited to handle large amounts of data. Using RAMs for data storage requires logic to generate addresses and keep track of when the RAMs are full, and what RAM locations contain valid data. Using FIFOs addresses these two RAM issues, but presents others. The problem with using a FIFO is the data gets \u201cconsumed\u201d when it is read, it can only be read once. And once data is written to a FIFO, it cannot be \u201cunwritten\u201d.","When a test and debug unit is used to test a target processing unit, scan operations can sometimes fail. They can fail for a variety of reasons, such as the target processing unit has inhibited emulator access during critical sections of code execution, the test and debug system can have insufficient priority to access memory, or the memory system may simply be busy. If a scan control unit is using a FIFO unit for data storage, these failures can result in loss of data or invalid data values being returned.","A need has been felt for apparatus and an associated method having the feature of being able to increase the rate of transfer of information from a test and debug unit to a target processing unit. It would be another feature of the apparatus and associated method to provide an improved put buffer unit for transferring data to a target processing unit. It would be yet another feature of the apparatus and associated method to provide retransmit of signal groups to the target processing unit when a transfer fails. It is a more particular object of the present invention to maintain a signal group in the put buffer unit until a successful transfer of the signal group has taken place. It would be still another feature of the apparatus and associated method to provide signals indicative of the unused capacity of the put buffer memory unit. It is yet another feature of the apparatus and associated method to synchronize the transfer of data from the scan control unit to the target processor.","The aforementioned features are accomplished, according to the present invention, by providing a put buffer unit in the scan control unit. The put buffer unit receives data signal groups from the test and debug processing unit and transfers these groups through the scan control unit to the target processing unit. The put buffer unit transfers the data signal groups to the target processing unit, but retains a copy of the data signal groups. If the transfer to the target processing unit fails, the put buffer unit can resend the data signal group until a successful transfer is achieved. The put buffer unit is synchronized with the target processing unit clock. In addition, the put buffer unit provides signals indicative of the remaining storage space in the unit to prevent attempts by the test and debug unit to store data signal groups when insufficient storage space is available.","Other features and advantages of present invention will be more clearly understood upon reading of the following description and the accompanying drawings and the claims.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIGS. 1","b":["2","3","4"]},"Referring next to , the structure of the memory unit out  according to present invention is shown. The memory unit out  includes command parameter storage locations A. The command parameter storage locations A are storage location scan lengths and end states, states that must be communicated to the target processing unit. In storage locations B, the fixed length signal groups to be transferred to the target processing unit. In the storage locations C, the signal groups are stored that have a variable length. In the preferred embodiment, these storage locations are implemented by a FIFO (first-in first-out) memory unit.","Referring to , the structure of a command applied to the scan control unit  from the test and debug processing unit is shown. The command  includes, for purposes of this discussion, three parameters. In the preferred embodiment, the parameters represent storage locations in the memory unit out . The local processor  will retrieve the fields at the indicated storage locations and implement the data transfers in an appropriate manner. The scan type parameter  and the end state parameter  designate storage locations that store JTAG states and scan lengths illustrated in . These JTAG states are communicated by the scan control unit  to the target processing unit . The data transfer parameter  designates whether the data transfer to the target processing unit  is a fixed mode transfer, a variable mode transfer, or a mixed mode transfer. The data transfer parameter  causes the scan control unit to implement the appropriate transfer mode at the designated locations.","Referring next to , a schematic block diagram for a put buffer unit is shown. A DATA signal is applied to the D terminal of a D flip-flop . The Q terminal of the D flip-flop is coupled to the Din terminal of 2 port RAM . The Q signal is applied to the D out terminal of 2 port RAM . A WRREQ signal (WiReq in ) is applied to a first terminal of logic AND gate . A WR_FULL signal applied to the Q terminal of D flip-flop  is applied to an inverting terminal of logic AND gate . The output terminal of logic AND gate  is coupled to the D terminal of D flip-flop  and to the Wren terminal of 2 port RAM . The Q terminal of D flip-flop  is coupled to the En terminal of up-counter . An input terminal of subtractor  is coupled to the Q (-) terminal of up-counter , to the WrAdr terminal of 2 port RAM , and to an input terminal of subtractor . The USEDW signal is applied to the output terminal of subtractor , to an input terminal of =256 comparator , and to an input terminal of <32 comparator . The output terminal of =256 comparator  is coupled to the D terminal of D flip-flop . The output terminal of <32 comparator  is applied to the D terminal of D flip-flop . The Q terminal of D flip-flop  provides the ALM_EMPTY signal (Vr Empty in ). The RETRY_MODE signal is applied to a first terminal of logic AND gate  and to an inverting terminal of logic AND gate . The second input terminal of logic AND gate  is coupled to the output terminal of logic AND gate  (i.e., the UPDATE_PULSE signal). The second input terminal of logic AND gate  is coupled to an output terminal of logic AND gate and to the EN terminal of 9 bit counter . The output terminal of logic AND gate  is coupled to a first terminal of logic OR gate , while the output terminal of logic AND gate  is coupled to the second input terminal of logic OR gate . The output terminal of logic OR gate  is coupled to the D terminal of D flip-flop . The Q terminal of D flip-flop  is coupled to the En terminal of D register . The RESTORE signal is applied to the D terminal of D flip-flop  and to a first input terminal of logic OR gate . The Q terminal of D flip-flop  is coupled to a second input terminal of logic OR gate . The output terminal of logic OR gate  is coupled to the Ld terminal of counter . The Q terminal of D register  is coupled to an input terminal of subtractor  and to the P terminal of counter . The Q terminal of counter  is coupled to the D terminal of D flip-flop , to a second input terminal of subtractor , and to the RdAdr terminal of RAM . The output terminal of subtractor  is coupled to =0 comparator . The output terminal of =0 comparator  is coupled to the D terminal of D flip-flop . The Q terminal of D flip-flop  is coupled to the D terminal of D flip-flop . The Q terminal of d flip-flop  is coupled to the D terminal of D flip-flop . The Q terminal of D flip-flop  provides the RD_EMPTY signal. The RDREQ signal is applied to the D terminal of D flip-flop . The Q terminal of D flip-flop  is applied to the D terminal of D flip-flop  and to a first terminal of logic OR gate . The Q terminal of D flip-flop  is applied to a second input terminal of logic OR gate . The output terminal of logic OR gate is coupled to the D terminal of D flip flop . The Q terminal of D flip-flop  is coupled to the D terminal of flip-flop . The Q terminal of D flip-flop  is coupled to the D terminal of D flip-flop  and to a first input terminal of logic AND gate . The Q terminal of D flip-flop  is coupled to an inverting terminal of logic AND gate . The UPDATE signal is coupled to the D terminal of D flip-flop  and to a first input terminal of logic OR gate . The Q terminal of D flip-flop  is coupled to the second input terminal of logic OR gate . The output terminal of logic OR gate  is coupled to the D terminal of D flip-flop . The Q terminal of D flip-flop  is coupled to the D terminal of D flip-flop . The Q terminal of D flip-flop  is coupled to the D terminal of the D flip-flop  and to a first input terminal of logic AND gate . The Q terminal of D flip-flop  is coupled to an inverting terminal of logic AND gate . The TCLK signal is applied to the clock terminals of the D flip-flop , to the clock terminals of D flip-flops  and , to the clock terminals of D flip-flops  and , and the clock terminal of D flip-flop . The CLOCK signal is applied to the clock terminals of the remaining components. The ACLR signal is applied to the CIr or Pre terminals of the components.","Referring to , the put buffer unit, according to the present invention, is illustrated. The test and debug processing unit loads data into the put buffer by applying data to the input and asserting the WRREQ signal for 1 clock. The data and write request are latched and the data is synchronously written into the 2 port RAM unit. The write address is also incremented.","The write address is compared to the latched read address and the difference can be read by the debug processor to determine if there is any more room in the put buffer unit. The count difference is also compared to two thresholds, 32 and 256. If the buffer contains 256 values, the WR_FULL signal is asserted and inhibits any further writes to the put buffer unit. If there are less than 32 words in the buffer, the ALM_EMPTY signal is asserted. This signal can be rising edge detected to generate an interrupt to the test and debug processing unit when the put buffer unit is almost empty.","The scan controller monitors the Rd_Empty status bit to determine if there is data in the buffer that can be forwarded to the target processing unit. If no data is available, the scan control unit enters the pause state until there is data. The scan control unit is assumed to be operating using the JTAG test clock (TCLK). Since this clock is different from the functional clock provided by the test and debug processing, the signals to the put buffer unit must be synchronized.","The 2 port RAM component outputs the data value continuously. The scan control unit latches the data value and then asserts RDREQ signal for one TCLK. This signal is latched and pulse stretched to 2\u00d7TCLK wide. The functional clock frequency is always higher than the TCLK frequency. Consequently, the stretched read request can be sampled without missing it. This signal is then synchronized to the functional clock and edge detected to create the READ_PULSE signal. This signal will cause the read address counter to increment and the next data value from the RAM will be read. The synchronization delay does not affect the scan control unit operation since the data value is 16-bits wide, and another read request cannot be asserted for 16 clocks.","The read counter is subtracted from the write counter, the difference is compared to zero, and difference signal is latched in the functional clock domain. The output is synchronized back to the TCLK domain and is provided as RD_EMPTY signal.","If Retry_Mode is not asserted, the read address counter value is latched and compared to the write address counter to generate the USEDW, WR_FULL and ALM_EMPTY flag signals to the test and debug processing unit. If Retry Mode is asserted, the read address counter value is not latched when a read occurs. Instead, the scan control unit reads as many values as required and determines whether the transfer operation is successful or not. If the operation is a success, the scan control unit asserts the UPDATE signal. This signal is latched, pulse stretched and synchronized to the functional clock and then edge detected to create the UPDATE_PULSE signal. This signal is used to latch the read address counter value. If the transfer operation failed, the scan control unit asserts the RESTORE signal. This signal is pulse stretched and is used to reload the read address counter with the value that was last latched.","Referring once again to , the implementation of the put buffer unit is shown. The put buffer unit is implemented using a 2 port RAM unit with a read counter and a write counter supplying the addresses for the RAM. Additional logic is used for synchronization, detecting the almost empty, empty, and full status, as well as the number of data values present in the RAM unit. Logic is provided for accepting or for invalidating reads from the put buffer unit.","The buffer has three unique control signals, RETRY_MODE, UPDATE and RESTORE signals. When the RETRY_MODE signal is asserted, the read counter increments on each read and the data value is read from the RAM unit, but the value used to calculate the number of words in the buffer is not updated. This value is only updated when the UPDATE signal is activated. Activating the RESTORE signal causes the read counter to load the last address value which was updated, effectively invalidating any reads which may have occurred.","While the invention has been described with respect to the embodiments set forth above, the invention is not necessarily limited to these embodiments. Accordingly, other embodiments, variations, and improvements not described herein are not necessarily excluded from the scope of the invention, the scope of the invention being defined by the following claims."],"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENT","1. Detailed Description of the Figures","2. Operation of the Preferred Embodiment"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 5A","FIG. 5B"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
