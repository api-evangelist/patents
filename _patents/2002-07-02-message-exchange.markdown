---
title: Message exchange
abstract: A message exchange method can realize a chat easily in an interface with users who are on-line using a chat window. First status information of a receiving client that will receive a message is confirmed. Then, when the receiving client is connected to a message server, a sender is asked whether chat should be carried out. A chat window is displayed in accordance with a chat instruction received from the sender, and then, the message is stored in a message log, displayed on the chat window and sent to the receiving client.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07761512&OS=07761512&RS=07761512
owner: Kabushiki Kaisha Square Enix
number: 07761512
owner_city: Tokyo
owner_country: JP
publication_date: 20020702
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["The present disclosure relates to subject matter contained in Japanese Patent Application No. 2001-207540, filed on Jul. 9, 2001 and Japanese Patent Application No. 2001-28559, filed on Sep. 14, 2001, the disclosures of which are expressly incorporated herein by reference in their entireties.","1. Field of the Invention","This invention relates to message exchange.","2. Description of the Related Art","When video game machines are equipped with Internet access functions, the users can enjoy various services through servers of an ASP (Application Service Provider). Exemplary new services include on-line delivery of software games and on-line network multiplayer type game distribution. To enjoy such services, users, generally, carry out user registrations to providers in advance. Based upon information registered by the user registrations, the providers manage attribute information of users and charge fees with respect to each service.","In on-line network multiplayer type games, users who enjoy games through networks may be rivals who fight against each other or may be allies who go about together. It is known that when users who become acquainted with each other have communication means, they can exchange information relating to games so that enjoyment of games can be improved. Also, when multiple participants can join in the games simultaneously in addition to joining in the one-to-one multiplayer type games, information exchange by use of an electronic conference (hereinafter referred to as chat) is useful.","Chat is carried out in such a manner that, in case that a participant accesses a chat room, i.e., send messages to a server which provides a chat service, the server broadcasts the messages to the other participants.","However, a chat service is carried out in such a manner that a user, who is registered in a server, opens a chat room according to predetermined procedures, and then, the user collects participants. Therefore, the procedures for receiving services are complicated. Also, when exchanging information using electronic mail, the mail is stored in mail boxes of a mail server and user terminals and then, delivered. Therefore, a problem exists, i.e., lack of real-time communication.","This invention is made in view of such a problem and aims to provide message exchange that can exchange a message easily and effectively.","To accomplish such objects, according to a first aspect of the invention, there is provided a message exchange method in which a message is exchanged between a sending client and a receiving client through a message server. The message exchange method includes extracting by the sending client status information of the receiving client which is intended to receive the message from a memory unit for storing status information, which indicates whether the receiving client is connected to the message server, before sending the message. The method also includes asking a sender at the sending client whether chat is to be carried out, when the extracted status information shows that the receiving client is connected to the message server. The method further includes displaying a chat window at the sending client in accordance with a chat instruction received from the sender. The method further includes storing the message in a message log contained in the memory unit at the sending client. The method further includes displaying the message on the chat window, and sending the message to the receiving client.","According to a second aspect of the invention, there is provided a message exchange method in which a message is exchanged between a sending client and a receiving client through a message server. The message exchange method includes displaying a message window at the receiving client when the message is received from the sending client. The method also includes changing the message window to a chat window at the receiving client when a receiver elects to reply to the message. The method further includes storing the message in a message log contained in the memory unit at the receiving client. The method further includes displaying the message at the receiving client on the chat window.","According to a third aspect of the invention, there is provided a message exchange system in which a message is exchanged between a sending client and a receiving client through a message server. The sending client includes a first storage that stores status information showing whether the receiving client is connected to the message server. The sending client also includes an extracting system that extracts status information of the receiving client from the storage unit before sending the message. The sending client further includes an inquiring system that asks a sender whether chat is to be carried out when the status information extracted from the extracting system shows that the receiving client is connected to the message server. The sending client further includes a first displaying system that displays a chat window in accordance with a chat instruction received from the sender. The sending client further includes a first storing system that stores a message in a message log contained in the first storage. The sending client further includes a second displaying system that displays the message on the chat window. The sending client further includes a sending system that sends the message to the receiving client.","The receiving client includes a third displaying system that displays a message window when receiving the message from the sending client. The receiving client also includes a changing system that changes the message window to a chat window when a receiver elects to reply to the message. The receiving client further includes a second storing system that stores the messages in a message log contained in a second storage at the receiving client. The receiving client further includes a fourth displaying system that displays the message at the receiving client on the chat window.","According to a fourth aspect of the invention, there is provided a sending client in which a message is exchanged with a receiving client through a message server. The sending client includes an extracting system that extracts status information about the receiving client which is intended to receive the message, from a memory for storing status information. The status information shows whether the receiving client is connected to the message server and is extracted before sending the message. The sending client also includes a inquiring system that asks a sender whether chat is to be carried out when the extracted status information shows that the receiving client is connected to the message server. The sending client further includes a first displaying system that displays a chat window in accordance with a chat instruction from the sender. The sending client further includes a first storing system that stores a message in a message log contained in the memory. The sending client further includes a second displaying system that displays the message on the chat window. The sending client further includes a sending system that sends the message to the receiving client.","According to a fifth aspect of the invention, there is provided a receiving client in which a message is exchanged with a sending client through a message server. The receiving client includes a first displaying system that displays a message when receiving a message from the sending client. The receiving client also includes a changing system that changes the message window to a chat window when a receiver elects to reply to the message. The receiving client further includes a storing system that stores the messages in a message log contained in a storage at the receiving client. The receiving client further includes a second displaying system that displays the message at the receiving client on the chat window.","According to a sixth aspect of the invention, there is provided a computer-readable recording medium on which is recorded a program executed by a computer of a sending client. The computer exchanges a message with a receiving client through a message server. The program causes the computer to extract status information of the receiving client which receives the message, from a memory part which stores the status information showing whether the receiving client is connected to the message server before sending the message. The program also causes the computer to ask a sender whether chat is to be carried out when the extracted status information shows that the receiving client is connected to the message server. The program further causes the computer to display a chat window in accordance with a chat instruction received from the sender. The program further causes the computer to store the message in a message log contained in the memory unit. The program further causes the computer to display the memory on the chat window. The program further causes the program to send the message to the receiving client.","According to a seventh aspect of the invention, there is provided a computer-readable recording medium on which is recorded a program. The program causes the computer to display a message window when the message is received from the sending client. The program also causes the computer to change the message window to a chat window when a receiver elects to reply to the message. The program further causes the computer to store the message in a message log and display the message on the chat window.","Hereinafter, embodiments of the invention will be described with reference to the drawings. An embodiment provides a user interface which simulates real-time chat by displaying messages stored in a message log by use of a chat window, when exchanging a message between two people who are on-line. Such a service for providing the user interface is, hereinafter, referred to as MINIMUM CHAT. The chat window is a window that displays messages of multiple users.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1","b":["101","102","103","103","104","104"],"i":["a","b ","a","b "]},"The server groups  of ASP includes groups of servers such as an authentication server group , a content server group , a message server group , a mail server group , a profile server , a game A server and a game B server group . The authentication server group  carries out account management for user authentication. The content server group  provides viewing services for content such as sound and motion pictures. The message server group  provides an environment of chat and messaging, the mail server group  provides an electronic mail service. The profile server group  manages user profiles. The game A server and the game B server group provide game environments. The server groups are connected via a LAN .","By use of such a system, a user can obtain authentication by accessing the authentication server group  in the server groups  through Internet  from the video game machines , or the multipurpose computers , . The server groups  send a menu screen to the user who has obtained authentication. When the user selects each service displayed on the menu screen, the video game machine , or the multipurpose computer , is connected to each server group according to the selected services so that the user can enjoy the services.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 2","b":["103","103","211","212","213","213","214","215"],"i":["a","b "]},"Furthermore the video game machine , and includes a CD-ROM (DVD) drive , a serial interface , a video interface  and a communications interface .","The CD-ROM (DVD) drive  reads in a program from a CD-ROM that stores a game program and a program for carrying out the message exchange. The serial interface  is connected to a game controller . The video interface  is connected to a television monitor . The communications interface  connects to the Internet . All components are connected via the bus .",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 3","b":["103","103","211","300","216","213","301","306"],"i":["a","b"]},"The first layer  is a physical interface and includes a video game machine IF , a multipurpose computer IF  or a portable terminal IF , depending on hardware. A second layer  is an operating system.","A third layer  includes various drivers, communication protocols and so on. The drivers include a graphics driver  an event driver  and a file I\/O driver . The graphics driver  carries out lettering, line-drawing, marking out, scrolling, font setting and so on. The event driver  obtains events from a keypad, a keyboard, a mouse and so on. The file I\/O driver  controls a file medium.","The communications includes TCP\/IP  which forms an Internet layer protocol and a transport layer protocol, a chat protocol  serving as an application layer protocol, a messenger protocol  and a mailer protocol . Incidentally, other protocols can be used as the communications protocol. For example, UDP may be used as the transport layer protocol. Also, provided are SSL (Secure Socket Layer)  for assuring security for TCP\/IP communications and a encryption module  that encodes and decodes data communicated between client and servers by use of SSL algorithms.","A fourth layer  includes a window manager  for starting various modules, managing memory resources and so on. The fourth layer  also includes a Kana-Kanji conversion system  such as FEP (Front End Processor), which system outputs Kanji (Chinese characters) candidates to Hiragana (Japanese syllabary characters) inputs.","A fifth layer  includes an image drawing engine  that draws an image made by PNG (Portable Network Graphics), GIF (Graphics Interchange Format), JPEG (Joint Photographic Experts Group), MPEG (Moving Picture Experts Group), Java (Trademark) Script and so on. The fifth layer also includes a web page browsing software  that analyzes a markup language such as HTML (Hyper Text Markup Language) and displays a screen in accordance with tag instructions. Various APIs (Application Programming Interfaces)  may be provided as interfaces for communicating with each server group.","A sixth layer  is a screen user interface (UI) module and a user interface module for setting a display such as various screens and dialogs.","An exchange of messages by use of the messenger protocol  will be explained. This message exchange is carried out by a messenger. The messenger is application software having a simplified electronic mailer function by which users registered in the authentication server group  communicate with one another through the messenger server group . The messenger is different from electronic mail in that messages are exchanged when the sending and receiving video game machines , or the multipurpose computers , are connected to the server groups .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 4","FIG. 7"],"b":["103","103","104","104","401","113","102","402","403"],"i":["a","b ","a","b "]},"The client application, upon receiving the sending instruction, confirms whether a receiving client, which is described in the prepared message, is on-line to the server groups  (S). If the receiving client is on-line, the user is asked whether MINIMUM CHAT is carried out (S). This enables the user to easily select whether to send his\/her messages or carry out MINIMUM CHAT when the user is on-line. When MINIMUM CHAT is selected, a MINIMUM CHAT window is displayed (S) and the prepared messages are sent to the message server group . The details will be described later with reference to .","When the receiving client is on-line, regardless of whether MINIMUM CHAT is selected at the sending client, the message server group  simply delivers the messages from the sending client to the receiving client (S).","On the other hand, when the receiving client, which is described in the prepared messages, is off-line, the prepared messages are sent as off-line messages to the message server group . The message server group , upon receiving the off-line messages, carries out the off-line message processing, i.e., processing for storing the received messages as the messages to the receiving client in its own memory device (S) These messages are sent from the message server group  to the receiving client, when the receiving client is on-line. As stated above, based upon the state of the receiving client, a practical service for exchanging messages can be provided to sending users.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 5","b":["113","501","502"]},"When a reply is selected, the receiving client displays the MINIMUM CHAT window and the message received on the message window (S). When a user prepares a reply message (S) and instructs to send it (S), the reply message is delivered to the sending client from the receiving client through the message server group  (S). Thus, messages are exchanged in an on-line state between the sending client and the receiving client by use of the MINIMUM CHAT window. In this manner, an intention of the receiving user is properly reflected as to whether MINIMUM CHAT should be carried out.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 6","FIG. 4"],"b":["404","406","102","601","115"]},"When the corresponding receiving client is off-line (S: NO), an off-line message is sent and the processing terminates (S). By this, the message server group  stores the off-line message as a message to the receiving client in its memory device. This message is sent to the corresponding receiving client from the message server group  when the receiving client goes on-line. When the receiving client is on-line (S: YES), a pop-up window is displayed (which is shown in  and will be described later) for querying users as to whether MINIMUM CHAT should be carried out (S).","When the MINIMUM CHAT is carried out (S: YES), the client displays the MINIMUM CHAT window (S) (which is shown in  and will be described later), displays the prepared message on the MINIMUM CHAT window and stores the prepared message in a message log (S). When the MINIMUM CHAT is not carried out (S: NO), the client sends the prepared message to the message server group  (S) and waits for a reply.","The client, upon receiving a message from the receiving client, stores it in the message log (S), and displays it based on the message log on the MINIMUM CHAT window (S). Thus, the message is exchanged between the sending client and the receiving client who is on-line. The receiving and sending clients carry out message exchange by use of the MINIMUM CHAT window.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 7","b":["700","701","702","702","721","722","702","723","724","721"]},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 8","b":"703"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 9","FIG. 8"],"b":["703","900","900","902"]},{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 10","FIG. 10"],"b":["113","1001","1000","1001"]},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 11","b":["1100","1102"]},"The message exchange is carried out using the MINIMUM CHAT window  of the sending client shown in  and the MINIMUM CHAT window  of the receiving client shown in . By use of the method shown in , the sending client and the receiving client store messages to be sent and messages to be received, in the message log, and display them in the MINIMUM CHAT window.","Of course, program code of software which realizes the message exchange can be recorded in a recording medium, and such software is read out by the video game machine or the multipurpose computer to be executed. As a recording medium for supplying program code, for example, floppy (trademark) discs, hard discs, magneto-optical discs, optical discs, CD-ROMs, CD-Rs, magnetic tapes, non-volatile memory cards, ROMs and so on can be utilized.","As described above, according to the embodiment, the message exchange can be carried out easily and effectively.","The present invention is not limited to these embodiments, but various variations and modifications may be made without departing from the scope of the present invention set forth in the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
