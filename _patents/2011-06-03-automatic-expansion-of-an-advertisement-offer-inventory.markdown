---
title: Automatic expansion of an advertisement offer inventory
abstract: An extensible offer inventory database of offers in a domain is established. Further, an offer ontology is generated based on the extensible offer inventory database. The offer ontology provides an extensible vocabulary that correlates to categories in the offer inventory database. In addition, offers are automatically located. The offers are also semantically analyzed to generate semantic analysis data. Further, user data is obtained. In addition, an optimal offer match is automatically determined based upon the semantic analysis data and the user data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08635107&OS=08635107&RS=08635107
owner: Adobe Systems Incorporated
number: 08635107
owner_city: San Jose
owner_country: US
publication_date: 20110603
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["1. Field","This disclosure generally relates to advertising. More particularly, the disclosure relates to automatically expanding an advertisement offer inventory.","2. General Background","Many current websites leverage the recorded behaviors of large numbers of site users in determining content, products, and services to recommend for different segments of users. As an example, a recommendation system may utilize techniques such as the classification of consumers into micro-segments to assist in the matching of product offers created by marketers. However, marketers are typically reluctant to spend the effort to define and target ads when the number of potential consumers is relatively small. Further, consumers are reluctant to participate or visit offer sites when they see that there are relatively few offers of interest. This situation thus creates a \u201cchicken and egg\u201d problem preventing a successful e-business from developing.","In one aspect of the disclosure, a computer program product is provided. The computer program product includes a computer usable medium having a computer readable program. The computer readable program when executed on a computer causes the computer to establish an extensible offer inventory database of offers in a domain. Further, the computer readable program when executed on the computer causes the computer to generate an offer ontology based on the extensible offer inventory database. The offer ontology provides an extensible vocabulary that correlates offers to categories in the offer inventory database. In addition, the computer readable program when executed on the computer causes the computer to automatically locate the offers. The computer readable program when executed on the computer causes the computer to semantically analyze text of the offers to generate semantic analysis data. Further, the computer readable program when executed on the computer causes the computer to obtain user data. In addition, the computer readable program when executed on the computer causes the computer to automatically determine an optimal offer match based upon the semantic analysis data and the user data.","In another aspect of the disclosure, a process is provided. The process establishes an extensible offer inventory database of offers in a domain. Further, the process generates an offer ontology based on the extensible offer inventory database. The offer ontology provides an extensible vocabulary that correlates to categories in the offer inventory database. In addition, the process automatically locates the offers. The process also semantically analyzes text of the offers to generate semantic analysis data. Further, the process obtains user data. In addition, the process automatically determines an optimal offer match based upon the semantic analysis data and the user data.","In yet another aspect of the disclosure, a system is provided. The system includes an extensible offer inventory database of offers in a domain. Further, the system includes an offer ontology engine that generates an offer ontology based on the extensible offer inventory database. The offer ontology provides an extensible vocabulary that correlates to categories in the offer inventory database. Further, the system includes an advertisement location module that automatically locates the offers. In addition, the system includes a semantic analysis module that semantically analyzes text of the offers to generate semantic analysis data. The system includes a reception module that receives user data. Further, the system includes a processor that automatically determines an optimal offer match based upon the semantic analysis data and the user data.","An automatic offer inventory expansion system systematically captures a wide range of diverse product\/service offers. Further, the product\/service offers may be automatically tagged and classified so that the product\/service offers may be efficiently matched to consumers by an online offer recommendation system. In one embodiment, a website, e.g., a shopping portal, may provide a large inventory of product\/service offers and\/or content that can match interests of consumers who visit the portal. The large inventory may be built by incrementally attracting product\/service marketers to advertise and list their products and services at the website by way of offer campaigns that target website users that have specific demographic information, e.g., age, gender, income, or product category interest. In another embodiment, a more scalable approach is utilized to capture diverse product\/service offers and ads directly from a variety of sources in a systematic and automated way and then automatically present these offers to users visiting the website by matching against the user's implicit and explicit information. Implicit information is represented by a characteristic that may be inferred, e.g., from a behavior. Explicit information is information that the user is providing about himself or herself. When users respond by viewing the offer\/ads or when a purchase conversion is made and recorded, the product marketer pays a fee or shares with the website a portion of the sales transaction revenue. In this latter approach, semantic analysis of external offers is performed in order to index and match these offers to consumers. The automatic offer inventory expansion system provides a scalable approach to growing an offer inventory by creating or acquiring a comprehensive and extensible categorization and segmentation database of offers, automatically locating, capturing semantically analyzing, and extracting offer ads and any essential related offer information, and automatically utilizing information gathered about the user combined with the semantic analysis of offer information to find the most relevant offers from its offer inventory.","The term offer website may include lead-generation websites, shopping portals, or any other website or application where a consumer interacts with a system that collects user and offer information. Further, the term user includes a consumer who purchases a product\/service at the website. In addition, the term offer inventory is intended to be a collection of product, service, or content offers that may be of interest to a consumer. Each offer contains specific information such as the name of the product, a description, price information, and a method for purchasing the product. The offer inventory may utilize an offer inventory database to store and index actual offers, web links, and associated offer metadata. Further, the term semantic analysis within the context of automated offer inventory expansion is intended to mean the process of building an accurate keyword and concept model of an ad by relating terminology and concepts about an offer and performing statistical and symbolic text analysis at the levels of phrases, clauses, sentences and paragraphs to the level of the entire offer text to determine what an offer is and what the offer is about. In addition, the term ontology is intended to be a structured representation of the knowledge formed by the concepts and terminology within a domain, e.g., consumer electronics. A domain may be a product\/service\/content category. The ontology expresses relationships between concepts and terminology within the domain. Further, the ontology supports a controlled vocabulary for the domain and may be utilized to reason about entities within the domain. The ontology plays a role in providing a standard and extensible vocabulary of product names and categories by supporting synonym names and abbreviations. For example, an ontology may be utilized to record a name of a product, which is a type of an mp3 player, which is a type of audio equipment, etc.","The offer inventory expansion system may be utilized to create and evolve an offer ontology. As a result of the growth of online shopping, social and group buying, and shopping aggregators, online product offers are diverse and being created at an unprecedented rate. In order to create a comprehensive and extensible categorization system for captured offers, a knowledge representation structure such as an ontology may be readily employed. Managing this vast amount of offer information, whether structured or unstructured, involves mapping between disparate product sources. The disparate product sources may include different product name and category nomenclature and product relationships. A combination of manual and automatic ontology maintenance may be utilized to address the challenge of semantic integration of commerce knowledge.","Further, the offer inventory expansion system may capture offers and expand the offer inventory. Manually constructing and maintaining offer ontologies would be an extremely laborious effort. Not only must product\/service\/content providers and marketers agree on the category and relationships needed for the collection of offers, but they must also do so in a way that both minimizes errors and is easy to update and maintain. The offer inventory expansion system creates and\/or augments these offer ontologies to automatically capture or ingest offers from partners and\/or affiliates, leverage any existing metadata associated with the offer, and then analyze the text of each offer to help tag and classify the offer into the offer ontology for later use.","The process of tagging and classifying offers results in the identification and extraction of a key offer attribute. Offers can then be grouped into micro-segments which define common but selective attributes of the offer. For example, the offer product may be in the sub-category of mp3 players, which is under the parent category of audio equipment, which is under the general category of consumer electronics. The product brand may also be utilized.","The offer inventory expansion system utilizes collected consumer information to recommend offers. After being tagged and classified, offers in particular micro-segments may be efficiently matched with and delivered to users who have been grouped into respective target micro-segments. A micro-segment is a precise division of a market or population that is typically identified by marketers through advanced technology and techniques. For example, data mining, artificial intelligence, and various algorithms may be utilized. These technologies and techniques are utilized to group consumers into fine-grained segments by recognizing and predicting minute consumer spending and behavioral patterns, i.e., micro-segmentation. In other words, a micro-segment is a group of (purchase) decision makers who share similar attributes, purchase behavior, and\/or level of interest in a specific set of features.","The offer inventory expansion system provides a generalized and automated method for capturing ad offers to increase the inventory of any online shopping portal and subsequent offer recommendations to portal consumers. A variety of example configurations are provided.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1","b":["100","102","104","104","106","106","104","106"]},"A web crawler  identifies offer webpage sources by searching through a plurality of webpages . Examples of offer webpage sources include online stores and retailers. Further, another example of an offer webpage source is an online catalog. Portal managers may determine which web pages will be searched based on portal consumer demographics, e.g., women in the age range of eighteen to twenty-four, and active business relationships such as a business partner being a particular store. In addition, the offer inventory expansion system crawls and analyzes a number of offer web pages that contain actual product\/service\/content ads. The webpage sources found by the web crawler  are then processed by a site\/page html\/text extractor  that extracts the html and text, content parser\/analyzer  that parses and analyzes the text, and offer description\/link\/image\/price extractors that extract relevant descriptive information of the product\/service\/content. In other words, a natural language and statistical text mining methodology analyzes the offer web pages to determine the offers, their descriptions, pricing, and other relevant information. After offer web pages are analyzed, normalized offer metadata is indexed and stored in the offer inventory database . User data attributes may be utilized to search the product and category ontology to find normalized terms that will be utilized to find the index terms to locate specific product offers in the offer inventory database. The product and category ontology engine  performs a mapping function as offers on web pages may have specific terminology, e.g., unique product and brand names that may not match up with data provided by the explicit or implicit user data attributes. Offers matched by the offer inventory database search are delivered to the user for review, discard, or conversion. Views and conversions are recorded, and the portal receives revenue credit from the offer provider\/partner. All actions may be recorded including a discard action.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2","b":["200","102","104","104","106","106","104","106"]},"Further, portal marketers determine what catalog metadata will be searched based on portal consumer demographics, e.g., mostly women in the age range of eighteen to twenty-four, and active business relationships. Product offer metadata is imported and analyzed from the identified catalog entries. For example, a plurality of e-Catalogs  may be searched for particular catalog entries. Identified offers and their associated metadata are stored into the offer inventory database . User data attributes are then utilized to search the product and category ontology to find normalized and indexed terms to help locate specific product offers in the offer inventory database. As catalogs have particular terminology, e.g., unique product and brand names, that may not match up with data provided by the explicit or implicit user data attributes, the product and category ontology helps provide a mapping between product brands and names in the catalog and product brands and names mentioned in the user data. In other words, the product and category ontology engine provides a mapping ontology that is utilized to search for matching offers from an online catalog.","An inventory Application Programming Interface (\u201cAPI\u201d)  provides an interface between each of the e-Catalogs  and the inventory database . Accordingly, the offers from the e-Catalogs  may be seamlessly transferred to the offer inventory database .","The product and category ontology engine  performs a matching as offers on web pages may have specific terminology, e.g., unique product and brand names that may not match up with data provided by the explicit or implicit user data attributes. Offers matched by the offer inventory database search are delivered to the user for review, discard, or conversion. Review may in some instances lead to conversion. Views and conversions are recorded, and the portal receives revenue credit from the offer provider\/partner. Offers that match the user data attributes are then provided to the user.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 3","b":["300","102"]},"A portal product and category ontology engine  is utilized by the portal. A portal is described herein as an example as different types of websites may also utilize a product and category ontology engine. The portal product and category ontology engine  may be utilized to search for offers from the offer inventory of various portal webpages  of the portal. Various offers may then be extracted. Those extracted offers may then be provided by the portal product and category ontology engine  through the inventory API  to the offer inventory database .","User data attributes are utilized to search the product and category ontology to find normalized and indexed terms to help locate specific product offers in the offer inventory database . As the portal may have particular terminology, e.g., unique product and brand names, that may not match up with data provided by the explicit or implicit user data attributes, the product and category ontology  helps provide such a mapping between terms. In other words, the product and category ontology engine  provides a mapping ontology that is utilized to search for matching offers from the portal webpages . Utilizing the user attributes, the product and category ontology  may be utilized to get the normalized\/indexed product offer names to query the offer inventory database . The user may then receive those matching offers. In one embodiment, the query partner offer inventory may be continuously queried to obtain the latest offers for matching.","In an alternative embodiment, search engine offers may be directly imported from third parties. In other words, the example configuration  illustrated in  may be utilized to capture offers from third-party ad campaigns. The ad campaigns may provide less metadata as a result of a small amount of descriptive text being provided. As an example, portal managers may initially import third-party ad offers directly into the system by utilizing spreadsheets provided by the third-party offer provider. The metadata provided by the third party offer provider may include campaign name, ad product name, search keywords, an ad headline, a short description of the ad, and\/or an ad display uniform resource locator (\u201cURL\u201d). The provided text metadata is then analyzed. Optionally, the ad's full webpage may be analyzed. A fuzzy-matching component and a natural language and statistical text mining component may be utilized for the analysis. The natural language and statistical text mining component extracts and counts keywords and key phrases, identifies named entities, e.g., proper noun terms, and classifies the product to determine the product category, product attributes from its description, pricing data, and other relevant information. After the ad metadata is analyzed, all extracted ad fuzzy-matched data and metadata is stored, indexed, and normalized to terms into the offer inventory database. User data attributes, e.g., product interests or wishlist product names, are then utilized to search the product and category ontology to find fuzzy and normalized terms that will be utilized to locate specific product offers in the offer inventory database . In one configuration, a fuzzy-matching approach is utilized. User data such as brand information, wishlist products, and\/or prior transaction data are combined to form a query to search the offer inventory database . Matches are based on similar terms or similar collections of keywords. In another configuration, a semantics-based\/ontology approach is utilized. User data such as brand information, wishlist products, prior transaction data are analyzed and structured into a query using natural language processing (\u201cNLP\u201d) and a term ontology to directly search the product names and product categories in the offer ontology. The semantics-based approach may augment the fuzzy-matching approach since product terminology utilized by users and marketers may not match up properly even when fuzzy-matching is utilized. Offers matched by the offer database search are delivered to the consumer for review, discard, or conversion. Views and conversions are recorded, and the portal receives revenue credit from the offer provider\/partner.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 4","b":["400","402","400","404","400","406","400","408","400","410","400","412","400"]},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 5","b":["500","502","504","504","504","502","504","506","506","508"]},"In an example configuration, nodes from the lower category ontology  that are added consist only of leaf nodes that represent new product offer categories that do not exist in the original upper generic ontology . These new product category nodes are attached to category stub nodes provided by the upper generic ontology . In another example configuration, entire product sub-ontologies may already exist and will be incorporated into the existing upper generic ontology . For example, product offers in the category of mp3 players may be found in a portal's product ontology, but may be completely missing from the initial master upper ontology. Accordingly, the category of mp3 players is manually identified as a general product category. The lower category ontology  is then linked to the top-level interest categories in the upper generic ontology . After the master ontology has been updated, the new combined ontology is deployed to the product portal system and utilized to map and match user interest attribute data to product category and product name terms. These normalized terms can then be utilized to directly search the offer inventory database.","The process of integrating or aligning external ontologies into the master ontology is accomplished by linking the external lower category ontologies to the upper generic ontology  at appropriate upper ontology category nodes. These linkage points are identified by using either a manual alignment process or by an automatic category matching algorithm, e.g., by iteratively identifying and aligning the most similar leaf node labels of each ontology or by using a combination or sub-combination of Jaccard index, Tanomoto coefficient, and Levenshtein distance methodologies.","The Jaccard index, where A and B represent the bag of words model for each ontology node label Category-A and Category-B being aligned is described as follows:",{"@attributes":{"id":"p-0041","num":"0040"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"msub":{"mi":["J","\u03b4"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["A","B"],"mo":","}}},{"mrow":[{"mn":"1","mo":"-","mrow":{"mi":"J","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["A","B"],"mo":","}}}},{"mfrac":{"mrow":[{"mrow":[{"mo":["\uf603","\uf604"],"mrow":{"mi":["A","B"],"mo":"\u22c3"}},{"mo":["\uf603","\uf604"],"mrow":{"mi":["A","B"],"mo":"\u22c2"}}],"mo":"-"},{"mo":["\uf603","\uf604"],"mrow":{"mi":["A","B"],"mo":"\u22c3"}}]},"mo":"."}],"mo":"="}],"mo":"="}}}},"Further, the Tanomoto coefficient, where A and B are the TF-IDF vectors of the descriptions of each Category-A and Category-B, respectively, being aligned is described as follows:",{"@attributes":{"id":"p-0043","num":"0042"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":"T","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["A","B"],"mo":","}}},{"mrow":[{"mfrac":{"mrow":[{"mi":["A","B"],"mo":"\u00b7"},{"msup":[{"mrow":{"mo":["\uf605","\uf606"],"mi":"A"},"mn":"2"},{"mrow":{"mo":["\uf605","\uf606"],"mi":"B"},"mn":"2"}],"mo":["+","-"],"mrow":{"mi":["A","B"],"mo":"\u00b7"}}]},"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":"and","mrow":{"mi":"cos","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03b8"}}},{"mfrac":{"mrow":[{"mi":["A","B"],"mo":"\u00b7"},{"mrow":[{"mo":["\uf605","\uf606"],"mi":"A"},{"mo":["\uf605","\uf606"],"mi":"B"}],"mo":"\u2062"}]},"mo":"."}],"mo":"="}],"mo":"="}}}},"In addition, the Levenshtein distance, where term word characters and the term words are used to compute the minimum edit steps between all pairs to find the highest likelihood alignments, is described as follows:",{"@attributes":{"id":"p-0045","num":"0044"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"int LevenshteinDistance(char s[1..m], char t[1..n])"},{"entry":"\u2003{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ for all i and j, d[i,j] will hold the Levenshtein distance between"]},{"entry":[{},"\/\/ the first i characters of s and the first j characters of t;"]},{"entry":[{},"\/\/ note that d has (m+1)x(n+1) values"]},{"entry":[{},"declare int d[0..m, 0..n]"]},{"entry":[{},"for i from 0 to m"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"d[i, 0] := i \/\/ the distance of any first string to an empty second"]},{"entry":[{},"string"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"for j from 0 to n"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"d[0, j] := j \/\/ the distance of any second string to an empty first"]},{"entry":[{},"string"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"for j from 1 to n"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"for i from 1 to m"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if s[i] = t[j] then"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"d[i, j] := d[i\u22121, j\u22121]","\/\/ no operation required"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"d[i, j} := minimum"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"d[i\u22121, j] + 1,","\/\/ a deletion"]},{"entry":[{},"d[i, j\u22121] + 1,","\/\/ an insertion"]},{"entry":[{},"d(i\u22121, j\u22121] + 1","\/\/ a substitution"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},")"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"return d[m,n]"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 6","FIG. 1","FIG. 2"],"b":["600","600","602","100","200","300","604","600","606","600"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 7","b":["700","702","704","704","702","706","708","710","712","712","712","714","714","716","718","720","722","724","724","726","726","728","730","734","736","732","738","740","732","742","740","744","766"]},"Matching user data, e.g., interest preferences, wishlist data, etc., to offers in the inventory may be performed with fuzzy-matching and\/or semantic-matching. The fuzzy-matching approach performs matching by finding terms or phrases that are lexically similar to the user data. As an example, a bag-of-words model, word stemming, and the Jaccard similarity coefficient may be utilized to find the closest matches. The semantic-matching approach performs matching by utilizing semantic analysis of product text and consumer data to determine normalized product names from synonym relationships in the ontology, product categories using hypernym relationships, e.g., more generic relationships, within the ontology, and associated terms to determine offer accessories.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 8","b":"800"},"The offer inventory expansion system utilizes personal demographic data , which includes certain user contact data, e.g., zipcode, city, state, and user demographic data, e.g., age, gender, income, etc. Further, the offer inventory expansion system provides offer brand preferences , which includes brands the user has an affinity towards, either by explicit preference indication, or inferred by extraction from transaction purchase history. In addition, the offer inventory expansion system also provides wishlist products  such as product names, their brands, and descriptive information that indicate the user's purchase intent or interest. The offer inventory expansion system also utilizes inferences from systematic and ad hoc data analytics , which employ large-scale data mining and analytics to infer other user attributes that are utilized in the matching phase. The offer inventory expansion system selects and filters user preference and interest data from the input data sources and transform this data into search strings suitable for use as parameters  for query(s) that will be utilized for a product terminology ontology search. The offer inventory expansion system then performs an ontology search . The ontology search  is performed by issuing query(s) to a product term ontology  to map preference and interest data to form product index search terms. Utilizing the generated product index search terms, the offer inventory expansion system performs an offer inventory search  to by executing the offer inventory search queries utilizing the product index search terms against the offer product database . The offer inventory expansion system computes matching scores, ranks offers, and then returns offers from the offer product database to an offer delivery system . The offer inventory expansion system then tracks user views and user conversions for the offers.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 9","b":["900","902","904","900","906","904","904"]},"The Input\/Output (\u201cI\/O\u201d) devices  can be coupled directly to the system configuration  or through intervening input\/output controllers. Further, the I\/O devices  may include a keyboard, a keypad, a mouse, a microphone for capturing speech commands, a pointing device, and other user input devices that will be recognized by one of ordinary skill in the art. Further, the I\/O devices  may include output devices such as a printer, display screen, or the like. Further, the I\/O devices  may include a receiver, transmitter, speaker, display, image capture sensor, biometric sensor, etc. In addition, the I\/O devices  may include storage devices such as a tape drive, floppy drive, hard disk drive, compact disk (\u201cCD\u201d) drive, etc. Any of the modules described herein may be single monolithic modules or modules with functionality distributed in a cloud computing infrastructure utilizing parallel and\/or pipeline processing.","Network adapters may also be coupled to the system configuration  to enable the system configuration  to become coupled to other systems, remote printers, or storage devices through intervening private or public networks. Modems, cable modems, and Ethernet cards are just a few of the currently available types of network adapters.","The processes described herein may be implemented in a general, multi-purpose or single purpose processor. Such a processor will execute instructions, either at the assembly, compiled or machine-level, to perform the processes. Those instructions can be written by one of ordinary skill in the art following the description of the figures corresponding to the processes and stored or transmitted on a computer readable medium. The instructions may also be created using source code or any other known computer-aided design tool. A computer readable medium may be any medium capable of carrying those instructions and include a CD-ROM, DVD, magnetic or other optical disc, tape, silicon memory (e.g., removable, non-removable, volatile or non-volatile), packetized or non-packetized data through wireline or wireless transmissions locally or remotely through a network. A computer is herein intended to include any device that has a general, multi-purpose or single purpose processor as described above.","It should be understood that the processes and systems described herein can take the form of entirely hardware embodiments, entirely software embodiments, or embodiments containing both hardware and software elements. If software is utilized to implement the method or system, the software can include but is not limited to firmware, resident software, microcode, etc.","It is understood that the processes and systems described herein may also be applied in other types of processes and systems. Those skilled in the art will appreciate that the various adaptations and modifications of the embodiments of the processes and systems described herein may be configured without departing from the scope and spirit of the present processes, systems, and computer program products. Therefore, it is to be understood that, within the scope of the appended claims, the present processes, systems, and computer program products may be practiced other than as specifically described herein."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DRAWINGS","p":["The above-mentioned features of the present disclosure will become more apparent with reference to the following description taken in conjunction with the accompanying drawings wherein like reference numerals denote like elements and in which:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
