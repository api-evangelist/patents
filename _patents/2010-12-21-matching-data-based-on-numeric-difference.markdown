---
title: Matching data based on numeric difference
abstract: Systems and methods for matching data based on numeric difference are described herein. Input data elements are parsed to identify a first number and a second number. A difference between the first number and the second number is calculated based on a predefined formula. Based on the difference, a matching score between the input data elements is evaluated. The matching score is proportional to a base matching score corresponding to a threshold difference, and a maximum score corresponding to a match between the first number and the second number. A similarity between the input data elements is reported based on the evaluated matching score.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09229971&OS=09229971&RS=09229971
owner: Business Objects Software Limited
number: 09229971
owner_city: Dublin
owner_country: IE
publication_date: 20101221
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The main objective of virtually every business organization is to be profitable. In knowledge based economy, one of the major success factors is competent information management. Enormous amounts of data are created daily, and the ability to efficiently work with information is key for a company to propel and to emerge to a position of strength. One of the aspects in information management concerns process execution and the decrease of operational costs. Usually, without elaborated information management strategy, the quality of the generated data in a company decreases. Hence, the adopted business processes and initiatives are negatively affected. Incorrect or out-of-date information about customers, partners, and products result in time loss, discredited credibility with customers, frustration in supply chain, etc. Another aspect aims at ensuring trustfulness in the data generated and stored across the landscape of a business organization. The confidence in the available information enables the stakeholders in an organization to work efficiently, and accurately. Generally, there are many sources of information which create data redundancy and duplications, e.g., daily data entries by different stakeholders, data migrations, legacy systems data, data acquired as a result of mergers and acquisitions, etc. Therefore, the businesses need to follow stringent rules for data consolidation and data cleaning.","There are various software products and tools available for data management that are developed to help understanding the complex and multidimensional relationships in the enterprise data. Such products provide efficient handling of customer and business data elements among different applications, including business intelligence (BI), enterprise resource planning (ERP) systems, middleware applications, etc. One of the most important functions of data management is the ability to detect, match and consolidate duplicate data, leveraging multiple data sources for analytical or operational needs. Therefore, the availability of efficient data matching algorithms is essential for a quality information management. However, in many cases the data management products fail to identify data redundancy or inconsistency. For example, when comparing string data elements, the actual characters of the data elements are simply matched. The data elements may contain similar, even duplicate information, presented or described with different sets of characters. Thus, such similar data elements remain undetected.","Various embodiments of systems and methods for matching data based on numeric difference are described herein. In one aspect, a first input data element is parsed to identify at least one numerical character. Similarly, a second input data element is parsed to identify at least one second numerical character. The numerical characters identified in the first and second input data elements are converted to a first number and to a second number, respectively. In another aspect, a difference between the first number and the second number is calculated based on a predefined formula. In yet another aspect, a matching score between the first input data element and the second input data element is evaluated based on the calculated difference. The matching score is proportional to a base matching score corresponding to a threshold difference, and a maximum score corresponding to a match between the first number and the second number. A similarity between the first input data element and the second input data element is reported based on the evaluated matching score.","These and other benefits and features of embodiments of the invention will be apparent upon consideration of the following detailed description of preferred embodiments thereof, presented in connection with the following drawings.","Embodiments of techniques for matching data based on numeric difference are described herein. In the following description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the invention can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.","Reference throughout this specification to \u201cone embodiment\u201d, \u201cthis embodiment\u201d and similar phrases, means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.","System  in  provides a simplified example of an enterprise computer system environment, where data matching functionality is implemented, according to one embodiment. The system  includes at least one client system  communicating with server system  via network . Generally, users  access client system  to configure and operate with various software services provided by one or more software applications deployed in the server system . The server system  may be built to run one or more application server instances on one or more physical hardware server systems. The server system  may be configured as a cluster when more than one application server instances or\/and physical hardware servers are included.","The client system  may represent a variety of processing devices, e.g., desktop computers, laptops, cellular phones, handheld devices (for example, personal digital assistant (PDA)), navigation devices, etc. Each of users  may access one or more sessions of user interface (UI)  to operate with the available software services. The client system  provides an environment where client side software applications are deployed and executed to provide functionality necessary for accessing the software services at the server system . For example, some client side software applications may pre-process service requests initiated through UI . Other client side software applications can be used in designing new, or changing existing software services at the server systems . Data services frontend  is an example for a client side application implemented in the at least one client system  to execute data matching algorithm  to evaluate data similarities, according to one embodiment.","The client system  establishes interface with server system  using appropriate functions, methods and data formatting as defined by client application programming interface (API) . In one embodiment, the different elements of the client system , e.g., UI , data services frontend  and client API , are implemented within a common framework. For example, an Internet browser could provide such a common framework. The additional functionality required for the described is plug-ins, or other extensions, e.g., Silverlight\u2122 development platform provided by Microsoft Corporation. Other examples for such frameworks may include Java\u2122 Virtual Machine (JVM) originally specified by Sun Microsystems, Inc.; .Net\u2122 Framework specified by Microsoft Corporation, etc.","The modules of server system  correspond to some of the basic elements included in general application server architecture. Server runtime  establishes environment where one or more software applications  are deployed and executed. The access to the services provided by applications  is managed through server API . In one embodiment, metadata component  represents data structures where the application server stores descriptions of programming or business objects, and\/or different parameters relevant to the deployed applications . The metadata  could be accessed by the server runtime  during the deployment and the execution of the applications . In one embodiment, the server system  is built using Java\u2122 based application server platform, e.g., compliant with Java Enterprise Edition (Java EE\u2122) specification. The elements of the server system  could be executed within a server side JVM.","Interfaces  provide the server system  with access to external resources. External services  represent an example for such external resources. The external services  may be available at other computer systems connected to the server system  directly, via network , or via other networks. The external services  may include business services provided by legacy systems, infrastructure services, messaging or notification services, etc.","Storage  is another example for external resources. The storage  could include one or more databases, where any of the software and hardware elements of the server system , including the physical servers and the application server instances, may extract and store data. The external services  may also store and extract data from the storage . The data that is placed in the storage  could be shared among the different system nodes, including the server system  units, the providers of the external services , and also including computer systems from other system landscapes.","In one embodiment, matching functionality is implemented in the computer system for evaluating similarity between data elements. The data elements that are compared could be provided in the computer system  by different sources, including users , the at least one client system , the elements of the server system  (e.g., stored in the metadata , or received at interfaces ), the external services , the storage , etc. In one embodiment, the implementation of such matching functionality or mechanism in the computer system  includes the data services frontend  and the data services backend , where the matching algorithms  and  are executed, respectively. In an alternative embodiment, data matching mechanism includes either only frontend implementation or backend implementation.","The setup and execution management of the data services backend  could be administered through data services frontend . The responsible users  who are authenticated with respective privileges at client system  may access the data services frontend  through a session of the UI . The data services frontend  may include various controls for setup and management of the execution of the matching mechanism implemented in the system , e.g., configuring and executing the match algorithms  and . Further, the data services frontend  may include functionality for processing, analyzing and presenting the results of data management performed by the data services backend . The responsible users  may setup the type of analyses to be performed, the way the data matching results are to be presented, etc.","The data services backend  could be deployed and executed in the server runtime environment . In one embodiment, the data services backend  may be integrated with the server runtime , e.g., developed as an integral part or enhancement of the JVM.","There are different scenarios for information management where data matching mechanism is applied to evaluate the similarity between data elements or data objects. For example, data matching is used in identity resolution, to prevent duplicate records when adding new customers or other entities to a master database, e.g. in customer relationship management (CRM) applications, ERP systems, etc. The data matching mechanism may also be used for checking the data already placed in a master database to detect any inconsistencies and duplicates on various levels, for example in personal or corporate data separated by households, families, individuals, addresses, departments, etc.","In one embodiment, the process of matching data elements identifies duplicate records in multiple data sources, e.g., tables, files, messages, etc. An efficient matching mechanism may compare data elements in different directions, and then join the intersections in a single record. The data elements, e.g., data records, could be compared by mapping various fields holding similar kinds of information, like name, phone number, account number, operational data, product ID, description user defined fields, etc.","Data consolidation is another area where data matching mechanisms are used, according to one embodiment. A data consolidation process may eliminate, filter or combine duplicate records by applying configurable matching rules. For example, the goal of data consolidation may be to build the \u201cbest record\u201d based on the available data by selecting information from multiple data fields according to set priorities, e.g., source, frequency, completeness, recency, etc. The match and consolidation processes may build reference keys based on the identified data similarities to track individual records and their associations across multiple databases.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2","b":["200","205","215","225","235","205","215","225","210","220","230","240","235"]},"The data in result data record  could be salvaged and posted to form a single best record, e.g., a \u201cmaster\u201d record. Then, the original input data records ,  and  could be archived, or directly removed from the computer system. In , the data selected from input records ,  and  is illustrated by underlining the respective entries in data fields ,  and . Alternatively, the result data record  could be posted to update the matching input data records ,  and . \u201cMaster\u201d records or fields can be defined in a consolidation process to align with predefined business rules. For example, a rule may require the most current phone number to be posted to all three input records ,  and .","Regardless how the similar or duplicate data are processed in a computer system landscape, the main objective of every data matching mechanism is the identification of such data. There are different criteria for matching data elements based on different definitions of similar or duplicate data. Data elements that look different could be treated as duplicate for specific purposes, users and scenarios. For example, differently spelled names or addresses could be treated as identical, e.g., \u201cWilliam\u201d and \u201cBill\u201d, \u201cFirst street\u201d and \u201c1Street\u201d, \u201cInternational Business Machines\u201d and \u201cIBM\u201d, \u201cMetlife\u201d and \u201cMetropolitan Life\u201d, etc.","Typically, business users define what \u201cduplicate\u201d data and \u201csimilar\u201d data is in a given computer system landscape. The applied matching mechanisms use specific algorithms to find the duplicates and similarities based on these business criteria.  shows a high level structure of data matching mechanism . The matching or comparison between two or more data elements is evaluated in module  by using at least one of the selected algorithms  to , based on the configuration of the mechanism , the nature of the data elements, and the applicable business criteria.","In many cases, direct comparison between the data elements content is not productive. Therefore, the matching algorithms  to  provide one or more matching options that could be applied in comparing the data elements. Table 1 enlists examples for some of the possible match options supported by the algorithms  to , together with the issues they solve:",{"@attributes":{"id":"p-0033","num":"0032"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Match Option","Example","Value Add"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Cross Field","Compare simultaneously data from","Data entry errors"]},{"entry":["Matching 310","different fields, e.g., home phone #, work",{}]},{"entry":[{},"phone #, mobile phone #, fax #",{}]},{"entry":["Initials adjustment","\u201cJR Peterson\u201d matches \u201cJames Peterson\u201d;","Acronyms"]},{"entry":["315","\u201cHP\u201d matches \u201cHewlett Packard\u201d",{}]},{"entry":["Abbreviations 315","\u201cInternational\u201d matches \u201cIntl\u201d","Entry shortcuts"]},{"entry":["Substrings 315","\u201cMidtown Power and Light\u201d matches","Variations"]},{"entry":[{},"\u201cMidtown Power\u201d or \u201cMidtown Light and",{}]},{"entry":[{},"Power\u201d",{}]},{"entry":["Blank Matching","\u201cJohn Smith\u201d could match \u201cJohn\u201d or","Incomplete data"]},{"entry":["315","\u201cSmith\u201d, or even \u201c\u201d under certain",{}]},{"entry":[{},"circumstances",{}]},{"entry":["String similarity","\u201cSmith\u201d matches \u201cSmythe\u201d","Spelling errors,"]},{"entry":["315",{},"typos, variations"]},{"entry":["Word similarity","\u201cJohn's Plumbing and Hydraulics\u201d","Out of sequence"]},{"entry":["315","matches \u201cJohn Hydraulics Plumbing\u201d","words"]},{"entry":["Transposition","\u201cSimpson\u201d matches \u201cSimspson\u201d; \u201cPO: 43-","Data entry errors"]},{"entry":["checking 320","5654\u201d matches \u201cPO: 34-5654\u201d",{}]},{"entry":["Inter-script","\u201cTakeda, Masayuki\u201d matches \u201c\u2009 \u2009,","Multi-national"]},{"entry":["matching 325",{"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00002","he":"2.79mm","wi":"10.58mm","file":"US09229971-20160105-P00002.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}},"data; entry"]},{"entry":[{},"\u201c\u0398\u03b5o\u03b4\u03c9\u03c1{acute over (\u03b1)}\u03c4o\u03c5, E\u03bb{acute over (\u03b5)}\u03bd\u03b7\u201d","variations"]},{"entry":["Diacritics,","\u201cSenor\u201d matches \u201cSe\u00f1or\u201d; \u201cMACY'S\u201d","Diacritics, casing"]},{"entry":["punctuation, casing","matches \u201cmacys\u201d","variations;"]},{"entry":["330",{},"exclusion of"]},{"entry":[{},{},"punctuation"]},{"entry":["Numeric matching","\u201cAccu 1.4 L 29Bar\u201d matches \u201cAccu 29Bar","Enforce numeric"]},{"entry":["335","1.4 L\u201d, but does not match \u201cAccu 1.5 L","accuracy"]},{"entry":[{},"29Bar\u201d",{}]},{"entry":["Hyphenated names","\u201cJones\u201d matches \u201cJones-Smith\u201d","Household data"]},{"entry":["340",{},"cleaning"]},{"entry":["Multiple names","\u201cMary Hill\u201d matches \u201cJim and Mary Hill\u201d","Household data"]},{"entry":["345",{},"cleaning"]},{"entry":["Unicode matching","Compare all world data, including nuances","Geographic and"]},{"entry":["350",{},"cultural coverage"]},{"entry":["China-Japan-","Country specific nuances for name, firm,","Geographic and"]},{"entry":["Korea-Taiwan","address data; \u201c\u2009 \u20098\u2009 \u20091 5\u2009 ","cultural coverage"]},{"entry":["matching 350",{"img":{"@attributes":{"id":"CUSTOM-CHARACTER-00006","he":"2.79mm","wi":"23.62mm","file":"US09229971-20160105-P00006.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}},{}]},{"entry":[{},"\u201c\u2009 \u20092\u2009 \u20098\u2009 \u20091 5",{}]},{"entry":[{},{"img":[{"@attributes":{"id":"CUSTOM-CHARACTER-00010","he":"2.79mm","wi":"23.62mm","file":"US09229971-20160105-P00006.TIF","alt":"custom character","img-content":"character","img-format":"tif"}},{"@attributes":{"id":"CUSTOM-CHARACTER-00011","he":"2.79mm","wi":"2.79mm","file":"US09229971-20160105-P00009.TIF","alt":"custom character","img-content":"character","img-format":"tif"}}]},{}]},{"entry":["Text to number","\u201c1\u201d matches \u201cFirst\u201d","Data entry"]},{"entry":["matching 355",{},"variations"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"In many occasions, data elements containing numeric characters are compared simply as characters. For example, the numeric matching algorithm  checks the exact match between numeric characters. Similarly, the text to number matching algorithm  converts words to numbers which are then compared for character match. However, it is often necessary for the closeness between numbers in two or more data elements to be evaluated, e.g., between two or more data strings. A match between the data strings or elements may be identified when the numerical difference between one or more corresponding numbers in the strings is less than a predefined value. Thus, referring to the examples in Table 1, strings \u201cAccu 1.4L 29Bar\u201d and \u201cAccu 1.5L 29Bar\u201d may be identified as duplicate when a numerical difference of 0.1 is tolerable.","In one embodiment, a strings matching algorithm based on numeric closeness is applied by a matching mechanism in a computer system landscape. Instead of considering only the actual characters in similarity match, this strings matching algorithm compares the number values of numerical strings. A maximum number of differences allowed could be specified, and a base match score may be evaluated by the algorithm, accordingly. In one embodiment, a matching score from 0 to 100 is evaluated based on the actual numeric difference between two numbers and the base match score for the maximum allowed difference. The string matching algorithm may also provide options for adjusting the match score based on whether alpha characters are included in the input data elements, as well as other data quality checks and adjustments may be performed.","The traditional match algorithms for comparing data strings, e.g., \u201cedit distance\u201d algorithms, give match results or scores that are not specialized for dealing with numeric data. For example, many money rebates have a one-per-household limit. Sometimes, persons are trying to fraudulently obtain multiple rebates from a company by sending multiple rebate submissions with slightly altered data, e.g., \u201cJohn Smith, 39 Main St\u201d and \u201cJohn Smith, 41 Main St\u201d. In this instance, \u201c41\u201d might be a fictional house number, but, because it is close enough in proximity, it is very likely that the mail carrier will still deliver rebate check to John Smith. The strings \u201c39\u201d and \u201c41\u201d normally have a very small matching score when compared using a conventional \u201cedit distance\u201d algorithm, and hence, the fraudulently duplicated record may not get detected. However, when a string matching algorithm based on numeric difference is applied, the proximity between numbers \u201c39\u201d and \u201c41\u201d will be identified, and the duplicate submissions will be detected.","The above example shows how important is the ability to match data elements based on their value proximity instead of simply comparing their string representation. The transformation of data strings to their numerical value may be helpful to evaluate not only number closeness, but also other types of proximity. For example, the same approach can be used in finding geographical proximity between two or more locations described by numerical coordinates. The difference between two records specifying geographical locations may be calculated and measured in miles, meters, etc. Thus, duplicate or similar addresses could be detected in one or more data records, for example. Proximity between dates also can be evaluated using the numerical recordings of dates. Thus, duplicate data records may be detected based on date ranges, e.g., periods of days.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 4","b":["400","405","410"]},"When the data quality check is successful, the process  continues at  with identifying a first number in the first data element. Different approaches for identification of a number in a data element may apply. For example, an algorithm may convert all numeric characters of the data element to a single number. Alternatively, only a subset of numeric characters may be selected to be converted to a number, where the subset may have a predefined cardinality. The non-numerical or invalid characters in the data element, if any, could be ignored or replaced by numbers according to an established set of rules, e.g., non-numeric character could be ignored, and invalid numeric fraction could be replaced with zero. A similar operation for identifying a second number is performed for the second data element at .","At , a difference between the identified numbers is calculated. In one embodiment, different mathematical expressions could be used for calculating the difference between the numbers. For example, when the first and the second numbers are treated as simple values, the difference may be calculated by the absolute arithmetical subtraction of one of the numbers from the other.","However, there are situations in which the difference calculated at  is a result of a more complex mathematical function, where the first and the second numbers are included as parameters. For example, the first number and the second number may correspond to geographical coordinates, e.g., to longitude and\/or latitude. In such a case, the difference between the two input data elements may correspond to a distance between two or more geographical locations. A special function could be applied to calculate the difference between the first and the second numbers in terms of a geographical distance, e.g., \u201cHaversine formula\u201d. According to another example, the identified first and second numbers may correspond to calendar dates. Then, the difference between the numbers may be calculated as a period of times between the dates, e.g., measured in months, days, hours, etc.","At , a check is performed whether the difference between the numbers is less than allowed, e.g., less than a predefined maximum value. Depending on the kind of data that is compared, the maximum allowed difference specifies a threshold for the matching algorithm. In one embodiment, a highest matching score between the two data elements is achieved when there is no difference between the identified numbers. When the difference is less than the allowed, the matching score is evaluated at  based on the proportion between the calculated value and the maximum allowed value of the difference.","At , a check is performed whether the difference equals the maximum allowed value. If the difference equals the allowed level, the matching between the two data elements is at the threshold. At , the matching score is set to a base score corresponding to the maximum allowed difference. When the calculated difference between the identified first and second numbers is greater than the maximum allowed, the matching score is set to a minimum score at , e.g. set to zero. The minimum matching score corresponds to absence of proximity that suggests a match between the input data elements. In one embodiment, the matching score is set to another predefined value at , e.g. a fail score, when the data quality check is not successful. The process  ends at  with presenting the level of matching between the first data element and the second data element based on the evaluated matching score.","In one embodiment, the difference between the identified numbers could be calculated in two parts at . A first difference between the first number and a predefined \u201cmaster\u201d value, and a second difference between the second number and the predefined \u201cmaster\u201d value are initially calculated. Then the difference between the numbers is calculated as a function of the first difference and the second difference. For example, the difference between the numbers may equal the greater of the first difference and the second difference. Thus, data elements with small mutual proximity, but with high proximity to a third data element may be detected as matching. For example, let the data elements correspond to metal rods with different lengths. It may be defined that rods with difference in their length less than 3 mm are identical. However, it may also be defined that all rods with length within 3 mm from the length of a given \u201cmaster\u201d rod are identical as well. Then if a first rod is 3 mm longer than the \u201cmaster\u201d rod, and the second rod is 2 mm shorter than the \u201cmaster\u201d rod, the first and the second rods will still be treated as identical despite the difference of 5 mm between them.","An exemplary embodiment of the described algorithm could be found in \u201cData Services\u201d application provided in SAP BusinessObjects\u2122 platform of SAP AG. A numeric difference match algorithm (NDMA) is integrated into \u201cMatch Transform\u201d functionality of the \u201cData Services\u201d product, and is used to determine the proximity between two or more string data elements containing numeric characters. The algorithm may return the resulting matching score in a user-specified manner. The variants of the NDMA for determining proximity between numbers, geographical locations, dates, etc. are available as alternative options in the \u201cData Services\u201d. In one embodiment, option characteristics of the different variants of the NDMA could be specified by a user in a \u201cMatch Editor\u201d interface of the \u201cData Services\u201d application. The specified options could be saved in Extensible Markup Language (XML) format in a dataflow used by the \u201cData Services\u201d. When data elements (e.g., data records, data fields) are compared, a NDMA object is instantiated as specified. The NDMA objects execute or invoke appropriate programming code for generating matching scores.","In one embodiment, the Numeric Difference Match Algorithm involves several option parameters for adjusting match scores in different scenarios. The \u201cMAX_DIFFERENCE\u201d attribute option specifies the maximum difference allowed. Any difference greater than the \u201cMAX_DIFFERENCE\u201d will receive a minimum matching score of \u201c0\u201d. A difference that equals the \u201cMAX_DIFFERENCE\u201d will receive a score of \u201cMAX_DIFFERENCE_SCORE\u201d. Any difference less than \u201cMAX_DIFFERENCE\u201d will receive a proportional score between \u201cMAX_DIFFERENCE_SCORE\u201d and maximum score of \u201c100\u201d. The valid values for the \u201cMAX_DIFFERENCE\u201d attribute may range from \u201c0\u201d to \u201cMAX_UNIT\u201d. The valid values for the \u201cMAX_DIFFERENCE_SCORE\u201d attribute may range from 0 to 100. For example, suppose the \u201cMAX_DIFFERENCE\u201d is 10 and the \u201cMAX_DIFFERENCE_SCORE\u201d is 80. Table 2 shows the scores that could be generated depending on the calculated difference:",{"@attributes":{"id":"p-0047","num":"0046"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Difference","Score"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"0","100"]},{"entry":[{},"1","98"]},{"entry":[{},"2","96"]},{"entry":[{},"3","94"]},{"entry":[{},"4","92"]},{"entry":[{},"5","90"]},{"entry":[{},"6","88"]},{"entry":[{},"7","86"]},{"entry":[{},"8","84"]},{"entry":[{},"9","82"]},{"entry":[{},"10","80"]},{"entry":[{},"11","0"]},{"entry":[{},"12","0"]},{"entry":[{},". . .",{}]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"In general, a proportional matching score may be calculated by using the following rules:\n\n",{"@attributes":{"id":"p-0049","num":"0053"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":["matching","score"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},{"mrow":[{"mo":["\u201c","\u201d"],"mrow":{"mi":["MAX_DIFFERENCE","_SCORE"],"mo":"\u2062"}},{"mo":["(",")"],"mrow":{"mrow":[{"mo":["(",")"],"mrow":{"mrow":[{"mo":["(",")"],"mrow":{"mn":"100","mo":"-","mrow":{"mo":["\u201c","\u201d"],"mrow":{"mi":["MAX_DIFFERENCE","_SCORE"],"mo":"\u2062"}}}},{"mo":["\u201c","\u201d"],"mi":"MAX_DIFFERENCE"}],"mo":"\/"}},{"mo":["(",")"],"mrow":{"mrow":[{"mo":["\u201c","\u201d"],"mi":"MAX_DIFFERENCE"},{"mi":["calculated","difference"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}}],"mo":"-"}}],"mo":"*"}}],"mo":"+"}],"mo":"="}}}},"These rules allow evaluation of a proportional matching score between the \u201cMAX_DIFFERENCE_SCORE\u201d and \u201c100\u201d based on the actual difference value calculated within the tolerance of \u201cMAX_DIFFERENCE\u201d. The \u201cMAX_DIFFERENCE\u201d defines the maximum difference between two data elements beyond which the matching score is set to \u201c0\u201d.","In one embodiment, \u201cDATA_QUALITY_CHECK\u201d options are provided in the Numeric Difference Match Algorithm to handle situations where invalid data is encountered in any of the data items to be compared. The execution of this part of the NDMA may be optional, and could be repeated over the input data elements. The \u201cDATA_QUALITY_CHECK\u201d attribute \u201cCHECK\/TYPE\u201d specified what kind of invalid data to check for. For example, valid values for this attribute are:\n\n","Another attribute of \u201cDATA_QUALITY_CHECK\u201d is \u201cCHECK\/SCORE\u201d that specifies what score to return if the invalid data specified in the \u201cCHECK\/TYPE\u201d attribute is encountered. In one embodiment, the valid values for this required attribute can range from 0 to 100. In general, the optional data quality checks allow for adjustments in the numeric difference match algorithm scoring for various special cases.",{"@attributes":{"id":"p-0053","num":"0064"},"figref":"FIG. 5","b":["500","510","505","515","520","520","510"]},"Table 3 shows a sequence of operations to illustrate the functionality of \u201cMatch Transform\u201d  using algorithm objects:",{"@attributes":{"id":"p-0055","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Order","Operation","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","PerTransformInit( )","gets invoked by the DS platform"]},{"entry":["2","Call SaveSettings( )","With transform options"]},{"entry":["3","Get object","Get algorithm object from settings, if any"]},{"entry":["4","Create","Create one or more defined"]},{"entry":[{},"\u201cAlgNumericDiff\u201d","\u201cAlgNumericDiff\u201d objects 525"]},{"entry":["5","Pass","Pass \u201clogfile ptr\u201d of \u201cMatch Transform\u201d"]},{"entry":[{},{},"to \u201cAlgNumericDiff\u201d objects"]},{"entry":["6","Pass options","Pass and numeric difference options settings"]},{"entry":[{},{},"to each AlgNumericDiff object and invoke"]},{"entry":[{},{},"\u201cSaveSettings( )\u201d method"]},{"entry":["7","Save pointers","\u201cMatch Transform\u201d saves a map of pointers"]},{"entry":[{},{},"to any algorithm objects to use later from"]},{"entry":[{},{},"ProcessCollection( )"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"The Numeric Difference Match Algorithm could be applied to compare a number of data elements contained in an input set of data elements. For example, the set of data elements could be a data record, or a data string. In this case, the input data string could be parsed in order to identify a number of separate data elements, e.g., words. The words could be then compared with each other to evaluate matching scores. For a better understanding, the input data string could be illustrated as a list of bus passengers, where one or more of the passengers is a bus driver. Every passenger entry in the list may have different names, and one or more numbers assigned as identifier (ID). A comparison between the passengers using NDMA could be accomplished to identify matching scores between the IDs of the passengers and drivers.","Referring back to , the parsing of the first and second data elements may be accomplished whenever \u201cSetData( )\u201d is called from the \u201cMatchTransform\u201d class. The input data string is preprocessed, and the numbers found are saved in the NDMA algorithm object either as driver or as passenger words. Further, Table 4 contains an exemplary pseudo-code listing of the process sequence the \u201cMatch Transform\u201d invokes corresponding to the Numeric Difference Match Algorithm. The comparison eventually takes place after \u201cProcessCollection( )\u201d method is called by the \u201cData Services\u201d platform:",{"@attributes":{"id":"p-0058","num":"0069"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":[{},"Pseudo-code listing"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Algorithm compare defined?"]},{"entry":[{},"if (algorithm != 0)"]},{"entry":[{},"{"]},{"entry":[{},"\u2003\/\/ Let the algorithm knows about any new data."]},{"entry":[{},"\u2003\/\/ Note: only call SetData( ) when the data actually"]},{"entry":[{},"\u2003\/\/ changes because a driver will likely be compared to many"]},{"entry":[{},"\u2003\/\/ passengers, so there is no need change the input driver"]},{"entry":[{},"\u2003\/\/data element until the corresponding word is changes"]},{"entry":[{},"\u2003if (newDriverData)\u2003\/\/Change?"]},{"entry":[{},"\u2003{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Set the data."]},{"entry":[{},"algorithm.SetData("]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RecordTypeDriver,"]},{"entry":[{},"\u2002driverBuffer,"]},{"entry":[{},"\u2002datalen,"]},{"entry":[{},"\u2002localeName);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003}"]},{"entry":[{},"\u2003if (newPassengerData)\u2003\/\/Change?"]},{"entry":[{},"\u2003{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Set the data."]},{"entry":[{},"algorithm.SetData("]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RecordTypePassenger,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002passengerBuffer,"]},{"entry":[{},"\u2002datalen,"]},{"entry":[{},"localeName);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003}"]},{"entry":[{},"-----"]},{"entry":[{},"\u2003\/\/ Compare the field between the driver and passenger"]},{"entry":[{},"\u2003score = algorithm.Compare( );"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"The \u201cCompare( )\u201d method is invoked by the \u201cMatchTransform\u201d to perform the rest of the actions presented in . The following Table 5 enlists a pseudo-code example of an embodiment of the matching algorithm showing the operations corresponding to the \u201cCompare( )\u201d method:",{"@attributes":{"id":"p-0060","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 5"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Pseudo-code listing"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"CalculateScore("}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002Boolean isFailedCheck [OUT],"]},{"entry":[{},"\u2002Integer dqCheckNum [OUT],"]},{"entry":[{},"\u2002Integer scoreToUse [OUT])"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"{"},{"entry":"\u2002scoreToUse = 0;"},{"entry":"\u2002\/\/ Check for a number word in both passenger and driver"},{"entry":"\u2002if (!driver.numWord OR !pass.numWord)"},{"entry":"\u2002{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return; \/\/ scoreToUse is 0"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2002}"},{"entry":"\u2002\/\/ Do the data quality checks, if any"},{"entry":"\u2002DoDataQualityChecks(isFailedCheck, dqCheckNum, scoreToUse);"},{"entry":"\u2002\/\/ if we failed the checks then we are done. We use the score"},{"entry":"\u2002\/\/ returned from the check call."},{"entry":"\u2002if (isFailedCheck)"},{"entry":"\u2002{"},{"entry":"\u2003return;"},{"entry":"\u2002}"},{"entry":"\u2002\/\/ find the actual difference between the driver and passenger"},{"entry":"\u2002Double actualNumDifferences = 0.0;"},{"entry":"\u2002\/*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2002* 1)","actual # differences > MAX_DIFFERNCE \u2212> match score = 0"]},{"entry":["\u2002*",{}]},{"entry":["\u2002* 2)","actual # differences ="]},{"entry":["\u2002*","\u2002MAX_DIFFERENCE \u2212> match score ="]},{"entry":[{},"\u2002MAX_DIFFERENCE_SCORE"]},{"entry":["\u2002*",{}]},{"entry":["\u2002* 3)","actual # differences <MAX_DIFFERENCE\u2212> match score ="]},{"entry":["\u2002*",{}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2002*\u2003MAX_DIFFERENCE_SCORE +"},{"entry":"\u2002*\u2003\u2002(((100 \u2212 MAX_DIFFERENCE_SCORE) \/"},{"entry":"\u2002*\u2003\u2003MAX_DIFFERENCE) * (MAX_DIFFERENCE \u2212 actual #"},{"entry":"\u2003\u2003\u2003differences))"},{"entry":"\u2002*\/"},{"entry":"\u2002\/\/ condition 1) from above ? if so score \u2212> 0"},{"entry":"\u2002if (actualNumDifferences > mMaxDifferencesAllowed)"},{"entry":"\u2002{"},{"entry":"\u2003scoreToUse = 0;"},{"entry":"\u2002}"},{"entry":"\u2002\/\/condition 2) from above? if so score \u2212>"},{"entry":"\u2002MAX_DIFFERENCE_SCORE"},{"entry":"\u2002else if (actualNumDifferences == mMaxDifferencesAllowed)"},{"entry":"\u2002{"},{"entry":"\u2003scoreToUse = mMaxDifferenceScore;"},{"entry":"\u2002}"},{"entry":"\u2002\/\/ 3) from above apply the formula --"},{"entry":"\u2002\/\/\u2003actualNumDifferences , mMaxDifferencesAllowed"},{"entry":"\u2002else"},{"entry":"\u2002{"},{"entry":"\u2003scoreToUse = maxDifferenceScore +"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"(((100.0 \u2212 maxDifferenceScore) \/"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"maxDifferencesAllowed) *"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"(maxDifferencesAllowed \u2212 actualNumDifferences));"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2002}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0061","num":"0072"},"figref":"FIG. 6","b":["600","600"],"ul":{"@attributes":{"id":"ul0007","list-style":"none"},"li":{"@attributes":{"id":"ul0007-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0008","list-style":"none"},"li":["Data argumentation with Break Groups;","Candidate Selection for pulling in external sources;","Multi-level matching, e.g., Family, Individual, etc., for addressing hierarchical relationships;","Criteria matching on multiple sources and fields;","Match algorithm options based on numerous configurable Comparison Rules;","Controlling comparison of scores, e.g., by using Compare Table, etc.;","Post Match Processing, including creating match statistics, generating best record, assigning unique identifiers, etc.;","Global matching options; etc."]}}}},"The match editor UI  is divided in several areas corresponding to different configuration contexts. For example, in \u201cperform matching\u201d area  the matching criteria could be selected. As illustrated in  by underlining, \u201cNUMSTRING\u201d matching criteria is selected. Buttons \u201cAdd\u201d  and \u201cRemove\u201d  help adding new items in \u201cperform matching\u201d area, e.g., adding new or removing existing matching criteria.","In \u201cmatch criteria editor\u201d area  of match editor UI , the characteristics of the criteria selected in \u201cperform matching\u201d area  could be defined. For example, criteria name could be changed in text box control . An appropriate compare algorithm to be used by the criteria could be selected from drop-down control . A number of editable parameters presented in table  may specify a set of pre-comparison options, e.g., whether to perform pre-processing data operations of the input data elements. Table  enlists a set of comparison rules pertinent to the selected match algorithm. In one embodiment, buttons  to  help managing the parameter values associated with the set of comparison rules.","Based on the selected compare algorithm, the table  is filtered to show an appropriate set of options. As illustrated by , the \u201cData Services\u201d application is set to compare data using \u201cNumeric Difference\u201d algorithm. A difference equals to \u201cMax Difference\u201d parameter will receive a score of \u201cMax Difference Score\u201d. Any difference less than \u201cMax Difference\u201d will receive a proportional score between \u201cMax Difference Score\u201d and 100. Accordingly, \u201c3\u201d units difference will have a higher score than \u201c8\u201d units. The \u201cNo Match Score\u201d parameter should be set to less than \u201cMax Difference Score\u201d Otherwise, even data elements within the range will not be found as duplicates. In the given example, data elements with difference lower than \u201c3\u201d units will be considered matching, and corresponding match scores will be evaluated. The matching score may be evaluated as a percent difference between the numeric values of the compared data elements.","The match editor UI  could be used to specify different applications of the NDMA for evaluating proximity between data elements. Similar to numerical difference match, geographical proximity could be evaluated based on latitude and longitude information, or Global Positioning System (GPS) coordinates. For example, new criteria could be added or selected in \u201cperform matching\u201d area . Then, in the \u201cmatch editor\u201d area , an appropriate algorithm to compare data elements could be selected from the drop-down control . In one embodiment, the selected algorithm applies the same approach for identifying and matching numeric data used by the NDMA, but instead of directly calculating the numerical difference between the data elements, an appropriate function for geographical proximity is applied (e.g. Haversine formula).","When the appropriate algorithm for evaluating geographical proximity is selected in the drop-down control , the corresponding option parameters may be loaded in the \u201cPre-Comparison Options\u201d table  and in \u201cComparison Rule\u201d table . The basic parameters that are necessary for evaluating matching score are defined. For example, \u201cMax Difference\u201d parameter may be specified as maximum allowed distance between two matching geographical locations, e.g., 10 miles. Respectively, corresponding \u201cMax Difference Score\u201d, \u201cMatch Score\u201d and \u201cNo Match Score\u201d are specified.","Another algorithm based on the NDMA could be applied for evaluating matching score for dates. For example, the dates in a particular range of days (period) could be treated as duplicate. The dates to be compared are identified in the input data elements, e.g., by converting the data types of subsets of numerical characters selected from the input data elements.","Some embodiments of the invention may include the above-described methods being written as one or more software components. These components, and the functionality associated with each, may be used by client, server, distributed, or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as, functional, declarative, procedural, object-oriented, lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively, the components may be implemented in server and client applications. Further, these components may be linked together via various distributed programming protocols. Some example embodiments of the invention may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example, a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level (e.g., a graphical user interface). These first and second computer systems can be configured in a server-client, peer-to-peer, or some other configuration. The clients can vary in complexity from mobile and handheld devices, to thin clients and on to thick clients or even other servers.","The above-illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store, encode, or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described, represented, or illustrated herein. Examples of computer readable storage media include, but are not limited to: magnetic media, such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROMs, DVDs and holographic devices; magneto-optical media; and hardware devices that are specially configured to store and execute, such as application-specific integrated circuits (\u201cASICs\u201d), programmable logic devices (\u201cPLDs\u201d) and ROM and RAM devices. Examples of computer readable instructions include machine code, such as produced by a compiler, and files containing higher-level code that are executed by a computer using an interpreter. For example, an embodiment of the invention may be implemented using Java, C++, or other object-oriented programming language and development tools. Another embodiment of the invention may be implemented in hard-wired circuitry in place of, or in combination with machine readable software instructions.",{"@attributes":{"id":"p-0070","num":"0089"},"figref":"FIG. 7","b":["700","700","705","755","700","740","755","710","715","710","715","705","715","700","725","730","700","725","730","700","735","700","750","750","700","745","700","720","760","760","760","750","760"]},"A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases, such as, relational, transactional, hierarchical, multi-dimensional (e.g., OLAP), object oriented databases, and the like. Further data sources include tabular data (e.g., spreadsheets, delimited text files), data tagged with a markup language (e.g., XML data), transactional data, unstructured data (e.g., text files, screen scrapings), hierarchical data (e.g., data in a file system, XML data), files, a plurality of reports, and any other data source accessible through an established protocol, such as, Open DataBase Connectivity (ODBC), produced by an underlying software system (e.g., ERP system), and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams, broadcast data, and the like. These data sources can include associated data foundations, semantic layers, management systems, security systems and so on.","In the above description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however that the invention can be practiced without one or more of the specific details or with other methods, components, techniques, etc. In other instances, well-known operations or structures are not shown or described in details to avoid obscuring aspects of the invention.","Although the processes illustrated and described herein include series of steps, it will be appreciated that the different embodiments of the present invention are not limited by the illustrated ordering of steps, as some steps may occur in different orders, some concurrently with other steps apart from that shown and described herein. In addition, not all illustrated steps may be required to implement a methodology in accordance with the present invention. Moreover, it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.","The above descriptions and illustrations of embodiments of the invention, including what is described in the Abstract, is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of, and examples for, the invention are described herein for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as those skilled in the relevant art will recognize. These modifications can be made to the invention in light of the above detailed description. Rather, the scope of the invention is to be determined by the following claims, which are to be interpreted in accordance with established doctrines of claim construction."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The claims set forth the embodiments of the invention with particularity. The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. The embodiments of the invention, together with its advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
