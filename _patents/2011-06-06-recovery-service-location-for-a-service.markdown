---
title: Recovery service location for a service
abstract: A secondary location of a network acts as a recovery network for a primary location of the service. The secondary location is maintained in a warm state that is configured to replace the primary location in a case of a failover. During normal operation, the primary location actively services user load and performs backups that include full backups, incremental backups and transaction logs that are automatically replicated to the secondary location. Information is stored (e.g. time, retry count) that may be used to assist in determining when the backups are restored correctly at the secondary location. The backups are restored and the transaction logs are replayed at the secondary location to reflect changes (content and administrative) that are made to the primary location. After failover to the secondary location, the secondary location becomes the primary location and begins to actively service the user load.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08938638&OS=08938638&RS=08938638
owner: Microsoft Corporation
number: 08938638
owner_city: Redmond
owner_country: US
publication_date: 20110606
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Web-based services include files that are located on web servers along with data that is stored in databases. For example, there are a large number of servers to handle the traffic that is directed to the service. In some cases, a service may catastrophically fail causing work to be lost. Transitioning operations to a new service can be an expensive, time consuming process.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used as an aid in determining the scope of the claimed subject matter.","A secondary location of a network acts as a recovery network for a primary location of the service. The secondary location is maintained in a warm state that is configured to replace the primary location in a case of a failover. During normal operation, the primary location actively services user load and performs backups that include full backups, incremental backups and transaction logs that are automatically replicated to the secondary location. Information is stored (e.g. time, retry count) that may be used to assist in determining when the backups are restored correctly at the secondary location. The backups are restored and the transaction logs are replayed at the secondary location to reflect changes (content and administrative) that are made to the primary location. After failover to the secondary location, the secondary location becomes the primary location and begins to actively service the user load.","Referring now to the drawings, in which like numerals represent like elements, various embodiment will be described.","Generally, program modules include routines, programs, components, data structures, and other types of structures that perform particular jobs or implement particular abstract data types. Other computer system configurations may also be used, including hand-held devices, multiprocessor systems, microprocessor-based or programmable consumer electronics, minicomputers, mainframe computers, and the like. Distributed computing environments may also be used where jobs are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1","b":["100","105","1","2","1","2","105","150"]},"As illustrated, cloud manager  comprises work manager , machine manager , application specific manager , scripts , recovery manager  and a central repository, such as data store(s)  (e.g. databases). The functionality that is not included within one of the illustrated managers may reside in some other location of the cloud manager. According to one embodiment, application manager  is a SharePoint tenant manager that comprises SharePoint specific logic.","Generally, cloud manager  assists in deploying and managing networks for an online service, such as an online content management service. The cloud manager system is a central coordination service that receives requests to perform operations relating to configuring, updating and performing jobs in networks that are used in providing the online service. For example, the cloud manager may be called to manage assets within one or more of the networks (e.g. Servers, Farms, User Properties, and the like). The management of the assets may comprise deploying machines, updating machines, removing machines, performing configuration changes on servers, Virtual Machines (VMs), establishing and maintaining recovery networks, as well as performing other jobs relating to the management. The cloud manager is configured to provide service for attached networks even during upgrades to the cloud manager. The cloud manager is configured to receive requests through an idempotent and asynchronous application programming interface (API) that cannot rely on a reliable network.","As illustrated, Network  and Network  are live networks that are actively servicing users. Secondary Network  and Secondary Network  are secondary networks that mirror the content and configuration of the corresponding live networks. The secondary networks are not actively service users while the primary network is active. According to an embodiment, the secondary networks are kept \u201cwarm\u201d such that the user load from the primary networks may be quickly switched to the secondary networks in case of an outage\/disaster\/failover.","The primary networks are configured to perform back-ups (full, incremental) including SQL transaction log backups that are routinely and frequently taken. According to an embodiment, full backups are performed weekly, incremental backups are performed daily and transaction logs are updated each five minutes (other times may be used). The backups from the primary networks (e.g. Network  and ) are replicated to the secondary networks (e.g. Secondary Network  and ) after they are created (e.g. Distributed File System Replication (DFSR). According to an embodiment, the secondary networks replay the transaction logs as they are received from the corresponding primary network. Administrative operations that occur on the live primary network are automatically replayed on the corresponding warm secondary network such that the primary network and the secondary network remain synchronized in a timely manner.","Work manager  manages the execution of jobs and enables scheduling and retry of longer running jobs. Work manager  starts jobs stored in job queue  and keeps track of running jobs. When a predetermined time has elapsed, work manager  may automatically cancel the task and perform some further processing relating to the task. According to one embodiment, the jobs in job queue  are executed by work manager  by invoking one or more scripts . For example, a scripting language such as Microsoft's PowerShell\u00ae may be used to program the jobs that are executed by work manager . Each script may be run as a new process. While executing each script as a new process may have a fairly high CPU overhead, this system is scalable and helps to ensure a clean environment for each script execution plus full cleanup when the script is completed.","When jobs are to be submitted at a secondary location (e.g. in response to a failover to the secondary location, a configuration change to a primary network that is to be reflected in the secondary network), work manager  may be used in determining the jobs that are to be submitted. For example, work manager  may determine the jobs that are submitted to be performed at a primary location of a service and submit corresponding jobs to the secondary location.","Machine manager  is configured to manage the physical machines in the networks (e.g. Network , Network , Secondary Network , Secondary Network ). Generally, machine manager  understands Networks, Physical Machines, Virtual Machines (VMs), VM Images (VHDs), and the like. The machine manager does not have a strong binding to the specific services running within the networks but keeps track of the various components in the networks in terms of \u201croles.\u201d For example machine manager  could be requested through API  to deploy a VM of type \u201cFoo\u201d with version 12.34.56.78 on Network . In response to a request to cloud manager , machine manager  locates a suitable Physical Machine that is located on Network  and configures the VM according to the VM Image associated with the VM's Role. The physical machine is configured with a VHD of type Foo with version 12.34.56.78 that is stored within a data store, such as data store . A corresponding change is made to secondary network . The images used within the network may also be stored in other locations, such as a local data share for one or more of the networks. Scripts may be run to perform the installation of the VHD on the physical machine as well as for performing any post-deployment configuration. Machine manager  keeps track of the configuration of the machines each network. For example, machine manager  may keep track of a VM's role (type of VM), state of the VM (Provisioning, Running, Stopped, Failed), version and whether the VM exists in a given farm (which implies their network).","The configuration database  contains a map of each of the networks. For example, the configuration database  may include information relating to each of the farms, databases, site collections, and the like of a network. The configuration database  may include a row for each physical machine, VM, farm, and the like for each network. According to an embodiment, each VHD, Farm, and VM within a network has an associated version string.","Scripts  is configured to store scripts that are executed to perform work both locally for cloud manager  and remotely on one or more of the networks. One or more of the scripts  may also be stored in other locations. For example, scripts to be performed on a network (e.g. Network , Network ) may be stored locally to that network. The scripts may be used for many different purposes. For example, the scripts may be used to perform configurations of machines in one or more of the networks, changing settings on previously configured machines, add a new VM, add a new database, move data from one machine to another, move tenants, change schemas, and the like. According to one embodiment, the scripts are Microsoft's PowerShell\u00ae scripts. Other programming implementations may be used. For example, a compiled and\/or early-bound programming language may be used to implement the functionality. Scripting, however, is a fairly concise language to express many of the jobs that are to be performed. Programming the equivalent in a programming language, such as C#, would often require much more verbose implementations. The scripts are also late-bound, meaning that multiple versions of underlying code-bases can be targeted without having to constantly link to different interface DLLs. Using PowerShell scripts allows a process to be started locally by cloud manager  that may in turn start a process on a remote machine (i.e. a physical machine in one of the attached networks). Other techniques may also be used to start a process on a remote machine, such as Secure Shell (SSH) and the like. When a script is run at a primary location (e.g. Network ), the script may also be run at the secondary location (e.g. Secondary Network ) such that the primary and secondary locations are configured in a same manner.","Application specific information that cloud manager  is managing is performed by application manager . According to one embodiment, the application specific information relates to Microsoft SharePoint\u00ae. As such, application manager  is configured to know about SharePoint Tenants, Site Collections, and the like.","Each network may be configured as a dedicated network for a tenant and\/or as a multi-tenant network that services more than one client. The networks may include a changing number of physical\/virtual machines with their configuration also changing after deployment. According to an embodiment, the primary location and the secondary location of a service are configured in the same manner.","Generally, a network may continue to grow as long as the networking limits (e.g. load balancer and network switches) are not exceeded. For example, a network may start out with ten servers and later expand to one hundred or more servers. As the primary network changes, the corresponding secondary network is automatically changed to reflect the changes made to the primary network. The physical machines within a network may be assigned a class or type. For example, some of the machines may be compute machines (used for web front ends and app servers) and other machines may be storage machines that are provisioned with more storage than compute machines. According to an embodiment, cloud manager  configures the machines within a network with multiple versions of the image files. According to an embodiment, farms usually have a same version of image files.","According to one embodiment, the software limits are managed by the cloud manager system  within the network by virtualizing the machines and managing independently acting \u201cFarms\u201d inside the network. Each network may include one or more farms (e.g. see Network ). According to one embodiment, a network is considered a single cluster of network load balanced machines that expose one or more VIP (Virtual IP) to the outside world and can route that traffic to any of the machines within the network. The machines in the network generally are tightly coupled and have minimum latencies (i.e. <1 ms ping latency).","Farms are the basic grouping of machines used to coordinate applications that need tightly bound relationships. For example, content farms may be deployed within each of the networks for a content management application, such as Microsoft SharePoint\u00ae. Generally, the set of machines in each of the farms provide web service and application server functions together. Typically, the machines inside the farm are running the same build of an application (i.e. SharePoint) and are sharing a common configuration database to serve specific tenants and site collections.","Farms can contain heterogeneous sets of virtual machines. Cloud manager  maintains a \u201cfarm goal\u201d within data store  which is a target number of machines of each role for each farm. Some roles include Content Front End, Content Central Admin, Content Timer Service, Federated Central Admin, Federated App Server etc. For example, content farms are the basic SharePoint farm that handles incoming customer requests. Federated Services farms contain SharePoint services that can operate cross farms such as search and the profile store. Farms may be used for hosting large capacity public internet sites. Some farms may contain a group of Active Directory servers and a Provisioning Daemon. Cloud manager  automatically deploys and\/or decommissions virtual machines in the networks to help in meeting the defined target. These farms goals may be automatically and\/or manually configured. For example, the farm goals may change to respond to changes in activity and capacity needs. Network Farm\u2014there is one network farm per Network that contains all the VM roles that scale out easily as a resource to the whole Network.","The Cloud Manager Web Service APIs  are designed to work in the context of a massively scalable global service. The APIs assume that any network request might fail and\/or hang in transit. Calls to cloud manager  are configured to be idempotent. In other words, the same call may be made to cloud manager  multiple times (as long as the parameters are identical) without changing the outcome.","Cloud manager  maintains records to keep track of current requests to a service. For example, cloud manager  updates records in a local database and if necessary schedules a \u201cjob\u201d to perform more lengthy activity later.","Cloud manager  keeps track of Images (such as Virtual Disk Images) that are the templates used to deploy new machines within a network. The Image references may be stored in a database, such as database , and\/or in some other location. The images may be stored in one or more shared data stores that are local to the network(s) on which the image will be deployed. According to one embodiment, each Image includes a virtual machine (VM) role type that specifies the type of VM it can deploy, the number of processors that it should use, the amount of RAM that it will be assigned, a network ID used to find a nearby install point (so they don't get copied repeatedly over the cross data-center links) and a share path that the deployment code can use to access the VHD.","Generally, machines in the networks being managed by cloud system  are not upgraded in the traditional manner by downloading data and incorporating the data into the existing software on the machine. Instead, machines are updated by replacing a VHD with an updated VHD. For example, when a new version of software is needed by a farm, a new farm is deployed that has the new version installed. When the new farm is deployed, the tenants are moved from the old farm to the new farm. In this way, downtime due to an upgrade is minimized and each machine in the farm has a same version that have been tested. When a virtual machine needs to be upgraded, the VM on the machine may be deleted and replaced with the VM that is configured to run the desired service.","While upgrades to existing software are not optimal, some servers within the networks do utilize the traditional update procedure of an in-place upgrade. For example, Active Directory Domain Controllers are upgraded by updating the current software on the server without completely replacing an image on the machine. The cloud manager may also be upgraded in place in some instances.","According to one embodiment, the cloud manager includes a logging system that is configured to record a log entry for each web service call. A logging system may be implemented that includes as few\/many features as desired.","Mapping table  comprises a mapping of parameters (e.g. identifiers and\/or secrets) that are associated with the primary network to the secondary network. For example, there are mappings between databases, farms and networks that are associated with a primary location of a service (e.g. Primary Network  and ) to the corresponding databases, farms and networks that are associated with a secondary location of a service (e.g. Secondary Network  and ).","Recovery manager  is configured to assist in maintaining a secondary location of a network that acts as a recovery network for a primary location of the service. The secondary location is maintained in a warm state that is configured to replace the primary location in a case of a failover. During normal operation, the primary location actively services user load and performs backups that include full backups, incremental backups and transactions logs that are automatically provided to the secondary location. The filenames of the backups and transaction logs include information that may be used to assist in determining when the backups are restored correctly at the secondary location. The backups are restored and the transaction logs are replayed at the secondary location to reflect changes (content and administrative) that are made to the primary location. After failover to the secondary location, the secondary location becomes the primary location and begins to actively service the user load.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 2","b":["200","210","220","230","240"]},"The computing devices used may be any type of computing device that is configured to perform the operations relating to the use of the computing device. For example, some of the computing devices may be: mobile computing devices (e.g. cellular phones, tablets, smart phones, laptops, and the like); some may be desktop computing devices and other computing devices may be configured as servers. Some computing devices may be arranged to provide an online cloud based service (e.g. service  and service ), some may be arranged as data shares that provide data storage services, some may be arranged in local networks, some may be arranged in networks accessible through the Internet, and the like.","The computing devices are coupled through network . Network  may be many different types of networks. For example, network  may be an IP network, a carrier network for cellular communications, and the like. Generally, network  is used to transmit data between computing devices, such as service , service , cloud manager  and computing device(s) .","Computing device(s)  includes application , Web browser  and user interface . As illustrated, computing device  is used by a user to interact with an online service, such as service . According to an embodiment, service  and  is a multi-tenancy service. Generally, multi-tenancy refers to the isolation of data (sometimes including backups), usage and administration between customers. In other words, data from one customer (tenant ) is not accessible by another customer (tenant ) even though the data from each of the tenants may be stored within a same database within the same data store.","User interface (UI)  is used to interact with various applications that may be local\/non-local to computing device . One or more user interfaces of one or more types may be used to interact with content. For example, UI  may include the use of a context menu, a menu within a menu bar, a menu item selected from a ribbon user interface, a graphical menu, and the like. Generally, UI  is configured such that a user may easily interact with functionality of an application. For example, a user may simply select an option within UI  to request an action from the service.","As illustrated, content data stores  and \u2032 include tenant data, including corresponding backup data and logs, for different tenants. Application data store  includes application data, including corresponding backup data and logs for different applications that are associated with the service. A data store may store all\/portion of a tenant's\/application's data. For example, some tenants\/applications may use more than one data store, whereas other tenants\/applications share the data store with many other tenants\/applications. While the corresponding backup data for a tenant\/application is illustrated within the same data store, the backup data may be stored at other locations. For example, one data store may be used to store tenant data and one or more other data stores may be used to store the corresponding backup data. Similarly, backups and logs for one or more applications may be stored in different data stores. Generally, the data in data store \u2032 and data store \u2032 is a mirror of the data in data store  and data store .","Changes made to data that is associated with the primary service  (i.e. data relating to administrative changes and tenant data) is mirrored to the secondary service . According to an embodiment, full backups (e.g. weekly), incremental backups (e.g. hourly, daily) and transaction logs are used in maintaining the changes made. According to an embodiment, the changes made to the primary service are copied to the secondary service such that the secondary service remains substantially synchronized with the primary service (e.g. within five, ten minutes). Periodically, the data that is copied to the secondary service is verified to help ensure that the data has been correctly replicated. Different methods may be used to perform the verification (e.g. checksums, hash functions, and the like). Data store  includes data relating to operation and\/or configuration of the service (e.g. service , service ). For example, data store  may comprise a job queue, mapping table and\/or configuration database.","According to an embodiment, DFSR is used to automatically copy content from primary service  to service . DFSR uses Remote Differential Compression (RDC). Generally, RDC detects insertions, removals, and rearrangements of data in files, enabling DFSR to replicate the deltas (changes) when files are updated. The DFSR service uses RPC to communicate between servers. It replicates a folder scope defined by the replicated folder path. The set of computers participating in replication is defined by a configured topology of connections and is called a replication group. Multiple replicated folders can be included in a replication group, with memberships selectively enabling or disabling specific replicated folders. The DFSR service uses Windows Management Instrumentation (WMI) to configure server-wide parameters, while global parameters and certain replicated folder-specific parameters are configured using Active Directory. DFSR also uses WMI to expose monitoring information regarding specific objects such as replicated folders and connections. According to an embodiment, DFSR is configured to have a staging area sized to handle a large amount of data and to move the data in a one-way direction from the primary service  to the secondary service . The file shares at the primary location and the secondary location may have different names.","According to an embodiment, Active Directory (AD) replication is used to synchronize Directory Services data between the primary service  and the secondary service . Other file replication methods may be used in place of DFSR and AD.","Service  is configured as a primary location for an online service that is configured to provide services relating to displaying an interacting with data from multiple tenants. Service  provides a shared infrastructure for multiple tenants. According to an embodiment, the service  is MICROSOFT'S SHAREPOINT ONLINE service. Different tenants may host their Web applications\/site collections using service . A tenant may also use a dedicated alone or in combination with the services provided by service . Service  is configured as a secondary location for a service that is substantially a mirror of service .","Recovery manager  is configured assist in establishing, maintaining and transitioning operations to the secondary location. For example, recovery manager  may be used in the management of the synchronization between the primary service  and the secondary service . Recovery manager  stores information to help ensure that logs and backups are transferred and replayed correctly. For example, the information may include a time (e.g. UTC time) the log\/backup was made such that the logs and backups may be sorted and arranged according to their time. The information may also include other information, such as a database name the backup\/log was made from and a retry count. The retry count is a value that is changed when the backup\/log is read in order to be replayed\/restored. For example, when a log is accessed to be replayed, recovery manager  increments the value of the retry count. When the retry count exceeds a predetermined value (e.g. 2, 3, 4 attempts), recovery manager  may trigger an alert and attempt to address the problem with the log\/backup. A time limit may also be used to help ensure that logs are replayed in a timely manner. For example, when a log is older than some amount of time (e.g. 5, 10, 15 minutes), recovery manager  may trigger an alert and attempt to address the problem with the log\/backup. This information may be stored in different locations. For example, the information may be stored in a backup folder and\/or in some other location that is accessible by replay manager . According to an embodiment, the filenames of the logs may include some\/all of the information to help ensure that logs and backups are transferred and replayed correctly. For example, a filename may take the form \u201cdatabase_year_month_day_hour_minutes_seconds_tlog_retry count.\u201d","Once an alert is raised by recovery manager , the alert is also raised on any successive retries. The alert indicates the amount of time since the last successful restore. The level of the alert may change (i.e. to a critical level from a failure level) after some determined time has elapsed (e.g. 30 minutes).","Upon an alert, a check may be performed (manually\/automatically) to see if the log\/backup exists at the primary location and is not getting copied to the secondary location. When the log\/backup does not exist it can be recreated and\/or another backup may be created.","According to an embodiment, the alert includes the following message string: Event Source: DR Log Replay; Event ID: For database [<dbname>] there is a missing transaction log between [<timestamp UTC>] and the transaction log [<full path to file>.] It has been [<N>] minutes since the last successful restore. The error SQL provided while restoring is: <SQL Error Number <SQL Error Message>.","Recovery manager  is also configured to detect when a transaction log is not received for a period of time (e.g. within the last 15 minutes. In this case, recovery manager  may check the back-up jobs at the primary location and determine: are the backups paused? (e.g. a maintenance procedure such as Database move and Database upgrade may pause the backup process. A check may also be performed (manually\/automatically) to see if the log\/backup exists at the primary location and is not getting copied to the secondary location.","According to an embodiment, when a log\/backup is not received for a period of time, the Alert includes the following message string: Event Source: DR Log Replay; Event ID: For database [<dbname>] there have been no new transaction logs in the last [<N>] minutes.","When the secondary location fails to restore one of the logs due to corruption, an alert is raised by recovery manager . To handle the potentially common case of logs being partially written due to a failover in the middle of generating the backup, the replay job attempts to restore the \u201cnext\u201d log in time. If the \u201cnext\u201d log is successfully restored, recovery manager  ignores the failure. According to an embodiment, the log is retried for 3 times, or 15 minutes, before recovery manager  raises the alert. Once the alert is raised it will continue raising it on successive retries. The alert indicates the amount of time since the last successful restore. When a log is not restored, recovery manager  perform a full back-up of the database at the primary location, deletes the corresponding database at the secondary location and site and recreates the corresponding database at the secondary location by obtaining a copy of the data at the secondary location from the primary location. According to another embodiment, the replay job may be paused and the most recent set of backups and logs may be restores the attempt to move past the hole in chain. According to an embodiment, the alert in this situation comprises the following message string: Event Source: DR Log Replay; Event ID: Errors occurred for database [<dbname>] while restoring the transaction log [<full path to file>.] It has been [<N>] minutes since the last successful restore. The error SQL provided while restoring is: <SQL Error Number><SQL Error Message>.","Referring now to , a process for maintaining and failing over to a secondary location of a service will be described.","When reading the discussion of the routines presented herein, it should be appreciated that the logical operations of various embodiments are implemented (1) as a sequence of computer implemented acts or program modules running on a computing system and\/or (2) as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance requirements of the computing system implementing the invention. Accordingly, the logical operations illustrated and making up the embodiments described herein are referred to variously as operations, structural devices, acts or modules. These operations, structural devices, acts and modules may be implemented in software, in firmware, in special purpose digital logic, and any combination thereof.","After a start operation, the process  flows to operation , where backups and transaction logs are created at the primary location. According to an embodiment, the backups include full backups performed weekly, incremental backups performed daily and SQL transaction logs every five minutes (other times may be used). Some backups may be configured to not include incremental backups and\/or logs. For example, an application\/service provided by the service (e.g. search) may include fewer backups and\/or backups\/logs performed at different times. Information relating to the backups\/logs is stored to assist in the logs and backups being transferred and replayed correctly. For example, the information may include a time (e.g. UTC time) the log\/backup was made such that the logs and backups may be sorted and arranged according to their time. The information may also include other information, such as a database name the backup\/log was made from and a retry count. The retry count is a value that is changed when the backup\/log is read in order to be replayed\/restored. The retry count is updated when the log is accessed to be replayed.","Moving to operation , the backups and logs are replicated to the secondary location for the service. According to an embodiment, the backups and logs are automatically replicated as soon as they are finished using DFSR and AD based algorithms.","Flowing to operation , the content replicated to the secondary location is validated. Different methods may be used to validate that the content has been correctly replicated to the secondary location. For example, hashes, hashes+property of the files may be used to determine if the content has been correctly copied to the secondary location. When the content is not validated, the content may be recreated\/recopied to the secondary location.","Transitioning to operation , the backups are restored at the secondary location and the logs are replayed at the secondary location. According to an embodiment the logs are replayed as soon as they are replicated to the secondary location such that the secondary location remains synchronized with the primary location.","Moving to operation , the restore\/replay operations are monitored to help ensure that the content and actions are correctly performed at the secondary location. An alerting mechanism alerts a user and\/or automatically performs operations to address a problem that occurs when restoring\/replaying backups\/logs. For example, the alerting mechanism is configured to create an alert when: a log\/backup has not been received according to a predetermined schedule; a backup\/log is corrupted; a backlog of backups\/logs exist; and the like.","Flowing to operation , a failover is detected. The failover may be detected in response to a planned\/unplanned event. For example, the failover may be caused by a catastrophic failure at a primary network or may be caused by a determination to stop using a primary network. The failover event may be initiated manually\/automatically. For example, an authorized user may trigger the failover from the primary network to the secondary network or the failover may be automatically triggered based on the detection of one or more conditions (e.g. failure of one or more machines).","Flowing to operation , the secondary location is set as the primary location after the failover. According to an embodiment, the secondary location receives the requests directed to the primary location after the secondary location is synchronized with the primary location. When the secondary location becomes the primary location, mirroring is established at the secondary location and another recovery network may be established for the new primary location.","The process then moves to an end operation and returns to processing other actions.","Referring now to , an illustrative computer architecture for a computer  utilized in the various embodiments will be described. The computer architecture shown in  may be configured as a server, a desktop or mobile computer and includes a central processing unit  (\u201cCPU\u201d), a system memory , including a random access memory  (\u201cRAM\u201d) and a read-only memory (\u201cROM\u201d) , and a system bus  that couples the memory to the central processing unit (\u201cCPU\u201d) .","A basic input\/output system containing the basic routines that help to transfer information between elements within the computer, such as during startup, is stored in the ROM . The computer  further includes a mass storage device  for storing an operating system , application programs , data store , files, and a cloud program  relating to execution of and interaction with the cloud system .","The mass storage device  is connected to the CPU  through a mass storage controller (not shown) connected to the bus . The mass storage device  and its associated computer-readable media provide non-volatile storage for the computer . Although the description of computer-readable media contained herein refers to a mass storage device, such as a hard disk or CD-ROM drive, the computer-readable media can be any available media that can be accessed by the computer .","By way of example, and not limitation, computer-readable media may comprise computer storage media and communication media. Computer storage media includes volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage of information such as computer-readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, Erasable Programmable Read Only Memory (\u201cEPROM\u201d), Electrically Erasable Programmable Read Only Memory (\u201cEEPROM\u201d), flash memory or other solid state memory technology, CD-ROM, digital versatile disks (\u201cDVD\u201d), or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by the computer .","According to various embodiments, computer  may operate in a networked environment using logical connections to remote computers through a network , such as the Internet. The computer  may connect to the network  through a network interface unit  connected to the bus . The network connection may be wireless and\/or wired. The network interface unit  may also be utilized to connect to other types of networks and remote computer systems. The computer  may also include an input\/output controller  for receiving and processing input from a number of other devices, including a keyboard, mouse, or electronic stylus (not shown in ). Similarly, an input\/output controller  may provide output to a display screen , a printer, or other type of output device.","As mentioned briefly above, a number of program modules and data files may be stored in the mass storage device  and RAM  of the computer , including an operating system  suitable for controlling the operation of a networked computer, such as the WINDOWS\u00ae operating systems from MICROSOFT\u00ae CORPORATION of Redmond, Wash. The mass storage device  and RAM  may also store one or more program modules. In particular, the mass storage device  and the RAM  may store one or more application programs, such as cloud program , that perform jobs relating to the cloud system.","The above specification, examples and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention, the invention resides in the claims hereinafter appended."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
