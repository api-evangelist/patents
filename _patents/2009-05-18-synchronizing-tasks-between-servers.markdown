---
title: Synchronizing tasks between servers
abstract: Systems and methods for synchronizing task data between a mailbox server of an email system and a project server of a project management system include a project that is published on the project management system, task data for the project is sent from the project server to the mailbox server. The task data includes the attributes of the project tasks and resources assigned to the project tasks. When the mailbox server receives the task data, the mailbox server creates a task on the mailbox server for each task for which the task doesn't already exist on the mailbox server. The mailbox server inserts each created task into the mailbox of the assignee for the task. The assignee can view the task attributes and update task status using a client that accesses the mailbox server.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08028070&OS=08028070&RS=08028070
owner: Microsoft Corporation
number: 08028070
owner_city: Redmond
owner_country: US
publication_date: 20090518
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Project management systems assist project managers in developing project plans, assigning resources to tasks, tracking progress, managing budgets and analyzing workloads. Users of project management systems can typically view tasks assigned to them via a user interface and update task status. The project management systems permit users to view and update assigned tasks as the users work on and complete the tasks.","Embodiments of the disclosure are directed to systems and methods for synchronizing project task information between a first server computer and a second server computer. An example method includes publishing a project on the first server computer, the first server computer implementing a project management software program, the project comprising one or more tasks, each of the one or more tasks including one or more attributes. After the project is published, the method includes mapping attributes for at least one of the one or more project tasks to corresponding task attributes used on a mail server program on the second server computer, the task attributes used on the mail server program being a subset of the project task attributes. After mapping task attributes for at least one of the one or more project tasks to corresponding task attributes used on a mail server program on the second server computer, the method includes sending the mapped task attributes for at least one of the one or more project tasks to the second server computer. The method also includes receiving a notification from the second server computer that a project task has been updated on the second server computer, and, after receiving a notification from the second server computer that a project task has been updated on the second server computer, sending a request to the second server computer for the task attributes of the project task that has been updated on the second server computer. After sending a request to the second server computer for the task attributes of the project task that has been updated, the method includes receiving the task attributes of the project task that has been updated from the second server computer. The method also includes, after receiving the task attributes of the project task that has been updated from the second server computer, determining whether the received task attributes of the project task are newer than task attributes for the project task stored on the first server computer, and, when a determination is made that the received task attributes for the project task are newer than the task attributes for the project task stored on the first server computer, replacing the task attributes of the project task stored on the first server computer with the received task attributes.","The details of one or more techniques are set forth in the accompanying drawings and the description below. Other features, objects, and advantages of these techniques will be apparent from the description, drawings, and claims.","The present application is directed to systems and methods for synchronizing task data between a mailbox server of an email system and a project server of a project management system. When a project is published on the project management system, task data for the project is sent from the project server to the mailbox server. The task data includes the attributes of the project tasks and resources assigned to the project tasks.","When the mailbox server receives the task data, the mailbox server creates a task on the mailbox server for each task for which the task doesn't already exist on the mailbox server. The mailbox server inserts each created task into the mailbox of the assignee for the task. The assignee can view the task attributes and update task status using a client that accesses the mailbox server.","When status for a task is updated on the email system, the mailbox server notifies the project server that the task has been updated. The project server obtains the attributes of the updated task and compares the attributes with task attributes stored on the project management system. When the attributes of the updated task are newer than the task attributes stored on the project management system, the task attributes stored on the project management system are replaced with the updated task attributes.","The project management system also permits a user of the project management system to update task status. Updating task status comprises updating one or more attributes for a task. When task status is updated by a user of the project management system, the updated attributes for the task are sent from the project server to the mailbox server. The attributes for the task on the mailbox server are then replaced with the updated attributes.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1","b":["100","100","102","104","106","110","112","114","116","118"]},"Among the plurality of information stored on the clients , , ,  is a client operating system (\u201cOS\u201d) and client applications. The client OS is a program that manages the hardware and software resources of the client system. The client applications utilize the resources of the clients , , ,  to directly perform tasks specified by the user. For example, the clients ,  include one or more software applications, such as email programs, that are used to create, send and receive email messages and that have other functionality including creating and managing tasks. One example of such an application is the OUTLOOK\u00ae messaging and collaboration client from Microsoft Corporation of Redmond, Wash. As another example, client  includes a software application that is used to access and update project management information, such as Microsoft Office Project Web Access, also from Microsoft Corporation of Redmond, Wash. As a further example, client  includes a software application that is used implement a project management system, such as Microsoft Office Project Professional 2007, also from Microsoft Corporation of Redmond, Wash. Other examples of such software applications are also applicable.","Servers , ,  are accessible through a network. Server  is a mailbox server, such as Microsoft Exchange Server 2007 from Microsoft Corporation of Redmond, Wash. Server  is a client access server that provides a cached version of a user mailbox from mailbox server . Servers  and  can be part of a cluster of server computers known as an email server farm. A server farm is maintained by a business enterprise to accomplish server needs beyond the capability of one server.","Server  is a server that implements project management system software, such as Microsoft Project Server 2007 from Microsoft Corporation of Redmond, Wash. In example embodiments, server  can be located within an organization or can be part of a system of shared services. An example system of shared services is a SHAREPOINT\u00ae team services portal server service provided by Microsoft Corporation. Server  can be part of a cluster of SHAREPOINT\u00ae portals known as a SHAREPOINT\u00ae farm.","The example project server  includes a queue , a business objects module , a mapping module , a data store  and a project web access module .","The project server  allows users to create and publish projects. A project is created using a project management software program, such as Microsoft Office Project Professional 2007 by Microsoft Corporation. The project is designed to assist individuals in developing plans, tracking progress, managing budgets and analyzing workloads. As part of the project creation process, the user can assign resources to tasks. Each task defines a discrete part of the project that is assigned to the relevant resource.","When a project is published on project server , a queue job for sending task data to mailbox server  is pushed onto example queue . A queue job is created for each resource that is assigned project tasks. Each queue job provides information to identify the resource, the published project tasks assigned to the resource and the attributes for each task. A queue job for sending task data to mailbox server  is also pushed onto example queue  when a task is updated on project server . The task data is typically in the form of a task object which represents an instantiation of the task.","The use of queue  permits task data to be synchronized between mailbox server  and project server  in an asynchronous manner. This is done for performance reasons. Communication with an email system can be intermittent over a network. The use of queue  permits project server  operations to proceed without being slowed down waiting for a response from mailbox server .","When a queue job to send task data to mailbox server  rises to the top of queue , the queue job is popped off of queue  and the queue job is processed. The processing of the published tasks queue jobs results in tasks being created on mailbox server  for all the tasks in the published project. There is typically a one-to-one mapping between project tasks assigned to a resource and tasks created on mailbox server  for the resource.","The example business objects module  includes business objects that implement the functionality of project server . This includes creating and publishing a task, processing status for a task, assigning resources to a task and interfacing with queue , client access server  and project web access server .","The example mapping module  maps task attributes for tasks stored on project server  to corresponding task attributes for tasks stored on mailbox server . Tasks created on project server  typically have more attributes than corresponding tasks stored on mailbox server . Therefore, only a subset of project server  task attributes are mapped to corresponding attributes on mailbox server .","The mapped task attributes are viewable via a client access program such as the OUTLOOK\u00ae messaging and collaboration client from Microsoft Corporation of Redmond, Wash. In one example, the mapped task attributes include subject, start date, due date, percent complete, actual work (in hours) and total work (in hours). Total work represents an estimate of the time needed to complete the task. Actual work represents the amount of work actually completed.","The example data store  stores project task data. Project task data includes an identifier for a task and task attributes. Example task attributes stored in the data store  include subject, start date, due date, actual work, percent complete. The data store  can either be on project server  or on a data store external to project server . The data store  also includes assignment data representing individuals assigned to tasks. An individual assigned to a task is known as a resource. The mapping between a task and a resource is known as an assignment.","The example project web access module  provides a web portal for client access to project server data. Project server  has a web page associated with it. The project web access module  makes the web page accessible to users. A user, for example a user on client , can access the project server  web page via a browser on client . The user can view assigned projects and tasks from the browser. The user can also update task attributes from the browser.","The project web access module  also includes example project server interface module . The example project server interface module  provides web access to a client, for example client , running a client-based project management program such as Microsoft Office Project Professional 2007. The example project server interface module  permits a program manager on the client-based project management program to view and update project tasks via project web access module .","The example mailbox server  uses folders to organize task information. A set of folders are created for each mailbox user that has assigned project tasks. Folders are organized by project server web site and project name. Each project server has a web site associated with it and a top level folder corresponds to the project web site. The Uniform Resource Locator (\u201cURL\u201d) for the web site is typically used as part of the top level folder name. In addition, each project web site folder includes subfolders for each project on the project web site for which the mailbox user has assigned tasks. There is typically one folder for each assigned project. Each project folder includes the project tasks assigned to the mailbox user.","Client access server  provides a cached version of mailbox server . When an email system user, for example a user on mailbox client , connects to client access server  using an email client such as the OUTLOOK\u00ae messaging and collaboration client, the task assignments for the user are displayed in the user's project task mailbox folder. The user is then able to update status for the tasks.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 2","b":["122","122","202","204","206","208"]},"The example publishing module  processes the publishing of a project on project server . A project is created by a project manager. The project includes tasks and resources assigned to tasks.","When all project information is entered, the project manager publishes the project. Publishing the project makes project information available online so that the project manager and the users assigned to project tasks can view and update project assignments over the Internet.","When a project is published, the example publishing module  creates a queue job to send project task data to mailbox server . A separate queue job is created for each resource in the project. The queue job includes information to locate task data for the resource in example data store  and to send the task data to mailbox server . Each queue job is pushed to queue .","In addition to creating a queue job for each project resource, the example publishing module  uses the example mapping module  to map attributes for each task to corresponding attributes for tasks used on mailbox server . Tasks created on project server  have more task attributes than email tasks provided on mailbox server , so only a subset of project server  tasks are mapped.","When a queue job to create a task on mailbox server  rises to the top of queue , the queue job is popped off the queue and executed. When the queue job is executed, the tasks for which the queue job was created to handle are created in the mailbox folder for the assignee of the task on mailbox server . In addition, each task is registered on mailbox server . Registering a task ensures that, when the task is updated on mailbox server , project server  receives notification of the update. The queue job rises to the top of queue  as a result of other queue jobs on queue  being executed. The queue job uses web services and an application programming interface (API) on mailbox server  to create and register the task on mailbox server . The API exposes methods on the mailbox server that are called by project server  when the queue jobs executes.","The example statusing module  processes status updates to tasks on project server . The status updates can be made via the example project web access module , for example by a user on example project web access client , by a user on example client  via example project server interface module  or by a project manager. Example client  runs a client-based project management program such as Microsoft Office Project Professional 2007. When a user updates task status, the attributes for the task are mapped to corresponding task attributes on mailbox server  and a queue job is pushed to queue  to update mailbox server  with the updated task status. The queue job includes the task status information and a timestamp indicating when the task was last updated. In addition, the queue job includes information to identify the task on mailbox server  and on project server .","When the queue job is popped off the queue and executed, the task update information is sent to mailbox server . The queue job uses web services and an application programming interface on mailbox server  to update the task on mailbox server .","The example mailbox module  processes task updates that originate from example client access server . When a task assignee, for example an assignee on mailbox client  updates status for an assigned task, the example mailbox module  receives a notification of the task update from the client access server . Each notification of a task update includes information to locate the task on project server .","When the mailbox module  receives a notification, the mailbox module  pushes a queue job to queue  to obtain updated task status for the task. When the queue job rises to the top of queue  and executes, project server  obtains the updated task information, including the attributes that have been updated for the task. Project server  also obtains a timestamp for the task. The updated attributes and timestamp for the task are obtained from client access server  via API calls using web services. Client access server  obtains the updated attributes and timestamp for the task from mailbox server .","When project server  receives the updated task information, project server  locates the task in a data store  on the project management system. The data store  can either be on project server  or on a data store external to project server . Project server  compares the updated task attributes with the task attributes in the data store . When the updated task attributes are newer than the task attributes for the task in the data store , the task attributes for the task in the data store  are replaced with the updated task attributes. The replacement of the task attributes with the updated task attributes is typically subject to business rules on project server . When an updated task attribute violates a business rule, the task attribute is changed so that the business rule is not violated. When a task attribute is changed because of a violation of a business rule, the changed task attribute is sent to client access server  so that mailbox server  is synchronized with project server .","The example resource module  identifies resources assigned to tasks. A resource is an individual who is assigned to perform a task. A resource may be assigned more than one task. When a task is created in mailbox server , the task is created in the mailbox folder of the task assignee.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 3","b":["300","106","102","106","302","202","106"]},"At operation , the example mapping module  maps project server task attributes for each task to corresponding task attributes used on mailbox server . The mapped attributes correspond to attributes available via a mailbox client such as Microsoft Outlook. The mapped task attributes include subject, start date, due date, percent complete, actual work and total work.","At operation , the project module  creates a queue job for each project resource and pushes each job queue onto queue . The queue job represents an operation to be performed at project server . In this example, the operation is to create the mapped project task for the queue job on mailbox server . The queue job includes information needed to locate the project task on the project server  data store .","At operation , a queue job for a project resource is executed and one or more project tasks for the project resource are created on mailbox server . The queue job is executed when the queue job rises to the top of queue  and is popped off queue . When the queue job is executed project server  uses web services to access API methods exposed by mailbox server . The API methods are used to create mailbox folders for the project resource, including subfolders for the project web site and for the projects assigned to the resource. In addition, API methods are used to register to each task at mailbox server  for notification at project server . Registering a task for notification results in project server  being notified when task status changes. A queue job is executed in this manner for each published project task.","A task assignee can view and update task status. When the task assignee updates task status, at operation  client access server  sends a notification to example mailbox module  that a mailbox task has been updated. The client access server  provides a cached copy of mailbox server  to a mailbox client, for example mailbox client .","When mailbox module  receives the notification, at operation , mailbox module  creates a queue job to obtain task attributes for the updated task. The queue job is pushed onto queue .","At operation , the queue job is executed and the attributes for the updated task are obtained from mailbox server . The attributes are obtained using API calls to mailbox  via web services.","At operation , a determination is made whether the attributes for the updated task are newer than the attributes for the task stored on data store . The determination is made, in part, by comparing a timestamp for the updated attributes with a timestamp for the attributes stored on data store . When it is determined that the attributes for the updated task are newer than the attributes for the task stored on data store , at operation  the attributes for the task stored on data store  are replaced with the attributes for the updated task, subject to business rules. This synchronizes task data between mailbox server  and project server .",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 4","b":["400","106","102","106","402","204","106","108","114","106","106","128"]},"At operation , the example mapping module  maps the attributes for the task to corresponding task attributes used on mailbox server . The mapped attributes correspond to attributes available via a mailbox client such as Microsoft Outlook. The mapped task attributes include subject, start date, due date, percent complete, actual work and total work.","At operation , the status module  creates a queue job to update status for the task on mailbox server . The status module  pushes the queue job onto queue . At operation , the queue job is popped off queue  and executed. As a result of executing the queue job, project server  sends the attributes for the task to mailbox server . Project server  sends the attributes for the task to mailbox server  using API methods exposed on mailbox server  via web services.","At operation , in example embodiments, a determination is made at mailbox server  whether the task attributes obtained from project server  are newer than the task attributes for the task stored on mailbox server . The determination is made, in part, by comparing a timestamp for the task attributes received from project server  with a timestamp for the task attributes stored on mailbox server . When a determination is made that the attributes for the task obtained from project server  are newer than the attributes for the task stored on mailbox server , at operation  the attributes for the task stored on mailbox server  are replaced with the attributes for the task obtained from project server . At operation , project server  receives a notification from client access server  that task data has been updated on mailbox server . As a result of the notification, project server  performs additional processing and verifies that task data is synchronized between mailbox server  and project server .","With reference to , example components of server  are shown. Servers , , and clients , , ,  are configured in a similar manner.","In example embodiments, the server  is a computing device, such as a server computer. The server  can include input\/output devices, a central processing unit (\u201cCPU\u201d), a data storage device, and a network device.","In a basic configuration, the computing device  typically includes at least one processing unit  and system memory . Depending on the exact configuration and type of computing device, the system memory  may be volatile (such as RAM), non-volatile (such as ROM, flash memory, etc.) or some combination of the two. System memory  typically includes an operating system  suitable for controlling the operation of a networked personal computer, such as the WINDOWS\u00ae operating systems from Microsoft Corporation of Redmond, Wash. or a server, such as Windows SharePoint Server 2007, also from Microsoft Corporation. The system memory  may also include one or more software applications  and may include program data.","The computing device  may have additional features or functionality. For example, the computing device  may also include additional data storage devices (removable and\/or non-removable) such as, for example, magnetic disks, optical disks, or tape. Such additional storage is illustrated in  by removable storage  and non-removable storage . Computer storage media may include volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data. System memory , removable storage  and non-removable storage  are all examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device  may also have input device(s)  such as keyboard, mouse, pen, voice input device, touch input device, etc. Output device(s)  such as a display, speakers, printer, etc. may also be included. These devices are well known in the art and need not be discussed at length here.","The computing device  may also contain communication connections  that allow the device to communicate with other computing devices , such as over a network in a distributed computing environment, for example, an intranet or the Internet. Communication connection  is one example of communication media. Communication media may typically be embodied by computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as a carrier wave or other transport mechanism, and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media.","The various embodiments described above are provided by way of illustration only and should not be construed to limiting. Various modifications and changes that may be made to the embodiments described above without departing from the true spirit and scope of the disclosure."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 5","FIG. 2"]}]},"DETDESC":[{},{}]}
