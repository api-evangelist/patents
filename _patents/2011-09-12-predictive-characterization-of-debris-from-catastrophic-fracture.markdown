---
title: Predictive characterization of debris from catastrophic fracture
abstract: A process is provided for characterizing debris, such as predicted from a hydrocode model. The process uses simulation data currently from a CTH hydrocode system to generate a DATAOUT file, but can be easily modified to handle simulation data from other hydrocodes. The debris characterizing process completes iterative calculations to compare cell radii and determine cell connections. Cell connections are continually made to determine and characterize debris pieces. The process includes creating a dynamic scenario from the hydrocode model, producing a SPCTH file, translating the SPCTH file to a DATAOUT file, selectively eliminating materials from the DATAOUT file, reordering the input information in the DATAOUT file, determining connected cells to form single pieces of debris, storing connectivity in an integer array, storing piece information in a cell storage array; and displaying the debris information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08751201&OS=08751201&RS=08751201
owner: The United States of America as Represented by the Secretary of the Navy
number: 08751201
owner_city: Washington
owner_country: US
publication_date: 20110912
---

{"@attributes":{"id":"description"},"GOVINT":[{},{}],"heading":["STATEMENT OF GOVERNMENT INTEREST","BACKGROUND","TERMS OF ART","SUMMARY","DETAILED DESCRIPTION"],"p":["The invention described was made in the performance of official duties by one or more employees of the Department of the Navy, and thus, the invention herein may be manufactured, used or licensed by or for the Government of the United States of America for governmental purposes without the payment of any royalties thereon or therefor.","The present invention relates to the field of failure simulations. In particular, the invention relates specifically to a system for characterizing debris from a simulated catastrophic fracture.","As used herein, the term \u201ccell\u201d means the unit of modeling space on which computation are preformed to conserve mass, momentum and energy; and the term \u201cdatabase\u201d includes, but is not limited to, physical memory, temporary or permanent storage of data, object and record attributes, lists, data structures, physical storage components, virtual storage components and any other manner of storing data known in the art used to perform a function.","There are many programs known in the art which run simulations to determine the effects of fractures or other damage to aircraft or spacecraft. Many programs also run simulations to determine the effects of other foreign bodies entering Earth's atmosphere.","The hydrocode is a computational tool known in the art which considers the effect of external and internal forces on a predefined \u201cmesh\u201d of cells, which represent the system being studied. It assumes that, over a short period of time, these forces are constant and uses them to adjust the geometry of the mesh accordingly.","For example, Sandia Laboratories has produced a code for shock physics called CTH hydrocode (the \u201cCTH program\u201d) to simulate and study the behavior of materials where strong shocks, material deformations and strains occur. The CTH program performs simulations and characterizes Eulerian cell data to graphically display the simulated event.","However, few programs known in the art perform post-processing of hydrocode simulations to characterize (e.g., with quantitative data such as density, velocity, temperature, etc.) the debris resulting from catastrophic fractures, deformations and shocks. Early post-processing models of post-processing involved an individual analyzing the graphical data and manually combining cell data. Some post-processors have been developed, but these post-processors use graphical methods to determine similar fragment data. In order to perform their analysis, the post-processors must therefore have access to cell definitions and relationships. Specifically, these post-processors must know the corner nodes and the x, y and z coordinates for each cell.","Other systems known in the art attempt to simulate or characterize debris resulting from shock, deformation or impact. For example, U.S. Patent Application Publication 2010\/0256957 teaches a system which simulates explosions and resulting damage to buildings using a finite element analysis in a specific domain. However, this system does not account for collisions between debris and cannot characterize debris with quantitative data. Similarly, U.S. Pat. No. 6,117,718 teaches a system which enables users to select input data combinations relating to types of explosions and building models in order to simulate structural damage. Building components are characterized using pressure-impulse diagrams, but the system does not characterize resulting debris.","These and other systems known in the art using a graphically approach are limited to find the connectivity of a single material only. The reason is that this approach was created to identify model parts of one material. Conductivity between parts of different materials can only be determined from the locations where the parts are graphed to. DEBRICALC determines the conductivity of all cells irrespective of their material and initial conductivity. There is an unmet need for a system which can post-process hydrocode data without specifying cell definitions and cell relationships. The further unmet need for a system which can utilize quantitative data to characterize debris from a simulated catastrophic fracture.","Conventional debris characterization methods yield disadvantages addressed by various exemplary embodiments of the present invention. In various exemplary embodiments, the process for characterizing debris uses simulation data from a CTH hydrocode system to generate a DATAOUT file. The debris characterizing process completes iterative calculations to compare cell radii and determine cell connections. Cell connections are continually made to determine and characterize debris pieces.","The process includes creating a dynamic scenario from the hydrocode model, producing a SPCTH file, translating the SPCTH file to a DATAOUT file, selectively eliminating materials from the DATAOUT file, reordering the input information in the DATAOUT file, determining connected cells to form a single piece of debris, storing piece information in a cell storage array, storing connectivity in an integer array; and displaying the debris information.","In the following detailed description of exemplary embodiments of the invention, reference is made to the accompanying drawings that form a part hereof, and in which is shown by way of illustration specific exemplary embodiments in which the invention may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice the invention. Other embodiments may be utilized, and logical, mechanical, and other changes may be made without departing from the spirit or scope of the present invention. The following detailed description is, therefore, not to be taken in a limiting sense, and the scope of the present invention is defined only by the appended claims.","In accordance with a presently preferred embodiment of the present invention, the components, process steps, and\/or data structures may be implemented using various types of operating systems, computing platforms, computer programs, and\/or general purpose machines. In addition, those of ordinary skill in the art will readily recognize that devices of a less general purpose nature, such as hardwired devices, or the like, may also be used without departing from the scope and spirit of the inventive concepts disclosed herewith. General purpose machines include devices that execute instruction code. A hardwired device may constitute an application specific integrated circuit (ASIC) or a floating point gate array (FPGA) or other related component.","It should be understood that the drawings are not necessarily to scale; instead emphasis has been placed upon illustrating the principles of the invention. In addition, in the embodiments depicted herein, like reference numerals in the various drawings refer to identical or near identical structural elements. Moreover, the terms \u201csubstantially\u201d or \u201capproximately\u201d as used herein may be applied to modify any quantitative representation that could permissibly vary without resulting in a change in the basic function to which it is related.","The exemplary computer program, DEBRICALC, post-processes the results of the Sandia Laboratory's CTH hydrocoele simulations to characterize the debris resulting from catastrophic fracture. This fracture could be the result of such events as simulated high velocity impact or explosive detonation. The code determines the spatial relationship of Eulerian cell data and combines the data so as these result from single entities normally referred to as fragments or debris elements. The code, in its present form, calculates for each determined fragment, its mass, its approximate center of mass location, its center of mass velocity, its volume, and limits on its size. The computer program also outputs the results limited on the basis of size, mass and number of Eulerian cells forming the fragment.","The earliest method of obtaining similar data employed manual analysis of the data graphically and combining the cell data. Recently, at least one post-processor has been modified to determine similar fragment data using graphical methods. This graphical method needs to have access to the cell definitions and cell relationships. That entails knowing for each cell what are the corner \u2018nodes\u2019 and their x, y and z coordinates.","The information transfer from the CTH program to DEBRICALC program operates as follows. The CTH program simulates the dynamic behavior of the configuration. The CTH user specifies when data are to be provided to the SPCTH file. The CTH user also specifies what data type is to be written. The data are written in the SPCTH file at the specified time for every cell in the simulation. In addition to the cell center location, the data for every cell can include such quantities as density, velocity, temperature, volume fraction, mass, etc for every material in each cell. Any quantity calculated by the CTH program during execution can be written for the cells.","After the simulation is complete and the SPCTH files are written, a Spymaster operator or user can request any subset of that data to be written by the SPYPLT program to a DATAOUT file. The SPYPLT user can easily control the format and content of this American Standard Code for Information Interchange (ASCII) format file. An individual line of data in the DATAOUT file begins with the cell centered coordinates, followed by any subset requested data for each material in that cell in the users specified ASCII format. The DEBRICALC program uses the DATAOUT file to characterize the debris.","The debris characterization program was written to summarize the cell data in terms of debris pieces. The information sought at the saved simulation time of the DATAOUT file includes: the number of pieces, the size of each piece, the mass of each piece, the CG (center of gravity) location of each piece, and the CG velocity of each piece. The calculations of many of the desired variables are straight forward mass averages of the quantities of the cells that make up a single piece of debris. The amount of information in a DATAOUT file can be very large because the number of cells can be large, in the millions, and because, in a standard compilation, the number of allowed materials is twenty.","To decrease the size of the information stored in the arrays of the DEBRICALC program, the stored information was initially limited to five materials for each cell. This was originally believed to be higher than strictly necessary, but that was the value chosen as certainly being adequate. As the program reads the DATAOUT file, it discards information for a material which has a volume fraction less than a minimum threshold value (EPS), originally set at 1.0E\u22125 (i.e., 1.0\u00d710). The program stores, in an integer array, the number of materials in a cell and the number designation for each of those materials. The input information is also reordered to be in the desired order of: the cell's x, y and z locations, the cell's x, y and z directional velocities, the volume fraction for each material in the cell, the mass of each material in that cell, the pressure of each material in that cell, the temperature of each material in that cell and the energy of each material in that cell.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1","b":["100","110","120","130","140","150","160","170","160","170","180","170","100","110","120"],"sub":["i","j","i","j","i","j","i","j","i","j","i","j","i","j","i","j","i","j"],"sup":["2","2","2","2","2","2"]},"Upon storing the data, the program determines which cells join to other cells to make a single piece of debris. The method that the program uses to determine which cells to consider joined into a single piece is now discussed. The density of each material contained in the input file must be added to the DATAOUT file as the first line. This is the initial density of each material and may not be the density of the material in a cell at the stored output time, but the difference for solids and liquids is so small for the desired calculations so as to be practically negligible. For gases, the difference helps remove the gases from inclusion in other pieces. From these density values and the stored masses, the program determines a volume for each material in a cell and sums up the volumes for all materials in that cell. From that summed volume, the program calculates the length of a side of a cube that contains that volume. Half the diagonal of that cell is considered to be the basic search radius . To within a multiplicative factor, the sum of every two cell's radii are compared to their actual distance spacing to determine if the two cells are to be considered to be part of one piece. For cells  and  completely full of material and a factor of unity (1.0), this calculation would join cells touching on the diagonal, as corresponding to the radius .",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 2","b":["200","210","220","260"]},"For cells that have a total volume fraction less than unity, a different factor is needed for them to be joined. The program currently uses a changeable search factor Kof 1.13, which will consider a cell of a volume fraction of 1.0 joined to an adjacent cell of volume fraction of 0.5. This method determines when two cells are joined; however, the greatest amount of computational time is spent in the program updating the connectivity of the cells that are joined to the two newly joined cells.","To reduce storage space, the piece information is stored in the cell storage array. The first, and usually the lowest numbered cell in a piece, is eventually set as the storage location for the piece. The connectivity is stored in an integer array initialized to all elements being zero and revised to the cell number of the connected cell in response to determination of that connectivity. When connectivity is determined between cells, one or both of which have previous connectivity, then the connectivity of all the newly determined to be connected cells are updated to the connectivity of a single cell. The number of pieces in the connectivity array is designated by cells with a connectivity of zero (0) or a cell with its own number as its basic piece information cell. Piece information is then summed in the corresponding cell array locations in the cell storage array, that is, cell storage array locations that have connectivity cell numbers equal to their own or zero.","Piece information can be output based on several criteria. One criterion outputs information for all debris pieces. Another criterion outputs pieces with a mass in grams above an input lower limit. Another criterion outputs summary information for pieces above a diameter size limit, input in centimeters. The diameter is used to compute a spherical volume, and that volume can be compared to the volume of the debris piece. If the comparison finds the piece volume bigger than the lower limit, the process outputs that piece information.","The major advantage of this exemplary process, as executed by a computer program is that it does not require the cell connectivity to characterize the debris but rather determines the connectivity based on cell location and contained material volume. The graphical approach of other debris characterization programs is limited to find connectivity of a single material only. The stand-alone nature of the exemplary program offers the user the ability to extend the capability of the program and tailor the output. Coding in standard FORTRAN increases the number of platforms on which the program can be utilized. Although instructed to handle data output from CTH, the program could be easily modified to handle data from other Eulerian type codes that can be made to output the required input data. These minimum data include cell center locations, mass and density.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 3","b":["300","305","310"]},"At the specified time or times, data are written for every cell in the simulation. In further exemplary embodiments, a user may specify the data type for each cell to be written to an SPCTH file. For example, in addition to the cell center location, the data for every call may include, but would not be limited to, density, velocity, temperature, volume fraction and mass for every material in the cell. In still further exemplary embodiments, any quantity calculated by the CTH program during execution of the simulation may be written to the SPCTH file for the cell. Step  provides a DATAOUT file from the SPCTH file using a SPYPLT program. In some exemplary embodiments, a user may select any subset of data to be written to a DATAOUT file.","In the exemplary embodiment described, the program writes the DATAOUT file in ASCII format, enabling a user to easily control the format and content of the DATAOUT file. In further exemplary embodiments, the DATAOUT file may be in any format known in the art. The DATAOUT file is the file used to characterize debris. In the exemplary embodiments described, any individual line of a DATAOUT file begins with the cell centered coordinates and is followed by any subset requested data for each material in the cell. Step  selectively eliminates materials. In the exemplary embodiments described, materials having a volume fraction less than a specified minimum value are discarded from the DATAOUT file. In the exemplary embodiment described, the minimum value is 1.0E\u22125. In further exemplary embodiments, the minimum value may be set to a different value. In still further exemplary embodiments, the minimum value may be an administratively assigned value which may only be changed by a user with administrative privileges.","In some exemplary embodiments, the number of materials may be further limited to decrease the size of the DATAOUT file. DATAOUT files can be quite substantial because the number of cells can be in the millions. For example, for all the materials in each cell being calculated, the size of the DATAOUT file, if exceeding to the available memory of the computer, such a condition could prohibit processing of the file. Under the current configuration, if the DATAOUT file cannot be loaded into Random Access Memory (RAM), the program informs the user. However, such a size limitation can be obviated by modifying the code to enable access to slower extended memory. In a standard compilation, the number of allowed materials per cell is limited to twenty. However, in some exemplary embodiments, the number of allowed materials per cell may be further limited to include ten or fewer materials per cell. In the exemplary embodiments described, the number of materials will be limited to five per cell, which was the value chosen as certainly adequate. The number of materials left in a cell, after materials are selectively eliminated, is stored in an integer array, along with the material numbers of the materials left in the cell.","Step  processes or reorders the input information of the DATAOUT file. In the exemplary embodiment described, the input information is arranged in the following order: the cell's x, y and z locations, the cell's x, y and z directional velocities, the volume fraction for each material in the cell, the mass of each material in the cell, the pressure of each material in the cell, the temperature of each material in the cell and the energy of each material in the cell. In further exemplary embodiments, the input information may be differently organized, and information for each cell may be differently arranged. Such an alternate arrangement could be selectable by the user as an option for other post-processing operations.","Step  determines the search radii. In the exemplary embodiment described, Step  includes multiple substeps. Step denotes determining the volume of each material in a cell using the initial densities of the materials added to the first line of the DATAOUT file and the stored mass values. Step sums the volumes for all materials in a cell. Step calculates the length of a side of a cube that contains the summed volume. This length is used to calculate a radius for that cell. Step repeats steps through until the radius of every cell is determined.","Step  determines conductivity. In the exemplary embodiment described, step contains multiple substeps. Step is the step of comparing the sum of two cell's search radii with the distance between their centers. The search radius is a cell's radius times a multiplicative factor. In the exemplary embodiment described, the radius of a cell is considered to be half of the diagonal of the cell. Every two cell's search radii are compared to their actual distance spacing to determine if the two cells are to be considered to be part of one piece. For example, for cells completely full of material and having a multiplicative factor of unity, the cells would be touching on the diagonal.","For cells having a total volume fraction less than unity, and keeping the default search factor of 1.13, the program will consider a cell of a volume fraction of 1.0 joined to an adjacent cell having a volume fraction of 0.5. In other exemplary embodiments, the search factor may be easily changed. Step determines whether joined cells make a single piece of debris. Step stores connectivity data in an integer array.","In the exemplary embodiment described, the integer array is initialized to all elements being zero and changed to the cell number of the connected cell when connectivity is determined. When connectivity is determined between cells, one or both of which have previous connectivity, then the connectivities of all the cells newly determined to be connected are updated to the connectivity of a single cell. Step denotes the operation in which every set number of steps a progress file designated Temp is output. Step repeats steps and until the conductivity of every cell is determined. The integer array and process is continually updated to reflect the connectivity of newly joined cells.","Step  characterizes each piece of debris. In the exemplary embodiment described, step  contains multiple substeps. Step updates the debris characterization for each piece as new cell information is included. This includes adjusting the center of gravity (CG) location and CG velocity, mass, volume, number of cells making up the piece and approximate size to account for the additional cell. In the exemplary embodiment described, the lowest numbered cell in a piece is used as the storage location for the piece.","The number of pieces in the connectivity array is designated by cells with a connectivity of zero or a cell with its own number as its basic piece information cell. Piece information is then summed in the corresponding cell array locations in the cell storage array for cell storage array locations having connectivity cell numbers equal to their own. Cell storage array locations having connectivity cell numbers of zero constitute unconnected cells and their original input information [that] characterizes them. Step repeats step until the characterization of each piece of debris is determined.","Step  is the step of displaying debris information. In the exemplary embodiment described, piece information may be output based on several criterions. For example, information may be output for all debris pieces. In other exemplary embodiments, output may be limited to debris pieces above a certain size or diameter or within a certain mass range. In still further exemplary embodiments, output may be limited based on debris volume or any other physical characteristic of a debris piece which may be calculated.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 4","FIG. 5"],"b":["400","405","410","535","415","420","425","430","435","450","455","415","450","455"]},"The process continues to step  to determine mass radius and then to step  to determine linkage. The progress proceeds to step  to output a progress temporary file. The process loops between steps  and  until completing for all N cells. The process then proceeds to step  to calculate and store piece information. When completed, the process proceeds to step  to query for output of all piece information. If so, step  prints information for all pieces. If not or after step , the process continues to step  to print information for specific pieces. Upon this completion the process terminates at step  to Stop DEBRICALC.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 5","b":["500","510","510","515","510","515","520","521","510","515","520","515","530","515","535"],"i":["a","a"]},"In some exemplary embodiments, user , using user interface , may be able to select any subset of the data contained in SPCTH file  to be written to a DATAOUT file . In the exemplary embodiment shown, the DATAOUT file  is in ASCII format. In further exemplary embodiments, DATAOUT file  may be written in any other format known in the art. When creating the DATAOUT file , each individual line within the DATAOUT file  begins with the cell centered coordinates for the given cell and is followed by any subset of data requested by user for each material in the cell. The Debris characterization system  then receives the DATAOUT file  to summarize the cell data stored in the DATAOUT file  in terms of debris pieces.","The Debris characterization system  uses the DATAOUT file  to determine the number of debris piece generated by the simulation, the size of each piece, the mass of each piece, the center of gravity (CG) of each piece and the CG velocity of each piece. In some exemplary embodiments, the DATAOUT file  may be a large file, prohibiting accurate processing. The number of cells generated by a CTH program may be in the order of millions, and contain information pertaining to several millions of debris pieces. When debris the characterization system  receives DATAOUT file  which has the initial density of each material in the file listed in the first line of DATAOUT file , the DATAOUT file  is filtered by volume fraction filter . The volume fraction filter  discards information for a material which has a volume fraction less than a set minimum value. In the exemplary embodiment shown, the set minimum value is 1.0E\u22125. In further exemplary embodiments, the set minimum value may be set higher or lower to eliminate more or fewer materials, as desired. In some exemplary embodiments, user , using user interface , may selectively change or update the minimum value used by volume fraction filter . In further exemplary embodiments, user may need administrative privileges in order to change the minimum value.","The Filtered DATAOUT file  may also be filtered to include only information for debris of specified materials. In the exemplary embodiment shown, a material limitation filter  limits the information in the DATAOUT file  to include only information for a selected five materials. In further exemplary embodiments, material limitation filter  may be configured to filter based on any number of materials, and user , using user interface , may be able to selectively update or change the materials used by the material limitation filter . The Filtered DATAOUT file  is then received by ordering processor , which reorders the information to a desired order.","In the exemplary embodiment shown, an ordering processor  reorders the information in the following order: a cell's spatial location (in x, y and z coordinates), a cell's spatial velocity, the volume fraction for each material in a cell, the mass of each material in a cell, the pressure of each material in a cell, the temperature of each material in a cell and the energy of each material in a cell. In further exemplary embodiments, the ordering processor  may arrange the information in the filtered DATAOUT file  in any other organized arrangement for use by the debris characterization system .","Ordering processor  also creates integer array object , which is stored in integer array database . The integer array object  contains the number of materials in a cell and the number designation for each of those materials. The connectivity processor  runs a series of iterative algorithms to determine which cells are joined to associated cells to form a single piece of debris. The connectivity processor  contains a plurality of subprocessors that enable the connectivity processor  to perform the iterative algorithms required to determine cell connectivity. In the exemplary embodiment shown, with the initial densities known from the input DATAOUT file , the connectivity processor  communicates with integer array database  to determine the volume of each material in a cell using the density values and the stored masses. The volumes for all materials in a cell are then summed, and the length of a side of a cube that contains the volume is calculated.","The connectivity processor  then, to within a multiplicative factor, compares the sum of two cells' radii to their actual distance spacing to determine of the two cells are considered part of one piece. Half of the diagonal of a cell is considered to be the radius of the cell. In the exemplary embodiment shown, for cells completely full of material and a factor of 1.0, the comparison would join cells touching on the diagonal. For cells having a total volume fraction less than one, a different factor is needed for the cells to be joined. In the exemplary embodiment shown, the connectivity processor  is configured to use a search factor of 1.13 as shown in the graph , which will consider a cell of a volume fraction of 1.0 joined to an adjacent cell of volume fraction 0.5. In some exemplary embodiments, a user or administrator may be able to selectively change the search factor value.","In the exemplary embodiment shown, as cell connections are determined, connection objects  are generated and stored in connectivity integer array database . Connectivity processor  continually communicates with connectivity integer array database , repeating the cell radii comparisons, to continually determine connecting cells. The connectivity processor , during the performance of iterative comparisons and while determining connectivity between cells with one or both of which having previous connectivity, also updates the connectivity of all newly determined-to-be-connected cells to the connectivity of a single cell, and updates the connectivity integer array database . The number of pieces in the connectivity array is designated by cells with a connectivity of zero (0) or a cell with its own number as its basic piece information cell.","The piece information is then summed in the corresponding cell array locations in the cell storage array (meaning, cell storage array locations that have connectivity cell numbers equal to their own or zero). The first (usually lowest) numbered cell in a piece is eventually set as the storage location for the piece. The connectivity processor  also updates cell storage array database  to reflect the summed piece information as further cell connections are determined. The piece characterizing processor  accesses cell storage array database  and calculates the number of debris pieces, the size of each piece, the mass of each piece, the CG of each piece and the CG velocity of each piece. The piece characterizing processor  generates piece objects  which may be reflected on graphical user interface . In further exemplary embodiments, a filter may be used to filter piece objects  so that only pieces matching certain criteria, such as size, weight, velocity or volume criteria, are displayed.","While certain features of the embodiments of the invention have been illustrated as described herein, many modifications, substitutions, changes and equivalents will now occur to those skilled in the art. It is, therefore, to be understood that the appended claims are intended to cover all such modifications and changes as fall within the true spirit of the embodiments."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["These and various other features and aspects of various exemplary embodiments will be readily understood with reference to the following detailed description taken in conjunction with the accompanying drawings, in which like or similar numbers are used throughout, and in which:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
