---
title: System, method, and computer-readable medium
abstract: A system includes: processing circuitry and a database which stores target data to be accessed by a plurality of information processing apparatus each of which executes a software program that issues a request to access the target data, the request including version information regarding the software program which issued the request and is being updated from a first version to a second version. The processing circuitry is configured to: update the database by transferring data from a first database relating to the first version to a second database relating to the second version; receive the request from one of the plurality of information processing apparatuses during the updating of the database; and determine a transmission destination of the received request based on the version information included in the received request and a condition of whether or not the target data is transferred from the first database to the second database.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09600271&OS=09600271&RS=09600271
owner: FUJITSU LIMITED
number: 09600271
owner_city: Kawasaki
owner_country: JP
publication_date: 20151116
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","FIELD","BACKGROUND","SUMMARY","DESCRIPTION OF EMBODIMENTS"],"p":["This application is based upon and claims the benefit of priority of the prior Japanese Patent Application No. 2014-234493, filed on Nov. 19, 2014, the entire contents of which are incorporated herein by reference.","The embodiment discussed herein is related to a system, a method, and a computer-readable medium.","In relation to a cloud service, there is a case in which a plurality of environments are prepared for executing the same application program when a service is provided to a user by the application program (hereinafter, also referred to as software). A processing load is reduced by distributing the processing in accordance with a plurality of application programs.","In a case of applying a patch (correction program) to the plurality of application programs, a method such as rolling update is used. By using the rolling update method, it is possible to apply the patch without suspending the applications.","In addition, each application program stores data to be used in a database (DB). There is a case in which a data configuration in the DB changes. As related art in relation to changes in data configurations, Japanese Patent No. 2503297, Japanese Laid-open Patent Publication No. 2005-266973, and International Publication Pamphlet No. WO2005\/086003, for example, are known.","According to an aspect of the application, a system includes: processing circuitry and a database which stores target data to be accessed by a plurality of information processing apparatus each of which executes a software program that issues a request to access the target data, the request including version information regarding the software program which issued the request and is being updated from a first version to a second version. The processing circuitry may be configured to: update the database by transferring data from a first database relating to the first version to a second database relating to the second version; receive the request from one of the plurality of information processing apparatuses during the updating of the database; and determine a transmission destination of the received request based on the version information included in the received request and a condition of whether or not the target data is transferred from the first database to the second database.","The object and advantages of the invention will be realized and attained by means of the elements and combinations particularly pointed out in the claims.","It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory and are not restrictive of the invention, as claimed.","There is a case in which a data configuration in a DB that an application program accesses changes due to a patch applied to the application program. In such a case, a plurality of application programs are suspended, and data configurations of data in the DB are changed in order to avoid inconsistencies in the DB.","However, in order to suspend services by the application programs, it is preferable to provide a prior announcement about the service suspension to customers who use the services and to obtain an agreement by the customers. For this reason, it takes significant time and effort to suspend the services by the application programs. Therefore, it is desirable to apply a patch, which accompanies changes in configurations in the database, to the application programs without suspending the services provided by the application programs.","According to an aspect, an object of the embodiment is to update software, which accompanies changes in configurations in a database, without suspending services provided by the software.","Hereinafter, a description will be given of the embodiment with reference to drawings.","Service Providing System",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 1","FIG. 1"]},"The service providing system in  includes a plurality of client devices to , a WEB server , a server load balancing (SLB) server , a plurality of application servers and , and a database (DB) server . The respective servers illustrated in  are physical servers including a CPU and a memory, for example. The client devices to are a personal computer, a mobile terminal, and the like. Hereinafter, the application servers and will be referred to as AP servers and (also referred to as AP servers ).","Each of the client devices to is coupled to the WEB server  via a network  such as the Internet. Although an example in which the WEB server  is coupled to the three client devices to is illustrated in , the embodiment is not limited to the example.","In addition, the WEB server  is coupled to the plurality of AP servers and via the SLB server . Each of the plurality of AP servers and is coupled to the DB server . The DB server  accesses a storage device (hereinafter, referred to as a DB)  that stores a database (DB).","The plurality of AP servers and execute the same application programs (software; not illustrated). The SLB server  selects the AP server or to which a request from the WEB server  is to be allocated in accordance with loaded states of the AP servers and . A large-scaled service providing system that provides a service to many users is provided with the plurality of AP servers and as illustrated in  in order to distribute the load.","In the example illustrated in , the SLB server  is a management server, for example. The management server is coupled to a client device (not illustrated) of an operator who manages the service providing system, for example. The operator controls and manages the respective servers by the client device via a management server.","A service that the service providing system in  provides is an infrastructure as a service (IaaS), for example. The IaaS is a service in which a service provider leases physical servers (not illustrated) that are installed in a data center to users (hereinafter, referred to as tenants). The tenants construct desired systems in the leased physical servers as desired and provide predetermined services to users of the tenants.","In the embodiment, the application program is a program for providing the IaaS from a service operator to tenants. The application program provides a function of constructing a physical server, a function of monitoring the physical server, and the like in response to operations performed on a portal site by the tenants, for example. Therefore, according to the embodiment, the database  includes a table of data related to setting information of physical servers to be leased to the tenants and a table of data related to setting information for monitoring.","Specifically, the client devices to in the service providing system illustrated in  transmit a hypertext transfer protocol (HTTP) request message for requesting a service to the WEB server  in response to an operation input. The WEB server  generates a request to the AP servers and and transmits the request to the SLB server  in response to the request message from the client devices to ","The SLB server  transmits the request to the AP server or that is selected based on load information of the plurality of AP servers and . If the AP server or receives the request, the application program that operates in the AP server or performs processing in accordance with the request. For example, the application program outputs an access request for instructing access to the database  to the DB server . The DB server  performs writing in or reading from the database  in response to the access request and outputs an access result to the AP server or ","The AP server or transmits a response to the WEB server  or performs other processing based on the result of access to the DB server . The WEB server  transmits the response that is received from the AP server or via the SLB server  to the client devices to as transmission sources of the request. The client devices to receive the response and then display information in accordance with the content of the response.","Update of Software","In the service providing system illustrated in , there is a case in which functions are expanded in order to maintain competitive strength against other companies or meet demands from customers, for example. In addition, there is a case in which the program is corrected due to detection of a security hole or the like. In a case of performing function expansion or correction of the application program that operates in the AP servers and illustrated in , the operator applies a patch to the application program (updates the software).","The patch is data for correcting errors or changing functions by updating a part of the program. In the embodiment, the patch of the application program means addition or change of a part of the program in relation to function expansion or function correction of the IaaS, for example. The patch of the application program is applied to the application program in a suspended state. The operator suspends the application program and applies the patch to the suspended application program by executing a command or a program.","If the application program is suspended, the functions of the IaaS is temporarily not available for the tenants. That is, the processing of monitoring the physical server and the like are temporarily not available for the tenants. This may cause a trouble in the service that the tenants provide to the users of the tenants.","In a case of temporarily suspending the service, the operator obtains agreement about a schedule of the service suspension in advance from the tenants. However, in a case of providing the service providing systems illustrated in  to a plurality of tenants, it is not easy to adjust the schedule of the service suspension that all the tenants can agree with. Moreover, it is inconvenient for the tenants not to receive the service temporarily even if the tenants receive the prior announcement about the temporarily suspension of the application program.","If functions of the provided service are limited during the suspension of the application program and the patch of the application program is applied, the tenants are subject to the temporal restriction of the functions. Therefore, sufficient convenience is not provided.","Therefore, there is a demand for applying the patch to the application program without suspending the service. As a method of applying the patch to the application program without suspending the service, a rolling update method is exemplified. According to the rolling update, an application program of at least one of the plurality of AP servers and is maintained in an executed state, and the patch is sequentially applied to an application program in a suspended state. According to the rolling update, the application program is maintained in the executed state on at least one of the plurality of AP servers and . Therefore, it is possible to apply the patch without suspending the service.","However, there is also a case in which the rolling update method is not applicable depending on the content of the patch. In a case of a patch that accompanies a change in a data configuration in the database  (service function expansion and the like), it is difficult to apply the rolling update method. The data configuration includes data definitions such as the number, the sizes, and value types of items in tables provided in the database .","In the example illustrated in , the service function expansion is expansion of the IaaS functions to be provided to the tenants. The expansion of the IaaS functions includes, for example, expansion of a function of enabling designation about whether to install a graphics processing unit (GPU) in setting of the physical server to be leased. As described above, the database  includes the table of setting information related to the physical server to be leased. Therefore, the table in the database  newly includes an item for designating whether to install the GPU in addition to existing items by the application of the patch.","In addition, the rolling update method can be applied to a patch that does not accompany a change in the data configuration in the database  (a patch for a security hole or a patch for correcting a function, for example).","Change in Database",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 2","FIG. 1","FIG. 2"],"b":["80","81","80","82","80"]},"The table  in the database  before the function expansion includes, for example, an item \u201cidentification (ID)\u201d, an item \u201cnumber of central processing unit (CPU) cores\u201d, and an item \u201cmemory size\u201d. In addition, the table  further includes, for example, an item \u201cInternet protocol (IP) address\u201d and an item \u201coperation system (OS)\u201d.","The item \u201cID\u201d is information for identifying a physical server. The item \u201cnumber of CPU cores\u201d represents the number of CPU cores to be installed on the physical server, and the item \u201cmemory size\u201d represents the size of a memory to be installed on the physical server. In addition, the item \u201cIP address\u201d represents an IP address to be set for the physical server, and the item \u201cOS\u201d represents a type of an OS to be operated on the physical server.","According to the example of the table  in the database  before the function expansion illustrated in , a physical server with \u201cID: M10\u201d is set such that the \u201cnumber of CPU cores is four\u201d, the \u201cmemory size is 4 gigabytes (GB)\u201d, the \u201cIP address is xxx.xxx.x.x\u201d, and the \u201cOS is OS1\u201d. Other physical servers also have information of the respective items in the same manner.","In contrast, in the example of the table  in the database  after the function expansion, an item \u201cpresence of GPU\u201d is included in addition to the respective items in the table  in the database  before the function expansion. As described above, the table  and the table  have different data configurations. According to the example of the table  in the database  after the function expansion illustrated in , the item \u201cpresence of GPU\u201d in the physical server with the \u201cID: M10\u201d is set such that \u201cno GPU is to be provided\u201d.","The application program accesses data in the database  in accordance with the data definitions in the respective tables  and . That is, an application program to which the patch has not yet been applied accesses the data in accordance with the data configuration in the table , and an application program to which the patch has been applied accesses the data in accordance with the data configuration in the table . Therefore, the data is not appropriately updated when the application program to which the patch has not yet been applied and the application program to which the patch has been applied updates common data. That is, data inconsistency occurs.","As described above with reference to , the patch is sequentially applied to a plurality of application programs according to the rolling update. Therefore, access from the application program to which the patch has not yet been applied and access from the application program to which the patch has been applied, to the common database , occur together until the processing of applying the patch is completed. Therefore, inconsistency occurs in the database . When the inconsistency occurs in the database , the application programs do not perform processing appropriately.","It is considered that services are temporarily suspended and transition processing of converting the data in the table  included in the database  to have the data configuration in the table  is performed when the patch is applied to a plurality of application programs. However, the database  includes a large amount of data in accordance with a scale of the system. Therefore, the transition processing of the database  includes a large number of processes in accordance with the amount of the data. Since the transition processing of the database  includes a large number of processes, the service is suspended for a long period of time during the transition processing.","Therefore, in the case in which the patch accompanies a change in the data configuration in the database , it is not easy to apply the patch to the application programs without suspending the services provided by the application programs.","Next, descriptions will be given of a hardware configuration of the AP servers and according to the embodiment and a software block diagram.","Configuration of AP Server",{"@attributes":{"id":"p-0073","num":"0072"},"figref":["FIG. 3","FIG. 1","FIG. 3","FIG. 1"],"b":["20","20","20","20"],"i":["a ","b ","a","b "]},"The AP server illustrated in  includes a central processing unit (CPU) , a memory  including a random access memory (RAM) , a non-volatile memory , and the like, and a communication interface unit . The respective components are coupled to each other via a bus .","The CPU  is coupled to the memory  and the like via the bus  and controls the entire AP server . The communication interface unit  controls data exchange with communication devices such as the SLB server  and the DB server  illustrated in  via the intranet. The RAM  in the memory  stores data and the like on which the CPU  performs processing.","The non-volatile memory  in the memory  includes a region (not illustrated) in which a program of an OS to be executed by the CPU  is stored and a storage region  in which application programs that operates on the OS are stored. In addition, the non-volatile memory  includes a storage region  in which a DB access program is stored and a storage region  in which a DB background-updating program is stored. The non-volatile memory  is configured of a hard disc drive (HDD), a non-volatile semiconductor memory, or the like.","An application program (hereinafter, referred to as an application program ) in the application program storage region  is executed by the CPU  and realizes processing of providing the IaaS illustrated in . The application program  is a program as a target of a patch application in this embodiment. In addition, the DB background-updating program (hereinafter, referred to as a DB background-updating program ) in the DB background-updating program storage region  is executed by the CPU  and realizes the transition processing of the database  in a background. Details of the DB background-updating program  will be described later with reference to .","In addition, a DB access processing program (hereinafter referred to as a DB access program ) in the DB access program storage region  is executed by the CPU  and realizes processing of controlling a request for access to the database  by the application program . The processing of controlling the access is processing of controlling access to the DB server  in accordance with content of an access request that is issued by the application program . The access request includes, for example, processing of newly adding data to the database  and processing of updating, searching, and deleting data stored in the database .","The DB access program  calls an application programming interface (API) of DB software (not illustrated) that operates on the DB server  () based on an access request. The DB access program  outputs a result of execution of the API as a result of the access request to the application program .",{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIG. 4","FIG. 3","FIG. 4","FIG. 3"],"b":"211"},{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 4","b":["210","211","210","211","211","210"]},"The DB access program  is a program corresponding to a DB access module  extracted from the application program . That is, the DB access module  is a module that calls the API of the DB software (not illustrated) that operates on the DB server  and outputs the result of the execution of the API based on the access request.","The DB access program  performs processing of controlling the access request in accordance with a patch application state of the application program . Details of the DB access program  will be described later with reference to .",{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIG. 5","FIG. 3","FIG. 5","FIGS. 1 and 3","FIG. 5","FIG. 1"],"b":["20","20","20"],"i":["a ","a","b "]},{"@attributes":{"id":"p-0085","num":"0084"},"figref":["FIG. 5","FIG. 3","FIG. 1","FIG. 5","FIGS. 3 and 4"],"b":["20","10","20","210","211","1","211","2","212","211","211","1","211","2"],"i":["a ","a "]},"The application program  illustrated in  is either the application program  before an application of the patch (not-applied) or the application program  after the application of the patch (applied). In this embodiment, the application program  to which the patch has not yet been applied is referred to as an application program  of an old version. In addition, the application program  after the application of the patch will be referred to as an application program  of a new version.","In addition, the AP server includes a part or the entirety of the DB access program - for processing during the transition, the DB access program - for processing after completion of the transition, and the DB background-updating program  in accordance with an application state of the patch to the application program . The operator stores the DB access program - for processing during the transition, the DB access program - for processing after completion of the transition, and the DB background-updating program  in the non-volatile memory  () in accordance with the patch application state of the application program , for example.","In addition, the DB server  illustrated in  includes the DB software  for managing access to the database  and the database . The DB software  is software that performs processing of accessing the database  in accordance with the API.","In the embodiment, the database  includes an old database - and a new database - in accordance with the patch application state of the application program . The old database - is a database corresponding to the application program  to which the patch has not yet been applied. In addition, the new database - is a database corresponding to the application program  after the application of the patch. That is, the old database - includes the table  described above with reference to , and the new database - includes the table , for example.","The DB access program - for processing during the transition is a program for performing the processing of controlling the access until the transition processing from the old database - to the new database - is completed. Until the transition processing is completed, both access requests by the application programs  of the old and new versions are present, and data as targets of access are present in the old database - and new database -. The DB access program - for processing during the transition determines (selects) one of the databases - and - to which an access request is to be transmitted in response to the access request and calls the API of the DB software  that is intended for the determined database - or -. Details of the processing performed by the DB access program - for processing during the transition will be described later with reference to .","The DB access program - for processing after completion of the transition is a program for performing the processing of controlling access after the transition processing from the old database - to the new database - is completed. After completion of the transition, only an access request by the application program  of the new version occurs. That is, the DB access program - for processing after completion of the transition performs an access request to the new database - in response to an access request by the application program  of the new version.","The DB background-updating program  is a program performing the transition processing of the respective data items from the old database - to the new database - (hereinafter, referred to as transition processing) in the background. The DB background-updating program  converts data that is included in the old database - and is not included in the new database - based on a data configuration in the new database - and sequentially adds the data to the new database -. Details of the processing performed by the DB background-updating program  will be described later with reference to .","Next, a description will be given of a flow of processing of applying the patch to two application programs  according to the embodiment with reference to .","Flow of Processing of Applying Patch",{"@attributes":{"id":"p-0095","num":"0094"},"figref":["FIG. 6","FIG. 6","FIGS. 1 and 5","FIG. 1","FIG. 1"],"b":["210","210","20","20","20","20","30","80","10"],"i":["a ","b ","a ","b "]},"In the processing of applying the patch according to the embodiment, the patch is sequentially applied to the two application programs  illustrated in  in the same manner as the rolling update illustrated in . That is, the operator operates one AP server and suspends the other AP server in the process of the processing of applying the patch. Then, the operator applies the patch to the application program  on the AP server on the suspended side.","Therefore, the one AP server is an AP server on the operating side, and the other AP server is an AP server on the suspended side as illustrated in  in the process of the processing of applying the patch. In such a case, the SLB server  transmits a request to the AP server on the operating side (the arrow of the solid line in ). That is, the SLB server  does not transmit a request to the AP server on the suspended side (the arrow of the dotted line in ). As described above with reference to , the respective AP servers and includes the DB access program - for processing during the transition, the DB access program - for processing after completion of the transition, and the DB background-updating program .","In addition, the application program  illustrated in  is either the application program  to which the patch has not yet been applied or the application program  to which the patch has been applied (illustrated as a patch in ) in accordance with the patch application state. Therefore, both an access request by the application program  of the old version and an access request by the application program  of the new version occur in the processing of applying the patch.","Although not illustrated in , the DB background-updating program  sequentially performs the transition processing in the background in the processing of applying the patch according to the embodiment. Therefore data items as targets of the access requests are present in the old and new databases - and - in the processing of applying the patch.","Therefore, the DB access program - for processing during the transition illustrated in  is operated in the AP server or during the transition processing in the processing of applying the patch according to the embodiment. The DB access program - for processing during the transition determines one of databases - and -, to which an access request is to be transmitted, based on information related to a version of the application program  included in the access request and information related to a data transition state. Then, the DB access program - for processing during the transition calls the API of the DB software  that is intended for the determined database - or -.","The information related to a version of the application program  is information indicating whether or not the application program  has been updated, that is, information indicating whether or not the patch has been applied. In addition, the information related to the data transition state is information indicating the transition state from the old database - to the new database - and indicating whether or not target data has been added to the new database -.","In doing so, the DB access program - for processing during the transition can transmit the access request to an appropriate database - or -. That is, the DB access program - for processing during the transition realizes compatibility of the access request in a case in which access requests by the application programs  of a plurality of versions are present together and the data items as targets of the access requests are present in the plurality of databases - and -.","In doing so, it is possible to execute the access request while maintaining consistency of the data items in the databases - and - even in the course of the processing of applying the patch. Therefore, it is possible to provide the service by the application program  even in the course of the processing of applying the patch. According to the embodiment, it is possible to perform the transition processing of the database  in the course of the processing of applying the patch to the application program  by the DB background-updating program  performing the transition processing in the background.",{"@attributes":{"id":"p-0104","num":"0103"},"figref":["FIG. 7","FIG. 7","FIGS. 1 and 6","FIGS. 1 and 6"],"b":["210","20","20"],"i":["a ","b "]},"S: It is assumed that only the AP server with the configuration A is operating in an initial state in the embodiment. On the AP server with the configuration A, the application program  of the old version operates. The operator generates a new empty database - based on a data definition (data configuration) in the application program  after the application of the patch. The empty database is a database, which does not store data, to which only the data definition is applied. In addition, the operator may prepare a program for transition and may generate the new empty database - based on the program for transition, for example.","S: Next, the operator switches the AP server on the operating side from the AP server with the configuration A to the AP server with the configuration B. During the switching, both the AP servers and with the configurations A and B are temporarily in an executed state. After completion of the switching, the application program  of the old version and the DB access program - for processing during the transition operate on the AP server with the configuration B.","In addition, the operator applies the patch to the application program  of the old version on the AP server with the configuration A that is being suspended. In doing so, the application program  on the AP server with the configuration A is updated to the new version. In addition, the operator introduces the DB access program - for the processing during the transition and the DB background-updating program  to the AP server with the configuration A.","S: Next, the operator switches the AP server on the operating side from the AP server with the configuration B to the AP server with the configuration A. During the switching, both the AP servers and with the configurations A and B are temporarily in the executed state. After completion of the switching, the application program  of the new version, the DB access program - for processing during the transition, and the DB background-updating program  operate on the AP server with the configuration A.","In addition, the operator applies the patch to the application program  on the AP server with the configuration B that is being suspended. In doing so, the application program  on the AP server with the configuration is updated to the new version. In addition, the operator updates the DB access program - for processing during the transition on the AP server with the configuration B to the DB access program - for processing after completion of the transition.","S: If the data transition processing by the DB background-updating program  is completed, the operator switches the AP server on the operating side from the AP server with the configuration A to the AP server with the configuration B. During the switching, both the AP servers and with the configurations A and B are temporarily in the executed state. After completion of the switching, the application program  of the new version and the DB access program - for processing after completion of the transition operate on the AP server with the configuration B. In addition, the operator updates the DB access program - for processing during the transition on the AP server with the configuration A, which is being suspended, to the DB access program - for processing after completion of the transition.","In doing so, the updating of the application programs  on the AP servers and with the configurations A and B to the new version is completed, and the data transition processing is completed. In addition, the DB access program - for processing during the transition on the AP servers and with the configurations A and B is updated to the DB access program - for processing after completion of the transition.","Next, a more specific description will be given of the processing, which was described above with reference to the flowchart in , with reference to .",{"@attributes":{"id":"p-0113","num":"0112"},"figref":["FIG. 8","FIG. 7","FIG. 8","FIG. 7","FIG. 8","FIG. 5"],"b":["1","4","1","4"]},"S: As illustrated in , the AP server with the configuration A is operating (operating in ; this will be omitted in the following description) and the AP server with the configuration B is being suspended (suspended in ; this will be omitted in the following description) in the initial state of the processing of applying the patch according to the embodiment. In addition, the application program  on the AP servers and with the configurations A and B is the application program  (\u201cOLD\u201d in ) of the old version. In Step S, the DB access program - for processing during the transition is introduced to the AP server with the configuration B (\u201cPATCH\u201d in ) and generates the new empty database - in accordance with management information. The management information will be described later with reference to .","S: In Step S, the AP server with the configuration B is activated, and both the AP servers and with the configurations A and B are brought into the operating state (\u201cA\u2192B\u201d in ). That is, the AP servers and with the configurations A and B shift to a switching state (switching in ; this will be omitted in the following description). As described above with reference to , the DB access program - for processing during the transition (\u201cTRANSITION\u201d in ) operates in addition to the application program  of the old version on the AP server with the configuration B at this time.","In Step S, the operator suspends the AP server with the configuration A after the switching state. Then, the operator applies a patch to the application program  on the AP server with the configuration A in accordance with the management information (\u201cA patch\u201d in ). In addition, the operator introduces the DB access program - for processing during the transition and the DB background-updating program  to the AP server with the configuration A.","In Step S, the application program  (\u201cOLD\u201d in ) of the old version operates on both the AP servers and with the configurations A and B. However, the DB access program - transmits an access request to the new database - in response to the access request by the application program  of the old version in some cases. The cases include a case of receiving an access request indicating new data addition, for example. In doing so, new data is added to the new database -. Therefore, the new database - is brought into a coexisting state (\u201cCOEXISTING\u201d in ). Details of the DB access program - in the case of receiving the access request indicating new data addition will be described later with reference to .","S: In Step S, the AP server with the configuration A is activated, and both the AP servers and with the configurations A and B are brought into the operating state (\u201cB\u2192A\u201d in ). That is, the AP servers and with the configurations A and B are brought into the switching state.","During the switching state, the DB access program - for processing during the transition (\u201cTRANSITION\u201d in ) and the DB background-updating program  (\u201cTRANSITION\u201d in ) operate in addition to the application program  (\u201cNEW\u201d in ) of the new version on the AP server with the configuration A. In addition, the application program  of the old version and the DB access program - for processing during the transition operate on the AP server with the configuration B in the same manner as in Step S.","In Step S, the operator suspends the AP server with the configuration B after the switching state. Then, the operator applies a patch to the application program  on the AP server with the configuration B in accordance with the management information (\u201cB PATCH\u201d in ). In addition, the operator updates the DB access program - for the processing during the transition with the configuration B to the DB access program - for the processing after completion of the transition. Moreover, the DB background-updating program  sequentially adds data that is present in the old database - to the new database - in the background (\u201cDB TRANSITION\u201d in ). In doing so, the old database - is brought into the coexisting state (\u201cCOEXISTING\u201d in ).","The process in Step S is continued until the transition processing by the DB background-updating program  is completed. The state where the transition processing has been completed means a state in which the number of data items that is not present in the new database - while being present in the old database - becomes zero. The operator determines a progress of the transition processing in accordance with a progress management table of the management information which will be described later with reference to , for example. In a case of a large-scaled service providing system, it takes a period in units of months for the process in Step S in some cases. Details of the processing by the DB background-updating program  will be described later with reference to .","There is a case in which the DB access program - makes transition of data as a target of access to the new database - depending on an access request. For example, the DB access program - makes transition of data as a target of update in the old database - to the new database - in response to an access request indicating data update by the application program  of the new version. Details of the DB access program - in the case of receiving the access request indicating data update will be described later with reference to .","In contrast, transition of data that is not a target of update to the new database - is not made. Therefore, it is possible to make transition of all data items included in the old database - to the new database - in parallel with the processing of applying the patch by the DB background-updating program  performing the transition processing.","On the AP server with the configuration A, the application program  of the old version operates in Steps S and S while the application program  updated to the new version operates in Step S. During the switching state in Step S, the application program  of the new version operates on the AP server with the configuration A, and the application program  of the old version operates on the AP server with the configuration B.","That is, access requests by the application programs  of the plurality of versions are present together in a period during which the processing in Steps S to S is performed as described above with reference to . During the same period, data items for which the access requests are transmitted are present in both the old database - and the new database -.","Therefore, the DB access program - for processing during the transition is made to operate on the AP servers and as described above with reference to  in the embodiment. Then, the DB access program - for processing during the transition determines the database , to which an access request is to be transmitted, based on the patch application state of the application program  included in the access request and the target data transition state. That is, the DB access program - for processing during the transition appropriately determines the database  to which the access request is to be transmitted.","In doing so, it is possible to access the database - or - by the application program  on each AP servers or without causing inconsistency of data. That is, it is possible to appropriately execute access requests to the DB server  even in a case in which data as a target of access is present in both the databases - and - with different data configurations and the access requests are issued by the application programs  of the plurality of versions.","In addition, the operator introduces the DB access program - for processing during the transition to the AP servers and in advance in Steps S and S. In doing so, it is possible to perform processing of controlling an access request by the DB access program - for processing during the transition in Step S.","S: In Step S, the AP server with the configuration B is activated, and both the AP servers and with the configurations A and B are brought into the operating state (\u201cA\u2192B\u201d in ). That is, the AP servers and with the configurations A and B are brought into the switching state. At this time, the DB access program - for processing after completion of the transition operates in addition to the application program  of the new version on the AP server with the configuration B.","During the switching state in Step S, the application program  of the new version operates on both the AP servers and with the configurations A and B. That is, only the application program  of the new version operates. In addition, the DB transition processing by the DB background-updating program  is completed in Step S. Therefore, the old database - and the DB background-updating program  are brought into a deletion waiting state (\u201cDELETION WAITING\u201d in ) during the switching state in Step S.","In Step , the operator suspends the AP server with the configuration A after the switching state. Then, the operator updates the DB access program - for processing during the transition on the AP server with the configuration A to the DB access program - for processing after completion of the transition in accordance with the management information (\u201cA PATCH\u201d in ). In addition, the operator deletes the DB background-updating program  on the AP server with the configuration A (\u201cDELETED\u201d in ) and deletes the old database - (\u201cNONE\u201d in ).","In doing so, the applications of the patch to the application programs  on the AP servers and with the configurations A and B are completed, and the transition processing from the old database - to the new database - is completed after Step S.","According to the embodiment, it is possible to execute appropriate access requests to the DB server  even in the case in which access target data items are present in both the database - and - and the access requests are issued by the application programs  of the plurality of versions as described above. Therefore, it is possible to execute at least one application program  even in the case in which the patch that accompanies a change in data configurations in the database  is sequentially applied to the plurality of application programs . Accordingly, it is possible to apply the patch that accompanies a change in data configurations in the database  to the application programs  without suspending services provided by the application programs .","According to the embodiment, the program of the DB software  that operates on the DB server  is not changed in the processing of applying the patch to the application programs . In the embodiment, only the programs that operate on the AP servers and are updated. Therefore, since the processing is not performed on the other servers (the DB server , for example) in updating the application programs , it is possible to suppress a range of influence due to the update of the application programs .","According to the embodiment, the DB background-updating program  is made to operate in addition to the DB access program - for processing during the transition on the AP servers and on which the application programs  of the plurality of versions operate. The DB background-updating program  performs the transition processing of changing the respective data in the old database - to have the data configuration in the new database - and adding the respective data to the new database - in the background. Therefore, according to the embodiment, it is possible to apply the patch to the application programs  and to perform the transition processing of the database  without suspending the services provided by the application programs . Accordingly, it is possible to avoid permanent conversion processing based on a difference in the data configurations between the plurality of versions and to thereby suppress a processing load.","Management Information","Next, a description will be given of the management information that is used in the processing of applying the patch as illustrated in  with reference to . The operator stores a file that is used in the processing of applying the patch in the non-volatile memories  (), for example, in the AP servers and via the management server described above with reference to  through the intranet. The operator stores the management information illustrated in  along with the patch of the application program , the DB access program , and the DB background-updating program  illustrated in . The operator performs the processing of applying the patch as illustrated in  based on the management information.",{"@attributes":{"id":"p-0138","num":"0137"},"figref":["FIG. 9","FIGS. 6, 7, and 8","FIG. 9"],"b":["310","310","210","211","1","211","2","212"]},"The list of the correction files of the application programs  include names of files before the update and names of files after the update. The names of files before the update are names of files of the application programs  before the application of the patch. In addition, the names of files after the update are names of files of the application programs  after the application of the patch.","In addition, the list of files of the DB access program - for processing during the transition includes names of files before the update and names of files after the update. The names of files before the update are names of files of the DB access module  described above with reference to , for example. In addition, the names of files after the update are names of files of the DB access program - for processing during the transition illustrated in . Details of the DB access program - for processing during the transition will be described later with reference to .","In addition, the list of files of the DB program - for processing after completion of the transition includes names of files before the update and names of files after the update. The names of files before the update are names of files of the DB access program - for processing during the transition. That is, the names of files before the update are the same as those after the update in the list of the files of the DB access program - for processing during the transition. The names of files after the update are names of files of the DB access program - for processing after completion of the transition.","Furthermore, the list of files of the DB background-updating program  includes names of files of the DB background-updating program  illustrated in . Details of the DB background-updating program  will be described later with reference to .",{"@attributes":{"id":"p-0143","num":"0142"},"figref":["FIG. 10","FIGS. 6, 7, and 8"],"b":"320"},"The management information  illustrated in  includes names of tables (before the update and after the update) as targets of changes in the data configurations due to applications of the patch to the application programs . According to the embodiment, the names of tables as the targets of changes in the data configurations due to the applications of the patch are the names of tables illustrated as examples in . The operator generates the new empty database - based on the names of tables after the update as the targets of changes in the data configurations in the management information , for example (Step S in ).","In addition, the management information  illustrated in  includes names of the DB background-updating program and a new DB back-updating progress management table. The names of the DB background-updating programs are the same information as the list of files of the DB background-updating program  of the management information  illustrated in . The new DB back-updating progress management table is a management table indicating a progress of the transition processing of the DB background-updating program . The operator determines whether or not the transition processing has been completed with reference to the DB back-updating processing progress management table.","Next, details of the DB access program - for processing during the transition described above with reference to  will be described with reference to . In addition, details of the DB background-updating program  described above with reference to  will be described with reference to .","DB Access Program for Processing During Transition","Referring to , the details of the DB access program - for processing during the transition depending on types of access requests will be described. As described above, access requests include, for example, addition of new data to the database  and update, search, and deletion of data stored in the database .","Access Request: Update",{"@attributes":{"id":"p-0150","num":"0149"},"figref":["FIG. 11","FIG. 5"],"b":["211","1","211","1","211","1"],"i":["a ","a "]},"Parameters of the function \u201cupdate\u201d are a value \u201ctable\u201d, a value \u201cversion\u201d, a value \u201cdata\u201d, and a value \u201cid\u201d. The value \u201ctable\u201d indicates identification information of a table as a target of update. The value \u201cversion\u201d indicates a version (patch unapplied or patch applied) of the application program  that issues the access request. The value \u201cdata\u201d indicates data as a target of update, and the value \u201cid\u201d indicates an identification number of the data as the target of update.","The DB access program -illustrated in  determines the database  to which the access request is to be transmitted based on a version of the application program  indicated by the value \u201cversion\u201d and a transition state of the value \u201cdata\u201d (data as a target of update).","That is, the DB access program -selects the new database - and updates the data regardless of the version of the application program  if the transition of the data as the target of update has already been made. In a case in which the transition of the data as the target of update has not yet been made, the DB access program -selects the new database - and updates the data if the version of the application program  is the new version. The DB access program -selects the old database - and updates the data if the version of the application program  is the old version.","In doing so, it is possible to appropriately perform the processing of updating the data even in the case in which the data as the target of update is present in both the old database - and the new database - and access requests by the application programs  of the old and new versions are present together.","If the version of the application program  that is indicated by the value \u201cversion\u201d is different from the version of the application program  corresponding to the database  to which the access request is to be transmitted, the DB access program -converts the value \u201cdata\u201d. Hereinafter, the version of the application program  corresponding to the database  will be referred to as a version of the database .","That is, the DB access program -converts the data as the target of the update to have the data configuration of the new database - in a case of updating the data in the new database - in response to the access request from the application program  of the old version. In doing so, it is possible to appropriately perform the processing of updating the data even in a case in which the data that is included in the access request has a different data configuration from that in the database  to which the access request is transmitted.","A code cd in the DB access program -illustrated in  is a description in a case in which transition of the data as the target of the update to the new database - has already been made. The code cd is a description of processing in a case in which the transition of the data as the target of the update to the new database - has not yet been made. In addition, codes cd and cd are descriptions of processing of determining a version of the application program .","Next, a description will be given of processing performed by the DB access program -illustrated in  with reference to the flowchart in .",{"@attributes":{"id":"p-0159","num":"0158"},"figref":["FIG. 12","FIG. 11","FIG. 11","FIG. 12","FIG. 11","FIG. 12","FIG. 11","FIG. 11"],"b":["211","1","11","80","2","14","16","12","80","2","20","24","13","14","14","20"],"i":"a "},"S: The DB access program -for processing during the transition performs exclusive control of a table as a target of update in the new database -. In doing so, accesses to the table in the database - by the other programs are not available. According to the embodiment, exclusive management of the old database - is performed together by performing exclusive management of only the new database - as will be described later with reference to .","S: The DB access program -for processing during the transition searches for the target table in the new database - based on the value \u201cid\u201d as a parameter.","S: The DB access program -for processing during the transition determines whether or not the data corresponding to the value \u201cid\u201d is present in the target table in the new database -.","S: If the data corresponding to the value \u201cid\u201d is present in the target table in the new database - (YES in S), this means that the transition of the data as the target of the update has already been made. The DB access program -for processing during the transition further determines whether or not the value \u201cversion\u201d as a parameter indicates the new version (cd in ). That is, the DB access program -for processing during the transition determines the version of the application program  that has issued the access request.","S: If the value \u201cversion\u201d indicates the old version (NO in S), this means that the application program  of the old version has issued the access request. That is, Step S is for the case in which the version of the application program  that has issued the access request and the transition of the data as the target of the update has already been made. In such a case, the DB access program -for processing during the transition updates the data as the target of the update in the new database -.","For this reason, the version of the application program  that has issued the access request is different from the version of the database  to which the access request has been transmitted. Therefore, the DB access program -for processing during the transition converts the value \u201cdata\u201d as a target of writing (the data as the target of the update) to have the data configuration in the new database -. In doing so, it is possible to appropriately perform the processing of updating the data even in the case in which the access to the new database - is made in response to the access request by the application program  of the old version.","In a case in which the version of the application program  that has issued the access request is the new version (YES in S) and the transition of the data as the target of the update has already been made (YES in S), the DB access program -for processing during the transition does not convert the value \u201cdata\u201d.","S: The DB access program -for processing during the transition updates the target table in the new database - in accordance with the data as the target of the update that is indicated by the value \u201cdata\u201d. Steps S to S (cd in ) correspond to processing in the case in which the transition of the data as the target of the update has already been made (YES in S). In the case in which the transition of the data as the target of the update has already been made, the DB access program -for processing during the transition selects the new database - regardless of the version of the application program  that has issued the access request. Then, the DB access program -for processing during the transition updates the data as the target of the update in the new database -.","S: In a case in which the data with the value \u201cid\u201d is not present in the target table in the new database - (NO in S), the DB access program -for processing during the transition searches for the target table in the old database - based on the value \u201cid\u201d.","S: The DB access program -for processing during the transition determines whether or not the data with the value \u201cid\u201d is present in the target table in the old database -.","S: If the data with the value \u201cid\u201d is not present in the target table in the old database - (NO in S), this means that no data is present in both the databases - and -. Therefore, the DB access program -for processing during the transition sets information, which indicates that the data as the target of the update is not present, as a result of the update.","S: In a case in which the data with the value \u201cid\u201d is present in the target table in the old database - (YES in S), this means that the transition of the data as the target of the update has not yet been made. That is, this means a case in which the data with the value \u201cid\u201d is not present in the new database - while being present in the old database -. The DB access program -for processing during the transition further determines whether or not the value \u201cversion\u201d indicates the new version (cd in ).","S: In the case in which the value \u201cversion\u201d indicates the new version (YES in S), this means that the application program  of the new version has issued the access request. That is, Step S is for the case in which the version of the application program  that has issued the access request is the new version and the transition of the data as the target of the update has not yet been made. The DB access program -for processing during the transition converts search result data in the old database - to have the data configuration in the new database -.","S: The DB access program -for processing during the transition adds the data after the conversion in Step S to the table in the new database -. That is, the DB access program -for processing during the transition makes transition of the search result data to the new database -.","S: The DB access program -for processing during the transition updates the target table in the new database - in accordance with the data as the target of the update that is indicated by the value \u201cdata\u201d. In doing so, the DB access program -for processing during the transition makes the transition of the data as the target of the update included in the old database - to the new database - and updates the data as the target of the update.","S: In a case in which the value \u201cversion\u201d indicates the old version (NO in S), this means that the application program  of the old version has issued the access request. The DB access program -for processing during the transition updates the target table in the old database - in accordance with the data as the target of the update that is indicated by the value \u201cdata\u201d.","In the case in which the transition of the data as the target of the update has not yet been made (YES in S) as illustrated in Steps S to S (cd in ), the DB access program -for processing during the transition refers to the version of the application program  that has issued the access request. Then, the DB access program -for processing during the transition selects the old database - or the new database - in accordance with the version of the application program  that has issued the access request, and updates the data as the target of the update.","S: The DB access program -for processing during the transition performs exclusive release of the target table in the new database -. In doing so, the other programs can access the table in the new database -.","As illustrated in , the DB access program -for processing during the transition determines the database - or - as the target of the update based on the version of the application program  that has issued the access request and the transition state of the data as the target of the update. In doing so, the DB access program -for processing during the transition can appropriately determine the database - or - to which the access request is to be transmitted. Therefore, it is possible to appropriately perform the update processing even in the case in which the data as the target of the update is present in both the old database - and the new database - and access requests by the application programs  of the old and new versions are present together.","Access Request: New Addition",{"@attributes":{"id":"p-0180","num":"0179"},"figref":["FIG. 13","FIG. 5"],"b":["211","1","211","1","211","1"],"i":["b ","b "]},"Parameters of the function \u201ccreate\u201d are a value \u201ctable\u201d, a value \u201cversion\u201d, and a value \u201cdata\u201d. The value \u201ctable\u201d indicates identification information of a table as a target of new addition. The value \u201cversion\u201d indicates a version (patch unapplied or patch applied) of the application program  that has issued the access request. The value \u201cdata\u201d indicates data as a target of new addition.","The DB access program -illustrated in  selects the new database - and adds data thereto regardless of the version of the application program  that is indicated by the value \u201cversion\u201d. Therefore, it is possible to suppress the amount of data as a target of the transition processing by the DB background-updating program .","In addition, the DB access program -converts the value \u201cdata\u201d (data as the target of new addition) in a case in which the version of the application program  that is indicated by the value \u201cversion\u201d is different from the version of the database  to which the access request is transmitted. That is, the DB access program -converts the data as the target of new addition to have the data configuration in the new database - in the case of adding the data to the new database - in response to a request for new addition from the application program  of the old version.","A code cd in the DB access program -indicates a description of the processing of determining the version of the application program . Next, a description will be given of processing by the DB access program -illustrated in  with reference to the flowchart illustrated in .",{"@attributes":{"id":"p-0185","num":"0184"},"figref":["FIG. 14","FIG. 13","FIG. 13"],"b":["211","1","21","31"],"i":"b "},"S: The DB access program -for processing during the transition determines whether or not the value \u201cversion\u201d indicates the new version (cd in ). That is, the DB access program -for processing during the transition determines the version of the application program  that has issued the access request.","S: In a case in which the value \u201cversion\u201d indicates the old version (NO in S), this means that the application program  of the old version has issued the access request. The DB access program -for processing during the transition adds the data to be newly added to the target table in the new database - regardless of the version of the application program . For this reason, the version of the application program  that has issued the access request is different from the version of the database  to which the access request is transmitted. That is, the data included in the access request has a different data configuration from that in the database  to which the access request is transmitted.","Therefore, the DB access program -for processing during the transition converts the value \u201cdata\u201d as a target of writing (data as the target of the new addition) to have the data configuration in the new database - in Step S. In doing so, it is possible to appropriately perform the processing of newly adding the data even in the case in which access to the new database - is made in response to the access request by the application program  of the old version.","In the case in which the version of the application program  that has issued the access request is the new version (YES in S), the DB access program -for processing during the transition does not convert the value \u201cdata\u201d.","S: The DB access program -for processing during the transition performs exclusive control of the table as the target, to which the data is newly added, in the new database -. In doing so, accesses to the table in the new database - by the other programs are not available.","S: The DB access program -for processing during the transition adds the data as the target of new addition that is indicated by the value \u201cdata\u201d to the target table in the new database -.","S: The DB access program -for processing during the transition performs exclusive release of the target table in the new database -. In doing so, the other programs can access the table in the new database -.","As illustrated in , the DB access program -for processing during the transition determines the new database - as the database as the target of addition regardless of the version of the application program  that has issued the access request. In doing so, the DB access program -for processing during the transition can appropriately determine the database - or - to which the access request is to be transmitted. Therefore, it is possible to appropriately perform the addition processing even in the case in which the data as the target of addition is present in both the old database - and the new database - and access requests by the application programs  of the old and new versions are present together.","Access Request: Search",{"@attributes":{"id":"p-0195","num":"0194"},"figref":["FIG. 15","FIG. 5"],"b":["211","1","211","1","211","1"],"i":["c ","c "]},"Parameters of the function \u201cfind\u201d is a value \u201ctable\u201d, a value \u201cversion\u201d, and a value \u201cid\u201d. The value \u201ctable\u201d indicates identification information of a table as a target of search. The value \u201cversion\u201d indicates a version (patch unapplied or patch applied) of the application program  that has issued the access request. The value \u201cid\u201d indicates an identification number of data as a target of the search.","The DB access program -illustrated in  determines the database - or - to which the access request is to be transmitted based on the transition state of the data as the target of the search regardless of the version of the application program  that has issued the access request. That is, the DB access program -selects the new database - if the transition of the data as the target of the search to the new database - has already been made, or selects the old database - if the transition to the new database - has not yet been made, and performs the search processing.","In addition, the DB access program -converts the read search data in a case in which the version of the application program  that is indicated by the value \u201cversion\u201d is different from the version of the database  to which the access request is transmitted. In doing so, it is possible to appropriately perform the processing of searching for the data even in the case in which the read data has a different data configuration from that in the database  to which the access request is transmitted.","That is, the DB access program -converts the read data to have the data configuration in the new database - in the case in which the old database - is searched in response to the access request from the application program  of the new version. In addition, the DB access program -converts the read data to have the data configuration in the old database - in the case in which the new database - is searched for in response to the access request from the application program  of the old version.","A code cd in the DB access program -illustrated in  is a description of processing in the case in which the transition of the data as the target of the search to the new database - has already been made. A code cd is a description of processing in the case in which the transition of the data as the target of the search to the new database - has not yet been made. In addition, codes cd and cd indicate descriptions of processing of determining a version of the application program .","Next, a description will be given of processing performed by the DB access program -illustrated in  with reference to the flowchart illustrated in .",{"@attributes":{"id":"p-0202","num":"0201"},"figref":["FIG. 16","FIG. 15","FIG. 15","FIG. 16","FIG. 15","FIG. 16","FIG. 15","FIG. 15"],"b":["211","1","80","2","31","44","47","80","2","32","51","54","33","44","34","51"],"i":"c "},"S: The DB access program -for processing during the transition performs exclusive control of the table as the target of the search in the new database -. In doing so, accesses to the table in the new database - by the other programs are not available.","S: The DB access program -for processing during the transition searches the target table in the new database - based on the value \u201cid\u201d as a parameter.","S: The DB access program -for processing during the transition determines whether or not the data with the value \u201cid\u201d is present in the target table in the new database -.","S: If the data with the value \u201cid\u201d is present in the target table in the new database - (YES in S), this means that the transition of the data as the target of the search has already been made. The DB access program -searches for the data as the target of the search in the new database - in the case in which the transition of the data as the target of the search to the new database - has already been made. The DB access program -for processing during the transition further determines whether or not the value \u201cversion\u201d indicates the new version (cd in ).","S: In a case in which the value \u201cversion\u201d indicates the new version (YES in S), this means that the application program  of the new version has issued the access request. In Step S, the version of the application program  that has issued the access request is the same as the version of the database  to which the access request is transmitted. Therefore, the DB access program -for processing during the transition sets the data of the result of the search in the new database - as a result of the search without converting the data.","S: In contrast, if the value \u201cversion\u201d indicates the old version (NO in S), this means that the application program  of the old version has issued the access request. In Step S, the version of the application program  that has issued the access request is different from the version of the database  as the target of the search. That is, the data included in the access request has a different data configuration as that in the database  to which the access request is transmitted.","Therefore, the DB access program -for processing during the transition converts the read data as the result of the search from the new database - to have the data configuration in the old database -. In doing so, it is possible to appropriately perform the processing of searching data even in the case in which access to the new database - is made in response to the access request by the application program  of the old version.","S: The DB access program -for processing during the transition sets the data converted in Step S as a result of the search. In the case in which the transition of the data as the target of the search to the new database - has already been made as illustrated in Steps S to S (cd in ), the DB access program -searches for the data as the target of the search in the new database -.","S: In contrast, if the data with the value \u201cid\u201d is not present in the target table in the new database - (NO in S), the DB access program -for processing during the transition searches the target table in the old database - based on the value \u201cid\u201d.","S: The DB access program -for processing during the transition determines whether or not the data with the value \u201cid\u201d is present in the target table in the old database -.","S: In a case in which the data with the value \u201cid\u201d is not present in the target table in the old database - (NO in S), this means that the data is not present in both the databases - and -. Therefore, the DB access program -for processing during the transition sets information, which indicates that the data as the target of the search is not present, as a result of the update.","S: In a case in which the data with the value \u201cid\u201d is present in the target table in the old database - (YES in S), this means that the transition of the data as the target of the search has not yet been made. The DB access program -searches for the data as the target of the search in the old database - in the case in which the transition of the data as the target of the search to the new database - has not yet been made. The DB access program -for processing during the transition further determines whether or not the value \u201cversion\u201d indicates the new version (cd in ).","S: In the case in which the value \u201cversion\u201d indicates the new version (YES in S), this means that the application program  of the new version has issued the access request. In Step S, the version of the application program  that has issued the access request is different from the version of the database  to which the access request is transmitted. That is, the data that is included in the access request has a different data configuration from that in the database  to which the access request is transmitted.","Therefore, the DB access program -for processing during the transition converts the data read in the old database - as a result of the search to have the data configuration in the new database -. In doing so, it is possible to appropriately perform the processing of searching for the data even in the case in which the access to the old database - is made in response to the access request by the application program  of the new version.","S: The DB access program -for processing during the transition sets the data converted in Step S as a result of the search.","S: In a case in which the value \u201cversion\u201d indicates the old version (NO in S), this means that the application program  of the old version has issued the access request. In Step S, the version of the application program  that has issued the access request is the same as the version of the database  to which the access request is transmitted. Therefore, the DB access program -for processing during the transition sets the data of the result of the search in the old database - as a result of the search without converting the data.","In the case in which the transition of the data as the target of the search to the new database - has not yet been made as illustrated in Steps S to S (cd in ), the DB access program -searches for the data as the target of the search in the old database -.","S: The DB access program -for processing during the transition performs exclusive release of the target table in the new database -. In doing so, the other programs can access the table in the new database -.","As illustrated in , the DB access program -for processing during the transition determines the database - or - as the target of the search based on the transition state of the data as the target of the search regardless of the version of the application program  that has issued the access request. In doing so, the DB access program -for processing during the transition can appropriately determine the database - or - to which the access request is to be transmitted. Therefore, it is possible to appropriately perform the search processing even in the case in which the data as the target of the search is present in both the old database - and the new database - and access requests by the application programs  of the old and new versions are present together.","Access Request: Condition Search (One Case)",{"@attributes":{"id":"p-0223","num":"0222"},"figref":["FIG. 17","FIG. 5"],"b":["211","1","211","1","211","1"],"i":["d ","d "]},"Parameters of the function \u201cwhere\u201d are a value \u201ctable\u201d, a value \u201cversion\u201d, and a value \u201ccondition\u201d. The value \u201ctable\u201d indicates identification information of a table as a target of the condition search. The value \u201cversion\u201d indicates a version (patch unapplied or patch applied) of the application program  that has issued the access request. The value \u201ccondition\u201d indicates a search condition.","The DB access program -illustrated in  determines the database  to which the access request is to be transmitted based on the transition state of the data as the target of the search regardless of the version of the application program  that has issued the access request. Specifically, the DB access program -searches for data that meets a search condition in the old database - and the new database - and selects a result of the search of one of the databases - and - in accordance with the transition state of the data as the target of the search.","In the same manner as in , the DB access program -converts the read data as the result of the search in the case in which the version of the application program  that is indicated by the value \u201cversion\u201d is different from the version of the database  to which the access request is transmitted. Codes cd and cd in the DB access program -in  indicate descriptions of the processing of determining the version of the application program . In addition, a code cd indicates a description of the processing of determining a result of the search in the old database - and the new database -.","Next, a description will be given of processing performed by the DB access program -illustrated in  with reference to the flowchart illustrated in  and .",{"@attributes":{"id":"p-0228","num":"0227"},"figref":["FIG. 18A","FIG. 18B","FIG. 17","FIG. 17","FIG. 17","FIG. 17"],"b":["211","1","41","73","42","76","43","67"],"i":"d "},"S: The DB access program -for processing during the transition performs exclusive control of a table as a target of the condition search in the new database -. In doing so, accesses to the table in the new database - by the other programs are not available.","S: The DB access program -for processing during the transition determines whether or not the value \u201cversion\u201d indicates the new version.","S: In a case in which the value \u201cversion\u201d indicates the new version (YES in S), this means that the application program  of the new version has issued the access request. Therefore, the DB access program -for processing during the transition converts the value \u201ccondition\u201d in accordance with a specification of the old version.","S: In contrast, if the value \u201cversion\u201d indicates the old version (NO in S), this means that the application program  of the old version has issued the access request. Therefore, the DB access program -for processing during the transition converts the value \u201ccondition\u201d in accordance with a specification of the new version.","S: The DB access program -for processing during the transition searches for the target table in the old database - and the new database - in accordance with the value \u201ccondition\u201d,","S: The DB access program -for processing during the transition determines whether or not there is data that meets the value \u201ccondition\u201d in both the old database - and the new database -.","S: In a case in which there is data that meets the value \u201ccondition\u201d in both the databases  (YES in S), the DB access program -for processing during the transition determines a result of the search (cd in ). Specifically, the DB access program -for processing during the transition determines whether or not the value \u201cid\u201d as a result of the search in the new database - is a value that is equal to or less than the value \u201cid\u201d as the result of the search in the old database -.","In the example illustrated in , values \u201cid\u201d that meet the search condition are searched in an ascending order of the values \u201cid\u201d. According to the embodiment, the DB background-updating program  sequentially performs data transition processing. Therefore, ratios of data items that are stored in the respective databases - and - are different depending on a progress of the data transition processing. That is, in a case in which the transition processing slightly proceeds, this means that a major part of data is stored in the old database -. In the case of searching the search condition in the ascending order of the values \u201cid\u201d, there is a high possibility that a value \u201cid\u201d as the result of the search in one of the databases - and -, which stores more data, is smaller. Therefore, the DB access program -for processing during the transition compares the values \u201cid\u201d as the results of the search and employs the search result of the smaller value \u201cid\u201d.","S: In a case in which the value \u201cid\u201d as the result of the search in the new database - is a value that is equal to or less than the value \u201cid\u201d as the result of the search in the old database - (YES in S), the DB access program -for processing during the transition employs the result of the search in the new database -. The DB access program -for processing during the transition invalidates the result of the search in the old database -. That is, the DB access program -for processing during the transition changes the result of the search to indicate that the data that meets the value \u201ccondition\u201d is present only in the new database -.","S: In contrast, if the value \u201cid\u201d as the result of the search in the new database - is greater than the value \u201cid\u201d as the result of the search in the old database - (NO in S), the DB access program -for processing during the transition employs the result of the search in the old database -. The DB access program -for processing during the transition invalidates the result of the search in the new database -. That is, the DB access program -for processing during the transition changes the result of the search to indicate that the data that meets the value \u201ccondition\u201d is present only in the old database -.","S: The DB access program -for processing during the transition determines whether no data meets the value \u201ccondition\u201d in both the old database - and the new database -.","S: In the case in which no data meets the value \u201ccondition\u201d in both the databases - and - (YES in S), the DB access program -for processing during the transition sets an indication that there is no data that meets the value \u201ccondition\u201d in the result of the search.","S: In a case in which the data that meets the value \u201ccondition\u201d is present in any of the databases - and - (NO in S), the DB access program -for processing during the transition determines whether or not the data that meets the value \u201ccondition\u201d is present only in the new database -.","S: In a case in which the data that meets the value \u201ccondition\u201d is present only in the new database - (YES in S), the DB access program -for processing during the transition further determines whether or not the value \u201cversion\u201d indicates the new version (cd in ). In a case of corresponding Step S, the processing proceeds to Step S.","S: In a case in which the value \u201cversion\u201d indicates the new version (YES in S), this means that the application program  of the new version has issued the access request. In Step S, the version of the application program  that has issued the access request is the same as the version of the database  to which the access request is transmitted. Therefore, the DB access program -for processing during the transition sets the data corresponding to the value \u201cid\u201d as the result of the search in the new database - as the result of the search without converting the data.","S: In contrast, if the value \u201cversion\u201d indicates the old version (NO in S), this means that the version of the application program  that has issued the access request is different from the version of the database  to which the access request is transmitted. Therefore, the DB access program -for processing during the transition converts the data corresponding to the value \u201cid\u201d as the result of the search in the new database - to have the data configuration in the old database -, and sets the data as the result of the search in the same manner as in .","S: In contrast, if the data that meets the value \u201ccondition\u201d is present only in the old database - (NO in S), the DB access program -for processing during the transition further determines whether or not the value \u201cversion\u201d indicates the new version (cd in ). In a case of corresponding Step S, the processing proceeds to Step S.","S: In a case in which the value \u201cversion\u201d indicates the new version (YES in S), this means that the application program  of the new version has issued the access request. In Step S, the version of the application program  that has issued the access request is different from the version of the database  to which the access request is transmitted. Therefore, the DB access program -for processing during the transition converts the data corresponding to the value \u201cid\u201d as the result of the search in the old database - to have the data configuration in the new database - and sets the data as the result of the search in the same manner as in .","S: In a case in which the value \u201cversion\u201d indicates the old version (NO in S), the version of the application program  that has issued the access request is the same as the version of the database  to which the access request is transmitted. Therefore, the DB access program -for processing during the transition sets the data corresponding to the value \u201cid\u201d as the result of the search in the old database - as the result of the search without converting the data.","S: The DB access program -for processing during the transition performs exclusive release of the target table in the new database -. In doing so, the other programs can access the table in the new database -.","As illustrated in , the DB access program -for processing during the transition determines the database - or - to which the access request is to be transmitted based on the transition state of the data regardless of the version of the application program  that has issued the access request. Therefore, it is possible to appropriately perform the condition search processing even in the case in which the data as the target of the search is present in both the old database - and the new database - and access requests by the application programs  of the old and new versions are present together.","Access Request: Condition Search (All Cases)",{"@attributes":{"id":"p-0251","num":"0250"},"figref":["FIG. 19","FIG. 5"],"b":["211","1","211","1","211","1"],"i":["e ","e "]},"Parameters of the function all is a value \u201ctable\u201d, a value \u201cversion\u201d, and a value \u201ccondition\u201d. The respective values are the same as those in . The DB access program -illustrated in  determines a database  to which the access request is to be transmitted based on the transition state of the data as the target of the search regardless of the version of the application program  that has issued the access request. Specifically, the DB access program -searches for data that meets the search condition in the old database - and the new database - in accordance with the transition state of the data, and sums up the results of the search in both the databases so as not cause overlapping.","In addition, the DB access program -illustrated in  converts the read data of the result of the search in a case in which the version of the application program  that is indicated by the value \u201cversion\u201d is different from the version of the database  to which the access request is transmitted. This is the same as the conversion processing for the condition search (one case) illustrated in . A code cd in the DB access program -in  indicates a description of processing of determining the version of the application program .","Next, a description will be given of processing performed by the DB access program -illustrated in  with reference to the flowchart in .",{"@attributes":{"id":"p-0255","num":"0254"},"figref":["FIG. 20","FIG. 19","FIG. 19","FIG. 20","FIG. 18"],"b":["211","1","51","86","81","85","61","65"],"i":"e "},"S: The DB access program -for processing during the transition further determines whether or not the value \u201cversion\u201d indicates the new version (cd in ).","S: In a case in which the value \u201cversion\u201d indicates the new version (YES in S), this means that the application program  of the new version has issued the access request. The DB access program -for processing during the transition sets all the data items that meet the value \u201ccondition\u201d in the new database - as results of the search.","S: The DB access program -for processing during the transition converts data that is not present in the new database - from among the data items that meet the value \u201ccondition\u201d in the old database - to have the data configuration in the new database - and adds the data to the results of the search. In doing so, the DB access program -for processing during the transition sums up the results of the search in the old database - and the new database -.","S: In a case in which the value \u201cversion\u201d indicates the old version (NO in S), this means that the application program  of the old version has issued the access request. The DB access program -for processing during the transition converts all the data items that meet the value \u201ccondition\u201d in the new database - to have the data configuration in the old database - and sets the data as results of the search.","S: The DB access program -for processing during the transition adds data that is not present in the new database - from among the data items that meet the value \u201ccondition\u201d in the old database - to the results of the search. In doing so, the DB access program -for processing during the transition sums up the results of the search in the old database - and the new database -.","S: The DB access program -for processing during the transition performs exclusive release of the target table in the new database -. In doing so, the other programs can access the table in the new database -.","As illustrated in , the DB access program -for processing during the transition selects the database - or - as the target of the search of a plurality of data items regardless of the version of the application program  that has issued the access request. Therefore, it is possible to appropriately perform the condition search processing even in the case in which the data as the target of the search is present in both the old database - and the new database - and access requests by the application programs  of the old and new versions are present together.","Access Request: Deletion",{"@attributes":{"id":"p-0264","num":"0263"},"figref":["FIG. 21","FIG. 5"],"b":["211","1","211","1","211","1"],"i":["f ","f "]},"Parameters of the function \u201cdestroy\u201d is a value \u201ctable\u201d, a value \u201cversion\u201d, and a value \u201cid\u201d. The value \u201ctable\u201d indicates identification information of a table as a target of deletion. The value \u201cversion\u201d indicates a version (patch unapplied or patch applied) of the application program  that has issued the access request. The value \u201cid\u201d indicates identification information of data as a target of the deletion.","The DB access program -illustrated in  determines the database  to which the access request is to be transmitted based on a transition state of a DB of the value \u201cdata\u201d (data as the target of the deletion) regardless of the version of the application program  that is indicated by the value \u201cversion\u201d. That is, the DB access program -deletes the target data from both the databases - and - in a case in which the target data is present in the new database - as well as the old database -.","As described above, the DB access program -for processing during the transition may select the plurality of databases - and -. A code cd in the DB access program -is a description of processing in a case in which transition of the data as the target of the deletion to the new database - has already been made.","Next, a description will be given of processing performed by the DB access program -illustrated in  with reference to the flowchart illustrated in .",{"@attributes":{"id":"p-0269","num":"0268"},"figref":["FIG. 22","FIG. 21","FIG. 21"],"b":["211","1","61","106","107"],"i":"f "},"S: The DB access program -for processing during the transition performs exclusive control of a table as a target of deletion in the new database -. In doing so, the accesses to the table in the new database - by the other programs are not available.","S: The DB access program -for processing during the transition searches for the target table in the old database - based on the value \u201cid\u201d as a parameter.","S: The DB access program -for processing during the transition determines whether or not data with the value \u201cid\u201d is present in the target table in the old database -.","S: In a case in which the data corresponding to the value \u201cid\u201d is present in the target table in the old database - (YES in S), the DB access program -for processing during the transition deletes the data corresponding to the value \u201cid\u201d from the old database -.","S: The DB access program -for processing during the transition searches for the target table in the new database - based on the value \u201cid\u201d as a parameter.","S: The DB access program -for processing during the transition determines whether or not the data with the value \u201cid\u201d is present in the target table in the new database -.","S: In a case in which the data corresponding to the value \u201cid\u201d is present in the target table in the new database - (YES in S), the DB access program -for processing during the transition deletes the data corresponding to the value \u201cid\u201d from the new database -. In the case in which the transition of the data as the target of the deletion has already been made (YES in S) as illustrated in Steps S and S (cd in ), the DB access program -for processing during the transition further determines the new database - as the database  as the target of the deletion.","S: The DB access program -for processing during the transition sets a return value. The DB access program -for processing during the transition sets a value (SUCCESS) that indicates success as the return value in a case in which the data corresponding to the value \u201cid\u201d is present in any of the old database - and the new database - (YES in S or YES in S). In contrast, if the value corresponding to the value \u201cid\u201d is not present in any of the old database - and the new database - (NO in S and NO in S), the DB access program -for processing during the transition sets a value (ERROR) that indicates an error as the return value.","S: The DB access program -for processing during the transition performs exclusive release of the target table in the new database -. In doing so, the other programs can access the table in the new database -.","As illustrated in , the DB access program -for processing during the transition determines the database - or - as the target of the deletion in accordance with the transition state of the data as the target of the deletion regardless of the version of the application program . Therefore, it is possible to appropriately perform the deletion processing even in the case in which the data as the target of the deletion is present in both the old database - and the new database - and access requests by the application programs  of the old and new versions are present together.",{"@attributes":{"id":"p-0280","num":"0279"},"figref":["FIG. 23","FIG. 5"],"b":["211","1","211","1","211","1"],"i":["g ","j "]},"The DB access program -illustrated in  includes a function \u201clock\u201d for performing exclusive control of entire tables. In addition, the DB access program -includes a function \u201cunlock\u201d for performing exclusive release of the entire tables. The function \u201clock\u201d and the function \u201cunlock\u201d are for performing the exclusive control and the exclusive release of tables only in the new database -.","According to the embodiment, the DB access program - (-to -) for processing during the transition performs processing of accessing the new database - and processing of accessing the old database - as a set. Therefore, exclusive management of both the databases - and - is realized by performing exclusive management of only the new database - from among the old database - and the new database -. In doing so, it is possible to reduce the processing amount in the exclusive control and to suppress a load on the programs.","In addition, the DB access program -illustrated in  includes a function \u201clock\u201d for performing exclusive control of one data item. In addition, the DB access program -includes a function \u201cunlock\u201d for performing exclusive release of one data item. The DB access programs -and -also realize exclusive management of both the databases - and - by performing the exclusive control or the exclusive release of the table only in the new database - in the same manner. In doing so, it is possible to reduce the processing amount in the exclusive control and to suppress a load on the programs.","DB Background-Updating Program","Details of the DB background-updating program  will be described with reference to .",{"@attributes":{"id":"p-0286","num":"0285"},"figref":["FIG. 24","FIG. 5","FIG. 24","FIG. 24"],"b":["212","212","80","1","80","2","80","2","212","80","2","80","1","212","80","1"]},"According to the embodiment, the processing of converting data as a target of access does not occur after completion of the data transition processing performed by the DB background-updating program . The conversion processing is processing of converting data, illustrated in , in a case in which the version of the application program  that has issued the access request is different from the version of the database  to which the access request is transmitted. That is, the conversion processing corresponds to Step S in , Step S in , or Steps S and S in , for example. Therefore, according to the embodiment, it is possible to avoid permanent occurrence of the processing of converting the data and to thereby suppress a load caused by the processing of converting the data.","A code cd in the DB background-updating program  illustrated in  indicates a description of processing of converting the data in the old database - to have the data configuration in the new database - and adding the data to the new database -.",{"@attributes":{"id":"p-0289","num":"0288"},"figref":["FIG. 25","FIG. 24","FIG. 24","FIG. 25"],"b":["212","71","118","120"]},"S: The DB background-updating program  determines whether or not transition processing of all the tables from the old database - to the new database - has been completed.","S: In a case in which the transition processing of all the tables has been completed (YES in S), the DB background-updating program  provides information (CLEAN) indicating that the transition processing has been completed, and completes the processing.","S: In contrast, if the transition has not been completed (NO in S), the DB background-updating program  performs exclusive control of the target table in the new database -. In doing so, accesses to the table in the new database - by the other programs are not available.","S: The DB background-updating program  determines whether or not the exclusive control of the target table in the new database - has already been made.","S: In a case in which the exclusive control of the target table in the new database - has already been made (YES in S), this means that another program is using the target table. Therefore, the DB background-updating program  provides information indicating that the database  is being used (BUSY), and completes the processing. In the case in which the database  is being used, the DB background-updating program  performs the transition processing at another timing.","S: In contrast, if the exclusive control of the target table in the new database - has not been made (NO in S), the DB background-updating program  searches for data in the target table in the old database -.","S: The DB background-updating program  determines whether or not the target table in the old database - is empty. If there is no data in the target table in the old database - (YES in S), the DB background-updating program  moves on to the aforementioned Step S.","S: In a case in which there is data in the target table in the old database - (NO in S), the DB background-updating program  further searches for the data, which has been searched in the old database -, in the new database -.","S: The DB background-updating program  determines whether or not the data that has been searched in the old database - is present in the new database -. That is, the DB background-updating program  searches for data that is present in the old database - while being not present in the new database -.","S: In a case in which the data that has been searched in the old database - is not present in the new database - (NO in S), this means that the searched data is present only in the old database -. Therefore, the DB background-updating program  converts the data that has been searched in the old database - to have the data configuration in the new database - and adds the data to the new database -. In a case in which the data that has been searched in the old database - is also present in the new database - (YES in S), the DB background-updating program  does not perform the processing in Step S.","S: The DB background-updating program  deletes the data that has been searched in the old database - in Step S from the old database -. Therefore, the number of data items included in the old database - becomes zero when transition of all the data items has been completed, for example.","S: The DB background-updating program  performs exclusive release of the target table in the new database -.","As described above with reference to , the DB background-updating program  completes the transition processing of all the data items by repeating the processing described above with reference to . If the transition processing is completed, the old database - becomes empty.","Other Embodiments","The embodiment was described as the example in which the AP servers and were physical servers. However, the embodiment is not limited to the example. The AP servers and may be virtual servers. In addition, the embodiment was described as the example in which the patch was sequentially applied to the application program  that operates on the two AP servers an . However, the embodiment is not limited to the example. The DB access program - for processing during the transition according to the embodiment is also effective for a case in which the patch is sequentially applied to the application program  that operates on three or more AP servers and ","As illustrated in , the DB background-updating program  is introduced only to the AP server with the configuration A in this embodiment. However, the embodiment is not limited to the example. The operator may introduce the DB background-updating program  to the AP server with the configuration B as well as the AP server with the configuration A. In addition, the processing of sequentially applying the patch to the application program  on the AP server with the configuration A and the AP server with the configuration B is also not limited to the example illustrated in . Any configuration is also applicable as long as the DB access program - for processing during the transition operates while the patch is sequentially applied to the application program  that operates on the plurality of AP servers and ","In addition, the examples of the DB access program - for processing during the transition in accordance with the types of the access request were described with reference to . However, the processing performed by the DB access program - for processing during the transition illustrated in  is an example.","For example, a case of receiving an access request for update processing () will be exemplified. In , the DB access program -for processing during the transition determines the database - or - in accordance with the version of the application program  that has issued the access request if the transition of the target data has not yet been made. In addition, the DB access program -for processing during the transition determines the new database - as the database to which the access request is to be transmitted regardless of the version of the application program  that has issued the access request if the transition of the target data has already been made.","However, the DB access program -for processing during the transition may determine the new database - as the database to which the access request is to be transmitted regardless of the version of the application program  that has issued the access request if the transition of the target data has not yet been made.","Similarly, the cases of receiving other types of access request are not limited to the examples of the processing performed by the DB access program - for processing during the transition as illustrated in . The DB access program - for processing during the transition according to the embodiment determines the target database - or - based on the information related to the version of the application program  that is included in the access request and the information related to the transition of the target data. In addition, the DB access program - for processing during the transition according to the embodiment may determine both the databases - and -.","All examples and conditional language provided herein are intended for the pedagogical purposes of aiding the reader in understanding the invention and the concepts contributed by the inventor to further the art, and are not to be construed as limitations to such specifically recited examples and conditions, nor does the organization of such examples in the specification relate to a showing of the superiority and inferiority of the invention. Although one or more embodiments of the present invention have been described in detail, it should be understood that the various changes, substitutions, and alterations could be made hereto without departing from the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 5","FIG. 3"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 8","FIG. 7"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 9","FIGS. 6, 7, and 8"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 10","FIGS. 6, 7, and 8"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 11","FIG. 5"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 12","FIG. 11"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 13","FIG. 5"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 14","FIG. 13"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 15","FIG. 5"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 16","FIG. 15"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 17","FIG. 5"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 18A","FIG. 18B","FIG. 17"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 19","FIG. 5"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 20","FIG. 19"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 21","FIG. 5"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 22","FIG. 21"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 23","FIG. 5"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 24","FIG. 5"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 25","FIG. 24"]}]},"DETDESC":[{},{}]}
