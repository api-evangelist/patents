---
title: User name mapping in a heterogeneous network
abstract: A user information management service including features and/or methods for user information mapping.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08117254&OS=08117254&RS=08117254
owner: Microsoft Corporation
number: 08117254
owner_city: Redmond
owner_country: US
publication_date: 20011214
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims priority to an earlier filed U.S. Provisional Patent Application entitled \u201cUser Name Mapping\u201d, having Ser. No. 60\/256,024, a filing date of Dec. 15, 2000, and inventors Vivek Nirkhe, Ram Cherala, Vamshidar Reddy, Pradeep Suryanarayan, and Vikas Tyagi. The thirty-five page specification of this earlier filed application is incorporated by reference herein in its entirety for all purposes.","This invention relates generally to methods and\/or devices for managing user access on networks.","Computer operating systems (OS), including the WINDOWS\u00ae OS (Microsoft Corporation, Redmond, Wash.) and the UNIX\u00ae OS (UNIX System Laboratories, Inc., Basking Ridge, N.J.), often use different mechanisms for user identification, authentication, and resource access control. In a heterogeneous network, a network that includes at least two different OS networks, users normally have separate accounts for each OS network, or alternatively, at least one OS network account that differs in some aspect from other OS network accounts. For example, in a heterogeneous network, including WINDOWS\u00ae OS and UNIX\u00ae OS networks, user information (e.g., identifications and\/or names) is typically stored and used differently for each OS network; thus, in general, no association exists for user information between the OS networks. Consequently, a need exists to associate user information between OS networks. In addition, separate name spaces with different user names and different identification mechanisms pose problems for services that provide cross-domain resource access. Thus, a need exists for services that establish a relationship between user identification in different name spaces while allowing users to use a name space in its native OS network.","A method for mapping a user in a heterogeneous network comprising: receiving on a computer in a first network a user name associated with a user in the first network; mapping the user name to a user name associated with the user in a second network; and mapping the user name associated with the user in the second network to a user identification number associated with the user in the second network. This exemplary method optionally further includes accessing resources on a computer in the second network using the user identification number and\/or authenticating the user after the mappings. Further, according to this exemplary method, the computer optionally comprises a gateway and\/or a client and\/or the mapping includes using a map on a mapping server.","Also disclosed herein is an exemplary computer-readable medium storing computer-executable instructions to map a user name associated with a user in a first network to a user name associated with a user in a second network and to map the user name associated with the user in the second network to a user identification number associated with the user in the second network. This exemplary computer-readable medium optionally includes instructions for a graphical user interface.","Also disclosed herein is another method for mapping a user in a heterogeneous network comprising: receiving on a computer in a first network a user name and a password associated with a user in a second network; authenticating the user using the user name and the password to produce an authenticated user; and mapping the authenticated user to a user identification number associated with the user in a second network. This exemplary method optionally includes accessing resources on a computer in the second network using the user identification number, a computer in the first network performing the authenticating, and\/or a computer in the first network performing the mapping. Further according to this exemplary method, the computer comprises a gateway and\/or a client and\/or the mapping includes using a map on a mapping server.","Also disclosed herein is a computer-readable medium storing computer-executable instructions to map a user name associated with a user in a first network to a user name associated with a user in a second network and to map the user name associated with the user in the second network to a user identification number associated with the user in the second network. This exemplary computer-readable medium optionally includes instructions for a graphical user interface.","Disclosed herein is yet another method for mapping a user in a heterogeneous network comprising: receiving on a computer in a second network a user identification number associated with a user in a first network; mapping the user identification number to a user name associated with the user in a second network. This exemplary method optionally includes accessing resources on a computer in the second network using the user name, a computer in the second network for performing the authenticating, and\/or a computer in the second network for performing the mapping. According to this exemplary method, the computer optionally comprises a gateway and\/or a server and\/or the mapping includes using a map on a mapping server.","Also disclosed herein is a computer-readable medium storing computer-executable instructions to map a user name associated with a user in a first network to a user name associated with a user in a second network and to map the user name associated with the user in the second network to a user identification number associated with the user in the second network. This exemplary computer-readable medium optionally includes instructions for a graphical user interface.","All of the exemplary methods disclosed herein optionally use remote procedure calls. In various methods, the mapping includes using remote procedure calls. For example, the remote procedure calls optionally include at least one remote procedure call selected from the group consisting of getting credentials, authenticating using credentials, checking map status, and dumping maps remote procedure calls.","Additional features and advantages of the invention will be made apparent from the following detailed description of illustrative embodiments, which proceeds with reference to the accompanying figures.","Turning to the drawings, wherein like reference numerals refer to like elements, various methods and converters are illustrated as being implemented in a suitable computing environment. Although not required, the methods and converters will be described in the general context of computer-executable instructions, such as program modules, being executed by a personal computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Moreover, those skilled in the art will appreciate that the methods and converters may be practiced with other computer system configurations, including hand-held devices, multi-processor systems, microprocessor based or programmable consumer electronics, network PCs, minicomputers, mainframe computers, and the like. The methods and converters may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1","b":"120"},"Exemplary computing environment  is only one example of a suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of the improved methods and arrangements described herein. Neither should computing environment  be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in computing environment .","The improved methods and arrangements herein are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems, environments, and\/or configurations that may be suitable include, but are not limited to, personal computers, server computers, thin clients, thick clients, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and the like.","As shown in , computing environment  includes a general-purpose computing device in the form of a computer . The components of computer  may include one or more processors or processing units , a system memory , and a bus  that couples various system components including system memory  to processor .","Bus  represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnects (PCI) bus also known as Mezzanine bus.","Computer  typically includes a variety of computer readable media. Such media may be any available media that is accessible by computer , and it includes both volatile and non-volatile media, removable and non-removable media.","In , system memory  includes computer readable media in the form of volatile memory, such as random access memory (RAM) , and\/or non-volatile memory, such as read only memory (ROM) . A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within computer , such as during start-up, is stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processor .","Computer  may further include other removable\/non-removable, volatile\/non-volatile computer storage media. For example,  illustrates a hard disk drive  for reading from and writing to a non-removable, non-volatile magnetic media (not shown and typically called a \u201chard drive\u201d), a magnetic disk drive  for reading from and writing to a removable, non-volatile magnetic disk  (e.g., a \u201cfloppy disk\u201d), and an optical disk drive  for reading from or writing to a removable, non-volatile optical disk  such as a CD-ROM, CD-R, CD-RW, DVD-ROM, DVD-RAM or other optical media. Hard disk drive , magnetic disk drive  and optical disk drive  are each connected to bus  by one or more interfaces .","The drives and associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules, and other data for computer . Although the exemplary environment described herein employs a hard disk, a removable magnetic disk  and a removable optical disk , it should be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, random access memories (RAMs), read only memories (ROM), and the like, may also be used in the exemplary operating environment.","A number of program modules may be stored on the hard disk, magnetic disk , optical disk , ROM , or RAM , including, e.g., an operating system , one or more application programs , other program modules , and program data .","The improved methods and arrangements described herein may be implemented within operating system , one or more application programs , other program modules , and\/or program data .","A user may provide commands and information into computer  through input devices such as keyboard  and pointing device  (such as a \u201cmouse\u201d). Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, serial port, scanner, camera, etc. These and other input devices are connected to the processing unit  through a user input interface  that is coupled to bus , but may be connected by other interface and bus structures, such as a parallel port, game port, or a universal serial bus (USB).","A monitor  or other type of display device is also connected to bus  via an interface, such as a video adapter . In addition to monitor , personal computers typically include other peripheral output devices (not shown), such as speakers and printers, which may be connected through output peripheral interface .","Logical connections shown in  are a local area network (LAN)  and a general wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet.","When used in a LAN networking environment, computer  is connected to LAN  via network interface or adapter . When used in a WAN networking environment, the computer typically includes a modem  or other means for establishing communications over WAN . Modem , which may be internal or external, may be connected to system bus  via the user input interface  or other appropriate mechanism.","Depicted in , is a specific implementation of a WAN via the Internet. Here, computer  employs modem  to establish communications with at least one remote computer  via the Internet .","In a networked environment, program modules depicted relative to computer , or portions thereof, may be stored in a remote memory storage device. Thus, e.g., as depicted in , remote application programs  may reside on a memory device of remote computer . It will be appreciated that the network connections shown and described are exemplary and other means of establishing a communications link between the computers may be used.","User Name Mapping and Related Methods and Devices","An exemplary user name mapping method maps user information in a heterogeneous network, for example, from a first OS network to user information on a second OS network and\/or vice versa. As described in more detail below, an exemplary user name mapping method maps WINDOWS\u00ae OS network user names to UNIX\u00ae OS network user names and\/or vice versa. This exemplary method operates as a means to associate user names in two networks for users who have different identities in each network and\/or network domain. The exemplary features and\/or methods disclosed herein are not limited to networks using a WINDOWS\u00ae OS and\/or a UNIX\u00ae OS, such features and\/or methods are also suitable for use with other OSs including, but not limited to, LINUX\u00ae OS (Linus Torvalds, Santa Clara, Calif.) and other OSs known to one of ordinary skill in the art. Use of such features and\/or methods optionally allows for seamless sharing of data between networks. As described herein, user name mapping is not limited to \u201cnames\u201d and generally includes mapping of any user related information. Thus, user name mapping is synonymous with user information mapping.","This disclosure refers to various products, which are known in the art. Such products, developed in part by Sun Microsystems (Palo Alto, Calif.), include NIS computer program, which is a network naming and administration system for networks and sometimes referred to as \u201cYP\u201d (Yellow Pages); NIS+ computer program, which is a latter version of the NIS computer program that provides some additional features (e.g., security); NFS\u00ae computer program (Sun Microsystems, Inc., Palo Alto, Calif.), which is a client\/server application for networks using the UNIX\u00ae OS that lets a user (e.g., NFS\u00ae client) view and optionally store and update a file on a remote computer (e.g., NFS\u00ae server) as though they were on the user's own computer; and PC-NFS\u00ae computer program (Sun Microsystems, Inc., Palo Alto, Calif.), which is a client\/server application for networks using the WINDOWS\u00ae OS that lets a user (e.g., PC-NFS\u00ae client) view and optionally store and update a file on a remote computer (e.g., PC-NFS\u00aeB server). Throughout this disclosure, however, a network file system is not limited to the NFS\u00ae or the PC-NFS\u00ae computer programs and a network information system is not limited to the NIS or NIS+ computer programs.","Other products referred to herein include WINDOWS\u00ae Services for UNIX\u00ae, which is a product of Microsoft Corporation (Redmond, Wash.) that consists of a number of different components for heterogeneous networks. WINDOWS\u00ae Services for UNIX\u00ae optionally include components entitled \u201cServer for PCNFS\u201d, \u201cClient for NFS\u201d, \u201cServer for NFS\u201d, and\/or \u201cGateway for NFS\u201d. Various exemplary methods and\/or devices disclosed herein are suitable for use with and\/or as a component of WINDOW\u00ae Services for UNIX\u00ae.","Various exemplary methods and\/or devices include a user information management service that (i) resides on a single node and\/or a central mapping server; (ii) obtains UNIX\u00ae OS network user names and\/or identification numbers from a server using a NIS computer program and\/or a NIS+ computer program working in a YP-compatible mode (e.g., a mode capable of handling NIS (YP) type requests as well as NIS+ type requests); (iii) obtains UNIX\u00ae OS network user names and\/or identification numbers from WINDOWS\u00ae Services for UNIX\u00ae PC network file system servers and\/or other PC network file system servers; (iv) allows for simple and\/or advanced mapping; (v) supports multiple WINDOWS\u00ae OS and UNIX\u00ae OS domains, allows a mapping server to be shared between multiple domains, and\/or can map users irrespective of the domains in which the user names were created; (vi) maps users and\/or groups to, e.g., allow WINDOWS\u00ae OS network file system file servers to provide the same semantics as provided by UNIX\u00ae OS network file system servers; (vii) refreshes network information system, network file system (e.g., PC network file system), and\/or WINDOWS\u00ae OS user names periodically to, e.g., reduce and\/or eliminate a need for administrative intervention; (viii) provides command line, graphical, and\/or remote administration capability; (ix) supports backup and\/or restoration of mappings; (x) allows mapping of multiple WINDOWS\u00ae OS users to one UNIX\u00ae OS user to, e.g., reduce administrative tasks of creating and\/or managing rights and\/or permissions; (xi) ensures that only members of an administrator's group can perform administrative tasks; (xii) authenticates a UNIX\u00ae OS user name and\/or password using a UNIX\u00ae OS cryptography algorithm; and\/or (xiii) provides UNIX\u00ae OS identification wherein a WINDOWS\u00ae OS user requires access to UNIX\u00ae OS resources using a UNIX\u00ae OS account to which the user is not mapped. Accordingly, various features ease administrative tasks such as maintaining maps on WINDOWS\u00ae OS computers providing network file system services and\/or remote shell service. Details of these and\/or other exemplary user information management service features are described below.","User Identification and\/or Authentication","The aforementioned UNIX\u00ae OS and WINDOWS\u00ae OS products have some differences pertaining to identification and\/or authentication. In UNIX\u00ae OS networks using standard NFS\u00ae software, authentication is not used to gain access to network file system resources (note that for secure NFS\u00ae software and Kerberos-based NFS\u00ae software authentication is explicit). Instead, a network file system file server normally depends upon authentication performed by a client computer. The network file system file server then uses a standard UNIX\u00ae OS identification mechanism (e.g., including a UID and\/or a GID) to identify a user. A native file system determines access control, which for a UNIX\u00ae OS includes use of file-based permission bits. Such bits include read, write, execute, etc. permission bits (e.g., designated r, w, x, respectively). A network file system server normally restricts access to file read and\/or write using a list of client computers and permitted access.","In contrast, WINDOWS\u00ae OS network users that access remote WINDOWS\u00ae OS computer shares are identified by a security identification (SID) rather than by a UID and\/or a GID. In such a network, each computer authenticates the user and once the user is authenticated, the user's SID indicates that user's degree of access to network resources. As described below, a user information management service provides for identification of users in a heterogeneous network. For example, an exemplary service provides for identification of WINDOWS\u00ae OS users in a UNIX\u00ae OS network and for UNIX\u00ae OS users in a WINDOWS\u00ae OS network.","When a user logs on to a WINDOWS\u00ae OS computer, the user is identified with a WINDOWS\u00ae OS security identifier (SID). For the user to access UNIX\u00ae OS network file system resources, the user needs to acquire UNIX\u00ae OS identification information (e.g., a UID and\/or a GID). Typically, this requires the user to be authenticated with the UNIX\u00ae OS network using either a personal computer network file system server (e.g., a server using PC-NFS\u00ae software) or a network information system (e.g., a server using NIS software). In a heterogeneous network, another issue exists in the reverse direction; in other words, when a user logs on to a UNIX\u00ae OS computer the user is allocated UNIX\u00ae OS user information only (e.g., a UID and\/or a GID). Hence, the user needs a way to obtain the SID that identifies that user to WINDOWS\u00ae OS computers while accessing files from a WINDOWS\u00ae OS computer.","An exemplary user information management service including a user name mapping feature provides for identification of WINDOWS\u00ae OS users in a UNIX\u00ae OS network and for UNIX\u00ae OS users in a WINDOWS\u00ae OS network. Such a feature may also authenticate WINDOWS\u00ae OS users accessing network file system resources in a UNIX\u00ae OS network using UNIX\u00ae OS user information (e.g., usemame and\/or password). Thus, an exemplary user name mapping feature optionally maps a WINDOWS\u00ae OS user to a corresponding UNIX\u00ae OS user and provides a UID and\/or a GID by relying on WINDOWS\u00ae OS authentication and maps. In a reverse manner, an exemplary feature optionally maps a UNIX\u00ae OS UID and\/or GID to a WINDOWS\u00ae OS user without providing a WINDOWS\u00ae OS SID. The WINDOWS\u00ae Services for UNIX\u00ae component Server for NFS uses an exemplary user name mapping feature that allows for use of a server for UNIX\u00ae OS UID and\/or GID to WINDOWS\u00ae OS user name mapping. This mapping feature obtains a SID for file access optionally through use of a component entitled \u201cServer for NFS Authentication\u201d. Various aspects of identification and\/or authentication are discussed below.","In a network file system, user information allows for identification. A standard UNIX\u00ae OS network file system server uses UNIX\u00ae OS network file system identification for access control (note that a remote UNIX\u00ae OS network file system server relies on authentication performed by the requesting client computer). In a heterogeneous WINDOWS\u00ae OS\/UNIX\u00ae OS network, WINDOWS\u00ae OS network file system servers have to identify requesting users from UNIX\u00ae OS network file system requests based solely on UNIX\u00ae OS network file system identification, which consists of a user identification (UID) and group identification (GID). However, WINDOWS\u00ae OS computers and domains do not use UIDs and\/or GIDs for identification. Therefore, an exemplary user information management service maps user information (e.g., UIDs and\/or GIDs) contained in the UNIX\u00ae OS network file system requests to WINDOWS\u00ae OS user information (e.g., user names).","An exemplary user information service allows WINDOWS\u00ae OS network file system clients to map the requesting WINDOWS\u00ae OS user's user information (e.g., a user name) to UNIX\u00ae OS user information (e.g., a UID and\/or a GID) before forwarding a UNIX\u00ae OS network file system request. Similarly, an exemplary user information service allows a UNIX\u00ae OS network file system gateway (computer resident at the interface between networks) to map WINDOWS\u00ae OS user information (e.g., user names) to UNIX\u00ae OS user information (e.g., UIDs and\/or GIDs). In addition, such an exemplary user information service allows mapping of WINDOWS\u00ae OS user information to UNIX\u00ae OS user information while forwarding file system requests to UNIX\u00ae OS network file system servers.","Another exemplary user information service feature provides for transparent access. With transparent access, e.g., user identification and\/or authorization, once a user logs onto a computer in a heterogeneous network, the user can access all resources within the user's permissions regardless of the user computer's OS and the resource computer's OS. Accordingly, an exemplary user information service including transparent access requires users to authenticate themselves only once (e.g., a single logon) for local and\/or remote resource access. For example, such a feature allows WINDOWS\u00ae OS users access to UNIX\u00ae OS network file system resources with a single sign on (logon). Users on a heterogeneous network using an exemplary user information service including this feature do not have to remember two sets of user names and passwords, or sign on separately to the two (or more) operating systems.","An exemplary transparent access feature optionally allows a UNIX\u00ae OS user to authenticate using UNIX\u00ae OS user information (e.g., user name and\/or password) and\/or a WINDOWS\u00ae OS user to authenticate using WINDOWS\u00ae OS user information (e.g., user domain credentials) to gain access to UNIX\u00ae OS and\/or WINDOWS\u00ae OS resources. This feature eliminates the need to ask WINDOWS\u00ae OS network file system client users to provide user information for authentication to a UNIX\u00ae OS network file system network prior to accessing UNIX\u00ae OS network file system network resources.","Synchronization or Consistency","Yet another exemplary user information service feature synchronizes maps and\/or mapping between disparate OSs on a plurality of computers in a heterogeneous network. In particular, synchronization of maps and\/or mappings on computers in a domain ensures proper access to files on UNIX\u00ae OS network file system servers and\/or WINDOWS\u00ae OS network file system clients. For example, a synchronization feature ensures that two WINDOWS\u00ae OS computers with network file system client software have the same mappings (or suitable mappings), such that the same user requesting UNIX\u00ae OS network file system resources from the two WINDOWS\u00ae OS computers would results in the same (or suitable) UNIX\u00ae OS user information (e.g., UID and\/or GID) being included in the UNIX\u00ae OS network file system requests. A synchronization feature also ensures that two WINDOWS\u00ae OS network file system servers map the same UNIX\u00ae OS user information (e.g., UID and\/or GID) for requests to the same WINDOWS\u00ae OS user. Such a feature ensures that users will get the same permissions to files when accessed via different network file system gateways. This particular feature can ensure that two UNIX\u00ae OS computers with NFS\u00ae clients would result in identical access to files on a WINDOWS\u00ae network file system for the selected user.","An exemplary synchronization feature allows for sharing of a single set of user name mappings across a heterogeneous network. Thus, multiple instances of network file system clients, servers and gateways can use just one set of mappings.","Central User Information Management Services","Other WINDOWS\u00ae OS network file system servers and\/or network file system gateways typically require local mappings to map WINDOWS\u00ae OS users to UNIX\u00ae OS users and vice versa. On the other hand, WINDOWS\u00ae OS network file system clients require users to authenticate with network information system and\/or personal computer network file system servers.","An exemplary user name mapping feature is optionally deployed on a central server. Such a central feature optionally operates in conjunction with any WINDOWS\u00ae Services for UNIX\u00ae network file system component. A central server having a user name mapping feature also allows for implementation of central policies wherein users are optionally mapped centrally to reflect network and\/or enterprise policies. For example, if a WINDOWS\u00ae OS user has read-only access to some files, a central policy causes the mapping feature to map that user to a UNIX\u00ae OS user with read-only permissions on those same files. In addition, access from any network file system client optionally results in that WINDOWS\u00ae OS user being identified as the mapped UNIX\u00ae OS user. According to various exemplary methods, an original policy is optionally preserved, i.e., if a user had read-only access on one OS system, then that user would have read-only access on the other OS system. However, various exemplary methods may also create and\/or implement alternative and\/or additional policies.","Implementation of a single, central mapping server, e.g., common to an enterprise, can reduce administrative costs associated with mappings. Traditional setup of user name mapping per network file system server and\/or network file system gateway normally requires effort to create and manage mappings, which are typically replicated on each server and\/or gateway in a network. While not a requirement, implementation of user name mapping on a single, central server (or a limited number of servers) presents significant advantages over traditional mapping practices.","Architecture of an Exemplary User Name Mapping Feature","An exemplary user information management service includes a user name mapping feature that creates mappings between user information in a heterogeneous network. In an example described below, a heterogeneous network includes WINDOWS\u00ae OS computers and UNIX\u00ae OS computers and WINDOWS\u00ae OS user information and UNIX\u00ae OS UNIX user information. Mappings for WINDOWS\u00ae OS user information and UNIX\u00ae OS UNIX user information are maintained, for example, in a table such as that shown in Table 1.",{"@attributes":{"id":"p-0055","num":"0054"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"User name mappings for WINDOWS\u2009\u00ae OS and UNIX\u2009\u00ae OS users."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["WINDOWS\u2009\u00ae","WINDOWS\u2009\u00ae","UNIX\u2009\u00ae","UNIX\u2009\u00ae",{}]},{"entry":["user name","domain","user name","domain","UID\/GID"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":["JohnDoe","Indwindows","Johnd","Indunix","1090\/201"]},{"entry":["Maryjane","Indwindows","Maryj","Indunix","1223\/201"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}}},"As shown in Table 1, each row includes WINDOWS\u00ae OS user information and UNIX\u00ae OS UNIX user information. For example, according to the mapping in Table 1, WINDOWS\u00ae OS user having user name JohnDoe in WINDOWS\u00ae OS domain Indwindows has a UNIX\u00ae OS user name Johnd, UID 1090, and GID 201 in UNIX\u00ae domain Induinx. Thus, Table 1 provides a map for WINDOWS\u00ae OS user having user name JohnDoe.",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 2","FIG. 2"]},"The GUI shown in  also includes two entry fields (e.g., hours and minutes) for a refresh interval for synchronizing user information along with a button for immediate synchronization. Refreshing can refresh user information associated with, e.g., UNIX\u00ae, NIS, PC-NFS\u00ae, and\/or WINDOWS\u00ae, periodically. For example, a user name mapping feature optionally refreshes WINDOWS\u00ae OS user information from WINDOWS\u00ae OS domain controllers and\/or UNIX\u00ae OS user information from UNIX\u00ae OS network information system servers or personal computer network file system servers in a periodic manner. Such an exemplary feature may add or delete user information automatically whenever a user gets added, deleted from either UNIX\u00ae OS or WINDOWS\u00ae OS domains. For example, if a user is added to both a WINDOWS\u00ae OS domain and a UNIX\u00ae OS network information system domain with identical user information (e.g., user names), an exemplary user name mapping feature will create a mapping between the user information automatically. Similarly, if a user is deleted from one of these two domains, such a mapping feature may delete the mapping automatically. Accordingly, automatic addition and\/or removal of a user account ensures that network file system access is enabled or disabled automatically.","The GUI of  optionally includes other selections and\/or entry fields for computer names, file names (or paths) for files containing user information, and\/or other data. Entry of file names and\/or paths can support backup and\/or restoration of mappings. User name mapping features may save already-created mappings to a file and\/or load mappings from a file and\/or populate a mapping server. This capability is particularly useful to back up mappings to address failures of a server having user name mapping responsibilities. Overall, GUIs and\/or command line utilities can facilitate map creation, maintenance, diagnostics, and\/or management on local and\/or remote mapping servers.","WINDOWS\u00ae Services for UNIX\u00ae components that include an exemplary user name mapping feature can be configured to use a specified user name mapping server and, once configured, computers running network file system components obtain mapping service from the specified server. For example, consider WINDOWS\u00ae Services for UNIX\u00ae having a Client for NFS component wherein a user name mapping feature maps an authenticated WINDOWS\u00ae OS network user to a corresponding UNIX\u00ae OS network user, and obtains the UID and\/or the GID to use in a network file system request to a network file system server (e.g., a server running NFS\u00ae software). In yet another example, consider WINDOWS\u00ae Services for UNIX\u00ae having a Server for NFS component wherein a user name mapping feature maps a UNIX\u00ae UID from a network file system request to a corresponding WINDOWS\u00ae OS user and determines the access permissions using the mapped WINDOWS\u00ae OS users' user information (e.g., identification and\/or credentials). Similarly, consider WINDOWS\u00ae Services for UNIX\u00ae having a Gateway for NFS component wherein a user name mapping feature maps WINDOWS\u00ae OS user information (e.g., identification and\/or credentials) of each gateway request to a corresponding UNIX\u00ae UID and\/or GID before forwarding it to a server (e.g., a server running NFS\u00ae software).","Through use of a table, such as Table 1, or an equivalent means of mapping, an exemplary user name mapping feature can create maps without making changes to existing user information in either UNIX\u00ae OS or WINDOWS\u00ae OS domains. A user name mapping feature optionally supports maps for users with identical names in two networks and\/or supports maps for users that have different names in two networks. In either instance, mapping can provide consistent and correct file access.","Various exemplary user name mapping features allow for sharing of a single mapping server between multiple domains. For example, in a heterogeneous network, an exemplary user name mapping feature can establish mappings between user information from any NIS domain to user information from any WINDOWS\u00ae OS domain and optionally further without regard to the domains in which the user information was created. In the case that a network file system file sharing allows users from different domains to access files, a server implementing an exemplary user name mapping feature may map user information for such users. This particular implementation of user name mapping can benefit roaming users.","An exemplary user name mapping feature includes the capability to map user names as well as group names between the two name spaces. This capability allows, for example, WINDOWS\u00ae OS network file system file servers to provide the same semantics as provided by UNIX\u00ae OS network file system servers. With group mappings, access to UNIX\u00ae OS network file system resources using the group permission bits on a file is honored for WINDOWS\u00ae OS users. File access granted to UNIX\u00ae OS users for files on a WINDOWS\u00ae OS computer are optionally likewise according to group access rights on the files.","An exemplary user information management service having a user name mapping feature allows mapping of multiple users' user information from one network (e.g., WINDOWS\u00ae OS network) to a single user's user information from another network (e.g., UNIX\u00ae OS network). For example, such a user name mapping feature allows mapping of multiple WINDOWS\u00ae OS user names to a single UNIX\u00ae OS user name. In a heterogeneous network, such a capability is useful when there is no one-to-one correspondence between users on the disparate networks. Thus, the capability optionally allows WINDOWS\u00ae OS users to be mapped to a few UNIX\u00ae OS users, which is useful when access to a UNIX\u00ae OS file server has to be provided according to different classes of access privileges. Such exemplary user name mapping features can reduce administrative tasks involving creating and managing rights and permissions.","An exemplary user information management system having a user name mapping feature includes security and\/or authentication capabilities. For example, one such capability ensures that only members of an administrator group can perform administrative tasks. An authentication capability authenticates, for example, a UNIX\u00ae OS user name and password using a UNIX\u00ae OS cryptography algorithm and provides UNIX\u00ae OS identification. This exemplary system and\/or other exemplary systems optionally have authentication capability that uses UNIX\u00ae OS user name and password information from network information system and\/or personal computer network file system files to authenticate the users, which is useful where a WINDOWS\u00ae OS user requires access to UNIX\u00ae OS resources using a UNIX\u00ae OS account to which the user is mapped. In addition, such features are useful to authenticate a user(s) and\/or create a map(s) wherein a map corresponding to the user(s) does not exist.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 3","FIG. 3","FIG. 3"]},"The GUI shown in  also includes control buttons to list users in two networks or a heterogeneous network. Below these control buttons, the GUI displays lists of WINDOWS\u00ae OS users and UNIX\u00ae OS users and entry fields for at least one WINDOWS\u00ae OS user name and at least one UNIX\u00ae OS user name. As shown, an entry field for a WINDOWS\u00ae OS user name contains the user name \u201ci-malrao\u201d and an entry field for a UNIX\u00ae OS user name contains the entry \u201c<unmapped>\u201d. Further below, the GUI displays a table similar to Table 1. Additional buttons allow for setting, adding, and\/or removing user information and\/or maps.","The exemplary user name mapping feature associated with the GUI of  optionally maps users from domains that need access to network file system resources. For example, table entries in the GUI of  indicate mapping of UNIX\u00ae OS users from network information system domains named \u201cmaths\u201d in addition to a network information system domain named \u201cind-unix-dev\u201d.","Another exemplary user name mapping feature optionally overrides an existing mapping by explicitly associating a WINDOWS\u00ae OS user to a user with a different user name in a UNIX\u00ae OS name space (and\/or vice versa). For example, an entry in the table of the GUI of  explicitly associates a user named \u201cyench\u201d with UNIX\u00ae OS user named \u201ctdshy\u201d, which optionally overrides a map associating \u201cyench\u201d between WINDOWS\u00ae OS and UNIX\u00ae OS domains.","Yet another exemplary user name feature maps users that may not have the same user names in networks (e.g., WINDOWS\u00ae OS and UNIX\u00ae OS networks) within a heterogeneous network. In any network, some users may have different user information (e.g., user names) due to historic and\/or administrative reasons. Such user information may be mapped so that any user information associated with a particular user actually refers to that user. Consider a situation wherein a user has two separate user names (e.g., john and johnaz) in WINDOWS\u00ae OS and UNIX\u00ae OS domains, an exemplary user name mapping feature can map such user names to each other.","Referring again to the GUI of , note that WINDOWS\u00ae OS user \u201ci-malrao\u201d is associated with an \u201c<unmapped>\u201d UNIX\u00ae OS status. The map of user \u201ci-malrao\u201d to \u201cunmapped\u201d status may indicate that user \u201ci-malrao\u201d should not have access to network file system resources; unless access is through, for example, an anonymous user (e.g., \u201cUid\u201d (UID) equals \u201c\u22122\u201d, see also below). An exemplary user name mapping feature may map some users to unassigned users thus ensuring no access for such users. For example, note that WINDOWS\u00ae OS user \u201ci-malrao\u201d is mapped to \u201c<unmapped>\u201d UNIX\u00ae OS status and that UNIX\u00ae OS user \u201csjahn\u201d is mapped to \u201c<unmapped>\u201d WINDOWS\u00ae OS status wherein the \u201cunmapped\u201d status optionally corresponds to an unassigned or anonymous user.","Another exemplary user name mapping feature maps multiple WINDOWS\u00ae OS users to a single UNIX\u00ae OS user. Such a feature is useful when there is a small set of UNIX\u00ae OS users that represent a class of access to network file system resources. In the GUI of , this is demonstrated where WINDOWS\u00ae OS users \u201cjohn\u201d and \u201cpeterj\u201d are mapped to the same UNIX\u00ae OS user \u201cjohnaz\u201d. One of these users is mapped using a primary mapping, which denotes that for UNIX\u00ae OS user \u201cjohnaz\u201d, mapping to a WINDOWS\u00ae OS user should result in \u201cjohn\u201d and not \u201cpeterj\u201d.","As already mentioned, in heterogeneous network including a first network and a second network, a mapping server having a user information mapping feature allows for mapping of multiple users associated with the first network to a single user associated with the second network, and\/or to receive access privileges according to that of the second network user to whom they are mapped. For example, network file system requests from any of the first network users are sent with user information associated with the single user of the second network (e.g., a UID and\/or GID) to whom the users are mapped. This particular method of user information mapping is useful when, for example, there are fewer user accounts in the second network, which may represent different classes of database access, and\/or when administrators want to associate a number of users from a first network with such second network users.","For example, in the GUI of , both \u201cjohn\u201d and \u201cpeterj\u201d are associated with UNIX\u00ae OS user \u201cjohnaz\u201d. Network file system requests from a client for a network file system (e.g., Client for NFS) for both \u201cjohn\u201d and \u201cpeterj\u201d will contain UID . On the other hand network file system requests with UID  to a server for a network file system (e.g., a Server for NFS) will be resolved in the context of \u201cVIVEKNTEST\\john\u201d to the primary mapping of \u201cjohnaz\u201d.","An exemplary user information service feature supports mapping of users to unmapped users, whether it is mapping a user from a first network to an unmapped user from a second network or a user from a second network to an unmapped user from a first network, wherein the first and second network are included in a heterogeneous network. For example, the exemplary feature supports mapping a UNIX\u00ae OS user to a WINDOWS\u00ae OS unmapped user and\/or a Windows\u00ae OS user to a UNIX\u00ae OS unmapped user.","For a WINDOWS\u00ae OS user who is mapped to an unmapped user, an authentication request results in an anonymous UID and\/or GID, typically \u22122 and\/or \u22121, respectively, being used on behalf of the user in a network file system request. Similarly, any file created by such a WINDOWS\u00ae OS user on a server for a network information system (e.g., a Server for NIS) is reported as owned by a user with the UID and\/or GID of \u22122 and\/or \u22121, respectively. On the other hand, for a UNIX\u00ae OS user who is mapped to a WINDOWS\u00ae OS unmapped user, any files created by such a user are marked as owned by a WINDOWS\u00ae OS anonymous user. Similarly, network file system requests from a UNIX\u00ae OS user who is mapped to a WINDOWS\u00ae OS unmapped user will be resolved in the context of the WINDOWS\u00ae OS anonymous user. Typically, only files that have privileges for everyone will be accessible to such UNIX\u00ae OS user via network file system.","Such an advanced mapping feature is useful to override an inadvertently created mapping, for example, one created due to simple mappings. This feature avoids associating different users who may be given the identical user names in two networks (e.g., WINDOWS\u00ae OS and UNIX\u00ae OS networks), which would be likely to cause a simple mapping to \u201cincorrectly\u201d map such users. Similarly, mapping a user to an unmapped user is also useful to ensure that some users are provided anonymous network file system access privileges.","An exemplary user information service feature maps group information from a first network to group information of a second network. For example, when mapping a WINDOWS\u00ae OS user to a UNIX\u00ae OS user, the GID of the mapped UNIX\u00ae OS user is provided in a network file system request. This allows appropriate access for the WINDOWS\u00ae OS user according to group permission bits on UNIX\u00ae OS files. While mapping the UNIX\u00ae OS user to a WINDOWS\u00ae OS user for a server (e.g., a Server for NFS), the mapping feature maps a GID to a WINDOWS\u00ae OS group using a group mapping or mappings. Thus access to the file on a WINDOWS\u00ae OS network file system server is determined by the WINDOWS\u00ae OS user name and the access control lists (ACLs) for the mapped WINDOWS\u00ae OS group.","An exemplary user name mapping feature implemented on a heterogeneous network operates as follows when a client sends a request to resolve a mapping by providing user information associated with the client's network (e.g., WINDOWS\u00ae OS or UNIX\u00ae OS).","Where a client's client network user information is associated with only one user's user information for another network, the mapping feature returns only that user information. Where a user is associated with several users, one that is marked as primary (if so marked) is returned.","If a client's user information is explicitly associated with an \u201cunmapped\u201d user, the exemplary user name mapping returns an indication that the user is \u201cunmapped\u201d. This feature is useful to override users who get mapped by default due and\/or to assign an anonymous UID and\/or GID.","In the absence of an explicit mapping for a user, the exemplary user name mapping feature optionally searches for and\/or identifies a mapping where at least one piece of user information is the same for each network and, if a mapping is found, that mapping is returned. In the case that the exemplary mapping feature fails to identify a mapping for the user, a default status returns, e.g., that the user is unmapped.","An exemplary user information management service method maps a UNIX\u00ae OS user's UID and\/or GID to a WINDOWS\u00ae OS user's user name. Such an exemplary method optionally uses a WINDOWS\u00ae OS network network file system server (e.g., a server for NFS) and a mapping server having a user name mapping feature for mapping UNIX\u00ae OS user information (e.g., UIDs and\/or GIDs) included in network file system requests to WINDOWS\u00ae OS user information (e.g., user names). According to this exemplary method, a WINDOWS\u00ae OS user name is used to identify file system requests. The WINDOWS\u00ae OS network, network file system server then uses a WINDOWS\u00ae Services for UNIX\u00ae Server for NFS Authentication component (installed locally and\/or on a domain controller) for authentication to a WINDOWS\u00ae OS to gain file access.",{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 4","b":["400","400","420","440","420","424","428","432","440","436","432","420","436","440"]},"In Network A , the server  periodically downloads and stores user information maps from the mapping server . This particular process is optionally implemented only if a change to user information map has occurred. At some point in time, the server  receives a network file system request from a client  of Network B  that includes user information associated with Network B  (e.g., a UID and\/or a GID). The server  uses a user information map downloaded from the mapping server  to map the user information associated with Network B  (e.g., a UID and\/or a GID) to corresponding user information associated with Network A  (e.g., a user name). The server  then authenticates a Network A  user using the server and the server's authentication component, which typically runs on the domain controller  of the particular domain. Alternatively, if the mapped user is local, then the server  uses a locally installed authentication component.","Next, the server  accesses files by \u201cimpersonating\u201d the mapped Network A  user and by using credentials of that user and returns file data to the requesting client  of Network B . The server  of Network A  optionally downloads an entire set of maps periodically to translate access control lists (ACLs) into Network B  user information (e.g., UIDs and\/or GIDs) to return to Network B  clients (e.g., client ). This downloading ensures that network file system calls that require returning file attributes (e.g., getFileAttributes) are handled properly.","Yet another exemplary user information service method uses a mapping server having a user information mapping feature. According to this method, a client in a first network allows access to resources using user information from the first network and\/or a second network. For example, according to this method, a WINDOWS\u00ae OS network, network file system client may allow access to network file system resources using WINDOWS\u00ae OS credentials of the user and\/or UNIX\u00ae OS credentials of the user. Where WINDOWS\u00ae OS credentials of the user are used, the credentials are optionally mapped to a UNIX\u00ae OS user name and\/or to a UNIX\u00ae OS UID and\/or GID, either directly or indirectly. Where UNIX\u00ae OS credentials are used (e.g., a UNIX\u00ae OS user name and\/or password), the credentials are optionally mapped directly to a UNIX\u00ae OS UID and\/or GID and\/or authenticated and then mapped to a UNIX\u00ae OS UID and\/or GID.",{"@attributes":{"id":"p-0088","num":"0087"},"figref":"FIG. 5","b":["500","500","520","540","520","528","532","540","536","532","520","520","540"]},"Referring to , a user requests the client  to map a network file system share or access a network file system share. In so doing, the user provides credentials associated with Network A . If the request is on behalf of current a Network A  user, then the client  sends Network A  credentials to the mapping server , which maps the user's Network A  credentials to Network B  user information (e.g., a user name) and returns Network B  credentials (e.g., a UID and\/or a GID). If the request is on behalf of another user, the client  also authenticates the user using the usual Network A  authentication mechanism and provides the resulting credentials for use in user information mapping. According to this exemplary method, the client  stores the returned Network B  credentials (e.g., UID and\/or GID) and mounts the network file system share.","For subsequent network file system calls for the same network file system share, the client  sends the request to the Network B  server  using the previously returned Network B  credentials (e.g., UID and\/or GID). The Network B  server  sends the data for the requesting user having the Network B  credentials. This method is suitable for access to network file system resources from a WINDOWS\u00ae OS user interface such as a browser (e.g., MICROSOFT\u00ae Internet Explorer), via a net command and\/or via a mount command.","In the case of access to network file system resources using credentials associated with UNIX\u00ae OS, an exemplary method includes a user request to the client  to map a network file system share or access a network file system share. In response to such a request, the client  sends a UNIX\u00ae OS user name and encrypted UNIX\u00ae OS password to the mapping server . The mapping server  uses data from either a personal computer network file system (e.g., PC-NFS\u00ae) or a network information system to authenticate the UNIX\u00ae OS user name and the password and returns the associated UID\/GID to the client . The client  stores the returned UID\/GID and mounts the network file system share. For subsequent network file system calls for the same network file system share, the client  sends the network file system request to the server  using a previously returned UID and\/or GID. Access to network file system resources using UNIX\u00ae OS credentials is provided through a mount command. The user mounts the NFS share using a command such as: \u201cmount*\\\\server\\share-u:user-p:passwd\u201d where the user name is a UNIX\u00ae OS user name and passwd is the UNIX\u00ae OS password.","An exemplary user information service method for gateways includes a user information mapping feature. Interactions between the gateway and user information mapping feature are in some instances similar to the previously discussed interactions between a client for network file system (e.g., a Client for NFS) and a mapping server. For example, where WINDOWS\u00ae OS credentials of the user are used, the credentials are optionally mapped to a UNIX\u00ae OS user name and\/or to a UNIX\u00ae OS UID and\/or GID, either directly or indirectly.","According to such methods, requests from WINDOWS\u00ae 95, WINDOWS\u00ae 98, WINDOWS NT\u00ae, or WINDOWS\u00ae 2000 clients without network file system clients are handled by the gateway (e.g., a Gateway for NFS). For example, a gateway mounts UNIX\u00ae OS shares using a root account and exports the mapped drives as WINDOWS\u00ae OS shares. The user requests the gateway to access the network file system share mapped by gateway. The WINDOWS\u00ae OS request is sent using WINDOWS\u00ae OS credentials. The gateway sends WINDOWS\u00ae OS credentials to a mapping server, which maps the WINDOWS\u00ae OS credentials to the UNIX\u00ae OS user name and returns the UID and\/or GID. The gateway stores the returned UID\/GID by associating the given gateway request with the UID and\/or GID. For the subsequent network file system calls for the same network file system share, the gateway sends the network file system request to the network file system server using previously the returned UID and\/or GID.","An exemplary user information management service feature allows for root to administrator mapping, and\/or vice versa, in a heterogeneous network. For example, an exemplary feature maps a UNIX\u00ae OS root user to a domain administrator (or a local administrator). In addition, the feature optionally maps a primary group of the UNIX\u00ae OS root to WINDOWS\u00ae OS \u201cdomain admins\u201d group, for mapping a domain account, or alternatively, an \u201cadministrators\u201d group for mapping local accounts.","Various user information management service features discussed herein use remote procedure calls (RPCs). In general, a RPC is a protocol that a program can use to request a service from another program located in another computer in a network without having to understand network details. RPC typically uses a client\/server model wherein a requesting program is a client and a service-providing program is a server. Various user information management service features expose their application programming interfaces (APIs) as RPC interfaces which facilitate building of applications. Several exemplary RPCs (GetUnixCredsFromNTUserName, AuthUsingUnixCreds, HasMappingChanged, and DumpAllMaps) supportable by a user information management service are described below.","GetUnixCredsFromNTUserName RPC","This RPC takes a structure containing a WINDOWS NT\u00ae OS domainname\\username string and returns a corresponding UNIX\u00ae OS Domainname\\username, UID, number of GIDs and the actual GIDs. Accordingly, this RPC initializes return parameters to 0 or \u201cNULL\u201d (as applicable); looks up the WINDOWS NT\u00ae Domainname\\username in a user mapping list; if a match is found, it fills up the return parameters with appropriate values; and returns \u201cTRUE\u201d.","In the aforementioned RPC, if the WINDOWS NT\u00ae Domainname\\username is not found in the list then a \u201cNULL\u201d string is returned for UINX\u00ae OS username and 0 is returned for UID. In addition, the number of GIDs returned for the user is 0. With this returned information, the caller infers that the requested WINDOWS NT\u00ae domanename\\usemame was not found by the mapping server.","AuthUsingUnixCreds RPC","This RPC takes a structure containing a WINDOWS NT\u00ae OS domainname\\username string and returns a corresponding UNIX\u00ae OS Domainname\\username, UID, number of GIDs and the actual GIDs. Accordingly, this RPC initializes return parameters to 0 or \u201cNULL\u201d (as applicable); looks up the UNIX\u00ae OS Domainname\\username in a password file present on a system32\\etc\\password file; if a match is found, it compares the store-encrypted password with one supplied by the caller; if the passwords match, it then looks up a user mapping list and fills up the return parameters with appropriate values; and returns \u201cTRUE\u201d.","In the aforementioned RPC, if the UNIX\u00ae OS Domainname\\username is not found in the list or the supplied password does not match, then a \u201cNULL\u201d string is returned for UNIX\u00ae OS username and 0 is returned for UID. The number of GIDs returned for the user is 0. With this returned information, the caller infers that the specified WINDOWS NT\u00ae OS domanename\\username was not found by the mapping server. In addition, the UNIX\u00ae OS domainname\\username returned in this RPC may be redundant and optionally ignored by the caller (e.g. a network file system client and\/or a gateway).","HasMappingChanged RPC","This RPC takes a structure containing a time stamp. A caller calls a mapping server with the time stamp it received from a prior call, e.g., a last call. If mapping server mappings changed in the period between the present and the prior call, then the mapping server returns a new time stamp. If the mappings have not changed, a set time stamp is returned (e.g., a time stamp of (0, 0), having a low and a high element).","In the aforementioned RPC, if the input time stamp has a high and a low element and is (0, 0), the RPC return the new stamp or else it compares the input time stamp with one stored internally. If the two match, the RPC returns (0, 0) indicating that the mapping has not changed or else it returns a new time stamp. In general, the time stamp generated is a locally generated unique identifier (LUID), which is guaranteed to be unique during the lifetime of the system.","DumpAllMaps RPC","This RPC takes an argument that tells it what type of maps (user\/group) to dump. It also optionally takes a cookie that is set to 0 in a current implementation. The argument includes an indication for map types to dump, e.g., 0 is for user maps, 1 is for group maps (note that user and group maps are optionally stored in separate files). A time stamp is also optionally included for dumped maps. According to this RPC, if the principle type is 0, it selects a user list, or else it selects a group list; fills up return parameters with all map information; and returns \u201cTRUE\u201d.","In the aforementioned RPC, the caller optionally updates itself with maps dumped by the mapping server. The caller may also store a time stamp received from the mapping server, which may be used by the caller in subsequent HasMappingChanged RPC call.","Various user information management service features discussed herein allow for a command line and\/or GUI control (e.g., a Microsoft Management Console (MMC)-based GUI tool). A command line and\/or GUI optionally allows for managing a mapping server and\/or maps (e.g., mappings). Such interaction tools optionally provide the following functions: start and\/or stop a mapping server; create, delete, and\/or modify mappings; set a refresh interval to refresh mappings periodically; download UNIX\u00ae OS and WINDOWS\u00ae OS user information (e.g., user names) from a WINDOWS\u00ae OS domain controller and\/or a network information system master server and\/or update simple mappings; map multiple WINDOWS\u00ae OS users to a single UNIX\u00ae OS user; set and\/or mark a primary mapping; list and\/or view user names mappings; and\/or restore and\/or back up user mappings. In addition, administrative tools allow for local and\/or remote administration.","Thus, although some exemplary methods and exemplary systems have been illustrated in the accompanying Drawings and described in the foregoing Detailed Description, it will be understood that the methods and systems are not limited to the exemplary embodiments disclosed, but are capable of numerous rearrangements, modifications and substitutions without departing from the spirit set forth and defined by the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A more complete understanding of the various methods and arrangements described herein, and equivalents thereof, may be had by reference to the following detailed description when taken in conjunction with the accompanying drawings wherein:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
