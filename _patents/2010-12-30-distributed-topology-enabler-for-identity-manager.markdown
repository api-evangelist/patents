---
title: Distributed topology enabler for identity manager
abstract: Provided are techniques for combining existing identity management information from multiple Identity Manager (IM) nodes. The combined information from the multiple IM nodes is presented. A provisioning request to change the identity management information is received. The provisioning request is decomposed to form multiple, separate sub-requests. One or more IM nodes are identified to process the sub-requests. The sub-requests are issued to the one or more IM nodes in parallel. A status of each of the sub-requests is received from each of the one or more IM nodes that is processing that sub-request. The received statuses are combined. The combined statuses are returned as a status of the provisioning request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09430291&OS=09430291&RS=09430291
owner: International Business Machines Corporation
number: 09430291
owner_city: Armonk
owner_country: US
publication_date: 20101230
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION","Additional Embodiment Details"],"p":["1. Field","Embodiments of the invention relate to a distributed topology enabler for an identity manager that controls user access to different Identity Manager (IM) systems.","2. Description of the Related Art","An Identity Manager (IM) system controls user access to different systems. Systems may be described as \u201cend points\u201d that need user identification (userid) management. Systems may be any combination of computers, computer applications, network devices, human interface devices, appliances, etc.","Implementations for distributed IM nodes typically have requirements that include, for example:\n\n","Operationally, these requirements present challenges in conventional IM systems. For example, conventional IM systems have difficulty with the requirements to manage the reconciliation load and scheduling of tens of thousands of services; the need to distribute IM configuration tasks for these services; and the need to provide a rolling schedule for system maintenance activities without bringing down entire IM functionality. Some conventional IM systems may be deployed in a cluster to improve performance and provide failover, but, in very large configurations, the conventional IM systems do not provide maintenance or an upgrade window, or control over reconciliation load management or decentralized administration and maintenance.","Thus, there are drawbacks of existing IM solutions in very large scale implementations. For example, scalability may be reached by adding nodes to a cluster, but this solution may suffer from the bottleneck of a single data repository. Also, an outage or maintenance window may bring down the entire IM infrastructure. Moreover, the configuration tasks are managed and implemented on a single application, putting configuration load at one point.","Provided are a method, computer program product, and system for combining existing identity management information from multiple Identity Manager (IM) nodes. The combined information from the multiple IM nodes is presented. A provisioning request to change the identity management information is received. The provisioning request is decomposed to form multiple, separate sub-requests. One or more IM nodes are identified to process the sub-requests. The sub-requests are issued to the one or more IM nodes in parallel. A status of each of the sub-requests is received from each of the one or more IM nodes that is processing that sub-request. The received statuses are combined. The combined statuses are returned as a status of the provisioning request.","In the following description, reference is made to the accompanying drawings which form a part hereof and which illustrate several embodiments of the invention. It is understood that other embodiments may be utilized and structural and operational changes may be made without departing from the scope of the invention.","Embodiments introduce a distributed approach to deploying Identity Manager (IM) nodes. The distributed approach is based on providing a Distributed Topology Enabler for Identity Manager (DTEIM) node (i.e., management node) on top of multiple IM nodes and dividing the service workload across the multiple IM nodes (e.g., hosting hundreds or thousands of services). Embodiments provide a DTEIM node for combined management and views of a user's identity and account information across the enterprise's multiple IM nodes, while decentralizing IM node configuration and administration tasks. The DTEIM node routes user requests to the appropriate IM nodes. Then, the DTEIM node combines information received from different IM nodes and presents this combined information to an end user. In various embodiments, the term \u201cuser\u201d may represent a human user, a computer program, a hardware device, etc.",{"@attributes":{"id":"p-0057","num":"0061"},"figref":"FIG. 1","b":["100","110","140","110","120","100","150","150"]},"In certain embodiments, the term DTEIM architecture refers to the entire, abstract DTEIM infrastructure including DTEIM components. In certain embodiments, the term DTEIM topology refers to the collection of IM nodes  under the control of the DTEIM engine .","Embodiments provide a progressively scalable solution at very large IM implementations by distributing the identity information and services across multiple IM nodes . In certain embodiments, an IM implementation is a reference to the size of an IM solution, including the number of users, services etc. and not to the size of an IM node hardware\/software.","In certain embodiments, the use of the DTEIM engine  at DTEIM servers (such as at DTEIM server ) provide the following:\n\n","With the DTEIM engine , there is a distributed IM architecture to provide a progressively scalable solution to a very large user and service base. In certain embodiments, the DTEIM topology consists of loosely coupled IM nodes , accessed via a DTEIM server . In certain embodiments, the DTEIM engine  may be a JAVA\u00ae 2 Platform, Enterprise Edition (J2EE\u00ae) application that functionally behaves as a combined reverse proxy server plus information and response combiner. The DTEIM engine  distributes (e.g., sprays) user requests to one of many IM member nodes based on the one or more target services and combines identity manager information and responses from multiple IM nodes to the end user. (JAVA and J2EE are trademarks of Sun Microsystems in the United States, other countries, or both.)","The DTEIM engine  provides the DTEIM services and provides an API implementation. The API combines user information from different IM nodes , communicates with IM nodes  using a web services interface, discovers services in IM nodes , maintains service to an IM node mapping, provides functionality similar to IM self services capability, and utilizes the local DTEIM server to derive node, person and account relationships.","The DTEIM engine  combines responses from different IMs to present to the end user. The DTEIM engine  also hosts a Distributed IM API (DTEIM API) module, which can be used by external web applications to provide a custom User Interface (UI) or be called by a JAVA\u00ae client. Below, a DTEIM User Interface (UI) web application is provided to illustrate DTEIM capabilities and API usage and can be used as a base to set up a custom UI.","In certain embodiments, the DTEIM architecture:\n\n","Since the DTEIM topology consists of loosely coupled IM nodes  that are administered independently, the DTEIM topology allows IM objects that are local to an individual IM node  to be configured and managed at the IM node  itself, instead of burdening the DTEIM topology. The focus of the DTEIM server  is to provide end user services across the DTEIM architecture using the DTEIM engine . The DTEIM architecture provides a high degree of decentralization, while the end users get a unified view of the distributed services across multiple IM nodes .","The DTEIM architecture also allows IM nodes  to have different person populations, and the DTEIM architecture keeps track of a user's footprint across IM nodes  (e.g., which IM nodes  that the user participates in).","DTEIM Architecture","The DTEIM architecture consists of a \u201cglobal\u201d DTEIM management node (a DTEIM server and DTEIM directory server) that interacts with one or more independent IM member nodes. The DTEIM management node combines identity management data from multiple IM nodes  to present to users, receives requests from users, and routes requests to the one or more member IM nodes  that are responsible for the request's target. Each of the member IM nodes  can be fully clustered IM nodes  that are responsible for a subset of services that the distributed system will manage. The DTEIM UI application can also be clustered to offer high throughput and provide failover. The DTEIM node  provides the capabilities to manage IM node information, route requests, combine results, and present an API for user interface development. In certain embodiments, the DTEIM node  uses a local Lightweight Directory Access Protocol (LDAP) data store or LDAP directory server to hold configuration information and object stubs of entity objects that point to the distributed locations of these entity objects. The object stubs may be for people (i.e., people stubs), accounts (i.e., account stubs), services (i.e., service stubs), etc. Each object stub points to a complete entity object (for the people, accounts, services, etc.) stored at an IM node .","One of the IM nodes  is designated as the main \u201cpeople\u201d node. Identity\/Human Resource (HR) feeds may be input into this main \u201cpeople\u201d node, bypassing the DTEIM node . The IM-IM adapter is leveraged to distribute person objects from the main IM node  to other IM nodes  via policy configuration. That is, each IM node  gets an identity feed from the main IM node  via the IM-IM adapters. Each child IM node  appears as a managed platform in the main IM node . The IM policies and automatic entitlements may be configured to distribute person objects to the child IM nodes based on person criteria. In certain embodiments, the IM-IM adapter uses a standard adapter framework.","In certain embodiments, the DTEIM node communicates with the IM nodes by using a web services based abstraction of the IM API. For example, the DTEIM node routes user requests to the appropriate IM node over the web services interface. The DTEIM distribution contains an IM web services connector that is installed in front of each IM node. This removes IM API and web services version dependency when communicating with the IM nodes and provides a lightweight and standard communication HyperText Transfer Protocol (HTTP) based protocol instead of other protocols (e.g., the JAVA\u00ae Remote Method Invocation (RMI) interface over the Internet Inter-Orb Protocol (IIOP) (also referred to as RMI over IIOP) used by the IM API).","Person and account changes that occur on the IM nodes independently or as a result of operations initiated from the DTEIM node are notified back to the DTEIM node via a DTEIM notifier module that is installed on the IM nodes as part of the DTEIM infrastructure. The DTEIM notifier modules use web services based communication to communicate from an IM node to the DTEIM node.",{"@attributes":{"id":"p-0071","num":"0094"},"figref":["FIG. 2","FIG. 2","FIG. 2"],"b":["110","140","200","230","230","230","260","260","260","250","110","230","230","230","120","110","120","140","260"],"i":["a","b","n ","a","b","n","a","b","n","a"]},"The DTEIM engine  retrieves person information from the main IM node (following a stub reference). Then, changes are written back to the main IM node , which distributes the changes to participating IM nodes . . . via IM-IM adapters . . . . The DTEIM engine  retrieves and updates account objects by following the account stub reference. The DTEIM engine  retrieves other objects from participating IM nodes , , . . . in parallel. Thus, the time to retrieve objects is as long as the longest time to retrieve from any single IM. The main IM node may host an identity repository and optionally a subset of services. The identity repository stores a collection of person entities.","The IM layer  consists of one or more IM nodes , , . . . . The IM nodes , , . . . may be geographically separate. Each IM node , , . . . includes, respectively, an IM server , , . . . , an IM directory server , , . . . , an IM database , , . . . , IM web services , . . . , and end points , , . . . ","One of the IM nodes is designated the main IM node and maintains all identities in an IM database (or other data store). Identity feeds are carried out on the main IM node via the identity feed .","Each of the other IM nodes . . . includes an IM-IM adapter . . . ","The DTEIM notifier , , is a workflow proxy module and is installed into each IM node , , . . . , respectfully, to notify the DTEIM engine  about person and account object creation or deletion. This notification may be sent via the IM web services , . . . ","Each IM node , , . . . notifies the DTEIM engine  of account and person changes via the notifier module using a web services interface. For example, adds and deletes of entity objects are notified. In certain embodiments, attribute changes, other than suspend\/restore, are not notified.","The IM web services may be described as a web services wrapper for the IM API. The DTEIM architecture leverages the IM API web services wrapper of the web services , , . . . to communicate with the IM nodes , , . . . , and the standard IM-IM adapter . . . to distribute person information across the IM nodes , , . . . ","In , the DTEIM engine  manages the IM nodes , , . . . . Node- is the main IM node and manages a subset of services. Node- and Node-n are IM nodes that manage their respective subsets of services.","Each IM node , , . . . has IM web services , , . . . that listen for calls by the DTEIM engine  against the IM platform. In certain embodiments, the DTEIM engine  talks to the IM web services , , . . . over standard HyperText Transfer Protocol Secure (HTTP\/S) or Simple Object Access Protocol (SOAP) over HTTPS. The IM web services , , . . . may internally use an IM API to service the call and send back a web service response. Also, non-JAVA\u00ae clients (e.g., .net clients) are able to communicate with the IM nodes , , . . . . The IM API complexity is abstracted by the web services functional API.","Master-Child or Peer to Peer","The DTEIM topology can be configured as either a Master-Child topology or a Peer to Peer topology.","In the Peer to Peer topology, each IM node has independent identity feeds from authoritative sources. Common persons in different IM nodes have the same unique, one or more identifying attributes.",{"@attributes":{"id":"p-0083","num":"0106"},"figref":"FIG. 2","b":["260","210","260","260","260","272","272","260"],"i":["a ","a ","b ","n ","b ","n ","a "]},"In a Master-Child topology, the DTEIM engine  assumes that each IM node , , . . . uses a common authentication provider so that a user can be authenticated on any of the IM nodes , , . . . with the same credential. This type of authentication is typically achieved by using an external authentication repository, such as an enterprise directory. In certain alternative embodiments, the DTEIM engine  and IM nodes may leverage an access control product that provides Single Sign On (SSO) capabilities, and authentication may be delegated to the access control product.","End users log onto the DTEIM engine  using the same authentication that they would have used for an IM node , , . . . (e.g., simple authentication, Single Sign On (SSO), client certificate authentication, etc.). The DTEIM engine  authenticates (or establishes a session) against the main IM node . In certain embodiments, the end user has an IM account on the main IM node and on any other IM node , . . . where the user wants to manage accounts.","Person Modification","Person modification requests by the end user are serviced by the DTEIM engine  from the main IM node . After they are executed there, the IM-IM adapters . . . framework distributes (e.g., sprays) the changes to affected IM nodes , , . . . . If a person is added or removed from an IM node , , . . . , the DTEIM notifier module , , . . . on that IM node , , . . . notifies the DTEIM engine , and the DTEIM engine  adds or removes the object stub that references the person's object on the IM node , , . . . from the directory server .","In certain embodiments, there is person modification only on a specific IM node , , . . . . For such embodiments, using the IM-IM adapter . . . , each IM node , , . . . is represented as a service on the main IM node . A user's person object on an IM node , , . . . is represented as an identity account. Using the DTEIM engine , a user is able to manage this account by choosing an identity account from any IM node.","Account and Password Management","The DTEIM engine  maintains object stubs for all accounts owned by a person. The DTEIM notifier , , . . . on an IM node , , . . . sends account object creation and deletion notifications to the DTEIM engine . The DTEIM engine  lets a user manage accounts on all IM nodes , , . . . or selectively on one IM node , , . . . at a time.","When a provisioning request on one or more services is submitted to the DTEIM engine , the DTEIM engine  determines the IM node , , . . . that manages the service and routes the account request to the IM node , , . . . responsible for the service. In certain embodiments, a service may be described as representing an \u201cend point\u201d (i.e., a system managed by the IM node). After the request is executed there, the DTEIM notifier module , , . . . sends notification to the DTEIM engine , which creates an account stub in the DTEIM directory server . In certain embodiments, simple attributes changes on account objects in IM nodes , , . . . are not sent back to the DTEIM object stub on the DTEIM directory server , and, thus, they do not add to the DTEIM-IM traffic.","When a user wants to view or modify existing accounts, the DTEIM engine  expands the account stub (by accessing the IM node , , . . . ) to render account information to the end user.","The DTEIM engine  distributes (e.g., sprays) password change requests to the target IM nodes , , . . . in parallel. For the user's convenience, the DTEIM engine  joins the password rules across the IM nodes , , . . . if the target accounts in the password change request are on multiple IM nodes , , . . . ","Access information is retrieved from participating IM nodes , , . . . in parallel. Accesses can be retrieved, provisioned or removed.","Request and Assignment Management","The DTEIM engine  gets request information or assignment information in parallel from all the IM nodes , , . . . that a user participates in. In certain embodiments, the DTEIM engine  does not connect to the IM nodes , , . . . that the user does not participate in. Since the requests or assignments from multiple IM nodes , , . . . are retrieved in parallel, the time to retrieve is only as long as the longest time to retrieve from any one IM node , , . . . (plus a minor thread management overhead). Also, assignment items can be performed in bulk across IM nodes , , . . . in a single action. Assignment items may be described as \u201cto do\u201d items for a participant (e.g., pending approve\/reject items for provisioning requests for another user, pending requests to provide more information on a provisioning request, etc.).","IM Node Administration","In certain embodiments, since the DTEIM architecture allows for a very loose coupling of IM nodes, no policies, roles or other configuration items are defined or configured at the DTEIM layer . IM administrators (e.g., system administrators or other users) configure the IM nodes , , . . . using current capabilities of identify management. In certain embodiments, most of the configuration steps may be carried out as they would be for any IM node. This configuration includes:\n\n","The DTEIM engine  provides end user functionality. In certain embodiments, for decentralization, administrative and configuration tasks are performed on the IM nodes , , . . . . In certain embodiments, post office consolidation of notifications take place within the IM nodes , , . . . . A post office may be described as an email notice consolidation facility to combine frequent multiple email notifications to the same user into one to reduce email traffic. The post office consolidation may be a feature of the IM node and is not directly impacted by DTEIM engine . In certain embodiments, provisioning policies do not target services that are in different IM nodes , , . . . , and a separate provisioning policy is configured in each IM node , , . . . ","In certain embodiments, password and identity policies do not target service profiles if all service instances are not in the same IM node , , . . . . In certain alternative embodiments, the password and identity policies do target service profiles if all service instances are not in the same IM node , , . . . , and the policies are identical on each IM node , , . . . to avoid confusion over conflicting policies.","In certain embodiments, person Access Control Items (ACIs) that involve an account relation are setup on the IM node , , . . . that hosts the service for the account. An ACI controls who has how much access to IM data. In some embodiments in which data is referenced from multiple accounts that are not on the same node, the person ACI filter option is not used.","In certain embodiments, a custom workflow does not use operation activities to reference services not hosted on that IM node , , . . . . The custom workflow is created on the one or more IM nodes , , . . . that host the services and related objects. In certain embodiments, services may list as prerequisites other services in the same node.","DTEIM Reference User Interface (UI)","The DTEIM reference UI is an end user UI. The DTEIM reference UI provides self service user functions (i.e., the administration tasks are decentralized on the local IM nodes). The DTEIM reference UI is provided with the DTEIM engine  to show the DTEIM functionality. In certain embodiments, the DTEIM reference UI is a reference implementation of the DTEIM API. The DTEIM reference UI illustrates the use of the DTEIM API. In various embodiments, other UIs can be written against the DTEIM API or the DTEIM reference UI can be used as a base to deliver a UI as per the requirements of an organization.","In certain embodiments, the DTEIM reference UI uses JAVA\u00ae Server Faces (JSF) for view processing and uses the DTEIM API to communicate with the IM nodes. The DTEIM reference UI includes source code and JAVA\u00ae documentation that can be used to customize the DTEIM reference UI.","The DTEIM reference UI functionality is based on the functionality that an end user would see in the IM UI. Since the DTEIM engine  is scoped for end user functions, the DTEIM reference UI does not contain administrative functions. In the DTEIM architecture, administrative functions are decentralized and performed directly on the IM node by the administrator.","After installation, the DTEIM reference UI can be accessed by navigating to a particular location or Uniform Resource Locator (URL) (e.g. http:\/\/hostName: portNumber\/DTEIM\/index.html).","The following screen shots show some of the DTEIM Reference UI screens.",{"@attributes":{"id":"p-0104","num":"0136"},"figref":"FIG. 3","b":"300"},{"@attributes":{"id":"p-0105","num":"0137"},"figref":"FIG. 4","b":"400"},{"@attributes":{"id":"p-0106","num":"0138"},"figref":"FIG. 5","b":["500","120"]},{"@attributes":{"id":"p-0107","num":"0139"},"figref":"FIG. 6","b":"600"},{"@attributes":{"id":"p-0108","num":"0140"},"figref":"FIG. 7","b":["700","120","120","120"]},{"@attributes":{"id":"p-0109","num":"0141"},"figref":["FIG. 8","FIG. 8"],"b":"800"},{"@attributes":{"id":"p-0110","num":"0142"},"figref":"FIG. 9","b":"900"},"The DTEIM engine  displays the person information similar to the IM UI. Person form changes in IM are followed in real time by the DTEIM engine . The Personal Information tab may be rendered using an IM form definition.",{"@attributes":{"id":"p-0112","num":"0144"},"figref":"FIG. 10","b":"1000"},{"@attributes":{"id":"p-0113","num":"0145"},"figref":"FIG. 11","b":["1100","120","120"]},{"@attributes":{"id":"p-0114","num":"0146"},"figref":"FIG. 12","b":"1200"},{"@attributes":{"id":"p-0115","num":"0147"},"figref":"FIG. 13","b":["1300","120","120","120"]},{"@attributes":{"id":"p-0116","num":"0148"},"figref":"FIG. 14","b":"1400"},{"@attributes":{"id":"p-0117","num":"0149"},"figref":"FIG. 15","b":["1500","120"]},{"@attributes":{"id":"p-0118","num":"0150"},"figref":"FIG. 16","b":"1600"},"DTEIM API","The DTEIM engine  provides an API that can be used by custom user interfaces or Java client applications to communicate with the DTEIM engine . The DTEIM Reference UI is an example of an external application that uses the DTEIM API.","The DTEIM API may be JAVA\u00ae based. The DTEIM API provides a topology transparent API. With the DTEIM API, the client does not need to be aware of the IM node distribution. The DTEIM API provides self service functions. The DTEIM API can be used by a custom UI or a JAVA\u00ae client application to communicate with the DTEIM engine .","DTEIM Data Services API","The DTEIM Data Services API represents DTEIM data objects in the DTEIM LDAP data store, and provides entity and search operations.","DTEIM Provider API","The DTEIM Provider API provides access to DTEIM operations. The DTEIM Provider API is limited to providing end user functionality. In certain embodiments, the DTEIM Provider API does not provide administrative and configuration functionality. In certain embodiments, the DTEIM Provider API consists of the following providers:\n\n","The DTEIM node also provides an Enterprise JAVA\u00ae Bean (EJB) layer interface for DTEIM administration and authentication:\n\n","The examples herein are illustrative of the DTEIM API and are not an exhaustive list of examples for the entire DTEIM API.",{"@attributes":{"id":"p-0125","num":"0169"},"figref":"FIG. 17","b":"1700"},"DTEIM API to authenticate in accordance with certain embodiments.",{"@attributes":{"id":"p-0127","num":"0171"},"figref":"FIG. 18","b":"1800"},{"@attributes":{"id":"p-0128","num":"0172"},"figref":"FIG. 19","b":"1900"},{"@attributes":{"id":"p-0129","num":"0173"},"figref":"FIG. 20","b":"2000"},{"@attributes":{"id":"p-0130","num":"0174"},"figref":"FIG. 21","b":"2100"},{"@attributes":{"id":"p-0131","num":"0175"},"figref":"FIG. 22","b":["2200","120","120"]},{"@attributes":{"id":"p-0132","num":"0176"},"figref":"FIG. 23","b":["2300","120","120"]},{"@attributes":{"id":"p-0133","num":"0177"},"figref":"FIG. 24","b":["2400","120"]},{"@attributes":{"id":"p-0134","num":"0178"},"figref":"FIG. 25","b":"2500"},"DTEIM LDAP Data Store",{"@attributes":{"id":"p-0135","num":"0179"},"figref":"FIG. 26","b":"2600"},{"@attributes":{"id":"p-0136","num":"0180"},"figref":"FIGS. 27A, 27B, and 27C","b":["2700","2710","2720"]},{"@attributes":{"id":"p-0137","num":"0181"},"figref":"FIG. 28","b":["2800","120","120"]},{"@attributes":{"id":"p-0138","num":"0182"},"figref":"FIG. 29","b":["2900","120"]},"In certain embodiments, the web service runs as a web application co-located with an IM node. The web service may use a simple client and data model. Web Services Description Language (WSDL) files can be used to generate a web services client and data model. WSDL may be used to generate non-JAVA\u00ae clients. Also, a pre-generated JAVA\u00ae client is provided in certain embodiments. The web service provides a threaded conversation by establishing a session identifier (ID).",{"@attributes":{"id":"p-0140","num":"0184"},"figref":"FIG. 30","b":"3000"},"In certain embodiments, the web services suite is made of functionally separate services, with a single proxy fa\u00e7ade:\n\n","In certain embodiments, a pre-generated web service client provides a web service factory (class). The web service factory \u201cpublishes\u201d each web service and eliminates the client's need to determine the service address. The web service factory can provide an instance of any of the IM web services. Obtaining a web service is functionally simple (e.g., webServiceFactory.getWSPaswordService( )).",{"@attributes":{"id":"p-0143","num":"0201"},"figref":"FIG. 31","b":"3100"},{"@attributes":{"id":"p-0144","num":"0202"},"figref":["FIG. 32","FIG. 32","FIG. 36"],"b":["120","120","3200","3202","120","3204","120","3206","120","3208","120"]},{"@attributes":{"id":"p-0145","num":"0203"},"figref":"FIG. 33","b":["120","3300","120","3302","120","3304","120","3306","120","3306","3308","33","12"]},"In block , the main IM node uses the IM to IM adapter to send the person modification to all participating IM nodes. In block , each IM node receiving the person modification updates information at that IM node. Also, each IM node receiving the person changes routes the add\/delete\/suspend\/restore requests to the DTEIM engine .","In block , the DTEIM notifier module on the main IM node creates a notification packet for add\/delete\/suspend\/restore person, adds a node id, and sends an object stub to the DTEIM engine  over web services. In block , the DTEIM engine  receives the notification. In block , the DTEIM engine  adds\/deletes\/suspends\/restores a person object stub with the node id to the DTEIM LDAP directory server.",{"@attributes":{"id":"p-0148","num":"0206"},"figref":"FIG. 34","b":["120","3400","3402","3402","3404","3408","120","120"]},"In block , the main IM node uses the IM to IM adapter to send person changes to all participating IM nodes. In block , each IM node receiving the person changes updates information at that IM node. Also, each IM node receiving the person changes routes the add\/delete\/suspend\/restore requests to the DTEIM engine .","In block , the DTEIM notifier module on the main IM node creates a notification packet to add\/delete\/suspend\/restore a person, adds a node id, and sends an object stub to the DTEIM engine  over web services. In block , the DTEIM engine receives the notification. In block , the DTEIM engine  adds\/suspends\/restores\/deletes the person object stub with the node id to the DTEIM LDAP directory server.",{"@attributes":{"id":"p-0151","num":"0209"},"figref":["FIG. 35","FIG. 35","FIGS. 35A and 35B","FIG. 35A","FIG. 35A","FIG. 35B"],"b":["120","3500","120","3502","120","3504","120","3506","120","3506","3508"]},"In block , the DTEIM engine  determines whether the user queried for \u201crequest\u201d data. If so, processing continues to block , otherwise, processing continues to block . In block , the DTEIM engine  processes the query using parallel sub-queries for multiple IM nodes. Further details of the processing of the query in parallel is described with reference to . From block , processing continues to block .","In block , the DTEIM engine  determines whether the user queried for \u201cto do\u201d data. If so, processing continues to block , otherwise, processing continues to block . In block , the DTEIM engine  processes the query using parallel sub-queries for multiple IM nodes. Further details of the processing of the query in parallel is described with reference to . From block , processing continues to block .","In block , the DTEIM engine  returns to the user \u201cnode aware\u201d \u201caccount\u201d data combined with any \u201crequest\u201d and \u201cto do\u201d data that the user may have queried for to present combined information from multiple IM nodes to the user. Thus, if the user has not asked for \u201crequest\u201d or \u201cto do\u201d data, the user receives \u201caccount\u201d data from multiple IM nodes. However, if the user asked for \u201crequest\u201d and\/or \u201cto do\u201d data, the user receives combined \u201caccount\u201d data and \u201crequest\u201d and\/or \u201cto do\u201d data from multiple IM nodes. The DTEIM engine  has obtained and combined existing identity management information from multiple IM nodes that this user is allowed to access prior to presenting that information.",{"@attributes":{"id":"p-0155","num":"0213"},"figref":["FIG. 36","FIG. 36","FIGS. 36A and 36B","FIG. 36A"],"b":["120","3600","120"]},"In particular for each IM node (e.g., IM node , IM node , . . . IM node N), the processing of blocks - () is performed in parallel. In block , the DTEIM engine  determines whether the IM node X (where X is any IM node, , , . . . N) is active. If so, processing continues to block , otherwise, processing continues to block . In block , the DTEIM engine  adds the IM node X down result. In certain embodiments, a down result indicates an \u201cIM node is down\/not reachable\u201d error message. From block , processing continues to block  ().","In block , the DTEIM engine  determines whether the IM node X credentials are available in the credentials cache. If so, processing continues to block , otherwise, processing continues to block . In block , the DTEIM engine  authenticates the credentials on the IM node X and stores the credentials in the credentials cache. From block , processing continues to block .","In block , the DTEIM engine  asynchronously issues a sub-query to the IM node X. From block  (), processing continues to block  ().","In block , the DTEIM engine  combines sub-query results asynchronously as IM nodes respond. In block , the DTEIM engine  returns a combined \u201cnode aware\u201d result set.",{"@attributes":{"id":"p-0160","num":"0218"},"figref":"FIG. 37","b":["120","3700","120","3702","120","120"]},"In block , the DTEIM engine  assembles the request data by node id into a node map. In block , the DTEIM engine issues parallel sub-requests. Further details of the processing of the request in parallel is described with reference to . In block , the DTEIM engine  returns the provisioning request status (e.g., completed, failed etc.) to the user.",{"@attributes":{"id":"p-0162","num":"0220"},"figref":["FIG. 38","FIG. 38","FIGS. 38A and 38B"],"b":["120","3800"]},"In particular for each IM node (e.g., IM node , IM node , . . . IM node N), the processing of blocks - () is performed in parallel. In block , the DTEIM engine  determines whether the IM node X (where X is any IM node, , , . . . N) is active. If so, processing continues to block , otherwise, processing continues to block . In block , the DTEIM engine  queues the sub-request for deferred submission to the IM node X. From block , processing continues to block  () showing deferred status for the sub-request.","In block , the DTEIM engine  determines whether the IM node X credentials are available in the credentials cache. If so, processing continues to block , otherwise, processing continues to block . In block , the DTEIM engine  authenticates the credentials on the IM node X and stores the credentials in the credentials cache. From block , processing continues to block .","In block , the DTEIM engine  asynchronously submits a sub-request to the IM node X. From block  (), processing continues to block  ().","In block , the DTEIM engine  combines the sub-request statuses to form a provisioning request status asynchronously as IM nodes respond. In block , the DTEIM engine  returns a combined \u201cnode aware\u201d status.",{"@attributes":{"id":"p-0167","num":"0225"},"figref":"FIG. 39","b":["120","3900","3902","120","3904","120","3906","120"]},{"@attributes":{"id":"p-0168","num":"0226"},"figref":"FIG. 40","b":["120","4000","4002","120","4004","120"]},{"@attributes":{"id":"p-0169","num":"0227"},"figref":"FIG. 41","b":["120","4100","4102","120","4104","120","4106","120"]},{"@attributes":{"id":"p-0170","num":"0228"},"figref":"FIG. 42","b":["120","4200","4202","120","4204","120","4206","120"]},{"@attributes":{"id":"p-0171","num":"0229"},"figref":"FIG. 43","b":["120","4300","4302","120","4304","120","4306","120"]},"Thus, the DTEIM architecture is may be used for very large identity management implementations. The DTEIM architecture makes identity management progressively scalable by deploying the identity management in a distributed topology. The DTEIM architecture increases availability by allowing staggered maintenance of the IM infrastructure, improves performance, supports heterogeneous versions of IMs and decentralizes administration. The decentralized model improves manageability and workload distribution.","The DTEIM architecture tracks system identities using distributed IM nodes. Each IM node can collaborate with the other IM nodes to enable configurations to the network architecture in a scalable\/distributed fashion.","The DTEIM architecture allows localized administration and centralized identity and account operations. The DTEIM architecture is able to provide one off provisioning for a subset of a population (e.g., an isolated lab).","With the DTEIM architecture, more IM nodes may be added as more services are rolled out. Since individual IMs process their own subset of services and reconciliations, performance bottlenecks are avoided.","As will be appreciated by one skilled in the art, aspects of the present invention may be embodied as a system, method or computer program product. Accordingly, aspects of the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.","Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, solid state memory, magnetic tape or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus, or device.","A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein, for example, in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms, including, but not limited to, electro-magnetic, optical, or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate, propagate, or transport a program for use by or in connection with an instruction execution system, apparatus, or device.","Program code embodied on a computer readable medium may be transmitted using any appropriate medium, including but not limited to wireless, wireline, optical fiber cable, RF, etc., or any suitable combination of the foregoing.","Computer program code for carrying out operations for aspects of the present invention may be written in any combination of one or more programming languages, including an object oriented programming language such as Java, Smalltalk, C++ or the like and conventional procedural programming languages, such as the \u201cC\u201d programming language or similar programming languages. The program code may execute entirely on the user's computer, partly on the user's computer, as a stand-alone software package, partly on the user's computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario, the remote computer may be connected to the user's computer through any type of network, including a local area network (LAN) or a wide area network (WAN), or the connection may be made to an external computer (for example, through the Internet using an Internet Service Provider).","Aspects of the embodiments of the invention are described below with reference to flowchart illustrations and\/or block diagrams of methods, apparatus (systems) and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and\/or block diagrams, and combinations of blocks in the flowchart illustrations and\/or block diagrams, can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","These computer program instructions may also be stored in a computer readable medium that can direct a computer, other programmable data processing apparatus, or other devices to function in a particular manner, such that the instructions stored in the computer readable medium produce an article of manufacture including instructions which implement the function\/act specified in the flowchart and\/or block diagram block or blocks.","The computer program instructions may also be loaded onto a computer, other programmable data processing apparatus, or other devices to cause a series of operational processing (e.g., operations or steps) to be performed on the computer, other programmable apparatus or other devices to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide processes for implementing the functions\/acts specified in the flowchart and\/or block diagram block or blocks.","The code implementing the described operations may further be implemented in hardware logic or circuitry (e.g., an integrated circuit chip, Programmable Gate Array (PGA), Application Specific Integrated Circuit (ASIC), etc. The hardware logic may be coupled to a processor to perform operations.","The DTEIM engine  may be implemented as hardware (e.g., hardware logic or circuitry), software, or a combination of hardware and software.",{"@attributes":{"id":"p-0186","num":"0244"},"figref":"FIG. 44","b":["4400","4400","4400","4402","4404","4420","4404","4404","4405","4406"]},"Input\/Output (I\/O) devices ,  (including but not limited to keyboards, displays, pointing devices, etc.) may be coupled to the system either directly or through intervening I\/O controllers .","Network adapters  may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems, cable modem and Ethernet cards are just a few of the currently available types of network adapters .","The computer architecture  may be coupled to storage  (e.g., a non-volatile storage area, such as magnetic disk drives, optical disk drives, a tape drive, etc.). The storage  may comprise an internal storage device or an attached or network accessible storage. Computer programs  in storage  may be loaded into the memory elements  and executed by a processor  in a manner known in the art.","The computer architecture  may include fewer components than illustrated, additional components not illustrated herein, or some combination of the components illustrated and additional components. The computer architecture  may comprise any computing device known in the art, such as a mainframe, server, personal computer, workstation, laptop, handheld computer, telephony device, network appliance, virtualization device, storage controller, etc.","The flowchart and block diagrams in the figures illustrate the architecture, functionality, and operation of possible implementations of systems, methods and computer program products according to various embodiments of the present invention. In this regard, each block in the flowchart or block diagrams may represent a module, segment, or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). It should also be noted that, in some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved. It will also be noted that each block of the block diagrams and\/or flowchart illustration, and combinations of blocks in the block diagrams and\/or flowchart illustration, can be implemented by special purpose hardware-based systems that perform the specified functions or acts, or combinations of special purpose hardware and computer instructions.","The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein, the singular forms \u201ca\u201d, \u201can\u201d and \u201cthe\u201d are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will be further understood that the terms \u201ccomprises\u201d and\/or \u201ccomprising,\u201d when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and\/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and\/or groups thereof.","The corresponding structures, materials, acts, and equivalents of all means or step plus function elements in the claims below are intended to include any structure, material, or act for performing the function in combination with other claimed elements as specifically claimed. The description of embodiments of the present invention has been presented for purposes of illustration and description, but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiments were chosen and described in order to best explain the principles of the invention and the practical application, and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.","The foregoing description of embodiments of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the embodiments to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the embodiments be limited not by this detailed description, but rather by the claims appended hereto. The above specification, examples and data provide a complete description of the manufacture and use of the composition of the embodiments. Since many embodiments may be made without departing from the spirit and scope of the invention, the embodiments reside in the claims hereinafter appended or any subsequently-filed claims, and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":["Referring now to the drawings in which like reference numbers represent corresponding parts throughout:",{"@attributes":{"id":"p-0011","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0022"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0019","num":"0023"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0020","num":"0024"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0021","num":"0025"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0022","num":"0026"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0023","num":"0027"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0024","num":"0028"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0025","num":"0029"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0026","num":"0030"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0027","num":"0031"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0028","num":"0032"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0029","num":"0033"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0030","num":"0034"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0031","num":"0035"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0032","num":"0036"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0033","num":"0037"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0034","num":"0038"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0035","num":"0039"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0036","num":"0040"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0037","num":"0041"},"figref":"FIGS. 27A, 27B, and 27C"},{"@attributes":{"id":"p-0038","num":"0042"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0039","num":"0043"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0040","num":"0044"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0041","num":"0045"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0042","num":"0046"},"figref":"FIG. 32"},{"@attributes":{"id":"p-0043","num":"0047"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0044","num":"0048"},"figref":"FIG. 34"},{"@attributes":{"id":"p-0045","num":"0049"},"figref":["FIG. 35","FIG. 35","FIGS. 35A and 35B"]},{"@attributes":{"id":"p-0046","num":"0050"},"figref":["FIG. 36","FIG. 36","FIGS. 36A and 36B"]},{"@attributes":{"id":"p-0047","num":"0051"},"figref":"FIG. 37"},{"@attributes":{"id":"p-0048","num":"0052"},"figref":["FIG. 38","FIG. 38","FIGS. 38A and 38B"]},{"@attributes":{"id":"p-0049","num":"0053"},"figref":"FIG. 39"},{"@attributes":{"id":"p-0050","num":"0054"},"figref":"FIG. 40"},{"@attributes":{"id":"p-0051","num":"0055"},"figref":"FIG. 41"},{"@attributes":{"id":"p-0052","num":"0056"},"figref":"FIG. 42"},{"@attributes":{"id":"p-0053","num":"0057"},"figref":"FIG. 43"},{"@attributes":{"id":"p-0054","num":"0058"},"figref":"FIG. 44"}]},"DETDESC":[{},{}]}
