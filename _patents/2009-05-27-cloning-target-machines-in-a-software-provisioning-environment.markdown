---
title: Cloning target machines in a software provisioning environment
abstract: The transferring of storage content is disclosed. The method may include providing an agent to a target machine in a network of target machines, where the agent is configured to copy storage contents of the target machine. The method may further include receiving the copied storage contents. The method may further include providing the agent to another target machine in the network of target machines, where the agent is configured to transfer the copied storage contents to the other target machine.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09250672&OS=09250672&RS=09250672
owner: Red Hat, Inc.
number: 09250672
owner_city: Raleigh
owner_country: US
publication_date: 20090527
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","DESCRIPTION OF THE RELATED ART","DETAILED DESCRIPTION OF EMBODIMENTS"],"p":["This invention relates generally to software provisioning.","Software provisioning is the process of selecting a target machine, such as a server, loading the appropriate software (operating system, device drivers, middleware, and applications), and customizing and configuring the system and the software to make it ready for operation. Software provisioning can entail a variety of tasks, such as creating or changing a boot image, specifying parameters, e.g. IP address, IP gateway, to find associated network and storage resources, and then starting the machine and its newly-loaded software. Typically, a system administrator will perform these tasks using various tools because of the complexity of these tasks. Unfortunately, there is a lack of provisioning control tools that can adequately integrate and automate these tasks.","In software provisioning, the administrator may desire to duplicate a machine in the network. For example, the original machine may be performing a process which the administrator desires to repeat or the original machine may be performing well and the administrator desires to recreate the properly functioning machine. The administrator, however, must rebuild the original machine and re-provision the software to the new machine.","For simplicity and illustrative purposes, the principles of the present invention are described by referring mainly to exemplary embodiments thereof. However, one of ordinary skill in the art would readily recognize that the same principles are equally applicable to, and can be implemented in, all types of information and systems, and that any such variations do not depart from the true spirit and scope of the present invention. Moreover, in the following detailed description, references are made to the accompanying figures, which illustrate specific embodiments. Electrical, mechanical, logical and structural changes may be made to the embodiments without departing from the spirit and scope of the present invention. The following detailed description is, therefore, not to be taken in a limiting sense and the scope of the present invention is defined by the appended claims and their equivalents.","Embodiments of the present teachings relate to systems and methods for cloning target machines in a software provisioning environment. More particularly, a provisioning server can utilize a cloner agent on target machines to copy the installation of one target machine to other target machines.","According to embodiments, a provisioning server can be configured to provide and to interact with a cloner agent on target machines. The cloner agent can be configured to execute on a source target machine and to copy the contents of storage on the source target machine to a storage location of the provisioning server. In particular, the cloner agent can be configured to copy the file system, partition by partition and\/or disk by disk, of the source target machine to the provisioning server, thereby creating an exact copy of the source target machine. Once copied, the provisioning server can be configured to provide the cloner agent to destination target machines. The cloner agent can be configured to copy the contents of the source target machine stored at the provisioning server to the destination target machines. In particular, the provisioning server can be configured to copy the file system, partition by partition and\/or disk by disk, stored at the provisioning server to the destination target machines in order create an exact copy of the source target machine on the destination target machines.","According to embodiments, to provide the cloner agent, the provisioning server can be configured to instruct a network management server to provide a command to a helper client on the target machines. The command can be configured to cause the helper client to retrieve the cloner agent from the provisioning server. Additionally, the provisioning server can be configured to instruct the helper client, directly. Likewise, the provisioning server can be configured to transmit the cloner agent to the target machines and to instruct the target machines to alter their power state (e.g. power cycle), if necessary, to provide and to initiate the cloner agent.","By utilizing the cloner agent, the provisioning server can create an exact copy of a target machine as it exists in the software provisioning environment. As such, the provisioning server can replicate a target machine without rebuilding the target machine and provisioning the software to new target machines. Additionally, because the replicated target machine is an exact copy in production, the provisioning server can create new target machines that are known to operate properly without having to reconfigure or update the new target machines.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 1","FIG. 1"],"b":["100","100"]},"In particular, the provisioning environment  can manage software provisioning using a hierarchy of commands. In exemplary embodiments, the hierarchy can include at least four levels of commands. The lowest level in the hierarchy can comprise distribution commands, which primarily handle base operating system specific tasks of provisioning. The second level can comprise profile commands, which associate a configuration file, such as a kickstart file for Linux or other operating system, with a distribution and optionally allow for customization. The third level comprises system commands, which associate remote systems that are involved with the provisioning of the software. The fourth level comprises repository commands, which address configurations and tasks related to updating the software, remote installation procedures, and optionally customizing the software.","The provisioning environment  provides several capabilities and advantages over the known provisioning solutions. For example, the present invention is capable of handling a variety of forms of installations, such as preboot execution environment (\u201cPXE\u201d), virtualization, re-installations, and image installations.","In exemplary aspects, the provisioning environment  enables integrating virtualization into a PXE provisioning infrastructure and provides several options to reinstall running machines as well. The provisioning environment  can integrate mirroring of package repositories with the provisioning process, so that a provisioning server may serve as a central mirror point of contact for all of an organization's software needs. In aspects, a set of remote mirrored repositories can automatically be used by provisioned systems without additional setup.","Reference will now be made in detail to the exemplary aspects the provisioning environment . The provisioning environment  can be applied to provisioning any form of software, such as Windows systems, UNIX systems, and Linux systems. In the exemplary description that follows,  is presented to explain the provisioning environment  for provisioning software, such as Linux, and Linux based software, such as Fedora and Red Hat Enterprise Linux by Red Hat, Inc.","In provisioning of software such as Linux, many system administrators use what is known as the \u201ckickstart\u201d installation method. Kickstart files are files that specify the intended configuration of the software being provisioned. Kickstart files can be kept on a server and can be read by individual computers during the installation. This installation method allows the use of a single or relatively few standard kickstart files to install Linux on multiple machines, making it ideal for network and system administrators.","The kickstart file can be a simple text file, containing a list of items, each identified by a keyword. In general, a kickstart file can be edited with any text editor or word processor that can save files as ASCII text. One skilled in the art will recognize that the present invention may be applied to non-kickstart files in software provisioning. For example, configuration files such as AutoYAST Answer files used in Novell SuSe Linux and Sun Solaris Jumpstart files may also be used by the provisioning environment .","Typically, a kickstart file can be copied to the boot disk, or made available on the network. The network-based approach is most commonly used, as most kickstart installations for software provisioning, such as Linux systems, tend to be performed via a network using NFS, FTP, or HTTP on networked computers. Administrators also find it desirable that kickstart installations can be performed using a local CD-ROM, or a local hard drive.","Using kickstart files, a system administrator can create a single file containing the parameters that are needed to complete a typical software installation. For example, kickstart files specify parameters related to: language selection; mouse configuration; keyboard selection; boot loader installation; disk partitioning; network configuration; NIS, LDAP, Kerberos, Hesiod, and Samba authentication; firewall configuration; and package selection.","According to exemplary aspects illustrated in , the provisioning environment  can include a provisioning server , a code repository  which provides access to distributions  and , a set of installation templates , a set of exception plugins , a helper client  running on target machines  in a network , a provisioning database  which comprises a distribution tree list  and template list . Each of these components will now be firmer described.","The provisioning server (from herein referred to as a \u201ccobbler\u201d)  is responsible for: serving as an extensible markup language remote procedure call (XMLRPC) handler; linking to or mirroring install distribution trees and a configuration database; hosting kickstart templates; hosting plugins; generating installation images, and the like. The cobbler server  can be implemented as software, such as Python code, installed on a boot server machine and provide a command line interface for configuration of the boot server. In addition, the cobbler server  can make itself available as a Python application programming interface (API) for use by higher level management software (not shown). The cobbler server  supports provisioning via PXE, image (ISO) installation, virtualization, re-provisioning. As will be described later, the last two modes are performed with the assistance of a helper client .","The code repository  is responsible for hosting distributions  and . The code repository  can be implemented using well known components of hardware and software. Additionally, the code repository  can include one or more repositories hosting distributions. The distributions  and  can include bundles of software that are already compiled and configured. The distributions  and  may be in the form of either rpm, deb, tgz, msi, exe formats, and the like. For example, as Linux distributions, the distributions  and  are bundles of software that comprise the Linux kernel, the non-kernel parts of the operating system, and assorted other software. The distributions  and  can take a variety of forms, from fully-featured desktop and server operating systems to minimal environments.","In exemplary aspects, the installation templates  are any data structure or processing element that can be combined with a set of installation configurations and processed to produce a resulting configuration file, such as a kickstart file.","In exemplary aspects, exception plugins  are software that interact with cobbler server  to customize the provisioning of software. In general, the exception plugins  are intended to address infrequent customization needs.","In exemplary aspects, the helper client (known as \u201ckoan\u201d, which stands for \u201ckickstart-over-a-network\u201d)  can assist the cobbler server  during the provisioning processes. The koan  can allow for both network provisioning of new virtualized guests and destructive provisioning of any existing system. When invoked, the koan  can request profile information from a remote boot server that has been configured with the cobbler server . In some aspects, what the koan  does with the profile data depends on whether it was invoked with\u2014virt or\u2014replace-self.","In exemplary aspects, the koan  can enable replacing running systems as well as installing virtualized profiles. The koan  can also be pushed out to systems automatically from the boot server. In some aspects, the koan client  is also written in Python code to accommodate a variety of operating systems, machine architectures, etc.","In exemplary aspects, the network  can include a number of the target machines . The target machines  can represent the particular machines to which software provisioning is directed. The target machines  can represent a wide variety of computing devices, such as personal computers, servers, laptop computers, personal mobile devices, and the like. In some aspects, the target machines  can represent distributed computing environments such as cloud computing environments. Although  shows several of the target machines , the provisioning environment  can be capable of managing a wide range environments, such as datacenters with thousands of machines or server pools with just a few machines. Additionally, the cobbler server  can be connected to multiple networks .","In exemplary aspects, the provisioning database  can serve as a data storage location for holding data used by the cobbler server . For example, as shown, the provisioning database  can comprise the distribution tree list  and the template list . The distribution tree list  can provide an inventory of the distributions  and  that are hosted or mirrored by the cobbler server . The template list  can provide an inventory of the templates  that are hosted by the cobbler server .","As noted above, the cobbler server  can manage provisioning using a hierarchical concept of distribution commands, profile commands, system commands, and repository commands. This framework enables the cobbler server  to abstract the differences between multiple provisioning types (installation, reinstallation, and virtualization) and allows installation of all three from a common platform. This hierarchy of commands also permits the cobbler server  to integrate software repositories  with the provisioning process, thus allowing systems to be configured as a mirror for software updates and third party content as well as distribution content.","Distributions can contain information about base operating system tasks, such as what kernel and initial ramdisk (\u201cinitrd\u201d) are used in the provisioning, along with other information, such as required kernel parameters. Profiles associate one of the distributions  and  with a kickstart file and optionally customize it further, for example, using plugins . System commands associate a hostname, IP, or (machine access control) MAC with a distribution and optionally customize the profile fiber. Repositories contain update information, such as yum mirror information that the cobbler server  uses to mirror repository . The cobbler server  can also manage (generate) dynamic host configuration protocol (DHCP) configuration files using the templates .","In exemplary aspects, the cobbler server  can use a provisioning environment that is fully templated, allowing for kickstarts and PXE files to be customized by the user. The cobbler server  uses the concept of \u201cprofiles\u201d as an intermediate step between the operating system and the installed system. A profile is a description of what a system does rather than the software to be installed. For instance, a profile might describe a virtual web server with X amount of RAM, Y amount of disk space, running a Linux distribution Z, and with an answer file W.","In exemplary aspects, the cobbler server  can provide a command line interface to configure a boot server in which it is installed. For example, the format of the cobbler server  commands can be generally in the format of: cobbler command [subcommand] [--arg1=] [--arg2=]. Thus, a user can specify various aspects of software provisioning via a single interface, such as a command line interface or other known interface. Examples of exemplary cobbler commands can be found in U.S. patent application Ser. No. 11\/763,315, U.S. Patent Application Publication No. 2008-0288938 and U.S. patent application Ser. No. 11\/763,333, U.S. Patent Publication No. 2008-0288939, all assigned to Red Hat Corporation, the disclosures of which are incorporated herein, in their entirety, by reference.","According to exemplary aspects, a user can use various commands of the provisioning environment  to specify distributions and install trees hosted by the code repository , such as a distribution from the distributions  or . A user can add or import a distribution or import it from installation media or an external network location.","According to exemplary aspects, in order to import a distribution, the cobbler server  can auto-add distributions and profiles from remote sources, whether this is an installation media (such as a DVD), an NFS path, or an rsync mirror. When importing an rsync mirror, the cobbler server  can try to detect the distribution type and automatically assign kickstarts. By default in some embodiments, the cobbler server can provision by erasing the hard drive, setting up eth0 for DHCP, and using a default password. If this is undesirable, an administrator may edit the kickstart files in \/etc\/cobbler to do something else or change the kickstart setting after the cobbler server  creates the profile.","According to exemplary aspects, a user may map profiles to the distributions and map systems to the profiles using profile commands and systems commands of the provisioning environment . A profile associates a distribution to additional specialized options, such as a kickstart automation file. In the cobbler server , profiles are the unit of provisioning and at least one profile exists for every distribution to be provisioned. A profile might represent, for instance, a web server or desktop configuration.","According to exemplary aspects, a user can map systems to profiles using system commands. System commands can assign a piece of hardware with cobbler server  to a profile. Systems can be defined by hostname, Internet Protocol (IP) address, or machine access control (MAC) address. When available, use of the MAC address to assign systems can be preferred.","According to exemplary aspects, the user can map repositories and profiles using repository commands. Repository commands can address configurations and tasks related to updating the software, remote installation procedures, and optionally customizing the software. These repository commands can also specify mirroring of the provisioned software to remote servers. Repository mirroring can allow the cobbler server  to mirror not only the trees  and , but also optional packages, third party content, and updates. Mirroring can be useful for faster, more up-to-date installations and faster updates, or providing software on restricted networks. The cobbler server  can also include other administrative features, such as allowing the user to view their provisioning configuration or information tracking the status of a requested software installation.","According to exemplary aspects, a user can utilize commands to create a provisioning infrastructure from a distribution mirror. Then a default PXE configuration is created, so that by default, systems will PXE boot into a fully automated install process for that distribution. The distribution mirror can be a network rsync mirror or a mounted DVD location.","According to exemplary aspects, the administrator uses a local kernel and initrd file (already downloaded), and shows how profiles would be created using two different kickstarts\u2014one for a web server configuration and one for a database server. Then, a machine can be assigned to each profile.","According to exemplary aspects, a repo mirror can be set up for two repositories, and create a profile that will auto install those repository configurations on provisioned systems using that profile.","According to exemplary aspects, in addition to normal provisioning, the cobbler server  can support yet another option, called \u201cenchant\u201d. Enchant takes a configuration that has already been defined and applies it to a remote system that might not have the remote helper program installed. Users can use this command to replace a server that is being repurposed, or when no PXE environment can be created. Thus, the enchant option allows the koan client  to be executed remotely from the cobbler server .","According to aspects, if the cobbler server  is configured to mirror certain repositories, the cobbler server  can then be used to associate profiles with those repositories. Systems installed under those profiles can be auto configured to use these repository mirrors in commands and, if supported, these repositories can be leveraged. This can be useful for a large install base, when fast installation and upgrades for systems are desired, or software not in a standard repository exists and provisioned systems desire to know about that repository.","According to exemplary aspects, the cobbler server  can also keep track of the status of kicks ting machines. For example, the \u201ccobbler status\u201d will show when the cobbler server  thinks a machine started kickstarting and when it last requested a file. This can be a desirable way to track machines that may have gone inactive during kickstarts. The cobbler server  can also make a special request in the post section of the kickstart to signal when a machine is finished kickstarting.","According to exemplary aspects, for certain commands, the cobbler server  will create new virtualized guests on a machine in accordance with orders from the cobbler server . Once finished, an administrator can use additional commands on the guest or other operations. The cobbler server  can automatically name domains based on their MAC addresses. For re-kickstarting, the cobbler server  can reprovision the system, deleting any current data and replacing it with the results of a network install.","According to exemplary aspects, the cobbler server  can configure boot methods for the provisioning requested by the user. For example, the cobbler server  can configure a PXE environment, such as a network card BIOS. Alternatively, the cobbler server  can compile and configure information for koan client . The cobbler server  can also optionally configure DHCP and DNS configuration information.","According to exemplary aspects, the cobbler server  can serve the request of the koan client . The koan client  can acknowledge the service of information of the cobbler server  and can then initiate installation of the software being provisioned. Additionally, the koan client  can either install the requested software, e.g., replace the existing operating system, or install a virtual machine.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 2","FIG. 2"],"b":["200","102","115","205","115","115","102"]},"As shown in , the network  can include a number of target machines , , and . For example, the target machines  can include a set of target machines such as a group of server computers, such as blade servers. The target machines  and  can include computing systems such as servers, personal computers, laptop computers, etc. Any of the target machines , , and , for example the target machines  and , can be connected to power management systems  to control the power supplied to the target machines , , and  and to alter the power state of one or more of the target machines , , and  (e.g. power cycle). The power management systems  can be any type of system to manage the power of the target machines, for example, Integrated Lights Out (ILO) by Hewlett Packard\u2122 Corporation, Dell\u2122 Remote Access Control (DRAC) by Dell Corporation, WTI powerbar by Western Telematics, Inc, and other power system supporting network communications. Additionally, each of the target machines , , and , for example the target machine , can be configured to include the koan client .","In embodiments, the target machines , , and  can include hardware typically found in conventional computing system (processors, memory, video cards, network interface cards, storage devices, and the like). Additionally, each of the target machines , , and  can be installed with different types of software (OS, application programs, and the like) to perform different functions. For example, the target machine  can include software that cause the target machines  to operate as a server computing system to provide services (application server, database server, etc) to other computing systems, and the target machine  can include software that causes the target machine  to operate as a user or client computer.","In embodiments, the administrator of the network  can desire to create an exact copy of one of the target machines , , and  on another target machine. For example, a particular target machine can be operating properly in the network  and providing a particular service to the network. The administrator may desire to create another target machine that offers the same service and operates in a manner similar to the particular target machine. Because the particular target machine is already operating properly in the network , the administrator can desire to exactly replicate the particular target machine. For instance, the software installed on the particular target machine may have been updated or configured over time to operate properly on the network .","In embodiments, the cobbler server  can be configured to replicate one or more of the target machines , , and . To achieve this, the cobbler server  can be configured to provide a cloner agent  to one of the target machines , , and  (source target machine) and to interact with the cloner agent  to copy contents of the computer readable storage devices or media of the source target machine. In particular, the cloner agent  can be configured to copy the file system, partition by partition and\/or disk by disk, of the source target machine to a storage space  on a computer readable storage device or medium  associated with the cobbler server . As such, the cloner agent  can create an exact copy of storage contents of the source target machine as it exists in the network . As such, the exact copy would represent a snap-shot of the installed software on the source target machine as it exists in the network .","In embodiments, to re-create one of the target machines , , and , the cobbler server  can be configured to provide the cloner agent  to one or more of the target machines , , and  (\u201cdestination target machines\u201d) and to interact with the cloner agent  to render an exact copy of the storage contents of the source target machine from the storage space  to the destination target machines. As such, the cobbler server  can create an exact copy of the source target machine on the destination target machines.","In embodiments, the cloner agent  can be configured to include the necessary logic, routines, instruction, and commands to boot the source target machine and to cooperate with the OS of the source target machine in order to copy the contents of the file system of the source target machine to the storage space . Likewise, the cloner agent  can be configured to include the necessary logic, routines, instruction, and commands to boot the destination target machine and to cooperate with the OS of the destination target machine in order to copy the contents of the storage space  to the destination target machine in order to create a copy of the source target machine. The cloner agent  can be, for example, a disk image, an ISO image, a software appliance (e.g. portions of an OS and applications), operating system image (OS kernal and\/or initrd), or any other type of tailored software application capable of executing on the target machines , , and .","In embodiments, the cobbler server  can initiate utilizing the cloner agent  upon the occurrence of any number of events. For example, the cobbler server  can replicate a source target machine on a destination target machine in order to increase the number of target machines providing the service of the source target machine. Additionally, a new target machine can be added to the network , and the cobbler server  can replicate the source target machine to the new target machine. Further, the cobbler server  can have previously replicated a source target machine and can maintain the exact copy of the source target machine in the storage space . Subsequently, the source target machine may experience an error (hardware failure, software failure, intruder attack, data corruption, etc.), and the cobbler server  can utilize the exact copy to restore the source target machine.","In embodiments, the cobbler server  can be configured to maintain the cloner agent  for access and utilization in cloning the target machines , , and . For example, the cobbler server  can be configured maintain the cloner agent  in a computer readable storage medium, for example computer readable storage medium , whether local to the cobbler server  or remotely located.","In embodiments, to clone the target machines , , and , the cobbler server  can be configured to utilize a variety of methods to provide the cloner agent  to the target machines , , and . For example, to provide the cloner agent , the cobbler server  can be configured to provide the cloner agent  utilizing the network management server  and the koan client . For example, the cobbler server  can be configured to instruct the network management server  to provide a command to the koan client  on the target machines . The command can be configured to cause the koan client  to retrieve the cloner agent  from the cobbler server  and initiate the cloner agent  on the target machines . Likewise, the cobbler server  can be configured to directly instruct the koan client  to retrieve the cloner agent  and to initiate the cloner agent .","In embodiments, the network management server  can be any type of network management application or tool to securely communicate with the target machines , , and , to monitor the state of the target machines , , and , to retrieve and request data from the target machines , , and , and to manage and direct the target machines , , and . For example, the network management server  can be a \u201cFUNC\u201d server as described in U.S. patent application Ser. No. 12\/130,424, filed May 30, 2008, entitled \u201cSYSTEMS AND METHODS FOR REMOTE MANAGEMENT OF NETWORKED SYSTEMS USING SECURE MODULAR PLATFORM\u201d (U.S. Patent Application Publication No. 2009-0300180) assigned to Red Hat Corporation, the disclosure of which is incorporated herein, in its entirety, by reference.","In embodiments, the cobbler server  can be configured to provide the cloner agent  to the target machines , , and , directly. For example, the cobbler server  can be configured to transmit the cloner agent  to the target machines  utilizing any type of network processes, for example, PXE.","In embodiments, in order to provide and\/or to execute the cloner agent , the cobbler server  can be configured to instruct the target machines  to alter their power state (e.g. power cycle), if necessary. For example, in order to provide the cloner agent , the target machines , , and  may need to be power cycled in order to initiate the network transfer of the cloner agent . Likewise, the cobbler server  can power cycle (power down\/power up) the target machines , , and  in order to initiate the cloner agent  or restart the target machines , ,  after the cloner agent  has completed copying. The cobbler server  can be configured to communicate with the power management system  of the target machines , , and  to alter the power state of the target machines , , and . To achieve this, the cobbler server  can be configured to include a power management module .","In embodiments, the power management module  can be configured to communicate with the power management systems  of the target machines , , and . The power management module  can be configured to instruct the power management systems  to alter the power state of the target machines , , and . The power management module  can be configured to generate a command or instruction. The instruction can include access information for the power management systems  and the power state alteration to be performed.","In embodiments, the power management module  can be configured to form the instruction in a protocol utilized by the particular power management systems . For example, the cobbler server  can be configured to utilize conventional or proprietary protocols or tools such as IPMI, DRAC, ILO, fence agents and the like. The power management module  can be configured to utilize a pre-determined protocol or utilize several protocols in order to determine the appropriate protocol. Once generated, the cobbler server  can be configured to transmit the instruction to the determined power management systems .","In embodiments, the power management module  can be implemented as a portion of the code for the cobbler server . Likewise, the power management module  can be implemented as a separate software tool accessible by the cobbler server . Additionally, the power management module  can be implemented as a portion of the code for the network management server . The power management module  can be written in a variety of programming languages, such as JAVA, C++, Python code, and the like to accommodate a variety of operating systems, machine architectures, etc. Additionally, the power management module  can be configured to include the appropriate application programming interfaces (APIs) to communicate with and cooperate with other components of the cobbler server .","In one example, the cobbler server  can initiate replicating the target machine  to the set of target machines . For instance, the target machine  can be operating as an application server and the administrator of the network  can desire to extend these services by adding additional application servers. To begin the replication, the cobbler server  can be configured to specify the location of the storage space  in the cloner agent . Then, the cobbler server  can provide the cloner agent  to the target machine . For example, the cobbler server  can transfer the cloner agent  by a network protocol, such as PXE. Likewise, the cobbler server  can utilize the network management server  and\/or a koan client to provide the cloner agent .","In this example, once the cloner agent  is transferred, the cobbler server  can instruct the power management system  to power cycle the target machine , again, to initiate the cloner agent . Likewise, the cobbler server  can instruct the network management server  and\/or the koan client  to power cycle the target machine . Once initiated, the cloner agent  can copy the contents of the storage devices and media of the target machine  to the storage space . For instance, the cloner agent  can copy the file system, partition by partition and\/or disk by disk, to the storage space . After copying is completed, the cobbler server  can remove the cloner agent , and the cobbler server  can, again, instruct the power management system  to power cycle the target machine  in order to place the target machine  back into normal operation.","In this example, the cobbler server  can then provide the cloner agent  to the set of target machines . For example, the cobbler server  can transfer the cloner agent  by a network protocol, such as PXE. Likewise, the cobbler server  can utilize the network management server  and\/or a koan client  to provide the cloner agent  to the set of target machines .","In this example, once the cloner agent  is transferred, the cobbler server  can instruct the power management system  to power cycle the set of target machines , again, to initiate the cloner agent . Likewise, the cobbler server  can instruct the network management server  and\/or the koan client  to power cycle the target machine . Once initiated, the cloner agent  can copy the contents of the storage space  to the storage devices and media of the set of target machines . For instance, the cloner agent  can copy the file system, partition by partition and\/or disk by disk, from the storage space  to the set of target machines . After copying is completed, the cobbler server  can remove the cloner agent  and the cobbler server  can, again, instruct the power management system  to power cycle the set of target machines  in order to start the set of target machines  as clones of the target machine .","In embodiments, the cobbler server  can be configured to maintain an inventory  of the target machines , , and  in the network . The inventory can include information that describes the target machines such as hardware, software provisioned, provisioning objects associated with the target machine, configurations, the power managements systems , etc. associated with data that uniquely identifies the target machines , ,  in the network  such as Media Access Control (\u201cMAC\u201d) address, Ethernet Hardware Address (\u201cEHA\u201d), and the like. When performing the cloning as described above, the cobbler server  can be configured to utilize the inventory to identify target machines , , and  and communicate with the target machines , , and . Likewise, once a target machine is cloned, the cobbler server  can be configured to update the inventory  to reflect the cloned target machines. The inventory  can be maintained in any location such as provisioning database  described in  and can be stored in a computer readable storage medium, such as computer readable storage medium .","In embodiments, the cobbler server  can be configured to maintain the copies of the storage content in the storage space  indefinitely. As such, the cobbler server  can clone target machines without having to copy the source target machines again. Likewise, the cobbler server  can be configured to associate the copies of the storage content in the storage space  with provisioning objects, such as profiles and templates. As such, the cobbler server  can perform cloning based on the provisioning objects.","In embodiments, the provisioning objects can include all the data required by the cobbler server  to perform the software provisioning processes, such as the process described above, supported by the cobbler server . For example, the provisioning objects can include software distributions; configuration templates (templates for generating configuration files, such as kickstart files); distribution profile information (mapping a distribution to profile; a configuration template or a configuration file, and additional preferences, such as kernel options, template variables, or virtual machine settings); target machine information (information representing the mapping of a physical piece of hardware, plus hardware specific customizations, to a profile that it should run); repos information (information representing external or internal software repositories stored on the cobbler server); images (such as distributions representing an undefined executable image (like \u201cmemtest\u201d); a virtual machine to be cloned, or an ISO file for use in installing a virtual machine); and the like.","In embodiments, once a source target machine is replicated to a destination target machine, the cobbler server  can configure the destination target machine as required to allow the destination target machine to function properly in the network . For example, the cobbler server  can perform any of the configuration operations described in , such as establishing network settings for the destination target machine.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 3","b":["300","115","102","215","300","302","304","308","308","302","240","300","300","240","300","102","240"]},"Processor  further communicates with network interface , such as an Ethernet or wireless data connection, which in turn communicates with one or more networks , such as the Internet or other public or private networks. Processor  also communicates with the computer readable storage medium , the cobbler server , and the network management server , to execute control logic and perform the cloning processes described above and below.","As illustrated, the cobbler server  can be implemented as a software application or program capable of being executed by a conventional computer platform. Likewise, the cobbler server  can also be implemented as a software module or program module capable of being incorporated in other software applications and programs. In either case, the cobbler server  can be implemented in any type of conventional proprietary or open-source computer language. When implemented as a software application or program code, the cloud management system  can be stored in a computer readable storage medium, such as the computer readable storage medium , accessible by the computing system .","As illustrated, the network management server  can be executed in the computing system . Likewise, the network management server  can be executed in a separate computing system including components similar to computing system . Accordingly, the computing system  can communicate with the network management server  via the network interface .",{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 4","b":["200","402","404","102","230","102","230","102","205","230"]},"In , the cobbler server  can initiate the cloner agent  on the source target machine. For example, the cobbler server  can instruct the power management system  to power cycle the source target machine to initiate the cloner agent , if necessary. Then, in , the cobbler server  can receive and store the content of the storage of the source target machine. For example, prior to providing the cloner agent , the cobbler server  can specify the storage location  in the cloner agent . The cloner agent  can copy the file system, partition by partition and\/or disk by disk, to the storage space .","In , the cobbler server  can alter the power state of the source target machine, if necessary. For example, the cobbler server  can, again, instruct the power management system  to power cycle the source target machine in order to place the source target machine back into normal operation.","In , the cobbler server  can provide the cloner agent  to destination target machines. For example, the cobbler server  can transfer the cloner agent  by a network protocol, such as PXE. Likewise, the cobbler server  can utilize the network management server  and\/or a koan client to provide the cloner agent .","In , the cobbler server  can initiate the cloner agent  on the destination target machines. For example, once the cloner agent  is transferred, the cobbler server  can instruct the power management system  to power cycle the set of destination target machines, again, to initiate the cloner agent , if necessary. Once initiated, the cloner agent  can copy the contents of the storage space  to the storage devices and media of the destination target machines. For instance, the cloner agent  can copy the file system, partition by partition and\/or disk by disk, from the storage space  to the destination target machines.","In , the cobbler server  can alter the power state of the destination target machines. For example, after copying is completed, the cobbler server  can, again, instruct the power management system  to power cycle the destination target machines in order to start the destination target machines as clones of the source target machines. In , the process can end, but the process can return to any point and repeat.","Certain embodiments may be performed as a computer application or program. The computer program may exist in a variety of forms both active and inactive. For example, the computer program can exist as software program(s) comprised of program instructions in source code, object code, executable code or other formats; firmware program(s); or hardware description language (HDL) files. Any of the above can be embodied on a computer readable medium, which include computer readable storage devices and media, and signals, in compressed or uncompressed form. Exemplary computer readable storage devices and media include conventional computer system RAM (random access memory), ROM (read-only memory), EPROM (erasable, programmable ROM), EEPROM (electrically erasable, programmable ROM), and magnetic or optical disks or tapes. Exemplary computer readable signals, whether modulated using a carrier or not, are signals that a computer system hosting or running the present invention can be configured to access, including signals downloaded through the Internet or other networks. Concrete examples of the foregoing include distribution of executable software program(s) of the computer program on a CD-ROM or via Internet download. In a sense, the Internet itself as an abstract entity, is a computer readable medium. The same is true of computer networks in general.","While the invention has been described with reference to the exemplary embodiments thereof those skilled in the art will be able to make various modifications to the described embodiments without departing from the true spirit and scope. The terms and descriptions used herein are set forth by way of illustration only and are not meant as limitations. In particular, although the method has been described by examples, the steps of the method may be performed in a different order than illustrated or simultaneously. Furthermore, to the extent that the terms \u201cincluding\u201d, \u201cincludes\u201d, \u201chaving\u201d, \u201chas\u201d, \u201cwith\u201d, or variants thereof are used in either the detailed description and the claims, such terms are intended to be inclusive in a manner similar to the term \u201ccomprising.\u201d As used herein, the term \u201cone or more of\u201d with respect to a listing of items such as, for example, A and B, means A alone, B alone, or A and B. Those skilled in the art will recognize that these and other variations are possible within the spirit and scope as defined in the following claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various features of the embodiments can be more fully appreciated, as the same become better understood with reference to the following detailed description of the embodiments when considered in connection with the accompanying figures, in which:",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
