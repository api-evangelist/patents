---
title: Method and apparatus for defining and distributing an animation
abstract: A method of customising an animation. A broadcast station renders first animated objects in response to locked graphic data and unlocked metadata. The metadata facilitates customisation, by including parameter interface information as well as actual parameter values, so that the first animation objects can be customised without reference to the locked graphic data. A distribution station receives signals from the broadcaster, and cumulatively renders second animated objects in response to second locked graphic data and second unlocked metadata, the latter of which is modified in response to distributor data. A television receives signals from the distributor, and cumulatively renders third animated objects in response to third locked graphic data and third unlocked metadata, which is modified in response to viewer data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07427988&OS=07427988&RS=07427988
owner: Autodesk Canada Co.
number: 07427988
owner_city: Montreal, Quebec
owner_country: CA
publication_date: 20020220
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","BEST MODE FOR CARRYING OUT THE INVENTION"],"p":["1. Field of the Invention","The present invention relates to generating animations for distribution, and in particular relates to customising animations distributed to multiple viewers.","2. Description of the Related Art","Animations are used widely in television broadcasting. For example, in an election broadcast, statistics can be presented in a way to enhance the communication of complex information to viewers. Such animations are usually generated digitally, relying on digital systems to render the information graphically, and often receiving new data from an on-line database. Several graphics can be sequenced in time in what is referred to as a rundown, and the corresponding animation sequences may be cued manually or automatically in a studio automation system.","The design of such animations is a complex and time intensive process. All the objects of an animation are defined as combinations of primitive geometric shapes, such as cubes, spheres and so on. Surface textures, text fonts, and three-dimensional views, are all coordinated by the graphic designer to create the best possible effect. Animations often comprise multiple moving objects, so as to provide a more exciting visual appearance. In order to achieve this, the designer must define the motion, as well as the appearance, of all moving objects contained in the animation. This can take considerable effort. As the capabilities of animation processing systems increase, the possibilities for detail and visual richness put additional pressure on the designer to make use of these facilities.","The financial cost of this design effort requires that animations, or their components, be re-used whenever possible. Known animation systems allow customisation by provision of an Application Programming Interface (API). Using the API, an animation can be modified by a computer program written to interface with a specific animation. The complexity of modifying an animation is minimised by the creation of such custom interfaces, thereby enabling journalists, TV program producers, and so on, to interact with and modify an animation through a simplified interface that can be presented on a conventional computer terminal.","The creation of such custom-written software also requires a lot of effort. Both levels of design require highly skilled personnel. The known animation design process is therefore split into two expensive procedures, and extra effort is often expended to overcome difficulties created by the fact that such complex design processes are often being carried out by different teams of people.","As a result of these considerations, custom animations are only used extensively in high budget television broadcasts. The possibility to further customise an animation in response to the differing requirements of cable distributors for a particular program, is overlooked, due to the fact that most such programs are distributed live, and, in any case, the complexity of customisation using known tools, puts this possibility beyond the reach of local cable television stations.","According to an aspect of the present invention there is provided an image data distribution system comprising a first station and a second station, in which an animation comprises first animated objects and second animated objects separate to said first animated objects, wherein said animation is defined by first data defining characteristics of said first animated objects and second data including modifiable parameters defining specified characteristics of said second animated objects, and said second station includes receiving means arranged to receive said first data and said second data from said first station, and processing means arranged to modify said modifiable parameters only, such that when said animation is displayed, said second animated objects display additional information.","In a preferred embodiment, the second data includes locked parameters, defining first characteristics of the second objects, accessible at a first level of user access only, and unlocked parameters defining the specified characteristics accessible at a second level of user access. Preferably, the locked parameters are accessible at a first level of user access, before the locked parameters are scrambled to prevent access at the second level of user access.","Preferably, the first animated objects are generated by execution of rendering instructions upon processing means located at said first station and said second animated objects are generated by execution of rendering instructions upon said processing means located at said second station.","A system for the broadcast of television programs is shown in . A broadcast station  transmits signals by satellite to several content distribution stations . Typically these receive the television signals from one or several broadcasters  and redistribute them on a local cable network to customer television sets  to . Each distributor customises the mix of programs available according to local requirements. Some distributors may provide self-made program material, but in general, a large quantity of program time will originate at a broadcaster such as the broadcast station . Furthermore, each individual viewer will have different personal interests, which cannot be fully satisfied by program content from either the broadcaster  or the local distributor , due to the fact that both these entities must provide program material that suites a wide range of tastes and interests.","The broadcaster  shown in , in practice includes many organisational entities, including those that may exist in geographically separate locations. The broadcast station may be a predominantly news-based content supplier. In news broadcasting, as well as many other kinds of broadcasting, graphics are very often used to enhance the display of factual information. In its simplest form, these include subtitles, but most broadcasters have facilities for generating complex animations, in which text, shapes, and entire virtual environments can be caused to change over time, either in a pre-determined way, or in response to real time information, such as information about a camera angle, or live data received during an election broadcast, for example. Increasingly, animations are considered an essential part of high quality broadcasting.","Animation design is typically the responsibility of the broadcaster . The broadcaster  includes organisational facilities for generating and broadcasting animations, and these are detailed in .","Animations are initially created in an animation design house . The animations are designed for a specific purpose, for example, the enhancement of a television news program, in which news information is additionally presented in the form of graphical animations. An animation design, also known as a graphic, once complete, can be transferred via the Internet  to a newsroom . Alternative modes of transfer for the animation include physical transfer via CDROM, and local area networks that include both the newsroom  and the animation design house .","The newsroom  updates the graphic with current news data, and supplies these to a TV studio , where this information is integrated within the context of a news program for broadcast via a broadcast transmitter . Journalists using personal computers  and  may supply news data to the newsroom , by a modem connection to an Internet service provider (ISP)  which provides connectivity to the Internet . Connection between the newsroom  and the TV Studio is also made over the Internet. A microwave link  facilitates transfer of live audio and video broadcast signals from the TV studio  to the broadcast transmitter .","Equipment present in the animation design house  shown in , is detailed in . Several animation editing workstations  to  are connected to a network . A server  is also connected to the network , and provides facilities for data storage and connection  to the Internet. A workstation  includes a monitor  and a processing system . A keyboard  and a graphics tablet  are connected to the processing system . A stylus  is used to provide graphical input to the processing system  via the graphics tablet . The processing system includes a CD-RW (compact disc read-write) drive . A CDROM  includes data structures defining instructions that, once installed upon the processing system , enable a user at the workstation  to create and modify animations. A CD-R (recordable compact disc)  may be recorded by the user once an animation has been created, and the disc  contains a data structure that defines the animation that has been designed.","Several users, at each of the different workstations, may collaborate upon the design of a single animation, or alternatively work on different animations. The server  may be used to hold animation data and or instructions centrally, or alternatively, data and or instructions may be stored locally at each workstation, depending upon the nature of each job, and the amount of data that needs to be stored. As an alternative to storing an animation on the CD-R disc , such information and or instructions may be transferred to their destination over the Internet, by the connection  with the server .","A summary of the typical workflow performed by the user of the workstation  shown in , is shown in . At step  the user switches on the processing system . At step  instructions for creating and or modifying an animation are installed if necessary. The instructions may be supplied on the CDROM disc , or downloaded by ftp (file transfer protocol) over the Internet . At step  an animation graphic file is created by the user, along with metadata which defines how the graphic file can be used. The metadata is stored as a separate file, referred to as a metafile. At step  the graphic file and the metafile are transmitted over the Internet to the newsroom . Alternatively, a CD-R  is created, containing a data structure representing these files, and the CD-R disc  is transmitted physically to the newsroom . At step  the user switches off the processing system .","A screenshot of the monitor  shown in , during creation of an animation, is shown in . The screen area includes a preview area  in which the user may interact graphically with the animation. In the example shown in this Figure, graphical components for a news summary are shown. The animation shown here is simple, for purposes of clarity. However, many complex three-dimensional objects may be created, whose characteristics change over the duration of a broadcast. For example, a virtual studio may be created, in which the view angle and zoom of a virtual camera are linked with those of the real camera in the studio .","The animation comprises three parts, assigned to broadcast, distribution and viewer respectively. The animation designer decides the characteristics of most of the animation, and leaves certain characteristics open, or unlocked, which are to be later modified by the broadcaster, distributor and viewer according to their particular needs. The design in  includes a broadcast region , taking up a large part of the bottom of the screen. A distributor region  occupies the upper left of the screen, and a viewer region  takes up the rest of the top part of the screen. The relative sizes of these regions may vary widely. For example, the distributor region  may be made larger in order to accommodate advertisements.","All these characteristics are defined largely by the animation designer, by the assembly of primitive objects such as cubes, spheres, text and other shapes. The characteristics have to be defined not only statically, but also over time, and in response to certain cues. The creation of such animations is a highly skilled and time-intensive process. The cost of generating an animation is high. A user interface  enables the artist who designs the graphic to set up, modify and control the various components of the animation.","The main components of the processing system  shown in , are detailed in . The processing system  is an Octane\u2122 produced by Silicon Graphics \u2122 Inc. It comprises two central processing units  and  operating in a symmetrical multi-processing (SMP) configuration. Each of these processors is a MIPS R12000 \u2122 manufactured by MIPS \u2122 Technologies Incorporated, of Mountain View, Calif. Each of the processors  and  has a secondary cache memory  and  that facilitate per-CPU storage of frequently used instructions and data. Each CPU  and  further includes separate primary instruction and data cache memory circuits on the processor chip, thereby providing an additional level of processing efficiency. A memory controller  provides the connection between the processors  and  and a rosin memory . The main memory  comprises two gigabytes of dynamic RAM.","The memory controller  facilitates connectivity between the aforementioned components of the processing system  and a high bandwidth non-blocking crossbar switch . The switch makes it possible to provide a direct high bandwidth connection between any of several attached components. These include a graphics card . The graphics card  receives instructions from the processors  and  to perform various types of graphical image rendering processing, resulting in animated images, and an editing interface for the animation, being rendered on the monitor .","A SCSI bridge  facilitates connection between the crossbar switch  and a DVD\/CD-RW drive . The DVD\/CD-RW drive is used to install instructions for the processing system  onto a hard disk drive . The DVD\/CD-RW drive  may also be used to create CD-R discs containing large quantities of instructions and or data. Instructions located on the hard disk drive  may be transferred into the main memory  for execution by the processors  and . An input output (I\/O) bridge  provides an interface to the graphics tablet  and the keyboard , through which the user interacts with the processing system . A second SCSI bridge  provides an interface with a network card , that provides a network connection between the processing system  and the network .","In alternative embodiments, the processing system  may be an Onyx2 \u2122, an Octane2 \u2122 or an 2 \u2122.","The contents of the main memory  shown in , as they would appear during step  in , are detailed in . An operating system  provides common system functionality for instructions executing on the processors  and . The operating system  is the Irix\u2122 operating system, available from Silicon Graphics Inc. Animation editing instructions  are required for generating an animation. First rendering instructions  are required to preview the results of editing operations carried out by the user, and also to render animated objects during broadcast. Second rendering instructions  and third rendering instructions  will be supplied to distributors , ,  and viewers  to  respectively, so that additional objects may be rendered in response to local requirements.","First metadata  defines first unlocked parameters for use by a broadcaster . Second metadata  defines second unlocked parameters for use by a distributor . Third metadata  defines third unlocked parameters for use by a viewer's television set . First graphic data  defines first locked parameters for use in a broadcast. Second graphic data  defines second locked parameters for use in distribution . Third graphic data  defines third locked parameters for use in a receiving apparatus . Graphic data , ,  includes data defining the animation in terms of its basic ingredients, including object primitives and their geometrical attributes, that are created by the animation artist working at the workstation . Metadata ,  and  defines characteristics that may be further modified after an animation has been designed. Other data , includes data required for the operating system , and other instructions , .","Creating an animation graphic and metadata, as performed at step  in , is detailed in . At step  the user defines objects, geometry and parameters for the animation. Such manipulations are performed using the user-interface shown in , in combination with operations of the keyboard  and or graphics tablet . Also at this step, the user defines whether an object or geometry is intended for broadcast, distribution or viewer rendering. At step  the user categorises parameters as being locked or unlocked. At step  the user sets the values for locked parameters.","Unlocked parameters for broadcast are stored in first metadata , unlocked parameters for distribution are stored in second metadata , and unlocked parameters for viewing are stored in third metadata . Locked parameters for broadcast are stored in first graphic data , locked parameters for distribution are stored in second graphic data , and locked parameters for viewing are stored in third graphic data . In an alternative embodiment second and third metadata and graphic data are designed separately and independently of first metadata and graphic data.","At step  the user sets values, including default values, for unlocked parameters. Also, the user defines a description for each of the unlocked parameters. At step  the finished graphic is previewed. At step , a question is asked as to whether to continue with animation design. If so, control is directed to step . Alternatively, this completes the steps performed during creation of an animation.","The steps of  are descriptive of the operations performed by an artist creating an animation. However, the order of these steps is not necessarily as shown, and in practice, the order is random, due to the nature of the graphical user interface , . Each of the described operations in these steps may be performed separately, in combination with, and in any order, with respect to any of the other described operations in this Figure. Steps  to  are intended to delineate operations which will require specific reference.","The transmission of graphic files and metafiles, shown at step  in , is illustrated in . Metadata , ,  is supplied as metafiles , ,  for inclusion on the CD-R disc . The metadata includes descriptions, default values, value fields and actual values of unlocked parameters, in accordance with operations performed at step  in .","Graphic data , ,  defines first characteristics of an animation. The first characteristics are complex, and require definition by a skilled animation designer working in the animation design house . The broadcast graphic data  may be combined  with broadcast rendering instructions  to generate an executable graphic file . Similarly, distribution graphic data  and viewer graphic data  may also be combined with respective rendering instructions  and  to generate executable graphic files  and  respectively. The executable graphic files  to  are stored on the CD-R disc . These data structures may also or alternatively be transmitted over a network , and or over the Internet .","Metadata  is stored in a metafile  in XML (extensible mark-up language). An example of a metafile is shown in  and continued in . Each line has a line number, which is provided for reference purposes only. At lines  and  the data format is defined. In the preferred embodiment, metadata is known alternatively as page data, and this is reflected in some of the contents of line . Lines  and  are a single XML statement defining the page name, or the identity of the metadata. Within this line is the text: graphicName=\u201cdave_scene\u201d. This refers to the name of the graphic data  contained within the graphic file . Line , therefore, contains an instantiation of the animation components defined in the broadcast graphic. Unlocked parameters in the broadcast metadata  may be adjusted in accordance with the requirements of a specific news story.","At line  a reference ID number is defined. This associates the following XML lines with a specific parameter link that is contained within the graphic data . In this way the locked parameters in the graphic data  may be combined with unlocked parameters in the metadata  to fully define the appearance and characteristics of the animation rendered by the broadcast station . Lines  to  complete the definition of a single unlocked parameter. The value is defined in the value field at line . The type of parameter and its default value are defined at line . The parameter's range is defined at lines  and , in this case, in the form of a maximum and minimum value for a floating point number. At line , the parameter's description is defined.","The contents of lines  to  are defined initially by the artist at the workstation , who is responsible for the detailed design of the graphic. The parameter's value, shown at line , may be subsequently changed by anyone who has access to the broadcast metafile . This is considered as providing a second level of user access to animation characteristics. The information provided in lines  to  provides subsequent users with enough information to sensibly select different values of the parameter, without necessarily having full and detailed knowledge of characteristics encoded in the graphic data . For example, the default value at line , provides a suitable alternative for the parameter's value at line , even when the user might have no idea what effect this value has on the appearance of the resulting animation. The designer of the graphic carefully chooses default values, so that subsequent users of the system can receive helpful information as to what kind of values are suitable for the value field at line . In this respect, the designer of the animation designs how its user interface operates, and can guide the method by which the animation is customised to the requirements of an individual news story.","A similar parameter definition is provided at lines  to . The broadcast metafile  continues in . A third parameter is defined at lines  to . In this case, the parameter is a string of characters. Again, a default value is provided. The range for a string of characters is partly defined in terms of its maximum length, as shown at line . At line , certain characters are defined as being invalid for the string. Lines  and  may be considered as defining a range of permissible characteristics for the parameter. A fourth parameter is defined at lines  to . In this case, the parameter is defined as having one of several pre-set values. These pre-set values are defined in lines  to . This type of parameter is known as an enumerated type, as indicated at line , along with a default value. The instantiation of graphic data is completed by the end-of-page tag at line .","Metadata typically consists of many dozens of such parameter definitions. Each definition provides the user with a means for accessing an unlocked characteristic of the resulting animation. Parameters that are defined in this way are known as unlocked parameters, whereas locked parameters are defined as part of the graphic data . Unlocked parameters are accessible at a second level of user access, whereas locked parameters are accessible only at a first level of user access.","The newsroom  shown in  is detailed in . Equipment in the newsroom includes three news editing workstations ,  and . These are connected to a network . A server  provides central file storage facilities, and also provides a connection  to the Internet . The first news editing workstation  includes a monitor , a processing system , a keyboard  and a mouse . A CDROM  contains instructions for editing metadata , which are installed on the processing system . The server comprises a CPU , input output circuitry , random access memory  and a redundant array of inexpensive disks (RAID) , upon which news data, including broadcast metafiles , can be centrally stored.","The workflow of a user situated at the first news editing work station  in  is summarised in . At step  metadata editing instructions are installed if necessary. Installation may be from the CDROM , or by download across the Internet. At step  the metadata editor instructions are started, and at step , the user edits the metadata.","A screenshot of the monitor  shown in  during editing of the broadcast metafile , is shown in . The editor instructions create a window  in which are defined fields for each parameter. The editing window  has a title . Each parameter has a description field and an editable value field . The title , description  and value  are each generated from data in the metafile . While editing a value field, the user may, with appropriate interactions with the graphical user interface, discover the default value recommended for an unlocked parameter by the designer of the animation, for example by right-clicking on the mouse  while the cursor is located over a parameter description. Where a pre-set value must be selected, the interface provides a drop-down menu, as indicated at , from which the user can select an appropriate value for the unlocked parameter.","Four parameters , ,  and  are shown in . These correspond to the four parameters defined in the XML data structure shown in . The user may set new values using the interface. The new parameter settings may be saved by activating a SAVE button . Another page of XML may be edited using a LOAD button , and the edit window  may be closed by activating an EXIT button .","The processing system , used in the news editing workstation  shown in , is detailed in . The processing system is a Power Mac G4 \u2122, available from Apple\u2122 Computer Inc. The central processing unit  is a G4, running at 533 MHz, details available from Motorola\u2122 Inc. The CPU  includes on chip primary instruction and data caches, and an off-chip secondary cache. The CPU  is connected to a main memory , in which arc stored data, and instructions that are executable on the CPU . A graphics card  receives graphics commands front the CPU  to render the window-based graphical user interface shown in . A SCSI input output (I\/O) interface  provides efficient communication with storage devices  and . These storage devices are a CDROM drive  and a nine gigabyte hard disk drive . A network interface  provides the connection to the newsroom Ethernet network . A Universal Serial Bus (USB) port  provides connections to the keyboard  and the mouse .","In an alternative embodiment the processing system  is a personal computer (PC) having an Intel Pentium\u2122 processor.","The main memory  shown in , is detailed in . A Mac OS9\u2122 operating system  provides common application processing functions, including interfacing instructions for the USB port , the network interface , and other peripherals. Metadata editing instructions  include instructions for the editing interface shown in . Other application instructions  include other applications and resident utilities such as those commonly provided in a processing system of this kind. Metadata  is a modified version of the XML file  detailed in . Other data  includes data required for the correct operation of the instructions ,  and .","The step of editing metadata, shown at  in , is detailed in . At step  the user selects a metafile for loading. At step  the metafile  is loaded, via the network , from the RAID  in the server . At step  the metafile is parsed, and a user interface, as shown in , is constructed for the unlocked parameters. Steps  to  represent actions performed by the user while editing using the interface. At step  the user selects a parameter, for example, by clicking on its value . At step  the user enters a new value for the selected parameter, either by typing one in, selecting the default, or by dragging with the mouse  through a list of pre-set values . At step , the value field , ,  or  is updated in the metadata. At step  a question is asked as to whether the user wishes to edit another unlocked parameter. If so, control is directed to step . Alternatively, control is directed to step , where the modified metadata is saved as a new metafile  in response to the user activating the SAVE button .","Newsroom activities are summarised in . Several news stories are being edited for a news program. The broadcast metafile  is being used for just one such story. It is loaded from the server's RAID  across the network to the first workstation's memory . There it is modified in accordance with a particular series of facts that are to be displayed as part of an animated graphic for the news program. Several other stories are provided with graphics in this way. The same graphic data  may be instantiated several times over several days, as a particular news story develops, but with slight variations each time it is put on air. Other news stories evolve similarly. Different metafiles and possibly different graphic data are used for these. However, the newsroom only needs access to the metafiles, as these contain the unlocked data that is to be modified by an editor or journalist. The main memories  and  of other computers also contain metafiles, which are loaded and saved to and from the server's RAID . In this way, the newsroom quickly and efficiently maintains an up-to-date sequence of news stories, and their animations, by simple editing using an interface of the type shown in .","A metafile  is typically several kilobytes in size. This size of file is suitable for easy transfer over the Internet, and so remotely connected computers  and  can be used to edit metadata for a news story. In addition to writing an article, a journalist can also transfer a modified metafile back to the newsroom server , where other aspects of the story can be updated by a news editor, or left unchanged. Graphic data , by contrast, is extremely large, and typically is many megabytes in size. Furthermore, the graphic data can only be modified with the aid of a powerful image processing workstation of the type shown in , and requires a different set of operator skills to do so.","The metadata  is encoded in such a way as to enable easy construction of a simple user interface, within which a user may modify values, or have value information supplied to them, in the form of default parameter values. By linking the unlocked parameter values with parameter characteristics, in the same file, a user is provided not only with parameter access, but also with information about parameters, such as their description, ranges and default values. The use of the XML open format, ensures that simple editing instructions can be created easily for a variety of processing environments. For example, an editor can be encoded as an ActiveX\u2122 object for a Windows\u2122 operating system.","The designer of the animation can determine what level of customisation the end user has access to. By selecting which parameters are locked, or left unlocked, the designer can ensure that end users are able to control as much of the animation as is appropriate to their needs, and not more. By restricting the interface in this way, the process of setting up an animation for a specific TV broadcast becomes greatly simplified. The editor, journalist or program maker, can concentrate on relevant characteristics, rather than being confronted with an enormous amount of information that is irrelevant for the finalisation of a television program.","Once metadata  has been generated for a news story, it is supplied to the television studio  for use in a broadcast. The television studio  shown in  is illustrated in . A graphical rendering system comprises a processing system , a monitor , a broadcast monitor , a keyboard  and a mouse . The processing system  receives signals from a video camera . A newsreader  is located at a desk  in front of a blue screen backdrop . The processing system  substitutes blue portions of the camera image with an artificial background. Background or foreground portions of the camera's image may be substituted for digitally generated image contents from an animation. During the news broadcast, an operator manually provides cues to the processing system  via the keyboard , in order to trigger the start of each new animation sequence as it is required for its associated news story. Alternatively, automatic cues may be provided via a studio network. Instructions for rendering an animation are loaded from the CD-R disc . The broadcast metafile  on this disk is not usually used. The broadcast metafile  is received instead, from the newsroom . Distribution and viewer metafiles  and  are loaded from the CD-R disc .","In an alternative embodiment, the blue portions of the camera image may be substituted with an artificial background using broadcast keyer equipment rather than the processing equipment .","The workflow associated with an operator of the processing system  shown in  is detailed in . At step  the user switches on the system prior to broadcast. At step  the executable graphic file  is installed, either from the CD-R disc  or from the Internet. A metafile  for each news item is loaded from the newsroom  via the Internet . Other executable graphic files  and , and respective metafiles  and  are loaded, so that these may be transmitted as data to distributors ,  and  at step . At step  the executable graphic file  is executed, the operator supplies cue signals for each animation, and the broadcast proceeds.","Throughout the news program, the processing system  generates digital animated images that are combined with signals from the camera . Most of the time, the only part of the camera image that is retained is that of the image of the newsreader herself. The monitor , shown in , can provide a user interface for selecting cue points throughout the program, while the broadcast monitor shows the resulting image as the broadcast proceeds.","Screenshots of several sections of the news program are shown in . In  the main view of the program is shown, including the newsreader  located centrally, with several graphical components  to  superimposed upon the camera image. The blue screen background  has been replaced by a more aesthetically pleasing background . Several of the graphical components  and  are animated, and change their appearance dynamically. Distributor region  contains default objects, and the same is also true of the viewer region . The default objects are created so the broadcaster has some idea as to how the program will look when it eventually gets displayed on a viewer's television set .","A typical animation from an election news item is shown in , in which two animated three-dimensional graphs are rendered, against a backdrop of other graphical data. The switch to this scene requires that the digitally generated animated portions of the scene are switched at exactly the same time as the video source. This simultaneous switching is performed by setting a cue point that is triggered automatically, rather than by manual user operation of the keyboard . An automatic trigger can be supplied via a studio automation communications protocol that uses an Ethernet network to synchronise and communicate between the several hardware components of a television studio. For example, the producer can initiate a crossfade between video sources, and have this result in a command to crossfade simultaneously between graphic animations generated by the processing system . A suitable protocol for this type of operation is the Media Object Server (MOS) protocol. Similar synchronisation is performed between rendering performed by the broadcaster  and rendering performed by a distributor  and a receiver . For example,  includes only broadcast regions. There is no separate distribution region or viewer region. A sudden switch to this presentation is provided by synchronisation throughout the animation chain.","In , the animation resulting from the metafile  shown in  is illustrated. This includes a pie chart , with a name  and labels  and  for each portion. Here it will be noticed that many design details have been predetermined by the originator of the graphic data, such as the size and colour and overall appearance of the pie chart .","The unlocked parameters that were provided in the metadata  for editing, are only those that are minimally required for the construction of a news item. This minimises the complexity of generating an animation for a news story\u2014the same basic design can be reused whenever required. If, for example, the producer requires some inaccessible characteristic to be changed, this requirement is passed on to the animation design house , and new graphic data and executable graphic file  are produced.","The processing system  shown in  is a Silicon Graphics Onyx2\u2122 processing system, details of this system are available from http:\/\/www.sgi.com. The components of the processing system  are detailed in . The processing system contains eight main processing modules. Each module comprises four processors , ,  and . Each processor is a MIPS\u2122 R12000\u2122 sixty-four bit processor. Each processor has an on-chip primary instruction and data cache, as well as a larger separate secondary cache circuit . Each processing module includes one gigabyte of main memory  and a switch .","The four processors , ,  and  are connected together in a symmetric multi-processing (SMP) array, and have equal access to the local memory . The main memories on each of the processing modules are connected to each other via the switches , . All the memory circuits of the modules are combined into a unified addressable space. However, when a processor requires access to an address in memory that is not local, this increases memory access time. This is known as a Non-Uniform Memory Architecture (NUMA). An operating system running on this type of architecture takes account of this non-uniformity of access times and has a process scheduling algorithm that seeks to localise memory access for a running process (or thread) within the same or nearby processing modules.","A total of thirty-two processors is provided in the processing system , and this provides sufficient processing power to render animations of considerable complexity, and to a high level of quality. The availability of this level of processing also ensures that animations will be rendered in real time. Complex designs can be created on processing systems of lower processing capacity, such as the processing system  shown in . However, in order to guarantee real time rendering, a more powerful processing system is typically used when generating animations for live broadcast.","In addition to the processing modules, the processing system  also includes a storage module , a graphics module  and an input output module . The storage module  includes a redundant array of inexpensive disks  and a CDROM drive . These are connected to a switch  via a SCSI interface . The graphics module  includes several graphics processing circuits and a switch . The graphics module supplies output video signals to the monitor , the broadcast preview monitor , and in digital form to the broadcast mixing and production stage of the television studio . The graphics module  also receives video signals from the camera , which are combined with animation data to generate the broadcast video signals. The input output module  facilitates Ethernet, mouse and keyboard connections. It also is able to receive serial data from the camera , defining camera pan, lens zoom and focus, and so on, for synchronising camera position and characteristics with possible virtual views created as part of an interactive animation, thereby providing a virtual studio. A virtual studio of this type is considered to be generated as a result of rendering an animation with the appropriate interactive characteristics. The input output module  includes a switch , to provide integration with the rest of the modules in the processing system .","In alternative embodiments other processing systems are used which have fewer processors than processing system . For example, in one embodiment a processing system is used which has four processors. However, the larger processing power of system  has benefits when dealing with the large amounts of data involved, at high speeds.","The contents of the main memory of the processing system shown in  are detailed in . An Irix\u2122 operating system  provides common operating system utilities and scheduling for processes. First animation rendering instructions  perform rendering of broadcast graphic data  in real time. First Graphic data  includes locked parameters  in binary format. First metadata  includes unlocked parameters  in ASCII format. The unlocked parameters are also stored in binary equivalent form at . The second executable graphic file , third executable graphic file , second metadata  and third metadata  are stated for transmission along with the broadcast. Ar  several video frame buffers are provided to ensure efficient pipelining of rendering operations so as to exploit the full potential of the processing capacity of the processing system . Other data includes state data used by the instructions  and . The rendering instructions  and first graphic data  are separated out from the first executable graphic file  by the process of executing the graphic file .","The step  of running an executable graphic file shown in , is detailed in . At step  data structures for each of several finished graphics in a broadcast are instantiated. As stated previously, each metafile has a line  which effectively instantiates a graphic with particular modifiable attributes as defined by the unlocked parameters in the metafile . At step  the next rundown is initialised before it is required, and begins waiting for its cue. As mentioned earlier, a rundown is defined by a sequence of graphics, and in the present embodiment, the rundown data also includes the identity of which metafile is to be referenced when rendering each graphic. At step  a question is asked as to whether the cue has been received. If not, this question is asked again. Eventually, once the cue has been received, control is directed to step . A cue may be in the form of a manual user operation, for example pressing a key on the keyboard , or remotely or automatically triggered using the MOS commands over the studio's Ethernet network. At step  the next animation in the sequence is rendered. At step  a question is asked as to whether the rundown is complete. If not, control is directed to step , and the next cue is awaited. When waiting for the next cue, it is likely that rendering will continue, perhaps indefinitely, until the next cue is received. At step , when the current rundown is found to be completed, a question is asked at step  as to whether there is another rundown in the current program sequence. If so, control is directed to step . Alternatively this completes the steps performed when running the executable graphic file .","The step of instantiating data structures  shown in , is detailed in . At step  a first metafile is selected. Steps  to  then analyse the selected metafile. At step  the ASCII encoded XML is parsed to identify the next parameter object. At step  the object is instantiated as binary data, for example, by assigning a binary numerical value to an unlocked parameter. Step  results in the translation of ASCII formatted unlocked parameters  into their binary equivalents , so that they can be directly accessed during the procedures used when rendering animated graphical components for broadcast. At step  a question is asked as to whether there is any more XML left to parse in the current metafile. If so, control is directed to step , where the next parameter object is selected. Alternatively control is directed to step , where a question is asked as to whether another metafile is available for the current sequence of graphics that are to be rendered during the broadcast. If so, control is directed to step . Alternatively, this completes the sequence of steps required for instantiating data structures for each graphic.","The distributor  shown in  is detailed in . A satellite receiving antenna  receives broadcast signals from the broadcaster  and supplies these to a receiver . The receiver  demodulates the received broadcast signal and generates a high bandwidth stream of data containing images, cues, metafiles and executable graphic files. For example, during the relevant period of the broadcast, this data stream contains image data comprising animation objects which were defined by executable graphic file  with reference to new metafile  containing modified parameters; and executable graphic files  and  and respective metafiles  and . These are supplied as a stream to a distribution processor . Two workstations  and  are connected to the distribution processor  via an Ethernet network . The distribution processor supplies video signals to a distribution monitor , and digitised content signals to a cable transmitter . The cable transmitter encodes, amplifies and transmits the content signals to cable customers via a cable network connection .","The distribution processor  shown in  is detailed in . A satellite decoder  receives the stream of digital data from the receiver , and separates out the various types of data that are contained within it. Processing is provided by a pair of Intel Pentium\u2122 III processors  and , both running at 1 GHz, and configured to perform symmetric multi processing (SMP). A main memory  stores instructions and data required for distribution processing. A SCSI input output interface  facilitates connections to a CDROM drive  and a hard disk drive . A network interface  provides a connection to the network  shown in . A graphics processor  receives broadcast image data directly from the satellite decoder . The graphics processor is also able to receive rendering commands from the two processors  and . The graphics processor combines the broadcast image data with cumulatively rendered animation objects, and supplies resulting images to the monitor  via an analogue connection . For example, when second animated objects defined by executable graphic file  and metadata  are rendered, these are combined with the broadcast image data which includes the animation objects defined by executable graphic file  and metafile . A stream of high bandwidth data, including the modified image data, an executable graphic file, such as , and metadata for use by a viewer, such as metafile , is supplied to the cable transmitter  via a connection  from the graphics processor . In addition to performing rendering, the graphics processor receives additional data from the processors  and  and encodes these along with the newly generated image data, as part of the stream that is sent to the cable transmitter .","The distribution processor's main memory , shown in , is detailed in . At  a Linux\u2122 operating system provides common system functionality. At , second animation rendering instructions are provided for cumulative rendering of the distribution part of the overall animation. Distributor data  defines characteristics unique to the distributor , including data such as a two-dimensional graphical logo for the distributor, and also data for advertisements.","Second graphic data  includes locked parameters  in binary format. Second metadata  includes unlocked parameters  in ASCII format. The unlocked parameters are also stored in binary equivalent form at . The third executable graphic file  and third metadata  are stored for inclusion with the cable transmission. Other data  includes state data used by the instructions  and . The rendering instructions  and second graphic data  are separated out from the executable graphic file , received from the broadcaster , by the process of executing the executable graphic file .","Operations of the distribution processor  shown in  are detailed in . At step  a question is asked as to whether a new television program broadcast has begun. If not, control is directed to step . Alternatively, control is directed to step  where second and third executable graphic files  and  and their associated metafiles  and  are received and loaded into main memory . This results in the data structure shown in . The operating system  is configured to perform automatic loading of new executable instructions whenever they are provided from the satellite decoder . Loading of the second executable graphic file , results in separation of its contents into the second animation rendering instructions  and the second graphic data  as shown in . The third executable graphic file  remains intact and is passed on for transmission to viewers  at step . Also at step , the third metadata  is transmitted to viewers as part of the distribution data stream transmitted over the cable network.","At step  data structures for received second metadata  are instantiated. At step  the next rundown is initialised before it is required, and begins waiting for its cue. At step  a question is asked as to whether the cue has been received. If not, this question is asked again. Eventually, once the cue has been received, control is directed to step . A cue is in the form of a synchronisation cue transmitted as part of the broadcast data stream and received by the satellite receiver , and separated out and identified as a cue by the satellite decoder . At step  the animation is rendered. At step  a question is asked as to whether the rundown has ended. If not, control is directed to step , and the next cue is awaited. When waiting for the next cue, rendering continues until the next cue is received. If the current rundown has ended, control is directed to step , and the steps for distribution processing are repeated.","The step  of instantiating data structures for received second metadata shown in , is detailed in . It is possible that several metafiles containing second metadata  have been received, and each of these is analysed in turn. At step  a received metafile is selected. Steps  to  then analyse the selected metafile. At step  the ASCII encoded XML is parsed to identify the next parameter object. At step  the object is assigned an associated distribution-specific data item, if appropriate. The distribution specific data item is located in the distributor data , and for example may consist of a pointer to a graphical logo for the distributor.","At step  the parameter object is instantiated as binary data, for example, by assigning a binary address value for the graphical logo. Step  results in the translation of ASCII default unlocked parameters  into specific non-default equivalents . These are then directly accessed during the procedures for cumulative rendering of animated graphical components for distribution. At step  a question is asked as to whether there is any more XML left to parse in the current metafile. If so, control is directed to step , where the next parameter object is selected. Alternatively control is directed to step , where a question is asked as to whether another metafile is available for the current sequence of rundowns that are to be rendered during distribution of the broadcast. If so, control is directed to step . Alternatively, this completes the sequence of steps required for instantiating data structures for distribution processing.","An image resulting from distribution processing is shown in , as it would appear on the distributor monitor . The distributor region  in the top left now includes the distributor's own logo, which may be animated. This part of the screen is different for each distributor ,  and . The viewer region  is still at a default setting. The animation designer can provide each distributor with the same set of animated objects, which can then be customised by modification of second metadata , without the need to access the more complex graphic data . For example, a distributor logo can be texture mapped to an animated rotating surface. Furthermore, it will be highly advantageous to the owner of the copyright of the animation design components if these cannot be directly accessed by the broadcaster, , a distributor , , , or a viewer  to . Animations can be customised according to the needs of the broadcaster , or a distributor , without the need to provide them will full access to the graphic data. Distribution of the graphic data as part of an executable graphic file  prevents the distributor from being able to directly modify the graphic data. Graphic data in binary format  is scrambled to ensure that the effort required to gain access to the contents would be greater than the cost of obtaining legitimate access.","The final stage in the transmission chain, is the transmission of distributed program contents over a cable network to receivers  to . The major components of a receiving set  are detailed in . A cable connection is made to a decoder , which demodulates and decodes signals from the distributor . The decoder  supplies resulting image signals directly to a graphics processor , which also performs audio processing. The decoder also supplies data signals to a central processing unit . The central processing unit (CPU) is an ARM10\u2122 processor, available from ARM Limited of Cambridge, England. Technical details of this processor are available at http:\/\/www.arm.com. A main memory  stores dynamically held instructions and data, and comprises thirty-two megabytes of dynamic RAM. A flash memory  provides thirty-two megabytes of non-volatile data and instruction storage. A display and loudspeakers  receive control signals from the CPU  and digital streams of images and audio data from the graphics and audio processor , and renders these as images and sounds on a cathode ray tube and loudspeakers. A remote control and data input interface circuit  receives remote control signals and user input signals from other forms of input device, possibly including a remote keyboard for alphanumeric input. A modem  provides a connection, possibly via the cable distributor , to the Internet, so as to enable Internet browsing and also email communications.","In the present embodiment the receivers such as receiver  are television sets, but in other embodiments the television receivers may be other suitable apparatus, such as personal computers having an appropriate video card for receiving broadcast digital television signals, or television sets used in co-operation with a \u201cset top box\u201d for receiving broadcast digital television signals.","The receiver processor's main memory , shown in , is detailed in . At  an embedded Linux\u2122 operating system provides common operating system functionality. Third animation rendering instructions  facilitate cumulative rendering of the viewer's part of the overall animation. Viewer data  defines animation characteristics unique to the viewer , including data such as the score of a football match that the viewer has expressed an interest in.","Third graphic data  includes locked parameters  in binary format. Third metadata  includes unlocked parameters  in ASCII format. The unlocked parameters are also stored in binary equivalent form at . Other data includes state data used by the instructions  and . The rendering instructions  and third graphic data  are separated from the executable graphic file , received from the distributor , by the process of executing the executable graphic file .","Operations of the receiver processor  shown in  are detailed in . At step  a question is asked as to whether a new metafile or executable graphic file has been received from the distributor . If not, control is directed to step . Alternatively, control is directed to step  where metadata  and or an executable graphic file  are received and loaded into main memory . This results in the data structure shown in . The operating system  is configured to perform automatic loading of new executable instructions  whenever they are provided from the cable decoder . Loading of the third executable graphic file , results in separation of its contents into the third animation rendering instructions  and the third graphic data  as shown in .","At step  data structures for received third metadata  are instantiated. At step  the viewer components of the animation are rendered. At step  user metadata structures are updated from live data sources, such as email or sports scores via the Internet, before the process returns to step .","The step  of instantiating data structures for received third metadata shown in , is detailed in . At step  the ASCII encoded XML is parsed to identify the next parameter object. At step  the object is assigned an associated viewer-specific data item, if appropriate. The viewer-specific data item is located in the viewer data , and for example may consist of a pointer to information about a sports score.","At step  the parameter object is instantiated as binary data, for example, by assigning a binary address value for pointer to the sports score. Step  results in the translation of ASCII default unlocked parameters  into specific non-default equivalents . These are then directly accessed during the procedures for cumulative rendering of animated graphical components for the viewer's receiver . At step  a question is asked as to whether there is any more XML left to parse in the current metafile. If so, control is directed to step , where the next parameter object is selected. Alternatively, this completes the sequence of steps required for instantiating data structures for receiver processing.","The step  of updating user metadata from live data sources, shown in , is detailed in . At step  a question is asked as to whether there is any new data available. If not, no action is taken. Alternatively, control is directed to step . At step  the first new or changed data item is selected. At step  the new or changed data is formatted so that it can be referenced by an XML-derived parameter object. At step  a question is asked as to whether there is another new or changed data item that requires updating. If so, control is directed to step . Alternatively, this completes the new user data processing. Steps  to  are used to dynamically update changing information that is specific to a user. For example, a user may wish to keep track of changing scores in a football match. A link to an Internet site via the modem  provides new data whenever the score changes. Steps  to  ensure that any references to such user specific data, that are intended for cumulative rendering as part of the overall animation, result in immediate update on the screen of the viewer's television set.","An image shown on the viewer's television set  is detailed in . At  the viewer region of the animation contains viewer-specific animated objects. In this case these are two-dimensional text objects showing the score of a football match. However, the objects could be much more complex, including objects for a three-dimensional virtual world.","The embodiment provides a method of defining and rendering an animation in cumulative stages. This is summarised in . At a first stage , a broadcaster  renders a complex set of animated objects from first graphic data  and first metadata . The graphic data is locked, but the broadcaster can easily make changes to the metadata  so as to enable swift and easy customisation of a graphic for use during a news broadcast. The broadcaster  generates a mix of animated and camera images, and transmits these as originating data in a broadcast signal.","At the second stage , a distributor  cumulatively renders additional animated objects as part of the overall animation, and generates these from second graphic data  and second metadata . The graphic data  is locked, but the distributor can modify the metadata  prior to rendering and thereby customise the second rendered animated objects of the graphic. The result of this second stage is an intermediate image stream, called distributor data. Finally, at a third stage , a viewer's receiving apparatus , cumulatively renders more animated objects as part of the overall animation. This part of the animation is defined by third graphic data  and third metadata , and results in the creation of viewer data. The viewer's receiving apparatus can modify the metadata  prior to rendering, and thereby customise the third rendered animated objects of the graphic.","At each of the three stages , , , the graphic data may be encoded as part of a binary executable file, thus facilitating scrambling of valuable copyrighted animation objects, while still providing the facility for modifications to be made to the animation either automatically or interactively, using an XML-generated interface as shown in . Typically, distributor and viewer customisation will be automated. However, the use of the XML open standard ensures that any level of customisation, at any of the three stages, can be easily achieved, when this is required. The metadata, graphic data and executable graphic files can be created and or distributed independently from each other.","At each of the three stages , , , the resulting images are considered as being defined by originating data, distribution data and viewer data, respectively."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 5","FIG. 3","FIG. 4"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 6","FIG. 3"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 7","FIG. 6","FIG. 4"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 8","FIG. 4","FIG. 7","FIG. 4"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 9","FIG. 4"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIGS. 10 and 11","FIG. 7"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 12","FIG. 2"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 13","FIG. 12"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 14","FIG. 12","FIG. 13"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 15","FIG. 12"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 16","FIG. 15"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 17","FIG. 13"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 18","FIG. 13"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 19","FIG. 2"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 20","FIG. 19"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIGS. 21 to 23","FIG. 19"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 24","FIG. 19"]},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 25","FIG. 24"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 26","FIG. 20"]},{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 27","FIG. 26"]},{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 28","FIG. 1"]},{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 29","FIG. 28"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 30","FIG. 29"]},{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 31","FIG. 28"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 32","FIG. 31"]},{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 33","FIG. 28"]},{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 34","FIG. 1"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 35","FIG. 34"]},{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 36","FIG. 34"]},{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 37","FIG. 36"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 38","FIG. 36"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 39","FIG. 34"]},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 40"}]},"DETDESC":[{},{}]}
