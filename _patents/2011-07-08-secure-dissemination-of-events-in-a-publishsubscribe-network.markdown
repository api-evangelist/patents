---
title: Secure dissemination of events in a publish/subscribe network
abstract: Various embodiments of systems and methods to securely disseminate events in publish/subscribe network are described herein. One or more subscribers are authorized to receive events from a publisher through an authorize protocol carried out between the publisher, a trusted party and the one or more subscribers. A security token specific to a product associated with an event is provided, by the publisher, to the authorized one or more subscribers. Further, the event is encrypted using a public key of the trusted party, a security key of the publisher and a secret key of the publisher. The encrypted event is disseminated, by the publisher, in a publish/subscribe network. Furthermore, the encrypted event is received by the authorized one or more subscribers. The encrypted event is decrypted using the security token and an authorization key by the authorized one or more subscribers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08548172&OS=08548172&RS=08548172
owner: SAP AG
number: 08548172
owner_city: Walldorf
owner_country: DE
publication_date: 20110708
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Embodiments generally relate to computer systems and more particularly to methods and systems to securely disseminate events in a publish\/subscribe network.","Typically, a publish\/subscribe network is widely used by organizations for event based applications such as supply chain management. In supply chain management, organizations track the product using tags such as Radio Frequency Identification (RFID) tags in order to increase visibility across the supply chain and improve its performance using the publish\/subscribe network. The events disseminated in the supply chain application using the publish\/subscribe network not only reveal the information necessary to enable the supply chain application, but also reveal additional information about the organization's operation. They may, for example, reveal strategic supplier relationships, planned promotions, best practices, and the like.","Therefore, the method of dissemination of events in the publish\/subscribe network raises security concerns, since the events of the supply chain operations are considered sensitive by the organizations. Therefore, restrictive access-control policies are necessary as the events are disseminated in publish\/subscribe networks where there is no access control policy enforcement point and also the subscribers may be unknown.","In existing methods, a password or symmetric key is stored on each RFID tag in an encryption scheme that enables accessing events for the particular product. Every party that receives the RFID tag can store the password and can then access events. However, the password needs to be safeguarded. Therefore, the password needs to be encrypted on the RFID tag and stored securely in order to prevent theft. Moreover, the password is not traceable, i.e. if it is leaked, it cannot be determined which party has leaked the password. As a consequence, most publishers may not be inclined to safeguard the password or may even deliberately reveal it to outsiders. Therefore, it is desirable to provide a method which enables secure dissemination of events in the publish\/subscribe network.","Various embodiments of systems and methods to securely disseminate events in a publish\/subscribe network are described herein. In one aspect, one or more subscribers are authorized to receive events from a publisher through an authorize protocol carried out between the publisher, a trusted party and the one or more subscribers. A security token specific to a product associated with an event is provided, by the publishers, to the authorized one or more subscribers. Further, the event is encrypted using a public key of the trusted party, a security key of the publisher and a secret key of the publisher. The encrypted event is disseminated, by the publisher, in a publish\/subscribe network. In another aspect, the encrypted event is received by the authorized one or more subscribers. Further, the encrypted event is decrypted using the security token and an authorization key by the authorized one or more subscribers.","These and other benefits and features of embodiments of the invention will be apparent upon consideration of the following detailed description of preferred embodiments thereof, presented in connection with the following drawings.","Embodiments of techniques for disseminating events in a publish\/subscribe network are described herein. The publish\/subscribe network uses asynchronous communication paradigm where senders, known as publishers, and receivers or recipients, known as subscribers, are communicatively coupled. The messages that publishers generate to publish are called events. The publisher and the subscriber can represent an organization or an enterprise. Also, the publisher and the subscriber can be processing objects within the organization. The processing objects can be desktop computers, work stations, laptop computers, hand held computers, smart phone, console devices or similar portable computing systems. The publisher, the subscriber and the trusted party are considered as parties of the publish\/subscribe network.","According to one embodiment, subscribers in the publish\/subscribe network are authorized to receive events from a publisher through an authorize protocol carried out between the publisher, a trusted party and the subscribers. Further, a security token specific to a product associated with an event is provided, by the publisher, to the authorized subscribers. Furthermore, the event is encrypted using a public key of the trusted party, a security key of the publisher and a secret key of the publisher and the encrypted event is disseminated, by the publisher, in the publish\/subscribe network.","In an embodiment, the encrypted event is decrypted by the authorized subscribers using the security token and an authorization key. Thereby, the events are securely disseminated in the publish\/subscribe network by the publisher ensuring authorized subscribers having the security token can decrypt the disseminated events. Further, the trusted party keeps track of the reception of the disseminated events ensuring traceability of products associated with the event in the publish\/subscribe network. Therefore, secure dissemination of events that can only be decrypted by a selected set of authorized subscribers that have been in possession of the product is achieved.","In the following description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the invention can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.","Reference throughout this specification to \u201cone embodiment\u201d, \u201cthis embodiment\u201d and similar phrases, means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1","b":["100","110","110","130","130","130","120","110","110","130","130","130","120","120","120"]},"In one embodiment, the subscribers desired by the publisher are authorized by the publisher through the trusted party using \u2018authorize\u2019 protocol. For example, if the publisher A desires to send events only to the subscriber A and B, then the publisher A authorizes subscriber A and subscriber B using the trusted party . In operation, when the publisher A disseminates events, then the subscriber A and the subscriber B can decrypt the event. However, even though subscriber C receives the event (as the subscriber C is also present in the publish\/subscribe network), the subscriber C may not be able to decrypt the event. In one embodiment, the events are encrypted using subject attributes and object attributes based encryption before disseminating the event in the publish\/subscribe network (as described in greater detail in  and ).","Further, a secret token is generated by the publisher specific to a product associated with the event and is provided to the authorized subscribers. In one exemplary embodiment, the product is an item circulated between the parties of the publish\/subscribe network in a supply chain. In one exemplary embodiment, the secret token can be included in a tag (e.g., RFID (Radio Frequency Identification) tag) on the product of the supply chain management. In another exemplary embodiment, the secret token can be provided as an accompanying electronic message to the authorized subscribers. In yet another exemplary embodiment, the secret token can be stored in a secure place where only authorized subscribers can access.","In one embodiment, at the authorized subscriber, both the authorization key as well as the secret token is needed to decrypt the event disseminated by the publisher. If either of the keys is missing, then the subscriber may not be able to decrypt the event. In other words, it can be ensured that the authorized subscribers that are in possession of the product can decrypt the disseminated event. Also, the trusted party keeps the track of the event dissemination. This implements a strong form of traceability of items in the publish\/subscribe network.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 2","FIG. 4A"],"b":"200"},"At step , the one or more subscribers are authorized to receive events from the publisher through an \u2018authorize\u2019 protocol carried out between the publisher, the trusted party and the one or more subscribers. For example, considering the publisher's desire to send the events only to two subscribers in the publish\/subscribe network, the two subscribers are authorized by the publisher through the \u2018authorize\u2019 protocol. In one embodiment, an authorization key is generated at the authorized subscribers when the \u2018authorize\u2019 protocol is executed. It is to be noted that the \u2018authorize\u2019 protocol is executed once during the initial set up of the communication. It is not necessary to execute the \u2018authorize\u2019 protocol for every event being disseminated.","At step , a security token specific to a product associated with an event is provided, by the publisher, to the authorized one or more subscribers. In one embodiment, the security token specific to the event is generated at the publisher using a security key and a forwarding key of the publisher. The forwarding key is generated by the publisher through a \u2018trace\u2019 protocol carried out between the publisher and the trusted party depending on the authorized one or more subscribers. There are different ways to provide the security token to the authorized one or more subscribers such as providing through a product associated with the event using RFID tag, storing in a secure place which can be accessed by the authorized subscribers, providing through an accompanying electronic message and the like. It is to be noted that the security token is generated for every product associated with the event being disseminated by the publisher.","At step , the event is encrypted using a public key of the trusted party, a security key of the publisher and a secret key of the publisher. In one embodiment, the public key is published by the trusted party specific to publish\/subscribe network while executing setup. The security key is specific to the product associated with the event as assigned by the publisher. The secret key is generated by the publisher through a \u2018register\u2019 protocol carried out between the publisher and the trusted party. Therefore, this type of attribute based encryption includes both subject attributes i.e., attributes of the subscriber accessing the event (e.g., authorization key), as well as object attributes i.e., attributes of the product such as a product identifier (e.g., security token).","At step , the encrypted event is disseminated by the publisher in the publish\/subscribe network. The one or more subscribers in the publish\/subscribe network registered with the trusted party receive the disseminated event. In one embodiment, the authorized subscribers having the security token can decrypt the event. In general, the private key held by the trusted party, the secret keys held by the publishers and subscribers, the secret token is provided to the authorized subscriber are entangled to encrypt and decrypt the event. The combination of subject attributes and object attributes enables enforcing visibility policies in the publish\/subscribe network and also, the events are securely disseminated. The method disclosed in  is described in detail with an example in .",{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 3","FIG. 3"],"b":["300","300","305","310","315","305","310","315","325","325","330","335","345","355","305","310","315","320","340","350","360","305","310","315"]},"In one embodiment, at activation box , the trusted party  executes \u2018setup\u2019 step. With the execution of \u2018setup\u2019 step, a private key and a public key are generated with the input of a security parameter at the trusted party. The security parameter is specific to the trusted party. Further, the public key is published by the trusted party in the publish\/subscribe network.","At step A, Alice  executes a \u2018register\u2019 protocol carried out between Alice  and the trusted party , to get registered with the trusted party . With the execution of the \u2018register\u2019 protocol, a secret key specific to Alice  is generated at Alice  and corresponding trusted key is generated at the trusted party . Similarly at step B, Bob  executes the \u2018register\u2019 protocol to get registered with the trusted party .","At step , Alice  authorizes Bob  to receive events from Alice  through an \u2018authorize\u2019 protocol. The \u2018authorize\u2019 protocol is carried out between Alice , the trusted party  and Bob . With the execution of the \u2018authorize\u2019 protocol, an authorization key is generated at Bob , which is used for decrypting the received events from Alice  at later stage. This step of authorization is performed once and it is not necessary to execute \u2018authorize\u2019 protocol before disseminating every event. Therefore, no additional overhead is created besides adding a one-time authorization process.","At step , Alice  executes a \u2018trace\u2019 protocol with the trusted party  outputting a forwarding key. Further at activation box , Alice  executes a \u2018forward\u2019 step generating a security token when preparing for a shipment of products to Bob . Alice  provides the security token to Bob . For every product, the \u2018trace\u2019 protocol and the \u2018forward\u2019 step are executed.","At activation box , Alice  encrypts the event using the public key of the trusted party , a security key of Alice  and the secret key of Alice . At step , Alice  disseminates the event in the publish\/subscribe network. Encrypting the event at Alice  and disseminating the event by the publisher may be performed once for every event.","At activation box , Bob , the authorized subscriber, decrypts the encrypted event and obtains the event message using the authorization key and the security token. In one exemplary embodiment, parties in the publish\/subscribe network can store the received event and can access the security token whenever they receive the product at later stage. It is appreciated that the example described in  can be easily extended to more than two parties of publishers for forwarding and event publishing. Also, the communication between Alice , the trusted party  and Bob  are carried out over secure and authenticated communication channels. The steps and protocols mentioned in ,  and  are described in greater detail in .",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 4A","FIG. 4B","FIG. 4A"],"b":"400"},"In one embodiment, a \u2018forward\u2019 step is executed at a publisher. The \u2018forward\u2019 is the step, where upon input of a security key (K) and a forwarding key (FWD), a security token (K) is generated at the publisher. The input security key (K) may either be received by the publisher with the products or randomly generated if the publishers are manufacturing the products. The forwarding key (FWD) is obtained by a \u2018trace\u2019 protocol (described in ). In one embodiment, the security token (K) is provided to the subscriber.","In one embodiment, an \u2018encrypt\u2019 step is executed at the publisher. The \u2018encrypt\u2019 is the step, where upon input of an event (E), the public key (PBK), the security key (K) and a secret key (SK), a ciphertext (C) of the event (E) is generated. The ciphertext (C) is the result of encryption performed on plaintext of the event (E). The secret key (SK) is generated at the publisher through a \u2018register\u2019 protocol (described in ). In one embodiment, \u2018decrypt\u2019 step is executed at a subscriber. The \u2018decrypt\u2019 is the step, where upon input of the ciphertext (C), the security token (K) and an authorization key (AUTH), the event plaintext (E) is obtained.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 4B","b":"400","sub":["P","P","S","S"]},"In one embodiment, a \u2018trace\u2019 protocol is carried out between the publisher and the trusted party. Upon receiving a request for tracing the desired subscriber by the publisher, the \u2018trace\u2019 protocol is executed. The \u2018trace\u2019 protocol generates the forwarding key (FWD) at the publisher based on the input of the trusted key (TK) of the publisher and the trusted key (TK) by the trusted party. With the execution of the \u2018trace\u2019 protocol, the trusted party is aware that the publisher forwards the security token to the subscriber.","In one embodiment, an \u2018authorize\u2019 protocol is carried out between the publisher, the trusted party and the subscriber. The \u2018authorize\u2019 protocol generates the authorization key (AUTH) at the subscriber based on the input of the secret key (SK), the private key (PRV) and the trusted key (TK). The trusted key (TK) corresponding to the subscriber is generated by the trusted party through the \u2018register\u2019 protocol (described in ).",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 5","FIG. 2"],"b":["500","505"]},"For example, an adversary  operates as a party or a processing object of the supply chain in the simulated environment  of the publish\/subscribe network. Further, the simulated environment  consists of a trusted party, Trent  and another party, Alice  in the supply chain. Consider Case A where an adversary  is excluded from executing the necessary \u2018authorize\u2019 protocol and in Case B where the adversary  is excluded from obtaining the necessary forwarded security token.","Case A: A simulator hands a public key to the adversary . In one exemplary embodiment, the simulator can be a module used to analyze behavior of the method described in . The adversary  may register with Trent  via \u2018register\u2019 protocol. The adversary  may request a forwarding key to Alice  via \u2018trace\u2019 protocol. In one phase, the adversary  may request Alice  to generate (and provide) security token K. The adversary  may request Alice  to encrypt (and publish) event plaintext \u2018m\u2019, even corresponding to a security token Kor Kof adversary's  choice. This phase ends at the discretion of the adversary . Now, the simulator chooses a security token K*and gives the security token \u2018Forward(K*, FWD)\u2019 to the adversary . The adversary  chooses two plaintexts of the event as m*and m*and gives them to the simulator. The simulator flips a random coin f\u03b5{0, 1}, encrypts m*under K*and gives the ciphertext c* to the adversary . In another phase, the adversary  may request the same operations from Alice  as in the first phase. This phase also ends at the discretion of the adversary . As the result, the adversary  outputs a guess f* of f. It is true if adversary  correctly guesses f*=f. The advantage of the adversary in decrypting the event is Adv(1)=|Pr[f*=f]\u22121\/2|.","Case B: The simulator hands a public key to the adversary . The adversary  may register with Trent  via \u2018register\u2019 protocol. The adversary  may request a forwarding key to Alice  via \u2018trace\u2019 protocol. Unlike Case A, the adversary  may request to be authorized by Alice  via \u2018authorize\u2019 protocol. In one phase, the adversary  may request Alice  to generate (and provide) security tokens K. The adversary  may request Alice  to encrypt (and publish) the event with plaintext m, even corresponding to a security token (item) Kor Kof adversary's  choice. This phase ends at the discretion of the adversary . The simulator chooses a security token K*. Unlike Case A, the security token is not given to the adversary . The adversary  chooses two plaintexts m*and m*and gives them to the simulator. The simulator flips a random coin f\u03b5{0, 1}, encrypts m*under K*and gives the ciphertext c* to the adversary . In the second phase, the adversary  may request the same operations from Alice  as in first phase except requests for the security token K*. This phase also ends at the discretion of the adversary . Now, the adversary  outputs a guess f* of f. Again, the adversary  may decrypt the event, if the adversary  guesses correctly and adversary's  advantage is defined accordingly.","In one exemplary embodiment, the subject and object attribute based encryption scheme operates on elliptic curves and uses bilinear maps. Let G and Gbe groups of order p for some large prime \u2018p\u2019 where the bit-size of \u2018p\u2019 is determined by the security parameter k. A bilinear map is a function \u00ea: G\u00d7G\u2192Gwith the following properties:\n\n","Modified Weil or Tate pairings on super singular elliptic curves are examples of such bilinear maps. With this, the security of the encryption method can be analyzed. If the Bilinear Decisional Diffie Hellman (BDDH) assumption holds, if given values g, g, g, g\u03b5G and \u00ea(g, g)\u03b5Git is not computationally feasible to decide if d=abc. Furthermore, the Modified Bilinear Decisional Diffie Hellman (MBDDH) assumption can be used which includes the additional element g. The MBDDH assumption holds, if given values g, g, g, g, g\u03b5G and \u00ea(g, g)\u03b5Git is not computationally feasible to decide if d=abc.","In one embodiment, if the BDDH assumption holds, the adversary's advantage Adv(1)<1\/poly(k) (Case A) is a negligible function of the security) parameter k. Further, if the MBDDH assumption holds, the adversary's advantage Adv(1)<1\/poly(k) (Case B) is a negligible function of the security parameter k. Therefore, for the subscriber to decrypt the received event has to be having the authorization key as well as the security token.","In general, nevertheless, event is disseminated in publish\/subscribe networks where there is no access control policy enforcement point and recipients may not be known, the subject and object attributes based encryption method enables the publisher to selectively encrypt its events, such that only authorized subscribers that have had possession of the product associated with the event can be able to decrypt. Also, the trusted party is enabled to trace the disseminated event and the product in the supply chain to keep security-relevant information secret. Also, even though securely disseminating the events in the publish\/subscribe network is described with an example of supply chains, the method can be extended to other applications such as a cloud based setting with a central and an encrypted database.","Some embodiments of the invention may include the above-described methods being written as one or more software components. These components, and the functionality associated with each, may be used by client, server, distributed, or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as, functional, declarative, procedural, object-oriented, lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively, the components maybe implemented in server and client applications. Further, these components may be linked together via various distributed programming protocols. Some example embodiments of the invention may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example, a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level (e.g., a graphical user interface). These first and second computer systems can be configured in a server-client, peer-to-peer, or some other configuration. The clients can vary in complexity from mobile and handheld devices, to thin clients and on to thick clients or even other servers.","The above-illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store, encode, or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described, represented, or illustrated herein. Examples of computer readable storage media include, but are not limited to: magnetic media, such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROMs, DVDs and holographic devices; magneto-optical media; and hardware devices that are specially configured to store and execute, such as application-specific integrated circuits (\u201cASICs\u201d), programmable logic devices (\u201cPLDs\u201d) and ROM and RAM devices. Examples of computer readable instructions include machine code, such as produced by a compiler, and files containing higher-level code that are executed by a computer using an interpreter. For example, an embodiment of the invention may be implemented using Java, C++, or other object-oriented programming language and development tools. Another embodiment of the invention may be implemented in hard-wired circuitry in place of, or in combination with machine readable software instructions.",{"@attributes":{"id":"p-0052","num":"0054"},"figref":"FIG. 6","b":["600","600","605","655","600","640","655","610","615","610","615","605","615","600","625","630","600","625","630","600","635","600","650","650","600","645","600","620","660","660","660","650","660"]},"A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases, such as, relational, transactional, hierarchical, multi-dimensional (e.g., OLAP), object oriented databases, and the like. Further data sources include tabular data (e.g., spreadsheets, delimited text files), data tagged with a markup language (e.g., XML data), transactional data, unstructured data (e.g., text files, screen scrapings), hierarchical data (e.g., data in a file system, XML data), files, a plurality of reports, and any other data source accessible through an established protocol, such as, Open DataBase Connectivity (ODBC), produced by an underlying software system (e.g., ERP system), and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams, broadcast data, and the like. These data sources can include associated data foundations, semantic layers, management systems, security systems and so on.","In the above description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however that the invention can be practiced without one or more of the specific details or with other methods, components, techniques, etc. In other instances, well-known operations or structures are not shown or described in details to avoid obscuring aspects of the invention.","Although the processes illustrated and described herein include series of steps, it will be appreciated that the different embodiments of the present invention are not limited by the illustrated ordering of steps, as some steps may occur in different orders, some concurrently with other steps apart from that shown and described herein. In addition, not all illustrated steps may be required to implement a methodology in accordance with the present invention. Moreover, it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.","The above descriptions and illustrations of embodiments of the invention, including what is described in the Abstract, is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of, and examples for, the invention are described herein for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as those skilled in the relevant art will recognize. These modifications can be made to the invention in light of the above detailed description. Rather, the scope of the invention is to be determined by the following claims, which are to be interpreted in accordance with established doctrines of claim construction."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The claims set forth the embodiments of the invention with particularity. The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. The embodiments of the invention, together with its advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 4A","FIG. 4B"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
