---
title: Securing external systems with account token substitution
abstract: Systems, apparatuses, and methods for providing an account token to an external entity during the lifecycle of a payment transaction. In some embodiments, an external entity may be a merchant computer requesting authorization of a payment message. In other embodiments, the external entity may be a support computer providing a payment processing network or a merchant support functions.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09342832&OS=09342832&RS=09342832
owner: Visa International Service Association
number: 09342832
owner_city: San Francisco
owner_country: US
publication_date: 20110812
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCES TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit of U.S. Provisional Application No. 61\/373,163, filed Aug. 12, 2010, entitled \u201cSECURING SECONDARY SYSTEMS WITH TOKEN PAN SUBSTITUTION,\u201d and U.S. Provisional Application No. 61\/381,322, filed Sep. 9, 2010, entitled \u201cACCOUNT NUMBER TOKENIZATION,\u201d which are herein incorporated by reference in their entirety for all purposes.","As methods and devices for engaging in financial transactions have increased, old problems of protecting sensitive information persist. For example, one common source of fraud occurs when a hacker gains access to a data center and obtains sensitive information such as credit card numbers and other cardholder data. As another example, an employee entrusted to maintain sensitive information can provide a fraudster access to the cardholder data, either by voluntary act, trick, negligence, or accident.","To protect sensitive information from such fraud, a data center may encrypt the data it stores. For example, a merchant may wish to track financial transactions at one or more stores to gain insight on the purchasing tendencies of its customers. In this example, the merchant may store financial information (e.g., credit card numbers) associated with the purchases. However, because such information is sensitive and could be used to conduct fraudulent transactions, the merchant may secure the credit card numbers it collects by encrypting the credit numbers it stores in its data center.","A merchant processor that performs payment gateway services on behalf of a merchant is another example of a data center. For example, the merchant processor (as provided by CYBERSOURCE\u2122, of Mountain View, Calif.), may receive payment information from a merchant computer, process the payment information into the format of an authorization request message, send the authorization request message to the appropriate payment processing network (as may be offered by VISA\u2122), receive an authorization response message, and route the authorization response message back to the merchant computer so that the merchant can provide a good or service to a customer.","Other examples of data centers include acquirers and acquirer processors. An acquirer is typically a business entity (e.g., a commercial bank) that has a business relationship with a particular merchant. Acquirers may facilitate and manage financial transactions on behalf of merchants. An acquirer processor is typically a transaction processing entity that has a business relationship with a particular acquirer. Acquirer processors may provide merchants with transaction clearing, settlement, billing and reporting services.","In addition to the payment services described above, the acquirer or acquirer processor can also provide a variety of financial reports to the merchants registered for its services. For example, once a transaction has completed, the merchant may request information specifically for that transaction by sending a report request message to the acquirer or acquirer processor. The acquirer or acquirer processor may respond to the report request message by sending full payment information related to the specified transaction to the merchant.","To provide full payment information back to the merchant as part of these financial reports, the acquirer or acquirer processor may store the credit card numbers involved in the transactions. Accordingly, the acquirer or acquirer processor can be a form of a data center that stores cardholder information and other sensitive information. For the reasons described above, the acquirer or acquirer processor may protect the cardholder information against potential fraudsters. In one approach, the acquirer or acquirer processor may encrypt the credit card numbers that it receives. Further, to avoid collisions between the credit card numbers, the acquirer or acquirer processor may use an encryption key specific to each merchant when the acquirer or acquirer processor encrypts an account number, for example.","When a data center (e.g., a merchant processor, merchant, acquirer processor, or acquirer) maintains a database of sensitive information, the data center may have to comply with a number regulations. Such regulations attempt to increase controls around cardholder data to reduce credit card fraud via its exposure. For example, the Payment Card Industry Data Security Standard (PCI DSS) is an information security standard for organizations that handle cardholder information for the major debit, credit, prepaid, e-purse, ATM, and POS cards. As part of the PCI DSS, a data center that stores and\/or processes cardholder information must ensure that the cardholder data is secured. Further, the data center must perform periodic compliance testing.","As described above, a data center may encrypt cardholder information to comply with the PCI DSS. There are many known methods of encryption. Comparatively secure encryption systems are typically expensive and may consume large portions of a computer system's processing bandwidth.","Embodiments of the invention address the above problems, and other problems, individually and collectively.","Embodiments of the present invention can be directed to systems, apparatuses, and methods for providing account tokens to external systems during the lifecycle of a payment transaction. As is explained below, an account token is a less sensitive form of an account identifier. Such account tokens can be sent to external entities, such as a merchant or a support computer, during the lifecycle of a transaction.","Some embodiments are directed to a method for providing an account token to a merchant computer. The method may involve a tokenization server receiving an authorization request message sent by a merchant computer. The authorization request message may request authorization for payment of a good or service and may include an account identifier and a merchant verification value. A token derivation key is then selected using the merchant verification value. The tokenization server then uses the token derivation key to generate the account token of the account identifier. The account token is inserted in an authorization response message that is then sent to the merchant computer.","Some embodiments are directed to a server that provides an account token to a merchant computer. The server receives an authorization request message sent by a merchant computer. The authorization request message includes an account identifier and a merchant verification value. The server then selects a token derivation key using the merchant verification value. The server then uses the token derivation key to generate the account token of the account identifier. The account token is inserted in an authorization response message that is then sent to the merchant computer.","Some embodiments are directed to a computer readable medium for performing a method of providing an account token to a merchant computer. The method may involve a tokenization server receiving an authorization request message sent by a merchant computer. The authorization request message includes an account identifier and a merchant verification value. A token derivation key is then selected using the merchant verification value. The tokenization server then uses the token derivation key to generate the account token of the account identifier. The account token is inserted in an authorization response message that is then sent to the merchant computer.","Some embodiments are directed to a method for providing an account token to an external entity. The method may involve receiving a payment message that is associated with an account identifier. Then a tokenization server generates an account token of the account identifier associated with the payment message. An external request message with the account token is then transmitted to an external entity. An example of an external entity is a support computer that provides a risk score for a transaction. An external response message is then received. An example of an external response message is a risk score that corresponds to the payment message. After the external response message is received, the account identifier is then determined from the account token.","Some embodiments are directed to a server that provides an account token to an external entity. The server may receive a payment message that is associated with an account identifier. The server then generates an account token of the account identifier associated with the payment message. An external request message with the account token is then transmitted by the server to an external entity. An example of an external entity is a support computer that provides a risk score for a transaction. An external response message is then received by the server. An example of an external response message is a risk score that corresponds to the payment message. After the external response message is received, the account identifier is then determined from the account token.","Some embodiments are directed to a computer readable medium that includes instructions that, when executed by a processor, performs a method for providing an account token to an external entity. The method may involve receiving a payment message that is associated with an account identifier. Then a tokenization server generates an account token of the account identifier associated with the payment message. An external request message with the account token is then transmitted to an external entity. An example of an external entity is a support computer that provides a risk score for a transaction. An external response message is then received. An example of an external response message is a risk score that corresponds to the payment message. After the external response message is received, the account identifier is then determined from the account token.","Embodiments of the invention relate to methods and systems for mitigating risks associated with transmitting and storing sensitive account identifiers. Particularly, example embodiments of the invention relate to generating an account token at a payment processing network as part of an authorization process involving a merchant computer, an acquirer computer, and\/or a support computer.","However, prior to discussing the example embodiments of the invention, a further description of some terms can be provided for a better understanding of embodiments of the invention.","As used herein, an \u201caccount identifier\u201d can refer to any information that identifies an account that holds value for a user. An account identifier can be represented as a sequence of characters or symbols. An account identifier is typically provided as part of a transaction, such as a payment transaction, that credits value to the account, debits value to the account, or performs any other suitable action on the account. Credit card numbers, checking and saving account numbers, prepaid account numbers, aliases and\/or a passwords, phone numbers, and any other suitable identifier are all examples of account identifiers.","As used herein, an \u201caccount token\u201d can refer to the result of transforming an account identifier into a form that is not considered sensitive in the context of the environment in which the account token resides. A \u201ctokenization algorithm\u201d can refer to the sequence of steps used to transform an account identifier into an account token. Still further, a \u201creverse tokenization algorithm\u201d can refer to the sequence of steps used to transform the account token back to the account identifier. The tokenization algorithm may replace sensitive data, or portions thereof, with a value that is not considered sensitive.","As used herein, a \u201ctoken derivation key\u201d can refer to any piece of information that is used as a parameter of a tokenization algorithm. The token derivation key can be used to vary the output of a tokenization algorithm. In some embodiments, a token derivation key is symmetric as the same token derivation key is used for both tokenization and reverse tokenization. In other embodiments, a token derivation key is asymmetric as the token derivation key used to tokenize an account identifier is not used in the reverse tokenization algorithm. Instead, a second token derivation key is used in the reverse tokenization.","An \u201cauthorization request message\u201d can refer to a message, or sequence of messages, that requests an issuer of the payment card to authorize a transaction. An authorization request message according to an embodiment of the invention may comply with ISO (International Organization for Standardization) 8583, which is a standard for systems that exchange electronic transactions made by cardholders using payment cards. An authorization request message according to other embodiments may comply with other suitable standards.","An \u201cauthorization response message\u201d can refer to a message, or sequence of messages, that responds to a merchant's and\/or acquirer's request to authorize a transaction. An authorization response message according to an embodiment of the invention may comply with ISO 8583, which, as described above, is a standard for systems that exchange electronic transactions made by cardholders using payment cards. An authorization response message according to other embodiments may comply with other suitable standards.","A \u201cmerchant verification value\u201d may refer to any information that identifies a merchant as a participant in a service or program. As an example, a merchant verification value may be assigned to a business, person, or organization that has agreed to accept payment cards when properly presented by the cardholder. A merchant verification value can be any combination of characters and\/or symbols. Further, a merchant verification value can be transmitted to a payment processing network as part of an authorization request message.","A \u201csupport system verification value\u201d may refer to any information that identifies a support system as a provider of a service or program. As an example, a support system verification value may be assigned to a web service that provides a fraud score for a transaction. As another example, a support system verification value can be assigned to an alert web service that sends a message to a consumer's communication device (e.g., mobile phone) when one or more conditions applied. Such a message can be for a coupon or an alert that a transaction or activity has occurred with regard to a particular account. A support system verification value can be any combination of characters and\/or symbols. Further, in some embodiments, a support system verification value can be transmitted to a payment processing network as part of an authorization request message.","A \u201cverification value,\u201d as used herein, can refer to a merchant verification value, a support system verification value, or some combination thereof.","Generally, embodiments relate to apparatuses, systems, and methods of securing sensitive data. In particular, some embodiments improve security of a data center that stores, for example, account identifiers by communicating account tokens from a tokenization server to external entities (e.g., merchant computers or a support computers). Further, in some embodiments, the account tokens communicated to the external entity is generated specific for the external entity. For example, when a merchant is enrolled with a tokenization service, the merchant is assigned a merchant verification value and token derivation key. Thereafter, subsequent communications between a merchant computer and a tokenization server may cause the tokenization server to generate an account token specific to the merchant by using the assigned token derivation key.","To illustrate, when a consumer swipes a credit card at a merchant's store to purchase an item, a bank associated with the merchant may send an authorization request message with a particular account identifier and the merchant verification value assigned to the merchant to the payment processing network. In generating an authorization response message, a tokenization server associated with the payment processing network may select the token derivation key assigned to the merchant (as may be determined by matching a merchant verification value included in the authorization request message to a previously assigned token derivation key) and then generate an account token of the account identifier using the token derivation key. The account token is then inserted in the authorization response message, which is then sent back to the merchant via the bank.","A similar technique can be used to communicate account tokens to support systems, as is further described below.","By communicating an account token to the merchant, example embodiments can provide comparatively secure communication and comparatively secure storage for sensitive information, such as the cardholder data (e.g., credit card number) and other financial information. For example, if a fraudster hacks into the merchant's systems, the account tokens of the account identifiers stored by the merchant will not be useful to the fraudster because the account tokens can not be used alone to conduct financial transactions. That is, the fraudster will be unable to use the account tokens to perform financial transactions.","In some embodiments, a merchant and\/or support system does not have access to the reverse token derivation keys needed to transform the account tokens to the corresponding account identifiers. Instead, a tokenization server stores the reverse token derivation keys. Therefore, the risk of compromised cardholder data is further limited in that a fraudster may have to breach the merchant and\/or support system to obtain the account tokens and may also have to breach the tokenization server to obtain the reverse token derivation keys. Furthermore, even if the account tokens are compromised for a particular merchant and\/or support system (e.g., if the fraudster obtains both the account tokens and reverse token derivation keys), the account tokens for other merchants and\/or support systems may remain inaccessible to the fraudster.","Still further, because an account token is received in the authorization response message in addition to or in lieu of the actual account identifier, the apparatuses, methods, and systems described herein also reduce merchant post-processing efforts needed to support encryption or hashing of the account numbers after the authorization response message is received.","As a further advantage, the merchant can use the tokenized account identifier to conduct customer analytics in lieu of the original card identifier. Once the card account numbers are removed from the merchant's systems (often during or after the daily batch sales draft clearing process), the merchant can retain the tokenized account identifier for future analytics and customer tracking, while simultaneously complying with security standards (such as Payment Card Industry Data Security Standard (PCI DSS)) and reducing risk of damaging data breaches. For example, in order to maximize sales, merchants often have the need to perform customer activity tracking and segmentation\/spend analyses using sales history. However, using the account identifier to identify customers requires long-term storage of cardholder account identifiers, potentially leading to increased data breach risk and security standards non-compliance. Embodiments of the invention provide a method to tokenize the account identifier so that it can be used in lieu of the actual account identifier to perform merchant customer analytics.","In another example, embodiments of the invention may facilitate customer analytics that allow merchants to measure velocity of purchases (e.g., if five transactions occur within a relatively short time period over a disperse geographic area). Based on an application observing the account tokens, the merchant may deny selected transactions if the merchant detects a suspicious velocity pattern, even if the transaction is authorized by the payment processing network.","In another example, embodiments of the invention may facilitate customer analytics that allow merchants to measure the velocity of purchases to provide various customer loyalty services. For example, based on an application observing the account tokens, the merchant may provide a benefit to repeat customers (e.g., if a customer purchases the same product on five occasions, the merchant can provide the customer with an additional product at no cost).","I. Exemplary Payment System","Example embodiments are typically implemented in the context of a payment transaction. Therefore, prior to further discussing the use of a tokenization server configured to provide account tokens, a brief description of standard consumer purchases will be presented.","An exemplary system  for embodiments of the invention can be seen in . For simplicity of discussion, only one of each component is shown. It is understood, however, that embodiments of the invention may include more than one of each component. In addition, some embodiments of the invention may include fewer than all of the components shown in . Also, the components in  may communicate via any suitable communication medium (including the internet), using any suitable communication protocol.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 1","b":["100","100","120","130","120","110","120","115","130","160","140"]},"The consumer  may be an individual, or an organization such as a business that is capable of purchasing goods or services.","The portable consumer device  may be in any suitable form. For example, suitable portable consumer devices can be hand-held and compact so that they can fit into a consumer's wallet and\/or pocket (e.g., pocket-sized). The portable consumer device  can include a processor, and memory, input devices, and output devices, operatively coupled to the processor. Specific examples of portable consumer devices include cellular or wireless phones, personal digital assistants (PDAs), pagers, portable computers, smart cards, and the like. The portable consumer devices can also be debit devices (e.g., a debit card), credit devices (e.g., a credit card), or stored value devices (e.g., a pre-paid or stored value card).","The payment processing network  may include data processing subsystems, networks, and operations used to support and deliver authorization services, exception file services, and clearing and settlement services. An exemplary payment processing network may include VisaNet\u2122. Payment processing networks such as VisaNet\u2122 are able to process credit card transactions, debit card transactions, and other types of commercial transactions. VisaNet\u2122, in particular, includes a VIP system (Visa Integrated Payments system) which processes authorization request messages and in some instances also performs clearing services, and a Base II system which performs clearing services in instances when it is not performed by the VIP system.","The payment processing network  may include a server computer. A server computer is typically a powerful computer or cluster of computers. For example, the server computer can be a large mainframe, a minicomputer cluster, or a group of servers functioning as a unit. In one example, the server computer may be a database server coupled to a Web server. The payment processing network  may use any suitable wired or wireless network, including the Internet.","The merchant computer  may also have, or may receive communications from, an access device  that can interact with the portable consumer device . The access devices  according to embodiments of the invention can be in any suitable form. Examples of access devices include point of sale (POS) devices, cellular phones, PDAs, personal computers (PCs), tablet PCs, handheld specialized readers, set-top boxes, electronic cash registers, automated teller machines (ATMs), virtual cash registers, kiosks, security systems, access systems, and the like.","If the access device  is a point of sale terminal, any suitable point of sale terminal may be used including card or phone readers. The card or phone readers may include any suitable contact or contactless mode of operation. For example, exemplary readers can include RF (radio frequency) antennas, magnetic stripe readers, etc. to interact with the portable consumer devices .","In a typical purchase transaction, the consumer  purchases a good or service at the merchant associated with the merchant computer  using the portable consumer device  such as a credit card or mobile phone. The consumer's portable consumer device  can interact with an access device  such as a POS (point of sale) terminal communicatively coupled to the merchant computer . For example, the consumer  may swipe the credit card through a POS terminal or, in another embodiment, may take a wireless phone and may pass it near a contactless reader in a POS terminal.","An authorization request message may then forwarded by the merchant computer  to the acquirer computer . After receiving the authorization request message, the authorization request message may then be sent to the payment processing network . The payment processing network  may then forward the authorization request message to the issuer computer  associated with the portable consumer device .","As shown in , the payment processing network  can be communicatively coupled to a support computer . The support computer  can perform functions that support or supplement the authorization process. Fraud scoring system, alert systems, reporting systems, etc are examples of support computers, according to various embodiments.","After the issuer computer  receives the authorization request message, the issuer computer  may send an authorization response message back to the payment processing network  to indicate whether or not the current transaction is authorized (or not authorized). The transaction processing system  may then forward the authorization response message back to the acquirer computer . The acquirer computer  may then send the response message back to the merchant computer .","After the merchant computer  receives the authorization response message, the access device  communicatively connected to the merchant computer  may then provide the authorization response message for the consumer . The authorization response message may be displayed by the POS terminal, or may be printed out on a receipt.","During the lifecycle of a transaction, the payment processing network  may generate account tokens of the account identifiers sent in the authorization request message. In some embodiments, an account token  can be generated and sent to the merchant computer  and\/or the acquirer computer . The merchant computer  and\/or acquirer computer  can store the account token  in account token database . In other embodiments, an account token  can be generated and sent to a support computer . The support computer  can store the account token  in account token database .","At the end of the day, a normal clearing and settlement process can be conducted by the payment processing network . A clearing process is a process of exchanging financial details between and acquirer and an issuer to facilitate posting to a consumer's account and reconciliation of the consumer's settlement position. During the clearing process, the acquirer computer  can send the account token  to the payment processing network . The payment processing network  may then use the reverse token derivation key for the particular merchant to retrieve the corresponding account identifier. The payment processing network  can send the account identifier to the issuer computer  to perform clearing and settlement. In some embodiments, clearing and settlement can occur simultaneously.","Once clearing and settlement are performed, the merchant computer  may remove the account identifiers stored in their systems. In other embodiments of the invention, as described herein, the merchant computer  can receive account tokens in lieu of account identifiers, thus eliminating the need to remove account identifiers stored in the merchant's systems. As an advantage of embodiments of the invention, the merchant computer  may retain the account tokens, thereby allowing customer analytics, as described above.","II. Tokenization Server",{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 2","b":["140","140","220","220","220","220","220","220"]},"The tokenization server  may include an enrollment module , an authorization response module , a tokenization module , a normalization module , and an authorization request module .","The enrollment module  may receive requests for enrolling external entities, such as merchants and support systems, in the tokenization service provided by the payment processing network . In some embodiments, the enrollment module  may assign an identifier to an external entity that is successfully enrolled in the tokenization service. For example, a merchant may be assigned a merchant verification value which is sent in subsequent authorization request messages sent to the payment processing network. The merchant verification values assigned to merchants can be stored in MVV database . Alternatively, a support system may be assigned a support system verification value that uniquely identifies the support system. The support system verification values assigned to support systems can be stored in support system database .","The authorization response module  performs a number of functions related to inserting account tokens into messages communicated between the payment processing network  and merchants, issuers, and acquirers. For example, according to one embodiment, the payment processing network  receives an authorization response messages from an issuer, processes the received authorization response message, and sends the processed authorization response message to the appropriate merchant and\/or acquirer. Inserting an account token into the authorization response message by the authorization response module  is an example of one type of processing the payment processing network  performs. The authorization response module  can receive account tokens from the tokenization module .","The tokenization module  may generate the account tokens that are used in the embodiments described herein. In one embodiment, the tokenization module  generates account tokens based on an merchant verification value received in an authorization request message. For example, the tokenization module  may use the merchant verification value as an index into a token derivation key database (as is discussed below) to obtain a token derivation key assigned to the merchant. Once the token derivation key is obtained, the tokenization module  can then generate the account token by applying the account identifier to an encryption or hash function, with the merchant's token derivation key as a parameter. This and other techniques are described in greater detail below.","The normalization module  may provide facilities that allow the payment processing network  to transform an account token from a first account token form to a second account token form. Such may be an advantage for comparing the account tokens received by two or more merchants. This is because the account tokens generated by the tokenization module  are merchant specific. As explained below, the normalization module  may provide a scheme for generating an account token common to one or more merchants to provide for comprehensive analytics and services, as may be provided by merchant support systems.","The authorization request module  may perform a number of functions related to receiving and forwarding authorization request messages. As part of receiving an authorization request message, the authorization request module  may forward the authorization request message to the issuer computer  or to the support computer . Alternatively, the payment processing network  can forward the authorization request message to the issuer computer  or to the support computer  without using the authorization request module .","Further, the tokenization server  may have access to one or more databases of information. As shown in , the tokenization server  may have access to a MVV database , a TDK database , and a support system database . The MVV database  can store merchant verification values that are assigned to merchants that enroll in the tokenization services. As discussed above, a merchant verification value is one example of a merchant identifier and other suitable identifiers can also be used in other embodiments of the invention.","The TDK database  may store the token derivation keys that are assigned to merchants enrolled in the tokenization services. As described above, a token derivation key can be in any number of suitable forms using, for example, symmetrical or asymmetrical key algorithms. Further, as described above, in some embodiments, the tokenization server  can update the token derivation key assigned to a merchant at various points in time. For example, the tokenization server  may update a merchant's token derivation key if a fraudster compromises the account token data stored at a merchant. To provide such dynamic updates, the TDK database  can associate a token derivation key index with the assigned token derivation key.","The support system database  may store information regarding the support systems communicatively coupled to the payment processing network. For example, each support system may be assigned a unique support system verification value at the time that the support system is deployed or, in some embodiments, the support system may perform an enrollment process. Additionally, the support system database  may store information on whether the support system is capable of receiving account tokens rather than the account identifiers. In this way, the process of connecting support systems to the payment processing network can be achieved dynamically. Such dynamic connections can be implemented according to various system architectures, such as a directory service, event based systems, or any other scalable architecture.","III. Provisioning Account Tokens to External Parties","As described above, some embodiments of the present invention relate to a tokenization server that generates account tokens of account identifiers for merchants. Other embodiments of the present invention relate to a tokenization server that generates account tokens of account identifiers for support systems of a payment processing network. Further, there are still other embodiments where the tokenization server provides facilities for providing account tokens to a support system of one or more merchants. These various embodiments are described separately below. In particular, Section IV describes various embodiments for generating and sending account tokens to merchants, Section V describes various embodiments for generating and sending account tokens to support systems of the payment processing network, and Section VI describes various embodiments for generating and sending account tokens to merchant support systems.","IV. Provisioning Account Tokens to Merchants",{"@attributes":{"id":"p-0078","num":"0077"},"figref":["FIG. 3","FIG. 7"],"b":["300","300","700"]},"A. Merchant Registration","In some embodiments, the merchant computer  may transmit a registration request message M to the tokenization server . This is shown as step S of . The registration request message may include registration information, such as a merchant name, merchant category type, merchant location, contact information, account information, and any other suitable information. The registration information may be transmitted via offline communication channels (e.g., via a telephone) or online communication channels (via software interfaces communicating over the network, for example).","Responsive to receiving the registration request message M, the payment processing network  may assign the merchant a merchant verification value (MVV), if a MVV is not already assigned. With respect to , this is shown as step S. The MVV may be used by the payment processing network  to identify the merchant and information corresponding to the merchant. The MVV can be generated and maintained by the payment processing network  in MVV database  to identify the merchant. The payment processing network  may communicate the assigned MVV to the merchant.","In addition to assigning the MVV, the payment processing network  may generate a token derivation key (TDK) corresponding to the merchant and\/or the MVV (message M). With regard to , this is shown as step S. As described above, and further explained below, the TDK may be a piece of information used by the tokenization module  to generate an account token. The payment processing network  may assign a unique TDK for each merchant registered in the tokenization service. In an example embodiment, the payment processing network  may store and maintains the TDK in database .","By assigning the TDK to the MVV, the payment processing network  provides an additional layer of security to the tokenization algorithm. To illustrate, in the event that a fraudster is able obtain the TDK assigned to merchant , the account token databases maintained by other merchants will be secure. Such is the case because the TDK of one merchant can not be used to reverse tokenize the account tokens generated for other merchants.","In addition to generating the TDK, some example embodiments may generate a TDK index associated with the TDK. The TDK index may allow identification of a particular TDK for those embodiments that may generate multiple or subsequent TDKs for a given MVV. The TDK index and supporting multiple TDKs per merchant are described further below.","A merchant may only need to register once, and after completion of the registration process, subsequent communications with the merchant and or the acquirer of the merchant may include the account token rather than the less secure account identifier, as will be further described below.","B. Authorization","Once a merchant is registered in the tokenization service, a payment processing network may transmit an account token in communications exchanged with the merchant and\/or acquirer. One situation that the payment processing network may transmit the account token to the merchant and\/or acquirer is in the authorization process, for example, when a consumer's credit card is swiped at a POS terminal located at the merchant site. When the consumer's credit card is swiped, the acquirer computer  may transmit an authorization request message M to the payment processing network . This is shown as step S of . The authorization request message may be in the form of a typical authorization request message, wherein the authorization request message may include the account identifier and the MVV assigned to the merchant (e.g., as may be stored in fields 2 and 62.20 of an ISO 8583 message, respectively).","Once the authorization request message is received by the payment processing network  (step S of ), the payment processing network  may use the MVV stored in the authorization request message M to retrieve information related to the merchant. As an example, upon receipt of the authorization request message M, the payment processing network  may utilize the MVV included in the authorization request message to determine if the merchant participates in the tokenization service. If so, the payment processing network  can retrieve the TDK associated with the MVV (step S of ) and send the card account identifier and the TDK to a tokenization module . This is shown as message M. The tokenization module  may use the TDK to generate an account token based on the token derivation key (step S of ). The tokenization module  may ensure that the account token is unique for each account identifier, and may guarantee that the same account identifier will generate the same account token when the same TDK is used. The tokenizing function may also prevent, absent the TDK, recovery of the account identifier from the account token.","In example embodiments, the TDK assigned to merchant computer  is securely housed in the payment processing network , and is not communicated or otherwise known to external parties. However, if the TDK is somehow compromised for a specific merchant (e.g., the merchant associated with merchant computer ), the payment processing network  may generate a new TDK for the specific merchant and link the generated TDK with a TDK index. In an example embodiment of the invention, the first generated TDK may be linked with a beginning index (e.g., zero or one) and each successive TDK index generated by the payment processing network may be incremented by a determinable number, such as one. Thus, the TDK index linked to the merchant's original TDK may have the value of zero, the second TDK may be linked with a TDK index with a value of one, the third TDK may be linked with a TDK index with a value of two, and so on.","In other embodiments of the invention, the TDK index is a hidden index. Examples of hidden indexes are numbers produced by a random number function or indexes that are otherwise hidden. For example, the payment processing network  may apply such incremental indices described above to a hash function or decryption algorithm. An advantage of using a hidden index is that it provides an additional level of separation to the tokenization scheme. This is because hidden indices hide the relationship between prior and later indices. To illustrate, in an incrementing scheme without hidden indices, a fraudster may observe that two frequently occurring account tokens may represent the same underlying account identifier if the ending of occurrences of one of the account tokens coincides with the beginning of occurrences of the other and if the TDK indices for the two account tokens are one off from each other.","The payment processing network  may log the TDK index for every transaction. In this way, for each transaction, the payment processing network  may determine the token derivation key used to generate the account token regardless of subsequent token derivation key changes. As shown in , a TDK index may be sent to the tokenization module  (see message M).","Message M is an authorization request message that is sent to an issuer computer . With reference to , this is shown as step S. In the typical case, an issuer computer  performs its functions by using an account identifier and, as a result, may not have a use for an account token. In such cases, the tokenization server  can send message M independent of when the token derivation key is selected and the account token is generated. Accordingly, the steps of generating an account token can operate in parallel with the steps of sending an authorization request message M to issuer computer  and receiving authorization response message from the issuer. This is shown in  as steps S and S are performed as part of a separate path than steps S and S.","When an authorization response message is received from the issuer computer  (step S), the tokenization server  may embed the account token and the optional token derivation key index in the authorization response message M. This embedding is shown as message M.","If authorized, the payment processing network  may return the account token and the TDK index (if utilized by the payment processing network ) to the acquirer computer  and\/or merchant computer  in specified fields of the authorization response message M. This is shown in  as steps S. As described above, the payment processing network  may also log the account token and the TDK index for the corresponding transaction.","After the acquirer computer  receives the authorization response message M, the acquirer computer  may then send the authorization response message M to the merchant computer  to be stored in token database . This is shown in  as step S.","The payment processing network optionally provides the ability for the merchant computer  to use the account tokens to request the account identifiers to be sent back to the merchant computer . Via a mechanism (e.g., batch, online, remote web interfaces, etc.) the merchant computer  can submit the MVV, TDK index, and associated account token(s). The payment processing network  can then recover the original card account identifiers for secure transmission back to the merchant if the payment processing network  logged the transaction information.","An additional advantage of the embodiments is that it allows a comparatively efficient method and system to provide merchants and\/merchant acquirers account tokens. In particular, once a merchant is registered, embodiments do not require separate or additional requests for tokenization. Instead, the payment processing network automatically provides an account token as part of the authorization process. Further, because the payment processing network utilizes the MVV and account identifier stored in the authentication request message (e.g., as stored in field 2 and field 62.20, respectively), embodiments may result in little, if any, changes to how authentication request messages are presently generated.","C. Multiple Merchants","As described above, the tokenization process communicates account tokens between the merchants and the payment processing network  as part of an authorization request and response.  are block diagrams that show an exemplary embodiment that receives an authorization request message, generates an account token in response to receiving the authorization request message, and then inserts the generated account token in an authorization response message that is sent back to the merchant. In particular,  highlight, among other things, how embodiments of the present invention can generate, for a single account identifier, account tokens that vary across different merchants but are consistent for the same merchant.","In particular,  shows merchant computer  sending an authorization request message M to the payment processing network . Authorization request message M can be an authorization request message sent in response to consumer  swiping a credit card at the merchant's access device . Alternatively, message M can be an authorization request message received by the tokenization server  when consumer  makes an Internet purchase from the merchant's web site. In any case, the authorization request message M can include transaction data, such as information derived from the card (e.g., the account identifier M()), the terminal (e.g., the merchant verification value M()), the transaction (e.g., the amount M()), together with other data which may be generated dynamically or added by intervening systems (e.g., the header M()). Although  shows the merchant computer  sending authorization request message M to the tokenization server , such messages can be sent through an acquirer computer , as is described above.","In some embodiments, authorization request message M can be in the form of an ISO (International Organization for Standardization) 8583 message. In other embodiments, authorization request message M can take the form of a web based call to a web service offered by the tokenization server . For example, the authorization request message M can be in the form of an XML message.","Once the tokenization server  receives the authorization request message M, the authorization request module  can validate the authorization request message M and then can route the authorization request message M to the issuer computer  in the form of authorization request message M.  shows that much of the information found in authorization request message M is also included in authorization request message M. Although not shown, authorization request message M can include additional information, according to some embodiments. For example, some embodiments can include routing information that describe the payments systems that have received the authorization request message.","In addition to verifying the authorization request message M and routing authorization request message M to issuer computer , the tokenization server  can also generate an account token for the account identifier associated with the authorization request message M. The steps for generating the account token for the account identifier associated with the authorization request message M can begin before the tokenization server  receives an authorization response message M.  shows that authorization request message M, or some portion thereof, is received by the tokenization module . Once the tokenization module  receives authorization request message M, the tokenization module  can search for the token derivation key associated with the merchant using the MVV of the authorization request message. For example,  shows that the value of the MVV of authorization request message M is \u20181001001\u2019. The tokenization module  then can search the TDK database  for a token derivation key associated with \u20181001001\u2019. According to , the TDK associated with \u20181001001\u2019 is \u2018TDKA\u2019. Accordingly, the tokenization module  can access the TDK database  to retrieve the appropriate token derivation key associated with merchant computer .","After the tokenization module  retrieves the token derivation key associated with the MVV, the tokenization module  can generate the account token for the account identifier of the authorization request message M. As described above, the tokenization module  can use a variety of methods for generating account tokens. In one embodiment, the tokenization module  applies a symmetric encryption algorithm to the account identifier. The token derivation key associated with the MVV can be used as the key for the symmetric encryption algorithm.","The generated account token is then sent to and received by the authorization response module. This is shown as message M.","Upon receiving the authorization request message M, the issuer computer  can analyze the authorization request message M and make a determination on whether the transaction should be authorized or not. If the issuer  verifies that the transaction can proceed, the issuer  can send an authorization response message to the payment processing network . This is shown as authorization response message M.",{"@attributes":{"id":"p-0104","num":"0103"},"figref":"FIG. 4","b":["403","406","224","226","230","224","403","406","403","406","224","408","120"]},"Authorization response message M can be in any form. In some embodiments, authorization response message M generally takes the form of an ISO 8583 message with account token embedded in the fields. The authorization response message M may include a header M() that indicates that the message is an authorization response message and a response code M() to indicate whether the authorization request is authorized or denied. As described above, these are fields generally provided by the authorization response message M sent by the issuer computer . It should be noted that the indication that the message is an authorization request message or an authorization response message need not be included in headers () and (), respectively. For example, as described below with respect to , the messages may include a message type field  that specifies the message class and category of function. Returning to , the authorization response module  can embed the account token in field M() of the authorization response message M that is sent to the merchant computer . In some embodiments, as described below, the authorization response module  can also embed a token derivation key index in the authorization response message M that is sent to the merchant  computer.","As is described in greater detail below, with reference to , the format of an authorization response message storing an account token can vary according embodiments of the present invention.","After the authorization response module  sends the authorization response message M, the authorization response message M can be received by the merchant computer . Although not shown in , the merchant computer  can receive the authorization response message M via the acquirer computer . The merchant computer  can then store the account token , as well as other transaction data, in analytics database . The analytics database  does not include any indication of the account identifier used in the transaction, according to example embodiments.","If at some later point in time, the consumer  makes another purchase at merchant  with the portable consumer device , the tokenization server  may generate an account token with the same value as the sent in authorization response message M. That is, the merchant  may receive another account token with the value ABCDE.","However, if at some later point in time, the consumer  makes another purchase with the portable consumer device  at a different merchant, the tokenization server  may generate an account token with a different value. For example,  shows another payment transaction processed by the tokenization server . As shown in , authorization response messages M, M involve transactions using the same account identifier used in . In particular, account \u201812345\u2019 is used to make a purchase at a merchant. However, the payment transaction involves a different merchant than the one used in . This is shown in the merchant verification value of the authorization requests M, M, where the merchant verification value involved in the transaction is \u20182003004\u2019.","In comparison to the payment transaction processed in , the tokenization module  may receive the merchant verification value of \u20182003004\u2019 contained in the authorization request message M. Using the merchant verification value, the tokenization module  can retrieve token derivation key B from the TDK database . The tokenization module  may then use the token derivation key B to generate the account token for the account identifier stored in the authorization request message M. The tokenization module  can then send the generated account token to the authorization response module  to generate an authorization response message M that is sent to merchant . It is to be noted that the token () may differ from the token generated for merchant computer . In turn the merchant  can store the account token  in analytics database . Later, the merchant  can use the account token  to perform analytics or supplementary processing.","D. Authorization Response Message Formats","As described above, an authorization response message can include an account token that is generated based on an account identifier and a merchant verification value. As is further described above, the account token can be embedded in the authorization response message in any number of ways. For example,  are diagrams that show different ways an account token can be embedded in the authorization response message. In particular,  is a diagram showing an authorization response message that stores an account token in a field of the authorization response message. As shown in , the authorization response message can include a message header filed , a message type field , a bit map field , and a number of data fields .","The message header field  can contain basic message identifiers and routing information along with message processing control codes and flags.","The message type field  can specify the message class and the category of function. For example, a message type field  value of \u20180110\u2019 can indicate an authorization response message.","The bit map field  can specify which data fields are in an authorization response message. For example, a first bit in the bit map field  may indicate if a first type of data field is present in the data fields , a second bit in the bit map field  may indicate if a second type of data field is present in the data fields , and a nth bit in the bit map field  may indicate if a nth type of data field is present in the data fields . A bit map field can be of any size. In example embodiments, a bit map field is a 64-bit field.","The data fields  can include any number fields used to process a message. For example, some fields may indicate a response code (e.g., whether a payment request is authorized or rejected). In particular, the data fields  can include an account token field . The account token field  can store the account token corresponding to an account identifier sent via a corresponding authorization request message. It is to be noted that when an account token field is present in the authorization response message, an appropriate bit in the bit map field  can be set.","Alternatively, an authorization response message can include a token derivation key index associated with the token derivation key used to generate the account token. As described above, providing a token derivation key index to the merchant computer allows the merchant computer to request the tokenization server  to return back the account identifier associated with the account token.  are diagrams showing authorization response messages , , that store a token derivation key index. For example, as shown in , an account token and a token derivation key index can be stored in single data field  as sub-fields ,  of authorization response message . According to some embodiments, sub-fields ,  can be of predetermined length. Alternatively, as shown in , the account token and token derivation key index can be stored in a single data field  of authorization response message but may include a separation symbol  to indicate where within data field  the account token ends and the index begins (or vice versa). Although the separation symbol  is shown to be a \u2018\/\u2019, it is to be appreciated that any other suitable symbol can be used. Using a separation symbol allows for variable length account tokens and token derivation indexes. Still further, in other embodiments, as shown in , the account token and token derivation key index can be stored in separate data fields ,  of the authorization response message . Accordingly, the bit map field  of the authorization response message may include a first indication that the account token field  is present and a second indication that the token derivation key index data field  is present.",{"@attributes":{"id":"p-0117","num":"0116"},"figref":["FIGS. 6A-D","FIG. 6E","FIGS. 6A-D","FIG. 6E"],"b":["652","652","651","653","654","653","654","655","651"]},{"@attributes":{"id":"p-0118","num":"0117"},"figref":"FIG. 6E"},"V. Account Identifier Substitution for Support Systems","Section IV describes techniques for communicating account tokens to a merchant computer. Such account tokens can be sent to the merchant computer during the authorization of a payment request, for example, in an authorization response message sent from the tokenization server to the merchant computer via an acquirer computer. In addition to communicating account tokens to a merchant, a tokenization server may also communicate with a number of support systems. Such support systems, as described above, may perform primary and auxiliary functions involved with authorizing, settling, and clearing transactions. The support systems may reside within a payment processing network or as an external partner that is in operative communication with the payment processing network. This section now describes methods, systems, and apparatuses for communicating an account token to these support systems.","A. System for Providing Account Tokens to a Support System",{"@attributes":{"id":"p-0120","num":"0119"},"figref":"FIG. 9","b":["900","140","130"]},"In embodiments of the invention, the payment processing network  may be in further operative communication with a support computer . The support computer  may perform supporting functions for the payment processing network  via support modules  and . An example of a supporting function is scoring a transaction for fraud.","As an illustration of the interaction between the payment processing network  and the support computer , a payment transaction is initiated by the acquirer computer  when a consumer  conducts a transaction with a merchant associated with merchant computer  via the access device . As described above, the acquirer computer , for example, may be operated by a banking institution that oversees an account associated with the merchant. The acquirer computer  may transmit an authorization request message to the payment processing network  and the authorization request message may be received by the tokenization server . In turn, the tokenization server  may transmit at least some portion of the authorization request message to other systems. For example, the tokenization server  may transmit the account identifier to supporting module . Further, the account identifier may be communicated to the support module  of the support computer .","Although the payment processing network  may need the account identifier for any number of reasons, such as moving money, checking status, and reporting, some of the support computers may not. For example, a support computer may only use the account identifier as an identifier or unique index. Exacerbating security risks associated with the use of account identifiers, these support computers may store the account identifier in various databases, problem logs, dump logs, core dumps, and other similar memory storages and data structures. Thus not only is the account identifier potentially exposed to fraudsters when the account identifier is transmitted between different systems but there is also a risk that a fraudster may obtain the account identifiers by hacking into these support computer, even long after the transaction has been conducted. Accordingly, the payment processing network  may improve security of an account identifier by communicating account tokens rather than account identifier, where possible.","As shown in , the acquirer computer  may communicate the account identifier to the payment processing network . In particular, the tokenization server  may receive a primary account number . If the tokenization server  determines that the primary account number is new to the tokenization server , the tokenization server  may generate an account token of the account identifier. Otherwise, the tokenization server  can use the account token previously generated for the account identifier. The account token can be used to identify an account, account identifier, and\/or a transaction. The account token may include card characteristics or, in some example embodiments, the card characteristics may be data distinguishable from the account token. The tokenization server  may then store the generated account token and, if present, the associated card characteristics. In some embodiments, the characteristics are updated as a change is noticed or periodically refreshed.","Once the tokenization server  generates or identifies the account token associated with the primary account number , the tokenization server  may communicate the account token to the support modules that do not require the account identifier (e.g., primary account number ).","As part of the process of determining whether a support system requires an account identifier, the tokenization server  may query support system database  (see ) to determine whether the account identifier is required for a specified support system. In such an embodiment, the tokenization server  may lookup the support system according to a support system verification value assigned to the support module when the support module is enrolled with the tokenization server . For example, support system database  may indicate that the support module  requires an account identifier while the support module  does not require an account identifier or can accept an account token in lieu of a account identifier. Accordingly, after making the determination, the tokenization server  will transmit the account identifier to support module  and an account token to support module . A similar process can be used for the support modules ,  residing on the support computer .","Alternatively, whether or not a support module requires an account identifier or can instead accept an account token may be determined by manual configuration (e.g., input received by an administrator of the payment processing network ) or via an application programming interface (API) of the support computer  that may allow the tokenization server  to interrogate the various support modules ,  as to their requirements as it relates to receiving an account identifier or an account token.","Embodiments of the invention provide numerous advantages in the development of secure data centers. In particular, embodiments of the invention enable the development of comparatively more secure transactions that transmit an account identifier. Embodiments of the invention can provide such results because they utilize an account token rather than sensitive data, such as the account identifier. Specifically, embodiments of the invention generate account token data that is associated with a account identifier and then communicate the account token data rather than the account identifier to the various support systems. Use of the account token data reduces the risks of communicating the account identifier to various support systems as well as storing sensitive data within such systems.","B. Method for Providing Account Tokens to a Support System",{"@attributes":{"id":"p-0129","num":"0128"},"figref":"FIG. 10","b":["1000","1000","220","140","160"]},"The method  may begin by enrolling a support module with the tokenization server . This is shown as step S. A support module may be running within the payment processing network  (e.g., support modules , ) or within a support computer  that operates external and independent of the payment processing network  (e.g., support modules , ). Enrolling a support module can involve, in some embodiments, communicatively connecting the support module to the tokenization server. For example, the support computer may offer the support module as a web service. In such cases, the tokenization server  (or the payment processing network  in general) and the support computer  may communicate using an APIs defined by each entity. Alternatively, the support modules may be deployed by the system administrator of the payment processing network . In such cases, the support module may be deployed wholly within the payment processing network , external to the payment processing network , or some combination thereof. The enrollment process, whether offered as a web service or as a deployed system, may indicate whether the support module is to receive an account identifier or an account token in later communications. Such information may be stored in the support system database  (see ) or may be accessible via an interface provided by the support module.","Once enrolled, the tokenization server  may receive a payment message. This is shown as step S. As used herein, a \u201cpayment message\u201d can refer to either an authorization request message or an authorization response message, which are described above.","After receiving the payment message, the tokenization server  may determine if a support module can receive an account token. This is shown as step S. The tokenization server  can determine if the support module can receive an account token using the information received when the support module was enrolled with the tokenization server . For example, the tokenization server  may access support system database  to determine whether a specific support module can receive an account token.","Step S is a decision point on whether the support module can receive an account token, as is determined in step S. If yes, step S is then performed. Otherwise, step S is performed.","Step S involves generating an account token from the account identifier included in the payment message (see step S). The tokenization server  may generate an account token for the account identifier using any of the methods or techniques described above. For example, the tokenization server  may encrypt the account identifier using any suitable encryption method. In some embodiments, a single token derivation key is used for tokenizing account identifiers for all support modules. In other embodiments, each support module, or a group of support modules, is assigned a specific token derivation key that is used to generate the account token. As described above, assigning different token derivation keys to different support modules can add an additional level of security among the different support modules.","After the account token is generated, the tokenization server  can then transmit an external request message to the support module, wherein the external request message includes the account token. This is shown as step S. As used herein, an \u201cexternal request message\u201d can refer to a message that is sent to the support module that causes the support module to provide its supporting function. In some embodiments, the external request message is sent according to an API provided by the support module. For example, the support module can provide a SOAP (Simple Object Access Protocol) procedure that can be used to receive and transmit information from and to the tokenization server . The SOAP procedure may then provide an implementation of a web service provided by the support module. XML can be used to define the message formats for the messages sent between the support module and the tokenization server . Again, examples of such procedures may relate to scoring a transaction for fraud, generating alerts to a customer or merchant, reporting, etc.","As described above, if the support module can not receive an account token based on decision step S, step S is then performed. According to step S, the tokenization server  transmits an external request message to the support module with the account identifier. Such an external request message can be sent according the techniques described above, as it relates to step S.","After the external request message is sent to the support module, the tokenization server  can receive an external response message from the support module. This is shown as step S. As used herein, an \u201cexternal response message\u201d can refer to a message that is sent back to the tokenization server  from the support module in response to processing the external request message. In some embodiments, the external response message is a response message sent according to a SOAP procedure call. XML can be used to define the message format of the external response message. The external response message can include an indication of the web service initiated by the external request message. For example, the external response message can include a field that indicates whether the support function completed successfully or can include specific information, such as the fraud score of a transaction.","After receiving the external response message, the tokenization server  can send a payment message. This is shown as step S. As described above, a payment message can be an authorization request message. For example, the tokenization server  may have sent the external request message to a fraud scoring system in step S. In response to receiving the fraud score in the external response message in step S, the tokenization server  can forward an authorization request message with the fraud score to the issuer computer . The issuer computer  can then process the authorization request message and use the fraud score to determine whether the transaction is authorized.","Alternatively, also described above, a payment message can be an authorization response message. For example, the tokenization server  may have sent the external request message to a reporting system that can generate reports of transaction histories based on a number of categories. Because the reporting system is not used by the issuer computer  as it relates to determining whether a transaction is authorized, the tokenization server  can send the external request message after the tokenization server  receives the authorization response (e.g., in step S). Accordingly, the payment message involved in step S is an authorization response message that may be sent back to the acquirer computer.","Whether the payment message is an authorization request message or an authorization response message, the payment message may include external system data. As used herein, \u201cexternal system data\u201d can refer to any information obtained from the support module that is to be communicated to an external entity, such as a merchant computer or an issuer computer. For example, external system data can refer to an offer or reward that a consumer obtains after a predetermined number of purchases at a store. As another example, external system data can refer to a risk score that is sent to an issuer so that the issuer can determine whether to authorize the payment request.","Step S can also include determining the account identifier from the account token stored in the external system data. This step may allow the tokenization server  to route the payment message to the appropriate merchant computer, for example.","It is to be noted that the timing of when the various steps of the method  are performed may vary according to example embodiments. For example, in some embodiments the authorization process operates independent of the function performed by the support module. In such cases, steps S and S can be performed in any order. Such may be the case where the support module merely logs transactions, for example.","VI. Provisioning Account Tokens for Merchant Support Systems",{"@attributes":{"id":"p-0143","num":"0142"},"figref":["FIGS. 3, 4, 5, 6A","FIGS. 9 and 10"],"b":"7"},"Although not yet discussed, a merchant may wish to communicate its merchant specific account tokens to a support system. To illustrate, a merchant computer can use a third-party to provide risk analysis services. Accordingly, when a merchant receives an authorization response message with an account token from a payment processing network, the merchant can then send the authorization response message, or portions thereof, to the third-party service provider for further processing. Communicating the account token to the third-party service provider is comparatively secure because the account token can not be used to conduct a transaction. When the third-party service provider receives the account token, it can, for example, compare the account token against a database that stores high risk account tokens and report a risk score back to the merchant.","In order to provide improved risk analysis, it may be desirable for the third-party service provider to compare account tokens it receives from one merchant against account tokens it receives from another merchant. However, as described above, the account tokens that the payment processing network sends to the merchants are specific to that merchant. That is, for a given account identifier, the account token generated for one merchant is going to be different than the account token generated for another merchant. As a result, the third-party service provider will be unable to determine if a first account token from a first merchant and a second account token from a second merchant are associated with the same underlying account identifier. This example illustrates the difficulty of analyzing account tokens across different merchants.",{"@attributes":{"id":"p-0146","num":"0145"},"figref":"FIGS. 11 and 12"},"To begin,  is a block diagram that shows a system  that includes merchants , , a merchant support server , and the tokenization server . As shown, merchants ,  may each store account token data in their respective account token databases, , . Such account tokens can be obtained using the techniques described above. As a result, the account token databases ,  may each store merchant specific account token sets (), (). For simplicity of illustration, account token databases , , as shown in , can store account tokens for each transaction. However, in other embodiments, additional information can be stored, such as a token derivation key index, and other transaction data, such as time of day, date, location, MVV, merchant category, etc.",{"@attributes":{"id":"p-0148","num":"0147"},"figref":"FIG. 11","b":["126","1","3","127","4","6","126","127","1","6"],"i":["a","a"]},"To enable the merchant support server  to analyze the merchant specific account tokens (), the merchants  may send message MA to the merchant support server . Message MA can include the merchant verification value associated with merchant computer , one or more of the merchant specific account tokens (), and any other transaction data. Message MA can be sent to the merchant support server  in response to receiving an authorization response message from the payment processing network . Such may be the case when the merchant support server  is involved in the authorization process. Alternatively, the merchant computer  may send message MA as part of a batch processes that runs periodically or at set times.","Similarly, merchant  can send message MB to the merchant support server  to communicate its merchant specific account tokens () to the merchant support server .","When the merchant support server  receives messages MA and\/or MB, the merchant support server  may send a normalization request message M to the tokenization server .  shows that the normalization request message M can include multiple verification values. For example, the normalization request message M can include a verification value associated with the merchant support server  (e.g., SSVV). The tokenization server  can use the verification value associated with the merchant support system  to identify the requester of the normalization request. Further,  shows that the normalization request message M can include a merchant verification value associated with a merchant (e.g., MVV or MVV) and merchant specific account tokens.","Once the tokenization server  receives the normalization request message M, the tokenization server  can authorize the request to normalize the account token. In one embodiment, prior to sending message MA, merchant  can register the merchant support server  as a trusted support system. In this case, the tokenization server  can store this relationship in the support system database . Accordingly, in one embodiment, the tokenization server  can search the support system database  using the merchant verification value assigned to the merchant to determine whether the merchant previously registered the merchant support server  as a trusted support system. Alternatively, in another embodiment, the tokenization server  can search the support system database  using the verification value of the merchant support server  to determine whether the merchant previously registered the merchant support server as a trusted support system.","After the tokenization server  determines that the merchant support server  is authorized to normalize the account token data, the tokenization server  can reverse tokenize the merchant specific account tokens to obtain the account identifier. In an example embodiment, the normalization module  (see ) can normalize the account tokens. For example, with regard to merchant , the normalization module  can use the merchant verification value of the merchant  (e.g., MVV) to search the TDK database  to find the token derivation key associated with merchant . Once the appropriate token derivation key is located, the normalization module  can then reverse tokenize the account token using the token derivation key assigned to merchant . This process is appropriate for those embodiments that use symmetric derivation keys. For embodiments that use asymmetric derivation keys, the TDK database  may store a token reverse key, which is similarly associated with the merchant verification value. Accordingly, rather than reverse tokenizing the account token with the token derivation key, the normalization module  can reverse tokenize the account token into the account identifier with the token reverse key. Whether a token derivation key is symmetric or asymmetric, a token derivation key index may also be required to reverse tokenize the account token.","The above described approach can be used with respect to any other merchant, such as merchant , and the other merchant's account tokens.","Once the normalization module  transforms the account tokens back to the underlying account identifiers, the normalization module  then searches the TDK database  for the token derivation key assigned to the merchant support system . With the token derivation key assigned to the merchant support system , the normalization module  can then generate new account tokens of the account identifiers. This new set of account tokens can be referred to as normalized account tokens.","After the normalization module  generates the normalized account tokens, the tokenization server  then sends the normalized account tokens to the merchant support server . This is shown as message M, as a normalization response message. The merchant support server  can store the normalized account tokens in the normalized account token database . As shown in , the normalized account token database  stores normalized account tokens () that correspond to the six transactions in the merchant account token databases , . However, rather than linking the six transaction with the merchant specific account token (e.g., () and ()), the transactions are linked to the normalized account tokens ().","As  shows, the normalized account tokens () provides additional insight into the six transactions conducted by merchants , . For example, as described above, a comparison of merchant specific account tokens (), () does not indicate that transactions  and  were conducted with the same account identifier because the respective account tokens differ (e.g., \u201812345\u2019 and \u2018ABCD\u2019, respectively). However, based on the normalized account tokens (), it is clear that transaction  and transaction  were conducted with the same account identifier because both transactions involve the same normalized account token, (i.e., \u201854321\u2019). Further, after normalization, the normalized account tokens () stored in the normalized account token database  indicate that the six transactions are actually conducted with only two different account identifiers.","The normalization approach described above provides a number of additional advantages. For example, because systems external to the payment processing network store account tokens rather than account identifiers, these systems do not have to provide costly safety systems to ensure they comply with various security standards. In particular, the merchant support server  can be completely shielded from receiving or even communicating account identifiers.","The approach described with respect to  may be well suited for situations that involve batch processing. For example, the merchant support system  may provide a rewards program across merchants. As such, its support function may be run nightly, weekly, monthly, etc. However, because the technique described in context with  involves additional messages communicated between a merchant support system  and the tokenization server , such an approach may not be appropriate if the merchant needs a real time response, such as a fraud alert.",{"@attributes":{"id":"p-0160","num":"0159"},"figref":["FIG. 12","FIG. 12"],"b":["1102","1100","1200","1102"]},"In some embodiments, before the tokenization server  can provide a normalized account token for account identifiers involved in transactions with merchant , merchant  may enroll the merchant support server  as a support system of merchant . This is shown as message MA. Message MA can include the merchant verification value of the merchant  and a support system verification value for the merchant support server . For example, merchant  may be assigned the merchant verification value \u2018MVV\u2019 and the third party support system  can be assigned the support system verification value \u2018SSVV\u2019. When a merchant enrolls a merchant support server as a service system of the merchant, the tokenization server  creates an association between the verification value of the merchant and the verification value of the merchant support server . As shown in , record  of normalization database  may link various information used to tokenize account identifiers for merchant computer . For example, the merchant verification value (e.g., \u2018MVV\u2019) assigned to the merchant computer  can be linked to token derivation key (e.g., \u2018Key A\u2019) assigned to merchant . Further, after enrolling the merchant support server  as a support system of the merchant , the record  may include a support system verification value (e.g., \u2018SSVV\u2019) assigned to the merchant support server .","The record  may include various information used to transform the account identifiers into a normalized account token. For example, the support system verification value (e.g., SSVV) can be linked to a token derivation key (e.g., Key C) that is used to tokenize account identifiers in a format specific to the merchant support server . Records ,  can be indexed by any suitable field, such as merchant or support system verification value.","Although  shows database  storing the associations between the merchant verification values, support system verification values, and token derivation keys, it is to be appreciated that any combination of the databases , , and  (see ) can be used to store such information.","Merchant  can enroll the merchant support server  as a support system in a similar manner.","Once the merchant support server  is enrolled as a support system for the merchants, merchant  can send an authorization request message to the tokenization server  in the typical fashion, as may occur when a consumer swipes their credit card at a POS terminal. This is shown as message MA. The authorization request message can include information shown in . For example, the authorization request message may include the merchant verification value assigned to merchant  and an account identifier. Upon receiving the authorization request message MA, the tokenization server  can process the transaction as described above. That is, the authorization request MA can be received by the authorization request module . The authorization request module  can then forward the authorization request message to the issuer computer  of the portable consumer device . In parallel, while the authorization request message is received by the authorization processing module , the tokenization module  can receive the account identifier and merchant verification value stored in the authorization request message. Using the merchant verification value, the tokenization module  may identify the token derivation key assigned to the merchant and then generates an account token using the token derivation key.","Additionally, the tokenization module  can use the merchant verification value to determine that the merchant support server  is enrolled as a support system for the merchant . For example, the normalization module  can use the merchant verification value sent in the authorization request message to search database  for a record associated with the merchant. For example, record  can be indexed by the merchant verification value, in which case the normalization module would match record  with the merchant verification value \u2018MVV\u2019 sent in the authorization request message. The normalization module  can then search record  for an indication that the merchant has enrolled merchant support server  as a support system.  shows that record  includes the support system verification value assigned to the merchant support server  (i.e., SSVV). As described above, this indicates that the merchant  has enrolled the merchant support server  as a support system.","After determining that the merchant support server  is a support system for merchant computer , the tokenization module  can generate an additional account token using the token derivation key assigned to the merchant support server. This can be done by passing the support system verification value assigned to the merchant support server  and the account identifier sent in the authorization request message to the tokenization module . When the tokenization module  receives the account identifier and the support system verification value \u2018SSVV\u2019, it can search normalization database  for the token derivation key assigned to the merchant support server . For example, the tokenization module  can obtain the token derivation key assigned to the support system by matching record  with the support system verification value stored in record  (i.e., \u2018SSVV\u2019), for example. After the tokenization module  locates the record associated with the merchant support server , the tokenization module  can generate a second account token of the account identifier sent in the authorization request message using the token derivation key assigned to the merchant support server .","After the tokenization module  generates the account token based on the token derivation key assigned to the merchant  and the account token based on the token derivation key assigned to the merchant support server, the tokenization server  can send the account tokens to the merchant . This is shown as message MA. For example, as explained above, the account token based on the merchant's  token derivation key can be inserted in an authorization response message. Further, the account token based on the token derivation key assigned to the merchant support server  can similarly be inserted in the authorization response message.","When the merchant  receives the authorization response message MA, the merchant can then store the account token based on the token derivation key assigned to the merchant in token database .  shows that account token database  stores the account tokens for transactions T-T. In addition to storing the account token based on the token derivation key assigned to the merchant , the merchant  can also send the account token based on the token derivation key assigned to the merchant support server  to the merchant support server for further processing. For example, the merchant support server  can be configured to assign a risk score to a transaction. In this way, message A can be part of an authorization process used by the merchant .","The techniques described above can be used by the merchant . For example, merchant  can: register the merchant support server  as a support system (MB); send an authorization request message (MB), receive an authorization response message that includes an account token based on the token derivation key assigned to merchant  and a key based on the token derivation key assigned to the merchant support server (MB), store the account token based on the token derivation key assigned to the merchant  (as shown by the merchant specific account tokens () stored in account token database ), and send the account token based on the token derivation key assigned to the merchant support server  (MB).","Further, the technique of generating account tokens in response to authorization request messages and sending the account tokens in authorization response messages can be repeated for one or more transactions. For example, as  shows, as was shown in , merchant  may store merchant specific account tokens () corresponding to three transactions, while merchant  may store merchant specific account tokens corresponding to three additional transactions. Similar to , collectively, the merchant specific account tokens (), () provide relatively little information regarding the combined transactions. However, as shown in the merchant support server , the normalized account tokens () stored normalized database  illustrate that transaction  and transaction  actually involve the same underlying account identifier.","However, unlike the embodiments described with reference to , embodiments according to  provide an improved technique for providing normalized account tokens if the normalization tokens are to be analyzed in real-time. Such is the case because the normalized account tokens are generated by the tokenization server when the tokenization server receives an authorization request message. As such, the normalized account tokens can be generated in parallel to the processing of the merchant specific account token and in parallel to the issuer processing the authorization request message.","VII. Exemplary Computer Apparatuses",{"@attributes":{"id":"p-0173","num":"0172"},"figref":"FIG. 8"},"Any of the elements in figures described herein can use any suitable number of subsystems to facilitate the functions described herein. System  in  is representative of a computer system capable of embodying various aspects of the present invention. The computer system can be present in any of the elements in figures described herein, including payment processing network , for example. Similarly, the various participants, entities and elements in  may operate one or more computer apparatuses to facilitate the functions described herein. It will be readily apparent to one of ordinary skill in the art that many other hardware and software configurations are suitable for use with the present invention.","For example, the computer may be a desktop, portable, rack-mounted or tablet configuration. Additionally, the computer may be a series of networked computers. Further, the use of other micro processors are contemplated, such as Xeon\u2122, Pentium\u2122 or Core\u2122 microprocessors; Turion\u2122 64, Opteron\u2122 or Athlon\u2122 microprocessors from Advanced Micro Devices, Inc; and the like. Further, other types of operating systems are contemplated, such as Windows\u00ae, WindowsXP\u00ae, WindowsNT\u00ae, or the like from Microsoft Corporation, Solaris from Sun Microsystems, LINUX, UNIX, and the like. In still other embodiments, the techniques described above may be implemented upon a chip or an auxiliary processing board. Various embodiments may be based upon systems provided by daVinci, Pandora, Silicon Color, or other vendors.","In one embodiment, computer system  typically includes a monitor , computer , a keyboard , a user input device , network interface , and the like. In various embodiments, monitor  may be embodied as a CRT display, an LCD display, a plasma display, a direct-projection or rear-projection DLP, a microdisplay, or the like. In various embodiments, display  may be used to display user interfaces and rendered images.","In various embodiments, user input device  is typically embodied as a computer mouse, a trackball, a track pad, a joystick, wireless remote, drawing tablet, voice command system, and the like. User input device  typically allows a user to select objects, icons, text and the like that appear on the display  via a command such as a click of a button or the like. An additional specialized user input device , such a magnetic stripe, RFID transceiver or smart card reader may also be provided in various embodiments. In other embodiments, user input device  include additional computer system displays (e.g. multiple monitors). Further user input device  may be implemented as one or more graphical user interfaces on such a display.","Embodiments of network interface  typically include an Ethernet card, a modem (telephone, satellite, cable, ISDN), (asynchronous) digital subscriber line (DSL) unit, FireWire interface, USB interface, and the like. For example, network interface  may be coupled to a computer network, to a FireWire bus, or the like. In other embodiments, network interface  may be physically integrated on the motherboard of computer, may be a software program, such as soft DSL, or the like.","RAM  and disk drive  are examples of computer-readable tangible media configured to store data such user, account and transaction level data, calculated aggregated data, super keys, sub keys and other executable computer code, human readable code, or the like. Other types of tangible media include magnetic storage media such as floppy disks, networked hard disks, or removable hard disks; optical storage media such as CD-ROMS, DVDs, holographic memories, or bar codes; semiconductor media such as flash memories, read-only-memories (ROMS); battery-backed volatile memories; networked storage devices, and the like.","In the present embodiment, computer system  may also include software that enables communications over a network such as the HTTP, TCP\/IP, RTP\/RTSP protocols, and the like. In alternative embodiments of the present invention, other communications software and transfer protocols may also be used, for example IPX, UDP or the like.","In various embodiments, computer  typically includes familiar computer components such as a processor , and memory storage devices, such as a random access memory (RAM) , disk drive , and system bus  interconnecting the above components.","In some embodiments, computer  includes one or more Xeon\u2122 microprocessors from Intel Corporation. Further, in the present embodiment, computer  may include a UNIX-based operating system.","It should be understood that embodiments of the present invention as described above can be implemented in the form of control logic using computer software in a modular or integrated manner. Based on the disclosure and teachings provided herein, a person of ordinary skill in the art will know and appreciate other ways and\/or methods to implement the present invention using hardware and a combination of hardware and software","Any of the software components or functions described in this application, may be implemented as software code to be executed by a processor using any suitable computer language such as, for example, Java, C++ or Perl using, for example, conventional or object-oriented techniques. The software code may be stored as a series of instructions, or commands on a non-transitory computer readable medium, such as a random access memory (RAM), a read only memory (ROM), a magnetic medium such as a hard-drive or a floppy disk, or an optical medium such as a CD-ROM. Any such non-transitory computer readable medium may reside on or within a single computational apparatus, and may be present on or within different computational apparatuses within a system or network.","The above descriptions are illustrative and are not restrictive. Many variations of the invention will become apparent to those skilled in the art upon review of the disclosure. The scope of the invention should, therefore, be determined not with reference to the above description, but instead should be determined with reference to the pending claims along with their full scope or equivalents.","One or more features from any embodiment may be combined with one or more features of any other embodiment without departing from the scope of the invention. For example, any of the above described analytics may be combined with any other suitable analytics in any suitable manner in methods or systems according to embodiments of the invention. Thus, although specific features are separately described in this application, they may be combined in certain embodiments of the invention.","A recitation of \u201ca\u201d, \u201can\u201d or \u201cthe\u201d is intended to mean \u201cone or more\u201d unless specifically indicated to the contrary."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIGS. 6A, 6B, 6C, 6D, and 6E"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
