---
title: Data controls architecture
abstract: Systems and methods for data controls architecture are described. In one aspect, a data source control exposes an interface for generic access to a data store. A data-bound control implements the interface to automatically databind to the data store at an appropriate time during runtime operations of the data-bound control.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07464386&OS=07464386&RS=07464386
owner: Microsoft Corporation
number: 07464386
owner_city: Redmond
owner_country: US
publication_date: 20040517
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION","Exemplary Reusable Data Source Controls","Data Source Views","Declarative Data Source Parameters","CONCLUSION","Appendix A\u2014Exemplary Data Source Control Base Classes","Appendix B\u2014Exemplary Data-Bound Control Classes","Appendix C\u2014Exemplary Data Source Paging","EXAMPLE","SQL Paging Support in SqlDataSource","EXAMPLE","Sorting with SqlDataSource Paging Enabled","EXAMPLE","Sorting in a SQL Stored Procedure","EXAMPLE","DataSourceView Paging Support","EXAMPLE","SqlDataAdapter Fill Method","EXAMPLE","SqlCommand ExecutePagedReader Method","EXAMPLE","SqlDataSource EnableSqlPaging Property","EXAMPLE","SqlDataSource SelectCountCommand Property","EXAMPLE","Paging Data Using GridView","Appendix D\u2014Exemplary Data Source Caching","EXAMPLE","GridView w\/Paging Bound to Cached SqlDataSource Data","EXAMPLE","GridView Bound to Filtered\/Cached SqlDataSource Data","EXAMPLE","Master-Details Report using SQL Cache Invalidation","EXAMPLE","Setting the Cache Duration on a DbDataSource Control","EXAMPLE","Varying Cache Key by User Identity","EXAMPLE","Configuring a SqlCacheDependency for a SqlDataSource Control","EXAMPLE","Defining Multiple SqlCacheInvalidation Table Dependencies","Appendix E\u2014Exemplary Aspects of a Data Object Data Source","EXAMPLE","Simple ObjectDataSource Usage","EXAMPLE","Handling the ObjectCreated and ObjectDisposing Events","EXAMPLE","Handling the ObjectCreating Event","EXAMPLE","Defining Methods for ObjectDataSource Operations","EXAMPLE","Using the ObjectDataSourceMethodAttribute","EXAMPLE","Associating Parameters to ObjectDataSource Methods","EXAMPLE","Setting the DataObjectTypeName Property","EXAMPLE","Modifying Parameter Values from User Code","EXAMPLE","Getting Return Values or Output Parameters from a Method","EXAMPLE","Caching Method Data from ObjectDataSource","EXAMPLE","Filtering Cached Data","EXAMPLE","Using the SortParameterName Property","Appendix F\u2014Exemplary Aspects of an SQL Data Source Control","EXAMPLE","Binding a Stored Procedure Result to a DropDownList","EXAMPLE","Binding to a Parameterized Query","EXAMPLE","Automatic Edit and Delete Capabilities of GridView","EXAMPLE","Inserting Data with DetailsView and SqlDataSource","EXAMPLE","Specifying the Provider Property on SqlDataSource","EXAMPLE","Setting the Cache Duration on a SqlDataSource Control","EXAMPLE","Configuring a SqlCacheDependency for a SqlDataSource Control","EXAMPLE","Defining Multiple SqlCacheInvalidation Table Dependencies","EXAMPLE","GridView Bound to Filtered\/Cached SqlDataSource Data","EXAMPLE","Using the SortParameterName Property","Appendix G\u2014Exemplary Aspects of an XML Data Source Control","EXAMPLE","TreeView Bound to XmlDataSource","EXAMPLE","TreeView Bound to an XmlDataSource","EXAMPLE","TreeView Bound to an XPath Expression Result","EXAMPLE","Binding a GridView to an XmlDataSource","EXAMPLE","Binding a DataList to an XmlDataSource, Using XPathBinder","EXAMPLE","Nested DataLists Bound to an XmlDataSource","EXAMPLE","Master-Details Example Using Parameterized XPath","Appendix H\u2014Exemplary Data Source Control Parameters","Filtering Data with Parameterized Queries","EXAMPLE","Binding to a Parameterized Query","Creating a Master-Details Report Page","EXAMPLE","Creating a Master-Details Page","Inserting, Updating, or Deleting Data Rows","EXAMPLE","Inserting Data to an Access Database","Specifying Parameter Types and Order","EXAMPLE","Specifying the Order of Dynamically Populated Parameters","Output\/Reference Parameters and Return Values","EXAMPLE","Obtaining the Return Value from a DataSource Operation"],"p":["Systems and methods of the invention relate to Web server application development.","Certain technologies and frameworks for developing web applications, such as ASP.NET, use the notion of controls that can be dropped on a design surface to quickly develop the outlines of a web application. The controls are further customized through code written by a developer, setting of properties, etc. One class of controls is data-bound controls which are bound to some backend data source and allow access to stored data, such as in a database. To generate a date-bound control, the developer is responsible for programmatically constructing and assigning the associated data source to the data-bound control, for example, by calling a method to explicitly databind the control at an appropriate time in a web page request lifecycle.","For example, databinding occurs at the request of the page developer. The developer is required to retrieve the data manually in code, assign it to a data source property of a data-bound control, and call a data bind method on it to recreate the control tree based on the new data. Whenever an event happened on the data-bound control, such as paging to the next visible set of data records, the programmer was required to call the data binding method again to refresh the rendering of the control. Similarly, when the user requested a data manipulation operation such as updating a record, the programmer needs to retrieve the new data out of the text entry controls on the page, make the necessary calls to the data store to update the record, and then call the data bind method to refresh the rendering of the control. This requirement on the page developer to manually retrieve data in code and force the data-bound control to synchronize with the data was time-consuming and error-prone. To make matters worse, the page developer is forced to learn the architecture and re-implement specific implementation patterns to achieve consistency with standard controls.","In view of the above, systems and methods to reduce the amount of programming effort and detailed knowledge needed by a developer to implement a data-bound control and databind the data-bound control to a data source, and\/or to leverage other code that has already been written to perform such function(s), are desirable.","Systems and methods for data controls architecture are described. In one aspect, a data source control exposes an interface for generic access to a data store. A data-bound control implements the interface to automatically databind to the data store at an appropriate time during runtime operations of the data-bound control.","Overview","The following systems and methods for data controls architecture provide abstract data source controls that expose an interface generic to substantially all types of tabular and hierarchical data stores, or data sources. More particularly, and as described in greater detail below, the systems and methods for data control architecture provide, for example:\n\n","The systems and methods providing data control architecture are now described in greater detail.","An Exemplary System","Turning to the drawings, wherein like reference numerals refer to like elements, the systems and methods for a data controls architecture are described and shown as being implemented in a suitable computing environment. Although not required, the invention is described in the general context of computer-executable instructions (program modules) being executed by a computing device. Program modules generally include routines, programs, objects, components, data structures, etc., that perform particular tasks or implement particular abstract data types. While the systems and methods are described in the foregoing context, acts and operations described hereinafter may also be implemented in hardware.",{"@attributes":{"id":"p-0015","num":"0020"},"figref":"FIG. 1","b":["100","100","102","104","106","102","106","104"]},"Web server  is coupled to one or more data store(s) \/data source(s). A data store  can host any type of data. In one implementation, for example, a data store  is an SQL component, XML component, a Web Service, a local application component, and\/or so on. In view of this, a data store  may host hierarchical data or non-hierarchical data of any data type, the data type being a function of the particular implementation of the data store .","Web server  includes program modules and program data. Program modules include, for example, designer host , data source control(s) , and data-bound control(s) . At design-time, design host  allows a page developer to create and configure data source control(s) . Data source controls(s)  (e.g., IDataSource or IHierarchicalDataSource control(s), both of which are described in greater detail below in Appendix A) are reusable and configured to connect to an underlying data store  and interface with virtually any type of data that is associated with the data store . Data source control(s)  allows the developer to discover and enable respective capabilities of the underlying data source  by simply setting properties presented to a user by exposed application programming interface (API) . Such properties include, for example, ConnectionString and SelectCommand properties for a database data store . Each data source control  abstracts a specific data type through API  (e.g. IDataSource, IHierarchicalDataSource interface(s)). API  is generic to substantially all types of data store(s) .","Design host  also allows a page developer to add data-bound control(s)  to a document such as a page, and associate data-bound control(s)  to respective data source control(s) . Data-bound controls  do not store data; rather, they display data without retaining data longer than required to create a control tree (e.g., see \u201cother data\u201d ). Data-bound controls  include a grid that shows data in tabular form and a treeview that shows data in a hierarchical form. Other data bound controls  may show relational data or a combination of prior types of data.","To assist a control developer, system  provides base classes for building data-bound controls . Such base classes include, for example, BaseDataBoundControl, the most basic class, provides for setting an associated IDataSource control and view name. BaseDataBoundControl exposes events and methods used by inherited controls to create the control structure at the correct time. DataBoundControl inherits from BaseDataBoundControl and adds functionality unique to displaying tabular data. DataBoundControl connects to and retrieves data directly from the DataSourceView at the right time in the page lifecycle, as well as listening for events on the DataSourceView. HierarchicalDataBoundControl also inherits from BaseDataBoundControl and acts much like DataBoundControl, but connects to hierarchical data. Through these classes, writing a data-bound control  is greatly simplified and substantially prevents common mistakes and performance problems.","Exemplary classes for implementing data bound control(s)  are described below in reference to Appendix B\u2014Exemplary Data-Bound Control Classes.","Data-bound controls  are associated with a data source control  to consume, render, manipulate, and\/or otherwise interface with the underlying data without needing to implement a unique API for each data type being utilized, and without requiring a page developer to write any code. Data-bound controls  are visual controls whose rendering depends on data from a data source control . An exemplary association between a data source control  and a data-bound control  is shown in TABLE 1.",{"@attributes":{"id":"p-0022","num":"0027"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"EXEMPLARY DATA SOURCE ASSOCIATION TO A DATA-BOUND"},{"entry":"CONTROL"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003<form runat=\u201cserver\u201d>"},{"entry":"\u2003\u2003<asp:GridView id=\u201cMyGridView\u201d DataSourceId=\u201cMySource\u201d"},{"entry":"\u2003\u2003runat=\u201cserver\u201d"},{"entry":"\/>"},{"entry":"\u2003\u2003<asp:SqlDataSource id=\u201cMySource\u201d"},{"entry":"\u2003\u2003\u2003ConnectionString=\u201cserver=(local);database=pubs;"},{"entry":"\u2003\u2003\u2003trusted_connection=yes\u201d"},{"entry":"\u2003\u2003\u2003SelectCommand=\u201cselect * from authors\u201d"},{"entry":"\u2003\u2003\u2003runat=\u201cserver\u201d"},{"entry":"\u2003\u2003\/>"},{"entry":"\u2003<\/form>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Once associated with a data-bound control , a data source control  is used to automatically retrieve data from the underlying data store  during a page's execution. For instance, during runtime operations, a data-bound control  automatically binds at an appropriate time to one or more data stores  that underly the associated data source control(s) . In this implementation, data-bound controls  bind to data when they are first rendered, when control properties change the rendering settings, and\/or when their data changes. A control  that inherits from DataBoundControl or HierarchicalDataBoundControl automatically receives this functionality. Data-bound controls (those inheriting from either DataBoundControl or HierarchicalDataBoundControl)  can set a flag telling the control  to bind itself.","In this implementation, at the latest possible time in the page framework, a control  will call DataBind, which will in turn call Select on the DataSourceView. When the data-bound control's callback is called, the control  creates its control hierarchy and renders itself.","In view of the above, data controls architecture  provides a dramatically simplified runtime databinding model as compared to conventional databinding models. In this implementation, if a page developer has opted to call DataBind before the data-bound control  does so automatically, the control  does not call DataBind again, and thereby avoids redundant data retrieval.","At appropriate time(s) a data-bound control  interfaces via API  with the data source control  to perform any type of operation associated with the data store(s) . In one implementation, such operations include, for example, select, sort, page, update, insert, delete operations, and\/or other types of operations. In this manner, a data-bound control  is able to consume data from the data store(s)  and otherwise interface with the data source(s) . In this implementation, certain types of data bound control(s) , such as GridView and DetailsView data bound control(s)  offer automatic paging over data from their associated data source controls , which in turn retrieves data from their data store . Exemplary scenarios and classes for such data paging capable data source controls  are presented below in Appendix C\u2014Exemplary Data Source Paging. Data-bound control(s)  also allow for a data source control developer to offer data store data caching in a simple and novel manner. Such caching is described in greater detail below in Appendix D.","As indicated above, a data source control(s)  abstracts a specific data type through API . Data source control(s)  are reusable, and can thereby allow a page developer to easily configure respective data-bound control(s)  to consumer, render, and\/or otherwise interface with specific types of data that underlie the data source control(s) . To illustrate such a scenario, consider the following exemplary data source control(s) : AccessDataSource, SqlDataSource, SiteMapDataSource, XmlDataSource, ObjectDataSource, and\/or so on. Exemplary base classes for a data source control  are described below in reference to Appendix A\u2014Exemplary Data Source Control Base Classes. For example:\n\n","A data-bound control  (e.g., TreeView or Menu for hierarchical data such as XML) can bind to XML data via an XML data source control , relational data (e.g., via tabular data bound controls such as GridView, DetailsView, FormView, and DataList) via an SQL data source control (SqlDataSource), or arbitrary objects that return data (ObjectDataSource) using exactly the same interface exposed by respective one of the data source control(s) .","API  offers different data source views (DataSourceView or HierarchicalDataSourceView, see Appendix A) on a data store . For instance, a data source control  that connects to a database (a respective one of the data store(s) ) may have different views to represent different tables in the database. A HierarchicalDataSourceView enables navigation through parent-child relationships in the exposed hierarchy of data. Using this navigator, a data-bound control  can create a hierarchical rendering, such as an expandable tree view or menu.","Each data source view (\u201cview\u201d) inherits from its view type has an associated name such as the table name, and a data-bound control  can discover those view names through the GetViewNames method. The view name can then be passed to the data source control's GetView function to retrieve the associated data source view (DataSourceView\/HierarchicalDataSourceView). Thus, a view on a data store  is self-describing about the operations the view can support. This ability for a data source control  provided view to promote operations and make them dynamically discoverable allows for UI controls (e.g., data bound control(s) ) to automatically take advantage of these capabilities.","For example, a data source view portion of API  has methods on it to allow the data source control  to retrieve data (Select), insert new data (Insert) in the data store , delete data (Delete) from the data store , and update data (Update) in the data store . Because data retrieval may take a considerable amount of time (for instance, when accessing data offered, for example, by a Web service\u2014an exemplary data store \u2014over a slow connection), each of these functions takes a callback method which will be called asynchronously by the data source control  (responsive to an operations request) and when associated data has been retrieved. This allows the page and data-bound control  to continue execution while the data is fetched.","Not all data stores  need to support all available operations. For example, a database data store  may not support updating data unless an update command is supplied. Accordingly, and in one implementation, a specific DataSourceView advertises its abilities through a set of properties such as CanUpdate and CanSort. A data-bound control  can discover these capabilities to offer (present\/display\/disable) appropriate UI for a user to take advantage of the supported operations, while disabling the UI for non-supported operations (calling Update on a DataSourceView whose CanUpdate property returns false will result in an exception).","Deleting, updating, and inserting rows in a data store  will result in a change in the data in the data store . Because multiple data-bound controls  can be associated to a single view, other data-bound controls  whose rendering depends on the data associated with the view are notified by respective one(s) of the data source control(s)  that a change in underlying data has occurred. A view's DataSourceChanged event (shown as a respective portion of \u201cother data\u201d ) is raised in response to data manipulation events. A data-bound control  listening to such an event can re-retrieve data from the view to render an updated view of the data store . A DataSourceChanged event is also raised in response to a ParameterCollection ParameterChanged event, described below.","A data store may parameterize data based on values from other data sources. For instance, a data store may filter or sort data based on the value in a text box on a page. In conventional systems, parameters were typically handled programmatically in page developer code, which placed the burden on the developer to retrieve parameter values at the right time in the page execution lifecycle. Often developers performed this incorrectly or insecurely, resulting in errors or vulnerabilities in their pages.","In contrast to such conventional systems, data controls architecture  supports the ability for \u201csmart\u201d data-bound controls  to automatically invoke supported runtime operations of an associated data store  at appropriate time(s) in page execution via API , as exposed by a respective data source control . The values passed to these operations, for example, are extracted from input controls filled in by a user, e.g. a textbox rendered by a GridView row in edit mode. When the data-bound control  creates these input controls as part of its own rendering, it extracts the input values.","To these ends, data source control(s)  provide declarative parameter(s) . Parameters  offer a declarative and intuitive way for page developers to specify which values for a data source  retrieve their values from external sources and how those parameters  can be evaluated at runtime. In this implementation, ControlParameter is for retrieving parameter values from page controls at runtime (e.g., just prior to executing an associated command), SessionParameter is for retrieving values from ASP.NET Session State, FormParameter is for retrieving values from the form, CookieParameter is for retrieving values from a browser cookie, ProfileParameter is for retrieving values from ASP.NET profiles, and QueryStringParameter for retrieving values from the page request's query string. This extensible class could be used to create many additional parameters and will automatically work with data sources  that have ParameterCollections. See, for example, the section in Appendix F titled \u201cFiltering with Parameterized Objects.\u201d","In this implementation, parameters  are described declaratively, in tag-based form on the page (kind of like HTML markup). As such parameter(s)  encourage a design pattern that is easy (declarative), automatic (in terms of when values are retrieved), and secure (in terms of how parameters are implemented to inject values into a data operation).","When values of a declarative parameter  changes, data returned by a data source  are also likely changed. A data source  can define a ParameterCollection for each operation. In the case of the Select parameters, the data source  will request the values of the parameters from the ParameterCollection using the GetValues method at the right time in the page lifecycle. The ParameterCollection will enumerate through each parameter  and determines the new value of the parameter . If the parameter  has stored an old value from the previous postback in ViewState, the parameter  will raise its ParameterCollection's ParametersChanged event, which will cause the DataSourceView to raise its DataSourceChanged event. The DataSourceChanged event will in turn cause all data-bound controls  associated with the DataSourceView to rebind.","In the case of Update, Insert, or Delete parameters , a parameter value change does not indicate that the data retrieved by the data source  has changed, so they do not need to be evaluated until Update, Insert, or Delete is called. In this implementation, parameters  are merged into a dictionary of values passed to a method to create the collection of values used to execute the update, insert, or delete operation.","Exemplary data source control parameters are described below in Appendix H.","An Exemplary Procedure",{"@attributes":{"id":"p-0041","num":"0048"},"figref":["FIG. 2","FIG. 1","FIG. 1","FIG. 3"],"b":["200","100","202","112","116","114","108","108","204","114","116","108","204"]},"At block , API  is utilized for generic access to the data store . Such generic access includes for example: automatically paging by the data-bound control over data associated with the data store via API ; automatically caching by the data source control of data store data, and automatic invalidation and purging of cached data when data store data changes. In another example of operations of block , the data-bound control  utilizes API  to dynamically discover operations promoted by a data source view that is exposed by the API; the operations are associated with the underlying data store. The data-bound control may present or disable one or more user interface elements to reflect supported or non-supported operations of the data source as indicated by the dynamically discover operations that were promoted by a data source view. In another example, a data source control  may receive a request from the data-bound control to implement one of these dynamically discovered operations. The data source control implements the operation to receive data back from the data store. Responsive to receiving such data, the data source control communicates the data, for example, to a predetermined callback identified by the requesting data-bound control.","Other aspects of the operations of block  include, for example, navigating, by a data-bound control , parent-child relationships in hierarchical data associated with the data store . Such navigation is based on a data source view provided by API . Such hierarchical data may be presented in an expanded tree view or menu. Other exemplary operations of block  include, for example, automatically implementing by a data-bound control via API , parameterized runtime operations with respect to the data store . Such automatic implementation is independent of any code developed by page developer to handle any parameter or parameter values. The data source control identifies how parameter values associated with respective ones of the runtime operations are to be evaluated at runtime using declarative parameters maintained by the data source control. Such runtime operations include for example select, insert, update, and\/or delete data operations. In one implementation, such declarative parameters are specified in the tag-based data format such as XML.",{"@attributes":{"id":"p-0044","num":"0051"},"figref":"FIG. 3","b":["302","114","108","118"]},"At block , the data-bound control  connects to data source view exposed by the corresponding data source control . The data bound control prepares to manage data changed events from the data source . For purposes of discussion, events are processed on the data-bound control. If the data manipulation is required to handle the event, the data-bound control calls update, delete, or insert on the data source view. This causes the data source changed event to be raised. The data-bound control sets uses data binding to true in response to data source view data source changed events. At block , data source view evaluates its parameter values for selection and filtering. If any parameters have changed, the parameter collection raises a parameters changed event, which causes the data source view to raise its data source changed event. The data-bound control listens for this event and responsive to receiving that, sets use data binding equal to true.","At block , during the page's pre-render portion of a corresponding page's lifecycle, if data binding is set equal to true, the data-bound control  binds to the underlying data store  and retrieves data from the data store  to present in a control tree. For example, the data-bound control calls a data bind interface. Which calls Select on the data source view, passing in a function to be called when the data from the data store  is ready. When the data source view receives the Select call, it returns. Asynchronously, the data source view uses values from the parameter collection to create data from the data store . When complete, the data source view calls the data-bound control's callback function with the data. At this point, the data-bound control  sets use data binding attribute equal to false and creates a control tree. This control tree is saved to view state. Each parameter  saves its current value to view state so that changes in value can be raised in the next postback load postback data event.","At block , the data-bound control  renders the control tree to an application such as a Web browser.","An Exemplary Operating Environment",{"@attributes":{"id":"p-0048","num":"0055"},"figref":["FIG. 4","FIG. 1","FIGS. 2 and 3"],"b":["400","40","400","400","400"]},"The methods and systems described herein are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well-known computing systems, environments, and\/or configurations that may be suitable for use include, but are not limited to, personal computers, server computers, multiprocessor systems, microprocessor-based systems, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and so on. Compact or subset versions of the framework may also be implemented in clients of limited resources, such as handheld computers, or other computing devices. The invention is practiced in a distributed computing environment where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","With reference to , an exemplary system for a data controls architecture includes a general purpose computing device in the form of a computer . The following described aspects of computer  are exemplary implementations of web server  () and\/or client computing device . Components of computer  may include, but are not limited to, processing unit(s) , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example and not limitation, such architectures may include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus also known as Mezzanine bus.","A computer  typically includes a variety of computer-readable media. Computer-readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer-readable media may comprise computer storage media and communication media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer-readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computer .","Communication media typically embodies computer-readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism, and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation, communication media includes wired media such as a wired network or a direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of the any of the above should also be included within the scope of computer-readable media.","System memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example and not limitation,  illustrates operating system , application programs , other program modules , and program data . In one implementation, application programs  include design host(s) , data source control(s) , data-bound control(s) , and\/or the like. Program data  includes data associated with the computer-program modules , including data for design host , data source control(s) , data-bound control(s) , other data , and\/or so on.","The computer  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk  such as a CD ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in , provide storage of computer-readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that they are at least different copies.","A user may enter commands and information into the computer  through input devices such as a keyboard  and pointing device , commonly referred to as a mouse, trackball or touch pad. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus , but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB).","A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . In addition to the monitor, computers may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer  operates in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and as a function of its particular implementation, may include many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example and not limitation,  illustrates remote application programs  as residing on memory device . The network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","In view of the above, and referring to , a data source control  abstracts an underlying data store  and exposes properties, capabilities, and data of the data store  via an API  that is sufficiently generic for all data stores . Using this API , a data store  can be exposed to a page or data-bound control  on the page without the page or control  being required to understand the unique differences between these data stores . A page developer on the other hand, gets a very natural non-generic interface for programming the data source . The page developer can interface with a wide variety of data stores (data backends)  and implement substantially any of a number of common operational scenarios involving the underlying data store  and its data, without having to understand intricate details of how to interface with data backends and without having to generate any page code. This makes it easier for a page developer to build robust, error free pages.","Moreover, data controls architecture  is extensible in that a data source control  exposes APIs  to access any type of data from any type of data store , as a function of its specific design architecture. The data controls architecture  is also flexible in that it allows new types of data to be supported by a data-bound control  via one or more respective data source control(s)  after the data-bound control  has been implemented\/released.","Although the systems and methods for data controls architecture have been described in language specific to structural features and\/or methodological operations or actions, it is understood that the implementations defined in the appended claims are not necessarily limited to the specific features or actions described. For example, the systems and methods for data controls architecture of  are not limited to Web page controls, rather the systems and methods apply to any data-source\/data-bound control type of UI scenario. Accordingly, the specific features and actions are disclosed as exemplary forms of implementing the claimed subject matter.","Data Sources:",{"@attributes":{"id":"p-0063","num":"0070"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"namespace System.Web.UI {"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public interface IDataSource {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Events"]},{"entry":[{},"event EventHandler DataSourceChanged { add; remove; }"]},{"entry":[{},"\/\/ Methods"]},{"entry":[{},"DataSourceView GetView(string viewName);"]},{"entry":[{},"ICollection GetViewNames( );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public interface IHierarchicalDataSource {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Events"]},{"entry":[{},"event EventHandler DataSourceChanged { add; remove; }"]},{"entry":[{},"\/\/ Methods"]},{"entry":[{},"HierarchicalDataSourceView GetHierarchicalView(string"]},{"entry":[{},"viewPath);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public abstract class DataSourceView {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Constructors"]},{"entry":[{},"protected DataSourceView(IDataSource owner, string"]},{"entry":[{},"viewName);"]},{"entry":[{},"\/\/ Properties"]},{"entry":[{},"protected EventHandlerList Events { get; }"]},{"entry":[{},"public string Name { get; }"]},{"entry":[{},"\/\/ Events"]},{"entry":[{},"public event EventHandler DataSourceViewChanged { add;"]},{"entry":[{},"remove; } \/\/"]},{"entry":[{},"\/\/ Methods"]},{"entry":[{},"protected virtual void OnDataSourceViewChanged(EventArgs"]},{"entry":[{},"e);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public abstract class HierarchicalDataSourceView {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Constructors"]},{"entry":[{},"protected HierarchicalDataSourceView( );"]},{"entry":[{},"\/\/ Methods"]},{"entry":[{},"public abstract IHierarchicalEnumerable Select( );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public abstract class DataSourceControl : Control, IDataSource,"]},{"entry":[{},"IListSource {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"protected virtual void RaiseDataSourceChangedEvent(EventArgs"]},{"entry":[{},"e);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0064","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"namespace System.Web.UI.WebControls {"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public abstract class BaseDataBoundControl : WebControl {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Properties"]},{"entry":[{},"public virtual object DataSource { get; set; }"]},{"entry":[{},"public virtual string DataSourceID { get; set; }"]},{"entry":[{},"protected bool Initialized { get; }"]},{"entry":[{},"protected bool IsBoundUsingDataSourceID { get; }"]},{"entry":[{},"protected bool UsesDataBinding { get; set; }"]},{"entry":[{},"\/\/ Events"]},{"entry":[{},"public event EventHandler DataBound { add; remove; }"]},{"entry":[{},"\/\/ Methods"]},{"entry":[{},"public sealed override void DataBind( );"]},{"entry":[{},"protected void EnsureDataBound( );"]},{"entry":[{},"protected virtual void OnDataBound(EventArgs e);"]},{"entry":[{},"protected virtual void OnDataPropertyChanged( );"]},{"entry":[{},"protected virtual void PerformDataBinding( );"]},{"entry":[{},"protected abstract void ValidateDataSource(object"]},{"entry":[{},"dataSource);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public abstract class DataBoundControl :"]},{"entry":[{},"BaseDataBoundControl {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ Replaces old DataBoundControl, now inherits from"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"BaseDataBoundControl, and adds tabular-specific functionality"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Properties"]},{"entry":[{},"public virtual string DataMember { get; set; }"]},{"entry":[{},"\/\/ Methods"]},{"entry":[{},"protected DataSourceView GetData( );"]},{"entry":[{},"protected IDataSource GetDataSource( );"]},{"entry":[{},"protected override void OnDataPropertyChanged( );"]},{"entry":[{},"protected virtual void OnDataSourceViewChanged(object"]},{"entry":[{},"sender, EventArgs"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"e);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"protected override void ValidateDataSource(object"]},{"entry":[{},"dataSource);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public abstract class HierarchicalDataBoundControl :"]},{"entry":[{},"BaseDataBoundControl {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Replaces old HierarchicalDataBoundControl, now"]},{"entry":[{},"inherits from"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"BaseDataBoundControl (used to derive"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ from tabular DataBoundControl), and adds"]},{"entry":[{},"hierarchical-specific"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"functionality"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Constructors"]},{"entry":[{},"protected HierarchicalDataBoundControl( );"]},{"entry":[{},"\/\/ Methods"]},{"entry":[{},"protected HierarchicalDataSourceView GetData(string"]},{"entry":[{},"viewPath);"]},{"entry":[{},"protected IHierarchicalDataSource GetDataSource( );"]},{"entry":[{},"protected override void OnDataPropertyChanged( );"]},{"entry":[{},"protected virtual void OnDataSourceChanged(object"]},{"entry":[{},"sender, EventArgs e);"]},{"entry":[{},"protected override void ValidateDataSource(object"]},{"entry":[{},"dataSource);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public abstract class CompositeDataBoundControl :"]},{"entry":[{},"DataBoundControl {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Methods"]},{"entry":[{},"protected abstract int CreateChildControls(DataSourceView"]},{"entry":[{},"view, bool"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"dataBinding); \/\/ Takes DataSourceView"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"protected internal override void CreateChildControls( );"]},{"entry":[{},"protected override void PerformDataBinding( );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"This implementation includes the DataBoundControl and CompositeDataBoundControl to make it easier to implement smart data-bound controls that can interact well with data source controls. Together these classes will guide the development of consistent data-bound controls.","DataBoundControl","DataBoundControl contains the basic implementation shared by all data-bound controls  to allow them to be associated with a data source control, and to allow them to perform automatic data-binding on behalf of the page developer. This class will serve as the basis for data-bound controls such as TreeView and other data-bound controls such as ListControl.",{"@attributes":{"id":"p-0067","num":"0074"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Namespace System.Web.UI.Data {"},{"entry":"\u2003\/\/\/ <summary>"},{"entry":"\u2003\/\/\/\u2003A DataBoundControl is bound to a data source and generates its"},{"entry":"\u2003\/\/\/\u2003user interface by enumerating the items in the data source it is"},{"entry":"\u2003\u2003\u2003bound to."},{"entry":"\u2003\/\/\/"},{"entry":"\u2003\/\/\/\u2003DataBoundControl is an abstract base class that defines the"},{"entry":"\u2003\/\/\/\u2003common characteristics of all controls that use a list as a data"},{"entry":"\u2003\/\/\/\u2003source, such as SmartGrid, DataBoundTable, ListBox, TreeView"},{"entry":"\u2003\/\/\/\u2003etc."},{"entry":"\u2003\/\/\/ <\/summary>"},{"entry":"\u2003["},{"entry":"\u2003Designer(typeof(System.Web.UI.Design.Data."},{"entry":"\u2003DataBoundControlDesigner))"},{"entry":"\u2003]"},{"entry":"\u2003public abstract class DataBoundControl : WebControl {"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/\u2003Allows the page developer to toggle the automatic data-binding"]},{"entry":[{},"\/\/\/\u2003feature of a DataBoundControl when it is bound to a"]},{"entry":[{},"\/\/\/\u2003DataControl. By default, auto-data-binding is enabled."]},{"entry":[{},"\/\/\/\u2003<\/summary>"]},{"entry":[{},"public virtual bool AutoDataBind { get; set; }"]},{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/\u2003The name of the list that the DataBoundControl should bind to"]},{"entry":[{},"\/\/\/\u2003when its data source contains more than one list of data items."]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"public virtual string DataMember { get; set; }"]},{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/\u2003The data source to bind to. This allows a DataBoundControl to"]},{"entry":[{},"\/\/\/\u2003bind to arbitrary lists of data items."]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"public virtual object DataSource { get; set; }"]},{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/\u2003The ID of the DataSourceControl that this control should use to"]},{"entry":[{},"\/\/\/\u2003retrieve its data source. When the control is bound to a"]},{"entry":[{},"\/\/\/\u2003DataControl, it can retrieve a data source instance on-demand,"]},{"entry":[{},"\/\/\/\u2003and thereby attempt to work in AutoDataBind mode."]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"public virtual string DataSourceID { get; set; }"]},{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"protected bool UsesDataBinding { get; set; }"]},{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"public override void DataBind( );"]},{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"protected void EnsureDataBound( );"]},{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"\/\/\/ <returns>"]},{"entry":[{},"\/\/\/ <\/returns>"]},{"entry":[{},"protected virtual object GetDataSource( );"]},{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"\/\/\/ <returns>"]},{"entry":[{},"\/\/\/ <\/returns>"]},{"entry":[{},"protected virtual IEnumerable GetResolvedDataSource( );"]},{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"private void OnDataSourceChanged(object sender, EventArgs e);"]},{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"protected override void OnPreRender(EventArgs e);"]},{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"\/\/\/\u2003<param name=\u201ddataSource\u201d>The\u2003data\u2003source\u2003instance\u2003to"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"be validated<\/param>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"protected abstract void ValidateDataSource(object dataSource);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The CompositeDataBoundControl extends DataBoundControl and implements the semantics of implementing a DataBoundControl that binds to an Ienumerable and enumerates it to build a control tree. This class will serve as the basis for data-bound controls such as SmartGrid and DetailsView.",{"@attributes":{"id":"p-0069","num":"0076"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Namespace System.Web.UI.Data {"},{"entry":"\u2003\/\/\/ <summary>"},{"entry":"\u2003\/\/\/\u2003A CompositeDataBoundControl is bound to a data source and"},{"entry":"\u2003\/\/\/\u2003generates its child control hierarchy, by enumerating the items in"},{"entry":"\u2003\/\/\/\u2003the data source it is bound to."},{"entry":"\u2003\/\/\/"},{"entry":"\u2003\/\/\/\u2003CompositeDataBoundControl is an abstract base class that defines"},{"entry":"the common"},{"entry":"\u2003\/\/\/\u2003characteristics of controls such as SmartGrid, DetailsView etc."},{"entry":"\u2003\/\/\/ <\/summary>"},{"entry":"\u2003["},{"entry":"Designer(typeof(System.Web.UI.Design.Data."},{"entry":"CompositeDataBoundControlDesigner))"},{"entry":"\u2003]"},{"entry":"\u2003public abstract class CompositeDataBoundControl : DataBoundControl,"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"InamingContainer {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"public override ControlCollection Controls { get; }"]},{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/\u2003Overriden by DataBoundControl to determine if the control"]},{"entry":[{},"\/\/\/\u2003should recreate its control hierarchy based on values in view"]},{"entry":[{},"\/\/\/\u2003state. If the control hierarchy can be created, i.e. view state does"]},{"entry":[{},"\/\/\/\u2003exist, it calls CreateChildControls with a dummy (empty) data"]},{"entry":[{},"\/\/\/\u2003source which is usable for enumeration purposes only."]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"public override void CreateChildControls( );"]},{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/\u2003Performs the work of creating the control hierarchy based on a"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"data source."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/\/\u2003When dataBinding is true, the specified data source contains real"]},{"entry":[{},"\/\/\/\u2003data, and the data is supposed to be pushed into the UI."]},{"entry":[{},"\/\/\/\u2003When dataBinding is false, the specified data source is a dummy"]},{"entry":[{},"\/\/\/\u2003data source, that allows enumerating the right number of items,"]},{"entry":[{},"\/\/\/\u2003but the items themselves are null and do not contain data. In this"]},{"entry":[{},"\/\/\/\u2003case, the recreated control hierarchy reinitializes its state from"]},{"entry":[{},"\/\/\/\u2003view state. It enables a DataBoundControl to encapsulate the"]},{"entry":[{},"\/\/\/\u2003logic of creating its control hierarchy in both modes into a single"]},{"entry":[{},"\/\/\/\u2003code path."]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"\/\/\/ <param name=\u201ddataSource\u201d>"]},{"entry":[{},"\/\/\/\u2003The data source to be used to enumerate items."]},{"entry":[{},"\/\/\/ <\/param>"]},{"entry":[{},"\/\/\/ <param name=\u201ddataBinding\u201d>"]},{"entry":[{},"\/\/\/\u2003Whether the method has been called from DataBind or not."]},{"entry":[{},"\/\/\/ <\/param>"]},{"entry":[{},"\/\/\/ <returns>"]},{"entry":[{},"\/\/\/\u2003The number of items created based on the data source. Put"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"another way, its"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/\/\u2003the number of items enumerated from the data source."]},{"entry":[{},"\/\/\/ <\/returns>"]},{"entry":[{},"protected abstract int CreateChildControls(Ienumerable dataSource,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"bool dataBinding);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/\u2003Overriden by DataBoundControl to use its properties to determin"]},{"entry":[{},"\/\/\/\u2003the real data source that the control should bind to. It then"]},{"entry":[{},"\/\/\/\u2003clears the existing control hierarchy, and calls"]},{"entry":[{},"\/\/\/\u2003createChildControls to create a new control hierarchy based on"]},{"entry":[{},"\/\/\/\u2003the resolved data source."]},{"entry":[{},"\/\/\/"]},{"entry":[{},"\/\/\/\u2003The implementation resolves various data source related"]},{"entry":[{},"\/\/\/\u2003properties to arrive at the appropriate Ienumerable"]},{"entry":[{},"\/\/\/\u2003implementation to use as the real data source."]},{"entry":[{},"\/\/\/"]},{"entry":[{},"\/\/\/\u2003When resolving data sources, the DataControlID takes highest"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"precedence."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/\/\u2003In this mode, DataMember is used to access the appropriate list"]},{"entry":[{},"\/\/\/\u2003from the DataControl."]},{"entry":[{},"\/\/\/\u2003If DataControlID is not set, the value of the DataSource property"]},{"entry":[{},"\/\/\/\u2003is used. In this second alternative, DataMember is used to"]},{"entry":[{},"\/\/\/\u2003extract the appropriate list if the control has been handed an"]},{"entry":[{},"\/\/\/\u2003IlistSource as a data source."]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"public override void DataBind( );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"Smart data-bound controls  contain logic to automatically data-bind at appropriate times on behalf of a page developer.","The support for automatic data-binding is implemented in the DataBoundControl base class. This base class implements the AutoDataBind and UsesDataBinding properties and the EnsureDataBound methods.","The page developer can turn off the automatic data-binding features of a smart data-bound control and assume full control over the data-binding process. Setting this property to False essentially allows page developers to program data-bound controls. Note that this property is meaningful only when the data-bound control's DataSourceID property has been set to a valid DataSourceControl on the page.","In this implementation, a data-bound control  invokes its data-binding logic as few times as possible. It therefore delays its data-binding process as late as it can during the page lifecycle. To this end, it tracks the need to perform its data-binding logic using the UsesDataBinding property. The following lists the various scenarios in which UsesDataBinding gets set to True:\n\n","This is performed in OnLoad so that the user's Page_Init and Page_Load code has been executed, and the data-bound control can start preparing itself for data-binding.\n\n","The UsesDataBinding property is set to False in the DataBind method.","A data-bound control calls EnsureDataBound when it expects to be in a data-bound state. This method invokes the data-binding process if UsesDataBinding is True. There are various scenarios where a call to EnsureDataBound is used:\n\n","Overview","The GridView and DetailsView controls offer automatic paging over their associated data source, provided the data source implements the ICollection interface. Using this method of paging, the data source returns all of the row data, and the GridView or DetailsView only renders a subset of the rows (discarding the rest). For large amounts of data, this UI paging technique is not as performant as a solution where the data source only returns as much data as necessary for the GridView or DetailsView page rendering. To enable this feature, paging semantics are incorporated into the data source control interfaces, so that data-bound controls like GridView and DetailsView can take advantage of this capability at run-time.","Exemplary Scenarios","The Data Source Paging feature enables the following scenarios:","SQL Paging on SqlDataSource.","System  of  supports the ability to page over a an SQL Server backend, using the FillPage method on SqlDataAdapter or ExecutePagedReader on SqlCommand. The SqlDataSource control takes advantage of this capability to provide the paging capability at the data source interface level. When the number of rows returned from the Select method is signification, this results in a dramatic improvement in performance over the UI-paging capability of GridView and DetailsView controls.","To enable SQL paging, the page developer simply sets EnableSqlPaging on the data source. The user can optionally provide a SQL command for retrieving the total row count, to aid in the GridView or DetailsView pager rendering.",{"@attributes":{"id":"p-0081","num":"0105"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<form runat=\u201cserver\u201d>"]},{"entry":[{},"\u2003<asp:GridView id=\u201cMyGridView\u201d DataSourceId=\u201cMySource\u201d"]},{"entry":[{},"\u2003\u2003AllowPaging=\u201ctrue\u201d PageSize=\u201c5\u201d runat=\u201cserver\u201d \/>"]},{"entry":[{},"\u2003<asp:SqlDataSource Id=\u201cMySource\u201d"]},{"entry":[{},"\u2003\u2003ConnectionString=\u2018<%$ ConnectionStrings:Pubs %>\u2019"]},{"entry":[{},"\u2003\u2003SelectCommand=\u201cselect * from authors\u201d"]},{"entry":[{},"\u2003\u2003SelectCountCommand=\u201cselect count(*) from authors\u201d"]},{"entry":[{},"\u2003\u2003EnableSqlPaging=\u201ctrue\u201d"]},{"entry":[{},"\u2003\u2003runat=\u201cserver\u201d\/>"]},{"entry":[{},"<\/form>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Sorting with SqlDataSource Paging Enabled.","When both sorting and paging are enabled, the desired behavior is to sort first, and then page over the sorted result (there is a similar interaction with filtering). For SqlDataSource, this means that sorting can be performed as part of the select operation. However, the SqlDataSource has no way to automatically associate the SortExpression passed by the data-bound control with a parameter of the SelectCommand. It is up to the user to supply this manually, as shown below.",{"@attributes":{"id":"p-0083","num":"0107"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2002<script runat=\u201cserver\u201d>"},{"entry":"\u2003void MyGridView_Sorting(Object sender, GridViewSortEventArgs e) {"},{"entry":"\u2003\u2003switch (e.SortExpression) {"},{"entry":"\u2003\u2003\u2003\u2003case \u201ccity\u201d:"},{"entry":"\u2003\u2003\u2003\u2003\u2003MySource.SelectParameters[\u201csortBy\u201d] = 0;"},{"entry":"\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003\u2003\u2003case \u201czip\u201d:"},{"entry":"\u2003\u2003\u2003\u2003\u2003MySource.SelectParameters[\u201csortBy\u201d] = 1;"},{"entry":"\u2003\u2003\u2003\u2003\u2003break;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003e.Cancel = true;"},{"entry":"\u2003}"},{"entry":"\u2002<\/script>"},{"entry":"\u2002<form runat=\u201cserver\u201d>"},{"entry":"\u2003\u2002<asp:GridView id=\u201cMyGridView\u201d DataSourceId=\u201cMySource\u201d"},{"entry":"AllowSorting=\u201ctrue\u201d"},{"entry":"\u2003\u2009AllowPaging=\u201ctrue\u201d PageSize=\u201c5\u201d OnSorting="},{"entry":"\u2003\u2009\u201cMyGridView_Sorting\u201d"},{"entry":"runat=\u201cserver\u201d >"},{"entry":"\u2003..."},{"entry":"\u2002\u2009<\/asp:GridView>"},{"entry":"\u2002\u2009<asp:SqlDataSource Id=\u201cMySource\u201d"},{"entry":"\u2003ConnectionString=\u2018<%$ ConnectionStrings:Pubs %>\u2019"},{"entry":"\u2003SelectCommand=\u201cGetAuthorsSorted\u201d"},{"entry":"\u2003SelectCountCommand=\u201cselect count(*) from authors\u201d"},{"entry":"\u2003EnableSqlPaging=\u201ctrue\u201d"},{"entry":"\u2003runat=\u201cserver\u201d>"},{"entry":"\u2003\u2002<SelectParameters>"},{"entry":"\u2003\u2003\u2003<asp:ControlParameter Name=\u201cstate\u201d ControlId="},{"entry":"\u2003\u2003\u2003\u201cDropDownList1\u201d\/>"},{"entry":"\u2003\u2003\u2003<asp:Parameter Name=\u201csortBy\u201d DefaultValue=\u201c0\u201d\/>"},{"entry":"\u2003\u2003\u2003<asp:Parameter Name=\u201csortOrder\u201d DefaultValue=\u201c0\u201d\/>"},{"entry":"\u2003\u2002<\/SelectParameters>"},{"entry":"\u2003<\/asp:SqlDataSource>"},{"entry":"\u2002<\/form>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"For the above example, the stored procedure might be written as follows:",{"@attributes":{"id":"p-0085","num":"0109"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"CREATE PROCEDURE GetAuthorsByState"},{"entry":"("},{"entry":"\u2003\u2003@state char(2),"},{"entry":"\u2003\u2003@sortBy int,"},{"entry":"\u2003\u2003@sortOrder bit"},{"entry":") AS"},{"entry":"BEGIN"},{"entry":"\u2003IF @sortBy = 0 AND @sortOrder = 0"},{"entry":"\u2003\u2003\u2003SELECT * from Authors WHERE state = @state ORDER BY city"},{"entry":"\u2003\u2003\u2003DESC"},{"entry":"\u2003ELSE IF @sortBy = 0 AND @sortOrder = 1"},{"entry":"\u2003\u2003\u2003SELECT * from Authors WHERE state = @state ORDER BY city"},{"entry":"\u2003\u2003\u2003ASC"},{"entry":"\u2003IF @sortBy = 1 AND @sortOrder = 0"},{"entry":"\u2003\u2003\u2003SELECT * from Authors WHERE state = @state ORDER BY zip"},{"entry":"\u2003\u2003\u2003DESC"},{"entry":"\u2003ELSE IF @sortBy = 1 AND @sortOrder = 1"},{"entry":"\u2003\u2003\u2003SELECT * from Authors WHERE state = @state ORDER BY zip"},{"entry":"\u2003\u2003\u2003ASC"},{"entry":"END"},{"entry":"GO"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Note that the user cancels the GridView sorting operation to prevent the SortExpression from being passed to the data source.","Specification","Paging will now be supported at the data source interface level. To enable this, a boolean CanPage property and overloaded Select method will be added to DataSourceView:",{"@attributes":{"id":"p-0088","num":"0112"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003namespace System.Web.UI.Data"]},{"entry":[{},"\u2003{"]},{"entry":[{},"\u2003\u2003public abstract class DataSourceView"]},{"entry":[{},"\u2003\u2003{"]},{"entry":[{},"\u2003\u2003\u2003public virtual bool CanPage { get; }"]},{"entry":[{},"\u2003\u2003\u2003public virtual bool CanQueryTotalRowCount { get; }"]},{"entry":[{},"\u2003\u2003\u2003..."]},{"entry":[{},"\u2003\u2003\u2003public abstract IEnumerable ExecuteSelect"]},{"entry":[{},"(DataSourceSelectArguments arguments);"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"When the CanPage property of a data source is true, it is valid to call the Select method overload with paging options defined. StartRowIndex specifies the index of the first row to retrieve, while MaximumRows specifies the maximum number of rows to return from the query. Unrelated to paging, the SortExpression has also been made part of the Select operation. This supports the ability for multiple data-bound controls to bind to the same data source with different SortExpressions.","When CanPage is true, a data source may optionally support the ability to get total number of rows that would be returned from the unpaged Select method. This is typically useful to a data-bound control that wants to render better paging UI, such as the ability to move to the last record. When SupportsRowCount is true, it is valid to call the Select method that returns a rowCount output parameter. The reason this is made part of the actual Select operation instead of a separate method is because getting the total row count may actually be an expensive operation that can be performed at the same time as selecting data rows. The rowCount is typically only retrieved once, when the first set of records is retrieved.","If CanPage is true but SupportsRowCount is false, the total number of rows is indeterminant.","SqlDataSource Paging Support","The SqlDataSource control will implement this interface using the new SQL paging feature. This feature is supported by an overloaded Fill method on SqlDataAdapter that accepts a startRecord index and maxRecords count. In DataSet mode, the SqlDataSource uses this method:\n\n","There is an equivalent method on SqlCommand that returns a DataReader:\n\n","The paging capability of SqlDataSource is enabled by the page developer using the EnableSqlPaging boolean property. This property is false by default, so that sorting \u201cjust works\u201d by default (the GridView and DetailsView controls can still support UI paging in this case). When EnableSqlPaging is true, the CanPage property of SqlDataSourceView becomes true and CanSort becomes false. The user can still support sorting manually; see \u201cScenarios\u201d above for an example of sorting when SQL paging is enabled.",{"@attributes":{"id":"p-0095","num":"0121"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<asp:SqlDataSource Id=\u201cMySource\u201d"]},{"entry":[{},"\u2009\u2009ConnectionString=\u2018<%$ ConnectionStrings:Pubs %>\u2019"]},{"entry":[{},"\u2009\u2009SelectCommand=\u201cselect * from authors\u201d"]},{"entry":[{},"\u2009\u2009EnableSqlPaging=\u201ctrue\u201d"]},{"entry":[{},"\u2009\u2009runat=\u201cserver\u201d\/>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In this implementation, SqlDataSource returns false by default from the SupportsRowCount property. However, the page developer may specify an optional SelectCountCommand property on this data source to specify a query that returns the total record count for the select command.",{"@attributes":{"id":"p-0097","num":"0123"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<asp:SqlDataSource Id=\u201cMySource\u201d"]},{"entry":[{},"\u2009\u2009ConnectionString=\u2018<%$ ConnectionStrings:Pubs %>\u2019"]},{"entry":[{},"\u2009\u2009SelectCommand=\u201cselect * from authors\u201d"]},{"entry":[{},"\u2009\u2009SelectCountCommand=\u201cselect count(*) from authors\u201d"]},{"entry":[{},"\u2009\u2009EnableSqlPaging=\u201ctrue\u201d"]},{"entry":[{},"\u2009\u2009runat=\u201cserver\u201d\/>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"When the SelectCountCommand property is specified, the SqlDataSource returns this value as the rowCount output parameter of Select. If the returned value cannot be cast to an integer, the SqlDataSource throws an error that informs the user that SelectCountCommand must return an integer value.","Data-bound Control Paging Support","The GridView and DetailsView controls each support paging over the items in their data source. To enable paging behavior, the Page developer simply sets the AllowPaging property to true, as demonstrated in the example below. For GridView, the developer can also optionally set the number of rows to display per page using the PageSize property (defaults to 10). The total number of data rows divided by the PageSize is exposed as a separate read-only PageCount property.",{"@attributes":{"id":"p-0100","num":"0126"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<form runat=\u201cserver\u201d>"]},{"entry":[{},"\u2003<asp:GridView id=\u201cMyGridView\u201d DataSourceId=\u201cMySource\u201d"]},{"entry":[{},"\u2003\u2003AllowPaging=\u201ctrue\u201d PageSize=\u201c5\u201d runat=\u201cserver\u201d \/>"]},{"entry":[{},"\u2003<asp:SqlDataSource id=\u201cMySource\u201d"]},{"entry":[{},"\u2003\u2003ConnectionString=\u201cserver=(local);database=pubs;"]},{"entry":[{},"\u2003\u2003trusted_connection=yes\u201d"]},{"entry":[{},"\u2003\u2003SelectCommand=\u201cselect * from authors\u201d"]},{"entry":[{},"\u2003\u2003runat=\u201cserver\u201d \/>"]},{"entry":[{},"<\/form>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"When the data source control does not support the paging capability (CanPage is false), the GridView and DetailsView page over their items by retrieving all records from the data source (using the Select method), and only rendering the records for the current page. Because this uses random access to the data source records, it currently only works if the return value from the Select method supports the ICollection interface. For example, the GridView can page over a DataSet or DataTable, but not a DataReader returned from SqlDataSource.","With the introduction of the SQL paging feature, SqlDataSource will be able to page over both a DataSet or DataReader. When the page developer sets EnableSqlPaging on the data source, CanPage becomes true (from the data-bound control's perspective). In this case, the data-bound control will always use the overloaded Select method that accepts startRowIndex and maximumRows, and can page over the SqlDataSource records regardless of return type.","When the Row Count is Unknown . . .","When the the SqlDataSource SupportsRowCount property is false, the GridView and DetailsView adjust their pager UI to account for the fact that the total number of rows is unknown. Instead of retrieving one data page at a time, they retrieve as many pages as is necessary to determine the number of pager buttons to display. In Numeric paging mode, a combination of the PageButtonCount and PageSize determines the number of records to retrieve.","In general, the GridView or DetailsView retrieves as many rows as necessary to fill the current page, plus as many pages as there are pager buttons in front of the selected page. One extra record is retrieved in order to determine whether to render the ellipses ( . . . ) for navigating to the next group of pager buttons.","As an example, consider the case where the database contains 25 records, the PageSize is 5 and the PageButtonCount is 3. One the first request, the grid retrieves data for startRecord=0 and maxRecords=16. Because 16 rows are returned, the grid knows to render all three pager buttons, plus the ellipses (because there is at least one more page to display). The grid still only renders the data records for the current PageIndex, e.g. records 0-4 for PageIndex 1. The remaining records are discarded.",{"@attributes":{"id":"p-0106","num":"0132"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Record 0"]},{"entry":[{},"Record 1"]},{"entry":[{},"Record 2"]},{"entry":[{},"Record 3"]},{"entry":[{},"Record 4"]},{"entry":[{},{"u":"1"}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"If the user clicks the ellipses, the grid retrieves data for startRecord=15 and maxRecords=16. This time, only 10 records are returned, so the grid renders only two pager buttons, plus the ellipses for going back (this is always rendered when PageIndex>1 and the pager button for page 1 is not visible). As before, the grid renders the only records for the current PageIndex, e.g. records 15-19 for PageIndex 4.",{"@attributes":{"id":"p-0108","num":"0134"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Record 15"]},{"entry":[{},"Record 16"]},{"entry":[{},"Record 17"]},{"entry":[{},"Record 18"]},{"entry":[{},"Record 19"]},{"entry":[{},". . .  5"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The general formula is actually a bit more complex, since the selected page may not be the first page among the visible pager buttons, but the general idea is the same.","This works similarly when the the pager is in Next\/Prev mode. In this case, the grid only looks ahead one row (to determine whether to render the Next button). The number of records retrieved is given by:\n\n","Note that if the data source SupportsRowCount property is false and the pager is in NextPrevFirstLast mode or NumericFirstLast mode, the Last button is always omitted.","When the Row Count is Known . . .","When the user has specified a SelectCountCommand, the SqlDataSource is able to return a known total record count from the rowCount output parameter of the Select method. In this case, the GridView and DetailsView can render paging buttons based on this row count, instead of retrieving extra data records for this purpose. In this case, the SqlDataSource only retrieves as many data records as required to fill the current page:\n\n","Note that the rowCount is only retrieved on the very first call to the Select method on the data source. The GridView and DetailsView controls retain this count in the ControlState dictionary to be reused across postbacks.","Overview","This appendix describes the general design pattern for caching that is shared by all of data source controls  (DataSource controls).","Scenarios","DataSource caching makes several data scenarios more performant. This section illustrates three scenarios where caching makes a difference.","Read-Only Paged Report. The automatic paging features of GridView and DetailsView only implement paging at the UI-level (all data is retrieved from the DataSource on the server, but only a portion of the data is rendered). Because of this, it is important that our DataSource controls have the ability to retrieve this data from the cache, and not just from the data backend (e.g. SQL database) on every page request. The following example demonstrates a GridView with paging enabled, bound to a SqlDataSource which caches its data for 10 minutes at a time.",{"@attributes":{"id":"p-0117","num":"0147"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\/\/ Stock quote report, stale by 10 minutes"},{"entry":"\u2002<form runat=\u201cserver\u201d>"},{"entry":"\u2003<asp:GridView\u2003\u2003\u2003DataSourceId=\u201cMySource\u201d\u2003\u2003\u2003AllowPaging="},{"entry":"\u2003\u201ctrue\u201d"},{"entry":"runat=\u201cserver\u201d\/>"},{"entry":"\u2003<asp:SqlDataSource id=\u201cMySource\u201d"},{"entry":"\u2003\u2002EnableCaching=\u201ctrue\u201d"},{"entry":"\u2003\u2002CacheDuration=\u201c600\u201d"},{"entry":"\u2003\u2002ConnectionString=\u201cserver=(local);database="},{"entry":"\u2003\u2002pubs;trusted_connection=yes\u201d"},{"entry":"\u2003\u2002SelectCommand=\u201cselect * from stock_quotes\u201d"},{"entry":"\u2003\u2002runat=\u201cserver\u201d"},{"entry":"\u2003\/>"},{"entry":"\u2002<\/form>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Master-Details Filtered Report. It is common to retrieve an entire table of moderately-sized data and then apply a filter to that data based on UI selection from the client. For example, consider the scenario below where documents are listed for several authors, and a dropdownlist is provided to select the particular author name to filter by. In this scenario, the document data is retrieved only once from the database, and subsequently retrieved from cache in order to apply the filter. In this example, the cache entry is refreshed every 10 minutes.",{"@attributes":{"id":"p-0119","num":"0149"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2002<form runat=\u201cserver\u201d>"},{"entry":"\u2003<asp:DropDownList\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003id=\u201cAuthorsDropDown\u201d"},{"entry":"DataSourceId=\u201cMyAuthorSource\u201d"},{"entry":"\u2003\u2002DataTextField=\u201cAuthorName\u201d"},{"entry":"\u2003\u2002AutoPostBack=\u201ctrue\u201d"},{"entry":"\u2003\u2002runat=\u201cserver\u201d"},{"entry":"\u2003\/>"},{"entry":"\u2003<asp:GridView id=\u201cMyGridView\u201d DataSourceId=\u201cMySource\u201d"},{"entry":"\u2003runat=\u201cserver\u201d"},{"entry":"\/>"},{"entry":"\u2003<asp:SqlDataSource id=\u201cMySource\u201d"},{"entry":"\u2003\u2002ConnectionString=\u201cserver=(local);database="},{"entry":"\u2003\u2002specs;trusted_connection=yes\u201d"},{"entry":"\u2003\u2002SelectCommand=\u201cselect * from specs\u201d"},{"entry":"\u2003\u2002FilterExpression=\u201cauthor = @author\u201d"},{"entry":"\u2003\u2002EnableCaching=\u201ctrue\u201d"},{"entry":"\u2003\u2002CacheDuration=\u201c600\u201d"},{"entry":"\u2003\u2002runat=\u201cserver\u201d"},{"entry":"\u2003>"},{"entry":"\u2003\u2002<FilterParameters>"},{"entry":"\u2003\u2003<asp:ControlParameter Name=\u201cauthor\u201d ControlId="},{"entry":"\u2003\u2003\u201cAuthorsDropDown\u201d"},{"entry":"\u2003\u2003\u2003PropertyName=\u201cSelectedValue\u201d \/>"},{"entry":"\u2003\u2002<\/FilterParameters>"},{"entry":"\u2003<\/asp:SqlDataSource>"},{"entry":"\u2003<asp:SqlDataSource id=\u201cMyAuthorSource\u201d"},{"entry":"\u2003\u2002ConnectionString=\u201cserver=(local);database="},{"entry":"\u2003\u2002specs;trusted_connection=yes\u201d"},{"entry":"\u2003\u2002SelectCommand=\u201cselect DISTINCT author from specs\u201d"},{"entry":"\u2003\u2002EnableCaching =\u201ctrue\u201d"},{"entry":"\u2003\u2002CacheDuration=\u201c600\u201d"},{"entry":"\u2003\u2002runat=\u201cserver\u201d"},{"entry":"\u2003\/>"},{"entry":"\u2002<\/form>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"SQL Cache Invalidation. A new SQL cache invalidation feature, enables a cache entry to be invalidated and purged from cache when a backend database table changes. Using this feature it is possible to cache UI data indefinitely until an update to backend data is made, as demonstrated in the following example.",{"@attributes":{"id":"p-0121","num":"0151"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2002<%-- Renders a list of authors, with a link to get book details... --%>"},{"entry":"\u2002<asp:GridView id=\u201cMyGridView\u201d"},{"entry":"\u2003DataSourceId=\u201cMySource\u201d"},{"entry":"\u2003DataKeyNames=\u201cau_id\u201d"},{"entry":"\u2003runat=\u201cserver\u201d>"},{"entry":"\u2003<ColumnFields>"},{"entry":"\u2003\u2002<asp:BoundField HeaderText=\u201cLast Name\u201d DataField=\u201cau_lname\u201d \/>"},{"entry":"\u2003\u2002<asp:BoundField HeaderText=\u201cFirst Name\u201d DataField="},{"entry":"\u2003\u2002\u201cau_fname\u201d \/>"},{"entry":"\u2003\u2002<asp:ButtonField\u2003\u2002ButtonType=\u201cLink\u201d\u2003\u2002CommandName=\u201cselect\u201d"},{"entry":"Text=\u201cBooks...\u201d\/>"},{"entry":"\u2003<\/ColumnFields>"},{"entry":"\u2002<\/asp:GridView>"},{"entry":"\u2002<%-- Renders the books for a specific author, one book at a time"},{"entry":"\u2003\u2003\u2002(with next\/prev buttons for paging) --%>"},{"entry":"\u2002<asp:DetailsView runat=\u201cserver\u201d"},{"entry":"\u2003\u2002DataSourceId=\u201cMyDetailsSource\u201d"},{"entry":"\u2003\u2002AllowPaging=\u201ctrue\u201d"},{"entry":"\u2002\/>"},{"entry":"\u2002<asp:SqlDataSource id=\u201cMySource\u201d"},{"entry":"\u2003EnableCaching=\u201ctrue\u201d"},{"entry":"\u2003CacheDuration=\u201cInfinite\u201d"},{"entry":"\u2003SqlCacheDependency=\u201cpubs:Authors;\u201d"},{"entry":"\u2003ConnectionString=\u201cserver=(local);database="},{"entry":"\u2003pubs;trusted_connection=yes\u201d"},{"entry":"\u2003SelectCommand=\u201cselect * from authors\u201d"},{"entry":"\u2003runat=\u201cserver\u201d"},{"entry":"\u2002\/>"},{"entry":"\u2002<asp:SqlDataSource id=\u201cMyDetailsSource\u201d"},{"entry":"\u2003EnableCaching=\u201ctrue\u201d"},{"entry":"\u2003CacheDuration=\u201cInfinite\u201d"},{"entry":"\u2003SqlCacheDependency=\u201cpubs:Authors;pubs:TitleAuthor\u201d"},{"entry":"\u2003ConnectionString=\u201cserver=(local);database="},{"entry":"\u2003pubs;trusted_connection=yes\u201d"},{"entry":"\u2003SelectCommand=\u201cselect * from titles where title_id IN (select"},{"entry":"title_id from titleauthor where au_id = @authorId)\u201d"},{"entry":"\u2003runat=\u201cserver\u201d"},{"entry":"\u2002>"},{"entry":"\u2003<SelectParameters>"},{"entry":"\u2003\u2002<asp:ControlParameter\u2002\u2009Name=\u201cauthorId\u201d\u2002\u2009ControlId=\u201cMyGridView\u201d"},{"entry":"PropertyName=\u201cSelectedDataKey[\u2018au_id\u2019]\u201d \/>"},{"entry":"\u2003<\/SelectParameters>"},{"entry":"\u2002<\/asp:SqlDataSource>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Specification","DataSources provide APIs for specifying how data can be cached. Many aspects of caching are handled by the control implicitly, for example the generation of the cache key or the default expiry policy (time-based, file-based, other). Other settings may be specified by the Page developer, for example the duration to store data in the cache when using a time-based expiration. Note that the caching feature is targetted at the Page developer, who specifies when and how caching can be performed; caching can be transparent to DataBound controls.","The caching semantics for each DataSource control are generally specific to that control, and there is no common caching implementation provided at the DataSource base-class level (implementing caching is completely optional).","Enabling Cache Support. DataSource control caching implementations will support a basic time-based expiry mechanism. Caching may or may not be enabled by default depending on the particular control, but may be explicitly enabled or disabled using a boolean EnableCaching property. Each DataSource control specifies a non-zero cache duration that is an appropriate default for that control.","SqlDataSource and AccessDataSource","The SqlDataSource control includes support for the SqlClient, ODBC, OLEDB, and Oracle managed providers. This control supports the default time-based cache expiration policy and an optional SqlCacheDependency-based expiry policy that is only valid for the SqlClient provider. The AccessDataSource control, which derives from SqlDataSource, adds an implicit file-based dependency to the source MDB file.","Caching is off by default (EnableCaching=false) for SqlDataSource, but caching can be documented as a best practice. When EnableCaching=true and a cache duration (in seconds) is specified, caching is enabled. Note that an absolute expiration policy is used by default, but can be configured by the Page developer to use a sliding window expiration, where the duration is reset each time the cache entry is accessed. The following example demonstrates an AccessDataSource control that caches data to expire every hour (unless the underlying data file changes, which would force an early expiration).",{"@attributes":{"id":"p-0128","num":"0158"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<asp:AccessDataSource"]},{"entry":[{},"\u2003\u2003DataFile=\u201cGrocerToGo.mdb\u201d"]},{"entry":[{},"\u2003\u2003SelectCommand=\u201cselect * from products\u201d"]},{"entry":[{},"\u2003\u2003EnableCaching=\u201ctrue\u201d"]},{"entry":[{},"\u2003\u2003CacheDuration=\u201c3600\u201d"]},{"entry":[{},"\u2003\u2003runat=\u201cserver\u201d"]},{"entry":[{},"\/>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"A unique cache key is created for each combination of cache parameters, ConnectionString, SelectParameters and SelectCommand. This causes each individual \u201cview\u201d of the DataSource control to receive a separate cache entry. Note that it also has the side-effect of allowing identical views (even in different pages) to share a cache entry. Each unique set of cache properties, such as Duration and ExpirationPolicy, also cause a unique cache key to be created. The cache key is one-way hashed to protect the source data used to generate it.","Generating the cache key using SelectParameters allows cache entries to vary by user-specific data or page-level parameters, and so on. For example, to vary a cache key by user identity a developer might include a SelectParameter that references a session variable, personalization variable, or user identity name. The latter is demonstrated by the Example below.",{"@attributes":{"id":"p-0131","num":"0161"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2002<asp:SqlDataSource"},{"entry":"ConnectionString=\u201cserver=(local);database="},{"entry":"preferences;trusted_connection=yes\u201d"},{"entry":"\u2003\u2002SelectCommand=\u201cselect * from Favorites where userId = @uid\u201d"},{"entry":"\u2003\u2002EnableCaching=\u201ctrue\u201d"},{"entry":"\u2003\u2002CacheDuration=\u201c1200\u201d"},{"entry":"\u2003\u2002runat=\u201cserver\u201d"},{"entry":"\u2002>"},{"entry":"\u2003<SelectParameters>"},{"entry":"\u2003\u2002<asp:PageParameter Name=\u201cuid\u201d PropertyName="},{"entry":"\u2003\u2002\u201cUser.Identity.Name\u201d\/>"},{"entry":"\u2003<\/SelectParameters>"},{"entry":"\u2002<\/asp:SqlDataSource>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"SQL Cache Invalidation Support.","The SqlDataSource control additionally supports SqlCacheDependency-based expiry (provided the service has been configured for the database server). The dependency is specified as a string property, matching the same format as supported by the related Page directive. The syntax is of the form \u201ca:b\u201d, where (a) refers to a named database under the <cache><sqlCacheDependency> section of web.config, and (b) refers to a specific table name for that connection. Multiple table dependencies can be specified in a semicolon-delimited fashion, e.g. \u201ca:b;a:b;a:b\u201d. For more information regarding SQL cache dependencies, refer to the SQL Cache Dependency specification.","The following example demonstrates a SqlCacheDependency defined for a SqlDataSource control. The cache duration is set to \u201cInfinite\u201d so that the entry never expires unless the backend table data changes (uses a type converter on the integer Duration property).",{"@attributes":{"id":"p-0134","num":"0164"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<asp:SqlDataSource"]},{"entry":[{},"\u2003\u2003ConnectionString=\u201cserver=(local);database="]},{"entry":[{},"\u2003\u2003pubs;trusted_connection=yes\u201d"]},{"entry":[{},"\u2003\u2003SelectCommand=\u201cselect * from authors\u201d"]},{"entry":[{},"\u2003\u2003EnableCaching=\u201ctrue\u201d"]},{"entry":[{},"\u2003\u2003CacheDuration=\u201cInfinite\u201d"]},{"entry":[{},"\u2003\u2003SqlCacheDependency=\u201cpubs:Authors;\u201d"]},{"entry":[{},"\u2003\u2003runat=\u201cserver\u201d"]},{"entry":[{},"\/>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Multiple table dependencies may be defined as well, as shown in the example below:",{"@attributes":{"id":"p-0136","num":"0166"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<asp:SqlDataSource"},{"entry":"\u2003ConnectionString=\u201cserver=(local);database="},{"entry":"\u2003pubs;trusted_connection=yes\u201d"},{"entry":"\u2003SelectCommand=\u201cSelectAuthorTitles\u201d"},{"entry":"\u2003EnableCaching=\u201ctrue\u201d"},{"entry":"\u2003CacheDuration=\u201c1200\u201d"},{"entry":"\u2003SqlCacheDependency=\u201cpubs:Authors;pubs:TitleAuthor\u201d"},{"entry":"\u2003runat=\u201cserver\u201d"},{"entry":">"},{"entry":"\u2002<SelectParameters>"},{"entry":"\u2003<asp:ControlParameter Name=\u201cau_id\u201d ControlId=\u201cMyDropDown\u201d"},{"entry":"\u2003\u2002PropertyName=\u201cSelectedValue\u201d\/>"},{"entry":"\u2002<\/SelectParameters>"},{"entry":"<\/asp:SqlDataSource>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Note that SqlCacheInvalidation is ideal for Web-farm scenarios, because an update from one machine in the farm can cause a cache invalidation for other machines in the farm.","XmlDataSource and DataSetDatasource","XmlDataSource and XmlDataSetDataSource perform caching and file monitoring automatically, e.g. EnableCaching=true and CacheDuration=Infinite by default, and implicitly adds a file dependency on the source XML DataFile (and SchemaFile or TransformFile, if defined). The cache key is computed from the hash of dependent file paths. Although basic caching is enabled by default, the base Cache object properties (Enabled, Duration, ExpirationPolicy, KeyDependency) are also user-customizable. Refer to the XmlDataSource and DataSetDataSource specifications for the exact object model.","WebServiceDataSource and ObjectDataSource","WebServiceDataSource exposes the base Cache object properties, and caching is off by default (EnableCaching=false). No implicit dependencies. The cache key is computed from the hash of the object (or Web Service proxy) identifier, method name, and parameter values.","Note that one use for ObjectDataSource is to interface with a business-logic component that retrieves data from a SQL database. The ObjectDataSource does not provide automatic support for SqlCacheInvalidation, but the object's implementation may handle this in custom code (possibly using a SqlDataSource).","SqlXmlDataSource","SqlXmlDataSource (NYI) behaves exactly like SqlDataSource.","Object Model Reference",{"@attributes":{"id":"p-0145","num":"0175"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"namespace System.Web.UI"},{"entry":"\u2003{"},{"entry":"\u2003\u2003\u2003public abstract class DataSourceCache : IStateManager"},{"entry":"\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003public const int Infinite = Int32.MaxValue;"},{"entry":"\u2003\u2003\u2003\/\/ Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003public virtual bool","Enabled","{ get; set; }"]},{"entry":["\u2003\u2003\u2003public virtual int","Duration","{ get; set; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003public virtual","ExpirationPolicy","{ get; set; }"]},{"entry":"\u2003\u2003\u2003DataSourceCacheExpiry"},{"entry":["\u2003\u2003\u2003public virtual String","KeyDependency","{ get; set; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\u2003\/\/ Methods"},{"entry":"\u2003\u2003\u2003public void Invalidate (HttpContext context, String key);"},{"entry":"\u2003\u2003\u2003public Object LoadDataFromCache (HttpContext context,"},{"entry":"\u2003\u2003\u2003String key);"},{"entry":"\u2003\u2003\u2003protected virtual void SaveDataToCache"},{"entry":"\u2003\u2003\u2003\u2003(HttpContext context, String key, Object data,"},{"entry":"CacheDependency dependency);"},{"entry":"\u2003\u2003\u2003\/\/ IStateManager implementation"},{"entry":"\u2003\u2003\u2003protected StateBag ViewState { get; }"},{"entry":"\u2003\u2003\u2003protected bool IsTrackingViewState { get; }"},{"entry":"\u2003\u2003\u2003protected virtual Object SaveViewState (void);"},{"entry":"\u2003\u2003\u2003protected void TrackViewState (void);"},{"entry":"\u2003\u2003\u2003protected virtual void LoadViewState (Object savedState);"},{"entry":"\u2003}"},{"entry":"\u2003public sealed class SqlDataSourceCache : DataSourceCache"},{"entry":"\u2003{"},{"entry":"\u2003\u2003\u2003\/\/ Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["\u2003\u2003\u2003public String\u2003\u2003\u2003\u2003SqlCacheDependency","{ get; set; }"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\u2003\/\/ Methods"},{"entry":"\u2003\u2003\u2003public void SaveDataToCache (HttpContext context, String key,"},{"entry":"Object data);"},{"entry":"\u2003}"},{"entry":"\u2003public sealed class FileDataSourceCache : DataSourceCache"},{"entry":"\u2003{"},{"entry":"\u2003\u2003\u2003\/\/ Methods"},{"entry":"\u2003\u2003\u2003public void SaveDataToCache"},{"entry":"\u2003\u2003\u2003\u2003(HttpContext context, String key, Object data,"},{"entry":"\u2003\u2003\u2003\u2003String[ ] filenames);"},{"entry":"\u2003}"},{"entry":"\u2003public enum DataSourceCacheExpiry"},{"entry":"\u2003{"},{"entry":"\u2003\u2003\u2003Absolute = 0,"},{"entry":"\u2003\u2003\u2003Sliding = 1"},{"entry":"\u2003}"},{"entry":"}"},{"entry":"\u2003\u2003\u2002Persistence Format"},{"entry":"<asp:SqlDataSource"},{"entry":"\u2003EnableCaching=\u201c[true\\false]\u201d"},{"entry":"\u2003CacheDuration=\u201cint\u201d"},{"entry":"\u2003CacheExpirationPolicy=\u201cDataSourceCacheExpiry\u201d"},{"entry":"\u2003SqlCacheDependency=\u201cString\u201d"},{"entry":"\u2003ConnectionString=\u201cserver=(local);database="},{"entry":"\u2003pubs;trusted_connection=yes\u201d"},{"entry":"\u2003SelectCommand=\u201cselect * from authors\u201d"},{"entry":"\u2003..."},{"entry":"\u2003runat=\u201cserver\u201d"},{"entry":"\/>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"2. Overview","ObjectDataSource enables a completely declarative model for associating data-bound controls with the data exposed from a business component. It also takes advantage of declarative parameters for extracting values from page variables or controls to pass to the object's methods. Like all data source controls , ObjectDataSource exposes a common interface to data-bound control authors and is self-describing about its capabilities.","ObjectDataSource makes assumptions about the objects that it binds against in order to simplify the object model. For example, in this implementation, objects are assumed to be stateless with a default constructor, having methods that easily map to select, update, insert, and delete semantics. Additionally, updates are assumed to be performed one item at a time, rather than batched","Specification","ObjectDataSource allows object methods to be associated with the common DataSource select, update, insert, and delete operations. The simplest usage of ObjectDataSource defines an object type to instantiate and a select method that returns an IEnumerable or DataSet. If a method returns a DataSet, ObjectDataSource automatically extracts the default DataView (which implements IEnumerable), to return from the Select operation. The TypeName property defines the object type to create and the SelectMethod defines the method to invoke for retrieving data. The value assigned to the TypeName property can be a simple type name for objects in the code or bin directory, or a fully-qualified type name for objects in the global assembly cache (this uses a reference in the <assemblies> section of machine.config). ObjectDataSource just calls Type.GetType on this value at run-time.",{"@attributes":{"id":"p-0149","num":"0179"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<form runat=\u201cserver\u201d>"]},{"entry":[{},"\u2002<asp:GridView DataSourceId=\u201cMySource\u201d runat=\u201cserver\u201d\/>"]},{"entry":[{},"\u2002<asp:ObjectDataSource Id=\u201cMySource\u201d"]},{"entry":[{},"\u2002\u2009TypeName=\u201cIBuySomething.Commerce.ProductsDB\u201d"]},{"entry":[{},"\u2003SelectMethod=\u201cGetProducts\u201d"]},{"entry":[{},"\u2003runat=\u201cserver\u201d\/>"]},{"entry":[{},"<\/form>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Object Instantiation and Lifetime The object associated with ObjectDataSource has a default constructor (no parameters). It is also assumed to be stateless, as ObjectDataSource will create and dispose the object for each method call, rather than holding it in memory for the lifetime of the request. If the object implements IDisposable, the Dispose method will be called on the object before releasing the object reference. Note that if the method to invoke is static, the object will not be instantiated at all. ObjectDataSource also exposes ObjectCreated and ObjectDisposing events to give the user access to the object instance before and after method invocation. These events can be used to set properties or make additional method calls on the object.",{"@attributes":{"id":"p-0151","num":"0181"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public void ObjectDataSource_ObjectCreated (Object sender,"]},{"entry":[{},"\u2002ObjectDataSourceEventArgs e) {"]},{"entry":[{},"\u2003ProductsDB myObj = (ProductsDB)e.ObjectInstance;"]},{"entry":[{},"}"]},{"entry":[{},"public void ObjectDataSource_ObjectDisposing (Object sender,"]},{"entry":[{},"\u2002ObjectDataSourceDisposingEventArgs e) {"]},{"entry":[{},"\u2003ProductsDB myObj = (ProductsDB)e.ObjectInstance;"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"If the object does not have a default constructor, the developer may handle OnCreating event to instantiate the object programmatically instead of allowing the ObjectDataSource to create it. When the object is created through the OnCreating event, the OnCreated event is not fired. Note that the user may also cancel the OnDisposing event to ensure the object is not disposed after each method call, if the object implements IDisposable.",{"@attributes":{"id":"p-0153","num":"0183"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public void ObjectDataSource_ObjectCreating (Object sender,"]},{"entry":[{},"\u2002ObjectDataSourceEventArgs e) {"]},{"entry":[{},"\u2003e.ObjectInstance = new ProductsFactory(int regionID);"]},{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Associating Object Methods. A unique method may be invoked for each data source operation, defined by the SelectMethod, UpdateMethod, InsertMethod, and DeleteMethod properties. If a method is static, the object is not instantiated in order to make the method call (ObjectDataSource reflects against MethodInfo at run-time). ObjectDataSource will resolve method overloads on the basis of the names and number of parameters, but not types. The ObjectDataSource expects the SelectMethod to return either an IEnumerable or a DataSet. The Insert, Update, and Delete methods nearly always have associated parameters, and may optionally also have a return value. For more information regarding parameters, refer to section 3.0.3 below.",{"@attributes":{"id":"p-0155","num":"0185"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<asp:ObjectDataSource Id=\u201cMySource\u201d"]},{"entry":[{},"\u2002TypeName=\u201cUsersDB\u201d"]},{"entry":[{},"\u2002SelectMethod=\u201cGetUsers\u201d"]},{"entry":[{},"\u2002InsertMethod=\u201cAddUser\u201d"]},{"entry":[{},"\u2002UpdateMethod=\u201cUpdateUser\u201d"]},{"entry":[{},"\u2002DeleteMethod=\u201cDeleteUser\u201d"]},{"entry":[{},"\u2002runat=\u201cserver\u201d>"]},{"entry":[{},"\u2002...parameters..."]},{"entry":[{},"<\/asp:ObjectDataSource>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"An object may optionally decorate its methods with a DataObjectMethodAttribute for associating them with one of these data source operations (represented by the DataObjectMethodType enumeration). This attribute may also indicate the default method method on the object for a particular data source operation. This attribute is primarily used at design-time to enable the design-time wizard to and property grid to automatically set the ObjectDataSource method properties when the TypeName property is set (see section 3.1 below), however it is also used at run-time to resolve overloads when there is more than one method on the object that takes the same number of parameters with identical names (ObjectDataSource cannot resolve method overloads on the basis of data type). Note, however, that a method property can be set to any method of the object, not just those marked with the DataObjectMethod attribute.",{"@attributes":{"id":"p-0157","num":"0187"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"public class ShoppingCart {"},{"entry":"\u2003[DataObjectMethodAttribute(DataSourceOperation.Select)]"},{"entry":"\u2003public SqlDataReader GetItems(string cartID);"},{"entry":"\u2003[DataObjectSourceMethodAttribute(DataSourceOperation.Update)]"},{"entry":"\u2003public void UpdateItem(string cartID, int productID, int quantity);"},{"entry":"\u2003[DataObjectSourceMethodAttribute(DataSourceOperation.Delete)]"},{"entry":"\u2003public void RemoveItem(string cartID, int productID);"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Associating Method Parameters. If a method takes parameters, the values are obtained from an associated parameters collection: SelectParameters, InsertParameters, UpdateParameters, or DeleteParameters. The collection contains Parameters objects (any object deriving from System.Web.UI.WebControls.Parameter), which can extract values from page-level intrinsics, variables, cookies, or other controls.",{"@attributes":{"id":"p-0159","num":"0189"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<form runat=\u201cserver\u201d>"},{"entry":"\u2002Enter a new quantity: <asp:TextBox Id=\u201cMyTextBox\u201d runat=\u201cserver\u201d\/>"},{"entry":"\u2002<asp:Button Text=\u201cSubmit\u201d OnClick=\u201cDoUpdate\u201d runat=\u201cserver\u201d\/>"},{"entry":"\u2002<asp:ObjectDataSource Id=\u201cMySource\u201d"},{"entry":"\u2002\u2002TypeName=\u201cShoppingCartDB\u201d"},{"entry":"\u2002\u2002UpdateMethod=\u201cUpdateItem\u201d"},{"entry":"\u2002\u2002runat=\u201cserver\u201d>"},{"entry":"\u2002\u2002<UpdateParameters>"},{"entry":"\u2002\u2002\u2002<asp:CookieParameter Name=\u201ccartId\u201d CookieName=\u201cCartId\u201d\/>"},{"entry":"\u2002\u2002\u2002<asp:QueryStringParameter Name=\u201cproductId\u201d"},{"entry":"\u2002\u2002\u2002RequestField=\u201cProductId\u201d\/>"},{"entry":"\u2002\u2002\u2002<asp:ControlParameter Name=\u201cquantity\u201d ControlId=\u201cMyTextBox\u201d \/>"},{"entry":"\u2002\u2002<\/UpdateParameters>"},{"entry":"\u2002<\/asp:ObjectDataSource>"},{"entry":"<\/form>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The parameters collection for a particular operation can also be populated dynamically by a data-bound control, such as GridView or DetailsView. In this case, the parameters are passed as a dictionary directly to one of the ObjectDataSourceView methods, e.g. Insert (IDictionary values). Note that the data-bound control will pass parameters according to the order they appear in the UI, whereas ObjectDataSource expects parameters in order of the method signature. To remedy this disconnect, the ObjectDataSource will automatically reorder parameters passed to the view to match the order of parameters defined in the associated method signature (using reflection). The matching of parameter names is case-insensitive. ObjectDataSource will type-cast parameters according to the parameter types specified on the Parameter objects.","The Update, Insert and Delete methods usually accept a parameter for each property of the data item object, for example:\n\n",{"@attributes":{"id":"p-0162","num":"0198"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<asp:ObjectDataSource Id=\u201cMySource\u201d"]},{"entry":[{},"\u2002TypeName=\u201cPubs.AuthorsDB\u201d"]},{"entry":[{},"\u2002DataObjectTypeName=\u201cPubs.Author\u201d"]},{"entry":[{},"\u2002UpdateMethod=\u201cGetAuthors\u201d"]},{"entry":[{},"\u2002UpdateMethod=\u201cUpdateAuthor\u201d"]},{"entry":[{},"\u2002runat=\u201cserver\u201d\/>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"If the user needs to insert or modify parameters programmatically before the method is invoked, he\/she may handle the Selecting, Inserting, Updating, or Deleting events of ObjectDataSource. The InputParameters property of ObjectDataSourceMethodEventArgs already contains any values extracted from the associated Parameters collection, and\/or values populated from a data-bound control.",{"@attributes":{"id":"p-0164","num":"0200"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2002void\u2003\u2003\u2003ObjectDataSource_Inserting\u2003\u2003\u2003(Object\u2003\u2003\u2003sender,"},{"entry":"ObjectDataSourceMethodEventArgs e) {"},{"entry":"\u2002\u2003String value = e.InputParameters[\u201cvalue\u201d].ToString( );"},{"entry":"\u2002\u2003params[\u201cvalue\u201d] = HtmlEncode(value);"},{"entry":"\u2002}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"It is common to have return values or reference parameters output from one or more of a business object's methods. The developer can handle the OnSelected, OnInserted, OnUpdated, or OnDeleted events to retrieve these values from the passed in event args, as demonstrated in the example below. Note that unlike SqlDataSource, ObjectDataSource does not use the Direction property to be set on items in the Parameters collection in order to identify reference parameters, since this may be obtained through reflection.",{"@attributes":{"id":"p-0166","num":"0202"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2002void\u2003\u2003\u2003ObjectDataSource_Inserted\u2003\u2003\u2003(Object\u2003\u2003\u2003sender,"},{"entry":"ObjectDataSourceStatusEventArgs e) {"},{"entry":"\u2002\u2003int retval = (int)e.ReturnValue;"},{"entry":"\u2002\u2003String value = e.OutputParameters[\u201cvalue\u201d].ToString( );"},{"entry":"\u2002}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Caching and Filtering Selected Data. ObjectDataSource supports caching of the data returned from the SelectMethod, but not caching of the object itself. The cache key is computed from the TypeName, Method, and Parameter values. To enable caching, the developer sets the EnableCaching property to true, optionally setting related properties such as CacheDuration, CacheExpirationPolicy, or SqlCacheDependency. Refer to the DataSource Caching specification for more information about these properties.",{"@attributes":{"id":"p-0168","num":"0204"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<asp:ObjectDataSource id=\u201cMySource\u201d"]},{"entry":[{},"\u2002TypeName=\u201cAuthorsDB\u201d"]},{"entry":[{},"\u2002SelectMethod=\u201cGetAuthors\u201d"]},{"entry":[{},"\u2002EnableCaching=\u201ctrue\u201d"]},{"entry":[{},"\u2002CacheDuration=\u201cInfinite\u201d"]},{"entry":[{},"\u2002SqlCacheDependency=\u201cpubs:Authors;\u201d"]},{"entry":[{},"\u2002runat=\u201cserver\u201d"]},{"entry":[{},"\/>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"ObjectDataSource also exposes a FilterExpression property which can be used to apply a filter to the data returned from the SelectMethod, if the data is represented by a DataSet, DataTable, or DataView object. The format of the filter expression matches the syntax expected by the DataView.RowFilter property. This feature is most powerful when used in conjunction with caching, as shown in the example below.",{"@attributes":{"id":"p-0170","num":"0206"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<form runat=\u201cserver\u201d>"},{"entry":"\u2002<asp:DropDownList Id=\u201cMyDropDown\u201d"},{"entry":"\u2002\u2002DataSourceId=\u201cGetAuthors\u201d"},{"entry":"\u2002\u2002DataTextField=\u201cstate\u201d"},{"entry":"\u2002\u2002runat=\u201cserver\u201d\/>"},{"entry":"\u2002<asp:GridView Id=\u201cMyGrid\u201d"},{"entry":"\u2002\u2002DataSourceId=\u201cGetAuthorsForState\u201d"},{"entry":"\u2002\u2002DataTextField=\u201cstate\u201d"},{"entry":"\u2002\u2002runat=\u201cserver\u201d\/>"},{"entry":"\u2002<asp:ObjectDataSource id=\u201cGetAuthorsForState\u201d"},{"entry":"\u2002\u2002TypeName=\u201cAuthorsDB\u201d"},{"entry":"\u2002\u2002SelectMethod=\u201cGetAuthors\u201d"},{"entry":"\u2002\u2002EnableCaching=\u201ctrue\u201d"},{"entry":"\u2002\u2002CacheDuration=\u201cInfinite\u201d"},{"entry":"\u2002\u2002SqlCacheDependency=\u201cpubs:Authors;\u201d"},{"entry":"\u2002\u2002FilterExpression=\u201cstate=@state\u201d"},{"entry":"\u2002\u2002runat=\u201cserver\u201d"},{"entry":"\u2002>"},{"entry":"\u2002\u2002<FilterParameters>"},{"entry":"\u2002\u2002\u2002\u2002<asp:ControlParameter Name=\u201cstate\u201d ControlId=\u201cMyDropDown\u201d \/>"},{"entry":"\u2002\u2002<\/FilterParameters>"},{"entry":"\u2002<\/asp:ObjectDataSource>"},{"entry":"\u2002<asp:ObjectDataSource id=\u201cGetAuthors\u201d"},{"entry":"\u2002\u2002TypeName=\u201cAuthorsDB\u201d"},{"entry":"\u2002\u2002SelectMethod=\u201cGetAuthors\u201d"},{"entry":"\u2002\u2002EnableCaching=\u201ctrue\u201d"},{"entry":"\u2002\u2002CacheDuration=\u201cInfinite\u201d"},{"entry":"\u2002\u2002SqlCacheDependency=\u201cpubs:Authors;\u201d"},{"entry":"\u2002\u2002runat=\u201cserver\u201d"},{"entry":"\u2002\/>"},{"entry":"<\/form>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Note: When a FilterParameter is undefined or equals null, the filter is not applied to the data. FilterParameters are also not used for the purposes of computing the cache key, since the filter is applied post-retrieval from the cache.","Sorting and Paging in the SelectMethod Implementation. If the method associated with the SelectMethod property returns a DataSet, DataView, or DataTable, the ObjectDataSource will automatically support sorting over the returned result. However, it is sometimes desirable to apply sorting in the implementation of the method itself. To support this scenario, the ObjectDataSource exposes a SortParameterName property, which can be set to the name of the parameter of the SelectMethod that can be associated with the sort expression passed by the data-bound control when the Select operation is invoked. This expression will be passed to the parameter on the object, which can apply sorting logic.",{"@attributes":{"id":"p-0173","num":"0209"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<asp:ObjectDataSource ID=\u201cMySource\u201d"]},{"entry":[{},"\u2003TypeName=\u201cCustomCompany.CustomersDatabase\u201d"]},{"entry":[{},"\u2003\u2009SelectMethod=\u201cGetCustomers\u201d"]},{"entry":[{},"\u2003\u2009SortParameterName=\u201csortex\u201d"]},{"entry":[{},"\u2003\u2009runat=\u201cserver\u201d\/>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Object Model Reference",{"@attributes":{"id":"p-0174","num":"0210"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"namespace System.Web.UI.WebControls"},{"entry":"{"},{"entry":"\u2003\u2003public class ObjectDataSource : DataSourceControl"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\/\/ Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["\u2003\u2003\u2003\u2003public String","TypeName","{ get; set; }"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003public String","DataObjectTypeName","{ get; set; }"]},{"entry":["\u2003\u2003\u2003\u2003public String","SelectMethod","{ get; set; }"]},{"entry":["\u2003\u2003\u2003\u2003public String","InsertMethod","{ get; set; }"]},{"entry":["\u2003\u2003\u2003\u2003public String","UpdateMethod","{ get; set; }"]},{"entry":["\u2003\u2003\u2003\u2003public String","DeleteMethod","{ get; set; }"]},{"entry":["\u2003\u2003\u2003\u2003public String","FilterExpression","{ get; set; }"]},{"entry":["\u2003\u2003\u2003\u2003public ParameterCollection","SelectParameters","{ get; }"]},{"entry":["\u2003\u2003\u2003\u2003public ParameterCollection","InsertParameters","{ get; }"]},{"entry":["\u2003\u2003\u2003\u2003public ParameterCollection","UpdateParameters","{ get; }"]},{"entry":["\u2003\u2003\u2003\u2003public ParameterCollection","DeleteParameters","{ get; }"]},{"entry":["\u2003\u2003\u2003\u2003public ParameterCollection","FilterParameters","{ get; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003public String","SortParameterName","{ get; set; }"]},{"entry":["\u2003\u2003\u2003\u2003public String","RowIndexParameterName","{ get; set; }"]},{"entry":["\u2003\u2003\u2003\u2003public String","MaxRowsParameterName","{ get; set; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["\u2003\u2003\u2003\u2003public String","SelectMethod","{ get; set; }"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003public virtual bool","EnablePaging","{ get;"]},{"entry":"set; }"},{"entry":["\u2003\u2003\u2003\u2003public virtual bool","EnableCaching","{ get;"]},{"entry":"set; }"},{"entry":["\u2003\u2003\u2003\u2003public virtual int","CacheDuration","{ get;"]},{"entry":"set; }"},{"entry":["\u2003\u2003\u2003\u2003public virtual DataSourceCacheExpiry","CacheExpirationPolicy","{ get;"]},{"entry":"set; }"},{"entry":["\u2003\u2003\u2003\u2003public virtual String","SqlCacheDependency","{ get;"]},{"entry":"set; }"},{"entry":"\u2003\u2003\u2003\u2003\/\/ Events"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u2003\u2003\u2003\u2003public event ObjectDataSourceObjectEventHandler..."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ObjectCreating","{","\u2002 add;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"remove; }"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ObjectCreated","{","\u2002 add;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"remove; }"},{"entry":"\u2003\u2003\u2003\u2003public event ObjectDataSourceDisposingEventHandler..."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ObjectDisposing","{ add; remove; }"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u2003\u2003\u2003\u2003public event ObjectDataSourceMethodEventHandler..."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Selecting","{ add; remove; }"]},{"entry":[{},"Inserting","{ add; remove; }"]},{"entry":[{},"Updating","{ add; remove; }"]},{"entry":[{},"Deleting","{ add; remove; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u2003\u2003\u2003\u2003public event ObjectDataSourceStatusEventHandler..."}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Selected","{ add; remove; }"]},{"entry":[{},"Inserted","{ add; remove; }"]},{"entry":[{},"Updated","{ add; remove; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Deleted","{","\u2002 add;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"remove; }"},{"entry":"\u2003\u2003\u2003\u2003\/\/ Constructors"},{"entry":"\u2003\u2003\u2003\u2003public ObjectDataSource (void);"},{"entry":"\u2003\u2003\u2003\u2003public ObjectDataSource (String typeName, String selectMethod);"},{"entry":"\u2003\u2003\u2003\u2003\/\/ Methods"},{"entry":"\u2003\u2003\u2003\u2003public IEnumerable Select (void);"},{"entry":"\u2003\u2003\u2003\u2003public int Insert (void);"},{"entry":"\u2003\u2003\u2003\u2003public int Update (void);"},{"entry":"\u2003\u2003\u2003\u2003public int Delete (void);"},{"entry":"\u2003\u2003\u2003\u2003protected virtual void OnObjectCreating (ObjectDataSourceEventArgs e);"},{"entry":"\u2003\u2003\u2003\u2003protected virtual void OnObjectCreated (ObjectDataSourceEventArgs e);"},{"entry":"\u2003\u2003\u2003\u2003protected\u2003\u2003\u2003\u2003virtual\u2003\u2003\u2003\u2003void\u2003\u2003\u2003\u2003OnObjectDisposing"},{"entry":"(ObjectDataSourceDisposingEventArgs e);"},{"entry":"\u2003\u2003\u2003\u2003protected virtual void OnSelecting (ObjectDataSourceMethodEventArgs e);"},{"entry":"\u2003\u2003\u2003\u2003protected virtual void OnInserting (ObjectDataSourceMethodEventArgs e);"},{"entry":"\u2003\u2003\u2003\u2003protected virtual void OnUpdating (ObjectDataSourceMethodEventArgs e);"},{"entry":"\u2003\u2003\u2003\u2003protected virtual void OnDeleting (ObjectDataSourceMethodEventArgs e);"},{"entry":"\u2003\u2003\u2003\u2003protected virtual void OnSelected (ObjectDataSourceStatusEventArgs e);"},{"entry":"\u2003\u2003\u2003\u2003protected virtual void OnInserted (ObjectDataSourceStatusEventArgs e);"},{"entry":"\u2003\u2003\u2003\u2003protected virtual void OnUpdated (ObjectDataSourceStatusEventArgs e);"},{"entry":"\u2003\u2003\u2003\u2003protected virtual void OnDeleted (ObjectDataSourceStatusEventArgs e);"},{"entry":"\u2003\u2003\u2003\u2003\/\/ IDataSource Implementation"},{"entry":"\u2003\u2003\u2003\u2003protected override DataSourceView GetView (String viewName);"},{"entry":"\u2003\u2003\u2003\u2003protected override ICollection GetViewNames (void);"},{"entry":"\u2003\u2003\u2003\u2003\/\/ IStateManager Implementation"},{"entry":"\u2003\u2003\u2003\u2003protected override void LoadViewState (Object savedState);"},{"entry":"\u2003\u2003\u2003\u2003protected override object SaveViewState (void);"},{"entry":"\u2003\u2003\u2003\u2003protected override void TrackViewState (void);"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003public class ObjectDataSourceEventArgs : EventArgs"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\/\/ Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003Object","ObjectInstance"]},{"entry":"\u2003\u2003\u2003\u2003{ get; set; }"},{"entry":"\u2003\u2003\u2003\u2003}"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\u2003\u2003public class ObjectDataSourceDisposingEventArgs : CancelEventArgs"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\/\/ Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003Object","ObjectInstance"]},{"entry":"\u2003\u2003\u2003\u2003{ get; }"},{"entry":"\u2003\u2003\u2003\u2003}"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\u2003\u2003public class ObjectDataSourceMethodEventArgs : EventArgs"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\/\/ Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003public IOrderedDictionary","InputParameters","{ get;"]},{"entry":"}"},{"entry":"\u2003\u2003\u2003\u2003}"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\u2003\u2003public class ObjectDataSourceStatusEventArgs : EventArgs"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\/\/ Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003public Object","ReturnValue"]},{"entry":"\u2003\u2003\u2003\u2003{ get; }"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003public IOrderedDictionary","OutputParameters","{ get;"]},{"entry":"}"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003public Exception","Exception"]},{"entry":"\u2003\u2003\u2003\u2003{ get; }"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003public bool","ExceptionHandled","{ get;"]},{"entry":"set; }"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"}"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"namespace System.ComponentModel {"},{"entry":"\u2003\u2003\u2003\u2003[AttributeUsage(AttributeTargets.Method)]"},{"entry":"\u2003\u2003\u2003\u2003public sealed class DataObjectMethodAttribute : Attribute {"},{"entry":"\u2003\u2003\u2003\u2003{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003public","DataObjectMethodAttribute(DataObjectMethodType"]},{"entry":"methodType);"},{"entry":["\u2003\u2003\u2003\u2003\u2003\u2003public","DataObjectMethodAttribute(DataObjectMethodType"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"methodType,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003bool isDefault);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003public bool IsDefault { get; }"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003public DataObjectMethodType MethodType { get; }"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003[AttributeUsage(AttributeTargets.Class)]"},{"entry":"\u2003\u2003\u2003\u2003public sealed class DataObjectAttribute : Attribute"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003public static readonly DataObjectAttribute DataObject"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003= new DataObjectAttribute(true);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003public static readonly DataObjectAttribute NonDataObject"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003= new DataObjectAttribute(false);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003public static readonly DataObjectAttribute Default"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003= NonDataObject;"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003public DataObjectAttribute( );"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003public DataObjectAttribute(bool isDataObject);"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003public bool IsDataObject { get; }"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003\u2003public enum DataObjectMethodType"},{"entry":"\u2003\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Fill = 0,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Select = 1,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Update = 2,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Insert = 3,"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003Delete = 4"},{"entry":"\u2003\u2003\u2003\u2003}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0175","num":"0211"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<asp:ObjectDataSource"]},{"entry":[{},"\u2003TypeName=\u201cString\u201d"]},{"entry":[{},"\u2003DataObjectTypeName=\u201cString\u201d"]},{"entry":[{},"\u2003SelectMethod=\u201cString\u201d"]},{"entry":[{},"\u2003UpdateMethod=\u201cString\u201d"]},{"entry":[{},"\u2003InsertMethod=\u201cString\u201d"]},{"entry":[{},"\u2003DeleteMethod=\u201cString\u201d"]},{"entry":[{},"\u2003FilterExpression=\u201cString\u201d"]},{"entry":[{},"\u2003EnableCaching=\u201c[true\\false]\u201d"]},{"entry":[{},"\u2003CacheDuration=\u201cint\u201d"]},{"entry":[{},"\u2003CacheExpirationPolicy=\u201cDataSourceCacheExpiry\u201d"]},{"entry":[{},"\u2003SqlCacheDependency=\u201cString\u201d"]},{"entry":[{},"\u2003OnSelecting=\u201cObjectDataSourceMethodEventHandler\u201d"]},{"entry":[{},"\u2003OnUpdating=\u201cObjectDataSourceMethodEventHandler\u201d"]},{"entry":[{},"\u2003OnInserting=\u201cObjectDataSourceMethodEventHandler\u201d"]},{"entry":[{},"\u2003OnDeleting=\u201cObjectDataSourceMethodEventHandler\u201d"]},{"entry":[{},"\u2003OnSelected=\u201cObjectDataSourceStatusEventHandler\u201d"]},{"entry":[{},"\u2003OnUpdated=\u201cObjectDataSourceStatusEventHandler\u201d"]},{"entry":[{},"\u2003OnInserted=\u201cObjectDataSourceStatusEventHandler\u201d"]},{"entry":[{},"\u2003OnDeleted=\u201cObjectDataSourceStatusEventHandler\u201d"]},{"entry":[{},"\u2003OnObjectCreating=\u201cObjectDataSourceObjectEventHandler\u201d"]},{"entry":[{},"\u2003OnObjectCreated=\u201cObjectDataSourceObjectEventHandler\u201d"]},{"entry":[{},"\u2003OnObjectDisposing=\u201cObjectDataSourceDisposingEventHandler\u201d"]},{"entry":[{},"\u2003runat=\u201cserver\u201d>"]},{"entry":[{},"\u2003\u2003<SelectParameters>"]},{"entry":[{},"\u2003\u2003\u2003[<System.Web.UI.WebControls.Parameter ...>]"]},{"entry":[{},"\u2003\u2003<\/SelectParameters>"]},{"entry":[{},"\u2003\u2003<UpdateParameters>"]},{"entry":[{},"\u2003\u2003\u2003[<System.Web.UI.WebControls.Parameter ...>]"]},{"entry":[{},"\u2003\u2003<\/UpdateParameters>"]},{"entry":[{},"\u2003\u2003<DeleteParameters>"]},{"entry":[{},"\u2003\u2003\u2003[<System.Web.UI.WebControls.Parameter ...>]"]},{"entry":[{},"\u2003\u2003<\/DeleteParameters>"]},{"entry":[{},"\u2003\u2003<InsertParameters>"]},{"entry":[{},"\u2003\u2003\u2003[<System.Web.UI.WebControls.Parameter ...>]"]},{"entry":[{},"\u2003\u2003<\/InsertParameters>"]},{"entry":[{},"\u2003\u2003<FilterParameters>"]},{"entry":[{},"\u2003\u2003\u2003[<System.Web.UI.WebControls.Parameter ...>]"]},{"entry":[{},"\u2003\u2003<\/FilterParameters>"]},{"entry":[{},"<\/asp:ObjectDataSource>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Overview","The SqlDataSource control is a data source control  that represents a connection to an SQL database provider, such as SQL, OLEDB, ODBC, Oracle, and\/or the like. In this implementation, a separate AccessDataSource control is implemented, although it is possible to connect to other objects such as Access with an SqlDataSource as well. Like all data source controls, the SqlDataSource control can be declaratively bound to any data-bound control . SqlDataSource is self-describing about its capabilities (select, insert, update, delete, sort) so that data-bound controls can provide automatic behavior when a capability is present.","Scenarios","In the example below, a SqlDataSource control exposes the result of a stored procedure (specified as the SelectCommand property), which is data-bound to a DropDownList control. Note that the page developer does not need to write any code to perform this common read-only databinding scenario. In the example below, the SqlDataSource uses the System.Data.OleDb provider, specified by the ProviderName property. Note that if this property is not explicitly specified, the System.Data.SqlClient provider is implied.",{"@attributes":{"id":"p-0178","num":"0214"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<form runat=\u201cserver\u201d>"]},{"entry":[{},"\u2003<asp:SqlDataSource id=\u201cMySource\u201d runat=\u201cserver\u201d"]},{"entry":[{},"\u2003\u2003ProviderName=\u201cSystem.Data.OleDb\u201d"]},{"entry":[{},"\u2003\u2003ConnectionString=\u201cData Source=GrocerToGo;Integrated"]},{"entry":[{},"\u2003\u2003Security=SSPI;\u201d"]},{"entry":[{},"\u2003\u2003SelectCommand=\u201csp_GetProductCategories\u201d\/>"]},{"entry":[{},"\u2003Select a Product Category:"]},{"entry":[{},"\u2003<asp:DropDownList DataSourceId=\u201cMySource\u201d runat=\u201cserver\u201d\/>"]},{"entry":[{},"<\/form>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Filtering with Parameterized Queries.","The SqlDataSource control exposes several ParameterCollection properties which can contain bindings for parameters in the select, insert, update, and delete commands. The actual parameter syntax depends on the control's underlying provider, specified by the ProviderName property (e.g. for System.Data.SqlClient, the parameters are prefixed by an \u2018@\u2019 character). These parameters can be bound to the property value of another control on the page, or to a request (querystring) or session value. Parameter values are added to the associated command's Parameters collection at runtime, just prior to executing the command.",{"@attributes":{"id":"p-0180","num":"0216"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003<asp:SqlDataSource id=\u201cMySource\u201d runat=\u201cserver\u201d"},{"entry":"\u2003\u2003\u2003ConnectionString=\u201cserver=aspnet;database=messagedb;Trusted"},{"entry":"Connection=true\u201d"},{"entry":"\u2003\u2003\u2003SelectCommand=\u201cSELECT @count * FROM Messages"},{"entry":"WHERE Topic LIKE @searchFor\u201d>"},{"entry":"\u2003\u2003<SelectParameters>"},{"entry":"\u2003\u2003\u2003<asp:ControlParameter\u2003\u2003Name=\u201ccount\u201d\u2003\u2003ControlId=\u201cNum\u201d"},{"entry":"PropertyName=\u201cSelectedValue\u201d \/>"},{"entry":"\u2003\u2003\u2003<asp:RequestParameter\u2003\u2003Name=\u201csearchFor\u201d"},{"entry":"RequestField=\u201cSearchFor\u201d\u2003\u2003DefaultValue=\u201c\u201d \/>"},{"entry":"\u2003\u2003<\/SelectParameters>"},{"entry":"\u2003<\/asp:SqlDataSource>"},{"entry":"\u2003Results To Display:"},{"entry":"\u2003<asp:DropDownList id=\u201cNum\u201d runat=\u201cserver\u201d>"},{"entry":"\u2003\u2003<asp:ListItem Selected>10<\/asp:ListItem>"},{"entry":"\u2003\u2003<asp:ListItem>100<\/asp:ListItem>"},{"entry":"\u2003\u2003<asp:ListItem>1000<\/asp:ListItem>"},{"entry":"\u2003<\/asp:DropDownList>"},{"entry":"\u2003<asp:GridView DataSourceId=\u201cMySource\u201d runat=\u201cserver\u201d\/>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Editing and Deleting Data Rows.","When an UpdateCommand property or DeleteCommand property is specified, the SqlDataSource can perform edit and delete operations. Like the preceding scenario, these commands may contain parameters to be bound to an associated ParameterCollection. In the example below, the GridView control exposes edit and delete UI for the data bound to the SqlDataSource control. Note that in this particular example, parameters are supplied in the DeleteCommand and UpdateCommand properties, although no associated parameter collection specified. In this case, the GridView control dynamically populates the DeleteParameters and UpdateParameters collections with the appropriate cell values in response to user interactions before executing the delete or update command.",{"@attributes":{"id":"p-0182","num":"0218"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<asp:GridView id=\u201cMyGrid\u201d runat=\u201cserver\u201d"]},{"entry":[{},"\u2003\u2003AutoGenerateEditButton=\u201ctrue\u201d"]},{"entry":[{},"\u2003\u2003AutoGenerateDeleteButton=\u201ctrue\u201d"]},{"entry":[{},"\u2003\u2003DataKeyNames=\u201cau_id\u201d"]},{"entry":[{},"\u2003\u2003AllowSorting=\u201ctrue\u201d"]},{"entry":[{},"\u2003\/>"]},{"entry":[{},"\u2003<asp:SqlDataSource id=\u201cMySource\u201d runat=\u201cserver\u201d"]},{"entry":[{},"\u2003\u2003SelectCommand=\u201cselect * from authors\u201d"]},{"entry":[{},"\u2003\u2003UpdateCommand=\u201cupdate authors set au_lname = @au_lname"]},{"entry":[{},"where au_id = @au_id\u201d"]},{"entry":[{},"\u2003\u2003DeleteCommand=\u201cdelete from authors where au_id = @au_id\u201d"]},{"entry":[{},"ConnectionString=\u201cserver=(local)\\NetSDK;database=pubs;user=sa;"]},{"entry":[{},"password=\u201d"]},{"entry":[{},"\u2003\/>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Inserting New Data Rows.","The SqlDataSource control also supports inserting new rows of data, when an InsertCommand and associated InsertParameters parameter collection are specified. The following example demonstrates an SqlDataSource control bound to a DetailsView control that supports inserting data.",{"@attributes":{"id":"p-0184","num":"0220"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<asp:DetailsView id=\u201cMyDetailsView\u201d DataSourceId="]},{"entry":[{},"\u2003\u201cMyDetailsSource\u201d"]},{"entry":[{},"\u2003\u2003\u2003AutoGenerateInsertButton=\u201ctrue\u201d"]},{"entry":[{},"\u2003\u2003\u2003runat=\u201cserver\u201d"]},{"entry":[{},"\u2003\/>"]},{"entry":[{},"\u2003<asp:SqlDataSource id=\u201cMyDetailsSource\u201d"]},{"entry":[{},"\u2003\u2003ConnectionString=\u201cserver=(local);database=pubs;"]},{"entry":[{},"\u2003\u2003trusted_connection=yes\u201d"]},{"entry":[{},"\u2003\u2003SelectCommand=\u201cselect * from authors\u201d"]},{"entry":[{},"\u2003\u2003InsertCommand=\u201cinsert into authors (au_id, au_fname,"]},{"entry":[{},"au_lname) values (@au_id,"]},{"entry":[{},"\u2003\u2003\u2003\u2003@au_fname, @au_lname)\u201d"]},{"entry":[{},"\u2003\u2003runat=\u201cserver\u201d"]},{"entry":[{},"\u2003\/>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Specification","In this implementation, the SqlDataSource control represents a connection to an ADO.NET managed data provider, such as SQL, OLEDB, ODBC, Oracle, or a third-party provider. The SqlDataSource base class takes advantage of the ADO.NET Common Data Model, which provides a set of interfaces that all managed data providers must implement. Because the provider-specific details of the connection, adapter, and command can be abstracted into common interfaces, so too can the common functionality of the SqlDataSource control for each supported provider. In this implementation, the providers installed to a given machine are registered in machine.config. On the SqlDataSource, the provider is specified by the ProviderName property.",{"@attributes":{"id":"p-0186","num":"0222"},"tables":{"@attributes":{"id":"TABLE-US-00041","num":"00041"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<asp:SqlDataSource id=\u201cMySource\u201d runat=\u201cserver\u201d"]},{"entry":[{},"\u2003ProviderName=\u201cSystem.Data.OleDb\u201d"]},{"entry":[{},"\u2003ConnectionString=\u201cData Source=GrocerToGo;Integrated"]},{"entry":[{},"\u2003Security=SSPI;\u201d"]},{"entry":[{},"\u2003SelectCommand=\u201csp_GetProductCategories\u201d"]},{"entry":[{},"\/>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"SqlDataSource Operations.","The SqlDataSource control supports select, insert, update, delete semantics over the exposed data. For select operations, a DataSet or DataReader may be returned, determined by the DataSourceMode property. In DataSet mode, filtering, sorting and caching is supported, although the DataReader mode can be a more performant choice when filtering, sorting or caching is not a requirement.","The select, insert, update, and delete commands (queries) are provided as properties on the SqlDataSource control. This assumes that developers are fluent in the underlying SQL query language syntax for the provider they are using. The command properties can take either a SQL statement or stored procedure value (the control parses the command to determine the command type). Commands or stored procedures may also be parameterized, where the values of parameters are substituted at run-time from an external source, such as a control property, session variable, or querystring request parameter. Note that the parameter substitution syntax is also specific to the provider the SqlDataSource control represents.","Note: When DbDataSource receives a null parameter value for an Insert, Update, or Delete operation, it automatically converts to DbNull when populating the command's parameter list. When it receives a null parameter value for a Select operation, it does not execute the SelectCommand and instead returns null from Select( ).","Data-bound controls can declaratively databind to a SqlDataSource control, and use the select, insert, update, and delete operations to provide UI and automatic behavior. For example, the GridView control provides a grid UI that can be paged and sorted. It also provides update and delete UI when the bound SqlDataSource defines those command properties. As with any data source control, SqlDataSource can also be used programmatically.","SqlDataSource Events.","The SqlDataSource supports events before and after each operation is performed. The Selecting, Inserting, Deleting, and Updating events are fired before the associated operation, and the event args contains a reference to the provider-specific command object. A developer can set custom properties on the command before an operation's command is executed. The Selecting event is the default event for the SqlDataSource control, demonstrated below.","The Selected, Inserted, Deleted and Updated events are fired after the associated operation is performed. The associated event args exposes a RowsAffected property for checking the number of rows affected by the operation (this is also returned from the Insert, Update, and Delete methods of the SqlDataSource).","The event args also exposes ReturnValue and OutputParameters properties for checking the return value and and the outputs of any reference (in\/out) parameters (e.g. if the command is a stored procedure). Reference parameters are declared by a Parameter object with Direction=Output or Direction=InputOutput in the operation's associated Parameters collection.","Automatic Caching Behavior.","The SqlDataSource control supports automatic caching behavior, using a time-based cache expiration policy by default. Additionally, it supports an optional SqlCacheDependency-based expiry policy. EnableCaching=false by default, but caching can be documented as best practice. When EnableCaching=true, caching is enabled. Note that an absolute expiration policy is used by default, but can be configured by the Page developer to use a sliding window expiration, where the duration is reset each time the cache entry is accessed. The following example demonstrates a SqlDataSource control that caches data to expire every hour.",{"@attributes":{"id":"p-0195","num":"0231"},"tables":{"@attributes":{"id":"TABLE-US-00042","num":"00042"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<asp:SqlDataSource"]},{"entry":[{},"\u2003ConnectionString=\u201cDSN=GrocerToGo\u201d"]},{"entry":[{},"\u2003ProviderName=\u201cSystem.Data.Odbc\u201d"]},{"entry":[{},"\u2003SelectCommand=\u201cselect * from products\u201d"]},{"entry":[{},"\u2003EnableCaching=\u201ctrue\u201d"]},{"entry":[{},"\u2003CacheDuration=\u201c3600\u201d"]},{"entry":[{},"\u2003runat=\u201cserver\u201d"]},{"entry":[{},"\/>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"A unique cache key is created for each combination of caching parameters, ConnectionString, SelectParameters and SelectCommand. This causes each individual \u201cview\u201d of the DataSource control to receive a separate cache entry. Note that it also has the side-effect of allowing identical views (even in different pages) to share a cache entry. The cache key is one-way hashed to protect the source data used to generate it.","The SqlDataSource control additionally supports SqlCacheDependency-based expiry (provided the service has been configured for the database server). The dependency is specified as a string property, matching the same format as supported by the related Page directive. The syntax is of the form \u201ca:b\u201d, where (a) refers to a named database under the <sqlCacheDependency> section of web.config, and (b) refers to a specific table name for that connection. Multiple table dependencies can be specified in a semicolon-delimited fashion, e.g. \u201ca:b;a:b;a:b\u201d.","The following example demonstrates a SqlCacheDependency defined for a SqlDataSource control. The cache duration is set to \u201cInfinite\u201d so that the entry never expires unless the backend table data changes (uses a type converter on the integer Duration property).",{"@attributes":{"id":"p-0199","num":"0235"},"tables":{"@attributes":{"id":"TABLE-US-00043","num":"00043"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<asp:SqlDataSource"]},{"entry":[{},"\u2003ConnectionString=\u201cserver=(local);database="]},{"entry":[{},"\u2003pubs;trusted_connection=yes\u201d"]},{"entry":[{},"\u2003SelectCommand=\u201cselect * from authors\u201d"]},{"entry":[{},"\u2003EnableCaching=\u201ctrue\u201d"]},{"entry":[{},"\u2003CacheDuration=\u201cInfinite\u201d"]},{"entry":[{},"\u2003SqlCacheDependency=\u201cpubs:Authors;\u201d"]},{"entry":[{},"\u2003runat=\u201cserver\u201d"]},{"entry":[{},"\/>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Multiple table dependencies may be defined as well, as shown in the example below:",{"@attributes":{"id":"p-0201","num":"0237"},"tables":{"@attributes":{"id":"TABLE-US-00044","num":"00044"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003<asp:SqlDataSource"},{"entry":"\u2003\u2003ConnectionString=\u201cserver=(local);database=pubs;"},{"entry":"\u2003\u2003trusted_connection=yes\u201d"},{"entry":"\u2003\u2003SelectCommand=\u201cSelectAuthorTitles\u201d"},{"entry":"\u2003\u2003EnableCaching=\u201ctrue\u201d"},{"entry":"\u2003\u2003CacheDuration=\u201c1200\u201d"},{"entry":"\u2003\u2003SqlCacheDependency=\u201cpubs:Authors;pubs:TitleAuthor\u201d"},{"entry":"\u2003\u2003runat=\u201cserver\u201d"},{"entry":">"},{"entry":"\u2003<SelectParameters>"},{"entry":"\u2003\u2003<asp:ControlParameter Name=\u201cau_id\u201d ControlId=\u201cMyDropDown\u201d"},{"entry":"\u2003\u2003\u2003PropertyName=\u201cSelectedValue\u201d\/>"},{"entry":"\u2003<\/SelectParameters>"},{"entry":"<\/asp:SqlDataSource>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Note that SqlCacheInvalidation is useful in Web-farm scenarios, because an update from one machine in the farm can cause a cache invalidation for other machines in the farm.","Filtering and FilterParameters.","An entire table of moderately-sized data may be retrieved for filter application to that data based on UI selection from the client. For example, consider the scenario below where documents are listed for several authors, and a dropdownlist is provided to select the particular author name to filter by. In this scenario, the document data can be retrieved only once from the database, and subsequently retrieved from cache in order to apply the filter. In this example, the cache entry is refreshed every 10 minutes.",{"@attributes":{"id":"p-0204","num":"0240"},"tables":{"@attributes":{"id":"TABLE-US-00045","num":"00045"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2002<form runat=\u201cserver\u201d>"},{"entry":"\u2002\u2002<asp:DropDownList\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003id=\u201cAuthorsDropDown\u201d"},{"entry":"DataSourceId=\u201cMyAuthorSource\u201d"},{"entry":"\u2002\u2002\u2002DataTextField=\u201cAuthorName\u201d"},{"entry":"\u2002\u2002\u2002AutoPostBack=\u201ctrue\u201d"},{"entry":"\u2002\u2002\u2002runat=\u201cserver\u201d"},{"entry":"\u2002\u2002\/>"},{"entry":"\u2002\u2002<asp:GridView id=\u201cMyGrid\u201d DataSourceId=\u201cMySource\u201d runat="},{"entry":"\u2002\u2002\u201cserver\u201d \/>"},{"entry":"\u2002\u2002<asp:SqlDataSource id=\u201cMySource\u201d"},{"entry":"\u2002\u2002\u2002ConnectionString=\u201cserver=(local);database=specs;trusted_connection="},{"entry":"\u2002\u2002\u2002yes\u201d"},{"entry":"\u2002\u2002\u2002SelectCommand=\u201cselect * from specs\u201d"},{"entry":"\u2002\u2002\u2002FilterExpression=\u201cauthor = @author\u201d"},{"entry":"\u2002\u2002\u2002EnableCaching=\u201ctrue\u201d"},{"entry":"\u2002\u2002\u2002CacheDuration=\u201c600\u201d"},{"entry":"\u2002\u2002\u2002runat=\u201cserver\u201d"},{"entry":"\u2002\u2002>"},{"entry":"\u2002\u2002\u2002<FilterParameters>"},{"entry":"\u2002\u2002\u2002\u2002<asp:ControlParameter Name=\u201cauthor\u201d ControlId="},{"entry":"\u2002\u2002\u2002\u2002\u201cAuthorsDropDown\u201d PropertyName=\u201cSelected Value\u201d \/>"},{"entry":"\u2002\u2002\u2002<\/FilterParameters>"},{"entry":"\u2002\u2002<\/asp:SqlDataSource>"},{"entry":"\u2002\u2002<asp:SqlDataSource id=\u201cMyAuthorSource\u201d"},{"entry":"\u2002\u2002\u2002ConnectionString=\u201cserver=(local);database=specs;trusted_connection="},{"entry":"\u2002\u2002\u2002yes\u201d"},{"entry":"\u2002\u2002\u2002SelectCommand=\u201cselect DISTINCT author from specs\u201d"},{"entry":"\u2002\u2002\u2002EnableCaching=\u201ctrue\u201d"},{"entry":"\u2002\u2002\u2002CacheDuration=\u201c600\u201d"},{"entry":"\u2002\u2002\u2002runat=\u201cserver\u201d"},{"entry":"\u2002\u2002\/>"},{"entry":"\u2002<\/form>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Sorting in the SelectCommand Implementation.","If the command associated with the SelectCommand property returns a DataSet, DataView, or DataTable, the SqlDataSource will automatically support sorting over the returned result. However, it is sometimes desirable to apply sorting in the implementation of the command itself, such as a stored procedure. To support this scenario, the SqlDataSource exposes a SortParameterName property, which can be set to the name of the parameter of the SelectCommand stored procedure that can be associated with the sort expression passed by the data-bound control when the Select operation is invoked. This expression will be passed to the parameter on the object, which can apply sorting logic (usually through a switch\/case statement).",{"@attributes":{"id":"p-0206","num":"0242"},"tables":{"@attributes":{"id":"TABLE-US-00046","num":"00046"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<asp:SqlDataSource ID=\u201cMySource\u201d"]},{"entry":[{},"\u2003\u2003ConnectionString=\u201c...\u201d"]},{"entry":[{},"\u2003\u2003SelectCommand=\u201cGetCustomers\u201d"]},{"entry":[{},"\u2003\u2003SortParameterName=\u201csortex\u201d"]},{"entry":[{},"\u2003\u2003runat=\u201cserver\u201d\/>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Object Model Reference",{"@attributes":{"id":"p-0207","num":"0243"},"tables":{"@attributes":{"id":"TABLE-US-00047","num":"00047"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"namespace System.Web.UI"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public class SqlDataSource : DataSourceControl"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ Properties"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public virtual SqlDataSourceMode","DataSourceMode","{ get; set; }"]},{"entry":[{},"public virtual String","ConnectionString","{ get; set; }"]},{"entry":[{},"public virtual String","ProviderName","\u2003\u2002{\u2003get;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"set; }"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public virtual String","SelectCommand","{ get; set; }"]},{"entry":[{},"public virtual String","InsertCommand","{ get; set; }"]},{"entry":[{},"public virtual String","UpdateCommand","{ get; set; }"]},{"entry":[{},"public virtual String","DeleteCommand","{ get; set; }"]},{"entry":[{},"public virtual String","FilterExpression","{ get; set; }"]},{"entry":[{},"public virtual ParameterCollection","SelectParameters","{ get; }"]},{"entry":[{},"public virtual ParameterCollection","InsertParameters","{ get; }"]},{"entry":[{},"public virtual ParameterCollection","UpdateParameters","{ get; }"]},{"entry":[{},"public virtual ParameterCollection","DeleteParameters","{ get; }"]},{"entry":[{},"public virtual ParameterCollection","FilterParameters","{ get; }"]},{"entry":[{},"public virtual String","SortParameterName","{ get; set; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public virtual bool","CancelSelectOnNullParameter {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"get; set; }"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public virtual bool","EnableCaching","{ get;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"set; }"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public virtual int","CacheDuration","{ get;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"set; }"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public virtual String","SqlCacheDependency","{ get;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"set; }"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public virtual DataSourceCacheExpiry","CacheExpirationPolicy","{ get;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"set; }"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"protected virtual"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"DataSourceCacheBase","Cache","{ get;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Constructors"]},{"entry":[{},"public SqlDataSource (void);"]},{"entry":[{},"public SqlDataSource (String connectionString, String selectCommand);"]},{"entry":[{},"public SqlDataSource (String providerName, String connectionString,"]},{"entry":[{},"\u2003\u2003\u2003String selectCommand);"]},{"entry":[{},"\/\/ Methods"]},{"entry":[{},"public IEnumerable Select (void);"]},{"entry":[{},"public int Insert (void);"]},{"entry":[{},"public int Update (void);"]},{"entry":[{},"public int Delete (void);"]},{"entry":[{},"protected virtual SqlDataSourceView CreateDataSourceView"]},{"entry":[{},"(SqlDataSource dataSource, String viewName);"]},{"entry":[{},"\/\/ Events"]},{"entry":[{},"public event SqlDataSourceCommandEventHandler..."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Deleting","{ add; remove; }"]},{"entry":[{},"Inserting","{ add; remove; }"]},{"entry":[{},"Selecting","{ add; remove; }"]},{"entry":[{},"Updating","{ add; remove; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public event SqlDataSourceStatusEventHandler..."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Deleted","\u2003\u2003{\u2003\u2003\u2003\u2003add;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"remove; }"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Inserted","{ add; remove; }"]},{"entry":[{},"Selected","{ add; remove; }"]},{"entry":[{},"Updated","{ add; remove; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ IDataSource Implementation"]},{"entry":[{},"protected override DataSourceView GetView (String viewName);"]},{"entry":[{},"protected override ICollection GetViewNames (void);"]},{"entry":[{},"\/\/ IStateManager Implementation"]},{"entry":[{},"protected override void LoadViewState (Object savedState);"]},{"entry":[{},"protected override object SaveViewState (void);"]},{"entry":[{},"protected override void TrackViewState (void);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public class SqlDataSourceCommandEventArgs : CancelEventArgs"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Properties",{},{}]},{"entry":[{},"public IDbCommand","Command","{ get;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public class SqlDataSourceStatusEventArgs : EventArgs"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Properties",{},{}]},{"entry":[{},"public IOrderedDictionary","OutputParameters","{ get; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public Object","\u2003\u2003ReturnValue","{ get; }"]},{"entry":[{},"public int","RowsAffected","{ get; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public class SqlDataSourceView : DataSourceView, IStateManager"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Properties",{},{}]},{"entry":[{},"public override String","Name","{ get;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public override bool","CanDelete","{ get;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public override bool","CanInsert","{ get;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public override bool","CanSort","{ get;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public override bool","CanUpdate","{ get;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public String","SelectCommand","{ get; set; }"]},{"entry":[{},"public String","UpdateCommand","{ get; set; }"]},{"entry":[{},"public String","DeleteCommand","{ get; set; }"]},{"entry":[{},"public String","InsertCommand","{ get; set; }"]},{"entry":[{},"public String","FilterExpression","{ get; set; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public override String","SortExpression"]},{"entry":[{},"{ get; set; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"public ParameterCollection","SelectParameters","{ get; }"]},{"entry":[{},"public ParameterCollection","UpdateParameters","{ get; }"]},{"entry":[{},"public ParameterCollection","DeleteParameters","{ get; }"]},{"entry":[{},"public ParameterCollection","InsertParameters","{ get; }"]},{"entry":[{},"public ParameterCollection","FilterParameters","{ get; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"protected EventHandlerList","Events","{ get;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"protected virtual String","ParameterPrefix\u2003\u2003{ get; }"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"protected bool","IsTrackingViewState","{ get;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"}"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"protected StateBag","ViewState","{ get; }"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Constructors"]},{"entry":[{},"public SqlDataSourceView (SqlDataSource owner, string name);"]},{"entry":[{},"\/\/ Methods"]},{"entry":[{},"public int Insert (void);"]},{"entry":[{},"public int Delete (void);"]},{"entry":[{},"public int Update (void);"]},{"entry":[{},"public override IEnumerable Select (void);"]},{"entry":[{},"public override int Insert (IDictionary values);"]},{"entry":[{},"public override int Delete (IDictionary keys);"]},{"entry":[{},"public override int Update (IDictionary keys, IDictionary values);"]},{"entry":[{},"protected virtual void OnDeleted (SqlDataSourceStatusEventArgs e);"]},{"entry":[{},"protected virtual void OnDeleting (SqlDataSourceCommandEventArgs e);"]},{"entry":[{},"protected virtual void OnInserted (SqlDataSourceStatusEventArgs e);"]},{"entry":[{},"protected virtual void OnInserting (SqlDataSourceCommandEventArgs e);"]},{"entry":[{},"protected virtual void OnSelected (SqlDataSourceStatusEventArgs e);"]},{"entry":[{},"protected virtual void OnSelecting (SqlDataSourceCommandEventArgs e);"]},{"entry":[{},"protected virtual void OnUpdated (SqlDataSourceStatusEventArgs e);"]},{"entry":[{},"protected virtual void OnUpdating (SqlDataSourceCommandEventArgs e);"]},{"entry":[{},"protected virtual void OnDataSourceViewChanged (EventArgs e);"]},{"entry":[{},"\/\/ IStateManager Implementation"]},{"entry":[{},"protected virtual void LoadViewState (Object savedState);"]},{"entry":[{},"protected virtual Object SaveViewState (void);"]},{"entry":[{},"protected virtual void TrackViewState (void);"]},{"entry":[{},"\/\/ Events"]},{"entry":[{},"public event SqlDataSourceCommandEventHandler..."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Deleting","{ add; remove; }"]},{"entry":[{},"Inserting","{ add; remove; }"]},{"entry":[{},"Selecting","{ add; remove; }"]},{"entry":[{},"Updating","{ add; remove; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public event SqlDataSourceStatusEventHandler..."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Deleted","{\u2003\u2003\u2003\u2003\u2003add;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"remove; }"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Inserted","{ add; remove; }"]},{"entry":[{},"Selected","{ add; remove; }"]},{"entry":[{},"Updated","{ add; remove; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"public event EventHandler DataSourceViewChanged { add; remove; }"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"public enum SqlDataSourceMode"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"DataReader = 0,"]},{"entry":[{},"DataSet = 1"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0208","num":"0244"},"tables":{"@attributes":{"id":"TABLE-US-00048","num":"00048"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<asp:SqlDataSource runat=\u201cserver\u201d"]},{"entry":[{},"\u2003DataSourceMode= \u201cSqlDataSourceMode\u201d"]},{"entry":[{},"\u2003ConnectionString=\u201cString\u201d"]},{"entry":[{},"\u2003ProviderName=\u201cString\u201d"]},{"entry":[{},"\u2003SelectCommand=\u201cString\u201d"]},{"entry":[{},"\u2003InsertCommand=\u201cString\u201d"]},{"entry":[{},"\u2003UpdateCommand=\u201cString\u201d"]},{"entry":[{},"\u2003DeleteCommand=\u201cString\u201d"]},{"entry":[{},"\u2003FilterExpression=\u201cString\u201d"]},{"entry":[{},"\u2003EnableCaching=\u201c[true\\false]\u201d"]},{"entry":[{},"\u2003CacheDuration=\u201cint\u201d"]},{"entry":[{},"\u2003SqlCacheDependency=\u201cString\u201d"]},{"entry":[{},"\u2003CacheExpirationPolicy=\u201cDataSourceCacheExpiry\u201d"]},{"entry":[{},"\u2003OnSelecting=\u201cSqlDataSourceCommandEventHandler\u201d"]},{"entry":[{},"\u2003OnInserting=\u201cSqlDataSourceCommandEventHandler\u201d"]},{"entry":[{},"\u2003OnUpdating=\u201cSqlDataSourceCommandEventHandler\u201d"]},{"entry":[{},"\u2003OnDeleting=\u201cSqlDataSourceCommandEventHandler\u201d"]},{"entry":[{},"\u2003OnSelected=\u201cSqlDataSourceStatusEventHandler\u201d"]},{"entry":[{},"\u2003OnInserted=\u201cSqlDataSourceStatusEventHandler\u201d"]},{"entry":[{},"\u2003OnUpdated=\u201cSqlDataSourceStatusEventHandler\u201d"]},{"entry":[{},"\u2003OnDeleted=\u201cSqlDataSourceStatusEventHandler\u201d"]},{"entry":[{},"\u2003OnDataSourceChanged=\u201cEventHandler\u201d"]},{"entry":[{},">"]},{"entry":[{},"\u2003<SelectParameters>"]},{"entry":[{},"\u2003\u2003[<System.Web.UI.WebControls.Parameter ...>]"]},{"entry":[{},"\u2003<\/SelectParameters>"]},{"entry":[{},"\u2003<InsertParameters>"]},{"entry":[{},"\u2003\u2003[<System.Web.UI.WebControls.Parameter ...>]"]},{"entry":[{},"\u2003<\/InsertParameters>"]},{"entry":[{},"\u2003<UpdateParameters>"]},{"entry":[{},"\u2003\u2003[<System.Web.UI.WebControls.Parameter ...>]"]},{"entry":[{},"\u2003<\/UpdateParameters>"]},{"entry":[{},"\u2003<DeleteParameters>"]},{"entry":[{},"\u2003\u2003[<System.Web.UI.WebControls.Parameter ...>]"]},{"entry":[{},"\u2003<\/DeleteParameters>"]},{"entry":[{},"\u2003<FilterParameters>"]},{"entry":[{},"\u2003\u2003[<System.Web.UI.WebControls.Parameter ...>]"]},{"entry":[{},"\u2003<\/FilterParameters>"]},{"entry":[{},"<\/asp:SqlDataSource>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0209","num":"0245"},"tables":{"@attributes":{"id":"TABLE-US-00049","num":"00049"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Properties"},{"entry":"DataSourceMode"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual SqlDataSourceMode DataSourceMode"]},{"entry":[{},"{ get; set; }"]},{"entry":["Description","Gets\/sets the data source mode for the control. Valid"]},{"entry":[{},"values are SqlDataSourceMode.DataSet and"]},{"entry":[{},"SqlDataSourceMode.DataReader. The DataReader mode"]},{"entry":[{},"is more performant, but does not allow for caching,"]},{"entry":[{},"filtering, or sorting behavior."]},{"entry":["Default Value","SqlDataSourceMode.DataSet"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ConnectionString"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual String ConnectionString { get; set; }"]},{"entry":["Description","Gets\/sets the connection string for the control. The"]},{"entry":[{},"format of the ConnectionString is specific to the provider"]},{"entry":[{},"specified by the SqlDataSource's ProviderName"]},{"entry":[{},"property. The ConnectionString property is not stored"]},{"entry":[{},"in ViewState."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ProviderName"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual String ProviderName { get; set; }"]},{"entry":["Description","Gets\/sets the provider name for the control. The list of"]},{"entry":[{},"available providers is determined by the"]},{"entry":[{},"<providerconfiguration> section of the <system.data>"]},{"entry":[{},"group of machine.config (the invariant name is used)."]},{"entry":["Default Value","System.Data.SqlClient"]},{"entry":["Value Editor","Combo-box dropdown listing installed providers."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"SelectCommand"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual String SelectCommand { get; set; }"]},{"entry":["Description","The command to execute when Select( ) is called on"]},{"entry":[{},"the SqlDataSourceView, or when Select( ) is called on"]},{"entry":[{},"the SqlDataSourceControl itself."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"InsertCommand"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual String InsertCommand { get; set; }"]},{"entry":["Description","The command to execute when Insert( ) is called on"]},{"entry":[{},"the SqlDataSourceView, or when Insert( ) is called on"]},{"entry":[{},"the SqlDataSourceControl itself."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"UpdateCommand"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual String UpdateCommand { get; set; }"]},{"entry":["Description","The command to execute when Update( ) is called on the"]},{"entry":[{},"SqlDataSourceView, or when Update( ) is called on the"]},{"entry":[{},"SqlDataSourceControl itself."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"DeleteCommand"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual String DeleteCommand { get; set; }"]},{"entry":["Description","The command to execute when Delete( ) is called on the"]},{"entry":[{},"SqlDataSourceView, or when Delete( ) is called on the"]},{"entry":[{},"SqlDataSourceControl itself."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"FilterExpression"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual String FilterExpression { get; set; }"]},{"entry":["Description","An expression used to filter the data returned from"]},{"entry":[{},"Select( ). Filtering is allowed only when"]},{"entry":[{},"DataSourceMode=DataSet, and the FilterExpression"]},{"entry":[{},"syntax is the same as expected by the DataView's"]},{"entry":[{},"RowFilter property. Parameters are expected to be"]},{"entry":[{},"prefixed with the \u2018@\u2019 character, similar to the"]},{"entry":[{},"SQL syntax for specifying command parameters."]},{"entry":[{},"Example: \u201cFieldName1 = value1, FieldName2 = value2\u201d"]},{"entry":[{},"Example (parameterized): \u201cFieldName1 = @param\u201d"]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"SortExpression"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual String SortExpression { get; set; }"]},{"entry":["Description","An expression used to sort the data"]},{"entry":[{},"returned from Select( )."]},{"entry":[{},"Sorting is allowed only when DataSourceMode=DataSet,"]},{"entry":[{},"and the SortExpression syntax is the same as expected"]},{"entry":[{},"by the DataView's Sort property, e.g. a comma-separated"]},{"entry":[{},"list of fields: \u201cFieldName1, FieldName2\u201d."]},{"entry":["Default Value","String.Empty"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"SelectParameters"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual ParameterCollection"]},{"entry":[{},"SelectParameters { get; }"]},{"entry":["Description","Collection of parameters used in"]},{"entry":[{},"SqlDataSourceControl.Select( ). These parameter values"]},{"entry":[{},"are substituted for placeholders in the SelectCommand"]},{"entry":[{},"property. See also:"]},{"entry":[{},"System.Web.UI.WebControls.Parameter classes."]},{"entry":["Default Value","null"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"UpdateParameters"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual ParameterCollection"]},{"entry":[{},"UpdateParameters { get; }"]},{"entry":["Description","Collection of parameters used in Update( ). These"]},{"entry":[{},"parameter values are substituted for placeholders in the"]},{"entry":[{},"UpdateCommand property."]},{"entry":[{},"See also: System.Web.UI.WebControls.Parameter"]},{"entry":[{},"classes."]},{"entry":["Default Value","null"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"DeleteParameters"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual ParameterCollection"]},{"entry":[{},"DeleteParameters { get; }"]},{"entry":["Description","Collection of parameters used in Delete( ). These"]},{"entry":[{},"parameter values are substituted for placeholders in the"]},{"entry":[{},"DeleteCommand property. See"]},{"entry":[{},"also: System.Web.UI.WebControls.Parameter classes."]},{"entry":["Default Value","null"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"InsertParameters"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual ParameterCollection"]},{"entry":[{},"InsertParameters { get; }"]},{"entry":["Description","Collection of parameters used in Insert( )."]},{"entry":[{},"These parameter values are substituted for"]},{"entry":[{},"placeholders in the InsertCommand property. See"]},{"entry":[{},"also: System.Web.UI.WebControls.Parameter classes."]},{"entry":["Default Value","null"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"FilterParameters"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual ParameterCollection"]},{"entry":[{},"FilterParameters { get; }"]},{"entry":["Description","Collection of parameters used when filtering the data"]},{"entry":[{},"returned from Select( ). These parameter values are"]},{"entry":[{},"substituted for placeholders in the FilterExpression"]},{"entry":[{},"property. See also:"]},{"entry":[{},"System.Web.UI.WebControls.Parameter classes."]},{"entry":["Default Value","null"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"CancelSelectOnNullParameter"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public bool CancelSelectOnNullParameter { get; set; }"]},{"entry":["Description","Indicates whether the Select operation will be cancelled"]},{"entry":[{},"if the value of any of the SelectParameters is null."]},{"entry":["Default Value","true"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"SortParameterName"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public String SortParameterName { get; set; }"]},{"entry":["Description","The name of the parameter in the SelectMethod that"]},{"entry":[{},"specifies the sort expression. This parameter's value will"]},{"entry":[{},"be automatically set at runtime with the appropriate"]},{"entry":[{},"sort expression."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"EnableCaching"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual bool EnableCaching { get; set; }"]},{"entry":["Description","Enables or disables caching for the SqlDataSource"]},{"entry":[{},"control. When caching is enabled, the data returned from"]},{"entry":[{},"the Select operation will be cached, and this cache entry"]},{"entry":[{},"will be used to service additional Select operations,"]},{"entry":[{},"until it expires. Caching is only supported when"]},{"entry":[{},"DataSourceMode=DataSet."]},{"entry":["Default Value","false"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"CacheDuration"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual int CacheDuration { get; set; }"]},{"entry":["Description","The duration, in seconds, to cache the selected data."]},{"entry":[{},"This is an absolute time-based expiry value by default,"]},{"entry":[{},"although it can be configured to use a sliding"]},{"entry":[{},"window expiration."]},{"entry":["Default Value","DataSourceCache.Infinite"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"SqlCacheDependency"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual String SqlCacheDependency { get;"]},{"entry":[{},"set; }"]},{"entry":["Description","An optional SqlCacheDependency string. The syntax"]},{"entry":[{},"is of the form \u201ca:b\u201d, where (a) refers to a named"]},{"entry":[{},"database under the <cache><sqlCacheDependency>"]},{"entry":[{},"section of web.config, and (b) refers to a specific table"]},{"entry":[{},"name for that connection. Multiple table dependencies"]},{"entry":[{},"can be specified in a semicolon-delimited fashion, e.g."]},{"entry":[{},"\u201ca:b;a:b;a:b\u201d. The backend database are configured"]},{"entry":[{},"for SQL Cache Invalidation."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"CacheExpirationPolicy"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual DataSourceCacheExpiry"]},{"entry":[{},"CacheExpirationPolicy { get; set; }"]},{"entry":["Description","The expiry policy to apply for the Duration"]},{"entry":[{},"property, either Absolute or Sliding Window."]},{"entry":["Default Value","DataSourceCacheExpiry.Absolute"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Cache"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","protected virtual DataSourceCacheBase Cache {"]},{"entry":[{},"get; }"]},{"entry":["Description","The cache object that implements the SqlDataSource"]},{"entry":[{},"caching behavior."]},{"entry":["Default Value","New SqlDataSourceCache"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Methods"},{"entry":"Select"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public IEnumerable Select (void);"]},{"entry":["Description","Returns all the rows of the default datasource view"]},{"entry":[{},"(calls the Select method on that view). Parameters"]},{"entry":[{},"are taken from the SelectParameters property"]},{"entry":[{},"collection. If DataSourceMode is set to DataSet,"]},{"entry":[{},"then a DataView is returned. If DataSourceMode"]},{"entry":[{},"is set to DataReader, then a DataReader is"]},{"entry":[{},"returned and it are closed by the caller."]},{"entry":["Parameters","None"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Delete"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public int Delete (void);"]},{"entry":["Description","Deletes rows from the data source using"]},{"entry":[{},"the parameters specified in the DeleteParameters"]},{"entry":[{},"collection."]},{"entry":["Parameters","None"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Insert"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public int Insert (void);"]},{"entry":["Description","Inserts a new row with values specified the"]},{"entry":[{},"InsertParameters collection."]},{"entry":["Parameters","None"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Update"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public int Update (void);"]},{"entry":["Description","Updates rows with the values specified in the"]},{"entry":[{},"UpdateParameters collection."]},{"entry":["Parameters","None"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"CreateDataSourceView"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","protected virtual SqlDataSourceView"]},{"entry":[{},"CreateDataSourceView"]},{"entry":[{},"(SqlDataSource dataSource, String viewName);"]},{"entry":["Description","Creates a new SqlDataSourceView object with the"]},{"entry":[{},"specified viewName. This method is called by the"]},{"entry":[{},"GetView( ) method of SqlDataSource."]},{"entry":["Parameters","dataSource - The associated SqlDataSource control "]},{"entry":[{},"object. viewName - The name of the view to create."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Events"},{"entry":"Selecting"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","private void SqlDataSource_Selecting (Object sender,"]},{"entry":["Handler","SqlDataSourceCommandEventHandler e);"]},{"entry":["Description","Raised before the SelectCommand is executed. The"]},{"entry":[{},"passed event args contains a reference to the provider-"]},{"entry":[{},"specific command object. This event is cancellable,"]},{"entry":[{},"which causes the Select operation to abort."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Updating"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","private void SqlDataSource_Updating"]},{"entry":["Handler","(Object sender,"]},{"entry":[{},"SqlDataSourceCommandEventHandler e);"]},{"entry":["Description","Raised before the UpdateCommand is executed."]},{"entry":[{},"The passed event args contains a reference to the"]},{"entry":[{},"provider-specific command object. This event is"]},{"entry":[{},"cancellable, which causes the Update operation to abort."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Inserting"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","private void SqlDataSource_Inserting (Object sender,"]},{"entry":["Handler","SqlDataSourceCommandEventHandler e);"]},{"entry":["Description","Raised before the InsertCommand is executed. The"]},{"entry":[{},"passed event args contains a reference to the provider-"]},{"entry":[{},"specific command object. This event is cancellable,"]},{"entry":[{},"which causes the Insert operation to abort."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Deleting"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","private void SqlDataSource_Deleting (Object sender,"]},{"entry":["Handler","SqlDataSourceCommandEventHandler e);"]},{"entry":["Description","Raised before the DeleteCommand is executed. The"]},{"entry":[{},"passed event args contains a reference to the provider-"]},{"entry":[{},"specific command object. This event is cancellable,"]},{"entry":[{},"which causes the Delete operation to abort."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Selected"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","private void SqlDataSource_Selected (Object sender,"]},{"entry":["Handler","SqlDataSourceStatusEventHandler e);"]},{"entry":["Description","Raised after the SelectCommand is executed. The"]},{"entry":[{},"passed event args contains any return value or otuput"]},{"entry":[{},"parameters, and indicates the number of rows affected"]},{"entry":[{},"by the command."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Updated"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","private void SqlDataSource_Updated (Object sender,"]},{"entry":["Handler","SqlDataSourceStatusEventHandler e);"]},{"entry":["Description","Raised after the UpdateCommand is executed. The"]},{"entry":[{},"passed event args contains any return value or otuput"]},{"entry":[{},"parameters, and indicates the number of rows affected"]},{"entry":[{},"by the command."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Inserted"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","private void SqlDataSource_Inserted (Object sender,"]},{"entry":["Handler","SqlDataSourceStatusEventHandler e);"]},{"entry":["Description","Raised after the InsertCommand is executed. The"]},{"entry":[{},"passed event args contains any return value or otuput"]},{"entry":[{},"parameters, and indicates the number of rows affected"]},{"entry":[{},"by the command."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Deleted"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","private void SqlDataSource_Deleted (Object sender,"]},{"entry":["Handler","SqlDataSourceStatusEventHandler e);"]},{"entry":["Description","Raised after the DeleteCommand is executed. The"]},{"entry":[{},"passed event args contains any return value or otuput"]},{"entry":[{},"parameters, and indicates the number of rows affected"]},{"entry":[{},"by the command."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"[ . . . ].SqlDataSourceCommandEventArgs"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Properties"},{"entry":"Command"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public IDbCommand Command { get; }"]},{"entry":["Description","Gets the provider-specific command instance that will be"]},{"entry":[{},"used to execute the select, insert, delete, or update"]},{"entry":[{},"operation."]},{"entry":["Default Value","null"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"[ . . . ].SqlDataSourceStatusEventArgs"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Properties"},{"entry":"OutputParameters"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public IOrderedDictionary OutputParameters { get; }"]},{"entry":["Description","Gets an ordered dictionary of output parameters from the"]},{"entry":[{},"command (usually a stored procedure). In order for a"]},{"entry":[{},"parameter to be included in this dictionary, an associated"]},{"entry":[{},"System.Web.UI.WebControls.Parameter object are"]},{"entry":[{},"contained in the Parameter collection for the operation,"]},{"entry":[{},"with Direction = Output or Direction = InputOutput."]},{"entry":["Default Value","null"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"ReturnValue"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public Object ReturnValue { get; }"]},{"entry":["Description","Gets the return value from the command (usually a stored"]},{"entry":[{},"procedure). In order for a parameter to be included in this"]},{"entry":[{},"dictionary, an associated"]},{"entry":[{},"System.Web.UI.WebControls.Parameter object are"]},{"entry":[{},"contained in the Parameter collection for the operation,"]},{"entry":[{},"with Direction = ReturnValue."]},{"entry":["Default Value","null"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"RowsAffected"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public int RowsAffected { get; }"]},{"entry":["Description","Gets the number of data rows affected by the insert,"]},{"entry":[{},"update, or delete command. Not applicable to select"]},{"entry":[{},"operations."]},{"entry":["Default Value","0"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"System.Web.UI.SqlDataSourceView"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Properties"},{"entry":"Name"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public override String Name { get; }"]},{"entry":["Description","The name of the view."]},{"entry":["Default Value","Value passed to the constructor."]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"CanInsert"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public override bool CanInsert { get; }"]},{"entry":["Description","Indicates that the view can insert rows. True if"]},{"entry":[{},"InsertCommand is non-empty; false otherwise."]},{"entry":["Default Value","false"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"CanUpdate"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public override bool CanUpdate { get; }"]},{"entry":["Description","Indicates that the view can update rows. True if"]},{"entry":[{},"UpdateCommand is non-empty; false otherwise."]},{"entry":["Default Value","false"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"CanDelete"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public override bool CanDelete { get; }"]},{"entry":["Description","Indicates that the view can delete rows. True if"]},{"entry":[{},"DeleteCommand is non-empty; false otherwise."]},{"entry":["Default Value","false"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"CanSort"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public override bool CanSort { get; }"]},{"entry":["Description","Indicates that the view can sort rows. True if the"]},{"entry":[{},"DataSourceMode is set to SqlDataSourceMode.DataSet;"]},{"entry":[{},"false otherwise."]},{"entry":["Default Value","false"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"SelectCommand"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public String SelectCommand { get; set; }"]},{"entry":["Description","The command to execute when Select( ) is called on the"]},{"entry":[{},"SqlDataSourceView."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"InsertCommand"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public String InsertCommand { get; set; }"]},{"entry":["Description","The command to execute when Insert( ) is called on the"]},{"entry":[{},"SqlDataSourceView."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"UpdateCommand"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public String UpdateCommand { get; set; }"]},{"entry":["Description","The command to execute when Update( ) is called on the"]},{"entry":[{},"SqlDataSourceView."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"DeleteCommand"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public String DeleteCommand { get; set; }"]},{"entry":["Description","The command to execute when Delete( ) is called on the"]},{"entry":[{},"SqlDataSourceView."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"FilterExpression"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual String FilterExpression { get; set; }"]},{"entry":["Description","An expression used to filter the data returned from"]},{"entry":[{},"Select( ). Filtering is allowed only when"]},{"entry":[{},"DataSourceMode=DataSet, and the FilterExpression"]},{"entry":[{},"syntax is the same as expected by the DataView's"]},{"entry":[{},"RowFilter property. Parameters are expected to be"]},{"entry":[{},"prefixed with the \u2018@\u2019 character, similar to the SQL"]},{"entry":[{},"syntax for specifying command parameters."]},{"entry":[{},"Example: \u201cFieldName1 = value1, FieldName2 = value2\u201d"]},{"entry":[{},"Example (parameterized): \u201cFieldName1 = @param\u201d"]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"SortExpression"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public override String SortExpression { get; set; }"]},{"entry":["Description","The sort expression for GetList( ), assigned to"]},{"entry":[{},"DataView.Sort before returning the list. Sorting is only"]},{"entry":[{},"supported on the view if the DataSourceMode"]},{"entry":[{},"is set to SqlDataSourceMode.DataSet."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"SelectParameters"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual ParameterCollection SelectParameters"]},{"entry":[{},"{ get; }"]},{"entry":["Description","Collection of parameters used"]},{"entry":[{},"in SqlDataSourceControl.Select( ). These parameter"]},{"entry":[{},"values are substituted for placeholders in the"]},{"entry":[{},"SelectCommand property. See also: "]},{"entry":[{},"System.Web.UI.WebControls.Parameter classes."]},{"entry":["Default Value","null"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"UpdateParameters"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual ParameterCollection UpdateParameters"]},{"entry":[{},"{ get; }"]},{"entry":["Description","Collection of parameters used in Update( )."]},{"entry":[{},"These parameter values are substituted for placeholders"]},{"entry":[{},"in the UpdateCommand property."]},{"entry":[{},"See also: System.Web.UI.WebControls.Parameter"]},{"entry":[{},"classes."]},{"entry":["Default Value","null"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"DeleteParameters"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual ParameterCollection DeleteParameters"]},{"entry":[{},"{ get; }"]},{"entry":["Description","Collection of parameters used in Delete( )."]},{"entry":[{},"These parameter values are substituted for placeholders"]},{"entry":[{},"in the DeleteCommand property. See also:"]},{"entry":[{},"System.Web.UI.WebControls.Parameter classes."]},{"entry":["Default Value","null"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"InsertParameters"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual ParameterCollection InsertParameters"]},{"entry":[{},"{ get; }"]},{"entry":["Description","Collection of parameters used in Insert( )."]},{"entry":[{},"These parameter values are substituted for placeholders"]},{"entry":[{},"in the InsertCommand property. See also: "]},{"entry":[{},"System.Web.UI.WebControls.Parameter classes."]},{"entry":["Default Value","null"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"FilterParameters"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public virtual ParameterCollection FilterParameters"]},{"entry":[{},"{ get; }"]},{"entry":["Description","Collection of parameters used when"]},{"entry":[{},"filtering the data returned from Select( ). These parameter"]},{"entry":[{},"values are substituted for placeholders in the"]},{"entry":[{},"FilterExpression property. See also:"]},{"entry":[{},"System.Web.UI.WebControls.Parameter classes."]},{"entry":["Default Value","null"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Methods"},{"entry":"Select"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public override IEnumerable Select (void);"]},{"entry":["Description","Returns all the rows of the datasource. Parameters are"]},{"entry":[{},"taken from the SqlDataSource.SelectParameters"]},{"entry":[{},"property collection. If DataSourceMode"]},{"entry":[{},"is set to DataSet then a DataView is returned."]},{"entry":[{},"If DataSourceMode is set to DataReader then a"]},{"entry":[{},"DataReader is returned, and it are closed by the caller."]},{"entry":["Parameters","None"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Insert"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public override int Insert (IDictionary values);"]},{"entry":["Description","Inserts a new row with data from a values name\/value"]},{"entry":[{},"collection parameter."]},{"entry":["Parameters","values - name\/value collection representing the column"]},{"entry":[{},"names and corresponding column values to insert."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Update"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public override int Update (IDictionary keys, IDictionary"]},{"entry":[{},"values);"]},{"entry":["Description","Updates rows matching the keys collection, setting new"]},{"entry":[{},"values from the name\/value values collection."]},{"entry":["Parameters","keys - name\/value collection containing column names"]},{"entry":[{},"and values to match when selecting rows to update."]},{"entry":[{},"values - name\/value collection containing the column"]},{"entry":[{},"names and values to replace in the rows matched by"]},{"entry":[{},"the keys collection."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Delete"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public override int Delete (IDictionary keys);"]},{"entry":["Description","Deletes rows from the data source with given keys."]},{"entry":["Parameters","keys - name\/value collection containing column names"]},{"entry":[{},"and values to matcsh when selecting rows to delete."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Insert"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public int Insert (void);"]},{"entry":["Description","Inserts a new row with names and values specified the"]},{"entry":[{},"InsertParameters collection."]},{"entry":["Parameters","None"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Update"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public int Update (void);"]},{"entry":["Description","Updates rows with the values specified in the"]},{"entry":[{},"UpdateParameters collection."]},{"entry":["Parameters","None"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Delete"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public int Delete (void);"]},{"entry":["Description","Deletes rows from the data source using the parameters"]},{"entry":[{},"specified in the DeleteParameters collection."]},{"entry":["Parameters","None"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Events"},{"entry":"Selecting"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","private void SqlDataSourceView_Selecting (Object"]},{"entry":["Handler","sender, SqlDataSourceCommandEventHandler e);"]},{"entry":["Description","Raised before the SelectCommand is executed. The"]},{"entry":[{},"passed event args contains a reference to the provider-"]},{"entry":[{},"specific command object. This event is cancellable,"]},{"entry":[{},"which causes the Select operation to abort."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Updating"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","private void SqlDataSourceView_Updating (Object"]},{"entry":["Handler","sender, SqlDataSourceCommandEventHandler e);"]},{"entry":["Description","Raised before the UpdateCommand is executed. The"]},{"entry":[{},"passed event args contains a reference to the provider-"]},{"entry":[{},"specific command object. This event is cancellable,"]},{"entry":[{},"which causes the Update operation to abort."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Inserting"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","private void SqlDataSourceView_Inserting (Object"]},{"entry":["Handler","sender, SqlDataSourceCommandEventHandler e);"]},{"entry":["Description","Raised before the InsertCommand is executed. The"]},{"entry":[{},"passed event args contains a reference to the provider-"]},{"entry":[{},"specific command object. This event is cancellable,"]},{"entry":[{},"which causes the Insert operation to abort."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Deleting"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","private void SqlDataSourceView_Deleting (Object"]},{"entry":["Handler","sender, SqlDataSourceCommandEventHandler e);"]},{"entry":["Description","Raised before the DeleteCommand is executed. The"]},{"entry":[{},"passed event args contains a reference to the provider-"]},{"entry":[{},"specific command object. This event is cancellable,"]},{"entry":[{},"which causes the Delete operation to abort."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Selected"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","private void SqlDataSourceView_Selected (Object"]},{"entry":["Handler","sender, SqlDataSourceStatusEventHandler e);"]},{"entry":["Description","Raised after the SelectCommand is executed. The"]},{"entry":[{},"passed event args contains any return value or otuput"]},{"entry":[{},"parameters, and indicates the number of rows affected by"]},{"entry":[{},"the command."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Updated"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","private void SqlDataSourceView_Updated (Object"]},{"entry":["Handler","sender, SqlDataSourceStatusEventHandler e);"]},{"entry":["Description","Raised after the UpdateCommand is executed. The"]},{"entry":[{},"passed event args contains any return value or otuput"]},{"entry":[{},"parameters, and indicates the number of rows affected by"]},{"entry":[{},"the command."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Inserted"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","private void SqlDataSourceView_Inserted (Object"]},{"entry":["Handler","sender, SqlDataSourceStatusEventHandler e);"]},{"entry":["Description","Raised after the InsertCommand is executed. The"]},{"entry":[{},"passed event args contains any return value or otuput"]},{"entry":[{},"parameters, and indicates the number of rows affected by"]},{"entry":[{},"the command."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Deleted"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","private void SqlDataSourceView_Deleted (Object"]},{"entry":["Handler","sender, SqlDataSourceStatusEventHandler e);"]},{"entry":["Description","Raised after the DeleteCommand is executed. The passed"]},{"entry":[{},"event args contains any return value or otuput"]},{"entry":[{},"parameters, and indicates the number of rows"]},{"entry":[{},"affected by the command."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"DataSouceViewChanged"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","private void SqlDataSourceView"]},{"entry":["Handler","DataSourceViewChanged (Object sender, EventArgs e);"]},{"entry":["Description","Raised when the DataSourceView changes, which causes"]},{"entry":[{},"DataSourceChanged event to fire on the owner"]},{"entry":[{},"DataSourceControl, causing any data-bound controls to"]},{"entry":[{},"re-bind"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"Overview","The XmlDataSource control  is derived from DataSource control (please see, Appendix A) which abstracts a specific type of data, in this case XML, through a common interface shared by other DataSource controls. Data-bound controls  can be associated with a DataSource control to consume and render the underlying data, without requiring a page developer to write any code whatsoever. XmlDataSource supports both read-only scenarios and read-write (insert, update and delete) scenarios.","Since each DataSource control exposes a common interface (or set of interfaces), data-bound controls can easily consume many different types of data without understanding a unique API for each data type it supports.","The two types of DataSource control interfaces are IDataSource and IHierarchicalDataSource (see, Appendix A), which represent tabular and hierarchical data, respectively. The XmlDataSource control supports both of these interfaces, allowing it to bind to either hierarchical or list controls. The tabular view of XML is a list of XmlNodes at a given level of hierarchy, whereas the hierarchical view is represented by the complete XmlDocument hierarchy. For more information about the IHierarchicalDataSource and IDataSource interfaces, as well as supporting interfaces and classes, see Appendix A.","Specification","The XmlDataSource control can accept XML input data as a relative filename assigned to the DataFile property, or as a string containing the XML content assigned to the Data property. If the XML data does not also contain schema information, the XML schema may be additionally specified as a separate SchemaFile or Schema string. Once the input data for XmlDataSource is supplied, the control exposes that data through its IDataSource or IHierarchicalDataSource interfaces, which can be consumed by any data-bound control that communicates with either of those interfaces. The XmlDataSource will be commonly bound to a hierarchical control, such as TreeView or Menu, as shown in the following example.",{"@attributes":{"id":"p-0214","num":"0250"},"tables":{"@attributes":{"id":"TABLE-US-00050","num":"00050"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<form runat=\u201cserver\u201d>"]},{"entry":[{},"\u2002<asp:XmlDataSource\u2003\u2003id=\u201cXmlSource\u201d\u2003\u2003DataFile="]},{"entry":[{},"\u201cWarehouse.xml\u201d runat=\u201cserver\u201d\/>"]},{"entry":[{},"\u2002<asp:TreeView DataSourceId=\u201cXmlSource\u201d runat=\u201cserver\u201d >"]},{"entry":[{},"\u2002\u2002<Bindings>"]},{"entry":[{},"\u2002\u2002\u2002<asp:TreeNodeBinding Depth=\u201c0\u201d DataMember=\u201cDepartment\u201d"]},{"entry":[{},"\u2002\u2002\u2002\u2002TextField=\u201cName\u201d ValueField=\u201cDeptId\u201d \/>"]},{"entry":[{},"\u2002\u2002\u2002<asp:TreeNodeBinding Depth=\u201c1\u201d DataMember=\u201cCategory\u201d"]},{"entry":[{},"\u2002\u2002\u2002\u2002TextField=\u201cName\u201d ValueField=\u201cCategoryId\u201d \/>"]},{"entry":[{},"\u2002\u2002\u2002<asp:TreeNodeBinding Depth=\u201c2\u201d DataMember=\u201cProduct\u201d"]},{"entry":[{},"\u2002\u2002\u2002\u2002TextField=\u201cName\u201d ValueField=\u201cSKU\u201d \/>"]},{"entry":[{},"\u2002\u2002<\/Bindings>"]},{"entry":[{},"\u2002<\/asp:TreeView>"]},{"entry":[{},"<\/form>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The TreeView binds to each item of the XML data hierarchy for which a corresponding TreeNodeBinding association is defined. For example, a fragment of the Warehouse.xml file for the above example might appear as follows:",{"@attributes":{"id":"p-0216","num":"0252"},"tables":{"@attributes":{"id":"TABLE-US-00051","num":"00051"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<warehouse>"]},{"entry":[{},"\u2002<department name=\u201cdairy\u201d deptid=\u201c111\u201d>"]},{"entry":[{},"\u2002\u2002<category name=\u201cyogurt\u201d categoryid=\u201c2222\u201d>"]},{"entry":[{},"\u2002\u2002\u2002<product name=\u201chorizon\u201d sku=\u201c3333-3333\u201d\/>"]},{"entry":[{},"\u2002\u2002<\/category>"]},{"entry":[{},"\u2002<\/department>"]},{"entry":[{},"<\/warehouse>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The TreeView interacts with the IHierarchicalDataSource interface of XmlDataSource, and the underlying data objects are exposed as XmlNodes in the XmlDocument. The TextField and ValueField attributes on TreeNodeBinding map directly to properties on this object. *","In this implementation, XML APIs, there are six XmlNodeTypes: text, comment, namespace, processing instruction, attribute, and element. Of these, our XmlDataSource only exposes elements as bindable nodes (the element name, innertext, value and attributes are exposed as properties through a customtypedescriptor). In one implementation, a CustomTypeDescriptor on XmlNode exposes the attributes collection. In another implementation, XmlNode is encapsulated into another object to expose the attributes collection. XmlNode.Name returns a fully qualified name if there is a namespace, and a local name if there is no namespace. This allows our XmlDataSource to examine a single property of XmlNode for matching the DataMember specified by the user.","Applying XSL Transformations","XmlDataSource can also transform its underlying XML data using XSLT. The result of the transformation is reflected in both the tabular and hierarchical interfaces exposed by XmlDataSource. XmlDataSource will apply an XSL transformation when the TransformFile property is set to a relative file path of an XSLT document or when the Transform property is set to XSLT content. When the Transform or TransformFile property is defined, an optional TransformArgumentList property may also be defined, which contains a list of arguments passed to the style sheet to be used during the XSL transformation. The Transforming event is fired just prior to applying the transformation, so that the user can populate the TransformArgumentList.","An XSL transformation is often used when the structure of an XML document does not match the structure needed to process the XML data. For example, the TreeView control may need to transform XML data to create a uniform hierarchy to which it can bind each tree level.","Consider the following sample XML data, which represents books of different genres in an online bookstore. Each book node contains information about its title and price, as well as several chapters containing the book's content.",{"@attributes":{"id":"p-0222","num":"0258"},"tables":{"@attributes":{"id":"TABLE-US-00052","num":"00052"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<bookstore>"]},{"entry":[{},"\u2002<genre name=\u201cfiction\u201d>"]},{"entry":[{},"\u2002\u2002<book ISBN=\u201c10-861003-324\u201d>"]},{"entry":[{},"\u2002\u2002\u2002<title>The Handmaid's Tale<\/title>"]},{"entry":[{},"\u2002\u2002\u2002<price>12.95<\/price>"]},{"entry":[{},"\u2002\u2002\u2002<chapters>"]},{"entry":[{},"\u2002\u2002\u2002\u2002<chapter num=\u201c1\u201d name=\u201cIntroduction\u201d>"]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002\u2002Contents..."]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002<\/chapter>"]},{"entry":[{},"\u2002\u2002\u2002\u2002<chapter num=\u201c2\u201d name=\u201cBody\u201d>"]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002\u2002Contents..."]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002<\/chapter>"]},{"entry":[{},"\u2002\u2002\u2002\u2002<chapter num=\u201c3\u201d name=\u201cConclusion\u201d>"]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002\u2002Contents..."]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002<\/chapter>"]},{"entry":[{},"\u2002\u2002\u2002<\/chapters>"]},{"entry":[{},"\u2002\u2002<\/book>"]},{"entry":[{},"\u2002\u2002<book genre=\u201cfiction\u201d ISBN=\u201c1-861001-57-5\u201d>"]},{"entry":[{},"\u2002\u2002\u2002<title>Pride And Prejudice<\/title>"]},{"entry":[{},"\u2002\u2002\u2002<price>24.95<\/price>"]},{"entry":[{},"\u2002\u2002\u2002<chapters>"]},{"entry":[{},"\u2002\u2002\u2002\u2002<chapter num=\u201c1\u201d name=\u201cIntroduction\u201d>"]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002\u2002Contents..."]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002<\/chapter>"]},{"entry":[{},"\u2002\u2002\u2002\u2002<chapter num=\u201c2\u201d name=\u201cBody\u201d>"]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002\u2002Contents..."]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002<\/chapter>"]},{"entry":[{},"\u2002\u2002\u2002\u2002<chapter num=\u201c3\u201d name=\u201cConclusion\u201d>"]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002\u2002Contents..."]},{"entry":[{},"\u2002\u2002\u2002\u2002\u2002<\/chapter>"]},{"entry":[{},"\u2002\u2002\u2002\u2002<\/chapters>"]},{"entry":[{},"\u2002\u2002\u2002<\/book>"]},{"entry":[{},"\u2002\u2002<\/genre>"]},{"entry":[{},"\u2002<\/bookstore>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The following XSL transformation file converts the sample Bookstore.xml file to a format which the TreeView can easily consume.",{"@attributes":{"id":"p-0224","num":"0260"},"tables":{"@attributes":{"id":"TABLE-US-00053","num":"00053"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<xsl:stylesheet\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003version=\u201c1.0\u201d"]},{"entry":[{},"xmlns:xsl=\u201chttp:\/\/www.w3.org\/1999\/XSL\/Transform\u201d>"]},{"entry":[{},"<xsl:template match=\u201cbookstore\u201d>"]},{"entry":[{},"\u2002<bookstore>"]},{"entry":[{},"\u2002\u2002<xsl:apply-templates select=\u201cgenre\u201d\/>"]},{"entry":[{},"\u2002<\/bookstore>"]},{"entry":[{},"<\/xsl:template>"]},{"entry":[{},"<xsl:template match=\u201cgenre\u201d>"]},{"entry":[{},"\u2002<genre>"]},{"entry":[{},"\u2002\u2002<xsl:attribute name=\u201cname\u201d>"]},{"entry":[{},"\u2002\u2002\u2002<xsl:value-of select=\u201c@name\u201d\/>"]},{"entry":[{},"\u2002\u2002<\/xsl:attribute>"]},{"entry":[{},"\u2002\u2002<xsl:apply-templates select=\u201cbook\u201d\/>"]},{"entry":[{},"\u2002<\/genre>"]},{"entry":[{},"<\/xsl:template>"]},{"entry":[{},"<xsl:template match=\u201cbook\u201d>"]},{"entry":[{},"\u2002<book>"]},{"entry":[{},"\u2002\u2002<xsl:attribute name=\u201cISBN\u201d>"]},{"entry":[{},"\u2002\u2002\u2002<xsl:value-of select=\u201c@ISBN\u201d\/>"]},{"entry":[{},"\u2002\u2002<\/xsl:attribute>"]},{"entry":[{},"\u2002\u2002<xsl:attribute name=\u201ctitle\u201d>"]},{"entry":[{},"\u2002\u2002\u2002<xsl:value-of select=\u201ctitle\u201d\/>"]},{"entry":[{},"\u2002\u2002<\/xsl:attribute>"]},{"entry":[{},"\u2002\u2002<xsl:attribute name=\u201cprice\u201d>"]},{"entry":[{},"\u2002\u2002\u2002<xsl:value-of select=\u201cprice\u201d\/>"]},{"entry":[{},"\u2002\u2002<\/xsl:attribute>"]},{"entry":[{},"\u2002\u2002<xsl:apply-templates select=\u201cchapters\/chapter\u201d \/>"]},{"entry":[{},"\u2002<\/book>"]},{"entry":[{},"<\/xsl:template>"]},{"entry":[{},"<xsl:template match=\u201cchapter\u201d>"]},{"entry":[{},"\u2002<chapter>"]},{"entry":[{},"\u2002\u2002<xsl:attribute name=\u201cnum\u201d>"]},{"entry":[{},"\u2002\u2002\u2002<xsl:value-of select=\u201c@num\u201d\/>"]},{"entry":[{},"\u2002\u2002<\/xsl:attribute>"]},{"entry":[{},"\u2002\u2002<xsl:attribute name=\u201cname\u201d>"]},{"entry":[{},"\u2002\u2002\u2002<xsl:value-of select=\u201c@name\u201d\/>"]},{"entry":[{},"\u2002\u2002<\/xsl:attribute>"]},{"entry":[{},"\u2002\u2002<xsl:apply-templates\/>"]},{"entry":[{},"\u2002<\/chapter>"]},{"entry":[{},"<\/xsl:template>"]},{"entry":[{},"<\/xsl:stylesheet>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The result of the transformation on the Bookstore.xml file is given below. Note that XML hierarchy has been homogenized to represent a single element type at each level: genres, books, and chapters.",{"@attributes":{"id":"p-0226","num":"0262"},"tables":{"@attributes":{"id":"TABLE-US-00054","num":"00054"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<bookstore>"},{"entry":"\u2002<genre name=\u201cfiction\u201d>"},{"entry":"\u2002\u2002<book\u2003ISBN=\u201c10-861003-324\u201d\u2003title=\u201cThe\u2003Handmaid's\u2003Tale\u201d"},{"entry":"price=\u201c19.95\u201d>"},{"entry":"\u2002\u2002\u2002<chapter num=\u201c1\u201d name=\u201cIntroduction\u201d>"},{"entry":"\u2002\u2002\u2002\u2002Contents..."},{"entry":"\u2002\u2002\u2002<\/chapter>"},{"entry":"\u2002\u2002\u2002<chapter num=\u201c2\u201d name=\u201cBody\u201d>"},{"entry":"\u2002\u2002\u2002\u2002Contents..."},{"entry":"\u2002\u2002\u2002<\/chapter>"},{"entry":"\u2002\u2002\u2002<chapter num=\u201c3\u201d name=\u201cConclusion\u201d>"},{"entry":"\u2002\u2002\u2002\u2002Contents..."},{"entry":"\u2002\u2002\u2002<\/chapter>"},{"entry":"\u2002\u2002<\/book>"},{"entry":"\u2002\u2002<book\u2003ISBN=\u201c1-861001-57-5\u201d\u2003title=\u201cPride\u2003And\u2003Prejudice\u201d"},{"entry":"price=\u201c24.95\u201d>"},{"entry":"\u2002\u2002\u2002<chapter num=\u201c1\u201d name=\u201cIntroduction\u201d>"},{"entry":"\u2002\u2002\u2002\u2002Contents..."},{"entry":"\u2002\u2002\u2002<\/chapter>"},{"entry":"\u2002\u2002\u2002<chapter num=\u201c2\u201d name=\u201cBody\u201d>"},{"entry":"\u2002\u2002\u2002\u2002Contents..."},{"entry":"\u2002\u2002\u2002<\/chapter>"},{"entry":"\u2002\u2002\u2002<chapter num=\u201c3\u201d name=\u201cConclusion\u201d>"},{"entry":"\u2002\u2002\u2002\u2002Contents..."},{"entry":"\u2002\u2002\u2002<\/chapter>"},{"entry":"\u2002\u2002<\/book>"},{"entry":"\u2002<\/genre>"},{"entry":"<\/bookstore>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The preceding exemplary XML structure easily maps to the TreeView's data model, where node properties are bound against element attributes at each level of hierarchy, as shown below.",{"@attributes":{"id":"p-0228","num":"0264"},"tables":{"@attributes":{"id":"TABLE-US-00055","num":"00055"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<form runat=\u201cserver\u201d>"]},{"entry":[{},"\u2002<asp:XmlDataSource id=\u201cXmlSource\u201d runat=\u201cserver\u201d"]},{"entry":[{},"\u2002\u2002DataFile=\u201cBookstore.xml\u201d"]},{"entry":[{},"\u2002\u2002TransformFile=\u201cBooks.xsl\u201d"]},{"entry":[{},"\u2002\/>"]},{"entry":[{},"\u2002<asp:TreeView DataSourceId=\u201cXmlSource\u201d runat=\u201cserver\u201d >"]},{"entry":[{},"\u2002\u2002<Bindings>"]},{"entry":[{},"\u2002\u2002\u2002<asp:TreeNodeBinding Depth=\u201c0\u201d DataMember=\u201cgenre\u201d"]},{"entry":[{},"\u2002\u2002\u2002\u2002TextField=\u201cname\u201d ValueField=\u201cname\u201d\/>"]},{"entry":[{},"\u2002\u2002\u2002<asp:TreeNodeBinding Depth=\u201c1\u201d DataMember=\u201cbook\u201d"]},{"entry":[{},"\u2002\u2002\u2002\u2002TextField=\u201ctitle\u201d ValueField=\u201cISBN\u201d\/>"]},{"entry":[{},"\u2002\u2002\u2002<asp:TreeNodeBinding Depth=\u201c2\u201d DataMember=\u201cchapter\u201d"]},{"entry":[{},"\u2002\u2002\u2002\u2002TextField=\u201cname\u201d ValueField=\u201cnum\u201d\/>"]},{"entry":[{},"\u2002\u2002<\/Bindings>"]},{"entry":[{},"\u2002<\/asp:TreeView>"]},{"entry":[{},"<\/form>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The rendered TreeView control appears as follows:\n\n","The XmlDataSource also supports an XPath property that can be assigned a valid XPath expression for filtering\/querying the XML data. The result of an XPath query is an XmlNodeList, which is represented by the default view returned from the IHierarchicalDataSource.GetView and IDataSource.GetView methods. Note that the XmlDataSource does not insert new nodes into this view, but it can delete or update existing nodes. The example below shows a TreeView bound to only the Category and Product elements in Warehouse.xml where the Department element has a DeptId attribute of \u2018333\u2019.",{"@attributes":{"id":"p-0231","num":"0277"},"tables":{"@attributes":{"id":"TABLE-US-00056","num":"00056"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2002<form runat=\u201cserver\u201d>"},{"entry":"\u2003<asp:XmlDataSource \u2003id=\u201cXmlSource\u201d\u2003DataFile=\u201cWarehouse.xml\u201d"},{"entry":"runat=\u201cserver\u201d"},{"entry":"\u2003\u2003\u2002XPath=\u201cWarehouse\/Department[@DeptId=\u2018333\u2019]\u201d"},{"entry":"\u2003\/>"},{"entry":"\u2003<asp:TreeView DataSourcelId=\u201cXmlSource\u201d runat=\u201cserver\u201d >"},{"entry":"\u2003\u2003<Bindings>"},{"entry":"\u2003\u2003\u2003<asp:TreeNodeBinding Depth=\u201c0\u201d DataMember=\u201cCategory\u201d"},{"entry":"\u2003\u2003\u2003\u2003TextField=\u201cName\u201d ValueField=\u201cCategoryId\u201d \/>"},{"entry":"\u2003\u2003\u2003<asp:TreeNodeBinding Depth=\u201c1\u201d DataMember=\u201cProduct\u201d"},{"entry":"\u2003\u2003\u2003\u2003TextField=\u201cName\u201d ValueField=\u201cSKU\u201d \/>"},{"entry":"\u2003\u2003<\/Bindings>"},{"entry":"\u2003<\/asp:TreeView>"},{"entry":"\u2002<\/form>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In one implementation, XmlDataSource automatically extracts namespaces from the XML document, to supply when evaluating XPath expressions using SelectNodes. The XPathNavigator retains the currently in-scope namespaces.","Binding a List Control to XML Data","The XmlDataSource control can also expose its data as a tabular list of XmlNodes, for binding to a list control such as DataList or GridView. Because list controls typically do not render hierarchical data, they interact with the IDataSource interface of XmlDataSource instead of IHierarchicalDataSource. The default view of the IDataSource interface returns the root-level XmlNodes (after any XPath is applied, if it is specified). For data-bound list controls that do not directly support the DataSourceControl architecture, the XmlDataSource control implements the IListSource interface and may assigned directly to a data-bound control's DataSource property.",{"@attributes":{"id":"p-0234","num":"0280"},"tables":{"@attributes":{"id":"TABLE-US-00057","num":"00057"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<form runat=\u201cserver\u201d>"},{"entry":"\u2003<asp:XmlDataSource id=\u201cXmlSource\u201d DataFile=\u201cBooks.xml\u201d"},{"entry":"\u2003\u2003XPath=\u201cbookstore\/genre[@name=\u2018fiction\u2019]\/book\u201d runat=\u201cserver\u201d\/>"},{"entry":"\u2003<asp:GridView DataSourceId=\u201cXmlSource\u201d runat=\u201cserver\u201d\/>"},{"entry":"<\/form>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Note that because the XmlDataSource supports a save operation that can be invoked after a developer have made changes to a document, a data-bound control might also render UI for editing the table data directly. Internally, the XmlDataSource invokes its Save( ) method each time Insert, Update or Delete is called by the GridView. Any changes committed back to the XmlDataSource are reflected in the underlying source XML document immediately. In one implementation, this automatic save behavior can be turned off using the AutoSave property of XmlDataSource. In this case, user code can call Save( ) manually when appropriate.","Binding a Templated List Control to XmlDataSource","A templated control, such as DataList or Repeater, can also be bound to an XmlDataSource, and individual XML data fragments may be bound inside the template using the XPathBinder helper object. The XPathBinder.Eval method accepts an XmlNode (as Object) and XPath expression, and will evaluate the result. A format string can also be passed to Eval, which applied using String.Format before returning the result.\n\n","XPathBinder.Eval tries to cast the Object container to IXPathNavigable in order to apply the XPath expression, otherwise it fails. Note that a simplified syntax for XPathBinder is also supported, where the container is implicitly inferred as Container.DataItem: XPath (String expression [, String format]).","The following example shows a Repeater control bound to an XmlDataSource, where XPathBinder is used to retrieve the title of each book under the genre \u201cfiction\u201d, along with the values of the author node's first-name and last-name attributes.",{"@attributes":{"id":"p-0239","num":"0287"},"tables":{"@attributes":{"id":"TABLE-US-00058","num":"00058"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003<form runat=\u201cserver\u201d>"},{"entry":"\u2003\u2003<asp:XmlDataSource \u2002\u2009id=\u201cXmlSource\u201d\u2002\u2009DataFile=\u201cBookstore.xml\u201d"},{"entry":"runat=\u201cserver\u201d"},{"entry":"\u2003\u2003\u2003XPath=\u201cbookstore\/genre[@name=\u2018fiction\u2019]\u201d\/>"},{"entry":"\u2003\u2003<asp:Repeater DataSourcelId=\u201cXmlSource\u201d runat=\u201cserver\u201d>"},{"entry":"\u2003\u2003\u2003<ItemTemplate>"},{"entry":"\u2003\u2003\u2003\u2003<h1><%# XPath (\u201cbook\/@title\u201d) %><\/h1>"},{"entry":"\u2003\u2003\u2003\u2003<b>Author:<\/b>"},{"entry":"\u2003\u2003\u2003\u2003<%# XPath (\u201cbook\/author\/@first-name\u201d) %>"},{"entry":"\u2003\u2003\u2003\u2003<%# XPath (\u201cbook\/author\/@last-name\u201d) %>"},{"entry":"\u2003\u2003\u2003<\/ItemTemplate>"},{"entry":"\u2003\u2003<\/asp:Repeater>"},{"entry":"\u2003<\/form>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"XPathBinder can also return an IEnumerable from its Select method, which takes a container XmlNode Object and XPath expression and returns a list of nodes. Note that if the container Object does not implement IXPathNavigable, XPathBinder.Select throws InvalidCastException. Like XPathBinder.Eval, a simplified XPathSelect syntax may be used in it's place.\n\n","The return value can be enumerated directly, or even assigned to the DataSource property of another list UI control, such as a Repeater or DataList. The following example demonstrates a Repeater control nested within the template of a parent Repeater control, bound to the result of an XPath query using XPathBinder.Select. Note that further XPath queries may be applied to the data in the nested repeater's ItemTemplate.",{"@attributes":{"id":"p-0242","num":"0291"},"tables":{"@attributes":{"id":"TABLE-US-00059","num":"00059"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003<form runat=\u201cserver\u201d>"},{"entry":"\u2003\u2003<asp:XmlDataSource \u2002\u2009id=\u201cXmlSource\u201d\u2002\u2009DataFile=\u201cBookstore.xml\u201d"},{"entry":"runat=\u201cserver\u201d"},{"entry":"\u2003\u2003\u2003XPath=\u201cbookstore\/genre[@name=\u2018fiction\u2019]\u201d \/>"},{"entry":"\u2003\u2003<asp:Repeater DataSourceId=\u201cXmlSource\u201d runat=\u201cserver\u201d>"},{"entry":"\u2003\u2003\u2003<ItemTemplate>"},{"entry":"\u2003\u2003\u2003\u2003<h1><%# XPath (\u201cbook\/@title\u201d) %><\/h1>"},{"entry":"\u2003\u2003\u2003\u2003<b>Author:<\/b>"},{"entry":"\u2003\u2003\u2003\u2003<%# XPath (\u201cbook\/author\/@first-name\u201d) %>"},{"entry":"\u2003\u2003\u2003\u2003<%# XPath (\u201cbook\/author\/@last-name\u201d) %>"},{"entry":"\u2003\u2003\u2003\u2003<asp:Repeater"},{"entry":"\u2003\u2003\u2003\u2003\u2003DataSource=\u2018<%# XPathSelect (\u201cbook\/chapters\u201d) %>\u2019"},{"entry":"\u2003\u2003\u2003\u2003\u2003runat=\u201cserver\u201d >"},{"entry":"\u2003\u2003\u2003\u2003\u2003<ItemTemplate>"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003<%# XPath (\u201cchapter\/@name\u201d) %>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<\/ItemTemplate>"},{"entry":"\u2003\u2003\u2003\u2003<\/asp:Repeater>"},{"entry":"\u2003\u2003\u2003<\/ItemTemplate>"},{"entry":"\u2003\u2003<\/asp:Repeater>"},{"entry":"\u2003<\/form>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Parameterized XPath Queries","In this implementation, like other DataSource controls, the XmlDataSource supports parameterized queries, where parameter values are bound from an associated ParameterCollection. This feature accepts an XPath query and name\/value pair parameter list, and returns an XmlNodeList result. This allows for filtering and Master-Details scenarios, such as the scenario demonstrated in the following example.",{"@attributes":{"id":"p-0244","num":"0293"},"tables":{"@attributes":{"id":"TABLE-US-00060","num":"00060"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2002<form runat=\u201cserver\u201d>"},{"entry":"\u2003<asp:XmlDataSource \u2002\u2009id=\u201cMasterSource\u201d\u2002\u2009DataFile=\u201cBookstore.xml\u201d"},{"entry":"runat=\u201cserver\u201d"},{"entry":"\u2003\u2003XPath=\u201cbookstore\/genre\u201d \/>"},{"entry":"\u2003<asp:XmlDataSource \u2002\u2009id=\u201cDetailsSource\u201d\u2002\u2009DataFile=\u201cBookstore.xml\u201d"},{"entry":"runat=\u201cserver\u201d"},{"entry":"\u2003\u2003XPath=\u201cbookstore\/genre[@name=\u2018$x\u2019]\u201d>"},{"entry":"\u2003\u2003<Parameters>"},{"entry":"\u2003\u2003\u2003<asp:ControlParameter name=\u201cx\u201d ControlId=\u201cGenres\u201d \/>"},{"entry":"\u2003\u2003<\/Parameters>"},{"entry":"\u2003<\/asp:XmlDataSource>"},{"entry":"\u2003<asp:DropDownList id=\u201cGenres\u201d DataSourceId=\u201cMasterSource\u201d"},{"entry":"\u2003\u2003DataTextField=\u201cName\u201d runat=\u201cserver\u201d\/>"},{"entry":"\u2003<asp:GridView id=\u201cBooksForGenre\u201d DataSourceId=\u201cDetailsSource\u201d"},{"entry":"\u2003\u2003DataMember=\u201cBooks\u201d runat=\u201cserver\u201d \/>"},{"entry":"\u2002<\/form>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Object Model Reference",{"@attributes":{"id":"p-0245","num":"0294"},"tables":{"@attributes":{"id":"TABLE-US-00061","num":"00061"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"namespace System.Web.UI.WebControls"},{"entry":"{"},{"entry":"\u2003\u2003public class XmlDataSource : HierarchicalDataSourceControl,"},{"entry":"IDataSource, IListSource"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\/\/ Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003public virtual String","DataFile","{ get; set; }"]},{"entry":["\u2003\u2003public virtual String","Data","{ get; set; }"]},{"entry":["\u2003\u2003public virtual String","SchemaFile","{ get; set; }"]},{"entry":["\u2003\u2003public virtual String","Schema","{ get; set; }"]},{"entry":["\u2003\u2003public virtual String","Transform","{ get; set; }"]},{"entry":["\u2003\u2003public virtual String","TransformFile","\u2003\u2003{ get;"]},{"entry":"\u2003\u2003set; }"},{"entry":["\u2003\u2003public virtual XsltArgumentList","TransformArgumentList","\u2003\u2003{ get;"]},{"entry":"\u2003\u2003set; }"},{"entry":["\u2003\u2003public virtual String","XPath","{ get; set; }"]},{"entry":["\u2003\u2003public virtual bool","EnableCaching","\u2003\u2003{ get;"]},{"entry":"\u2003\u2003set; }"},{"entry":["\u2003\u2003public virtual int","CacheDuration","\u2003\u2003{ get;"]},{"entry":"\u2003\u2003set; }"},{"entry":"\u2003\u2003public virtual"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003DataSourceCacheExpiry \u2003CacheExpirationPolicy","{ get; set; }"]},{"entry":["\u2003\u2003protected virtual \u2003FileDataSourceCache \u2003Cache","{ get; }"]},{"entry":"\u2003\u2003\/\/ Constructors"},{"entry":"\u2003\u2003public XmlDataSource (void);"},{"entry":"\u2003\u2003\/\/ Events"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003public event EventHandler Transforming","{ add; remove; }"]},{"entry":["\u2003\u2003public event EventHandler DataSourceChanged","{ add; remove; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003\/\/ Methods"},{"entry":"\u2003\u2003public Save (void);"},{"entry":"\u2003\u2003public XmlDocument GetXmlDocument (void);"},{"entry":"\u2003\u2003protected virtual void OnTransforming (EventArgs e);"},{"entry":"\u2003\u2003protected virtual void OnDataSourceChanged (EventArgs e);"},{"entry":"\u2003\u2003\/\/ IDataSource Implementation"},{"entry":"\u2003\u2003event EventHandler IDataSource.DataSourceChanged { ... }"},{"entry":"\u2003\u2003DataSourceView IDataSource.GetView (String viewName);"},{"entry":"\u2003\u2003ICollection IDataSource.GetViewNames (void);"},{"entry":"\u2003\u2003\/\/ IHierarchicalDataSource Implementation"},{"entry":"\u2003\u2003event EventHandler IHierarchicalDataSource.DataSourceChanged { ... }"},{"entry":"\u2003\u2003HierarchicalDataSourceView IHierarchicalDataSource.GetView (String"},{"entry":"\u2003\u2003viewPath);"},{"entry":"\u2003\u2003\/\/ IListSource Implementation"},{"entry":"\u2003\u2003bool IListSource.ContainsListCollection { get; }"},{"entry":"\u2003\u2003IList IListSource.GetList (void);"},{"entry":"}"},{"entry":"public class XmlHierarchicalDataSourceView : HierarchicalDataSourceView"},{"entry":"{"},{"entry":"\u2003\u2003\/\/ Methods"},{"entry":"\u2003\u2003public override IHierarchicalEnumerable GetHierarchicalList (void);"},{"entry":"}"},{"entry":"public class XmlHierarchicalEnumerable : IHierarchicalEnumerable"},{"entry":"{"},{"entry":"\u2003\u2003\/\/ IHierarchicalEnumerable Implementation"},{"entry":"\u2003\u2003IHierarchicalEnumerator IHierarchicalEnumerable.GetEnumerator (void);"},{"entry":"\u2003\u2003\/\/ IEnumerable Implementation"},{"entry":"\u2003\u2003IEnumerator IEnumerable.GetEnumerator (void);"},{"entry":"}"},{"entry":"public class XmlHierarchicalEnumerator : IHierarchicalEnumerator"},{"entry":"{"},{"entry":"\u2003\u2003\/\/ IHierarchicalEnumerator Implementation"},{"entry":"\u2003\u2003bool IHierarchicalEnumerator.HasChildren { get; }"},{"entry":"\u2003\u2003String IHierarchicalEnumerator.Path { get; }"},{"entry":"\u2003\u2003Object IHierarchicalEnumerator.this [String propertyName] { get; }"},{"entry":"\u2003\u2003HierarchicalDataSourceView IHierarchicalEnumerator.GetChildren (void);"},{"entry":"\u2003\u2003HierarchicalDataSourceView IHierarchicalEnumerator.GetParent (void);"},{"entry":"\u2003\u2003\/\/ IEnumerator Implementation"},{"entry":"\u2003\u2003Object IEnumerator.Current { get; }"},{"entry":"\u2003\u2003bool IEnumerator.MoveNext (void);"},{"entry":"\u2003\u2003void IEnumerator.Reset (void);"},{"entry":"}"},{"entry":"public class XmlDataSourceView : DataSourceView"},{"entry":"{"},{"entry":"\u2003\u2003\/\/ Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003public override String Name","{ get; }"]},{"entry":"\u2003\u2003\/\/ Methods"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2003public override IEnumerable ExecuteSelect(DataSourceSelectArguments"},{"entry":"\u2003\u2003arguments);"},{"entry":"}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0246","num":"0295"},"tables":{"@attributes":{"id":"TABLE-US-00062","num":"00062"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<asp:XmlDataSource"]},{"entry":[{},"\u2003\u2003DataFile=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003SchemaFile=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003TransformFile=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003XPath=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003EnableCaching=\u201c[true\\false]\u201d"]},{"entry":[{},"\u2003\u2003CacheDuration=\u201cint\u201d"]},{"entry":[{},"\u2003\u2003CacheExpirationPolicy=\u201cDataSourceCacheExpiry\u201d"]},{"entry":[{},"\u2003\u2003OnDataSourceChanged=\u201cEventHandler\u201d"]},{"entry":[{},"\u2003\u2003OnTransforming=\u201cEventHandler\u201d"]},{"entry":[{},"\u2003\u2003runat=\u201cserver\u201d"]},{"entry":[{},">"]},{"entry":[{},"\u2003<Data>"]},{"entry":[{},"\u2003\u2003[ Inline XML Data ]"]},{"entry":[{},"\u2003<\/Data>"]},{"entry":[{},"\u2003<Schema>"]},{"entry":[{},"\u2003\u2003[ Inline XML Schema ]"]},{"entry":[{},"\u2003<\/Schema>"]},{"entry":[{},"\u2003<Transform>"]},{"entry":[{},"\u2003\u2003[ Inline XSL Tranform ]"]},{"entry":[{},"\u2003<\/Transform>"]},{"entry":[{},"<\/asp:XmlDataSource>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"Overview","DataSource Parameter classes described in this document are supporting types to the systems and methods for data control architecture  of . Development tools provided by design host  of  make it easy to associate control and page values with parameters at design-time. A DataSource control class (an instantiation of which represents a respective data source control ) abstracts a specific type of data through a common interface shared by other controls based on DataSource.","Data-bound controls (i.e., data-bound control(s) ) can be associated with a DataSource control to consume and render the underlying data, without requiring a Page developer to write any code whatsoever. Rather, page developers can declaratively associate request, session or control values with data source parameters, to be bound at runtime when an operation is invoked. No code is required to assign the value. Data-bound controls can programmatically create parameters and assign them to a DataSource control's ParameterCollection property to associate values with insert, update or delete parameters on-demand. The GridView and DetailsView controls do this to provide automatic edit, insert and delete functionality. In this implementation, all parameters share a common base class that allows new parameter types to be defined that work with existing DataSource controls. The supported Parameter types described in this document are Parameter (static), QueryStringParameter, FormParameter, CookieParameter, SessionParameter, ControlParameter, , and ProfileParameter","Several DataSource controls, including the SqlDataSource and ObjectDataSource controls, support parameterized operations to select, insert, update, and delete data. The syntax of a parameterized operation is specific to the data source control provider or underlying data type represented by the DataSource control. For example, SqlDataSource command parameters are prefixed with \u2018@\u2019 when using the System.Data.SqlClient provider, whereas when using the System.Data.OleDb provider the command parameters are prefixed with \u2018?\u2019. ObjectDataSource parameters are inferred from the MethodInfo of the associated object method for a given operation.","Scenarios","Below are provided a number of exemplary scenarios supported by DataSource Parameters:","DataSource Parameters allow values of request fields or control properties to be bound to the parameters in a DataSource control command. The example below shows a parameter bound to the SelectedValue property of a DropDownList control, as well as a property bound to a \u201csearchFor\u201d querystring value. When the \u201csearchFor\u201d value is unavailable, an empty string DefaultValue is used.",{"@attributes":{"id":"p-0252","num":"0301"},"tables":{"@attributes":{"id":"TABLE-US-00063","num":"00063"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<form runat=\u201cserver\u201d>"]},{"entry":[{},"\u2003\u2003<asp:SqlDataSource id=\u201cMySource\u201d runat=\u201cserver\u201d"]},{"entry":[{},"ConnectionString=\u201cserver=aspnet;database=messagedb;"]},{"entry":[{},"trusted_connection=yes\u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003SelectCommand=\u201cSELECT @count * FROM Messages"]},{"entry":[{},"\u2003\u2003\u2003\u2003WHERE Topic"]},{"entry":[{},"LIKE @searchFor\u201d>"]},{"entry":[{},"\u2003\u2003\u2003<Parameters>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<asp:ControlParameter Name=\u201ccount\u201d ControlId=\u201cNum\u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003PropertyName=\u201cSelectedValue\u201d\/>"]},{"entry":[{},"\u2003\u2003\u2003\u2003<asp:QueryStringParameter Name=\u201csearchFor\u201d"]},{"entry":[{},"QueryStringField=\u201cSearchFor\u201d"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u2003Default Value=\u201c\u201d\/>"]},{"entry":[{},"\u2003\u2003\u2003<\/Parameters>"]},{"entry":[{},"\u2003\u2003<\/asp:SqlDataSource>"]},{"entry":[{},"\u2003\u2003Results To Display:"]},{"entry":[{},"\u2003\u2003<asp:DropDownList id=\u201cNum\u201d runat=\u201cserver\u201d>"]},{"entry":[{},"\u2003\u2003\u2003<asp:ListItem Selected>10<\/asp:ListItem>"]},{"entry":[{},"\u2003\u2003\u2003<asp:ListItem>100<\/asp:ListItem>"]},{"entry":[{},"\u2003\u2003\u2003<asp:ListItem>1000<\/asp:ListItem>"]},{"entry":[{},"\u2003\u2003<\/asp:DropDownList>"]},{"entry":[{},"\u2003\u2003<asp:GridView DataSourceId=\u201cMySource\u201d runat=\u201cserver\u201d\/>"]},{"entry":[{},"\u2003<\/form>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In this implementation, if the PropertyValue on ControlParameter is not specified, it uses the default control property as indicated by the ControlValuePropertyAttribute (see ControlParameter description in the Reference Specification section below).","A common use for parameters is to enable a completely declarative master-details scenario, where the value from a master control, such as a dropdownlist, is used as input to a data source bound to a details control, such as a grid.",{"@attributes":{"id":"p-0255","num":"0304"},"tables":{"@attributes":{"id":"TABLE-US-00064","num":"00064"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003<form runat=\u201cserver\u201d>"},{"entry":"\u2003\u2003<asp:DropDownList id=\u201cStateDropDown\u201d DataSourceId=\u201cMyStateSource\u201d"},{"entry":"\u2003\u2003\u2003\u2003DataTextField=\u201cstate\u201d AutoPostBack=\u201ctrue\u201d runat=\u201cserver\u201d\/>"},{"entry":"\u2003\u2003<asp:GridView id=\u201cMyGridView\u201d DataSourceId=\u201cMySource\u201d"},{"entry":"\u2003\u2003\u2003DataKeyNames=\u201cau_id\u201d"},{"entry":"\u2003\u2003\u2003AutoGenerateEditButton=\u201ctrue\u201d"},{"entry":"\u2003\u2003\u2003AutoGenerateDeleteButton=\u201ctrue\u201d"},{"entry":"\u2003\u2003\u2003AllowSorting=\u201ctrue\u201d"},{"entry":"\u2003\u2003\u2003AllowPaging=\u201ctrue\u201d"},{"entry":"\u2003\u2003\u2003runat=\u201cserver\u201d \/>"},{"entry":"\u2003\u2003<asp:SqlDataSource id=\u201cMySource\u201d"},{"entry":"\u2003\u2003\u2003ConnectionString=\u201cserver=(local);database=pubs;trusted_connection=yes\u201d"},{"entry":"\u2003\u2003\u2003SelectCommand=\u201cselect * from authors where state = @state\u201d"},{"entry":"\u2003\u2003\u2003UpdateCommand=\u201cupdate authors set au_lname = @au_lname where au_id ="},{"entry":"@au_id\u201d"},{"entry":"\u2003\u2003\u2003DeleteCommand=\u201cDeleteAuthor\u201d"},{"entry":"\u2003\u2003\u2003runat=\u201cserver\u201d"},{"entry":"\u2003\u2003>"},{"entry":"\u2003\u2003\u2003<SelectParameters>"},{"entry":"\u2003\u2003\u2003\u2003<asp:ControlParameter Name=\u201cstate\u201d ControlId=\u201cStateDropDown\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003PropertyName=\u201cSelectedValue\u201d \/>"},{"entry":"\u2003\u2003\u2003<\/SelectParameters>"},{"entry":"\u2003\u2003<\/asp:SqlDataSource>"},{"entry":"\u2003\u2003<asp:SqlDataSource id=\u201cMyStateSource\u201d"},{"entry":"\u2003\u2003\u2003ConnectionString=\u201cserver=(local);database=pubs;trusted_connection=yes\u201d"},{"entry":"\u2003\u2003\u2003SelectCommand=\u201cselect DISTINCT state from authors\u201d"},{"entry":"\u2003\u2003\u2003runat=\u201cserver\u201d"},{"entry":"\u2003\u2003\/>"},{"entry":"\u2003<\/form>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Parameters may also be used to substitute values to an insert, update, or delete command of a DataSource control. The following example demonstrates an AccessDataSource control bound to an MDB database file, which takes a value to insert from a TextBox control on the page.",{"@attributes":{"id":"p-0257","num":"0306"},"tables":{"@attributes":{"id":"TABLE-US-00065","num":"00065"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<script runat=\u201cserver\u201d>"},{"entry":"\u2003void DoInsert (Object sender, EventArgs e) {"},{"entry":"\u2003\u2003\u2002MySource.Insert( );"},{"entry":"\u2003}"},{"entry":"<\/script>"},{"entry":"<form runat=\u201cserver\u201d>"},{"entry":"\u2003First Name: <asp:TextBox id=\u201cFirstName\u201d runat=\u201cserver\u201d\/>"},{"entry":"\u2003<asp:Button Text=\u201cInsert Row\u201d OnClick=\u201cInsertRow\u201d runat=\u201cserver\u201d\/>"},{"entry":"\u2003<asp:AccessDataSource id=\u201cMySource\u201d runat=\u201cserver\u201d"},{"entry":"\u2003\u2003\u2003SelectCommand=\u201cSELECT * FROM Customers\u201d"},{"entry":"\u2003\u2003\u2003InsertCommand=\u201cINSERT INTO Customers (FirstName)"},{"entry":"\u2003\u2003\u2003VALUES (?)\u201d"},{"entry":"\u2003\u2003\u2003DataFile=\u201c\/data\/customers.mdb\u201d>"},{"entry":"\u2003\u2003<InsertParameters>"},{"entry":"\u2003\u2003\u2003<asp:ControlParameter Name=\u201cFirstName\u201d"},{"entry":"\u2003\u2003\u2003ControlId=\u201cFirstName\u201d"},{"entry":"\u2003\u2003\u2003\u2003PropertyName=\u201cText\u201d \/>"},{"entry":"\u2003\u2003<\/InsertParameters>"},{"entry":"\u2003<\/asp:AccessDataSource>"},{"entry":"<\/form>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"A \u201csmart\u201d data-bound control, such as a GridView or DetailsView, is able to dynamically populate update, insert, or delete parameter values without the need for declarative parameters on the DataSource control (see the GridView in the Master-Details scenario above). However, this assumes that the data-bound control either passes parameters in the correct order, or that the order of parameters is irrelevant. While parameter order is not significant for some DataSource controls (e.g. the ObjectDataSource control or the SqlClient provider of SqlDataSource), it does matter in some cases (e.g. the AccessDataSource or the OLEDB provider of SqlDataSource). Parameters may be specified to precisely define the order in which parameters are to be passed to a given DataSource operation. An optional TypeCode may be specified as well, to force the parameter value to be converted to given simple type. In the example below, the AccessDataSource control expects update parameters in the order \u201cemail, password, id\u201d. To ensure that the dynamically populated parameters from DetailsView are passed in order, all parameters are specified in order in the UpdateParameters collection of the AccessDataSource control.",{"@attributes":{"id":"p-0259","num":"0308"},"tables":{"@attributes":{"id":"TABLE-US-00066","num":"00066"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2002<form runat=\u201cserver\u201d>"},{"entry":"\u2003<asp:DetailsView DataSourceId=\u201cMySource\u201d"},{"entry":"\u2003\u2002DataKeyNames=\u201cId\u201d"},{"entry":"\u2003\u2002AutoGenerateRows=\u201cfalse\u201d"},{"entry":"\u2003\u2002AutoGenerateEditButton=\u201ctrue\u201d"},{"entry":"\u2003\u2002runat=\u201cserver\u201d>"},{"entry":"\u2003\u2002<RowFields>"},{"entry":"\u2003\u2003<asp:BoundField HeaderText=\u201cId\u201d DataField=\u201cId\u201d"},{"entry":"\u2003\u2003ReadOnly=\u201ctrue\u201d\/>"},{"entry":"\u2003\u2003<asp:BoundField HeaderText=\u201cEmail\u201d DataField=\u201cEmail\u201d \/>"},{"entry":"\u2003\u2003<asp:BoundField HeaderText=\u201cPassword\u201d DataField=\u201cPwd\u201d \/>"},{"entry":"\u2003\u2002<\/RowFields>"},{"entry":"\u2003<\/asp:DetailsView>"},{"entry":"\u2003<asp:AccessDataSource id=\u201cMySource\u201d runat=\u201cserver\u201d"},{"entry":"\u2003\u2003SelectCommand=\u201cSELECT Id, Email, Pwd FROM Users"},{"entry":"\u2003\u2003WHERE Id =?\u201d"},{"entry":"\u2003\u2003UpdateCommand=\u201cUPDATE Users SET Email = ?, Pwd = ?"},{"entry":"WHERE Id = ?\u201d"},{"entry":"\u2003\u2003DataFile=\u201cdata\/users.mdb\u201d>"},{"entry":"\u2003\u2002<SelectParameters>"},{"entry":"\u2003\u2003<asp:QueryStringParameter Name=\u201cId\u201d QueryStringField=\u201cId\u201d"},{"entry":"DefaultValue=\u201c0\u201d\/>"},{"entry":"\u2003\u2002<\/SelectParameters>"},{"entry":"\u2003\u2002<UpdateParameters>"},{"entry":"\u2003\u2003<asp:Parameter Name=\u201cEmail\u201d\/>"},{"entry":"\u2003\u2003<asp:Parameter Name=\u201cPwd\u201d\/>"},{"entry":"\u2003\u2003<asp:Parameter Name=\u201cId\u201d\/>"},{"entry":"\u2003\u2002<\/UpdateParameters>"},{"entry":"\u2003<\/asp:AccessDataSource>"},{"entry":"\u2002<\/form>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Parameters are reordered according to their declaration in the ParameterCollection for the DataSource control before invoking the Update operation. Note that if a dynamically added parameter is not declared in the Parameter collection, it is simply appended to the end of the parameter list in the order it was received. For example, if (A, B, C, D) is passed to a DataSource control with parameters (C, B), the resulting order is (C, B, A, D).","Some DataSource controls, such as ObjectDataSource and SqlDataSource, support the notion of output parameters, input\/output (reference) parameters, and return values. Parameters support a Direction property for specifying the direction of the parameter. While the actual value of the Parameter object is not modified when marked as output or a return value, the DataSource control makes the output\/retval values available in the event args passed to the DataSource's status event for the particular operation. In the example below, the OnInserted event is handled on the SqlDataSource control to obtain the return value from a stored procedure that inserts a new contact record into a SQL database. The event args to this event also exposes an OutputParameters dictionary containing the output values of any Parameters marked as output or input\/output (there are none in this example).",{"@attributes":{"id":"p-0262","num":"0311"},"tables":{"@attributes":{"id":"TABLE-US-00067","num":"00067"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2002<script runat=\u201cserver\u201d>"},{"entry":"\u2003\u2002void MySource_Inserted (Object sender,"},{"entry":"\u2003\u2002SqlDataSourceStatusEventArgs e) {"},{"entry":"\u2003\u2003\u2002int retval = (int)e.ReturnValue;"},{"entry":"\u2003\u2002}"},{"entry":"\u2002<\/script>"},{"entry":"\u2002<form runat=\u201cserver\u201d>"},{"entry":"\u2003<asp:SqlDataSource id=\u201cMySource\u201d OnInserted=\u201cMySource_Inserted\u201d"},{"entry":"runat=\u201cserver\u201d"},{"entry":"\u2003\u2003ConnectionString=\u201cserver=(local);database="},{"entry":"\u2003\u2003contacts;trusted_connection=yes\u201d"},{"entry":"\u2003\u2003InsertCommand=\u201cAddContact\u201d>"},{"entry":"\u2003\u2003<InsertParameters>"},{"entry":"\u2003\u2003\u2002<asp:Parameter Name=\u201cContactId\u201d Direction=\u201cReturnValue\u201d\/>"},{"entry":"\u2003\u2003<\/InsertParameters>"},{"entry":"\u2003<\/asp:SqlDataSource>"},{"entry":"\u2003<asp:DetailsView DataSourceId=\u201cMySource\u201d Mode=\u201cInsert\u201d ..."},{"entry":"runat=\u201cserver\u201c\/>"},{"entry":"\u2002<\/form>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Specification","In this implementation, DataSource Parameter types are defined as follows:",{"@attributes":{"id":"p-0264","num":"0313"},"tables":{"@attributes":{"id":"TABLE-US-00068","num":"00068"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"namespace System.Web.UI.WebControls"},{"entry":"{"},{"entry":"\u2002public class Parameter : IStateManager"},{"entry":"\u2002{"},{"entry":"\u2003\u2002\/\/ Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2002public String","Name","{ get; set; }"]},{"entry":["\u2003\u2002public TypeCode","Type","{ get; set; }"]},{"entry":["\u2003\u2002public String","DefaultValue","\u2003{ get; set; }"]},{"entry":["\u2003\u2002public bool","TreatEmptyStringAsNull","{ get; set; }"]},{"entry":["\u2003\u2002public ParameterDirection","Direction","{ get; set; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2002\/\/ Methods"},{"entry":"\u2003\u2002protected Parameter Clone (void);"},{"entry":"\u2003\u2002protected Object Evaluate (HttpContext context, Control control);"},{"entry":"\u2003\u2002protected void OnParameterChanged (void);"},{"entry":"\u2003\u2002\/\/ Constructors"},{"entry":"\u2003\u2002public Parameter (void);"},{"entry":"\u2003\u2002public Parameter (String name);"},{"entry":"\u2003\u2002public Parameter (String name, TypeCode type);"},{"entry":"\u2003\u2002protected virtual StateBag ViewState { get; }"},{"entry":"\u2003\u2002protected bool IsTrackingViewState { get; }"},{"entry":"\u2003\u2002protected virtual void TrackViewState (void);"},{"entry":"\u2003\u2002protected virtual void LoadViewState (Object savedState);"},{"entry":"\u2003\u2002protected virtual Object SaveViewState (void);"},{"entry":"\u2003\u2002\/\/ IStateManager Implementation"},{"entry":"\u2003\u2002bool IStateManager.IsTrackingViewState { get; }"},{"entry":"\u2003\u2002void IStateManager.TrackViewState (void);"},{"entry":"\u2003\u2002void IStateManager.LoadViewState (Object savedState);"},{"entry":"\u2003\u2002Object IStateManager.SaveViewState (void);"},{"entry":"\u2002}"},{"entry":"\u2002public class QueryStringParameter : Parameter"},{"entry":"\u2002{"},{"entry":"\u2003\u2002\/\/ Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["\u2003\u2002public String","QueryStringField","{ get; set; }"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2002\/\/ Constructors"},{"entry":"\u2003\u2002public QueryStringParameter (void);"},{"entry":"\u2003\u2002public QueryStringParameter (String name, String queryStringField);"},{"entry":"\u2003\u2002public QueryStringParameter (String name, TypeCode type, String"},{"entry":"queryStringField);"},{"entry":"\u2003\u2002\/\/ Methods"},{"entry":"\u2003\u2002protected override Parameter Clone (void);"},{"entry":"\u2003\u2002protected override Object Evaluate (HttpContext context,"},{"entry":"\u2003\u2002Control control);"},{"entry":"\u2002}"},{"entry":"\u2002public class FormParameter : Parameter"},{"entry":"\u2002{"},{"entry":"\u2003\u2002\/\/ Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["\u2003\u2002public String","FormField","{ get; set; }"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2002\/\/ Constructors"},{"entry":"\u2003\u2002public FormParameter (void);"},{"entry":"\u2003\u2002public FormParameter (String name, String formField);"},{"entry":"\u2003\u2002public FormParameter (String name, TypeCode type,"},{"entry":"\u2003\u2002String formField);"},{"entry":"\u2003\u2002\/\/ Methods"},{"entry":"\u2003\u2002protected override Parameter Clone (void);"},{"entry":"\u2003\u2002protected override Object Evaluate (HttpContext context,"},{"entry":"\u2003\u2002Control control);"},{"entry":"\u2002}"},{"entry":"\u2002public class CookieParameter : Parameter"},{"entry":"\u2002{"},{"entry":"\u2003\u2002\/\/ Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["\u2003\u2002public String","CookieName","{ get; set; }"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2002\/\/ Constructors"},{"entry":"\u2003\u2002public CookieParameter (void);"},{"entry":"\u2003\u2002public CookieParameter (String name, String cookieName);"},{"entry":"\u2003\u2002public CookieParameter (String name, TypeCode type, String"},{"entry":"cookieName);"},{"entry":"\u2003\u2002\/\/ Methods"},{"entry":"\u2003\u2002protected override Object Evaluate (Control control);"},{"entry":"\u2002}"},{"entry":"\u2002public class SessionParameter : Parameter"},{"entry":"\u2002{"},{"entry":"\u2003\u2002\/\/ Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["\u2003\u2002public String","SessionField","{ get; set; }"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2002\/\/ Constructors"},{"entry":"\u2003\u2002public SessionParameter (void);"},{"entry":"\u2003\u2002public SessionParameter (String name, String sessionField);"},{"entry":"\u2003\u2002public SessionParameter (String name, TypeCode type, String"},{"entry":"SessionField);"},{"entry":"\u2003\u2002\/\/ Methods"},{"entry":"\u2003\u2002protected override Parameter Clone (void);"},{"entry":"\u2003\u2002protected override Object Evaluate (HttpContext context,"},{"entry":"\u2003\u2002Control control);"},{"entry":"\u2002}"},{"entry":"\u2002public class ControlParameter : Parameter"},{"entry":"\u2002{"},{"entry":"\u2003\u2002\/\/ Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2002public String","ControlId","{ get; set; }"]},{"entry":["\u2003\u2002public String","PropertyName","\u2003{ get; set; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2002\/\/ Constructors"},{"entry":"\u2003\u2002public ControlParameter (void);"},{"entry":"\u2003\u2002public ControlParameter (String name, String controlID, String"},{"entry":"propertyName);"},{"entry":"\u2003\u2002public ControlParameter (String name, TypeCode type, String"},{"entry":"controlID, String"},{"entry":"\u2003\u2003propertyName);"},{"entry":"\u2003\u2002\/\/ Methods"},{"entry":"\u2003\u2002protected override Parameter Clone (void);"},{"entry":"\u2003\u2002protected override Object Evaluate (HttpContext context,"},{"entry":"\u2003\u2002Control control);"},{"entry":"\u2002}"},{"entry":"\u2002public class ProfileParameter : Parameter"},{"entry":"\u2002{"},{"entry":"\u2003\u2002\/\/ Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["\u2003\u2002public String","PropertyName","{ get; set; }"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2002\/\/ Constructors"},{"entry":"\u2003\u2002public ProfileParameter (void);"},{"entry":"\u2003\u2002public ProfileParameter (String name, String propertyName);"},{"entry":"\u2003\u2002public ProfileParameter (String name, TypeCode type, String"},{"entry":"propertyName);"},{"entry":"\u2003\u2002\/\/ Methods"},{"entry":"\u2003\u2002protected override Parameter Clone (void);"},{"entry":"\u2003\u2002protected override Object Evaluate (HttpContext context,"},{"entry":"\u2003\u2002Control control);"},{"entry":"\u2002}"},{"entry":"\u2002public class ParameterCollection : StateManagedCollection"},{"entry":"\u2002{"},{"entry":"\u2003\u2002\/\/ Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["\u2003\u2002public","Parameter this [int index]","{ get; }"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2002\/\/ Methods"},{"entry":"\u2003\u2002public int Add (Parameter param);"},{"entry":"\u2003\u2002public int Add (String name, String value);"},{"entry":"\u2003\u2002public int Add (String name, TypeCode Type, String value);"},{"entry":"\u2003\u2002public void Remove (Parameter param);"},{"entry":"\u2003\u2002public void RemoveAt (int index);"},{"entry":"\u2003\u2002public void Insert (int index, Parameter param);"},{"entry":"\u2003\u2002public IOrderedDictionary GetValues (Control control);"},{"entry":"\u2003\u2002public void UpdateValues (Control control);"},{"entry":"\u2003\u2002protected override Object CreateKnownType (int index);"},{"entry":"\u2003\u2002protected override Type[ ] GetKnownTypes (void);"},{"entry":"\u2003\u2002protected override void OnClearComplete (void);"},{"entry":"\u2003\u2002protected override void OnInsert (int index, Object value);"},{"entry":"\u2003\u2002protected override void OnInsertComplete (int index, Object value);"},{"entry":"\u2003\u2002protected override void OnRemoveComplete (int index, Object value);"},{"entry":"\u2003\u2002protected override void OnValidate (Object o);"},{"entry":"\u2003\u2002protected override void SetDirtyObject (Object o);"},{"entry":"\u2003\u2002protected virtual void OnParametersChanged(EventArgs e);"},{"entry":"\u2003\u2002\/\/ Events"},{"entry":"\u2003\u2002public event EventHandler ParametersChanged { add; remove; }"},{"entry":"\u2002}"},{"entry":"}"},{"entry":"namespace System.Web.UI {"},{"entry":"\u2002[AttributeUsage(AttributeTargets.Class)]"},{"entry":"\u2002public sealed class ControlValuePropertyAttribute : Attribute"},{"entry":"\u2002{"},{"entry":"\u2003\u2002\/\/ Properties"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2002public String","Name","{ get; }"]},{"entry":["\u2003\u2002public Object","NullValue","{ get; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2003\u2002\/\/Constructors"},{"entry":"\u2003\u2002public ControlValuePropertyAttribute (String name);"},{"entry":"\u2003\u2002public ControlValuePropertyAttribute (String name, Object nullValue);"},{"entry":"\u2003\u2002\/\/ Methods"},{"entry":"\u2003\u2002public override bool Equals (Object obj);"},{"entry":"\u2003\u2002public override int GetHashCode (void);"},{"entry":"\u2002}"},{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0265","num":"0314"},"tables":{"@attributes":{"id":"TABLE-US-00069","num":"00069"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<asp:DataSourceControl ... runat=\u201cserver\u201d>"]},{"entry":[{},"\u2002<Parameters>"]},{"entry":[{},"\u2003<asp:QueryStringParameter"]},{"entry":[{},"\u2003\u2003Name=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003Type=\u201cTypeCode\u201d"]},{"entry":[{},"\u2003\u2003DefaultValue=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003Direction=\u201cSystem.Data.ParameterDirection\u201d"]},{"entry":[{},"\u2003\u2003QueryStringField=\u201cString\u201d"]},{"entry":[{},"\u2003\/>"]},{"entry":[{},"\u2003<asp:FormParameter"]},{"entry":[{},"\u2003\u2003Name=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003Type=\u201cTypeCode\u201d"]},{"entry":[{},"\u2003\u2003DefaultValue=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003Direction=\u201cSystem.Data.ParameterDirection\u201d"]},{"entry":[{},"\u2003\u2003FormField=\u201cString\u201d"]},{"entry":[{},"\u2003\/>"]},{"entry":[{},"\u2003<asp:CookieParameter"]},{"entry":[{},"\u2003\u2003Name=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003Type=\u201cTypeCode\u201d"]},{"entry":[{},"\u2003\u2003DefaultValue=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003Direction=\u201cSystem.Data.ParameterDirection\u201d"]},{"entry":[{},"\u2003\u2003CookieName=\u201cString\u201d"]},{"entry":[{},"\u2003\/>"]},{"entry":[{},"\u2003<asp:SessionParameter"]},{"entry":[{},"\u2003\u2003Name=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003Type=\u201cTypeCode\u201d"]},{"entry":[{},"\u2003\u2003DefaultValue=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003Direction=\u201cSystem.Data.ParameterDirection\u201d"]},{"entry":[{},"\u2003\u2003SessionField=\u201cString\u201d"]},{"entry":[{},"\u2003\/>"]},{"entry":[{},"\u2003<asp:ControlParameter"]},{"entry":[{},"\u2003\u2003Name=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003Type=\u201cTypeCode\u201d"]},{"entry":[{},"\u2003\u2003DefaultValue=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003Direction=\u201cSystem.Data.ParameterDirection\u201d"]},{"entry":[{},"\u2003\u2003ControlId=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003PropertyName=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003TreatEmptyStringAsNull=\u201c[true\\false]\u201d"]},{"entry":[{},"\u2003\/>"]},{"entry":[{},"\u2003<asp:EvalParameter"]},{"entry":[{},"\u2003\u2003Name=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003Type=\u201cTypeCode\u201d"]},{"entry":[{},"\u2003\u2003DefaultValue=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003Direction=\u201cSystem.Data.ParameterDirection\u201d"]},{"entry":[{},"\u2003\u2003Expression=\u201cString\u201d"]},{"entry":[{},"\u2003\/>"]},{"entry":[{},"\u2003<asp:ProfileParameter"]},{"entry":[{},"\u2003\u2003Name=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003Type=\u201cTypeCode\u201d"]},{"entry":[{},"\u2003\u2003DefaultValue=\u201cString\u201d"]},{"entry":[{},"\u2003\u2003Direction=\u201cSystem.Data.ParameterDirection\u201d"]},{"entry":[{},"\u2003\u2003PropertyName=\u201cString\u201d"]},{"entry":[{},"\u2003\/>"]},{"entry":[{},"\u2002<\/Parameters>"]},{"entry":[{},"<\/asp:DataSourceControl>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"The Parameter class is an exemplary common base from which all other Parameter types are derived. The Parameter class also serves as the implementation for static parameters, where the value is specified statically using the DefaultValue property. Each derived Parameter class overrides and implements the protected method Evaluate, which updates and returns the value of the parameter. Each parameter also implements an internal UpdateValue method and ParameterValue property which are used by the ParameterCollection class to retrieve the value for returning from its GetValues method. This ensures that Parameter values are always accessed through their containing ParameterCollection. For derived Parameter types, the DefaultValue property determines the value to use in place of a null value obtained from the parameter source (Cookie, Request, Control, etc).","Parameters share a common Name property, which is the name of the parameter for the particular DataSource operation (for example, this would match a parameter name in the SelectCommand for the SqlDataSource). All Parameters also share a Type property which specifies the type of the parameter value. The OnParameterChanged method can be called by the Parameter whenever the value, name, or type of the parameter changes. This will in turn raise the ParametersChanged event of the parameter's ParameterCollection container, which ultimately raises the DataSource control's OnDataSourceChanged event, causing any data-bound controls to re-bind.","Parameters also share a Direction property, which is used to specify whether the Parameter is used for Input, Output (or ReturnValue), or Both Input and Output. DataSources generally expose output parameters and return values from an event args passed to the DataSource operation's status event. Refer to the Scenarios section of this specification for an example.",{"@attributes":{"id":"p-0269","num":"0318"},"tables":{"@attributes":{"id":"TABLE-US-00070","num":"00070"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Properties"},{"entry":"Name"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public String Name { get; set; }"]},{"entry":["Description","Gets\/sets the name of the parameter."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Type"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public TypeCode Type { get; set; }"]},{"entry":["Description","Gets\/sets the type of the parameter's value."]},{"entry":["Default Value","TypeCode.Object"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"DefaultValue"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public String DefaultValue { get; set; }"]},{"entry":["Description","The default value for the parameter. For a derived"]},{"entry":[{},"parameter type, this value is used in place of the source"]},{"entry":[{},"value (e.g. from a Control property or QueryString\/"]},{"entry":[{},"Session field) when the source value is null."]},{"entry":["Default Value","null"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"TreatEmptyStringAsNull"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public boot TreatEmptyStringAsNull { get; set; }"]},{"entry":["Description","Gets or sets whether String.Empty is converted to null"]},{"entry":[{},"when evaluating the value of the parameter. Note that the"]},{"entry":[{},"conversion from null to DefaultValue happens after this"]},{"entry":[{},"conversion."]},{"entry":["Default Value","true"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Direction"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public ParameterDirection Direction { get; set; }"]},{"entry":["Description","Gets or sets the direction for the parameter, either Input,"]},{"entry":[{},"Output, InputOutput, or ReturnValue. DataSources"]},{"entry":[{},"generally expose output parameters and return values"]},{"entry":[{},"from an event args passed to the DataSource operation's"]},{"entry":[{},"status event."]},{"entry":["Default Value","ParameterDirection.Input"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Methods"},{"entry":"Evaluate"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","protected Object Evaluate (HttpContext context, Control"]},{"entry":[{},"control);"]},{"entry":["Description","Evaluates the parameter and returns the new value. The"]},{"entry":[{},"control parameter is used to access the page's framework."]},{"entry":[{},"This are overidden by a derived class to actually get"]},{"entry":[{},"the value."]},{"entry":["Parameters","control - The control parameter is used to access the"]},{"entry":[{},"page's framework."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"OnParameterChanged"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","protected void OnParameterChanged (void);"]},{"entry":["Description","Raises the ParameterChanged event. This notifies a"]},{"entry":[{},"listener that it should re-evaluate the value."]},{"entry":["Parameters","None"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"System.Web.UI.WebControls.QueryStringParameter"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"The QueryStringParameter class binds the value of a querystring parameter"},{"entry":"to the value of the Parameter object. The QueryStringField property"},{"entry":"matches the name of the querystring field from which the value"},{"entry":"is retrieved. The DefaultValue property will be returned"},{"entry":"whenever the querystring value is unavailable."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Properties"},{"entry":"QueryStringField"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public String QueryStringField { get; set; }"]},{"entry":["Description","The name of the querystring parameter to get the"]},{"entry":[{},"value from."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Methods"},{"entry":"Evaluate"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","protected override Object Evaluate (HttpContext context,"]},{"entry":[{},"Control control);"]},{"entry":["Description","Returns the updated value of the parameter."]},{"entry":["Parameters","control - The control parameter is used to access the"]},{"entry":[{},"page's framework."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"System.Web.UI.WebControls.FormParameter"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"The FormParameter class binds the value of an HTML form field to"},{"entry":"the value of the Parameter object. The FormField property matches"},{"entry":"the name of the form field from which the value is retrieved."},{"entry":"The DefaultValue property will be returned whenever the Form value"},{"entry":"is unavailable."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Properties"},{"entry":"FormField"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public String FormField { get; set; }"]},{"entry":["Description","The name of the form field to get the value from."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Methods"},{"entry":"Evaluate"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","protected override Object Evaluate (HttpContext context,"]},{"entry":[{},"Control control);"]},{"entry":["Description","Returns the updated value of the parameter."]},{"entry":["Parameters","control - The control parameter is used to access the"]},{"entry":[{},"page's framework."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"System.Web.UI.WebControls.CookieParameter"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"The CookieParameter class binds the value of an HttpCookie to the value"},{"entry":"of the Parameter object. The CookieName property matches the name of"},{"entry":"the cookie from which the value is retrieved (only simple-valued cookies"},{"entry":"are supported). The DefaultValue property will be returned whenever the"},{"entry":"cookie value is unavailable."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Properties"},{"entry":"CookieName"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public String CookieName { get; set; }"]},{"entry":["Description","The name of the cookie to get the value from."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Methods"},{"entry":"Evaluate"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","protected override Object Evaluate (HttpContext context,"]},{"entry":[{},"Control control);"]},{"entry":["Description","Returns the updated value of the parameter."]},{"entry":["Parameters","control - The control parameter is used to access the"]},{"entry":[{},"page's framework."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"System.Web.UI.WebControls.SessionParameter"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"The SessionParameter class binds the value of a Session object to the"},{"entry":"value of the Parameter object. The SessionField property matches the"},{"entry":"name of the Session key from which the value is retrieved. The"},{"entry":"DefaultValue property will be returned whenever the Session value"},{"entry":"is unavailable."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Properties"},{"entry":"SessionField"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public String SessionField { get; set; }"]},{"entry":["Description","The name of the session variable to get the value from."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Methods"},{"entry":"Evaluate"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","protected override Object Evaluate (HttpContext context,"]},{"entry":[{},"Control control);"]},{"entry":["Description","Returns the updated value of the parameter."]},{"entry":["Parameters","control - The control parameter is used to access the"]},{"entry":[{},"page's framework."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"System.Web.UI.WebControls.ControlParameter"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"The ControlParameter class binds the value of a Control property to the"},{"entry":"value of the Parameter object. The ControlID property matches the Id"},{"entry":"of the Control whose property is bound to the parameter. The"},{"entry":"PropertyName specifies the property of the control from which the"},{"entry":"actual value is retrieved. The Control whose ID is specified by"},{"entry":"ControlID may optionally define a ControlValuePropertyAttribute,"},{"entry":"which determines the default property name from which to"},{"entry":"retrieve the control's value. This property will be used whenever"},{"entry":"PropertyName is not set explicitly. The following controls define a"},{"entry":"ControlValuePropertyAttribute:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Control Name","Control Value Property Name"]},{"entry":["TextBox, Label","Text"]},{"entry":["ListControl (e.g. DropDownList)","SelectedValue"]},{"entry":["CheckBox","Checked"]},{"entry":["Calendar","SelectedDate"]},{"entry":["DetailsView","DataKey.Value *"]},{"entry":["GridView","SelectedDataKey.Value *"]},{"entry":["TreeView","SelectedNode.Value *"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"ControlValuePropertyAttribute also has a constructor overload for"},{"entry":"specifying the null value of the property. When the property equals"},{"entry":"NullValue, a ControlParameter will treat as null (and logic for converting"},{"entry":"to DefaultValue applies). This logic also gets applied when"},{"entry":"PropertyName is explicitly set by the developer, and not"},{"entry":"inferred from the ControlValuePropertyAttribute."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Properties"},{"entry":"ControlID"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public String ControlID { get; set; }"]},{"entry":["Description","The ID of the control to get the value from."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"PropertyName"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public String PropertyName { get; set; }"]},{"entry":["Description","The name of the control's property to get the value from."]},{"entry":[{},"If not specified, the ControlParameter uses the default"]},{"entry":[{},"property indicated by the ControlValuePropertyAttribute"]},{"entry":[{},"of the control."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Methods"},{"entry":"Evaluate"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","protected override Object Evaluate (HttpContext context,"]},{"entry":[{},"Control control);"]},{"entry":["Description","Returns the updated value of the parameter."]},{"entry":["Parameters","control - The control parameter is used to access the"]},{"entry":[{},"page's framework."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"System.Web.UI.WebControls.EvalParameter"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"The EvalParameter class binds the value of an Eval expression to the value"},{"entry":"of the Parameter object. The Expression property matches an expression"},{"entry":"to evaluate in order to retrieve the value. The DefaultValue property"},{"entry":"will be returned whenever the expression value is unavailable."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Properties"},{"entry":"Expression"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public String Expression { get; set; }"]},{"entry":["Description","The name of the eval expression to get the value from."]},{"entry":[{},"This is any expression that is valid to pass to the"]},{"entry":[{},"DataBinder.Eval( . . . ) method."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Methods"},{"entry":"Evaluate"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","protected override Object Evaluate (HttpContext context,"]},{"entry":[{},"Control control);"]},{"entry":["Description","Returns the updated value of the parameter."]},{"entry":["Parameters","control - The control parameter is used to access the"]},{"entry":[{},"page's framework."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"System.Web.UI.WebControls.ProfileParameter"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"The ProfileParameter class binds the value of a Personalization Profile"},{"entry":"object to the value of the Parameter object. The ParameterName property"},{"entry":"matches the name of the profile property name from which the value is"},{"entry":"retrieved. The DefaultValue property will be returned whenever the"},{"entry":"property value is unavailable."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Properties"},{"entry":"PropertyName"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public String PropertyName { get; set; }"]},{"entry":["Description","The name of the personalization profile property to get"]},{"entry":[{},"the value from."]},{"entry":["Default Value","String.Empty"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Methods"},{"entry":"Evaluate"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","protected override Object Evaluate (HttpContext context,"]},{"entry":[{},"Control control);"]},{"entry":["Description","Returns the updated value of the parameter."]},{"entry":["Parameters","control - The control parameter is used to access the"]},{"entry":[{},"page's framework."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"System.Web.UI.WebControls.ParameterCollection"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"The ParameterCollection class provides a collection type for DataSource"},{"entry":"controls to use to expose parameter collection properties. A collection"},{"entry":"of Parameters usually applies to a single command in the DataSource"},{"entry":"control, such as an insert or update command. A data-bound control"},{"entry":"always accesses Parameter values through the"},{"entry":"ParameterCollection.GetValues method. The ParametersChanged event is"},{"entry":"raised whenever the name, type or value of one of the contained"},{"entry":"parameters changes."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Properties"},{"entry":"this [int index]"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public Parameter this[int index] { get; }"]},{"entry":["Description","Returns the Parameter at a given index."]},{"entry":["Default Value","NA"]},{"entry":"Value Editor"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Methods"},{"entry":"Add"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public int Add (Parameter param);"]},{"entry":["Description","Adds a Parameter to the collection."]},{"entry":["Parameters","param - The parameter object to add to the collection."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Add"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public int Add (String name, String value);"]},{"entry":["Description","Adds a Parameter to the collection with a specified name,"]},{"entry":[{},"type, and default value."]},{"entry":["Parameters","name - The name of the parameter object to add to the"]},{"entry":[{},"collection."]},{"entry":[{},"value - The value of the parameter object to add to the"]},{"entry":[{},"collection."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Add"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public int Add (String name, TypeCode Type, String"]},{"entry":[{},"value);"]},{"entry":["Description","Adds a Parameter to the collection with a specified name,"]},{"entry":[{},"type, and default value."]},{"entry":["Parameters","name - The name of the parameter object to add to the"]},{"entry":[{},"collection."]},{"entry":[{},"type - The type of the parameter object to add to the"]},{"entry":[{},"collection."]},{"entry":[{},"value - The value of the parameter object to add to the"]},{"entry":[{},"collection."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Remove"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public void Remove (Parameter param);"]},{"entry":["Description","Removes a Parameter from the collection."]},{"entry":["Parameters","param - The parameter object to add to the collection."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"RemoveAt"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public void RemoveAt (int index);"]},{"entry":["Description","Removes a Parameter from the collection at a given"]},{"entry":[{},"index."]},{"entry":["Parameters","index - the index at which to remove a parameter."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"GetValues"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public IOrderedDictionary GetValues (Control control);"]},{"entry":["Description","Returns an IOrderedDictionary containing Name\/Value"]},{"entry":[{},"pairs of all the parameters in the collection. Data-bound"]},{"entry":[{},"controls use this method to retrieve parameter values"]},{"entry":[{},"associated with a given command."]},{"entry":["Parameters","control - The control parameter is used to access the"]},{"entry":[{},"page's framework."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"UpdateValues"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public void UpdateValues (Control control);"]},{"entry":["Description","Forces parameters to update their values, to possibly"]},{"entry":[{},"raise a ParametersChanged event."]},{"entry":["Parameters","control - The control parameter is used to access the"]},{"entry":[{},"page's framework."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Insert"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","public void Insert (int index, Parameter param);"]},{"entry":["Description","Inserts a Parameter into the collection."]},{"entry":["Parameters","index - the index at which to insert a parameter."]},{"entry":[{},"param - The parameter object to add to the collection."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Events"},{"entry":"ParametersChanged"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Prototype","private void ParameterCollection_ParametersChanged"]},{"entry":["Handler","(Object sender, EventArgs e);"]},{"entry":["Description","Raised when any of the Parameter objects in the"]},{"entry":[{},"collection change or when the collection itself changes."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In the figures, the left-most digit of a component reference number identifies the particular figure in which the component first appears.",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
