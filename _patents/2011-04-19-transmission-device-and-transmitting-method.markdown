---
title: Transmission device and transmitting method
abstract: A transmission device which capsules and decapsules data of a frame and/or a packet includes a decapsuling circuit, wherein the decapsuling circuit includes a bit de-stuff processor configured to perform bit de-stuffing processing on an input data; a byte de-stuff processor configured to perform byte de-stuffing processing on duplicated data of the input data; a check processor configured to perform frame check sequence (FCS) processing on output from the bit de-stuff processor and the byte de-stuff processor; and a mode determination circuit configured to determine a stuffing mode of an opposite transmission device, based on a code conversion result from the bit de-stuff processor and the byte de-stuff processor and the stuffing mode in which the check processor detects the input data with a normal FCS.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08488630&OS=08488630&RS=08488630
owner: Fujitsu Limited
number: 08488630
owner_city: Kawasaki
owner_country: JP
publication_date: 20110419
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD","BACKGROUND","SUMMARY","DESCRIPTION OF EMBODIMENTS"],"p":["This application is based upon and claims the benefit of priority from the prior Japanese Patent Application No. 2010-105184 filed on Apr. 30, 2010, the entire contents of which are incorporated herein by reference.","The embodiments discussed herein are related to a transmission device and method.",{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 9","b":["1500","1502","1501","1502","1503","1504"]},"The EOS\/POS transmission device , which has an EOS function and a POS function, capsules a frame and\/or a packet by General Framing Procedure (GFP) or Link Access Procedure for SDH (LAPS) to store an Ether Frame or an IP Packet in a payload of SDH\/Sonet. Although capsuling by the GFP has been practiced generally, there are many devices that support simply the LAPS.","The GFP and the LAPS play a role mainly in reporting a start position and an end position of a frame. The GFP performs processing for detecting the start position of the frame based on a Header Error Check (HEC). The end position of the frame may be detected by a Payload Length Indicator (PLI) in the header. In the LAPS, the start position of the frame is recognized by a code \u201c0x7E.\u201d By the code \u201c0x7E\u201d detected after the start position is recognized, the end position of the frame is recognized.","In the LAPS, if the code \u201c0x7E\u201d is included in a payload, the frame end position may not be detected accurately. Therefore, if the code \u201c0x7E\u201d is included in the payload, the code is preferably converted into another code. For example, there is a device that employs a method of inserting 0 (bit stuffing) if 5 bits of 1 are in succession in data of the payload. For example, there is a device that employs a method of converting (byte stuffing) to code into \u201c0x7D, 0x5E\u201d if the code\u201c0x7E\u201d is detected. (0x7E is indicated as \u201c01111110\u201d in binary, so that 6 bits of 1 are in succession, and the code is converted into another code by bit stuffing most of the time if not always). The technique disclosed in Japanese Laid-open Patent Publication No. 09-305509 includes a format converting circuit that converts bit stuffing data (for example, High-Level Data Link Control (HDLC) framing data) data into byte stuffing data as byte-circuit data.","According to an aspect of the invention, a transmission device which capsules and decapsules data of a frame and\/or a packet includes a decapsuling circuit, wherein the decapsuling circuit includes a bit de-stuff processor configured to perform bit de-stuffing processing on an input data; a byte de-stuff processor configured to perform byte de-stuffing processing on duplicated data of the input data; a check processor configured to perform frame check sequence (FCS) processing on output from the bit de-stuff processor and the byte de-stuff processor; and a mode determination circuit configured to determine a stuffing mode of an opposite transmission device, based on a code conversion result from the bit de-stuff processor and the byte de-stuff processor and the stuffing mode in which the check processor detects the input data with a normal FCS.","The object and advantages of the invention will be realized and attained at least by the elements, features, and combinations particularly pointed out in the claims.","It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory and are not restrictive of the invention, as claimed.","Embodiments will be described below in detail with reference to the attached diagrams. The disclosed technique is applicable to, for example, a transmission device that includes an EOS function and a POS function. To perform decapsuling processing of data (a frame and\/or a packet) to be input from an opposite device during negotiation with the opposite device, the input data is duplicated, and bit de-stuffing processing and byte de-stuffing processing are performed in parallel. Frame Check Sequence (FCS) processing is performed on each output. From among the frames and\/or packets in which code conversion is performed by the de-stuffing, a stuffing mode on the side where a normal FCS is detected is determined to be the stuffing mode of the transmission device on the opposite side, and the data is received normally even if the stuffing mode of the opposite device is unknown.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":["100","101","102","100","101","110","111","112","113","113","114","114","115","116","117"],"i":["a ","b","a ","b"]},"The capsuling circuit  includes a start flag inserting circuit , a header inserting circuit , a switch (SW) , a bit stuff processor , a byte stuff processor , a selector (SEL) circuit , an FCS generating circuit , and an end flag inserting circuit . The above-described parts, which are included in the decapsuling circuit  and the capsuling circuit , are operated by an electric circuit, for example.","Regarding a reception signal from the opposite device, after the end of a SDH\/Sonet layer and the end of a Path layer are processed, the reception signal is input into the decapsuling circuit . After a start flag is detected by the start flag detecting circuit , the decapsuling circuit  duplicates an input signal and inputs the input signals to the bit de-stuff processor  and the byte de-stuff processor , respectively. The bit de-stuff processor  and the byte de-stuff processor  may perform processing in parallel. The processed signals are output to the end flag detecting circuits and , respectively in a later stage. In the above-described de-stuff processing, if a code is converted, a \u201cde-stuff report,\u201d which indicates a frame in which the code conversion is performed, is reported to the stuffing mode determination circuit .","The end flag detecting circuits and detect an end flag, respectively. The FCS check processors and calculate an FCS and compare the FCS to an FCS field positioned before the end flag to check a normality of the frame. The FCS check processors and report a result of FCS check as an \u201cFCS result report\u201d to the stuffing mode determination circuit . The FCS check processors and discard the frame in which an FCS error occurs and transfers the frame to the MUX circuit  in a later stage. If the MUX circuit  receives a frame either from the bit stuffing side or the byte stuffing side, the MUX circuit  transfers the frame to the header check circuit  without change. If the MUX circuit  receives the frames from both the bit stuffing side and the byte stuffing side, the MUX circuit  transfers one frame and discards the other frame. The header check circuit  checks the content of the header of the frame. If the frame is normal, the header check circuit  outputs the frame to the Ether\/IP processor (not illustrated). If the frame is not normal, the header check circuit  discards the frame.","Based on the \u201cde-stuff report\u201d and the \u201cFCS result report\u201d from each de-stuffing mode, the stuffing mode determination circuit  determines that the de-stuffing mode in which \u201cde-stuff report\u201d=\u201cde-stuff performance,\u201d and \u201cFCS result report\u201d=\u201cFCS normal\u201d are reported as a stuffing mode of the opposite device. The stuffing mode determination circuit  outputs a determination result of the stuffing mode to the SW  of the capsuling circuit  and the SEL circuit  and then changes the stuffing mode of the transmitting side.","For the frame in which the code conversion is not performed by the de-stuffing, both the de-stuffing methods may be performed to detect the frame that has the normal FCS. In this case, the stuffing mode determination circuit  allows either of the frames to be transmitted and does not perform determination of the de-stuffing mode of the opposite device.","With respect to the frame and\/or packet received from the Ether\/IP processor in a former stage (not illustrated), the capsuling circuit  inserts the start flag by using the start flag inserting circuit  and inserts the LAPS frame header by using the header inserting circuit . The SW  is switched, whether the bit stuff processor  or the byte stuff processor  to which a signal is output, according to a stuffing mode output from the stuffing mode determination circuit . The stuffing according to each mode of the bit stuff processing performed by the bit stuff processor  or the byte stuff processing performed by the byte stuff processor  are performed. The SEL circuit  transfers the output from the selected bit stuff processor  or byte stuff processor  to the FCS generating circuit . The FCS generating circuit  adds the FCS to the frame. The end flag inserting circuit  adds the end flag to the frame. The flags are output to a Path processor and an SDH\/Sonet processor (not illustrated) provided in the opposite device.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 2","FIG. 1"],"b":["101","101","110","101","201","111","112","202","110","111","112"]},"The bit de-stuff processor  performs the bit de-stuff processing (Operation S), and determines, by the bit de-stuff processing, whether the code is converted (Operation S). If the code is converted (Yes in Operation S), the bit de-stuff flag is set to 1 (Operation S). The \u201cbit de-stuff report,\u201d which indicates the frame in which the code conversion is performed, is reported to the stuffing mode determination circuit . If the code conversion is not performed (No in Operation S), the process goes to Operation S. In Operation S, the end flag detecting circuit detects the end flag. If the end flag is not detected (No in Operation S), the process goes back to Operation S, and the above-described processing is repeated. If the end flag is detected (Yes in Operation S), the FCS check processor calculates an FCS (Operation S).","The byte de-stuff processor  performs the byte de-stuff processing (Operation S) and determines, by the byte de-stuff processing, whether the code is converted (Operation S). If the code is converted (Yes in Operation S), the byte de-stuff Flag is set to 1 (Operation S). The \u201cbyte de-stuff report,\u201d which indicates the frame in which the code conversion is performed, is reported to the stuffing mode determination circuit . If the code is not converted (No in Operation S), the process goes to Operation S. In Operation S, the end flag detecting circuit detects the end flag. If the end flag is not detected (No in Operation S), the process goes back to Operation S, and the above-described processing is repeated. If the end flag is detected (Yes in Operation S), the FCS check processor calculates the FCS (Operation S).","The FCS check processors and perform the FCS check for the bit and the byte, respectively. Regarding the FCS check in the byte de-stuff processing, the FCS check processor checks whether the frame is normal by comparing the calculated FCS to the FCS field positioned right before the end flag (Operation S). At this time, the FCS check processor reports an FCS check result as an \u201cFCS result report\u201d to the stuffing mode determination circuit . If the frame after being subjected to the byte de-stuffing is normal (Yes in Operation S), the MUX circuit  transfers the frame to an Ether processor in a later stage and then discards the frame subjected to the bit de-stuffing (Operation S). The stuffing mode determination circuit  determines whether the byte de-stuff Flag is set to 1 (Operation S). If the byte de-stuff Flag is set to 1 (Yes in Operation S), the stuffing mode is determined to be the byte stuffing mode (Operation S). The process goes to Operation S. If the byte de-stuff Flag is not set to 1 (No in Operation S), the process goes to Operation S.","On the other hand, if the frame is not normal with respect to the byte de-stuffing (No in Operation S), the FCS check result of the bit de-stuffing is determined. Based on the FCS check result from the bit de-stuff processing by the FCS check processor , the normality of the frame is checked (Operation S). At this time, the FCS check processor reports the FCS check result as an \u201cFCS result report\u201d to the stuffing mode determination circuit . If the frame after being subjected to the bit de-stuffing is normal (Yes in Operation S), the MUX circuit  transfers the frame to the Ether processor in the later stage and then discards the frame subjected to the byte de-stuffing (Operation S). The stuffing mode determination circuit  determines whether or not the bit de-stuff flag is set to 1 (Operation S). If the bit de-stuff flag is set to 1 (Yes in Operation S), the stuffing mode determination circuit  determines that the mode is the bit stuffing mode (Operation S). The process goes to Operation S. If the bit de-stuff flag is not set to 1 (No in Operation S), the process goes to Operation .","When the result from the determination in Operation S is not normal (No in Operation S), both the results from the FCS check of either the byte de-stuffing or the bit de-stuffing are not normal. In this case, the MUX circuit  discards both the frame subjected to the byte de-stuffing and the frame subjected to the bit de-stuffing (Operation S). The stuffing mode determination circuit  skips the stuffing mode determination (Operation S). The process goes to Operation S.","In Operation S, until the end (Yes in Operation S) of the processing (No in Operation S), the process goes back to Operation S to update the frame, and the above-described processing on a next frame is repeated.","The stuffing mode determination circuit  may perform the stuffing mode determination every time a frame is received. Moreover, after the frame in which the code conversion is once performed by the de-stuffing and which has the normal FCS after the stuffing mode determination is performed after an alarm in a lower layer is cleared, the frame may not be changed regardless of reception of an FCS error if the alarm in the lower layer is not detected.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 3","FIG. 1","FIG. 3","FIG. 1","FIG. 3"],"b":["301","101","302","102","301","302","100"]},"If the alarm in the lower layer is cleared, the mode frame transmitter  transmits, to the opposite device, a negotiation frame that includes information of desired stuffing and a check code that checks the normality of the information.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 4","FIG. 4"],"b":["302","400","301","400","400","401","400"]},"The payload  includes a request stuffing mode  indicating a stuffing mode desired for the opposite device, a support stuffing mode  indicating the stuffing mode supported by the present device, a stuffing mode reset  that desires to reset the stuffing mode determination of the opposite device, a reply code  that replies acceptance or denial to a request from the opposite device, and a check code  that checks the normality of the information. The payload  may include some of the above described components. For example, the check code  may have a simple keyword or a configuration for calculating a Cyclic Redundancy Check (CRC) for the information area.","Examples indicate setting values of the above-described items. (1) request stuffing mode ","0x0001: byte stuffing mode","0x0002: bit stuffing mode","Others: reserve (2) support stuffing mode ","0x0001: byte stuffing mode Only","0x0100: bit stuffing mode Only","0x0101: byte & bit stuffing mode both","Others: reserve (3) stuffing mode reset ","0x5555: mode reset request","Others: nop (4) reply code ","0x0101: accept byte stuffing mode Request","0x0102: accept bit stuffing mode Request","0x0201: deny byte stuffing mode Request","0x0202: deny bit stuffing mode Request","Others: reserve (5) check code ","32 bit CRC check result regarding data range from request stuffing mode  to reply code ","The mode frame transmitter  of the capsuling circuit  illustrated in  changes the stuffing mode after inputting a stuffing mode control signal into the SW  and the SEL circuit  through the stuffing mode determination circuit  when the negotiation frame  is transmitted. Accordingly, from among the negotiation frames , one frame is transmitted in the bit stuffing mode, and the other frame is transmitted in the Byte stuffing mode.","On the other hand, the mode frame detecting circuit  of the decapsuling circuit  determines that the frame is the negotiation frame  based on the check code  of the received frame and the information inside thereof, and reports the information to the stuffing mode determination circuit . The stuffing mode determination circuit  changes the stuffing mode based on the information. The information from the negotiation frame  is processed in preference to the stuffing mode that is determined by the \u201cde-Stuff report\u201d and the \u201cFCS result report.\u201d If the stuffing mode is set by the request stuffing mode , the setting is reported to the mode frame transmitter . The report indicating that the stuffing mode is accepted by the reply code  of the negotiation frame  is sent to the opposite device. If the stuffing mode reset  receives a reset request, the stuffing mode is initialized. The detection of stuffing mode is again performed.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 5","FIG. 3","FIG. 5","FIG. 5","FIG. 2"],"b":["302","201","217","207","217"]},"After the processing in Operation S or Operation S, the FCS check processors and perform the FCS check on the bit and the byte, respectively. For the FCS check on the byte de-Stuff processing side, the FCS check processor compares the calculated FCS to the FCS Field positioned right before the end flag to check the normality of the frame (Operation S). At this time, the FCS check processor reports a result from the FCS check as the \u201cFCS result report\u201d to the stuffing mode determination circuit .","If the frame after being subjected to the byte de-stuffing is normal (Yes in Operation S), the FCS check processor discards the frame subjected to bit de-stuffing (Operation S). The FCS check processor performs determining processing of the negotiation frame  of the frame subjected to the byte de-stuffing (Operation S). If the result of the check code  on the byte stuffing side is normal (Yes in Operation S), a determination is performed to determine whether the request stuffing mode  is set to the byte (Operation S). If the result is the byte (Yes in Operation S), the stuffing mode determination circuit  determines that the mode is the byte stuffing mode (Operation S). The process goes to Operation S.","In Operation S, if the result of the check code  on the byte stuffing side is not normal (No in Operation S), the frame subjected to the byte de-stuffing is transferred to the Ether processor (not illustrated) in the later stage (Operation S).","The process goes to Operation S.","In Operation S, if the request stuffing mode  is not set to the byte (No in Operation S), a determination is performed to determine whether the request stuffing mode  is set to the bit (Operation S). If the request stuffing mode  is set to the bit (Yes in Operation S), the stuffing mode determination circuit  determines that the mode is the bit stuffing mode (Operation S). The process goes to Operation S. If the request stuffing mode  is not set to the bit in Operation S (No in Operation S), the process goes to the processing of Operation S described below.","On the other hand, according to the FCS check in Operation S, if the frame is not normal with respect to the byte de-stuffing (No in Operation S), the FCS check result of the bit de-stuffing is determined. The FCS check processor checks whether the frame is normal based on the FCS check result from the bit de-stuff processing (Operation S). At this time, the FCS check processor reports the result of the FCS check as the \u201cFCS result report\u201d to the stuffing mode determination circuit . If the frame after being subjected to the bit de-stuffing is normal (Yes in Operation S), the MUX circuit  discards the frame subjected to the byte de-stuffing (Operation S). The MUX circuit  performs the determining processing of the negotiation frame  of the frame subjected to the bit de-stuffing (Operation S). If the result of the check code  on the bit stuffing side is normal (Yes in Operation S), the processing following Operation S is performed.","If the result of determination in Operation S is not normal (No in Operation S), the results from the FCS check of the byte de-stuffing and the bit de-stuffing are not normal. In this case, the MUX circuit  discards both the frame subjected to the byte de-stuffing and the frame subjected to the bit de-stuffing (Operation S).","The process goes to Operation S.","If the result of the check code  on the bit stuffing side is not normal (No in Operation S), the frame subjected to the bit de-stuffing is transferred to the Ether processor (not illustrated) (Operation S). The process goes to Operation S.","In Operation S, a determination is performed to determine whether the byte de-stuff flag is set to 1 (Operation S). If yes (Yes in Operation S), the process goes to Operation S described above. If no (No in Operation S), a determination is performed to determine whether the bit de-stuff flag is set to 1 (Operation S). If yes (Yes in Operation S), the process goes to Operation S. If no (No in Operation S), the process goes to Operation S.","In Operation S, the stuffing mode determination circuit  skips the stuffing mode determination (Operation S). The process goes to Operation S.","In Operation S, until the end (Yes in Operation S) of the processing (No in Operation S), the process goes back to Operation S (see ) to update the frame, and the above-described processing on the next frame is repeated.",{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 6","b":["0","1","2","0","1","100","400","601","100","400","402"]},"The transition from the initial state ST to the Byte Stuff selection state ST is made if the transmission device  has the byte de-stuffing function, receives the frame that has the normal FCS from the opposite device, and does not receive the negotiation frame  from the opposite device (Operation S). Alternatively, if the transmission device  receives the negotiation frame  from the opposite device, the transition is preferably made when the request stuffing mode  is set to the Byte Stuff.","The state may be transited to the initial state ST from the bit stuff selection state ST. Furthermore, the transition may be made if the alarm in the lower layer or the negotiation frame  is received and if the stuffing mode reset  is set to mode reset request (Operation S).","The state may be transited to the initial state ST from the byte stuff selection state ST. Furthermore, at this time, the transition is made if the alarm in the lower layer or the negotiation frame  is received and if the stuffing mode reset  is set to mode reset request (Operation S).",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 7","FIG. 3"]},"The negotiation frame  transmitted from the device B on the opposite side is detected by the mode frame detecting circuit . At this time, regarding the device B, the setting of the request stuffing mode  is the bit stuff (Operation S) and the byte stuff (Operation S). The mode frame transmitter  transmits one frame subjected to the bit stuffing and one frame subjected to the byte stuffing to the device A. In this case, the device A changes the stuffing mode from the initial state to a stuffing mode that is applicable (Operation S). In this case, since the request stuffing mode  is set to the bit stuff, the stuffing mode determination circuit  of the device A is changed to the bit stuff state.","The mode frame transmitter  of the device A sets the reply code  of the negotiation frame  to Accept bit stuffing mode request and transmits the frame subjected to the bit stuffing to the device B on the opposite side (Operation S). The mode frame detecting circuit  of the device B receives accept bit stuffing mode request of the reply code  of the negotiation frame , and the stuffing mode determination circuit  changes the stuffing mode from the initial state to the bit stuffing mode (Operation S).","If the frame does not include \u20180x7E\u2019 or \u20180b11111\u2019 in the payload  illustrated in  and is not typically subjected to the stuffing, the result of byte stuffing matches the result of bit stuffing. Therefore, the frames subjected to the byte stuffing and the bit stuffing processing are not typically transmitted separately. However, there is a frame that includes \u20180b11111\u2019 in the LAPS header and the HDLC header most of the time. Therefore, the frame has a function for transmitting by both the byte stuffing and the bit stuffing.",{"@attributes":{"id":"p-0079","num":"0078"},"figref":["FIG. 8","FIG. 3"]},"The device B in the initial state transmits the negotiation frame  to the device A. At this time, as for the device B, the request stuffing mode  is set to the bit stuffing (Operation S) and the byte stuffing (Operation S), and the device B transmits the frame subjected to the bit stuffing and the frame subjected to the byte stuffing to the device A.","However, since the content of the payload  of the negotiation frame  is not normal, the device A does not recognize the negotiation frame . The device A receives the frame by the byte stuffing function.","The device A receives the frame by the byte stuffing function of the device A with respect to the device B (Operation S). The device B recognizes that the mode frame detecting circuit  has the byte stuffing mode and changes the mode from the initial state to the byte stuffing mode (Operation S).","Accordingly, the device B, which has a plurality of stuffing modes, may transmit and receive a frame to and from the conventional device A with no trouble. Since the Ether processor in the later stage of the device A (or the IP processor) discards the negotiation frame  as an error frame, the negotiation frame  does not affect other communication.","As described above, by transmitting and receiving the frame that includes the information desired as a stuffing mode to and from the opposite device, the stuffing mode may be matched between the device and the opposite device. If the normal FCS is detected, by the stuff determination, the stuffing mode may be matched between the devices with the above-described configuration or between the device with the above-described configuration and a conventional device.","The decapsuling circuit  checks the payload  of the frame subjected to the de-stuffing. If the check code  in the payload  is correct, the decapsuling circuit  reads out stuff information (the request stuffing mode ) desired by the opposite device and then reports the information to the capsuling circuit . The capsuling circuit  changes the stuffing mode to the desired stuffing mode. If the payload  does not include the information related to the check code  or the desired stuffing mode, the mode is determined to be the stuffing mode, which is subjected to the bit stuffing or the byte stuffing, with the normal FCS.","According to the information in the received frame, the decapsuling circuit  reports the setting of the stuffing mode of the present device to the opposite device, so that the present device and the opposite device may mutually check mismatching of the stuffing mode. By the function for transmitting the frame that desires initialization of the stuffing mode determination to the opposite device, the stuffing mode of the opposite device may be changed without operating the opposite device or the like when the stuffing mode of the present device is changed.","As described above, according to the disclosed technique, the bit stuff processing and the byte stuff processing on the input data are performed in parallel, and the opposite device may determine that the stuff processing of the normal result from among the FCS results of the stuff processing has the stuffing mode in which the opposite device receives the data. Accordingly, the data may be received normally even if the stuffing mode of the opposite device is unknown. The transmission frame is described in the above-described example. The transmission packet is applicable in the similar way. The above-described transmission device is applicable to a transmission device that performs capsuling\/decapsuling of a frame and\/or a packet by Link Access Procedure for SDH (LAPS) or High-Level Data Link Control (HDLC).","All examples and conditional language recited herein are intended for pedagogical purposes to aid the reader in understanding the invention and the concepts contributed by the inventor to furthering the art, and are to be construed as being without limitation to such specifically recited examples and conditions. Although the embodiment(s) of the present inventions have been described in detail, it should be understood that the various changes, substitutions, and alterations could be made hereto without departing from the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 5","FIG. 3"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
