---
title: Identifying database containers that reference specified data items
abstract: Systems, methods, and computer-readable storage media are disclosed for a computer system determining database containers that include references to one or more specified data items. The computer system may determine, from a plurality of containers in a database, a candidate set of containers, where the database includes a plurality of data items that includes the one or more data items. The computer system, for each of the containers in the candidate set, queries the database to determine whether the container includes a reference to any of the specified one or more data items. The computer system uses results of the querying to determine any containers in the candidate set of containers that include such references. These results may be used, for example, to set storage retention policies.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08095572&OS=08095572&RS=08095572
owner: Symantec Corporation
number: 08095572
owner_city: Mountain View
owner_country: US
publication_date: 20090714
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["1. Technical Field","This disclosure relates generally to data storage systems and, more specifically, to identifying containers in a database that include references to one or more specified data items.","2. Description of the Related Art","Organizations often store large amounts of content that need to be preserved, e.g., emails, documents, web communications, etc. As a result, various backup or archiving systems may be employed to store this content for later accessibility.","Certain of such systems, including SYMANTEC'S ENTERPRISE VAULT, allow a user to specify various archiving policies for a set of backup data. For example, a user might establish a storage retention policy that specifies the length of time for storing a particular set of data. The user may also set different retention policies for different groups of data\u2014e.g., based on the importance of the data. In one instance, an organization might want to store certain important documents for 5 years, while storing lesser important documents for shorter periods such as 6 months.","Some backup or archiving systems have the ability to set retention policies for a group of data items. For example, a user may assign a specific retention policy for a folder that includes a set of email messages. In certain database systems, multiple database containers include references to the same data items. For example, a database for an email program may include a container corresponding to a user's inbox. The inbox may reference a particular email that is also referenced by another database container (e.g., another user-created folder).","In one embodiment, a method for determining database containers that include references to a first data item is disclosed. The method includes a computer system determining, from a plurality of containers in a database, a candidate set of containers, where the database includes a plurality of data items that includes the first data item. Each of the plurality of data items is stored in a respective one of a plurality of records of the database, where each of the containers in the candidate set of containers includes one or more references to data items in the plurality of data items. The database is structured such that a record within the database that includes a data item does not indicate which of the plurality of containers includes a reference to that data item. The method further includes, for each of the containers in the candidate set, the computer system querying the database to determine whether the container includes a reference to the first data item. The method further includes the computer system using results of the querying to determine any containers in the candidate set of containers that include a reference to the first data item.","In some embodiments, the method further comprises backing up the database to a backup storage system, where the backing up includes setting a storage retention policy for the first data item. The storage retention policy is based at least in part on retention information associated with one or more containers in the candidate set of containers determined to include a reference to the first data item.","In some embodiments, each of the one or more containers in the candidate set of containers determined to include a reference to the first data item has an associated storage retention period. The storage retention policy for the first data item is set to be the longest of the associated storage retention periods.","In some embodiments, determining the candidate set of containers includes querying the database to return an outline for the database, causing the outline to be converted into a text file that specifies the types of containers within the database, and parsing the text file to determine containers specified by the outline that are folders or views.","In some embodiments, determining the candidate set of containers includes determining a preliminary set of containers accessible via a graphical user interface associated with the database, and then determining the candidate set of containers by determining containers within the preliminary set that are folders or views.","In some embodiments, the candidate set of containers includes a first container that is a folder, where the folder includes references to one or more data items associated with the folder by a user of the database.","In some embodiments, the candidate set of containers includes a first container that is a view, where the view includes references to one or more data items that satisfy a predetermined set of criteria specified by program instructions associated with the database.","In some embodiments, the database corresponds to an email program, and the first container includes references to email messages sent by the email program.","In some embodiments, the querying includes, for a given container in the candidate set of containers, storing each data item referenced by the given container in a hash table, and then accessing the hash table to determine whether the given container includes a reference to the first data item.","In one embodiment, an article of manufacture is disclosed that includes a computer-readable medium having stored thereon program instructions that, if executed by a computer system, cause the computer system to perform a method. The method includes retrieving an outline for a database, where the outline includes information specifying containers within the database. Each of a plurality of the specified containers includes a reference to one or more data items within the database. The method further includes using the outline to determine a candidate set of containers. The method further includes for each container in the candidate set of containers, accessing a corresponding record in the database to determine whether that container includes a reference to a specified first data item in the database. The method further includes using the accessing to create a list of containers in the candidate set of containers that include a reference to the specified first data item.","In some embodiments, the method further includes backing up the database, where the backing up includes assigning a storage retention policy to a backed up copy of first data item. The storage retention policy for the first data item is based at least in part, on retention policy information corresponding to one or more containers specified in the created list.","In some embodiments, containers in the candidate set of containers are either folders or views.","In some embodiments, the data items within the database include email messages for an email program. The database does not include an application programming interface (API) that permits a user to specify a particular data item within the database and obtain a list of any containers in the database that include a reference to the particular data item.","In some embodiments, containers in the candidate set of containers are created by a user via a graphical user interface associated with the database.","In some embodiments, the method further comprises storing up a copy of the first data item, where the storing includes assigning a storage policy to the copy of first data item, where the storage policy is based, at least in part, on storage policy information corresponding to one or more containers specified in the created list.","In one embodiment, a computer system is disclosed that includes one or more processors and a memory. The memory has stored therein program instructions executable by the computer system to determine a candidate set of containers within a database, where each container in the candidate set of containers includes a reference to one or more data items in the database. Each container within the candidate set of containers is user-accessible via a graphical user interface for the database. The program instructions are further executable to determine one or more of the candidate set of containers that include a reference to a specified first data item within the database. The program instructions are further executable to backup the database to a backup storage system, including setting a retention policy for the first data item that is based on retention information associated within one or more containers within the candidate set of containers that include a reference to the specified first data item.","In some embodiments, the program instructions are executable by the computer system to determine the candidate set of containers are executable to parse a text file returned by the database to determine containers within the database that are folders or views.","In some embodiments, the retention policy for the first data item is set to the longest retention policy associated with any of the one or more containers within the candidate set of containers that include a reference to the specified first data item.","In some embodiments, the program instructions are executable by the computer system to determine the one or more of the candidate set of containers that include a reference to a specified first data item are executable, for a given container in the candidate set of containers, to store an indication of each of the data items referenced by the given container in a hash table and then to access the hash table to determine whether the given container includes a reference to the first data item.","In some embodiments, the first data item is an email message, and the database is structured such that a record in the database that includes the first data item does not specify any containers within the database that include a reference to the first data item.","This specification includes references to \u201cone embodiment\u201d or \u201can embodiment.\u201d The appearances of the phrases \u201cin one embodiment\u201d or \u201cin an embodiment\u201d do not necessarily refer to the same embodiment. Particular features, structures, or characteristics may be combined in any suitable manner consistent with this disclosure.","Terminology. The following paragraphs provide definitions and\/or context for terms found in this disclosure (including the appended claims):","\u201cComprising.\u201d This term is open-ended. As used in the appended claims, this term does not foreclose additional structure or steps. Consider a claim that recites: \u201cAn apparatus comprising one or more processor units . . . \u201d Such a claim does not foreclose the apparatus from including additional components (e.g., a network interface unit, graphics circuitry, etc.).","\u201cComputer System.\u201d This term has its ordinary and accepted meaning in the art, and includes one or more computing devices operating together and any software stored thereon. A computing device includes one or more processor units and a memory subsystem. A memory subsystem may store program instructions executable by the one or more processor units.","\u201cClient system.\u201d This term has its ordinary and accepted meaning in the art, which includes a computer system that requests services, data, etc. from a server system.","\u201cDatabase.\u201d This term has its ordinary and accepted meaning in the art, which includes a collection of records or data stored on a computer system.","\u201cContainer.\u201d This term refers broadly to a structure (e.g., a record or entry in a database) that includes references to a collection of data items. As described herein, a \u201ccontainer\u201d may be a folder or a view.","\u201cFolder.\u201d As used herein, this term refers to a container that includes references to data items, where the association between the container and the data items therein is manually specified by a user (e.g., of a database that includes the container). For example, a user may specify an association between a data item and a particular container by moving or copying an item into the container.","\u201cView.\u201d This term refers to a container that includes references to data items that satisfy a predetermined set of selection criteria. In the context of an email program, a \u201cSent Items\u201d container would be an example of a view, as inclusion in this container is based on predetermined criteria specified by the email program (i.e., place an item in the \u201cSent Items\u201d container if the item is sent by the email program). Another example of a view would be a container that includes data items that have been placed into the container as the result of a rule specified by a user (e.g., move data items with a specific text string into a particular container), etc.","\u201cReference.\u201d This term refers to information within a container that is indicative of some data item, e.g., a data item in a record within a database that includes the container to a particular item. In one embodiment, a reference may be a link or pointer. A container may include references for multiple data items, where each reference points to a location of a respective data item in a database.","\u201cRecord.\u201d This term refers broadly to a data entry within a database. Records, for example, may store information related to specific data items (e.g., an email), containers (e.g., a folder), etc.","\u201cOutline.\u201d This term refers broadly to information specifying various containers within an information store such as a database.","\u201cRetention policy.\u201d This term refers broadly to a type of backup, archiving, or storage policy that indicates how data should be stored (e.g., a length of time that data should be retained in a backup system).","Turning now to , one embodiment of a system  for backing up, storing, and\/or archiving information is depicted. (As used herein, the terms \u201carchive\u201d and \u201cbackup\u201d are used interchangeably, although the terms have slightly different connotations.) The present disclosure describes various embodiments of an archival management system (or backup management system) that is included within such a system. As will be described below, embodiments of the archival management system may be used to determine database containers that include references to one or more specified data items. In various embodiments, an archival management system may use this information to set archival policies for a given data item that is referenced by multiple containers. For example, when different archiving policies are used for different containers and these containers include a common data item, the archiving policies applied to the common data item may be in conflict. Embodiments of the archival management system described below may identify database containers that include references to a given data item and then take one or more actions based on this information\u2014for example, setting a storage retention policy for a copy of the given data item that is based on the different policies of the various database containers that include the given data item. As described below, such techniques are particularly advantageous in situations in which the given item itself does not include information specifying any containers that include a reference to the given data item.","As shown in , system  includes servers ()-(N), archival management system (AMS) , and storage . Servers  are coupled to AMS  via interconnect . AMS  is coupled to storage  via interconnect . In one embodiment, a client system  is coupled to one of the servers  via an interconnect . In some embodiments, an administrator system  may be coupled to AMS  via an interconnect . In one embodiment, AMS  is a separate system from servers . In other embodiments, AMS  may be located within one of servers . In some embodiments, storage  may also be located within AMS .","In one embodiment, servers  are computer systems that provide various services to one or more client systems (e.g., client system ). For example, servers  may receive information  from external sources that is associated with email, web content, or other types of data. In some embodiments, servers  store information  in one or more databases. In various embodiments, servers  may implement various systems such as an email server system, a document storage system, a web hosting system, etc. Servers  are described in more detail below in conjunction with .","In one embodiment, AMS  is a system that is configured to backup, archive, and\/or store information that is located on servers . For example, AMS  may retrieve information stored in the databases of servers  and provide this information to storage . AMS  may also be configured to retrieve information from storage  and provide it to requesting servers , client system , and\/or administrator system . In some embodiments, AMS  may be implemented using a single computer system such as described in . In other embodiments, AMS  may be implemented using a cloud-computing environment, consisting of multiple servers functioning in parallel. As will be described below, AMS , in one embodiment, is configured to determine database containers that include references to a specified data item.","In one embodiment, administrator system  is a computer system that is configured to interface with AMS . Administrator system  may allow a user to manage storage operations performed by AMS . For example, a user of administrator system  may instruct AMS  to backup particular data items stored on servers . In one embodiment, a user may further instruct AMS  to set various storage policies for specific containers or data items. Administrator system  may also serve as an interface for accessing content stored in storage . An embodiment of administrator system  is described below in conjunction with .","In one embodiment, client system  is a computer system that interacts with one or more servers . For example, client system  may utilize various services provided by servers  such as email services, file storage services, web hosting services, etc. As a result, client system  may also execute various applications that interact with software executing on servers . For example, in one embodiment described below, client system  executes an email client such as the LOTUS NOTES client from IBM. In some embodiments, client system  may also implement any of the various features supported by administrator system . An embodiment of a system for implementing client system  is described below in conjunction with .","In one embodiment, storage  is a system (e.g., backup system, archival system) that stores information collected from servers . For example, storage  may include emails, documents, web content, or other important information. Storage  may also store information related to the structure of the databases within servers . For example, data items may be organized into a hierarchy of containers within a database on server . Storage  may include information that identifies the containers and the particular data items that are referenced by the containers. Storage  may employ any of a variety of storage systems and techniques. In one embodiment, storage  is implemented using one or more storages devices. In some embodiments, storage  may be implemented using multiple storage servers. One embodiment of a storage system for implementing storage  is described in greater detail below in conjunction with .","Turning now to , one embodiment of a server  is depicted. As shown, server  includes a database  and an application programming interface (API) block . In one embodiment, database  stores records associated with containers and data items. This information may include any of a variety of content collected by servers . API block  may include various APIs for interacting with database . For example, in various embodiments, various APIs may enable a user (e.g., at a server , client system , AMS , or administrator system ) to access content stored in database , collect information about database , etc.","In one embodiment, API block  includes an API that generates an outline of database . In one embodiment, an outline is a list of containers that are stored within database . The outline may also include information that identifies various properties of each container. For example, in some embodiments, an outline may list the names of each container within database  (e.g., the container \u201cinbox\u201d) and also indicate the type of each container such as a folder or a view. Database  is described in more detail below in conjunction with .","In one embodiment, API block  does not include an application programming interface (API) that permits a user to specify a particular data item within the database and obtain a list of any containers in the database that include a reference to the particular data item. As described below in conjunction with , embodiments of AMS , however, may permit such features even in the absence of an API of database  that has such functionality.","Turning now to , a block diagram of one embodiment of a computer system  used to implement AMS  is depicted. Computer system  includes a bus  which interconnects major subsystems of computer system , such as a central processor , a system memory  (typically RAM, but which may also include ROM, flash RAM, or the like), an input\/output controller , an external audio device, such as a speaker system  via an audio output interface , an external device, such as a display screen  via display adapter , serial ports  and , a keyboard  (interfaced with a keyboard controller ), a storage interface , a floppy disk drive  operative to receive a floppy disk, a host bus adapter (HBA) interface card A operative to connect with a Fibre Channel network , a host bus adapter (HBA) interface card B operative to connect to a SCSI bus , and an optical disk drive  operative to receive an optical disk. Also included are a mouse  (or other point-and-click device, coupled to bus  via serial port ), a modem  (coupled to bus  via serial port ), and a network interface  (coupled directly to bus ).","Bus  allows data communication between central processor  and system memory , which may include read-only memory (ROM) or flash memory (neither shown), and random access memory (RAM) (not shown), as previously noted. The RAM is generally the main memory into which the operating system and application programs are loaded. The ROM or flash memory can contain, among other code, the Basic Input-Output system (BIOS) which controls basic hardware operation such as the interaction with peripheral components. Applications resident with computer system  are generally stored on and accessed via a computer readable medium, such as a hard disk drive (e.g., fixed disk ), an optical drive (e.g., optical drive ), a floppy disk unit , or other storage medium. Additionally, applications can be in the form of electronic signals modulated in accordance with the application and data communication technology when accessed via network modem  or interface . System memory  may comprise program instructions (such as archival mechanisms ) to implement various techniques described below.","Storage interface , as with the other storage interfaces of computer system , can connect to a standard computer readable medium for storage and\/or retrieval of information, such as a fixed disk drive . Fixed disk drive  may be a part of computer system  or may be separate and accessed through other interface systems. Modem  may provide a direct connection to a remote server via a telephone link or to the Internet via an internet service provider (ISP). Network interface  may provide a direct connection to a remote server via a direct network link to the Internet via a POP (point of presence). Network interface  may provide such connection using wireless techniques, including digital cellular telephone connection, Cellular Digital Packet Data (CDPD) connection, digital satellite data connection or the like.","Many other devices or subsystems (not shown) may be connected in a similar manner (e.g., document scanners, digital cameras and so on). Conversely, all of the devices shown in  need not be present to practice the present disclosure. The devices and subsystems can be interconnected in different ways from that shown in . The operation of a computer system such as that shown in  is readily known in the art and is not discussed in detail in this application. Code to implement the present disclosure can be stored in computer-readable storage media such as one or more of system memory , fixed disk , optical disk, or floppy disk. The operating system provided on computer system  may be MS-DOS\u00ae, MS-WINDOWS\u00ae, OS\/2\u00ae, UNIX\u00ae, Linux\u00ae, or another known or suitable operating system.","Moreover, regarding any signals described herein, those skilled in the art will recognize that a signal can be directly transmitted from a first block to a second block, or a signal can be modified (e.g., amplified, attenuated, delayed, latched, buffered, inverted, filtered, or otherwise modified) between the blocks. Although the signals of the above described embodiment are characterized as transmitted from one block to the next, other embodiments of the present disclosure may include modified signals in place of such directly transmitted signals as long as the informational and\/or functional aspect of the signal is transmitted between blocks. To some extent, a signal input at a second block can be conceptualized as a second signal derived from a first signal output from a first block due to physical limitations of the circuitry involved (e.g., there will inevitably be some attenuation and delay). Therefore, as used herein, a second signal derived from a first signal includes the first signal or any modifications to the first signal, whether due to circuit limitations or due to passage through other circuit elements which do not change the informational and\/or final functional aspect of the first signal.","Referring to , one embodiment of client system  for implementing client system  and\/or administrator system  is depicted. As shown, a client system  typically includes one or more processing units (CPUs) , one or more network or other communications interfaces , memory , and one or more communication buses  for interconnecting these components. The client system  may include a user interface , for instance a display  and a keyboard .","Memory  may include high speed random access memory and may also include non-volatile memory, such as one or more magnetic or optical storage disks. Memory  may include mass storage that is remotely located from CPUs . Memory  may store the following elements, or a subset or superset of such elements: an operating system  that includes procedures for handling various basic system services and for performing hardware dependent tasks; a network communication module (or instructions)  that is used for connecting the client system  to other computers via the one or more communications interfaces  (wired or wireless), such as the Internet, other wide area networks, local area networks, metropolitan area networks, and so on; client applications  for interacting with server ; an administration application  for interacting with AMS ; and client storage .",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 5","b":["500","130","540","540","300","540","560","1","540","560","1","540","540","570","570","570","580","1","540","540","510","520","530","550","590","570","500"]},"Turning now to , one embodiment of database  is depicted. As shown, database  includes a plurality of records  for storing information related to data items A-D and containers A-B. In the illustrated embodiment, container A includes references to data items C and D. Container B includes references to data items A, B, and C. This structure allows allow multiple containers in database  to reference a single copy of a data item, thus saving space. For example, even though containers A and B include references to data item C, database  need only store a single record  for data item C.","In some embodiments, database  may utilize a structure in which none of records  for data items  include references to the records  for the containers  that include references to those data items. For example, in an embodiment in which database  has such a structure, data item A does not include a reference to container B. In some embodiments, using this structure may be beneficial for several reasons. First, it may allow a user to add a large number of documents to a folder, and only have to update one database record (the folder), rather than updating each document. Second, if a user changes a view selection formula, and the contents of the view changes, the user does not need to update any of the documents that now appear in (or no longer appear in) the view. Third, enforcing consistency of references is no longer necessary. In other words, utilizing a different type of structure might require a user to make sure that each time a container includes a reference to a document, that the document also includes a reference to that container. (Otherwise the references might be inconsistent.)","Turning now to , a block diagram of various modules within memory  for determining database containers that include references to a given data item is depicted. As shown, memory  includes a container determination module , database querying module , and a results processing module . In various embodiments, more or fewer modules may be used. In some embodiments, various modules may be implemented in hardware and\/or software. For example, modules - may include program instructions that are executed by AMS  or may be implemented by logic within AMS .","In one embodiment, container determination module  determines a set of candidate containers that may include a specified data item (e.g., some data item specified by a user or by a storage program). For example, in one embodiment, module  processes database information  received from a server  to identify likely candidates. In one embodiment, information  may include an outline or a list of database containers. In some embodiments, module  includes an outline processing module  that retrieves an outline of a database from server  and determines candidate containers based on the outline.","In one embodiment, database querying module  queries the database for container information  associated with each of the candidate containers determined by module  and then determines whether each candidate container includes a reference to the specified data item. Information  may be information indicative of all of the entries referenced by a particular container, for example. In one embodiment, module  may analyze a single candidate container at a time. In other embodiments, module  may analyze multiple containers in parallel. In some embodiments, module  includes a container processing module  that generates a hash table from the contents of a container and then searches the generated hash table for a reference to a specified data item.","In one embodiment, results processing module  uses the results of querying performed by module  to determine containers in the candidate set of containers that include a reference to the specified data item. In some embodiments, module  includes a retention policy setting module  that sets storage retention policy information  for a copy of the specified data item, where the policy information  is based at least in part on retention information associated with the containers determined to include a reference to the data item (e.g., where a specified data item is associated with three containers in a database, policy information  is set to the longest retention period associated with the three containers).","The operation of modules - is described in greater detail in conjunction with  presented below.","Turning now to , one embodiment of a method  for determining database containers that include references to a specified data item is depicted. In one embodiment, AMS  performs method  after receiving a request from a user (e.g., of client system  or administrator system ) or a storage program for a list of containers that include a specified data item. In some embodiments, AMS  may perform multiple instantiations of method  in parallel for a plurality of specified data items. As shown, method  includes steps , , and  (shown on the left with solid lines). In some embodiments, steps - may be performed using one or more of the substeps , , , , , , and  (shown on the right with dotted lines).","In step , AMS  (e.g., using module ) determines a set of candidate containers from the containers stored in database . In one embodiment, AMS  (e.g., using module ) determines the set of candidate containers by retrieving an outline of database  and using the outline to determine the candidate set of containers. As noted above, an outline may list each of the containers stored in a database (e.g., database ). In some embodiments, the outline may also indicate one or more respective properties of each container. Substeps  and , described below, are one embodiment of a method that identifies containers as candidate containers based on their respective properties listed in the outline. In other embodiments, AMS  may use other techniques for determining a set of candidate containers.","In step , AMS  (e.g., using module ) determines whether each candidate container includes a reference to the specified data item. In one embodiment, AMS  queries database  (e.g., using API block ) to determine whether each of the candidate containers includes a reference to the specified data item. In some embodiments, AMS  accesses a corresponding record in the database, for each of the candidate containers, to determine whether that container includes a reference to a specified data item in the database. In various embodiments, AMS  (e.g., using module ) may determine whether a particular container includes a reference to the specified data item by searching a hash table generated from the contents of the container. Substeps , , and , described below, are one embodiment of a method that uses hash tables in this manner.","In step , AMS  (e.g., using module ) identifies containers that include a specified data item. In one embodiment, AMS  provides a list of the identified containers to client system , administrator system , storage program, etc. In some embodiments, AMS  may perform one or more storage operations associated with the identified containers. For example, in one embodiment, AMS  (e.g., using module ) may set storage policies for a copy of the specified data item based on storage policies of each container that includes a reference to the specified data item. Substeps  and , described below, are one embodiment of a method that sets storage retention policies based on containers that have been determined to include a reference to the a given data item.","Substeps  and  are usable, in one embodiment of method , to determine a set of candidate containers using an outline during step . In step , AMS  (e.g., using block ) provides a request for an outline of database  to server . In one embodiment, this request may be directed to an API (e.g., within API block ) that converts the outline to a corresponding text file. In step , AMS  (e.g., using block ) parses the text file of the outline to identify containers that satisfy candidate criteria. For example, in some embodiments, the determined set of candidate containers may include containers that are accessible via a graphical user interface (e.g., of client system  or administrator system ) associated with database . In some embodiments, the determined set of candidates may include either folders or views that have been created by a user (e.g., using a GUI). In various embodiments, AMS  may determine a preliminary set of containers that are accessible via a graphical user interface associated with database , and then determine the candidate set of containers by determining containers within the preliminary set that are folders or views. An example of one embodiment of an outline and corresponding text file are described below in conjunction with .","Substeps , , and  are usable, in one embodiment of method , to use hash tables to determine whether a given container includes a reference to a specified data item. In some embodiments, substeps , ,  may be performed for each of the candidate containers determined in step . In step , AMS  (e.g., using module ) loads a container from database  and its contents into memory. In one embodiment, AMS  retrieves the container from database  using an API in API . In step , AMS  generates a hash table of the container. In one embodiment, the generated hash table includes an entry corresponding to each of the data items referenced by the given container. For example, the entries within the hash table may include record IDs or hashes associated with each data item. In step , AMS  searches the hash table for the specified data item. In one embodiment, AMS  accesses the hash table using a note identifier of the data item as a key to determine whether an indication of the specified data item is present. In various embodiments, substeps , , and  may use any other types of data structure that represents a set of items and that allows testing of whether a given item exists within the set\u2014e.g., search trees, lists, sorted lists, Bloom filters, etc.","Substeps  and  are usable, in one embodiment of method , to set storage retention policies based on containers that have been determined to include a reference to the specified data item. In step , AMS  determines the retention policies of each container that includes a reference to the specified data item. For example, a retention period for one folder might be 7 years, while a retention period for another folder might be 7 months. In step , AMS  sets a retention policy for a copy of the specified data item based on a combination of the retention policies of one or more of the containers. For example, in one embodiment, the retention policy for a data item is the longest of the determined retention periods of each container. Thus, applying the example above, a copy of a data item included in both containers would have a retention period of 7 years.","Turning now to , an example of one embodiment of an outline  is presented. In one embodiment, outline  is the NotesMailOutline of IBM's LOTUS NOTES email program. As shown, outline  includes upper, middle, and lower portions , , and , respectively. The upper portion  displays links to standard mailbox folders\/views such as the \u201cInbox\u201d container, \u201cSent\u201d container, \u201cJunk\u201d mail container, etc. The middle portion  shows any user created views. The lower portion  shows a list of various user created folders such as \u201cLocation Test(1),\u201d \u201cRestored Items,\u201d etc.","As noted above, AMS , in step , may retrieve a text file that represents the outline shown in . In one embodiment, AMS  retrieves this text file by locating the outline record using the NIFFindDesignNote( ) API function supported by LOTUS NOTES in which a call to NIFFindDesignNote( ) takes the name of the outline (NotesMailOutlineH), and returns the unique ID (noteID) of the outline record. AMS  may then convert the outline to XML, using the DXLExportNote( ) API function in which a call to DXLExportNote( ) takes the noteID of the record to export, and outputs an XML representation of the note.","Turning now to , an example of a text file  representative of an outline is shown. In the illustrated embodiment, text file  includes XML language. As shown, text file  includes a list of entries A-D, where each entry  corresponds to a visible container (i.e., accessible to a user via a GUI) stored in a database. For example, entry A corresponds to a user's inbox within a mail database. As shown, entry A includes a type field of \u201cnamedelementlink.\u201d In addition, entry A includes a named element link field that indicates that the container type is a \u201cfolder\u201d and that the name of the container is \u201c$Inbox.\u201d Entry A also indicates the container is not displayed in the \u201cfolders\u201d section (i.e., portion ) because the name \u201c($Inbox)\u201d is included within brackets. (In LOTUS NOTES, a particular folder or view may be designated as a system container (i.e., a container that is not created by a user) if its name is included with brackets\u2014e.g., \u201c($Inbox)\u201d. Generally, system folders are not included within the \u201cfolders\u201d section.\u201d) Other entries  B-D may list similar properties.","As noted above, AMS , in step , may parse the text file to identify containers that satisfy candidate criteria. For example, in one embodiment, AMS  parses the text file looking for containers that are folders or views by using an XPath query to locate all <outlineentry> elements where type=\u201cnamedelementlink\u201d and where the child <namedelementlink> element has a type of \u201cfolder\u201d or \u201cview.\u201d In some embodiments, the XPath query may take the following form:\n\n","In one embodiment, once the set of candidate containers has been determined in step , AMS  determines whether each candidate container includes a reference to the specified data item in step . In one embodiment, AMS  may read the contents of a folder by using the NSFFolderGetIDTable( ) API function in which a call to NSFFolderGetIDTable( ) takes the noteID of a folder record, and then returns the noteIDs of all the notes that exist within the folder. AMS  may read the contents of a view by using the NIFOpenCollection( ) API function to open the view and the NIFReadEntries( ) API function to obtain of the noteIDs of all the notes that appear in the view. Once the contents of a folder or view have been obtained, AMS  can determine whether a container includes a reference to a given data item. In some embodiments, after AMS  has analyzed each of the candidate containers using this method, AMS  may then create a list of each of the containers that include a specified data item as in step  described above.","Various embodiments described above refer to a system  having an archival management system  that determines database containers that include references to a specified data item. Although AMS  has been described within the content of backup archival and other storage systems, embodiments of the present disclosure may also be applicable to other systems that need to determine containers that include references to a specified data item. For example, in one particular embodiment, an email client may implement an API that allows a user to specify an email and then identify any folders are views that include that email. Accordingly, embodiments of the present disclosure are not solely applicable to backup and archive devices but rather any devices that access information in containers.","Although specific embodiments have been described above, these embodiments are not intended to limit the scope of the present disclosure, even where only a single embodiment is described with respect to a particular feature. Examples of features provided in the disclosure are intended to be illustrative rather than restrictive unless stated otherwise. The above description is intended to cover such alternatives, modifications, and equivalents as would be apparent to a person skilled in the art having the benefit of this disclosure.","The scope of the present disclosure includes any feature or combination of features disclosed herein (either explicitly or implicitly), or any generalization thereof, whether or not it mitigates any or all of the problems addressed herein. Accordingly, new claims may be formulated during prosecution of this application (or an application claiming priority thereto) to any such combination of features. In particular, with reference to the appended claims, features from dependent claims may be combined with those of the independent claims and features from respective independent claims may be combined in any appropriate manner and not merely in the specific combinations enumerated in the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 9A"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 9B","FIG. 9A"]}]},"DETDESC":[{},{}]}
