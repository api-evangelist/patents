---
title: Method and apparatus for dynamic host operating system firewall configuration
abstract: A method and apparatus for dynamic host operating system firewall configuration provides plural monitoring processes to monitor the firewall configuration of a host operating system and guest operating systems. When any firewall configuration change is detected by a monitor in a monitored guest operating system, an appropriate corresponding firewall change is made by the monitor to the host operating system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09237127&OS=09237127&RS=09237127
owner: AirMagnet, Inc.
number: 09237127
owner_city: Santa Clara
owner_country: US
publication_date: 20110512
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["This invention relates to networking, and more particularly to monitoring of guest operating systems in a virtualized system.","In a computer virtualization framework where there is a host operating system that contains one or more guest operating systems running, a hypervisor provides a virtual operating platform for the guest operating systems, managing their execution. In such an environment, changes to firewall settings in a guest operating system require reconfiguration of firewall and network address translation (NAT) settings in the host operating system firewall. Heretofore, these reconfigurations must be done manually, which is undesirable for many reasons, including time required, possibility of human errors in making the changes, and the like.","An object of the invention is to provide a method and apparatus for dynamic configuration of a host operating system firewall when guest operating system settings are modified.","Accordingly, it is another object of the present invention to provide an improved system for dynamically providing host operating system firewall and NAT setting reconfiguration when guest operating system settings are modified.","The subject matter of the present invention is particularly pointed out and distinctly claimed in the concluding portion of this specification. However, both the organization and method of operation, together with further advantages and objects thereof, may best be understood by reference to the following description taken in connection with accompanying drawings wherein like reference characters refer to like elements.","The system according to a preferred embodiment of the present invention comprises monitoring one or more guest operating systems in a virtualized system to dynamically modify the host operating system's firewall and network address translation (NAT) configuration based on the operating system and application configuration of one or more guest operating systems. The host operating system's firewall and network address translation (NAT) configuration are dynamically modified based on the operating system and application configuration of one or more guest operating systems.","The invention operates in an environment where there is a host operating system that contains one or more guest operating systems running in a computer virtualization framework. Furthermore, it operates in an environment where port-forwarding is employed to allow external access to applications running in the guest operating system(s).","The method and apparatus are provided in a preferred embodiment running on a test instrument that monitors application performance and network performance. The test instrument includes a host operating system (OS) and one or more guest OS(es). The operations of monitoring the application and network performance are partitioned across the host OS and guest OS(es). The host OS employs a software firewall to prevent undesired network traffic from entering the system, and additionally uses port forwarding, or static network address translation (NAT) to forward packets on to the correct guest OS.","A firewall monitor process runs and monitors the current state of the host operating system's network firewall and the firewalls of the guest operating system(s). If any changes are made to the firewall settings on any of the guest operating systems, the monitoring processes makes the equivalent changes on the host operating system's firewall. Furthermore, when network address translation (NAT) is being used in the virtualization framework, changes made to a guest operating system's firewall will result in changes being made to the NAT settings to allow the appropriate network packets to be forwarded on to the guest operating system.","Referring to , a block diagram of a network with an apparatus in accordance with the disclosure herein, a network may comprise plural network clients , \u2032, etc., which communicate over a network  by sending and receiving network traffic  via interaction with server . The traffic may be sent in packet form, with varying protocols and formatting thereof.","A network analysis device  is also connected to the network, and may include a user interface  that enables a user to interact with the network analysis device to operate the analysis device and obtain data therefrom, whether at the location of installation or remotely from the physical location of the analysis product network attachment.","The network analysis device comprises hardware and software, CPU, memory, interfaces and the like to operate to connect to and monitor traffic on the network, as well as performing various testing and measurement operations, transmitting and receiving data and the like. When remote, the network analysis device typically is operated by running on a computer or workstation interfaced with the network. One or more monitoring devices may be operating at various locations on the network, providing measurement data at the various locations, which may be forwarded and\/or stored for analysis.","The analysis device comprises an analysis engine  which receives the packet network data and interfaces with data store .",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2","b":["26","28","12","30","32","34","36","40","42"]},"In operation, with reference to , a high level diagram of the system and operational environment, a test instrument \u2032 implements the method and apparatus. The instrument connects to the physical network \u2032 and includes a host operating system  supporting one or more guest operating systems, three such guest operating systems , \u2032 and \u2033 illustrated in . Host operating system  has firewall  interfacing between the operating system and the physical network \u2032. A monitor process  operates with the host operating system and via an interface with the hypervisor API (application programming interface) monitors the guest operating systems , \u2032, \u2033 via the API access , \u2032, \u2033 to each guest OS. Each guest OS interfaces with the host OS via a virtual internal network  via their own respective firewalls , \u2032, \u2033. This virtual internal network is the one on which NAT port forwarding takes place and on which the guest OS firewalls operate. The host OS firewall will be filtering packets that come in on the connection to the physical network.","In operation, with reference to , firewall monitor  periodically reads the firewall settings from a particular guest OS via the hypervisor API (). When changes are detected () in the guest OS firewall settings, the firewall monitor will make similar changes in the host OS firewall (). The host OS NAT settings will also be changed accordingly. If a new TCP or UDP port is opened on the guest OS firewall, the firewall monitor will open the port on the host OS firewall and change the NAT configuration to forward all packets for that port to the appropriate guest OS. In a corresponding manner, when a previously opened TCP or UDP port is closed on the guest OS firewall, the firewall monitor will close the port on the host OS firewall and will change the NAT configuration to stop forwarding packets for that port to the guest OS. The Hypervisor API provides a way of communicating between the host OS and the guest OSes that does not go through the virtual internal network .","In the operation environment discussed herein, it is possible for multiple guest OSes to attempt to open the same port on their respective firewall. In that event, the firewall monitor  employs a set of configuration files to determine which guest OS has priority on that port and forwards traffic on that port to the correct guest OS. This provides the ability to prioritize a guest OS for access to a port, rather than relying on a first come first served type of access.","Accordingly, in the illustrated embodiment, the host operating system and guest operating systems are running on a single physical server that is connected to a physical network. A virtual internal network comprising the connections between the monitor\/hypervisor API and the guest operating systems provides communication between the host OS and the guest OSes. A system, method and apparatus are provided for dynamic update of host operating system firewall settings when changes to firewall settings are made in a guest operating system, as well as providing a way to prioritize which operating system has preference when more than one guest OS attempts to the same port.","While a preferred embodiment of the present invention has been shown and described, it will be apparent to those skilled in the art that many changes and modifications may be made without departing from the invention in its broader aspects. The appended claims are therefore intended to cover all such changes and modifications as fall within the true spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
