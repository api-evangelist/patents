---
title: Techniques to manage remote events
abstract: Techniques to manage remote events are described. An apparatus may comprise a processor circuit and a remote event application arranged for execution by the processor circuit. The remote event application may be operative to manage remote event notifications for a publisher entity and a subscriber entity. The remote event application may comprise, among other elements, an event monitor component operative to receive an external event notification message with a publisher entity event for the publisher entity. The event monitor component may select a custom event receiver component associated with the publisher entity from among multiple custom event receiver components, and send the external event notification message to the selected custom event receiver component. The custom event receiver component may implement custom business logic, such as code callouts designed for specific application programs or system programs. Other embodiments are described and claimed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09324055&OS=09324055&RS=09324055
owner: Microsoft Technology Licensing, LLC
number: 09324055
owner_city: Redmond
owner_country: US
publication_date: 20111208
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["In computing, a line of business (LOB) system typically refers to a computing or communications system providing a LOB application for customers of a business entity, sometimes referred to as an enterprise. A LOB application is some form of a mission critical software application for an enterprise. One example of a LOB application is a customer relationship management (CRM) application. A CRM application is designed to organize, automate and synchronize business processes for sales, marketing, customer service, and technical support. Knowledge workers may access a CRM application over a network from anywhere around the world to create, consume and update customer data.","In some cases, a LOB system is integrated with other support systems used by an enterprise. A LOB system may be designed to interoperate with internal enterprise servers customized for specific business processes of the enterprise. For instance, a CRM application might manage customer data as part of a larger sales process of an enterprise controlled from one or more enterprise servers. In such cases, a LOB system may need to synchronize LOB data with enterprise servers. Data synchronization operations have associated costs measurable in terms of computing resources and communications resources. Typically such costs are a function of a given level of performance, with a higher level of performance having a higher associated cost. As such, there is an ongoing need for efficient data synchronization techniques to reduce costs at a given level of performance. It is with respect to these and other considerations that the present improvements are needed.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended as an aid in determining the scope of the claimed subject matter.","Various embodiments may be directed to one or more enhanced remote event management techniques for a machine-to-machine (M2M) system. In particular, some embodiments may be directed to enhanced remote event management techniques implemented by an enterprise system to manage event notifications from one or more LOB systems on behalf of one or more client devices. A LOB system may generally manage and store business data for a business entity, referred to as LOB data. A LOB system may notify an enterprise system of any changes or modifications made to business data stored by the LOB system using a push notification model. The enterprise system may receive the push notifications, and route the push notifications to custom event receivers designed to execute custom business logic in response to change events, including notifying various client devices of change events.","In one embodiment, for example, an apparatus may comprise a processor circuit and a remote event application arranged for execution by the processor circuit. The remote event application may be operative to manage remote event notifications for a publisher entity and a subscriber entity. The remote event application may comprise, among other elements, an event monitor component operative to receive an external event notification message with a publisher entity event for the publisher entity. The event monitor component may select a custom event receiver component associated with the publisher entity from among multiple custom event receiver components, and send the external event notification message to the selected custom event receiver component. The custom event receiver component may implement custom business logic, such as code callouts designed for specific application programs or system programs. Other embodiments are described and claimed.","These and other features and advantages will be apparent from a reading of the following detailed description and a review of the associated drawings. It is to be understood that both the foregoing general description and the following detailed description are explanatory only and are not restrictive of aspects as claimed.","Various embodiments are directed to enhanced remote event management techniques for an enterprise system. More particularly, some embodiments may be directed to enhanced remote event management techniques for managing event notifications between heterogeneous network devices, such as different network elements of a LOB system and an enterprise system. An enterprise system may be owned and operated by a business entity. A LOB system may be owned and operated by an independent third-party vendor providing application and data services to the enterprise system. One example of a network element for a LOB system may comprise a LOB server or server array executing a LOB application, such as a CRM application. One example of a network element for an enterprise system may comprise an enterprise server or server array, such as a Microsoft\u00ae SharePoint\u00ae enterprise server made by Microsoft Corporation, Redmond Wash. Other examples are described as well.","An enterprise server for an enterprise system may implement various enhanced remote event management techniques as a middle-tier platform between a LOB system and a client device. Some examples of enhanced remote event management techniques may include enhanced remote event monitor services and enhanced remote event notification services. Other enhanced remote event management techniques are described as well.","In various embodiments, an enterprise server may implement an enhanced remote event monitor service that allows a LOB system and an enterprise system to synchronize changes to LOB data managed by a LOB system in an efficient and cost-effective manner. The enterprise server may implement various custom event receivers specifically designed for different LOB systems. The custom event receivers may implement custom business logic, such as code callouts for different application programs and system programs, in response to push notifications of changes to LOB data from corresponding LOB systems. In one embodiment, the custom event receivers may be implemented as various web parts of a SharePoint web application platform, such as portlets, widgets or gadgets.","In various embodiments, an enterprise server may implement an enhanced remote event notification service that provides configurable notifications to a client device of a user when a change event occurs in LOB data managed by a LOB system. The notifications may be implemented via electronic mail (email), instant message (IM), text message, page message, short messaging service (SMS) message, multimedia messaging service (MMS), social networking service (SNS) message, or any other suitable messaging technique.","As previously described, information workers frequently create, consume and update business data (or business objects) stored in LOB systems. Some enterprise systems utilize a pull model to retrieve changed data from a LOB system. However, there are significant disadvantages associated with the pull model. For instance, business data may be not be readable by an external application because of an absence of read support for lower level objects that are internal to a LOB system, security models may prevent read access to certain objects, a business object could be a composite from one or more LOB application systems, and there will always be missed change events that occur between pull intervals.","Another potential solution is to utilize a push model to push changed data from a LOB system to an enterprise system. However, there are many different types of LOB systems, each one potentially utilizing a different set of services, service entry points, message formats, data schemas, data types, primary keys, code, and so forth. As a result, an enterprise system may have difficulty in accommodating push notifications received from such a diverse set of LOB systems in a unified manner. Further, solutions for each LOB system may utilize non-interoperable parts, thereby consuming greater amounts of computing and communications resources.","Various embodiments attempt to solve these and other problems by implementing an integrated push notification model between a LOB system and an enterprise system. Further, embodiments may implement a web service to allow a LOB system to push notifications to an enterprise system using a common addressing scheme and a common data schema. The web service may forward the LOB notifications to a custom event receiver specifically designed for each LOB system. A custom event receiver may receive the LOB notifications and perform custom business logic implemented as code callouts that can be executed by the enterprise system in response to the LOB notifications. The code callouts can be implemented in any programming language desired for a given application program or system program, such as a network operating system for a cloud computing architecture. The business logic may be specifically designed to support a business workflow managed by the enterprise server. The custom event receivers may include a notification system having notification parameters used to notify a client device of a user of any change events. Alternatively, the web service may route the LOB notifications to a notification system native to the enterprise system, which in turn notifies a client device of a user of any change events. As a result, the embodiments may implement a unified push model capable of handling multiple heterogeneous LOB systems in an efficient and effective manner. Further, the enterprise system may offer varying levels of reliability and quality-of-service (QoS) to a LOB system, thereby allowing differentiated services for mission-critical applications. These and other improvements enhance affordability, scalability, modularity, extendibility, or interoperability for an operator, device or network.","Reference is now made to the drawings, wherein like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding thereof. It may be evident, however, that the novel embodiments can be practiced without these specific details. In other instances, well known structures and devices are shown in block diagram form in order to facilitate a description thereof. The intention is to cover all modifications, equivalents, and alternatives falling within the spirit and scope of the claimed subject matter.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 1","b":["100","100"]},"As shown in , the remote event management system  includes a server device , a server device , and a client device . It may be appreciated that the remote event management system  may comprise more or less elements as desired for a given implementation. The embodiments are not limited in this context.","In various embodiments, the remote event management system  may include a server device . The server device  may comprise an enterprise hardware platform and associated server software for a business entity suitable for storing and executing various LOB application programs to create, read, update, delete, query or otherwise process LOB data stored in a datastore . The server device  may be implemented on any hardware and\/or software platform as described for the server device  and\/or client device , as well as others. An exemplary computing architecture suitable for the server device  may be described with reference to . The embodiments, however, are not limited to these examples.","In one embodiment, the server device  may comprise or be implemented as a network element for a LOB system. A LOB system generally includes various LOB application programs typically implemented on enterprise hardware platforms for a business entity. LOB application programs are application programs designed to provide various business application services. Examples of LOB application programs may include a Customer Relationship Management (CRM) application program, an Enterprise Resource Planning (ERP) application program, a Supply Chain Management (SCM) application program, Business Intelligence (BI) application program, and other business application programs using business-oriented application logic. The LOB system may implement one or more LOB application programs having associated LOB data. The LOB data for the various LOB application programs may be stored in various elements throughout a LOB system, including the datastore  of the server device  and\/or other network elements of a LOB system.","Whenever a change to LOB data is made using an LOB application program, there may be a need to promote the change event to other network elements associated with the LOB system, such as network elements of an enterprise system that is interoperable with the LOB system. Accordingly, various embodiments are directed to techniques for providing enhanced remote event management techniques that allow a LOB system to propagate changes to LOB data throughout various physical and logical devices connected to the LOB system.","The server device  may be arranged to propagate changes to LOB data stored in the datastore  using push technology. Push technology generally describes a communication technique where a sender initiates a data transfer rather than a recipient. This is contrasted with pull technology where a recipient initiates a data transfer rather than a sender. Push services are often based on information preferences expressed in advance. As such, this is sometimes referred to as a publish\/subscribe model, where one software object may subscribe to services provided by another software object. A software object that subscribes to services provided by another software object is referred to herein as a \u201csubscriber entity.\u201d A software object that provides services subscribed to be another software object is referred to herein as a \u201cpublisher entity.\u201d","As shown in , the server device  may implement a publisher entity . The publisher entity  may comprise any logical construct capable of creating, modifying, deleting, or storing LOB data. Examples for the publisher entity  may include a software application, a software object, or a data source, among others. In one embodiment, for example, the publisher entity  may comprise a data source for a LOB application storing LOB data for the LOB application, such as the datastore .","As shown in , the server device  may also implement a publisher entity handler . The publisher entity handler  may comprise a software application or software object implementing logic to generate and send notification messages in response to change events of the publisher entity . A change event may comprise any event where a portion of LOB data of the publisher entity  is created, modified, deleted, processed, or otherwise changes state. The publisher entity handler  may detect a change event for the publisher entity , and send a notification message to the server device  using a web service address as a destination address for the notification message.","In various embodiments, the remote event management system  may include a server device . In one embodiment, the server device  may comprise a network element for an enterprise system capable of reading LOB data. An enterprise system generally includes various business application programs typically implemented on enterprise hardware platforms for a business entity. One example of a network element for an enterprise system may comprise an enterprise server or server array, such as an enterprise server implementing Microsoft SharePoint server application software.","Microsoft SharePoint is a web application platform. SharePoint is designed as a centralized replacement for multiple web applications and supports various combinations of enterprise website requirements. It is typically associated with web content management and document management systems. SharePoint provides a multi-purpose platform that allows for managing and provisioning of intranet portals, extranets and websites, document management and file management, collaboration spaces, social networking tools, enterprise search, business intelligence tooling, process\/information integration, and third-party developed solutions. SharePoint can also be used as a web application development platform.","In various embodiments, the server device  may comprise an enterprise hardware platform for a business entity suitable for storing and executing various business application programs to receive LOB data from the server device . As with the server device , the server device  may be implemented on any hardware and\/or software platform as described for the server device  and\/or client device , as well as others. An exemplary computing architecture suitable for the server device  may be described with reference to . The embodiments, however, are not limited to these examples.","As shown in , the server device  may comprise a processor circuit  and a remote event application  arranged for execution by the processor circuit . The remote event application  may implement various enhanced remote event management techniques as a middle-tier service between the server device  and the client device . The remote event application  may include appropriate interfaces for the server device  and the client device  to communicate messages with each device in a particular format or data schema implemented by each device. For instance, when the server device  and the client device  utilize different formats or data schemas for LOB data and associated messages, the remote event application  may perform data translation operations. However, when the server device  and the client device  utilize common formats or data schemas for LOB data and associated messages, the remote event application  may not perform any data translation operations and operate as a pass-through device. Additionally or alternatively, the remote event application  may also implement custom business logic to handle incoming and outgoing messages suitable for a given server device  and\/or client device .","In various embodiments, the remote event management system  may include one or more client devices . The client device  may comprise any client device or client system arranged to receive notifications of change events to LOB data stored by the datastore  of the server device . Examples for the client device  may include without limitation a processing system, computer, server, work station, appliance, terminal, personal computer, laptop, ultra-laptop, handheld computer, personal digital assistant, smart phone, tablet computer, consumer electronics, television, digital television, set top box, telephone, mobile telephone, cellular telephone, handset, wireless access point, base station, subscriber station, mobile subscriber center, radio network controller, router, hub, gateway, bridge, switch, machine, or combination thereof. The embodiments are not limited in this context.","The client device  may subscribe to the push services provided by the server device  via the server device . As such, the server device  may implement a subscriber entity  and a subscriber entity handler . Although the subscriber entity  and the subscriber entity handler  are shown as part of the client device , it may be appreciated that one or both may be implemented as part of the server device . In this case, the client device  may simply implement a messaging application (not shown) to receive notification messages from the server device .","A subscriber entity  may comprise any logical construct capable of reading LOB data. Examples for the subscriber entity  may include a software application, a software object, or a data source. In one embodiment, for example, the subscriber entity  may comprise a software object for the remote event application .","A subscriber entity handler  may comprise a software program implementing logic to receive notification messages via the server device  in response to change events of the publisher entity . The subscriber entity handler  may receive a notification message from the server device  using a messaging technique selected by a user of the client device , and forward the notification message to a client application.","In general operation, the publisher entity handler  may detect a change event (e.g., a modification of LOB data) for the publisher entity  on the server device , and send a properly formatted notification message to the remote event application  of the server device . The remote event application  may receive the notification message, process the notification message, route the notification message, initiate customized workflows by the server device , and\/or send a notification message to the client device  in a customized manner.","In one use scenario, by way of example, assume Ichiro is a sales manager at a business entity called \u201cContoso\u201d and is responsible for sales in Europe. Ichiro has a team of sales representatives who are constantly on the move. A sales representative may use a mobile application to add any customer lead to a CRM LOB system implemented by the server device  while in the field. Ichiro wants to be aware of all that is happening with his sales team while they are on move. Ichiro has a virtual list of all leads on a SharePoint site implemented by the server device . Ichiro subscribes to alerts on any addition of a lead to the virtual list so that he can see an alert in his email. When one of his sales representatives add a new customer lead to the CRM LOB system, the client device  used by Ichiro receives an alert as an email message in his inbox. He immediately moves to the virtual list and assigns a senior sales representative from his sales team to follow up on the new customer lead. The senior sales representative gets an alert on his client device  for a new task which was created as a result of Ichiro's assignment. The ability to quickly react to new customer leads results in converting more leads in a shorter time period.","In another use scenario, by way of example, assume a business entity called \u201cFabrikam\u201d is a supplier for a manufacturing company which specializes in heavy engineering equipment. The purchase orders received from their customers are complex with multiple product items and each product item being addressed by different individuals in different departments. Usually a turnaround time for such queries needs to be as short as possible and the complexity of multiple individuals requiring to be updating the product items means added communication over email and follow ups. Fabrikam includes an enterprise system implementing the server device  as a SharePoint installation communicating with an ERP LOB system implemented by the server device . Every time a purchase order is created for the ERP LOB system, employees from relevant departments get an email alert at corresponding client devices . They are able to view the requirements on a SharePoint virtual list and update a status on the virtual list provided by the server device . As a result, shorter time periods are needed to process purchase orders, and Fabrikam is able to reduce turnaround time which leads to improved customer satisfaction.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 2","b":["200","100","124"]},"The remote event application  may be generally arranged to manage remote event notifications for the publisher entity  and the subscriber entity . In the illustrated embodiment shown in , the remote event application  may comprise an event monitor component , multiple custom event receiver components -, an event notification component , and an event management component . It may be appreciated that the remote event application  may comprise more or less components as desired for a given implementation. The embodiments are not limited in this context.","It is worthy to note that \u201ca\u201d and \u201cb\u201d and \u201cc\u201d and similar designators as used herein are intended to be variables representing any positive integer. Thus, for example, if an implementation sets a value for a=5, then a complete set of custom event receiver components -may include custom event receiver components -, -, -, - and -. The embodiments are not limited in this context.","As used herein the terms \u201ccomponent\u201d and \u201csystem\u201d are intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a component can be implemented as a process running on a processor, a processor, a hard disk drive, multiple storage drives (of optical and\/or magnetic storage medium), an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a server and the server can be a component. One or more components can reside within a process and\/or thread of execution, and a component can be localized on one computer and\/or distributed between two or more computers as desired for a given implementation. The embodiments are not limited in this context.","The remote event application  may comprise an event monitor component . The event monitor component  may be generally arranged to monitor for notification messages received from the server device . In one embodiment, for example, the event monitor component  may receive an external event notification message -with information of a publisher entity event for the publisher entity . The publisher entity  may comprise, for example, the data source  for an LOB application implemented by the server device . A publisher entity event may comprise, for example, a change event for the publisher entity  indicating that LOB data stored by the server device  has changed states (e.g., addition, deletion, modified, processed, etc.).","In one embodiment, the event monitor component  may comprise or be implemented as a representational state transfer (REST) based input point for the remote event application . For instance, an exemplary REST based input point may have a signature as follows:",{"@attributes":{"id":"p-0054","num":"0053"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"238pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003\u2003","{"]},{"entry":[{},"POST"]},{"entry":[{},"http:\/\/site\/web\/_vti_bin\/client.svc\/web\/ProcessRemoteEvent?id=xxxxxxxxxxxxxx\u2003"]},{"entry":[{},"HTTP\/1.0"]},{"entry":[{},"Request Body:"]},{"entry":[{},"}"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{},"b":["110","110"]},"The use of a REST based input point facilitates receipt of external event notification message -, and further, allows the external event notification message -to share a same or similar data format. For instance, when the server device  is implemented as a SharePoint server, the external event notification message -may comprise part of a generic atom feed. The generic nature of the atom feed allows field names used by the external event notification message -to be the same as those defined in the business data catalog (BDC) Model. An example of a generic atom feed is as follows:",{"@attributes":{"id":"p-0056","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<?xml version=\u20331.0\u2033 encoding=\u2033utf-8\u2033?>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003<feed xmlns=\u2033http:\/\/www.w3.org\/2005\/Atom\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<title>Example Feed<\/title>"]},{"entry":[{},"\u2002<link href=\u2033http:\/\/example.org\/\u2033\/>"]},{"entry":[{},"\u2002<updated>2003-12-13T18:30:02Z<\/updated>"]},{"entry":[{},"\u2003<author>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<name>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"JohnDoe"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/name>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/author>"]},{"entry":[{},"<id>urn:uuid:60a76c80-d399-11d9-b93C-"]},{"entry":[{},"0003939e0af6<\/id>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<entry><title>Atom-Powered Robots Run","Amok"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/title>"]},{"entry":[{},"<link href=\u2033http:\/\/example.org\/2003\/12\/13\/atom03\u2033\/>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<id>urn:uuid:1225c695-cfb8-4ebb-aaaa-"]},{"entry":[{},"80da344efa6a<\/id>"]},{"entry":[{},"<updated>2003-12-13T18:30:02Z<\/updated>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<summary>Some text.<\/summary>"]},{"entry":[{},"\u2002<properties>"]},{"entry":[{},"\u2003<property name=\u201dBcsItemIdentity\u201d><year>2008<\/year>"]},{"entry":[{},"<name>Avtaar<\/name>"]},{"entry":[{},"<Industry>Hollywood<\/Industry>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/property> <!--Represents","the serialized"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"identity property pertaining to BCS-->"]},{"entry":[{},"<\/properties>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003<\/entry>"]},{"entry":[{},"<\/feed>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"As shown above, a property name \u201cBcsItemIdentity\u201d may be consistently used for all external event notification message -from the LOB system implemented by the server device , and in some cases, for other LOB systems implemented by other server devices as well. In the latter case, the property name \u201cBcsItemIdentity\u201d may be consistently used for all external event notification message -from all external LOB systems, with changes to field names for the property name as appropriate.","The remote event application  may comprise one or more custom event receiver components -. The remote event application  needs to connect to a LOB system and inform the LOB server that it needs to be notified when a change event occurs at the LOB system. Each LOB system has its own set of application programs, entities, event types, users, services, service entry points, message formats, data schemas, data types, primary keys, code, and so forth. As such, the remote event application  may utilize a unique end point for a given LOB system in the form of custom event receiver components -. The custom event receiver components -may each implement custom business logic for a corresponding LOB system implemented by the server device  (or other server devices). When the remote event application  is implemented as a SharePoint application, for example, a new stereotype in business connectivity services (BCS) and a business data catalog (BDC) is introduced to enable connection to the server device  and support event receiver functionality. In one embodiment, the new stereotype may be mandated for use by the LOB system of the server device .","The remote event application  may comprise an event notification component . The event notification component  may generally provide notification services for the client device . The notification services may be configurable to fit a given client device  or user preferences for a user of the client device . The notification services may be implemented using various messaging techniques, applications and modalities by communicating client event notification messages -from the server  to the client device . Examples for client event notification messages -may include without limitation email messages, IM messages, text message, page message, SMS messages, MMS messages, SNS messages, or any other suitable message types. The embodiments are not limited in this context.","The remote event application  may comprise an event management component . The event management component  may generally provide management services to allow a user to a subscriber entity  to subscribe or unsubscribe to a publisher entity  utilizing one or more external event management messages -and client event management messages -. The event management component  may also offer management services to set up notification services provided by the event notification component . The event management component  may further provide management services to offer different levels of reliability and QoS for notification messages received from the server device .",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 3","b":["300","100","212"]},"As shown in , the publisher entity handler  may detect a publisher entity event -for the publisher entity  at the server device . Examples of publisher entity events -may include an add item event -, a delete item event -, a modify item event -, among others. The publisher entity event handler  may generate and send an external event notification message - to the server device  using, for example, the REST based input point.","The event monitor component  may receive the external event notification message -, and select a custom event receiver component -associated with a publisher entity -from among multiple custom event receiver components -, and send the external event notification message - to the selected custom event receiver component -. Each custom event receiver component -may correspond to a different publisher entity -. Each publisher entity -may be an instance of the publisher entity  described with reference to . As shown in , a custom event receiver component - may be associated with a publisher entity -, a custom event receiver component - may be associated with a publisher entity -, and a custom event receiver component - may be associated with a publisher entity -.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 4","b":["400","100","214"],"i":"a. "},"As shown in , the event monitor component  may receive an external event notification message -, and select a custom event receiver component - for the external event notification message - based on a globally unique identifier (GUID)  assigned to the publisher entity -associated with the external event notification message -. Assume the GUID  identifies the publisher entity -, the event monitor component  may select the custom event receiver component - as indicated by the bolded text in .","The custom event receiver component - may implement custom business logic, such as a code callout  designed for specific application programs or system programs. For instance, the custom event receiver component - may receive the external event notification message -, and invoke a code callout  arranged to perform custom logic in response to the publisher entity event. The code callout  may comprise computer program code governing actions in response to the publisher entity event in the server device .","The code callout  enables developers to have code which enables them to react to a change event in LOB data. For example, assume the publisher entity  is a list of service requests for customers of a car company stored in the datastore . Whenever a new service request is added to the list of service requests, the publisher entity handler  may detect the change event, and generate the external event notification message - with the change event information. The event monitor component  may receive the external event notification message -, and select a custom event receiver component - associated with the publisher entity  and the server device . The custom event receiver component - may implement custom logic to support both the server device  and the client device . For instance, the new service request may be added to a virtual list of service requests managed by the server device . Additionally or alternatively, the new service request may be sent to the client device  using various messaging modalities. These operations may be accomplished without the server device  or the client device  having to directly access the datastore  of the server device , thereby decreasing response times and enhancing user experience.","A developer can design the code callout  to have a subscription at a list level or an entity level. For a list level code callout , the developer can write code as part of an event response to list. An entity code callout  may be supported by enabling developers to provide a code callout uniform resource locator (URL) for a network based service, such as a Microsoft Windows\u00ae Azure\u00ae service deployed by the developer. Azure is a cloud computing platform used to build, host, and scale web applications through network data centers. By utilizing different custom event receivers -and code callouts , the remote event application  may act as a broker to receive a change event from an external LOB system and pass it on to a remote event receiver in various cloud computing architectures, such as Azure.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 5","b":["500","100","216"]},"As shown in , the remote event application  may comprise an event notification component  arranged to retrieve a notification parameter -associated with the subscriber entity , and send a client event notification message -to a client application (e.g., a messaging application) associated with the subscriber entity . A user may configure a set of options for the event notification component  to send client event notification messages -as encoded by the notification parameters -. For instance, a notification parameter - may indicate a message type (e.g., email message), a notification parameter - may indicate a message time (e.g., email during business hours, SMS message during personal hours), a notification parameter - may indicate a client device  (e.g., work station during business hours, smart phone during personal hours), and so forth.","The event notification component  of the server device  may retrieve one or more notification parameters -, and generate a client event notification message -based on the notification parameters -. For instance, the event notification component  may generate an email message -, a SMS\/MMS message -, a SNS message -, and so forth. The event notification component  may send the client event notification message -to the client device .","The subscriber entity event handler  for the subscriber entity  may receive client event notification messages -from the server device , and forward the client event notification messages -to a client application . In one embodiment, for example, the client application  may comprise a message application. In one embodiment, for example, the client application  may comprise a thin-client for the LOB system and\/or the enterprise system. The client application  may present the notification message to a user of the client device  using various graphical user interface (GUI) views having various GUI elements. The GUI views may be generated by the client application , the subscriber entity handler , and\/or a native application for the client device , such as an operating system (OS) executing on the client device .",{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 6A","b":["600","100","218"]},"The event management component  may provide management services to allow a user to manage various features of the remote event application . As shown in , a user may use a web browser  of the client device  to access various configuration options provided by the remote event application . The configuration options may be used to generate, among other types of configuration events, a subscribe event , an unsubscribe event , a notification event , and a reliability event .","The event management component  may manage a subscription between a publisher entity  and a subscriber entity . The subscribe event  and the unsubscribe event  are typically paired events. The subscribe event  triggers a set of operations to subscribe a subscriber entity  to a publisher entity  utilizing one or more external event management messages -and client event management messages -. Conversely, the unsubscribe event  triggers a set of operations to unsubscribe a subscriber entity  from a publisher entity  utilizing one or more external event management messages -and client event management messages -","The event management component  may manage remote event notifications between a publisher entity  and a subscriber entity . The notification event  may be used set up notification services provided by the event notification component . For instance, a user may set one or more notification parameters -for the subscriber entity  for client event notification messages -","The event management component  may manage a level of reliability for external event notification messages -. The reliability event  may be used to set up different levels of reliability and\/or QoS for external event notification messages -received from the server device . The event management component  may manage a set of reliability parameters -for each publisher entity . The event management component  may retrieve a reliability parameter -representing a reliability level associated with the publisher entity , and process an external event notification message -based on the reliability parameter -","The loosely coupled, asynchronous nature of event and notifications handling imposes some unique reliability requirements. When designing the event monitor component , a level of reliability desired for the event monitor component  may be a configurable option. Enterprise systems offer a variety of infrastructures for implementing services that offer different levels of reliability. Choosing a right infrastructure for a given enterprise system involves matching a level of reliability needed against capabilities of the infrastructure.","Change events passed in from an LOB system may range from informational notifications (e.g., \u201cyour expense report has been approved\u201d) to critical business events (e.g., \u201csupplier has de-committed, trigger a workflow in SharePoint to select a new supplier\u2019). For critical business events there needs to be both reliability and traceability, as these change events will drive event handlers and workflow in SharePoint.","To accommodate the varying types of notifications, the event management component  may allow a user to set different levels of reliability for notifications as encoded in the reliability parameters -. An exemplary set of five reliability levels may be shown in Table 1 as follows:",{"@attributes":{"id":"p-0081","num":"0080"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Reliability Level","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Reliability Level 1","Basic integration. Notifications work most"]},{"entry":[{},"of the time but cannot be counted on for"]},{"entry":[{},"mission critical scenarios. No guarantees"]},{"entry":[{},"around service level agreements. Change"]},{"entry":[{},"events may get lost, remain unprocessed, or"]},{"entry":[{},"be delivered multiple times."]},{"entry":["Reliability Level 2","Change events will get delivered not more"]},{"entry":[{},"than once. The event monitor component"]},{"entry":[{},"212 will reject duplicate change events"]},{"entry":[{},"from the LOB system. However it is still"]},{"entry":[{},"possible that change events might not get"]},{"entry":[{},"received, or remain unprocessed."]},{"entry":["Reliability Level 3","Change events will get delivered exactly"]},{"entry":[{},"once. This will mean that the event"]},{"entry":[{},"monitor component 212 will never miss an"]},{"entry":[{},"event, even for high volumes of incoming"]},{"entry":[{},"events, as long as the SharePoint Farm is"]},{"entry":[{},"up."]},{"entry":["Reliability Level 4","Change events will get delivered exactly"]},{"entry":[{},"once even when the SharePoint farm is"]},{"entry":[{},"down."]},{"entry":["Reliability Level 5","No lost messages. There will be the ability"]},{"entry":[{},"to replay events to specific handlers for"]},{"entry":[{},"failure cases within the handlers."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"A user may use the event management component  to select a reliability level, and the event management component  may encode a reliability parameter -and associated set of message handling parameters -for the selected reliability level. It may be appreciated that the reliability levels shown in Table 1 are by way of example and not limitation. Any number of reliability levels may be established for a given implementation. The embodiments are not limited in this context.",{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 6B","b":["600","100","218","610"]},"As shown in , a reliability event  may initiate configuration of a reliability parameter -corresponding to a reliability level selected by a user. The reliability parameter -may have a set of message handling parameters -configured to provide the selected reliability level. In one embodiment, the message handling parameters -for a given reliability parameter -may include a duplicate message parameter -, a standby server parameter - and a replay parameter -. It may be appreciated that the parameters - to - are by way of example and not limitation. Any number of message handling parameters -may be used for a given implementation. The embodiments are not limited in this context.","The duplicate message parameter - may indicate whether to accept or reject duplicate external event notification messages -received from an external LOB application. For lower levels of reliability (e.g., Reliability Level 1), the event monitor component  may accept all external event notification messages -even when there are duplicate messages for the same change event at a LOB system. This reflects a condition where no message delivery guarantees are given at the cost of consuming more resources of the server device . When set to logical one (1), the duplicate message parameter - may indicate that duplicate external event notification messages -are accepted from the server device . When set to logical zero (0), the duplicate message parameter - may indicate that duplicate external event notification messages -are not accepted from the server device .","The standby server parameter - may indicate whether to send an external event notification message -to a standby server when a primary server is non-operational. To ensure higher levels of reliability (e.g., Reliability Levels 2-5), the standby server parameter - may indicate what happens when the server device  is non-operational. For instance, assume the server device  is part of a server array for a SharePoint site. In those cases where the server device  is a primary server, and is non-operational to process notifications, the event monitor component  may route any external event notification messages -it receives to a standby or backup server. This ensures that an external event notification message -reaches a server for processing. In this scenario, the even monitor component  may be implemented in a network element separate from the server device , such as a network appliance or load balancer. When set to logical one (1), the standby server parameter - may indicate that external event notification messages -are to be sent to a standby server when the server device  is non-operational. When set to logical zero (0), the standby server parameter - may indicate that external event notification messages -are not to be sent to a standby server when the server device  is non-operational, and are simply discarded.","The replay parameter - may indicate whether to replay an external event notification message -when the event monitor component  detects an error condition when processing the external event notification message -. For those highest levels of reliability (e.g., Reliability Level 5), the replay parameter - may ensure that an external event notification message -is not lost even when there is an internal error occurring in one of the components of the remote event application  or the server device . When an error condition is detected, the event monitor component  and\/or a custom event receiver component -may replay or re-process an external event notification message -. Replay events may occur until the external event notification message -has been completely processed by the remote event application  and\/or the server device . When set to logical one (1), the replay parameter - may indicate that external event notification messages -are to be replayed when an error condition occurs. When set to logical zero (0), the replay parameter - may indicate that external event notification messages -are not replayed when an error condition occurs.","When the event monitor component  receives an external event notification message -, the event monitor component  may retrieve a reliability parameter -associated with the publisher entity  and any associated message handling parameters -. The event monitor component  may then handle the external event notification message -in accordance with the reliability parameter -and the message handling parameters -","By way of example, assume the publisher entity  has a reliability parameter - set to a reliability level one. In this case, the message handling parameters -may comprise a duplicate message parameter -, a standby server parameter -, and a replay parameter - all set to logical zero (0).","Continuing with this example, assume the publisher entity  has a reliability parameter - set to a reliability level two. In this case, the message handling parameters -may comprise a duplicate message parameter - set to logical one (1), and a standby server parameter - and a replay parameter - set to logical zero (0).","Continuing with this example, assume the publisher entity  has a reliability parameter - set to a reliability level three. In this case, the message handling parameters -may comprise a duplicate message parameter - and a replay parameter - set to logical one (1), and a standby server parameter - set to logical zero (0).","Continuing with this example, assume the publisher entity  has a reliability parameter - set to a reliability level four. In this case, the message handling parameters -may comprise a duplicate message parameter - and a standby server parameter - set to logical one (1), and a replay parameter - set to logical zero (0).","Continuing with this example, assume the publisher entity  has a reliability parameter - set to a reliability level five. In this case, the message handling parameters -may comprise a duplicate message parameter -, a standby server parameter -, and a replay parameter - all set to a logical one (1).","Included herein is a set of flow charts representative of exemplary methodologies for performing novel aspects of the disclosed architecture. While, for purposes of simplicity of explanation, the one or more methodologies shown herein, for example, in the form of a flow chart or flow diagram, are shown and described as a series of acts, it is to be understood and appreciated that the methodologies are not limited by the order of acts, as some acts may, in accordance therewith, occur in a different order and\/or concurrently with other acts from that shown and described herein. For example, those skilled in the art will understand and appreciate that a methodology could alternatively be represented as a series of interrelated states or events, such as in a state diagram. Moreover, not all acts illustrated in a methodology may be required for a novel implementation.",{"@attributes":{"id":"p-0095","num":"0094"},"figref":"FIG. 7","b":["700","700","124"]},"In the illustrated embodiment shown in , the logic flow  may receive an external event notification message with a publisher entity event for a publisher entity from a first server device by a second server device at block . For instance, the event monitor component  of the remote event application  may receive an external event notification message -with a publisher entity event -for a publisher entity  from a first server device  by a second server device . The publisher entity event -may comprise a change event representing a change in state of LOB data stored in the datastore  of the server device .","The logic flow  may select a custom event receiver component associated with a subscriber entity from among multiple custom event receiver components at the second server device at block . For instance, the event monitor component  may select a custom event receiver component - associated with the publisher entity  from among multiple custom event receiver components - to -at the second server device . The selected custom event receiver component - may be specifically designed to receive and process event notifications from the publisher entity  and\/or the server device .","The logic flow  may send the external event notification message to the selected custom event receiver component at the second server device at block . For instance, the event monitor component  may send the external event notification message -to the selected custom event receiver component - at the second server device . In this case, the event monitor component  operates as a router or switch to route external event notification messages -from different LOB systems to an appropriate custom event receiver component -customized for the LOB system.","The logic flow  may send a client event notification message to a subscriber entity subscribed to the publisher entity from the second server device to a client device at block . For instance, the event notification component  of the remote event application  send a client event notification message -to a subscriber entity  that has previously subscribed to the publisher entity  from the second server device  to a client device . For instance, the event notification component  may generate an email message and send the email message to the client application  of the client device .",{"@attributes":{"id":"p-0100","num":"0099"},"figref":"FIG. 8","b":["800","100","604","800","130","132","120","120","112","110","110","132","112","114","120","110","120","120","126","120","130"]},{"@attributes":{"id":"p-0101","num":"0100"},"figref":"FIG. 9","b":["900","100","606","800","130","1","120","120","126","132","112","110","110","132","112","114","120","110","120","120","126","120","130"]},{"@attributes":{"id":"p-0102","num":"0101"},"figref":"FIG. 10","b":["1000","100","1000","110","204","120","212","124","120","110","204","212","216","204","214","1","214","1","214","204","214","1"],"i":["d ","d ","d ","a","d "]},"The event notification component  may persist the external event notification message -in the datastore  of the server device . The datastore  may comprise, for example, a SharePoint content database for a SharePoint application.","The custom event receiver - may send a request to get event data from the datastore , and receive the event data from the datastore . The custom event receiver - may also send a request to get subscription data from the datastore , and receive the subscription data from the datastore . The custom event receiver - may compare the event data and the subscription data, and when there is a match, send a client event notification message -to the client application  of the client device .",{"@attributes":{"id":"p-0105","num":"0104"},"figref":"FIG. 11","b":["1100","1100"]},"In one embodiment, the computing architecture  may comprise or be implemented as part of an electronic device. Examples of an electronic device may include without limitation a mobile device, a personal digital assistant, a mobile computing device, a smart phone, a cellular telephone, a handset, a one-way pager, a two-way pager, a messaging device, a computer, a personal computer (PC), a desktop computer, a laptop computer, a notebook computer, a handheld computer, a tablet computer, a server, a server array or server farm, a web server, a network server, an Internet server, a work station, a mini-computer, a main frame computer, a supercomputer, a network appliance, a web appliance, a distributed computing system, multiprocessor systems, processor-based systems, consumer electronics, programmable consumer electronics, television, digital television, set top box, wireless access point, base station, subscriber station, mobile subscriber center, radio network controller, router, hub, gateway, bridge, switch, machine, or combination thereof. The embodiments are not limited in this context.","The computing architecture  includes various common computing elements, such as one or more processors, co-processors, memory units, chipsets, controllers, peripherals, interfaces, oscillators, timing devices, video cards, audio cards, multimedia input\/output (I\/O) components, and so forth. The embodiments, however, are not limited to implementation by the computing architecture .","As shown in , the computing architecture  comprises a processing unit , a system memory  and a system bus . The processing unit  can be any of various commercially available processors. Dual microprocessors and other multi-processor architectures may also be employed as the processing unit . The system bus  provides an interface for system components including, but not limited to, the system memory  to the processing unit . The system bus  can be any of several types of bus structure that may further interconnect to a memory bus (with or without a memory controller), a peripheral bus, and a local bus using any of a variety of commercially available bus architectures.","The computing architecture  may comprise or implement various articles of manufacture. An article of manufacture may comprise a computer-readable storage medium to store logic. Examples of a computer-readable storage medium may include any tangible media capable of storing electronic data, including volatile memory or non-volatile memory, removable or non-removable memory, erasable or non-erasable memory, writeable or re-writeable memory, and so forth. Examples of logic may include executable computer program instructions implemented using any suitable type of code, such as source code, compiled code, interpreted code, executable code, static code, dynamic code, object-oriented code, visual code, and the like.","The system memory  may include various types of computer-readable storage media in the form of one or more higher speed memory units, such as read-only memory (ROM), random-access memory (RAM), dynamic RAM (DRAM), Double-Data-Rate DRAM (DDRAM), synchronous DRAM (SDRAM), static RAM (SRAM), programmable ROM (PROM), erasable programmable ROM (EPROM), electrically erasable programmable ROM (EEPROM), flash memory, polymer memory such as ferroelectric polymer memory, ovonic memory, phase change or ferroelectric memory, silicon-oxide-nitride-oxide-silicon (SONOS) memory, magnetic or optical cards, or any other type of media suitable for storing information. In the illustrated embodiment shown in , the system memory  can include non-volatile memory  and\/or volatile memory . A basic input\/output system (BIOS) can be stored in the non-volatile memory .","The computer  may include various types of computer-readable storage media in the form of one or more lower speed memory units, including an internal hard disk drive (HDD) , a magnetic floppy disk drive (FDD)  to read from or write to a removable magnetic disk , and an optical disk drive  to read from or write to a removable optical disk  (e.g., a CD-ROM or DVD). The HDD , FDD  and optical disk drive  can be connected to the system bus  by a HDD interface , an FDD interface  and an optical drive interface , respectively. The HDD interface  for external drive implementations can include at least one or both of Universal Serial Bus (USB) and IEEE 1194 interface technologies.","The drives and associated computer-readable media provide volatile and\/or nonvolatile storage of data, data structures, computer-executable instructions, and so forth. For example, a number of program modules can be stored in the drives and memory units , , including an operating system , one or more application programs , other program modules , and program data .","The one or more application programs , other program modules , and program data  can include, for example, the remote event application , the event monitor component , the custom event receiver component -, the event notification component , the event management component , the publisher entity , the publisher entity handler , the subscriber entity , the subscriber entity handler , and so forth.","A user can enter commands and information into the computer  through one or more wire\/wireless input devices, for example, a keyboard  and a pointing device, such as a mouse . Other input devices may include a microphone, an infra-red (IR) remote control, a joystick, a game pad, a stylus pen, touch screen, or the like. These and other input devices are often connected to the processing unit  through an input device interface  that is coupled to the system bus , but can be connected by other interfaces such as a parallel port, IEEE 1194 serial port, a game port, a USB port, an IR interface, and so forth.","A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adaptor . In addition to the monitor , a computer typically includes other peripheral output devices, such as speakers, printers, and so forth.","The computer  may operate in a networked environment using logical connections via wire and\/or wireless communications to one or more remote computers, such as a remote computer . The remote computer  can be a workstation, a server computer, a router, a personal computer, portable computer, microprocessor-based entertainment appliance, a peer device or other common network node, and typically includes many or all of the elements described relative to the computer , although, for purposes of brevity, only a memory\/storage device  is illustrated. The logical connections depicted include wire\/wireless connectivity to a local area network (LAN)  and\/or larger networks, for example, a wide area network (WAN) . Such LAN and WAN networking environments are commonplace in offices and companies, and facilitate enterprise-wide computer networks, such as intranets, all of which may connect to a global communications network, for example, the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a wire and\/or wireless communication network interface or adaptor . The adaptor  can facilitate wire and\/or wireless communications to the LAN , which may also include a wireless access point disposed thereon for communicating with the wireless functionality of the adaptor .","When used in a WAN networking environment, the computer  can include a modem , or is connected to a communications server on the WAN , or has other means for establishing communications over the WAN , such as by way of the Internet. The modem , which can be internal or external and a wire and\/or wireless device, connects to the system bus  via the input device interface . In a networked environment, program modules depicted relative to the computer , or portions thereof, can be stored in the remote memory\/storage device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers can be used.","The computer  is operable to communicate with wire and wireless devices or entities using the IEEE 802 family of standards, such as wireless devices operatively disposed in wireless communication (e.g., IEEE 802.11 over-the-air modulation techniques) with, for example, a printer, scanner, desktop and\/or portable computer, personal digital assistant (PDA), communications satellite, any piece of equipment or location associated with a wirelessly detectable tag (e.g., a kiosk, news stand, restroom), and telephone. This includes at least Wi-Fi (or Wireless Fidelity), WiMax, and Bluetooth\u2122 wireless technologies. Thus, the communication can be a predefined structure as with a conventional network or simply an ad hoc communication between at least two devices. Wi-Fi networks use radio technologies called IEEE 802.11x (a, b, g, n, etc.) to provide secure, reliable, fast wireless connectivity. A Wi-Fi network can be used to connect computers to each other, to the Internet, and to wire networks (which use IEEE 802.3-related media and functions).",{"@attributes":{"id":"p-0120","num":"0119"},"figref":"FIG. 12","b":["1200","1200","1200"]},"As shown in , the communications architecture  comprises includes one or more clients  and servers . The clients  may implement the client device . The servers  may implement the server devices , . The clients  and the servers  are operatively connected to one or more respective client data stores  and server data stores  that can be employed to store information local to the respective clients  and servers , such as cookies and\/or associated contextual information.","The clients  and the servers  may communicate information between each other using a communication framework . The communications framework  may implement any well-known communications techniques and protocols, such as those described with reference to the information visualization system . The communications framework  may be implemented as a packet-switched network (e.g., public networks such as the Internet, private networks such as an enterprise intranet, and so forth), a circuit-switched network (e.g., the public switched telephone network), or a combination of a packet-switched network and a circuit-switched network (with suitable gateways and translators).","Some embodiments may be described using the expression \u201cone embodiment\u201d or \u201can embodiment\u201d along with their derivatives. These terms mean that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment. The appearances of the phrase \u201cin one embodiment\u201d in various places in the specification are not necessarily all referring to the same embodiment. Further, some embodiments may be described using the expression \u201ccoupled\u201d and \u201cconnected\u201d along with their derivatives. These terms are not necessarily intended as synonyms for each other. For example, some embodiments may be described using the terms \u201cconnected\u201d and\/or \u201ccoupled\u201d to indicate that two or more elements are in direct physical or electrical contact with each other. The term \u201ccoupled,\u201d however, may also mean that two or more elements are not in direct contact with each other, but yet still co-operate or interact with each other.","It is emphasized that the Abstract of the Disclosure is provided to allow a reader to quickly ascertain the nature of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition, in the foregoing Detailed Description, it can be seen that various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather, as the following claims reflect, inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description, with each claim standing on its own as a separate embodiment. In the appended claims, the terms \u201cincluding\u201d and \u201cin which\u201d are used as the plain-English equivalents of the respective terms \u201ccomprising\u201d and \u201cwherein,\u201d respectively. Moreover, the terms \u201cfirst,\u201d \u201csecond,\u201d \u201cthird,\u201d and so forth, are used merely as labels, and are not intended to impose numerical requirements on their objects.","What has been described above includes examples of the disclosed architecture. It is, of course, not possible to describe every conceivable combination of components and\/or methodologies, but one of ordinary skill in the art may recognize that many further combinations and permutations are possible. Accordingly, the novel architecture is intended to embrace all such alterations, modifications and variations that fall within the spirit and scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6B"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
