---
title: Aligning records for visual comparison
abstract: Various embodiments of systems and methods for aligning records for visual comparison are described herein. In one aspect, the method includes identifying a plurality of records. A reference record is selected from the plurality of records. One or more non-reference record is merged into the reference record to generate a merged reference record. The merged reference record includes one or more fields missing in the reference record. The missing fields are included as blank fields from the non-reference records. The merged reference record is merged into a non-reference record to generate the merged non-reference record. The merged non-reference record includes fields missing in the non-reference record. Missing fields are included as blank fields. The merged records are displayed on a user interface in a card view.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08626773&OS=08626773&RS=08626773
owner: Business Objects Software Limited
number: 08626773
owner_city: Dublin
owner_country: IE
publication_date: 20111212
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["A record is a data structure for storing information related to an entity. The record comprises various data related to the entity. For example, the record for a customer may comprise data, e.g., a name of the customer, an official address of the customer, a residential address of the customer, a contact number of the customer, etc. It may be required to compare multiple records. For example, it may be required to compare the record of a customer \u2018xyz\u2019 and a customer \u2018pqr.\u2019 A visual comparison may be preferable or needed.","However, it may be difficult to compare the records if the records are placed one on the top of another with data of the records being displayed horizontally. Typically, if the data of the records are displayed horizontally and the records include many data then a user may need to scroll back-and-forth or up-and-down across the records to compare various data which might be inconvenient and time consuming. The records may be placed side-by-side in a vertical arrangement (e.g., in a card view) to obviate the above-mentioned problems. However, even if the records are placed side-by-side, like data of the records may not be in alignment. For example, the \u2018residential address\u2019 of the customer \u2018xyz\u2019 and the \u2018residential address\u2019 of the customer \u2018pqr\u2019 may not be in alignment or may not line up in a same row.",{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1","b":["101","102"]},"Case 1: The record  includes a first name A and a last name C of the customer, while the record  includes a first name A, a middle name B, and a last name C of the customer. Therefore, the record  includes an additional field B (e.g., middle name) that is missing in the record  and it causes misalignment. Typically, due to misalignment the data (rows) of the record  and the corresponding data of the record  do not line up. For example, a \u2018REGION\u2019 data R and a \u2018MASKED\u2019 data M of the record  and the corresponding \u2018REGION\u2019 data R and the \u2018MASKED\u2019 data M of the record  do not line up in the same TOW.","Case 2: The record  may include two addresses, e.g., ADDRESS 1 and ADDRESS 2 whereas the record  may only include one address, e.g., ADDRESS 1 that can also cause misalignment.","Case 3: The data, e.g., ADDRESS 1 of the record  may include two levels of hierarchy (H and H) compared to the corresponding ADDRESS 1 of the record  that may also cause misalignment.","Misalignment may cause inconvenience when comparing the records as the like data of the records do not line up in the same row. Further, comparing the misaligned records (e.g., the record  and ) may be time consuming.","Various embodiments of systems and methods for aligning records for visual comparison are described herein. In one aspect, the method executed by one or more computers in a network of computers includes identifying a plurality of records, selecting a reference record from the plurality of records, and merging one or more non-reference record into the reference record to generate a merged reference record. The merged reference record includes one or more fields that are missing in the reference record. The missing fields are included as blank fields from the one or more non-reference records. The merged reference record is merged into a non-reference record to generate a merged non-reference record. The merged non-reference record includes one or more fields missing in the non-reference record. The fields are included as blank fields from the merged reference record. A position or order of an included blank field is determined based upon the corresponding order or position of the field in the merged reference record. The merged reference record and the merged non-reference records are, therefore, aligned relative to each other. The merged records are displayed on a user interface in a card view. Displaying merged records (i.e., aligned records) in the card view enable a user to efficiently and conveniently compare the merged records.","These and other benefits and features of embodiments of the invention will be apparent upon consideration of the following detailed description of preferred embodiments thereof, presented in connection with the following drawings.","Embodiments of techniques for aligning records for visual comparison are described herein. In the following description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that the invention can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of the invention.","Reference throughout this specification to \u201cone embodiment\u201d, \u201cthis embodiment\u201d and similar phrases, means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2","b":["201","202","203","204","205"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 3","b":["300","320","310","1","310","1","320","320","310","1","310","1","310","2","330","330","310","2","310","1","340","1","340","1","310","1","310","2","310","1","310","2","310","1","310","1","310","2","340","1","340","1","310","1","340","1","310","2","340","2","310","2","310","2","340","2","340","1","340","1","340","1","310","1","340","1","350","360","360","340","1"]},"A visual comparison task (e.g., match review task) may be assigned to a user. Typically, the user may require to match or compare the plurality of records (-N). The records (-N) may be misaligned. The misaligned records (-N) are required to be aligned so that they can be easily compared. For example, the records (-N) are required to be aligned such that like fields (data) of the records (-N) line up in a same row.","The records (-N) include various fields. For example, the record () for a \u2018customer\u2019 may include fields, e.g., a first name, a middle name, a last name, a contact number, etc. The like fields of the records (-N) are required to be compared. For example, the fields \u2018first name,\u2019 \u2018middle name,\u2019 and \u2018last name\u2019 of the record () are required to be compared with the corresponding fields \u2018first name,\u2019 \u2018middle name,\u2019 and \u2018last name\u2019 of the record (). Typically, the fields of the records (-N) are required to be aligned properly so that the like fields of the records (-N) line up in a same row and the records (-N) can be easily compared.","The records (-N) may be identified by the records aligning module . The records aligning module  aligns the records (-N) relative to each other. For aligning the records (-N), the records aligning module  selects the reference record (). In one embodiment, the reference record () is randomly selected. In another embodiment, the reference record () is selected based upon a predefined rule. For example, the predefined rule may be: \u201ca first record from the plurality of records has to be selected as the reference record.\u201d Based upon the predefined rule the first record () may be selected as the reference record. In yet another embodiment, a master record is selected as the reference record. The master record may be the record selected by the user from the records (-N). For example, the user may select the record () as the master record. The master record () may be selected as the reference record. Once the reference record () is selected, the records (-N) may be passed to the merge algorithm .","In one embodiment, the merge algorithm  is a separate entity communicatively coupled to the records aligning module . In another embodiment, the merge algorithm  is a part of the records aligning module , as illustrated in . The merge algorithm  receives the records (-N). The merge algorithm  identifies the reference record (). The merge algorithm  merges the one or more non-reference records (-N) into the reference record () to generate the merged reference record (). In one embodiment, the merge algorithm  merges each non-reference records (-N) into the reference record () to generate the merged reference record ().","The merged reference record () includes the one or more fields missing in the reference record (). The one or more missing fields are included from the one or more non-reference records (-N). The fields are included as blank fields. In one embodiment, the fields of the reference record () are compared to the fields of each of the non-reference records (-N) to determine the fields missing in the reference record (). The missing fields are included into the reference record () to generate the merged reference record (). The merged reference record (), therefore, is the kind of superset that includes all the fields of all the records (-N). In one embodiment, an order or position of the included blank field in the merged reference record () may be determined based upon a predefined template or a predefined rule. In another embodiment, the order of the included blank field in the merged reference record () may be determined arbitrary.","Once the merged reference record () is generated, the merged reference record () is merged into each non-reference record (-N). When the merged reference record () is merged into each non-reference record (-N), the respective merged non-reference records (-N) are generated. The merged non-reference records (-N) may include one or more fields missing in the corresponding non-reference records (-N). For example, the merged non-reference record () may include the one or more fields missing in the non-reference record (). The fields are included as the blank fields in the positions where the fields are missing. Typically, a value of the blank field is blank.","In one embodiment, the fields of each non-reference record (-N) are compared to the fields of the merged reference record () to determine the one or more fields missing in the one or more non-reference records (-N). The missing fields are included into the merged non-reference records (-N) from the merged reference record (). The fields are included as the blank fields in position where the fields are missing. In one embodiment, the merged reference record () is used as a template for determining the order or position of the included blank field. The order of the blank field in the merged non-reference records (-N) is determined based upon the order of the corresponding field in the merged reference record (). The merged reference record () and the merged non-reference records (-N) are aligned relative to each other.","In below exemplary embodiment, the merging operation is illustrated for aligning the two records (-). The exemplary records (-) are illustrated below with the record () as the reference record and the record () as the non-reference record. The record () and the record () are shown below in table 1 and table 2, respectively.",{"@attributes":{"id":"p-0036","num":"0035"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Name","A"]},{"entry":[{},"Name ID","y"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0037","num":"0036"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Name","A"]},{"entry":[{},"Contact ID","x"]},{"entry":[{},"PAN No.","ABC"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The non-reference record () is merged into the reference record (). As a result of merging, the merged reference record () is generated as shown in table 3 below:",{"@attributes":{"id":"p-0039","num":"0038"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 3"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Name","A"]},{"entry":[{},"Name ID","y"]},{"entry":[{},"Contact ID",{}]},{"entry":[{},"PAN No."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"As shown, the merged reference record () includes the fields \u2018contact ID\u2019 and \u2018Pan no\u2019 that are missing in the reference record (). The missing fields are included into the merged reference record () from the non-reference record (). The fields are included as the blank fields, i.e., the value of the fields \u2018contact ID\u2019 and \u201cPan no\u201d is blank or empty.","The merged reference record () is merged into the non-reference record (). As a result of merging, the merged non-reference record () is generated as represented in table 4 below:",{"@attributes":{"id":"p-0042","num":"0041"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 4"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Name","A"]},{"entry":[{},"Name ID",{}]},{"entry":[{},"Contact ID","x"]},{"entry":[{},"PAN No.","ABC"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"As shown, the merged non-reference record () includes the field \u2018name ID\u2019 missing in the non-reference record (). The field is included from the merged reference record (). The field is included as the blank field, i.e., the value of the included field \u2018Name ID\u2019 is empty or blank. In one embodiment, the order or position of the included blank field (Name ID) is determined based upon the order or position of that field (Name ID) in the merged reference record (). For example, as the field \u2018Name ID\u2019 is a second field of the merged reference record (), therefore, the field \u2018Name ID\u2019 (included as blank field in the merged non-reference record ()) is also included as the second field in the merged non-reference record ().","The merged records (-), i.e., the merged reference record () (illustrated in below table 1) and the merged non-reference record () (illustrated in below table 2) are aligned relative to each other such that the like fields line up in the same row, as shown in table 5 and 6 below:",{"@attributes":{"id":"p-0045","num":"0044"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 5"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Name","A"]},{"entry":[{},"Name ID","y"]},{"entry":[{},"Contact ID",{}]},{"entry":[{},"PAN No."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0046","num":"0045"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 6"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Name","A"]},{"entry":[{},"Name ID",{}]},{"entry":[{},"Contact ID","x"]},{"entry":[{},"PAN No.","ABC"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"In one embodiment, the merging operation is performed using an array representation of the records (-N). The array representation of the records (-N) may be generated by an array generating algorithm  (). In one embodiment, the array generating algorithm  may be a part of the records aligning module , as illustrated in . In another embodiment, the array generating algorithm  may be a separate entity communicatively coupled to the records aligning module .","The records aligning module  passes the records (-N) to the array generating algorithm . The array generating algorithm  traverse each record (-N) to generate an array representation (not shown) of each record (-N). In one embodiment, if the record is hierarchical (e.g., XML records), the array generating algorithm  traverse a tree structure of the hierarchical record to generate the array representation of the hierarchical record. The array generating algorithm  traverse each node of the tree structure to generate the array representation of the hierarchical record. In one embodiment, the tree structure may be a linked list structure stored in a memory.","The generation of the array representation for an exemplary reference record () (shown in below table 7) and the exemplary non-reference record () (shown in below table 8) is described below.",{"@attributes":{"id":"p-0050","num":"0049"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 7"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Customer","A"]},{"entry":[{},"First Name","xyz"]},{"entry":[{},"Last Name","abc"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0051","num":"0050"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 8"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Customer","A"]},{"entry":[{},"First Name","xyz1"]},{"entry":[{},"Middle Name","pqr1"]},{"entry":[{},"Last Name","abc1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"For generating the array representation of the exemplary record (), the array generating algorithm  traverses through a tree structure A () corresponding to the reference record (). Each node (, , A, and B) of the tree structure A is traversed to retrieve the information related to the root node  and the one or more descendants (, A, and B). As shown in , the tree structure A starts with a root node (default node) . The customer may be a child node (i.e., the customer node ) of the root node . Similarly, the \u2018first name\u2019 and the \u2018last name\u2019 may be child nodes A and B, respectively, of the customer node . In one embodiment, the information associated with a node may include one of a name of the node, a number of child nodes associated with the node, a name of a parent node, an occurrence number of the node, properties related to the node representing if the node is hidden or masked, a value of the node, a child index of the node representing if the node is nchild of the parent node (n being a natural number), and one or more comments related to the node.","Based upon the retrieved information of each node (, , A, and B), the array generating algorithm  generates an Array Representation #1 for the record () as presented below:",{"@attributes":{"id":"p-0054","num":"0053"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"public var diffArr1:ArrayCollection = new ArrayCollection(["},{"entry":"{ name:\u201croot\u201d, childIdx:\u201c0\u201d children:1, parentName:\u201c\u201d, occurNum:\u201c1\u201d,"},{"entry":"parentName:\u201c\u201d, hidden:\u201c\u201d, masked:\u201c\u201d, value:\u201c\u201d },"},{"entry":"{ name:\u201cCustomer\u201d, childIdx:\u201c1\u201d, children:2, comment:\u201c\u201d,"},{"entry":"duplicate:\u201ctrue\u201d, groupNum:\u201c1\u201d, hidden:\u201c\u201d, masked:\u201c\u201d, match_score:\u201c\u201d,"},{"entry":"parentName: \u201croot\u201d, occurNum:\u201c1\u201d, recordId:\u201c1\u201d, suspect:\u201cfalse\u201d,"},{"entry":"value:\u201c\u201d },"},{"entry":"{ name:\u201cFirstName\u201d, childIdx:\u201c1\u201d, children:0, parentName:\u201cCustomer\u201d,"},{"entry":"occurNum:\u201c1\u201d, value:\u201cxyz\u201d },"},{"entry":"{ name:\u201cLastName\u201d, childIdx:\u201c2\u201d, children:0, parentName:\u201cCustomer\u201d,"},{"entry":"occurNum:\u201c1\u201d, value:\u201cabc\u201d },"},{"entry":"]);"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Each node (, , A, and B) of the tree structure A is recursively visited to enter information related to the \u2018root node\u2019  and the descendants nodes (customer node , first name node A, and last name node B) into the Array Representation #1.","In the above shown array representation #1, \u201cName\u201d indicates the name of the node. For example, the name of the node may be \u2018root,\u2019 \u2018customer,\u2019 \u2018first name,\u2019 and \u2018last name.\u2019","\u201cChileIdx\u201d represents that the node is nchild of its parent nodes. For example, the ChildIdx of the \u2018root\u2019 node  is \u20180\u2019 as the \u2018root\u2019 node  is not a child of any node, i.e., there is no parent node of the \u2018root\u2019 node . The ChildIdx of the \u2018customer\u2019 node  is \u20181\u2019 as the customer is 1child of its parent node (root node ). Similarly, the ChildIdx of the \u2018first name\u2019 node A is \u20181\u2019 and the ChildIdx of the \u2018last name\u2019 node B is \u20182\u2019 as the \u2018first name\u2019 node and the \u2018last name\u2019 node are 1and 2child of their parent node (customer node ).","\u201cChildren\u201d indicates number of child nodes associated with the node. For example, the children of root node  is \u20181\u2019 as the \u2018root\u2019 node has one child (customer node ), the children of customer node  is \u20182\u2019 as the \u2018customer\u2019 node has two children (first name node A and last name node B), and the children of \u2018first name\u2019 node A and the \u2018last name\u2019 node B is \u20180\u2019 as they both do not have any children.","\u201cParent Name\u201d represents the name of the parent node. For example, the parent name of the \u2018root\u2019 node  is empty as the \u2018root\u2019 node has no parent. The parent name of the \u2018customer\u2019 node  is \u2018root.\u2019 Similarly, the parent name of the \u2018first name\u2019 node A and the \u2018last name\u2019 node B is \u2018customer.\u2019","\u201cValue\u201d indicates the value of the node. For example, the value of the \u2018root\u2019 node  is empty as the root node has no value. Similarly, the value of the \u2018first name\u2019 node A is \u2018xyz\u2019 and the value of the \u2018last name\u2019 node B is \u2018abc.\u2019","\u201cOccurNum\u201d represents the number of occurrence of the node. It represents that the node is occurred n times (n being the natural number). For example, if a record includes three addresses for the customer (i.e., the nodes representing the three addresses would have the same name (address) and share the same parent \u2018customer\u2019) then each address node would be assigned an OccurNum 1, 2, and 3, respectively. Typically, the OccurNum is incremented each time the node with a same name and a same parent node is found.","\u201cComments\u201d shows comments related to the node.","In one embodiment, the descendant node, e.g., the customer node  representing the record () also includes the additional information or attributes related to the record as described in paragraphs 0056-0062.","\u201cHidden\u201d indicates that the value of the node or field is hidden. The hidden field may be illustrated as blank field. Typically, the value of the hidden field is displayed to only one or more authorized users and is not displayed to other (unauthorized) users. If the field is \u2018hidden\u2019 then the value of the field is not displayed.","\u201cMasked\u201d indicates that the value of the node or field is masked (obscured). The value of the masked field is not visible instead some symbols (e.g., *****) may be displayed to represent that it has masked value. For example, the sensitive data such as the value of a credit card number or the user's password may be masked. A number of characters in the symbol illustrating the sensitive data should match the number of characters in the sensitive data. For example, if the sensitive data includes four characters \u2018abcd,\u2019 then the symbol illustrating the sensitive data \u2018abcd\u2019 should also include four \u2018*\u2019 character, i.e., the symbol should be \u2018****.\u2019","\u201cRecordId\u201d is an unique identifier of the record. The RecordId uniquely identify the record in a match group. The match group comprises similar records that fulfill certain match criteria. Alternately, the match group comprises the records that are filtered based upon certain match criteria. For example, the match group comprises the records that are filtered based upon the value of the one or more fields. The match criteria may be for filtering all records having \u2018first name\u2019 equals to \u2018x.\u2019 The match criteria may be specified by the user. The filtered records form the match group.","\u201cGroupNum\u201d represents the group number of the match group to which the record belongs.","\u201cDuplicate\u201d represents if the record is \u2018duplicate\u2019 relative to the master record in the match group. The record is considered \u2018duplicate\u2019 if the record matches the master record to certain extent based upon the match criteria. The duplicate field may be set to \u2018true\u2019 or \u2018false.\u2019 If the duplicate is \u2018true,\u2019 the record is considered duplicate relative to the master record in the group. If the duplicate is \u2018false,\u2019 the record is considered as non-duplicate. The user may set the record as non-duplicate if the user considers that the record does not match the master record to the certain extent based upon the match criteria.","\u201cMatch_score\u201d indicates how much the record matches to the master record selected by the user. For example, it may be 60%, 90%, etc.","\u201cSuspect\u201d indicates a Boolean value (YES or NO) that represents if the record is a suspect record or not. The suspect record is a record that has a match score (e.g., match_score) within a predefined range. The suspect record is required to be reviewed by the user.","Similarly, the array generating algorithm  traverse the tree structure B () of the non-reference record () to retrieve information related to each node of the tree structure B to generate the below array representation #2 for the record ():",{"@attributes":{"id":"p-0072","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"public var diffArr1:ArrayCollection = new ArrayCollection(["},{"entry":"{ name:\u201croot\u201d, childIdx:\u201c0\u201d children:1, parentName:\u201c\u201d, occurNum:\u201c1\u201d,"},{"entry":"parentName:\u201c\u201d, hidden:\u201c\u201d, masked:\u201c\u201d, value:\u201c\u201d },"},{"entry":"{ name:\u201cCustomer\u201d, childIdx:\u201c1\u201d, children:3, comment:\u201c\u201d,"},{"entry":"duplicate: \u201ctrue\u201d, groupNum:\u201c1\u201d, hidden:\u201c\u201d, masked:\u201c\u201d, match_score:\u201c\u201d,"},{"entry":"parentName: \u201croot\u201d, occurNum:\u201c1\u201d, recordId:\u201c1\u201d, suspect:\u201cfalse\u201d,"},{"entry":"value:\u201c\u201d },"},{"entry":"{ name:\u201cFirstName\u201d, childIdx:\u201c1\u201d, children:0, parentName:\u201cCustomer\u201d,"},{"entry":"occurNum:\u201c1\u201d, value:\u201cxyz1\u201d },"},{"entry":"{ name:\u201cMiddleName\u201d, childIdx:\u201c2\u201d, children:0, parentName:\u201cCustomer\u201d,"},{"entry":"occurNum:\u201c1\u201d, value:\u201cpqr1\u201d },"},{"entry":"{ name:\u201cLastName\u201d, childIdx:\u201c3\u201d, children:0, parentName:\u201cCustomer\u201d,"},{"entry":"occurNum:\u201c1\u201d, value:\u201cabc1\u201d },"},{"entry":"]);"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In the above array representation, the \u201croot\u201d corresponds to the root node , \u201ccustomer\u201d corresponds to a customer node , \u201cFirstName\u201d corresponds to a first name node A, \u201cMiddleName\u201d corresponds to a middle name node B, and \u201cLastName\u201d corresponds to a last name node C.","Once the array representations of the records (-) are generated, the Array Representation #2 of the non-reference record () is merged into the Array Representation #1 of the reference record () to generate a merged array representation of the reference record (), as presented below:",{"@attributes":{"id":"p-0075","num":"0074"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"public var diffArr1:ArrayCollection = new ArrayCollection(["},{"entry":"{ name:\u201croot\u201d, childIdx:\u201c0\u201d children:1, parentName:\u201c\u201d, occurNum:\u201c1\u201d,"},{"entry":"parentName:\u201c\u201d, hidden:\u201c\u201d, masked:\u201c\u201d, value:\u201c\u201d },"},{"entry":"{ name:\u201cCustomer\u201d, childIdx:\u201c1\u201d, , comment:\u201c\u201d,"},{"entry":"duplicate:\u201ctrue\u201d, groupNum:\u201c1\u201d, hidden:\u201c\u201d, masked:\u201c\u201d, match_score:\u201c\u201d,"},{"entry":"parentName:\u201croot\u201d, occurNum:\u201c1\u201d, recordId:\u201c1\u201d, suspect:\u201cfalse\u201d,"},{"entry":"value:\u201c\u201d },"},{"entry":"{ name:\u201cFirstName\u201d, childIdx:\u201c1\u201d, children:0, parentName:\u201cCustomer\u201d,"},{"entry":"occurNum:\u201c1\u201d, value:\u201cxyz\u201d },"},{"entry":"{ name:\u201cMiddleName\u201d, childIdx:\u201c2\u201d, children:0, parentName:\u201cCustomer\u201d,"},{"entry":"occurNum:\u201c1\u201d, value:\u201c_\u201d },"},{"entry":"{ name:\u201cLastName\u201d,  children:0, parentName:\u201cCustomer\u201d,"},{"entry":"occurNum:\u201c1\u201d, value:\u201cabc\u201d },"},{"entry":"]);"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The merged array representation of the reference record () includes the field \u201cmiddle name\u201d that is missing in the array representation of the reference record (). In one embodiment, while merging, the fields of the Array Representation #1 are compared to the fields of the Array Representation #2 to determine the fields missing in the Array Representation #1. For example, it may be determined that the Array Representation #2 has the field \u201cmiddle name\u201d that is missing in the Array Representation #1. The missing field is added as the blank field in the Array Representation #1 to generate the merged array representation of the reference record (). The value of the blank field is blank. For example, as shown in the merged array representation, the value of the included field \u201cmiddle name\u201d is blank (underlined in above merged array representation).","Based upon the addition of the missing field (e.g., Middle name), the ChildIdx and the Children information in the merged array representation are updated. For example, as shown in the merged array representation of the reference record (), the ChildIdx and the Children information are updated. The updated ChildIdx and the Children information are underlined in the above merged array representation for reference.","In one embodiment, the merge algorithm  may execute the following merge operations to merge the array representation of one record into another, e.g., to merge the Array Representation #2 (secondCardArray) into the Array Representation #1 (firstCardArray):","Merge Operation: MergeCard2IntoCard1 (firstCardArray, secondCardArray).","When the operation MergeCard2IntoCard1 (firstCardArray, secondCardArray) is executed, the secondCardArray (Array Representation #2) is merged into firstCardArray (Array Representation #1) to generate the merged array representation (MergedfirstCardArray) of the reference record ().","The MergedfirstCardArray is merged into the secondCardArray (Array Representation #2) using the below merge operation to generate the merged array representation of the non-reference record ().","Merge Operation: MergeCard2IntoCard1 (secondCardArray, MergedfirstCardArray).","Similarly, if there are three records (cards) the merge algorithm  may execute the merge operations (i) MergeCard2IntoCard1(firstCardArray, secondCardArray), (ii) MergeCard2IntoCard1(firstCardArray, thirdCardArray), (iii) MergeCard2IntoCard1(secondCardArray, MergedfirstCardArray), and (iv) MergeCard2IntoCard1(thirdCardArray, MergedfirstCardArray). The firstCardArray represents the array representation of the reference record, the secondCardArray represents the array representation of the non-reference record 1, the thirdCardArray represents the array representation of the non-reference record 2, and the MergedfirstCradArray represents the merged array representation of the reference record.","The array representation of the non-reference records (secondCardArray and thirdCardArray) are merged into the array representation of the reference record (firstCardArray) using the operation (i) and (ii). The merging results in generation of the merged array representation of the reference record (MergedfirstCardArray). The MergedfirstCardArray is then merged into the array representation of the non-reference records (secondCardArray and thirdCardArray), using the operations (iii) and (iv), to generate the respective merged array representation of the non-reference records. The merged array representation of the records (MergedfirstCardArray, MergedsecondCardArray, and MergedthirdCardArray) are aligned relative to each other.","In one embodiment, based upon the merged array representations of the records (-N), the merged records (-N) are generated. The merged records (-N) may be in the XML format. In another embodiment, based upon the merged array representation of the records (-N), the merged records (-N) are generated in a suitable format that can be displayed on the UI .","The merged records (-N) are displayed on the UI . The merged records (-N) are displayed in the card view . In the card view , the merged records (-N) are positioned side-by-side or adjacent to each other in a vertical arrangement. In one embodiment, the merged reference record () is displayed at an extreme left in the card view . In one embodiment, the merged master record may be displayed at the extreme left in the card view . For example, if the user selects the record () as the master record then the merged master record () may be displayed at the extreme left in the card view . The master record () is the record against which the other records (-N) are required to be compared. In other embodiments, the left side is replaced with the right side.","While displaying the merged records (-N) on the UI , the blank fields included due to merging are highlighted with a predefined color. If a plurality of consecutive blank fields are added as a result of merging then the consecutive blank fields are highlighted with a different shades of the predefined color. In one embodiment, the consecutive blank fields are highlighted such that alternate blank fields have a same shade of the predefined color.","The below paragraphs describe aligning two exemplary records and displaying the aligned records on the user interface . The exemplary records may be records A and B (illustrated in ) that are required to be aligned. The record A being the reference record and the record B being the non-reference record. The non-reference record B is merged into the reference record A to generate the merged reference record  (). The merged reference record  is merged into the non-reference record B to generate the merged non-reference record  (). The merged records  and  are aligned relative to each other.","As shown in , the merged reference record  includes fields (B, H, H, H, H, and H) that are missing in the reference record A. The missing fields (B, H, H, H, H, and H) are included from the non-reference record B as blank fields. The blank fields (B, H, H, H, H, and H) are highlighted with a predetermined color while rendering the record  on the UI . Further, the plurality of consecutive blank fields H, H, H, H, and H (added as a result of merging) are highlighted with different shades of the predefined color while rendering the record  on the UI . The consecutive blank fields H, H, H, H, and H are highlighted such that the alternate blank fields (H, H, and H) or (H and H) have the same shade of the predefined color.","As illustrated in , the blank fields included due to merging (e.g., the fields H, H, H, H, and H) in the record  are highlighted (illustrated as hashed fields and dotted fields). As the fields H, H, H, H, and H are consecutive fields, the fields are highlighted with different shades of the predefined color such that the alternate blank fields (H, H, and ) have the same shade of the predefined color (illustrated as dotted fields). Further, the alternate fields (H and H) have the same shade of the predefined color (illustrated as hashed fields).","Similarly, the fields included due to merging (e.g., the fields T, F, and E) in the record  are highlighted (illustrated as hashed fields and dotted fields). In one embodiment, the included blank fields T, F, and E are highlighted with the predefined color. As the fields T, F, and E are consecutive fields, the fields may be highlighted with different shades of the predefined color such that the alternate blank fields (T and E) have same shade of the predefined color (illustrated as hashed fields in ).","In one embodiment, the blank fields H and H may be included at new level of hierarchy. For example, the fields \u2018H\u2019 and \u2018H\u2019 added as blank fields due to merging creates new level of hierarchy in the record . As illustrated in , the fields H and H are included at the new or additional hierarchical level in the merged record . The additional level of hierarchy is displayed on the UI  with an empty branch icon (A-B). The empty branch icons A and B are expandable and collapsible. The empty branch icon (A-B) is expanded or collapsed to display or hide one or more fields included within the additional level of hierarchy. For example, the empty branch icon A may be collapsed to hide the fields H and H included within the additional level of hierarchy H.","In one embodiment, the UI  includes several enhancements to enable the user to improve the reviewing and comparing task. For example, the UI  includes a title column  () prefixed to the merged reference record  positioned at the extreme left. In another embodiment, the horizontal positions are reversed and the position is on the right. As illustrated, the title column  includes names (first name, middle name, last name, address, street, house number, etc) corresponding to each field of the displayed records ( and ). For example, the \u201cfirst name\u201d is displayed corresponding to the fields A and A of the displayed records  and .","In one embodiment, the UI  includes status columns corresponding to each displayed non-master records (-N). The status columns may be prefixed to the respective records (-N). For example, considering the reference record  as the master record, the UI  includes the status column  () prefixed to the non-master record . The status column  includes status corresponding to each field of the non-master record . In one embodiment, the status column  includes a status icon to indicate \u2018match\u2019 or \u2018no-match\u2019 of the field value with the corresponding field value of the master record . For example, the status column  includes the icon \u2018\u00b0\u2019 to indicate \u2018match\u2019 and an icon \u2018\u00d7\u2019 to indicate \u2018no-match,\u2019 as illustrated in .","In one embodiment, the UI  includes a hide-and-show option (not shown). The hide-and-show option hides or shows a specified field or row corresponding to all the displayed records (-N). In one embodiment, if any one of the displayed record is scrolled all other records are scrolled accordingly (i.e., synchronized scrolling). For example, if the record () is scrolled then all other displayed records (-N) are also scrolled accordingly or concurrently. Similarly, if the field of any record, e.g., record (), is selected then the corresponding fields of all other records, e.g., the records (-N), are also selected automatically (i.e., synchronized selection).","In one embodiment, each displayed record (-N) includes a drag-and-drop feature. The drag-and-drop feature enables the user to drag a field within the record. For example, the user may select the field \u2018C\u2019 of the record  and drags the selected field \u2018C.\u2019 The dragged field C is droppable within the same record  and on the same level of hierarchy from where the field C is dragged. For example, the field C may be dropped in position of B within the record . In one embodiment, if the user attempts to drop the field C on different level of hierarchy, e.g., on field H, then either an error message is displayed or there is a failure in dropping the field.","In one embodiment, the resultant records (-N) rendered on the UI  include the \u201cmatch_score\u201d field denoted the match score. For example, as illustrated in , the records  and  include the match_score field A and B, respectively. The match_score (A-B) indicates a percentage of match of the record with the master record. For example, if the user selects the record  as the master record then the match_score B of the record  shows the percentage of match of the record  with the master record . In one embodiment, if the match_score B of the record  is above a predefined maximum value (e.g., 90%), the record  is approved and is not required to be manually reviewed. In one embodiment, if the match_score B is below a predefined minimum value (e.g., 45%) the record  is discarded. In another embodiment, if the match_score B is in between the predefined minimum value and the predefined maximum value (e.g., in between 45% and 90%), the record  is a suspected record that is required to be reviewed manually. In yet another embodiment, the match_score A of the master record  may be empty (blank). In one embodiment, based upon the drag-and-drop operation, the match_score B of the non-master record  is updated. In another embodiment, the match_score B may be updated based upon triggering the hide and show option.","In one embodiment, the non-master records (-N) includes a suspect flag. For example, the non-master record  includes a suspect flag . The suspect flag  indicates if the record  is a suspected record. In one embodiment, the record  is the suspected record if its match_score B is within a predefined range, e.g., more than the minimum predefined value and less than the maximum predefined value. The suspected record  is required to be reviewed. In another embodiment, a background of the suspected record may be highlighted with another predefined color (not illustrated) while displaying the record on the UI .","In one embodiment, if the merging is not performed successfully, the original records (-N) are displayed on the UI  in the card view. If the merging is not performed successfully, the records (-N) may be unaligned in the card view. In another embodiment, if the merging is not performed successfully, an error message may be displayed on the UI .","In one embodiment, the merged array representation includes some markers. A marker (e.g., a counter) may help in highlighting the fields while converting the array representation into the XML record. In another embodiment, the array representation may include the markers to indicate that the value of the field in the merged non-master record is different from the value of the corresponding field in the merged master record. If the value of the field in the merged non-master record is different from the value of the corresponding field in the merged master record, the field(s) of the merged non-master record may be highlighted with a specific predefined color while rendering the merged non-master record on the UI .",{"@attributes":{"id":"p-0099","num":"0098"},"figref":"FIG. 10","b":["310","1","310","1","400","310","1","310","1","1001","310","1","310","2","310","2","310","1","310","1","1002","310","2","310","1","310","1","340","1","310","2","1003","340","1","1004","310","2","340","2","1005","340","1","340","1","340","1","350","1006"]},{"@attributes":{"id":"p-0100","num":"0099"},"figref":"FIG. 11","b":["310","1","330","1101","1101","310","1","350","1102","310","1","350","1101","340","1","350","1103","1101","1104","1104","1105","340","1","350","360","1106"]},"The embodiments described above provide techniques to align records. Filler rows (blank fields) are included or added in place of the missing data in each record to align the records relative to each other. The records are aligned such that the like data fields of the records line up in the same row. Further, rendering the aligned records in the card view enables a convenient and efficient comparison. Consequently, the user can perform a better visual scanning Moreover, the UI enhancements, e.g., the drag-and-drop feature, the background color highlighting, the status column, the title column, the suspect flag, etc., further improve the reviewing and comparing tasks. Additionally, the technique is flexible to adapt to various record formats and to any levels of hierarchy.","Some embodiments of the invention may include the above-described methods being written as one or more software components. These components, and the functionality associated with each, may be used by client, server, distributed, or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as, functional, declarative, procedural, object-oriented, lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively, the components maybe implemented in server and client applications. Further, these components may be linked together via various distributed programming protocols. Some example embodiments of the invention may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example, a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level (e.g., a graphical user interface). These first and second computer systems can be configured in a server-client, peer-to-peer, or some other configuration. The clients can vary in complexity from mobile and handheld devices, to thin clients and on to thick clients or even other servers.","The above-illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store, encode, or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described, represented, or illustrated herein. Examples of computer readable storage media include, but are not limited to: magnetic media, such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROMs, DVDs and holographic indicator devices; magneto-optical media; and hardware devices that are specially configured to store and execute, such as application-specific integrated circuits (\u201cASICs\u201d), programmable logic devices (\u201cPLDs\u201d) and ROM and RAM devices. Examples of computer readable instructions include machine code, such as produced by a compiler, and files containing higher-level code that are executed by a computer using an interpreter. For example, an embodiment of the invention may be implemented using Java, C++, or other object-oriented programming language and development tools. Another embodiment of the invention may be implemented in hard-wired circuitry in place of, or in combination with machine readable software instructions.",{"@attributes":{"id":"p-0104","num":"0103"},"figref":"FIG. 12","b":["1200","1200","1205","1255","1200","1240","1255","1210","1215","1210","1215","1205","1215","1200","1225","1230","1200","1225","1230","1200","1235","1200","1250","1250","1200","1245","1200","1220","1260","1260","1260","1250","1260"]},"A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases, such as, relational, transactional, hierarchical, multi-dimensional (e.g., OLAP), object oriented databases, and the like. Further data sources include tabular data (e.g., spreadsheets, delimited text files), data tagged with a markup language (e.g., XML data), transactional data, unstructured data (e.g., text files, screen scrapings), hierarchical data (e.g., data in a file system, XML data), files, a plurality of reports, and any other data source accessible through an established protocol, such as, Open DataBase Connectivity (ODBC), produced by an underlying software system, e.g., an ERP system, and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams, broadcast data, and the like. These data sources can include associated data foundations, semantic layers, management systems, security systems and so on.","In the above description, numerous specific details are set forth to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however that the invention can be practiced without one or more of the specific details or with other methods, components, techniques, etc. In other instances, well-known operations or structures are not shown or described in details to avoid obscuring aspects of the invention.","Although the processes illustrated and described herein include series of steps, it will be appreciated that the different embodiments of the present invention are not limited by the illustrated ordering of steps, as some steps may occur in different orders, some concurrently with other steps apart from that shown and described herein. In addition, not all illustrated steps may be required to implement a methodology in accordance with the present invention. Moreover, it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.","The above descriptions and illustrations of embodiments of the invention, including what is described in the Abstract, is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of, and examples for, the invention are described herein for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as those skilled in the relevant art will recognize. These modifications can be made to the invention in light of the above detailed description. Rather, the scope of the invention is to be determined by the following claims, which are to be interpreted in accordance with established doctrines of claim construction."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. The embodiments of the invention, together with its advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 7","FIG. 6","FIG. 6"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 8","FIG. 6"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 9","FIG. 8"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
