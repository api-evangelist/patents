---
title: Methods and apparatus for switching fibre channel arbitrated loop devices
abstract: Methods and apparatus for switching Fiber Channel Arbitrated Loop Systems is provided between a plurality of Fiber Channel Loop devices. In one aspect of the invention, the system switches based at least in part on arbitrated loop primitives. An exemplary interconnect system may include a first port and a second port, both including port logic to monitor certain arbitrated loop primitives, a connectivity apparatus, a route determination apparatus including a routing table consisting of ALPA addresses and their associated ports, the route determination apparatus coupled to each port and the connectivity apparatus, where the connectivity apparatus creates paths between the ports based on arbitrated loop primitives. In one embodiment, the connectivity apparatus is a crossbar switch. Examples of the arbitrated loop primitives that cause the switch to create paths between ports includes one or more of the following: ARB, OPN and CLS. In yet other aspects, the system ensures device access fairness through one or more techniques, including a rotating priority system, a counter to count the number of OPNs, especially sequential OPNs, and/or priority based on port type. Device zoning may be implemented. In one implementation, the system includes trunking such that frames may be transferred on multiple ports.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07664018&OS=07664018&RS=07664018
owner: Emulex Design & Manufacturing Corporation
number: 07664018
owner_city: Costa Mesa
owner_country: US
publication_date: 20030701
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION INFORMATION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","OBJECTS OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","Router Control Register # Definition","Router Control Register # Definition","Router Data Rate\/SW Matrix Configuration Register Definition","CPU Port Register Summary","SOC422 Signal Signal Descriptions"],"p":["This application claims priority to U.S. Provisional Application No. 60\/393,164, filed Jul. 2, 2002, entitled \u201cMethod and Apparatus for Switching In a Fibre Channel Network\u201d and U.S. Provisional Application No. 60\/395,107, filed Jul. 10, 2002, entitled \u201cSystem and Method for Multiple Trunk Connections Between Fibre Channel Switches\u201d, both of which are incorporated herein by reference as if fully set forth herein.","Fibre Channel is an American National Standards Institute (ANSI) set of standards which describes a high performance serial transmission protocol which supports higher level storage and networking protocols such as HIPPI, IPI, SCSI, IP, ATM, FDDI and others. Fibre Channel was created to merge the advantages of channel technology with network technology to create a new I\/O interface which meets the requirements of both channel and network users. Channel technology is usually implemented by I\/O systems in a closed, structured and predictable environment where network technology usually refers to an open, unstructured and unpredictable environment.","Advantages of Fibre Channel include the following. First, it achieves high performance, which is a critical in opening the bandwidth limitations of current computer to storage and computer to computer interfaces at gigabit speeds. Second, utilizing fiber optic technology, Fibre Channel can overcome traditional I\/O channel distance limitations and interconnect devices over distances of 6 miles at gigabit speeds. Third, it is high level protocol independent, enabling Fibre Channel to transport a wide variety of protocols over the same media. Fourth, Fibre Channel uses fiber optic technology which has very low noise properties. Finally, cabling is simple in that Fibre Channel typically replaces bulky copper cables with small lightweight fiber optic cables.","Fibre Channel supports three different topologies, point-to-point, arbitrated loop and fabric attached. The point-to-point topology attaches two devices directly. The arbitrated loop topology attaches devices in a loop. The fabric attached topology attaches a device directly to a fabric.","In a Fibre Channel Arbitrated Loop topology up to 126 devices and one connection to a fabric switch may exist in a single Arbitrated Loop Physical Address (ALPA) space. Data within an ALPA space physically travels from node to node in a daisy-chain fashion, ultimately traveling in a loop. Control by a device on the loop is obtained through the process of loop arbitration, after which the device winning arbitration sends data. In a half duplex mode, only one device is transferring data at any point in time. In a full duplex mode, two devices may communicate with each other at the same time.","Generally, the disadvantages of the Arbitrated Loop topology include: first, it is a blocking topology, that is, only a single connection between a pair of nodes is allowed at any point in time (excluding the broadcast mode). Second, device buffering occurs in each device as it has a six word buffer, creating a delay of up to 225 nanoseconds. This delay is additive with each device in the loop. The delay creates overhead for the communicating devices when a large number of devices are connected to a loop. Third, distance also adds delay to a loop and is additive for each device. Fourth, robustness is an issue since all devices are on one loop any device failure will cause the entire loop to fail or reset. Fifth, the total bandwidth available is limited to the bandwidth of the loop itself.","Loop devices are typically interconnected on an Arbitrated Loop with a hub. The hub is a passive device, that is a loop exists within the hub. A hub in most cases maintains the loop's integrity when devices are removed, powered off, or fail by using port bypass circuits. Hubs simply receive and redrive the signals to individual devices.","Hub advantages include low cost, low complexity, ease of use and interoperable with a large number of Fibre Channel Arbitrated Loop supported devices.","There are also many disadvantages when interconnecting Fibre Channel Arbitrated Loop devices with hubs: First, hubs do not address the blocking nature of the loop topology. Second, jitter is propagated from bypassed nodes. This additive affect causes loop instability when a large number of devices are interconnected. Third, when data is currently being transferred and a device attached to a hub is powered off or fails, the loop could be reset which is destructive to the communicating devices. Fourth, if a device is inserted into a live loop the loop will be reset which is destructive to the communicating devices.","In Berman U.S. Pat. No. 6,185,203, entitled \u201cFibre Channel Switching Fabric\u201d, there is disclosed apparatus which comprises separate port control modules, one for each attached device, a central router module, a switch core module, a fabric control module and a brouter (bridge\/router) module. The port control modules are connected to the router modules by separate route request connections and separate route response connections. Through this structure, route requests may be provided from the port control module to the router while simultaneously the router provides route request responses to the same port control module. Preferably, a common route request channel is utilized. Thus, apparatus is provided to return a route response to a previously requesting port while other ports are arbitrating and sending route requests to the centralized router. More generally, this apparatus provides for reading resource requests from multiple requesters while at the same time returning resource grant responses to previous requesters.","In Berman U.S. Pat. No. 6,118,776, entitled \u201cMethods And Apparatus For Fiber Channel Interconnection Of Private Loop Devices\u201d, methods and apparatus are provided for Fiber Channel interconnection between a plurality of private loop devices through a Fiber Channel private loop device interconnect system. In the preferred embodiments, the Fiber Channel private loop device interconnect system is a fabric or an intelligent bridging hub. In one aspect, a Fiber Channel private loop device is connected to two or more Arbitrated Loops containing, or adapted to contain, one or more private loop devices. Preferably, the interconnect system includes a routing filter to filter incoming Arbitrated Loop physical addresses (ALPAs) to determine which Fiber Channel frames must attempt to be routed through the fabric. Numerous topologies of interconnect systems may be achieved. In another aspect, a method is provided for implementing a logical loop of private loop devices by switching the logical loop into a plurality of sets, assigning each set to a physical Arbitrated Loop and connecting the Arbitrated Loops to a Fiber Channel private loop device interconnect system. Additional methods are provided for restricting attached devices to Arbitrated Loop physical addresses within certain ranges. Additionally, methods are provided for resetting hosts, the method generally comprising the steps of detecting the addition of a storage device to a first Arbitrated Loop, and thereafter, resetting the Arbitrated Loop or loops on which a host or hosts reside on second Arbitrated Loop. Methods for operation with use of SCSI initiators generate a link service reject when no address match is found, or when an address match is found, but where no device with the destination ALPA exists on the Arbitrated Loop corresponding to the destination.","What is needed is an ability to interconnect Fibre Channel Arbitrated Loop devices in a low cost and simple to deploy manner.","As such, it is the goal of this invention to provide apparatus and methods that solves or mitigates these problems with a resulting solution that is low cost and easy to deploy and manage.","Methods and apparatus for switching Fibre Channel Arbitrated Loop Systems is provided between a plurality of Fibre Channel Loop devices. In one aspect of the invention, the system switches based at least in part on arbitrated loop primitives. An exemplary interconnect system may include a first port and a second port, both including port logic to monitor certain arbitrated loop primitives, a connectivity apparatus, a route determination apparatus including a routing table consisting of ALPA addresses and their associated ports, the route determination apparatus coupled to each port and the connectivity apparatus, where the connectivity apparatus creates paths between the ports based on arbitrated loop primitives. In one embodiment, the connectivity apparatus is a crossbar switch. Examples of the arbitrated loop primitives that cause the switch to create paths between ports includes one or more of the following: ARB, OPN and CLS.","Yet another version of the system for interconnecting Fibre Channel Arbitrated Loop devices comprises a first Arbitrated Loop containing one or more Fibre Channel arbitrated loop devices, a second Arbitrated Loop Device, a Fibre Channel arbitrated loop interconnect system, the interconnect system including a first port containing port logic coupled to the first Arbitrated Loop, a second port containing port logic coupled to the second Arbitrated Loop, and route determination apparatus for selecting a route between ports, where the said route determination apparatus selecting routes based on received Fibre Channel Arbitrated Loop primitives from the ports and including a routing table containing ALPA addresses and their associated ports, and connectivity apparatus coupled to the first and second ports and to the route determination apparatus for switching frames between ports under control of the route determination apparatus. Again, the connectivity apparatus may be a crossbar switch, and the Arbitrated Loop primitives may be ARBs, Opens and Closes.","In yet another aspect of the invention, methods and apparatus for trunking are provided. By way of example, such a system for interconnecting Fibre Channel Arbitrated Loop devices may comprise a first Fibre Channel Arbitrated loop switch, a second Fibre Channel Arbitrated loop switch, both including port logic, connectivity apparatus and route determination logic, the route determination logic creating routes based on the receipt of certain arbitrated Loop primitives, such as ARB, OPN and CLS, characterized wherein the first and second loop switches are interconnected by two or more Fibre Channel Arbitrated Loop links and transfer frames on both ports.","In yet another aspect of the invention, systems and methods attempt to ensure device access fairness in a Fibre Channel Arbitrated Loop system. Such a system may include a plurality of Fibre Channel Arbitrated Loop ports each including port logic, a route determination apparatus, a connectivity apparatus, and logic implementing predefined loop control criteria to enforce fairness. By way of example, the predefined loop control criteria implemented by the logic may limit the number of times a connected device opens another device. More particularly, it may limit the number of times a connected device sequentially opens another device. This may advantageously be implemented by a counter to count the number of opens, particularly sequential opens. Optionally, the system may proactively close a device. In yet another aspect regarding fairness, the ports may be assigned different access priorities, such as based on port type. In yet another aspect, a rotating priority system may aid in ensuring device access fairness.","In yet another aspect of the invention, device zoning in employed in a Fibre Channel Arbitrated Loop System. An exemplary system would include a plurality of Fibre Channel Arbitrated Loop ports each including port logic, a route determination apparatus, connectivity apparatus, e.g., a crossbar switch, adapted to connect the Fibre Channel Arbitrated Loop ports based on the receipt of certain Fibre Channel Arbitrated Loop primitives, whereby a LIP received on said first port is selectively propagated to one or more of the ports.","Accordingly, it is an object of this invention to provide a Fibre Channel Arbitrated Loop system that effectively and efficiently switches based at least in part based on arbitrated loop primitives, such as ARB, OPN and CLS.","It is yet another objective of these inventions to provide systems and methods having improved device access fairness.","It is yet another objective of these inventions to provide systems having trunking, such that frames may be transferred on multiple ports.","It is yet another object of the invention to provide a system and method that employs Device Zoning.","The abbreviations used in this specification are be defined in this paragraph. The Arbitrated Loop Physical Address (\u201cALPA\u201d or \u201cAL_PA\u201d) is an 8-bit address of a device on a Fibre Channel-Arbitrated Loop protocol (\u201cFCAL\u201d or \u201cFC-AL\u201d) loop. The Arbitrated Loop Timer (AL_TIME) defined in the AL standard has a default value of 15 ms. \u201cARB\u201d is a fiber channel arbitrate primitive (ordered set) that is used to gain control of the loop. A close fibre channel primitive (CLS) is used to close a connection. An open fibre channel primitive (OPN) is used to open a connection to a specific device identified by ALPA (see FCAL). \u201cAPI\u201d is an Application Programming Interface. \u201cASIC\u201d is an Application Specific Integrated Circuit. \u201cBeaconing\u201d refers to flashing LEDs on a port for drawing attention of service personnel. A \u201cLoop Switch\u201d is a switch that switches on FCAL primitives such as ARB, OPN, and CLS and contains a crossbar Switch, router, and port logic. \u201cSOC422\u201d is a Vixel product for a Loop Switch on a single ASIC. A Bufferless Loop Switch (BLS) is a Fibre Channel (FC) Arbitrated Loop interconnect device that switches based on FC-AL primitives. The connection nominally between two hubs is called a \u201cCascade\u201d and the arbitration mechanism is modified to promote fair system operation. A Cyclic Redundancy Check (CRC) is used to check data integrity of a data frame. A \u201cDeer In the Headlights\u201d (DITH) algorithm is used by the Loop Switch ASIC to make the Serial Number Exchange on Connect (SEOC) information transfer meet FC-AL specification. SEOC is a protocol that is used to exchange serial numbers before connection for Fibre Channel FC-AL interconnect devices. \u201cDynamic Load Balancing\u201d is the ability to steer frame traffic over two or more links between the same two Loop Switches. Electrical WRAP (EWRAP) is a loopback signal to a transceiver. An \u201cEEPROM\u201d is an Electrically Erasable and Programmable ROM. Fibre Channel Media Access Control (FC MAC) implements FC0, FC1, and some of FC2 ANSI Fibre Channel functions. A \u201cFPGA\u201d is a Field Programmable Gate Array. An \u201cFL_Port\u201d is a Fabric Port (F_Port) which contains the Loop Port State Machine defined by FCAL. \u201cGBIC\u201d is a Giga-Bit Interface Converter. \u201cGbps\u201d is Giga Bit Per Second. \u201cHard Zones\u201d are zones or areas that are separate from each other, i.e. no Fiber Channel frames or Arbitrated Loop primitives pass through the zones. \u201cHBA\u201d is a Host Bus Adapter. \u201cHub Emulation Mode\u201d is a mode where the Loop Switch emulates as a hub by wiring all ports together, the result being similar to a hub connection. \u201cIC\u201d is an Inter-Integrated Circuit protocol. \u201cJust a Bunch of Disks\u201d (JBOD) is a group of FC-AL disks in a single enclosure connected by port bypass means. The Loop Initialization Master (LIM) is the L_Port responsible for initializing the loop. The Loop Initialization Primitive Sequence (LIP) includes any of the LIP Primitive Sequences (see FCAL). Blocking the propagation of LIPs is called \u201cLIP Blocking\u201d and used on ports of the Loop Switch to avoid disrupting any communications. The Loop Switch will propagate a LIP to a list of devices (LIP Zones) if received by any device in the zone. \u201cLPB\u201d is Loop Port Bypass Primitive Sequence. \u201cLPE\u201d is a Loop Port Bypass Primitive Sequence. \u201cLPSM\u201d is a \u201cLoop Port State Machine.\u201d A Node Port (N-Port) which contains the Loop Port State Machine defined in FCAL is called a \u201cNL_Port.\u201d \u201cOrdered Set\u201d (OS) is a fiber channel primitive that is 4 bytes in length. \u201cPOST\u201d is Power-On Self Test. \u201cRAR\u201d is Register-Select-Register. \u201cSwitched Bunch of Disks\u201d (SBOD) is a group of FC-AL disks in a single enclosure connected by a switch. \u201cSwitching (or Segmenting) mode\u201d is a mode of the Loop Switch that utilizes the crossbar switch to make simultaneous non-blocking connections to devices attached to different ports. The connections are created by OPN primitives and closed by CLS primitives. \u201cSerdes\u201d is Serializer\/Deserializer. \u201cSerial ID\u201d is a type of GBIC with a serial EEPROM that contains configuration data. \u201cSFP\u201d is a Small Form Factor transceiver. \u201cSmart Insertion Algorithm\u201d is an algorithm that adds choices to determine to declare the port as operational. \u201cSN\u201d is Serial Number. \u201cStall\u201d refers to a connection which has been opened in a Loop Switch, but has not used for a period of time. \u201cStealth mode\u201d is a mode where not all Loop Primitives and\/or Fibre Channel frames are propagated to all devices. \u201cStealth LIP isolation\u201d refers to a limited propagation LIPs to all devices. A \u201cString Cascade\u201d is a Cascade connection where each Loop Switch connected via string is treated as a single logical device on a virtual loop. An ARBx must circle the entire string cascade chain to win control and place an OPN on the cascade. A \u201cTree Cascade\u201d is a Cascade connection where each Loop Switch arbitrates with only the immediately adjacent hub for control of the link before placing its OPN on the cascade. \u201cTrunking\u201d uses multiple connections between Loop Switches to provide increased bandwidth. \u201cUSER\u201d is a user-defined ordered set.","Table of Contents","1. Definitions","2. Loop Switch Feature Set","3. Functional Overview\n\n","4. Architectural Description\n\n","5. Functional Description\n\n","6. Register Definitions for Vixel's SOC422 Loop Switch\n\n","7. Signal Descriptions","1. Definitions","Abbreviation Description",{"@attributes":{"id":"p-0085","num":"0000"},"ul":{"@attributes":{"id":"ul0025","list-style":"none"},"li":["SOC422\u2014Vixel's Loop Switch on a single ASIC product.","ARB\u2014Fiber channel arbitrate primitive (ordered set). Used to gain control of the loop.","AL_TIME\u2014Arbitrated Loop Timer: Timer defined in AL standard with default value =15 ms.","ALPA\u2014Arbitrated Loop Physical Address: 8 bit address of device on FC-AL loop","AL_PA\u2014Arbitrated Loop Physical Address: 8 bit address of device on FC-AL loop","API\u2014Application Programming Interface","ASIC\u2014Application Specific Integrated Circuit","Beaconing\u2014Flashing LEDs on a port to draw attention for service personnel.","Bufferless Loop Switch (BLS)\u2014a Fibre Channel Arbitrated Loop interconnect device that switches based on Fibre Channel Arbitrated Loop primitives.","Cascade\u2014Connection nominally between two hubs. Arbitration mechanism is modified to promote fair system operation.","CLS\u2014Close fibre channel primitive. Used to close a connection.","CRC\u2014Cyclic Redundancy Check. Used to check data integrity of a data frame.","DITH\u2014Deer In The Headlights. Algorithrn used by the Loop Switch ASIC to make the","SEOC\u2014information transfer meet the FC-AL specification.","Dynamic Load Balancing\u2014the ability to steer frame traffic over two or more links between the same two Loop Switches","EWRAP\u2014Electrical WRAP: Loopback signal to a transceiver","EEPROM\u2014Electrically Erasable & Programmable ROM","FC\u2014Fibre Channel","FC-AL\u2014Fibre Channel\u2014Arbitrated Loop protocol","FC MAC\u2014Fibre Channel Media Access Control. Implements FC, FC and some of FC \u2014ANSI Fibre Channel functions.","FPGA\u2014Field Programmable Gate Array","FL_Port\u2014An F_Port (i.e., Fabric Port) which contains the Loop Port State Machine defined by FCAL","GBIC\u2014Giga-Bit Interface Converter","Gbps\u2014Giga Bit Per Second","Hard Zones\u2014zones or areas that are separate from each other, i.e., no Fibre Channel frames or Arbitrated Loop primitives pass through the zones.","HBA\u2014Host Bus Adapter","Hub Emulation Mode\u2014A mode where the Loop Switch emulates a hub by wiring all ports together, the result being similar to a hub connection.","IC\u2014Inter-Integrated Circuit protocol (IC)","JBOD\u2014Just a Bunch Of Disks. A group of FC-AL disks in a single enclosure connected by port bypass means.","LIM\u2014Loop initialization master\u2014the L_Port which is responsible for initializing the Loop.","LIP\u2014Loop Initialization Primitive Sequence\u2014any of the LIP Primitive Sequences, see FCAL","LIP Blocking\u2014The act of blocking the propagation of LIPs. Used on ports of the Loop Switch so as not to disrupt any communications.","LIP Zones\u2014A list of devices that the Loop Switch will propagate a LIP if received by any device in the zone.","Loop Switch\u2014A switch that switches on FCAL primitives such as ARB, OPN and CLS, contains a crossbar Switch, router and port logic.","LPB\u2014Loop Port Bypass Primitive Sequence","LPE\u2014Loop Port Bypass Primitive Sequence","LPSM\u2014Loop Port State Machine","NL_Port\u2014An N_Port (i.e., Node Port) which contains the Loop Port State Machine defined in FCAL","OPN\u2014Open fibre channel primitive used to open a connection to a specific device identified by ALPA, see FCAL","OS\u2014Ordered Set: A fiber channel primitive, 4 bytes in length","POST\u2014Power-On Self Test","RAR\u2014Register-Select-Register","SBOD\u2014Switched Bunch Of Disks. A group of FC-AL disks in a single enclosure connected by a switch.","Switching or Segmenting mode\u2014A mode of the Loop Switch that utilizes the crossbar switch to make simultaneous non-blocking connections to devices attached to different ports. The connections are created on OPNs and closed by CLS loop primitives.","SEOC\u2014Serial number Exchange On Connect. A protocol used to exchange serial numbers before connection for Fibre Channel FC-AL interconnect Devices.","Serdes\u2014Serializer\/Deserializer","Serial ID\u2014A type of GBIC with a serial EEPROM that contains configuration data.","SFP\u2014Small Form Factor transceiver","Smart Insertion Algorithms\u2014algorithm that adds choices to when to determine to declare the port as operational","SN\u2014Serial Number","Stall\u2014A connection which has been opened in a Loop Switch, but not used for a period of time","Stealth mode\u2014a mode where not all Loop Primitives and\/or Fibre Channel frames are propagated to all devices","Stealth LIP isolation\u2014limited the propagation of LIP's to all devices","String Cascade\u2014Cascade connection where each Loop Switch connected via string is treated as a single logical device on a virtual loop. An ARBx must circle the entire string cascade chain to win control and place an OPN on the cascade.","Tree Cascade\u2014Cascade connection where each Loop Switch arbitrates with only the immediately adjacent hub for control of the link before placing its OPN on the cascade.","Trunking\u2014Using multiple connections between Loop Switches to provide increased bandwidth","USER\u2014A user-defined ordered set\n\n2. Loop Switch Feature Set\n"]}},"The following describes the features of the Loop Switch by discussing the implementation contained in a Vixel based product, the SOC422. Although the foregoing describes on implementation a Loop Switch it may be readily apparent to those of ordinary skill in the art in light of the teachings of this invention that certain changes and modifications may be made thereto without departing from the spirit or scope of the described implementation or invention. It should be noted that implementations of the Loop Switch include the Vixel SOC422.","22 port ASIC with internal serdes supporting 1, 2 or 4 Gb\/s Fibre Channel data rates (number of ports can expand both up and down for higher and lower port ASIC).","Supports single and multiple cascade connection(s) between hub emulation mode or switching (segmenting) mode Loop Switches without processor assistance. In switching (segrnenting) mode, duplicate cascade connections support dynamic load balancing with firmware support. In loop mode, multiple cascade connections are bypassed, only the primary cascade connection is active.","Supports either a parallel processor interface with 16 address, 16 data, RD, WR, CS and Interrupt lines or an IC interface. These interfaces provide read and write access to the internal register set.","Optional EEPROM provides configuration information for cascades, duplicate cascades, serdes configuration and port configuration for operation without a processor.","Can operate in hub emulation mode or switching (segmenting) mode.","Supports cascading of multiple Loop Switch ASICs.","Supports 16 non-overlapping hard zones with LIP isolation in switch mode without processor assistance.","Supports overlapping hard zones in switching (segmenting) mode.","Supports zone isolation (LIP blocking) in hub emulation mode and switching (segmenting) mode.","Supports Stealth LIP isolation with overlapping LIP zones across multiple ASIC systems.","Supports in-band Interswitch Frames.","Supports the following port functions:\n\n","Port LED functionality. In switching mode, each port has a port activity LED.","Programmable replacement of Idles with ARBff or other user specified ARB types for EMI emission reduction.","Any port can be configured to passively snoop on any other port, via management. For use by an analyzer to diagnose port and loop operation.","An external loopback path for attached devices to verify link to switch is good.","Provide a bad transmission character count (24 bits) per port.","Provide a CRC error count (8 bits) for each port.","Provide ability to transmit ordered sets to a port before or after insertion into loop. While in the loop, ordered sets can be transmitted a programmable number of times or continuously.","Provide a frequency check function utilizing elasticity buffer inserts\/deletes.","Support for reading the serial ID from. GBICs\/SFPs that support IC interface.","Provide port loop utilization counter. Measures % of bandwidth used for data, or % of time a switching connection is active or requested.","Implements unique fairness scheme to guarantee equal port access for each device.","Provides ability to isolate LIPs on a port basis.","Uses Odd parity to monitor the integrity of the data paths through each port.","Compares the destination ID in each frame to the destination ALPA in the last OPN to validate frame routing.","Provides a register interface to monitor system status signals.","Provide a shift register interface to drive the LEDs (to save pins).","An environment monitoring function that accepts input from a temperature sensor or stuck fan rotor sensors and report the failure in a status register as well as drive an LED.","Control of Management Ethernet Activity LED. Takes input from the card to drive LED.","Controls Loopstate LED to indicate whether loop is up or trying to complete initialization.","Provide LED selftest mode after reset, where LEDs are turned on for 2 seconds then turned off for 2 seconds and then return to normal mode.","External status bit to indicate presence of management card to control special operating modes.","CPU Port (Fibre Channel MAC, FC) functions\n\n","The Loop Switch has the ability to operate in different modes. The two basic modes are hub emulation mode and switching (segmenting) mode. In addition, variations on each mode allow Loop Switch to meet a range of different system requirements.","3.1 Hub Emulation Mode (Shared Bandwidth)","The Fibre Channel Arbitrated Loop standard defines a topology that allows many devices to be connected together in a ring configuration, see . The transmitter of one device is connected to the receiver of another device and so on until the last device's transmitter is connected back to the first device's receiver.","Of course, the problem with this configuration is that each interconnect , , , , , ,  and each node , , , , , , , becomes a single point of failure for the entire loop. If any device or link fails, all communication stops. This is where the hub is deployed, see . A hub  converts the ring topology of an Arbitrated Loop into a star topology that provides for simpler cable installation.","A hub also provides a mechanism to bypass unused or malfunctioning nodes or interconnects to keep the loop operational. As shown in , Node   has a broken fiber  that would normally render the loop inoperable. The hub  bypasses through  the port that has Node  connected to it and maintains an operable loop , , , , , , , , , , , , ,  with the remaining devices , , , , , .","3.2 Non-overlapping Hard Zoning (Multiple Loops)","While operating in hub emulation mode, the Loop Switch also has the ability to assign each of it ports to one of a number of \u2018Zones\u2019. Each zone represents a unique and isolated loop, with its corresponding 127-node address space and separate initialization space. This allows several separate loops to be functioning within a single Loop Switch. With this type of zoning each loop is totally independent and LIPs on one loop do not affect the other loops in any way.","3.3 Switching (Segmenting) Mode","In the switching mode a Loop Switch utilizes a crossbar switch and switches based on the Fibre Channel arbitrated loop primitives instead of FC frames like fabric switches. Benefits of this type of switching are that the connected FCAL device does not have to implement Fibre Channel fabric services. Implementing Fabric Services adds complexity of management and interoperability.","The switching mode can be used to interconnect individual nodes, strings of many nodes, normal loop FC-AL hubs with many nodes attached and can also be connected to a Fibre Channel switch fabric. Most FC-AL devices can be attached to the Loop switch without changing drivers, firmware or software and get the benefits of the hub. It shares many of the characteristics of both a hub and a switch. When configured to operate in Loop Switch (segmenting) mode, the Loop Switch exhibits some of the following hub-like characteristics:\n\n","When all ports on a Loop Switch are idle, each port is completely isolated from every other port, see . The Loop Switch  listens on each and looks for arbitration activity. If a device arbitrates for the loop, such as Node   on port  , the Loop Switch accepts the ARBs and simply passes them back out  port   back to Node  . Node   sees its own ARBs and then sends an OPN (in this case the OPN is for Node  ). The Loop Switch  will lookup which port the destination device is on and make the connection through the switching matrix ,  and pass the OPN on to the device.","As  shows, a connection exists ,  between Node   and Node   via port   and port  . The remaining ports , , , , ,  are still idle.","If other nodes attempt to arbitrate and the ports they are on are idle, the Loop Switch provides the requested connections as shown in .  shows two connections made through the switch ,  and  and , using port pairs , ,  and , , .  also illustrates how a destination node that is on the same port as the source node is handled. On port   Node   is communicating with Node  . The Loop Switch  simply connects the port  to itself to allow this. In this example note that the ability to have the 3 simultaneous conversations means that the total aggregate bandwidth has been increased to 3 times the line rate. Also note that if Node   was a remote tape back-up system 10-km away, only the loop segments on ports   and   are affected by the long segment. The conversations occurring on the other ports can operate at much lower latencies and higher bandwidths.","In , if Node   attempted to OPN Node   while it was already connected to Node  , the Loop Switch  holds the OPN until the destination port is released. If the sourcing node does not get through, it is expected that the node aborts the attempt by either issuing a CLS or re-initializing the loop. This terminates all connection requests in the chip.","3.4 Overlapping Hard Zoning (Virtual Loops)","When Loop Switch is configured in switching (segmenting) mode, it has the capability to create overlapping hard zones or virtual loops. This capability means that a particular port on the Loop Switch in switching (segmenting) mode can be configured so that access is restricted to any of the other ports. As an example, this would allow a user to connect 3 Microsoft NT servers to 3 ports on the Loop Switch and to connect 3 disk arrays to 3 other ports on the Loop Switch and create associations from one server to one array while the remaining arrays can be restricted from a particular server. At the same time, a shared tape library could be connected to yet another port and the user can allow access to the tape for all the servers. This way the loop can be used as a high bandwidth interconnect from the servers to the disk arrays and also to provide shared access to the tape.","4. Architecutal Description",{"@attributes":{"id":"p-0133","num":"0401"},"figref":"FIG. 4","b":["140","141","142","143","144","145","146","147","148","181","150","22"]},"4.1 Port Logic","The port logic contains the following blocks, see .\n\n","The port is responsible for monitoring the Fibre Channel link for loop primitives in which to signal the router. The port control also removes and inserts loop primitives to manipulate the connected loop arbitration.","4.2 Router","The loop switch contains a router module, see . The router is connected to each port module , , , , , , ,  and connected to the switch logic . The port logic signals the router when certain conditions arise. The signals include a connect request based on receiving certain ARB and OPN loop primitives are received, see , , , , .","4.3 Switch Logic","As shown in  the switch logic is connected to each port , , , , , , , , , , , , , , ,  and the router . The switch logic implements a full N\u00d7N nonblocking crossbar switch, where N is the number of ports. Vixel has implemented a 22\u00d722 crossbar switch for it's SOC422 product but the design is not limited to 22 ports. As shown in , the data path  from the port logic  to the switch  and from the switch to the port logic  are unidirectional buses. Some control signals from the port logic  to the router and switch logic  include the Arbitrate loop primitive connect request (arb_connect_req)  signal and the OPEN loop primitive connect request (opn_connect_req) signal . Some control signals from the router and switch logic  to the port logic  include the source connect (src_connect) signal  and the destination (dest_connect) signal .","4.4 Fibre Channel Port","The SOC422 Loop Switch adds additional functionality as shown in . This includes a Fibre Channel MAC module . This module interfaces  with the switch crossbar switch  and acts as a Fibre Channel end device, complete with an NL_Port or FL_Port interface. The Fibre Channel MAC module  then interfaces with a CPU device  through a memory or parallel interface . The CPU  then has access to Fibre Channel word decoded frames. The FC MAC  performs all 8B\/10B encoding and decoding, implements the FCAL loop port state machine, implements buffer-to-buffer management through R_RDY's and other features necessary in a Fibre Channel end device.","4.5 Internal Serdes","As shown in  the SOC422 Loop Switch also includes internal Fibre Channel Serdes, one for each port , . This allows for a more integrated and cost effective solution.","5. Functional Description","5.1 Loop Switch Internal Selftest","The Loop Switch has a state machine that is used to execute a selftest of the high-speed data path within the Loop Switch ASIC. The selftest is executed after each reset after the serial EEPROM is read or by setting the RUN_SELFTEST mode in the Router Configuration Register. Note that during this testing, the Rx_LOS signal (a GBIC\/SFP interface signal) is ignored since there may or may not be a GBIC\/SFP installed. The state machine then configures the switch matrix to make a complete loop of all ports that are to be tested, enables for which port to test are contained in the serial EEPROM. The router generates approximately 1 ms of IDLE ordered sets to allow the serdes to acquire sync. Next the router generates a fixed data pattern and sends it into the configured loop. The state machine compares the returned data on the loop and if the data is exactly the same, it indicates that the selftest passed. Note that the Loop Switch ASIC reset sets the Hub Fault State, which in turn causes the Hub Fault LED to be illuminated. If selftest passes, the state machine clears this state and turns off the LED. A selftest failure also sets the Hub Fault bit in the Router Status Register # and prevents the Loop Switch from inserting any ports into the loop. For the purpose of debugging, this fault condition can be overridden by writing to the H_Fault override bit in the Router Configuration Register.","The serial EEPROM contains configuration bits for the Loop Switch chip. The port_en bits indicate which ports are to be enabled and included in the selftest. The data pattern has a recognizable ending character pattern that is used as an end of selftest flag. Once the Loop Switch passes the pattern completely through its ports and back out the cascade, it turns off the selftest mode and goes to hub emulation.","Note that the pattern sent, shown in the table below, actually has two sets of patterns. The first is the actual test pattern (words -). This is the pattern that is validated. The second pattern (words -) is only sent if the first pattern is validated.","This pattern has the termination pattern.",{"@attributes":{"id":"p-0144","num":"0418"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Word #","OS Type","Word Definition"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0","MRK","K28.5 D31.2 D0.0 D27.7"]},{"entry":[{},"00, fb"]},{"entry":["1","ARB ff","K28.5 D20.4 D31.7 D31.7"]},{"entry":["2","ARB f0","K28.5 D20.4 D16.7 D16.7"]},{"entry":["3","ARB ef","K28.5 D20.4 D15.7 D15.7"]},{"entry":["4","RRDY","K28.5 D21.4 D10.2 D10.2"]},{"entry":["5","OPN","K28.5 D17.4 D1.0 D15.7"]},{"entry":[{},"01, ef"]},{"entry":["6","CLS","K28.5 D5.4 D21.5 D21.5"]},{"entry":["7","LIP f7, f7","K28.5 D21.0 D23.7 D23.7"]},{"entry":["8","LIP f7, f7","K28.5 D21.0 D23.7 D23.7"]},{"entry":["9","LIP f7, f7","K28.5 D21.0 D23.7 D23.7"]},{"entry":["10","LIP f8, f7","K28.5 D21.0 D24.7 D23.7"]},{"entry":["11","LIP f8, f7","K28.5 D21.0 D24.7 D23.7"]},{"entry":["12","LIP f8, f7","K28.5 D21.0 D24.7 D23.7"]},{"entry":["13","SOFi3","K28.5 D21.5 D22.2 D22.2"]},{"entry":["14","data1","D28.5 D28.5 D28.5 D28.5 "]},{"entry":["15","EOFn","K28.5 D21.5 D21.6 D21.6"]},{"entry":["16","SOFi3","K28.5 D21.5 D22.2 D22.2"]},{"entry":["17","IDLE","K28.5 D21.4 D21.5 D21.5"]},{"entry":["18","OLS","K28.5 D21.1 D10.4 D21.2"]},{"entry":["19","OLS","K28.5 D21.1 D10.4 D21.2"]},{"entry":["20","OLS","K28.5 D21.1 D10.4 D21.2"]},{"entry":["21","EOFni","K28.5 D10.4 D21.6 D21.6"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The Loop Switch also lets the microprocessor control the internal loopback mode via a control bit on the Router Configuration Register. The microprocessor can assert this bit, configure the switch matrix into a complete loop using the Router Switch Matrix Contorl Register and then send test patterns into the configured loop using one of the Port's Transmit Ordered Set Registers and monitor the detectors on all the other ports.","Note that setting the internal loopback control bit in the Router Configuration Registers causes ALL the port's transceivers to be placed in loopback.","5.3 Port Insertion","Port insertion occurs when a GBIC\/SFP is inserted in the Loop Switch and a device is connected to the GBIC\/SFP, or when loop initialization occurs on a port that has already been connected. The port validates the incoming data stream, cuts the port's receiver into the loop and then forces LIPs out to the device and waits for them to propagate around the loop and back to the transmitter. Once a LIP is detected at the transmitter side of the port, the port is fully cut in and normal loop initialization is allowed to continue.","5.3.1 Establishing Word Sync","When a port has no GBIC or SFP installed, the port logic does not transmit anything; i.e. the differential TX outputs are held at a steady state. If a GBIC or SFP is installed then the port transmits either the information present on the internal loop or is sourcing IDLEs. If the chip has been strapped as a Loop Switch and there is a functioning loop in the Loop Switch, then the port transmits that loop data. In the case where the Loop Switch is in hub emulation mode or if there is no operating loop in the Loop Switch, then IDLEs are sent.","Once a signal is detected on the receiver of a port, the port checks on the incoming data stream to verify that word sync has been acquired. Once word sync is established, the port stops repeating data already on the loop and begins sending a stream of IDLEs.","5.3.2 Detection of Direct Connection to Vixel Loop Switch","Following word sync, the port logic then looks to see if the attached device is behaving like another Vixel Loop Switch. Normally when a L_Port receives a stream of three or more LIPs, it retransmits at least 12 of the same LIPs it received. The L_Port then sends Idle for 15 ms and ignores all incoming ordered sets. The DITH algorithm takes advantage of this to detect direct connections to Vixel Loop Switches that support the serial number exchange on connect (SEOC) algorithm. Following word synchronization, the Loop Switch port transmits LIP(F,FB) for 10-20 us (2 timer ticks) and the LIPs cause each L_Port on the attached loop to retransmit the same LIPs. Instead of sending out LISM's after the LIPs, a Loop Switch port instead sends out a stream of ARB(FB) ordered sets. If a SEOC-compliant Vixel Loop Switch is not attached to the port that is initializing, the ARB(FB) is not recognized or retransmitted by an L_Port. If a SEOC-compliant Vixel Loop Switch is attached to the initializing port, then both sides of the connection are sending ARB(FB) at the same time and each port recognizes that both sides of the connection support the serial number exchange algorithm. If a Loop Switch port does not detect ARB(FB) within 8 ms, it assumes another type of device is attached, skips the SEOC process, and continues with normal insertion. If ARB(FB) is detected by the Loop Switch port within 8 ms it assumes a SEOC-compliant Vixel is attached and attempts to exchange serial numbers with it.","5.3.3 Serial Number Exchange On Connect (SEOC)","The SEOC exchange is communicated thru 8 proprietary primitive sequences labeled SN, SN, SN, SN, SN, P_INFO, USER and USER. Following the ARB(FB) exchange, the port transmits another short burst of LIP(F,FB) for 10-20 microseconds. The port then transmits SN continuously until it receives SN from the connected port. When a SEOC sequence is received, the embedded serial number is loaded into the remote serial number, port information and user registers for that port. The payload byte, byte , of each ordered set is initialized on the transmitting side by registers in the router memory map space with the exception of the P_INFO. P_INFO is unique for each port and is thus mapped into port memory map space. Upon power-up, the P_INFO field is initialized to the corresponding port number.",{"@attributes":{"id":"p-0152","num":"0426"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"6"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"42pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"5","align":"center","rowsep":"1"}}]},{"entry":[{},"Ordered Set","Byte 1","Byte 2","Byte 3","Byte 4"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"5","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"SN1","K28.5","95","FB","SN byte 1"]},{"entry":[{},"SN2","K28.5","95","FD","SN byte 2"]},{"entry":[{},"SN3","K28.5","95","EF","SN byte 3"]},{"entry":[{},"SN4","K28.5","95","F0","SN byte 4"]},{"entry":[{},"SN5","K28.5","95","F7","SN byte 5"]},{"entry":[{},"P_INFO","K28.5","95","F8","Port Info"]},{"entry":[{},"USER1","K28.5 ","95","FE","User 1"]},{"entry":[{},"USER2","K28.5 ","95","FF","User 2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"5","align":"center","rowsep":"1"}}]}]}}}}},"The Loop Switch port then transmits another short burst of LIP(F,FB), followed by continuous SN until a SN sequence is received. When SN is received, the embedded serial number byte is again stored in the remote serial number register for that port. The same process takes place for SN through USER until all eight bytes have been stored in the appropriate registers for that port. When USER has been stored a serial number change interrupt is triggered for that port. The microprocessor must then read this serial number, along with the other information and verify whether it is a duplicate address and write a bit to the port's control register to release the chip to complete the insertion. If the port doesn't have another Vixel Loop Switch detected, this microprocessor interaction is skipped. After this, the port completes the cut-in process. If any of the respective SEOC Ordered Sets has not been received within 10 ms while the port is waiting for it, the port timeouts and restarts the insertion process from the beginning. The captured serial number remains stored and valid until a GBIC or SFP is removed or until loss of signal is detected. When either of these events occurs, the remote serial number, P_INFO and User registers are reset to zero.",{"@attributes":{"id":"p-0154","num":"0428"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":[{},"P_info"]},{"entry":["Port #","Value"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"133pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0","00"]},{"entry":["1","01"]},{"entry":["2","02"]},{"entry":["3","04"]},{"entry":["4","08"]},{"entry":["5","0f"]},{"entry":["6","10"]},{"entry":["7","17"]},{"entry":["8","18"]},{"entry":["9","1b"]},{"entry":["10","1d"]},{"entry":["11","1e"]},{"entry":["12","1f"]},{"entry":["13","23"]},{"entry":["14","25"]},{"entry":["15","26"]},{"entry":["16","27"]},{"entry":["17","29"]},{"entry":["18","2a"]},{"entry":["19","2b"]},{"entry":["20","2c"]},{"entry":["21","2d"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"If the attached device is something other than another Vixel Loop Switch, the port logic transmits LIP(F,F) continuously for 112 ms and attempts to validate a valid stream of LIP(F,F) into the receiver. The Port ignores all LIP(F)s for the first 15 ms to allow attached devices to cycle through an AL_TIME. Then the Port monitors for LIP(F) for 97 ms. If LIP(F) is received, the Port begins the insertion process all over again (detect if a Vixel Loop Switch is attached). This sets the insert_lipf_fault bit in the Port Error\/Status Change register. If no LIPf is received during the 97 ms and if LIP(F) is received by the end of the 97 ms, the port inserts its receiver into the loop, but continues to transmit LIP(F,F). If LIP(F) was not received by the end of the 97 ms time period, the port starts the insertion process all over and sets the insert_timeout bit in the Port Error\/Status Change register.","The reason the port ignores all LIPs other than LIP(F) for 112 ms is that some devices send out a LIP(F) sequence once every 100 ms. Looking for LIP(F) and ignoring LIP(F,F) up to 112 ms allows the port to correctly detect a device behaving in this manner without excessive cycling between the active and inactive states. The 112 ms value was chosen to provide coverage for 100 ms with some additional margin.","5.3.5 Completion of Port Insertion","Following either the successful completion of SEOC, or the validation of a received stream of LIP(F,F) if SEOC was not successfully completed, the port scrubs the loop to guarantee that LIP(F,F) has propagated around the entire loop. The port continuously transmits LIP(F,F) and monitors the input stream to its transmit data path, which is fed by the receive data stream from the adjacent upstream port, for LIP(F) to make sure that LIPs have gone all the way around the loop. When LIP(F) is detected at the transmitter input, the transmitter side is inserted and the port starts transmitting normal loop traffic. If LIP(F,F) (per FC-AL) or a sequence of SOF, EOF and IDLES without receiving any ARBs (per FC-AL-) is not received within 50 ms, then the port insertion is aborted.","5.3.6 Port Insertion Failure","If port insertion fails for any reason it is automatically be retried until it is successful. Certain failure conditions also trigger a reset of the GBIC or SFP by asserting the tx_disable signal. When tx_disable is asserted it remains asserted for approximately 10 ms. The minimum spacing of the tx_disable pulses is 350 ms. The failure conditions that trigger a tx_disable pulse are:\n\n","For the above conditions, a link failure is defined as\n\n","An inserted port is bypassed on the occurrence of one of the following circumstances:\n\n","Note that when the port is bypassed because of one of these reasons, the port also causes the loop to be reinitialized by sending out 16 LIPs to the remaining ports before the actual bypass. This of course assumes that the policy bits have not disabled the LIP on bypass function. Note: Policy bits are described in the Port Operational Policies section's text.","5.5 Device Discovery","The device discovery process is used to build up an ALPA map table that describes which Loop Switch port each ALPA is attached to. This table is useful for management software and is required for Loop Switch operation (as opposed to Loop Switch mode). Device discovery is initiated whenever a LIP is detected and full-Loop Switch loop initialization occurs. At this time all of the devices are mapped into a single loop and are initialized together, regardless of whether they are attached to the same port.","5.5.1 Passive Device Discovery During Full-Loop Switch Loop Initialization","A passive device discovery process is used during full-Loop Switch loop initialization. Each time a LISM frame passes through the data path in the router module, the WWN in the payload of the frame is stored in registers and any previous value is overwritten. The result is that the WWN of the LIM is captured and stored from the end of one loop initialization cycle until the start of the next cycle. This value is readable by the microprocessor.","During each phase (LIFA, LIPA, LIHA, LISA) of full-Loop Switch loop initialization each port usually sees an outbound frame and then an inbound frame of the same type. Each port captures the outbound and inbound frame ALPA bitmaps and then computes the difference between the two bitmaps after each phase. The difference for that phase is accumulated with the differences from the previous phases and stored into a holding register until the LISA phase is complete. The accumulated difference between the inbound and outbound bitmaps represents all ALPAs claimed on that port of the Loop Switch during loop initialization. When the LISA phase is complete, the accumulated ALPA bitmap difference in each port is used to update the ALPA map.","The one special case for calculating the outbound and inbound frame bitmap differences is on the loop where the LIM resides. In order to initially determine the LIM port, each port sets a flag when it receives an ARB(F) during loop initialization. The first Loop Switch port to see the ARB(F) is identified as the LIM port. The LIM port number is then stored in the device discovery logic until the next full-Loop Switch loop initialization cycle. Since the LIM originates all loop initialization frames, the Loop Switch does not see a frame go out onto a port before the same frame type comes back in. Therefore the outbound bitmap must initially be assumed to be zero on the LIM port when the LIFA frame is first received. The bitmap difference for the LIFA phase would then be equal to the inbound LIFA frame ALPA bitmap. From that point on, the LIM port calculates its bitmap difference by comparing the inbound LIPA and outbound LISA, inbound LIHA and outbound LIFA, inbound LISA and outbound LIHA frames.","This process identifies all ALPAs claimed except for those located on the same loop as, but upstream from the LIM device. These devices are referred to as shadow devices since they are located in the \u201cshadow\u201d of the LIM for the purposes of device discovery, and they are resolved later in the process. The reason for this is that the LISA frame received at the LIM never makes it back to the inbound side of the port. Therefore, the final LISA bitmap cannot be captured on the port where the LIM resides.","The ALPA map stores 8 bit port assignments for each of the 127 possible ALPA values. When any port detects a LIP sequence, the Loop Switch exits switching mode and begins the loop initialization process. At this time each entry in the ALPA map is marked with the value 0xE0 to indicate that the port assignment for each ALPA is unmapped. When a LISA frame is received on a given port, that port begins to enter data into the ALPA map to identify all ALPAs claimed on that port. The port number (0x00-0x1F) for each of the claimed ALPAs is entered into the appropriate locations in the ALPA map. Any unclaimed ALPAs are not resolved at this point and their ALPA map locations retain the unmapped port indicator (0xE0). Valid port values (0x00-0x1F) or the invalid indicator (0xC0) later replace remaining devices with unmapped port values either by passive or active means as the shadow device ALPAs are resolved. Note: Ports 0x14-0x1F are possible future implementations and are not currently valid entries.","5.5.2 Shadow Device ALPA Resolution with LILP","If LIRP and LILP are supported for all devices on the Loop Switch, then these frames follow the LISA on the loop. If an LILP does appear, its payload is captured and searched in order to complete the ALPA map. The stored LILP payload may also be used by management software. As the payload is searched, all claimed ALPA values that do not have a valid port value that was previously entered are marked with the port value corresponding to the LIM port. The remaining ALPA map locations that are still marked with the unmapped port indicator are then marked as invalid ALPA values. If LILP is supported, then this action completes device discovery and the Loop Switch is allowed to enter switching (segmenting) mode, if selected.","5.5.3 Shadow Device ALPA Resolution without LILP","If LIRP and LILP are not supported for all devices connected to the Loop Switch, then a CLS follows the LISA frame. This completes the passive portion of the device discovery process and the Loop Switch is allowed to enter switching mode, if selected. From that point on, ALPA map locations marked as having unmapped port locations are passively resolved only during switching mode operation and only as they are needed. When an OPN is detected and its destination is an ALPA marked with as an unmapped port location in the ALPA map, the received OPN is routed to the LIM port. If the device does not exist then the OPN is returned back to the LIM port on the Loop Switch and the corresponding device position in the ALPA map is marked as an invalid device. If the device does exist on the LIM port then an R_RDY or a CLS causes the port to be recorded in the ALPA map as being a valid device on the LIM port. When an OPN is sourced on the LIM port and is also forwarded back to an unmapped device on the LIM port, the port does not have enough visibility into the loop protocol to resolve an unmapped ALPA since it cannot detect a reflected OPN. Therefore, this event does not trigger a change in the ALPA map.","Once an ALPA map location is marked as an invalid device, any future OPNs that are sent to that ALPA are routed back to the sender. Eventually each of the unresolved ALPAs is accessed and determined either to be valid and marked with the appropriate port value, or invalid and marked as having no valid port value.","5.5.4 Device Discovery Errors","One error that is flagged occurs when a single ALPA is claimed on multiple Loop Switch ports. For that to happen a position in the LIXA frame bitmap would have to be set on one port, cleared on another port, and then set again on a third Loop Switch port. If this condition occurs the corresponding position in the ALPA map is marked as a \u201cknown invalid\u201d device location, and the port discovery error interrupt is asserted in the router status register. If any accesses are attempted to this ALPA and an OPN is sent to that location, the Loop Switch routes the OPN back to the source. If present, the microprocessor can then force a LIP out onto the loop to restart the process if desired. If a microprocessor is not present the device that sent the OPN may then choose to reinitialize the loop to clean up this error.","Another error that may occur is that a CRC error may be detected in a received frame during port discovery. If a CRC error is detected in a LIXA frame the hardware does not complete the device discovery process. The CRC error interrupt is triggered in the port error status register (true for any CRC error) and the map_done status bit is not set in the router status register. If present, the microprocessor can then force a LIP out onto the loop to restart the process if desired. If a microprocessor is not present and an OPN is sent to valid, unmapped devices the OPN is returned back to their source. The device that sent the OPN may then choose to reinitialize the loop to clean up this error.","5.5.5 Loop Initialization Timeout","To help recover from locked up loop initialization cycles, a 500 ms internal watchdog timer will cause the external pin lip_timeout to go low until a valid LIP is received or the ASIC is reset. External logic is required to reset the ASIC if that function is required.","5.6 Idle Replacement by ARBff","In order to reduce EMI emissions, the port logic in the Loop Switch uses an algorithm to replace IDLEs that are being received with ARBff. The frequency content of an IDLE has a very large 531 MHz component. The ARBff spectral content is much broader. The standards committee has accepted this change for FC-AL-2. The actual process looks for IDLEs in the receive symbol stream and forward 6 IDLEs out the transmit port. If subsequent consecutive IDLEs are received, the logic replaces them with the ARBffs. The ARBff is defined as the lowest priority ARB and is viewed as the same as an Idle. This type of IDLE replacement is only performed once a port has been inserted and has completed loop initialization. Any time loop initialization is triggered this replacement is not allowed until loop initialization has been completed.","(Note: IDLEs may also be replaced by ARBs with ALPA=0xff in order to establish port fairness for effective switching mode operation. In this case no IDLEs are allowed to pass prior to replacement by ARBff. This is a proprietary implementation and is a completely different usage of ARBff than the procedure described in FC-AL-2. Refer to the section that describes port fairness for more details.)","5.7 Switching (Segmenting) Mode Operation","A Loop Switch that has been configured for switching (segmenting) mode goes through the same process as in the hub emulation mode whenever a configuration change occurs, including the device discovery phase. If this is completed successfully, the Loop Switch enters switching (segmenting) mode.","If the device discovery process completes successfully and the Loop Switch is configured in the switching (segmenting) mode, the Loop switch enters switch (segmenting) mode. At this time all ports are disconnected and IDLEs are being sourced by the port transmitter. When a port receives an ARB, the port requests a connection by asserting the arb_connect_req signal, see , . Router logic ,   connects the port to itself, and asserts the src_connect (source connect)  and dest_connect (destination connect)  signals. The ARBs are forwarded through the switch logic and received by the device that originally sourced them. This device then sources an OPN to the destination device. At this time, the Loop Switch port substitutes ARBff for each IDLE. As the Loop Switch switches from sending ARBx to ARBff it does not allow any IDLEs to pass ahead of the ARBff. The ARBs from the Loop Switch are used to determine when all the devices on the loop have completed their conversations and the loop is idle. The default ALPA value for this feature is 0xff, but it can be reprogrammed through the microprocessor.","5.7.1 Source and Destination Nodes on the Same Port","As shown in , , and , if the destination device  is downstream from the device sourcing  the OPN  is on the same port , the loop tenancy occurs without further intervention. When the connection is closed  and no other port is requesting access, ARBff  is detected at the port receiver  at the completion of the loop tenancy. When this occurs, the connection through the switch logic is broken ,  and IDLEs  are again sourced by the port transmitter. The paths , , , ,  and  are internal to the Loop Switch.","As shown in , , and , if the destination device  is upstream from the device sourcing  the OPN , an OPN is detected at the port receiver . When the OPN is detected, it is stored in a register in the port receiver, the destination ALPA is supplied to the router and the opn_connect_req signal is asserted, see , . The router  breaks the port connection ,  and performs a port lookup of the ALPA provided. Note that the router must break the port connection\u2014without this the priority logic would not be enabled which could lead to starvation of port. If the ALPA resides on the same port, the router connects the port to back to itself, asserts the src_connect  and dest_connect  signals establishing a new connection . The port receiver sends the OPN to the switch receive data bus and the loop tenancy begins. Again, the port substitutes any IDLE received with an ARBff. When all devices on the loop have completed their conversations, ARBff is detected at the port receiver. When this occurs, the connection through the switch logic is broken ,  and IDLEs  are again sourced by the port transmitter .","As discussed above and shown in , , , and , a port is connected to itself during arbitration and when the destination device is on the same port as the source device. In this case, port receiver logic replaces ARBffs  it detects with ARBff . All other ARBs are forwarded to minimize the complexity involved in maintaining fairness on each segment. Due to this, several loop tenancies could occur during single connection when a port is connected to itself. The paths , , , , , ,  are internal to the Loop Switch.",{"@attributes":{"id":"p-0181","num":"0470"},"figref":"FIGS. 11","i":["a","b","c","c"],"b":["11","11","11","11","723","724","12","725","11","723","12","725","13","11","12","13","745","14","13","14"]},"All nodes on any port could source one OPN during a single connection. At that point, blocking the ARBfs at the port receiver insures the loop access window is not reset. Provided all nodes are operating \u201cfairly\u201d, this mechanism guarantees that the port connection is broken, allowing access by other ports. The paths , , ,  and  are internal to the Loop Switch.","5.7.2 Source and Destination Nodes on the Different Ports","When a connection is established as a result of ARBs being detected at the port receiver and an OPN is sent to a device that is on a different port, the OPN is detected at the port receiver.","5.7.2.1 Destination Port not Connected","When the OPN is detected, the port receiver stores the OPN in an internal register , , supplies the destination ALPA to the router, and asserts opn_connect_req signal,  . The router breaks the port connection established when the ARB was passed and performs a port lookup of the ALPA provided. If the ALPA is on a different port  than the port sourcing the OPN , the router connects the source and destination ports , , asserts the src_connect signal, ,  to the port sourcing the OPN  and asserts the dest_connect signal   to the destination port . The port receiver logic in this case replaces all ARBs with ARBff. This prevents any additional tenancies during this connection. The receipt of a CLS on both the port receiver and the port transmitter determines the end of this tenancy. When both of these conditions are met, the connection between the ports is broken. , and illustrates this scenario. Paths , , , , ,  are internal to the Loop Switch.","5.7.2.2 Destination Port Connected","As illustrated in and , if a port  requests a connection to a destination port  that is already connected , port logic waits for the connection to be established. The node that sourced the open may decide to source a close. If this occurs, the opn_connect_req,   is deasserted and the port transmitter forwards the close back  to the device that sourced the open.","5.7.3 Simultaneous Open Connect Requests","As shown in and , if port   requests a connection to port   at the same time port   requests a connection to port  , a priority scheme is used which insures that all ports are serviced fairly. (This priority scheme is discussed in more detail in the section that describes port fairness.) Once the winning 967 and losing  requests have been established through the priority comparison, the losing source port  that is to be opened as a destination port sends a CLS  from its port transmitter prior to forwarding the winning OPN. The device that sent the losing OPN must later re-arbitrate and send the OPN again in order to complete its transfer. The paths , , , , ,  are internal to the Loop Switch.","In the general case where both the highest priority source loop and its destination loop both have an OPN request being generated, the lower priority port always receives a CLS. However, if a lower priority port has an OPN request asserted and does not need to be closed to service the highest priority OPN request from another port, the lower priority port remains opened until its OPN request is serviced at a later time.","5.7.4 OPN Sent to Non-existent Device","If an OPN is sent out from a destination port on the Loop Switch and is returned back to the Loop Switch destination port, the OPN is sent back out from the source port so that the source device can detect the error and respond appropriately. This condition may occur when access is attempted to invalid devices that have not yet been identified as such in the ALPA map. When this condition occurs Loop Switch disconnects the connected ports when a CLS is sent around the loop.","5.7.5 R RDYs Following OPNs","When an OPN is detected at the port receiver, in addition to saving the open in an internal register, the port receiver must count any R_RDYs that are detected but not forwarded. Up to 255 R_RDYs can be counted, stored, and later resent. When a connection is provided, the port receiver must send the R_RDYS after the OPN is sent. This is accomplished by replacing every third fill word after the OPN with an R_RDY and decrementing the R_RDY counter. This continues until the counter is 0. Note that the R_RDY forwarding has to tolerate a frame arriving before they are all sent. In this case, the remaining R_RDYs are sent after the frame is forwarded.","Careful consideration has been taken to guarantee that at least two fill words are sent before and after each R_RDY. This is difficult since frames can arrive at the output of the elasticity FIFO at any time. Therefore, the R_RDY retransmit logic is spread across the corresponding receive and transmit data paths to guarantee sufficient lookahead capability to meet the ordered set spacing requirement. Initially, as R_RDYs are counted and stored, the first R_RDYs to be resent are sent out of the counter. Once the counter has been fully decremented and all of the buffered R_RDYs have been sent out, all further R_RDYs are simply passed through without being buffered in the counter. From then on, the R_RDY source port is responsible for guaranteeing the minimum ordered set spacing.","5.7.6 Node Failure","Port logic always monitors the port receiver for LIPfs, refer to , , and . Router logic, ,  always monitors the lip_received signal from the ports , , , , , , , . If a port detects this primitive, the port receiver , ,  replaces the LIPf ,  with LIPf , . When the router logic detects the assertion of the lip_received signal , , , , , , , , it reconnects all active ports to the Initialize State\u2014non-switched mode (note that this can happen in the middle of a frame or multiple frames and these are lost). When the port has forwarded 16 LIPs, it deasserts its port active signal. The router ,  then instructs  the switch matrix  to bypass the port. The loop then reinitializes without the port with the node sourcing the LIPfs present.","The port logic also sources LIPfs , , , at the port transmitter  and continues to monitor the port receiver . If the port receives LIPf, the node that originally sourced the LIPf is now functional. The port then asserts its port active signal. The port is inserted back into the loop at this point. The port transmitter continues to source LIPf until it receives LIPf at the port transmitter. On receipt of LIPf at the port transmitter, the node stops sourcing LIPf at its port transmitter which allows initialization to complete.","5.7.7 Microprocessor Assisted Operation","The Loop Switch is designed to provide either hub emulation or switching (segmenting) operation without the assistance of a microprocessor, with a few exceptions. These exceptions are detailed below.","One type of processor interaction with Loop Switch might be needed during the device discovery phase. If discovery fails for any reason, Loop Switch signals the error in a status register and the microprocessor can read the cause for the error. At that time, the processor could force a re-initialization to try and recover from the error. This process is not required, but it might be useful to get Loop Switch to an improved performance level if these errors were common.","The processor can also be used together with the embedded Fibre Channel MAC to manually enter switching (segmenting) mode. In order to do this, the following steps must be taken. The port discovery disable bit in the router must be set in order to bypass the normal port discovery process. After each loop initialization cycle, which would be detected with interrupts in each port module to indicate that the loop has gone down and come back up again, the processor would assist in performing device discovery through the FC MAC. The processor would initialize the user match bits inside each port to detect the first OPN to be sent and then send out the OPN and see which of the ports actually see the OPN as it passes around the loop. When the OPN is not passed on from one port to the next, it is assumed that the device targeted by the OPN resides on the port just after the last port that saw the OPN. The processor then proceeds to step through all OPN values in the same way and determine the information it needs to write into the ALPA map. Following the processor device discovery, it then must set the ARB blocking bit in the router. This holds off all loop traffic once any existing loop tenancies have been completed and allows a smooth transition into switching mode. The processor then loads the ALPA map with port values for each of the ALPAs. Next, the processor sets a bit in the router to force Loop Switch into switching mode, and then resets the ARB blocking bit, also in the router. Resetting the ARB blocking bit completes the manual entry into switching mode and allows normal traffic to resume.","5.8 Cascading","Cascading refers to interconnecting Loop Switches together. In the following sections the Loop Switches are contained in root switches, see  and  and SBODS, see , , , , , , , ,  and , , . One implementation of a root switch is with a Loop Switch ASIC on a printed circuit board with a microprocessor and support logic, a power supply, all within a single chassis. This is a Loop Switch contained in a stand-alone switch box. Another deployment of Loop Switches is within a hard disk drive storage enclosure, i.e., a JBOD. When the Loop Switch is contained on a printer circuit board and plugged into the backplane or mid-plane of a hard disk drive storage enclosure it becomes a switched bunch of disks or SBOD. Each disk is directly connected to the Loop Switch.","5.8.1 Single Cascade","5.8.1.1 Hub Emulation Mode","In order to provide additional connectivity, two Loop Switches may be cascaded in hub emulation mode. No special considerations need to be made for a single Loop Switch to Loop Switch hub emulation cascade.","5.8.1.2 Switching (Segmenting) Mode","When a Loop Switch is cascaded in switching mode, there are special considerations that are needed to guarantee correct operation. If one cascaded Loop Switch is operating in the switching mode and the other is operating in the hub emulation mode then the IDLE replacement with ARBff scheme used to detect a busy loop can be used as previously described and there are no operational issues. The Loop Switch in switching mode can blindly send OPNs to destination loops without arbitrating since the port determines through sending and receiving ARBff if the loop is busy. But when two Loop Switches in switching mode are cascaded, both of the connected Loop Switch ports would send and receive ARBff and could then send OPNs at any time under the normal (non-cascade) rules of operation. If both sides were to send OPN at approximately the same time, then a conflict would occur since both sides of the connection would assume full control over the cascade loop connection. In order to avoid this contention, cascaded ports on Loop Switches must behave differently than non-cascaded Loop Switch ports.","When two Loop Switches in switching mode are cascaded, one of two types of cascade arbitration configuration must be set up: tree cascade, or string cascade, . There are additional deployments of Loop Switches that combine the tree and string cascade configurations. One of these deployments is a tree of strings cascade, see ","A tree cascade interconnects Loop Switches , , , ,  using one in a central or root position,  and the rest to ports on that root switch , , , . In a tree cascade, both ports on the cascade connection , , ,  do not rely on the ARBff propagation characteristics to determine if a port is busy. Instead, they actively arbitrate for the loop between the cascaded ports , , ,  and determine a winner before sending an OPN to the other side, for example , . The ARBx ALPA value sent out on the cascade port is the same ALPA value as the one received in the ARBx back at the port where the OPN was sourced. The cascade port arbitrates according to the normal rules of FC-AL loop protocol. However, the standard ARB(f) arbitration fairness scheme does not apply to this situation. The reason for this is that the arbitration loser has to be disconnected to yield access to the winning side. Therefore, the loser does not continue to arbitrate and cannot gain access until the winning connection is removed. At that point, the next winner is determined by two factors: (1) time of arrival of arbitration request, and (2) priority of the source ALPA value. This arbitration occurs only between two directly connected Loop Switches , , ,  and has no effect on Loop Switches on either side of the two Loop Switches arbitrating for the cascade.","In a string cascade, , each Loop Switch , , ,  is treated as a logical device on a virtual loop. Arbitration must win control of the entire string of Loop Switches , , ,  to gain control of the cascade. The arbitration winner is determined solely by the priority of the source ALPA as in a standard arbitrated loop. To gain control of the string cascade, a Loop Switch places the ARBx ALPA of a device requesting access on the string cascade loop and waits for the ARBx ALPA to be received back. If a higher priority ALPA is received before the Loop Switch receives it's own ALPA, the Loop Switch forwards on the higher priority ARBx ALPA. A lower priority ARBx ALPA or an ARBx ALPA received after the Loop Switch receives it's own ARB is blocked as in a standard loop. Once a Loop Switch determines it has won control of the cascade string loop, it then places it's OPN on the loop and makes the desired connection. Once the connection is closed down, the Loop Switch sends an ARB(f) around the loop to indicate the loop is free. If the originating Loop Switch receives the ARB(f) back, it determines the loop is free and sends IDLEs around the loop. If the loop is not free, the Loop Switch forwards on the received ARBx ALPA ordered set. Each Loop Switch has only one turn on the loop per IDLE reset period to ensure Loop Switch fairness.","Both of these approaches support the Fibre Channel loop protocol and any non-Vixel Loop Switch connected to a \u201ccascaded\u201d port behaves as a normal device in the manner it uses to gain control of the destination loop. This allows the Loop Switch to interoperate with non-Vixel devices attached to cascade ports.","5.8.2 Duplicate Cascades","5.8.2.1 Hub Emulation Mode","In hub emulation mode, if two identical remote serial numbers are captured on two different ports then the lower numbered device is designated as the master and the other is the slave. The master Loop Switch in hub emulation mode assigns one cascade port to be the primary cascade by writing a bit in the port control registers. The remaining cascade ports on the master Loop Switch in hub emulation mode are marked as duplicates in the port control registers. Each port designated as a duplicate port is bypassed. This guarantees that if a duplicate port on a Loop Switch in hub emulation mode is connected to a port on a Loop Switch in switching mode, the switching mode Loop Switch does not try to use the connection. This is required since simultaneous activation of duplicate cascade ports on Loop Switches in hub emulation mode results in an invalid loop topology.","5.8.2.2 Switching (Segmenting) Mode (Trunking)","Multiple duplicate cascades between Loop Switches in switching mode are used to increase throughput between adjacent Loop Switches and can be simultaneously activated without creating an invalid loop topology. Load balancing between the cascades on an initiator basis is supported, see . In a system with two initiators and a primary\/duplicate cascade pair each initiator can have a logical cascade chain dedicated to it providing approximately 2\u00d7 the throughput of a single cascade system. For example as shown in  HBA  has a full bandwidth path , ,  thru the string of SBODs , , . Initiator HBA  also has a full bandwidth path , ,  thru the string of SBODs , , . Simultaneous communication between HBA and a disk in an SBOD and HBA and a disk in an SBOD can occur. For example, HBA can communicate with Disk   in SBOD  using the path ,  at the same time HBA  can communicate with Disk   in SBOD  using the path , . The number of duplicate cascades in a trunk is not limited by the hardware. A trunk group could be defined as 21 trunks in a 22 port ASIC if so desired (1 port must not be assigned to the trunk to provide the other side of the connection). If more initiators than cascades are added, throughput is affected based on the relative traffic assigned to each trunk within a group.","5.8.2.3 Initiator Detection","State machines inside the Loop Switch ASIC determine which initiators ALPAs are present on the loop by monitoring either SCSI FCP or PRLI frames based on the setting of a bit in the Router Control Register. A state machine resides in each port to allow for the detection of simultaneous Response Frames. Logic in the router core of the Loop Switch then collects the initiator ALPAs and stores them in a table in the router. This table has a bit assigned for each ALPA and a \u20181\u2019 indicates that ALPA has been identified as an initiator. The table format is identical to the ALPA mapping in LixA (LixA=LISA, LIHA, LIFA, etc.) frames.","Hardware initiator detection can be disabled globally via a disable bit in the Router Control Register or individually by the Software Override of Initiators Registers located in the Router Registers. The Software Override bits are XOR'ed with the Hardware Detected Initiator Bits thus allowing the inclusion of initiators that weren't detected for some reason or the exclusion of initiators that were detected.","5.8.2.4 Initiator Load Balancing","With the initiator ALPA table in the router, the microprocessor has all the information it requires to load balance the initiators across the groups of trunks connected to the Loop Switch. The software determines which initiators this Loop Switch controls as the load-balancing master by cross-referencing three pieces of information. The information includes 1) the initiators in the system, 2) which port each ALPA resides on and 3) which ports are primary and duplicate cascades and how they are grouped together. Any initiator that is located on a port that is not part of a trunk group is determined to belong to this Loop Switch for purposes of load balancing. Additionally, if an initiator is detected on one trunk group, the software must assign that initiator to any other trunk groups on that Loop Switch. If cascade ports are strung together however, the hardware automatically follows the string path.","Once the software has determined the initiators it needs to control for load balancing, it initializes the Trunk Grouping table located in the Router registers. Each initiator should have one entry in the Trunk Grouping for each set of Primary\/Duplicate(s) Cascades. Assuming a desired configuration and traffic flow, see , the Trunk Groupings would be as follows:",{"@attributes":{"id":"p-0209","num":"0498"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"42pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":[{},"Trunkset Primary","Assigned Trunk","Initiator's"]},{"entry":["Loop Switch","Port","Port","ALPA"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["A 1002","7 1003","\u20027","01"]},{"entry":["A","7","\u20028","02"]},{"entry":["A","7","\u20027","04"]},{"entry":["A","7","\u20028","17"]},{"entry":["A","11 1018\u2002","11","01"]},{"entry":["A","11","12 1017","02"]},{"entry":["A","11","11","04"]},{"entry":["A","11","12","17"]},{"entry":["A","7 1003","\u20027","08"]},{"entry":["E 1012","5 1014","\u20026 1013","08 1011"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}}}},"Loop Switch A  has assigned all the local initiators , , ,  to specific trunks. The initiator that comes in on the tree cascade group associated with port   is also assigned to a trunk on the cascade group associated with port  . Loop Switch E  has one local initiator  that it is the master of and must assign.","Loop Switches B , C , D  are not masters and will auto-learn which trunk to send each connection based on the path the previous OPN from each initiator reached the Loop Switch. Alternatively, the connections may be learned from the source and destination ID within each frame. For this example, it is assumed that Loop Switches B  and C  have string associations connecting the primary ,  and secondary trunks ,  and the connections will then follow the string as transactions pass through the Loop Switches. If the cascade connections in Loop Switches B  and C  are not defined as strings, initiators would have to be assigned to the cascade trunks , , , , , , ,  to maintain the desired load balancing. In Loop Switch B , ALPAs ,  and   would have to be assigned to port  and ALPAs  and   would be assigned to port . Likewise, in Loop Switch C, ALPAs  and   would be assigned to port  and ALPAs ,  and   would be assigned to port .","If one of the initiator's ALPA's is not loaded into the Trunk Grouping Table in the Router Register map, that initiator's traffic defaults to the primary port , , , . To extend the trunk assignment of initiators to support more initiators that can be held in the table, omit entries that assign an initiator to a primary port.","To minimize the possibility of lockup cases where OPNs between the same 2 devices pass on different trunks two rules override the trunk assignments that are either explicity set in the Grouping Table or learned by monitoring OPNs from initiators.\n\n","In a single initiator system, the software initiator override table and the rule that initiator-to-initiator traffic always goes on the primary link provides a mechanism to define a basic target load-balancing mechanism for a 2 trunk cascade connection. All \u201ctrue\u201d initiator traffic is assigned to the duplicate cascade and half of the targets are defined as initiators. In this case traffic will be split between the two trunks. All traffic between the \u201ctrue\u201d initiator and software assigned initiators will be on the primary link. All other traffic will be on the duplicate link.","5.9 Port Fairness","5.9.1 Single Loop Switch Fairness","As discussed in the section describing switching or segmenting operation, IDLEs are replaced by ARBff for the purpose of establishing port fairness at the loop level. But this differs from the standardized case of ARBff replacement in that three IDLEs are not allowed to pass prior to the ARBff substitution. The idle blocking at the Loop Switch port guarantees that each node device on a loop has had a chance to gain control of that loop and the access window is not reset immediately. The Loop Switch first allows another port to connect to the previously busy port before a device on the busy port can initiate another connection through the router. The idle blocking operation can be modified through a register write to the blocking ALPA register so that an ALPA other than 0xFF is used in case there are any interoperability issues associated with using ARBff.","If a fixed priority scheme that assigned fixed priority values to each port were used to determine which OPN requests were serviced first, the lower priority Loop Switch ports could suffer from degraded throughput and might eventually starve for data. To observe this condition, consider the case where 3 ports (port , port , and port ) are continually accessing a fourth port (port ). Ports  and , having higher priority than port , could alternately gain access to port  while preventing port  from ever acquiring access. To prevent this, an ordered list of port access is maintained. This list is used to determine access priority when requests are made from multiple ports to determine what port to service first. Whenever a port is granted a connection due to the receipt of an OPN, it is moved to the bottom of the list and the lower priority ports are moved up toward the top of the list. If two ports are trying to access each other, the port with the lower priority is sent a CLS, allowing the port with higher priority to make a connection.","5.9.2 Multiple Loop Switch System Impacts on Fairness","The rotating priority scheme described in the paragraph above is reasonably sufficient for a single Loop Switch system but may not provide adequate fairness for multiple Loop Switch systems. Multiple Loop Switch systems are interconnected by configuring ports as either a \u201ctree\u201d, or \u201cstring\u201d, cascade. If a port configured as a cascade port has a pending request that collides with a pending request from a port configured as a device, the first-come, first-served rotating priority may not be the best solution for system performance. A pending OPN request from a cascade port implies that at least two Loop Switches are already involved in the connection. Allowing a pending OPN from a locally connected device to close down a connection that has already propagated through several Loop Switches would adversely affect system performance.","Optionally, a second layer may be added to the fairness mechanism. This layer improves system performance as compared to the true rotating priority system. A port-type based priority system that takes precedence when differently configured ports have pending access collisions was implemented. Since a \u201cstring\u201d cascade implies multiple Loop Switches connected together and a \u201ctree\u201d cascade implies only two Loop Switches interconnected the priority, based on port type, is set as shown below:",{"@attributes":{"id":"p-0219","num":"0510"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"String cascade","Highest Priority"]},{"entry":[{},"Tree cascade","2 Highest Priority"]},{"entry":[{},"Device Port","Lowest Priority"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"If two ports of the same type have an access request collision, the rotating priority scheme allows the first connection request received to proceed, closing down the request that came second.","5.9.3 Repetitive Closure Impacts on Fairness","Despite the mechanisms previously described in the sections on cascades and fairness, a system may still get into a pattern of access collisions where a particular device is repeatedly closed down. A simple illustration of this condition is shown in .",{"@attributes":{"id":"p-0222","num":"0513"},"figref":"FIG. 18","b":["1100","1102","1105","1106","1107","1108","1109","1110","1103","1104","3","1105","1100","1104","1104","1100","3","1105","1104","1100","3","3","3","3"]},"To eliminate starvation conditions, a third layer of fairness mechanisms exists. A CLS counter based on ALPA's, tracks the number of sequential times an ALPA's OPN requests are closed down without any frames being transferred. If the CLS counter reaches the software settable threshold the next time an OPN is received containing that ALPA as the source, its priority is increased to the highest priority. Until a connection is made that transfers at least a frame of data, any request made by this ALPA will retain the highest priority and will win any pending connection collisions. (If two ports with highest priority requests collide, the rotating first-come, first-served priority will determine the winner.) Each port can individually have this ALPA-based priority increase enabled\/disabled via Port Control Register #.","A \u201cdumb\u201d time-based priority mechanism also may be used. This mechanism increases the port's priority on a time-slot basis rather than on an ALPA basis. The duty cycle of this timer is controlled and ports are enabled via Port Control Register #.","Both the ALPA and time-based priority controls may be applied to any type of port.","5.10 Zoning","5.10.1 Non-overlapping Zoning","In both hub emulation and switch (segmenting) modes of operation, each port can be assigned to one of a number of possible non-overlapping zones. Zone assignments for each port are assigned by programming specific zone values into the non-overlapping zone registers. The devices on each port within a zone are connected such that only those devices can talk to each other and they form a loop that is totally isolated from all other ports on the Loop Switch. Both data transfers and loop initialization activity is totally restricted to individual zones. Port discovery is valid only for zone  when non-overlapping zoning is turned on since Loop Switch is designed to support a single ALPA map. The non-overlapping zone information is also captured through the serial EEPROM interface.","5.10.2 Overlapping Zoning (Switching Mode)","In switching operation, overlapping zones can be configured by disabling certain source\/destination port combinations. Since the Loop Switch in switching (segmenting) mode is broken up into individual loop segments for each port, the devices in each port are located in different zones. Normally devices on different ports can talk to each other through the processes described earlier. However, for each source port access to certain destination ports can be disabled, providing zone to zone isolation capability. This disabling function is accomplished by writing source\/destination port disable controls in the overlapping zone destination port disable registers. By itself, overlapping hard zoning does not isolate loop initialization activity to individual loop segments. LIP isolation must be explicitly enabled for this to occur.","5.11 LIP Isolation","Normally when a LIP is received on any port, the Loop Switch reverts into hub emulation mode if it is not already configured that way. LIPs then propagate through all of the Loop Switch ports to allow loop initialization. Depending upon the system requirements this may result in unacceptable interruptions to loop traffic. In order to reduce the frequency or at least manage the timing of these interruptions, Loop Switch can be configured to provide LIP isolation in switching mode. This isolation includes preventing a LIP from propagating when a GBIC\/SFP is removed (and subsequently reinserted). Two main categories of LIP isolation are possible: non-stealth mode and stealth mode.","5.11.1 Non-Stealth Modes","Non-stealth mode isolation either keeps the LIP propagation isolated to a specific zone, which has no impact on other zones, or totally isolates the device from the loop. The device that generated the LIP is isolated from the system until it is determined that a LIP and subsequent loop initialization cycle will not impact system performance.","5.11.1.1 Hub Emulation Mode","Non-overlapping hard zones guarantee that LIPs do not propagate from one zone to another, but a LIP in any zone causes all of the other ports in that zone to re-initialize.","5.11.1.2 Switching (Segmenting)) Mode","In the Loop Switch switching (segmenting) mode two LIP isolation solutions are possible. For any solution to be enabled a global LIP isolation enable bit must be set in the router. This does not determine a specific behavior for any port; it simply enables the port-specific behavior for all ports. The LIP isolation behavior for each port is controlled in the port control registers and is individually selectable on a port basis.",{"@attributes":{"id":"p-0232","num":"0523"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Non-Stealth LIP Isolation Control Summary"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"global_isolate_en","port_isolate_en","pass_LIP"]},{"entry":["LIP Isolation Mode","(router)","(port)","(port)"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Non-Isolated","0","x","x"]},{"entry":"(global)"},{"entry":["Non-Isolated (per","1","0","0"]},{"entry":"port)"},{"entry":["Manual Insert","1","1","0"]},{"entry":["Local Insert","1","1","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"In manual insert mode, LIPs are blocked prior to leaving the port. For this mode to be activated on a port the global isolation enable bit must be set in the router and the port isolation enable must be set for that port. Blocked LIPs do not influence the other ports, nor are they allowed to propagate around the full loop where the LIP is originated. This is the most restrictive form of LIP isolation and the LIP'ing device is held inactive and not allowed to communicate. In order to insert the port back into the loop, either LIP's must be sent through all of the Loop Switch ports or the microprocessor may send a directed LIP to that port to allow it to enter the loop. In both cases, the entire system is rolled into a loop and all ports participate in a loop initialization cycle. Firmware can detect that a port was isolated with an interrupt for that port.","5.11.1.2.2 Local Insert Mode","Local insert mode is similar to manual insert mode except that the port that detects the LIP allows local, isolated loop initialization to proceed for that port as a standalone loop. Following the local loop initialization, the port is wired to itself internally. Local data transfers are allowed to proceed but communication with other ports is not allowed. If an OPN is sent from another port to an isolated port, the OPN request normally waits until the isolated port becomes available before being answered or until the entire Loop Switch is initialized. If there is no response to the OPN the source port may send a CLS and then attempt another connection. If selected in the router control registers, the port may receive a CLS back immediately from the Loop Switch when an OPN is sent to an isolated port. In both cases, the entire system is rolled into a loop and all ports participate in a loop initialization cycle. As in manual insert mode, firmware can detect that a port was isolated with an interrupt for that port.","5.11.2 Stealth Mode","Stealth mode LIP isolation provides a low-impact mechanism to allow devices that LIP to join the system without LIP'ing all the devices on the system. Depending on the configuration of the system, the impact on the system ranges from no devices receiving a LIP (except the new device), a few devices receiving a LIP or the whole system being LIP'ed.","The flowchart in  shows the flow the internal state-machine follows to process stealth LIP cycles.","Several levels of control exist for stealth mode isolation. The following sections will illustrate several configurations of stealth isolation on a single Loop Switch ASIC followed by cascaded Loop Switch ASIC examples of stealth isolation. In each case, a black-box description is given followed by a detailed description of the steps that occur within the Loop Switch ASIC's circuitry.","In the table below, the functions of the port-level controls for stealth isolation are shown as well as the global isolation control enable.",{"@attributes":{"id":"p-0239","num":"0530"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"56pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"global_isolate_en","port_isolate_en","Stealth_rcv_lip","Steath_gen_lip"]},{"entry":["LIP Isolation Mode","(router)","(port)","(port)","(port)"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["No Isolation (global)","0","x","x","x"]},{"entry":["No Isolation (per port)","1","1","1","1"]},{"entry":["Receive LIP from","1","1","1","0"]},{"entry":"router"},{"entry":["Forward LIP to router","1","1","0","1"]},{"entry":["Full Isolation","1","1","0","0"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}}}},"In addition to the bits shown above, route-blocking and LIP isolation groups are used to control device to device routing access based on the ALPA of each device as well as LIP isolation based on switch ports.","5.11.2.1 Route-Blocking Groups","The Loop Switch ASIC supports multiple groups that provide route-blocking based on each device's ALPA. Each group contains a set of 126 bits corresponding to each ALPA possible on the loop. If the bit is set to \u20181\u2019, that associated device cannot communicate with any other device in that group whose enable is also set to \u20181\u2019. The route-blocking mechanism covers any connection that passes through the Loop Switch ASIC, regardless of cascade hops. When the OPN is received by the router look-up state-machine, each route-blocking group is parsed to see if the connection is blocked. If the connection is blocked, the OPN is routed back to the originating port, making it appear to the originating device that the destination ALPA is not on the loop. A half-duplex OPN is a special case and route-blocking is not supported. The source port is not included in the OPN frame so the logic would have to parse all the ALPA's that exist on that port.","Some initiators will continually attempt to access a device whose ALPA appeared in the LILP frame but it is not able to open. After a several attempts, that initiator may LIP the loop. As long as the filtered LIRP\/LILP mechanism is not disabled the LIP should clear the blocked ALPA from the initiator's LILP received during the LIP cycle and system operation should continue.","An ALPA can be contained in multiple route-blocking groups. If hardware generation of the LIP isolation groups is enabled, this route-blocking groups generates overlapping isolation groups automatically.","In the SOC422 Loop Switch three route-blocking groups are included in the SEPROM space to allow for some level of route-blocking\/LIP isolation in an unmanaged switch.","5.11.2.2 LIP Isolation Zone Groups","The Loop Switch ASIC supports  LIP Isolation zones. Note that the number 16 is an implementation value, not a design limitation.","Each port has a control register defined in the router's memory map space containing a set of 16 bits corresponding to each isolation zone. If the bit is set to \u20181\u2019, the port is included in that LIP Isolation group, if set to \u20180\u2019, the port is not included. While groups are defined for a single Loop Switch ASIC, if multiple Loop Switch ASIC's are cascaded, a forwarded LIP from Zone  of one Loop Switch ASIC will cause ports in Zone  of every Loop Switch ASIC in the system to be affected.","Isolation groups may overlap on a port. If a LIP is detected on a port configured to forward LIP's, it will cause a loop initialization that includes all ports enabled to receive LIP's in every zone in which the original port belongs.","5.11.2.3 Interswitch Frames","The Loop Switch ASIC supports LIP isolation and route blocking over all switches in the system. If multiple stealth-mode switches exist in the system (indicated by a non-zero value in the Stealth-Interswitch Cascade Registers, a mechanism is required to arbitrate to determine the switch that has control of the loop in the case of simultaneous LIP events on multiple switches. Additionally, once control has been determined, a mechanism to communicate which zone(s) are involved in the LIP cycle is required. A broadcast, interswitch frame covers both needs. Also, a general-purpose interswitch frame is supported to provide a mechanism for the firmware to have in-band communication with the other switches in the system.","5.11.2.3.1 LIP Cycle Interswitch Frames","The LIP cycle's interswitch frame is loosely based on the general format of a Loop Initialization frame. Seven 32-bit words make up the header, followed by a 16-byte payload and then a CRC. This frame has the format in the figure shown below:",{"@attributes":{"id":"p-0250","num":"0541"},"chemistry":{"@attributes":{"id":"CHEM-US-00001","num":"00001"},"img":{"@attributes":{"id":"EMI-C00001","he":"61.13mm","wi":"111.34mm","file":"US07664018-20100216-C00001.TIF","alt":"embedded image","img-content":"chem","img-format":"tif"}}}},"The 1word of the payload indicates the frame is the LIP Interswitch frame. The 2word of the payload contains the serial number, bits - only, of the switch attempting to win control of the LIP cycle. The 3word contains a bit-map indicating which zones are to be included in the LIP cycle in the upper half and is padded with 2 bytes of zeros in the lower half.","5.11.2.3.2 General Purpose Interswitch Frames","The general purpose interswitch frame is user programmable with the Loop Switch ASIC capturing the data frame on a match of the 1and 3words in the header. The frame has a 32 byte payload. The first 4 bytes of the payload must be the serial number of the Loop Switch ASIC and are automatically inserted by the Loop Switch ASIC even though they are read-accessible in the transmit Interswitch frame registers. The remaining 28 bytes of the payload are user-defined.",{"@attributes":{"id":"p-0253","num":"0544"},"chemistry":{"@attributes":{"id":"CHEM-US-00002","num":"00002"},"img":{"@attributes":{"id":"EMI-C00002","he":"40.81mm","wi":"107.70mm","file":"US07664018-20100216-C00002.TIF","alt":"embedded image","img-content":"chem","img-format":"tif"}}}},"The Loop Switch ASIC compares the received serial number in the payload against the local serial number to determine whether the frame is from another switch and should be forwarded or if the frame is originally from this switch and should be blocked. An interrupt can be generated on either detection of a remote frame or receipt of the wrapped-back local frame.","5.11.3 Stealth Mode Isolation, Single ASIC, Devices in a Single LIP Zone, No Route Blocking","In the table below, the basic controls for stealth isolation for each device is shown.",{"@attributes":{"id":"p-0256","num":"0547"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"56pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"Routes","LIP",{},{}]},{"entry":[{},"Blocked","Zone","Stealth_rcv_lip","Steath_gen_lip"]},{"entry":["Device","(router)","(router)","(port)","(port)"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["HBA #1 1200","None","1","1","0"]},{"entry":["HBA #2 1209","None","I","1","0"]},{"entry":["Disk #1 1204","None","1","0","1"]},{"entry":["Disk #2 1205","None","1","0","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}}}},"In this example, see , all four devices attached to the Loop Switch ASIC , , ,  are in the same LIP Zone without any routes blocked. Route blocking prevents specific devices from communicating with other devices based on their ALPA's. The implication of being in a single zone is that any time a LIP is forwarded to the router , all devices configured to be notified of a LIP will be involved in the resulting loop initialization. The HBA ports ,  are configured so the HBA's are notified when a LIP is forwarded to the router  but do not forward LIPs to other devices themselves. The disks ,  are configured in the opposite manner. A LIP from a disk is forwarded to the system however a LIP in the system is not passed on to a disk port.","Assuming a LIP is generated by Disk # , the ports will be connected into a loop as illustrated by the path internal to the Loop Switch , , , . The two HBA's ,  included in a loop with Disk #  while Disk #  is unaffected. Disk #  forwards the LIP because it has been enabled for LIP forwarding. Disk #  is left out of the LIP cycle because unlike the HBA's it was not configured to receive LIP's. The three devices , ,  will perform a loop initialization cycle. Upon completion, all three devices will be allowed to enter switching mode and communicate with Disk # .","Within the Loop Switch ASIC, the port connected to Disk #  will detect the LIP. The LIP will be blocked at the port  however a \u201cLIP detected\u201d signal will be forwarded to the router . The router logic  will control all the ports , , ,  and cause fill words to be replaced with blocking ARB's to stop new connections from forming within the Loop Switch ASIC . Additionally, R_RDY ordered sets will not be passed through the Loop Switch ASIC  to cause existing connections to complete quickly.","The router logic  will format bits to logically OR with the LIFA frame that include all ALPA's on the switch that are either not in the LIP'ed zone(s) or are on ports configured not to be notified of a LIP. (In this case 1 bit would be set for Disk #). Additionally, the ALPA of every device on the switch within the zone(s) being LIP'ed, not configured to be notified of a LIP, is formatted into a list within the router to insert into the LIRP frame. In this case that would only be the ALPA for Disk # .","As soon as the logic detects all traffic has halted; the crossbar switch will be configured to connect the ports and router into a loop for the loop initialization cycle. At this point, traffic will be allowed to resume on all ports not included in the loop initialization. Any OPN directed toward a device that is in the initialization loop will be responded to with a CLS routed back to the OPN's originator, indicating the requested device is busy. The LIP from the port will then be allowed to circulate the loop of isolated ports.","As the LIFA frame passes through the router, it is modified by the router, OR'ing in all ALPA's from the list formatted in the router.","As the LIRP frame passes through the router, it is also modified. The ALPA list, containing devices in the zone(s) being initialized but not actually involved in the initialization, is inserted into the LIRP frame. The offset field is incremented and the CRC recalculated.","The loop initialization cycle concludes with the LILP frame and CLS ordered set being circulated around the loop.","When the Loop Switch ASIC detects the initialization is complete, the router will allow the isolated ports to participate with the main system again.","5.11.4 Stealth Mode Isolation, Single ASIC, Devices in Multiple LIP Zones, No Routes Blocked","In the table below, the basic controls for stealth isolation for each device is shown, also refer to .",{"@attributes":{"id":"p-0267","num":"0558"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"56pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"Routes","LIP",{},{}]},{"entry":[{},"Blocked","Zone","Stealth_rcv_lip","Steath_gen_lip"]},{"entry":["Device","(router)","(router)","(port)","(port)"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["HBA #1 1220","None","1 1233","1","0"]},{"entry":["HBA #2 1232","None","2 1234","1","0"]},{"entry":["Disk #1 1228","None","1 1233","0","1"]},{"entry":["Disk #2 1229","None","2 1234","0","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}}}},"In this example, all four devices attached to the Loop Switch ASIC are in a combination of LIP Zones, see  , . No routes are blocked. All devices , , ,  can communicate with all other devices. The implication of being in a separate zone is that any time a LIP is forwarded to the router , only devices within the same zone, configured to be notified of a LIP will be involved in the resulting loop initialization. The HBA ports ,  are configured so the HBA's are notified when a LIP is forwarded to the router but do not forward LIPs to other devices themselves. The disk ports ,  are configured in the opposite manner. A LIP from a disk is forwarded to the system however a LIP in the system is not passed on to a disk port , .","Assuming a LIP is generated by Disk # , the ports will be connected into a loop as illustrated by path within the Loop Switch, , , . Only HBA #  gets included in a loop , ,  with Disk #  while both HBA #  and Disk #  are unaffected and can continue communications. If HBA #  or Disk #  tries to send an OPN to either HBA #  or Disk #  while isolated, a CLS will be returned to the originating device. Disk # forwards the LIP to the router  because it has been enabled for LIP forwarding. The two devices will perform a loop initialization cycle. Upon completion, both devices will be allowed to enter switching mode and communicate with HBA # and Disk #.","HBA # was included in a loop initialization cycle that did not include the ALPA for HBA # in the LIRP\/LILP frames. Communication from HBA # to HBA # is essentially broken since HBA # has no knowledge of HBA #. An optional setting in the router control registers would allow all ALPA's in the system to be included in the LIRP\/LILP frames.","Within the Loop Switch ASIC , the port connected to Disk #  will detect the LIP. The LIP will be blocked at the port however a \u201cLIP detected\u201d signal will be forwarded to the router. The router logic  will control all the ports , , ,  and cause fill words to be replaced with blocking ARB's to stop new connections from forming within the Loop Switch ASIC . Additionally, R_RDY ordered sets will not be passed through the Loop Switch ASIC to cause existing connections to complete quickly.","The router logic  will format bits to logically OR with the LIFA frame. In this example, the bits corresponding to the ALPA's for HBA # and Disk # will be set. Unlike the single zone example, all devices in Zone  are included in the loop so no ALPA's are formatted into a list to be inserted into the LIRP frame.","As soon as the router logic detects all traffic has halted; the crossbar switch will be configured to connect the ports and router into a loop for the loop initialization cycle. At this point, traffic is allowed to resume on the ports connected to HBA # and Disk #. If an OPN was directed toward either HBA # or Disk #, it will be responded to with a CLS routed back to the OPN's originator, indicating the requested device is busy. The LIP from the port will then be allowed to circulate the loop of isolated ports.","As the LIFA frame passes through the router, it will be modified by the router, OR'ing in all ALPA's from the list formatted in the router.","As the LIRP frame passes through the router, it is not modified. All devices in the zone are involved in the loop initialization.","The loop initialization cycle concludes with the LILP frame and CLS ordered set being circulated around the loop.","When the Loop Switch ASIC detects the initialization is complete, the router will allow the isolated ports to participate with the main system again.","5.11.5 Stealth Mode Isolation, Single ASIC, Devices in Multiple LIP Zones, With Blocked Routes","In the table below, the basic controls for stealth isolation for each device is shown, also refer to .",{"@attributes":{"id":"p-0279","num":"0570"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"49pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"Routes","LIP","Stealth","Steath_gen"]},{"entry":[{},"Blocked","Zone","rcv_lip","lip"]},{"entry":["Device","(router)","(router)","(port)","(port)"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["HBA #1 1240","To HBA #2","1 1255","1","0"]},{"entry":["HBA #2 1241","To HBA #1","2 1254","1","0"]},{"entry":["Disk #1 1243","None","1 1255","0","1"]},{"entry":["Disk #2 1242","None","1 & 2","0","1"]},{"entry":[{},{},"1254, 1255"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}}}},"In this example, all four devices attached to the Loop Switch ASIC are in a combination of LIP Zones, see  , . The route between both initiators ,  is blocked. HBA #  gets LIP'ed if either disk ,  LIP's. HBA #  only gets a LIP if Disk #  LIP's.","Assuming a LIP is generated by Disk # , the ports , ,  will be connected into a loop as shown by the path , , , . Both HBA #  and HBA #  get included in a loop  with Disk #  while Disk #  is unaffected and could continue communications if another device was available. If Disk #  tries to send an OPN to any of the isolated devices, a CLS will be returned to the originating device. Disk # forwards the LIP to the router  because it has been enabled for LIP forwarding and both HBA's are rolled into the isolation loop due to the overlapping zones , . The three devices will perform a loop initialization cycle , , . Upon completion, all of the devices will be allowed to enter switching mode and communicate.","In this example, although both HBA's ,  see the ALPA of the other HBA, any OPN sent from one HBA to the other is detected as a blocked route and the OPN is returned to the originating HBA. If either HBA gets upset by the continuous return of its OPN to a device it believes exists on the loop, it might LIP. This LIP would only include the LIP'ing HBA and the router , which would insert only the ALPA's in that LIP zone into the LIRP frame, effectively removing the other HBA's ALPA from its table.","Within the Loop Switch ASIC , the port connected to Disk #  will detect the LIP. The LIP will be blocked at the port however a \u201cLIP detected\u201d signal will be forwarded to the router logic . The router logic  will control all the ports , , ,  and cause fill words to be replaced with blocking ARB's to stop new connections from forming within the Loop Switch ASIC . Additionally, R_RDY ordered sets will not be passed through the Loop Switch ASIC  to cause existing connections to complete quickly.","The router logic will format bits to logically OR with the LIFA frame. In this example, the bit corresponding to the ALPA for Disk # will be set. Additionally the ALPA for Disk # will be formatted into the list to be inserted into the LIRP frame.","As soon as the router logic detects all traffic has halted; the crossbar switch will be configured to connect the ports and router into a loop for the loop initialization cycle. At this point, traffic is allowed to resume on the port connected to Disk #. If an OPN was directed toward either HBA or Disk #, it will be responded to with a CLS routed back to the Disk #, indicating the requested device is busy. The LIP from the port will then be allowed to circulate the loop of isolated ports.","As the LIFA frame passes through the router, it will be modified by the router, OR'ing in the bit corresponding to the ALPA for Disk #.","As the LIRP frame passes through the router, it is also modified. The ALPA list, containing devices in the zone(s) being initialized but not actually involved in the initialization (Disk #'s ALPA), is inserted into the LIRP frame. The offset field is incremented and the CRC recalculated.","The loop initialization cycle concludes with the LILP frame and CLS ordered set being circulated around the loop.","When the Loop Switch ASIC detects the initialization is complete, the router will allow the isolated ports to participate with the main system again.","At this point, both HBA's will attempt to OPN each ALPA detected in the LILP frame to PLOGI into each device. Since the Route between HBA # and HBA # is blocked, the router will return the OPN to the originator when either HBA tries to open the other.","5.11.6 Stealth Mode Isolation, Multiple ASICs, Devices in Multiple LIP Zones, With Blocked Routes","In the table below, the basic controls for stealth isolation for each device is shown, also refer to .",{"@attributes":{"id":"p-0292","num":"0583"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"49pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"Routes","LIP","Stealth","Stealth_gen"]},{"entry":[{},"Blocked","Zone","rcv_lip","lip"]},{"entry":["Device","(router)","(router)","(port)","(port)"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["HBA #1 1300","To HBA #2","1 1329","1","0"]},{"entry":["HBA #2 1301","To HBA #1","2 1328","1","0"]},{"entry":["Disk #1 1302","None","1 1329","0","1"]},{"entry":["Disk #2 1303","None","1 & 2","0","1"]},{"entry":[{},{},"1329, 1328"]},{"entry":["Disk #3 1304","None","2 1328","0","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}}}},"In this example, all five devices attached to the Loop Switch ASICs are in a combination of LIP Zones, see , , . The route between both initiators HBA's ,  is blocked. HBA #  gets LIP'ed if either disk #  or #  LIP's. HBA #  gets a LIP if Disk #  or #  LIP's. To support the multiple Loop Switch ,  system, the duplicate cascade  on each Loop Switch ASIC ,  is configured as a stealth interswitch cascade.","Assuming a LIP is generated by Disk # , the ports will be connected within the Loop Switch by the path , , . Both HBA #  and HBA #  get included in a loop , , , , , ,  with Disk #  while Disk #  and #  are unaffected and could continue communications if another device was available. If Disk #  or #  tries to send an OPN to any of the isolated devices, a CLS will be returned to the originating device. Disk #  forwards the LIP to the router  because it has been enabled for LIP forwarding and both HBA's are rolled into the isolation loop due to the overlapping zones , . The three devices will perform a loop initialization cycle. Upon completion, all of the devices will be allowed to enter switching mode and communicate.","In this example, although both HBA's see the ALPA of the other HBA, any OPN sent from one HBA to the other is detected as a blocked route and the OPN is returned to the originating HBA. If either HBA gets upset by the continuous return of its OPN to a device it believes exists on the loop, it might LIP. This LIP would only include the LIP'ing HBA and the router, which would insert only the ALPA's in that LIP zone into the LIRP frame, effectively removing the other HBA's ALPA from its table.","Within the Loop Switch ASIC, the port connected to Disk # will detect the LIP. The LIP will be blocked at the port however a \u201cLIP detected\u201d signal will be forwarded to the router. The router logic will control all the ports and cause fill words to be replaced with blocking ARB's to stop new connections from forming within the ASIC. Additionally, R_RDY ordered sets will not be passed through the ASIC to cause existing connections to complete quickly.","Unlike the single Loop Switch ASIC system, this system has to arbitrate for the master of the initialization cycle and pass the LIP zone(s) affected information to the other Loop Switch ASIC. As soon as the traffic is stopped on the Loop Switch ASIC # , a loop connecting the router to the stealth interswitch cascade port, in this case the duplicate cascade  between Loop Switch ASICs, is made within the Loop Switch. When the interswitch\/router loop has been formed, a stream of 16 LIP's is sent out. Loop Switch ASIC #'s  traffic is already halted so it can connect its router and the duplicate cascade into a loop upon receipt of the LIP's. The LIP interswitch frame is generated by Loop Switch ASIC #, received by the router in Loop Switch ASIC # , stored and forwarded back to Loop Switch ASIC #. Since Loop Switch ASIC # is seeing a LIP frame for the 1time this cycle it sets the retransmit request bit in the frame forwarded back to Loop Switch ASIC #. This causes Loop Switch ASIC # to resend the LIP frame. Loop Switch ASIC #, forwards the frame back to Loop Switch ASIC # without modification this time as it has already seen the LIP frame. NOTE: This retransmit mechanism ensures that all switches receive the LIP frame regardless of the relationship of the stealth cascades and the router in the switch core.","ARB FF ordered sets are sent out by Loop Switch ASIC # as fill words.","Upon winning control of the initialization cycle, Loop Switch ASIC #  connects Disk #  into the loop with the local router  and the duplicate cascade port . After this loop is made, the LIP's are allowed to propagate from Disk # into the entire system.","Upon receipt of the second set of LIP's, Loop Switch ASIC # configures its ports for the initialization cycle based on the interswitch frame. In this case, both HBA's, the duplicate cascade port and the router are rolled into a loop. As soon as the isolated loop is created on each Loop Switch, each Loop Switch then allows all unaffected ports on that Loop Switch to resume communications and traffic could resume between the Loop Switch ASIC's on the primary cascade. The devices in the isolated loop initialization will start arbitrating to determine the LIM.","The router logic in Loop Switch ASIC #  will not attempt to modify either the LIFA or LIRP frames. Both devices attached locally to this Loop Switch ASIC are involved in the initialization cycle and don't require the Loop Switch ASIC to reserve their ALPA's. The router logic in Loop Switch ASIC # will format bits to logically OR with the LIFA frame. In this example, the bits corresponding to the ALPA's for Disks # and # will be set. Additionally the ALPAs for Disks # and # will be formatted into the list to be inserted into the LIRP frame.","As the LIFA frame passes through the router in Loop Switch ASIC #, it is unaffected. As the LIFA frame passes through the router in Loop Switch ASIC #, it will be modified by the router, OR'ing in all ALPA's from the list formatted in the router.","As the LIRP frame passes through the router in Loop Switch ASIC #, it is also modified. The ALPA list, containing devices in the zone(s) being initialized but not actually involved in the initialization, is inserted into the LIRP frame. The offset field is incremented and the CRC recalculated.","The loop initialization cycle concludes with the LILP frame and CLS ordered set being circulated around the loop.","When the Loop Switch ASIC detects the initialization is complete, the router will allow the isolated ports to participate with the main system again.","At this point, both HBA's will attempt to OPN each ALPA detected in the LILP frame to PLOGI into each device. Since the Route between HBA # and HBA # is blocked, the router will return the OPN to the originator when either HBA tries to open the other. Additionally, HBA # may have discovered the presence of Disk # and will attempt to PLOGI into that disk. If this access is not desired either route blocking between HBA # and Disk # could be configured or a 3isolation zone covering only Disk # and HBA # could be set up.","5.11.7 Stealth Mode Isolation, Multiple ASICs, Multiple Zones, HBA # & HBA # in Connection","In the table below, the basic controls for stealth isolation for each device is shown, see also .",{"@attributes":{"id":"p-0308","num":"0599"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"Routes",{},{},"Steath"]},{"entry":[{},"Blocked","LIP Zone","Stealth_rcv_lip","gen_lip"]},{"entry":["Device","(router)","(router)","(port)","(port)"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["HBA #1 1300","None","1 1329","1","0"]},{"entry":["HBA #2 1301","None","2 1328","1","0"]},{"entry":["Disk #1 1302","None","1 1329","0","1"]},{"entry":["Disk #2 1303","None","1 & 2","0","1"]},{"entry":[{},{},"1329, 1328"]},{"entry":["Disk #3 1304","None","2 1328","0","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}}}},"In this example, all five devices , , , ,  attached to the Loop Switch ASICs are in a combination of LIP Zones, see  , . The route between both initiators ,  is blocked. HBA #  gets LIP'ed if either disk #  or #  LIP's. HBA #  gets a LIP if Disk #  or #  LIP's. To support the multiple switch system , , the duplicate cascade  on each Loop Switch ASIC is configured as a stealth interswitch cascade.","HBA #  and HBA #  are communicating when a LIP is generated by Disk # . After all traffic on the system is stopped, the ports will be connected into a loop as illustrated by the path , , , , , , . Both HBA #  and HBA #  get included in a loop with Disk #  while Disk #  and #  are unaffected and could continue communications if another device was available. If Disk #  tries to send an OPN to any of the isolated devices, a CLS will be returned to the originating device. Disk #  forwards the LIP to the router  because it has been enabled for LIP forwarding and both HBA's are rolled into the isolation loop due to the overlapping zones. The three devices will perform a loop initialization cycle. Upon completion, all of the devices will be allowed to enter switching mode and communicate.","Within the Loop Switch ASIC , the port connected to Disk #  will detect the LIP. The LIP will be blocked at the port however a \u201cLIP detected\u201d signal will be forwarded to the router . The router logic  will control all the ports and cause fill words to be replaced with blocking ARB's to stop new connections from forming within the ASIC. Additionally, R_RDY ordered sets will not be passed through the ASIC to cause existing connections to complete quickly.","Unlike the single Loop Switch ASIC system, this system has to arbitrate for the master of the initialization cycle and pass the LIP zone(s) affected information to the other Loop Switch ASIC. As soon as the traffic is stopped on the Loop Switch ASIC #, a loop connecting the router to the stealth interswitch cascade port, in this case the duplicate cascade between Loop Switch ASICs, is made within the switch. When the interswitch\/router loop has been formed, a stream of 16 LIP's is sent out. Some of ASIC #'s traffic is still running, pending the end of the connection between HBA # and HBA #. The cascades between Loop Switch ASIC # and Loop Switch ASIC # are halted from the Loop Switch ASIC # side. Loop Switch ASIC # detects the LIP's on the duplicate cascade so it connect its router and the duplicate cascade into a loop upon receipt of the LIP's. The LIP interswitch frame is generated by Loop Switch ASIC #, received by the router in Loop Switch ASIC # and stored in Loop Switch ASIC #'s router. When all traffic on Loop Switch ASIC # has been stopped, the interswitch frame is forwarded to ASIC #. ARB FF ordered sets are sent out by Loop Switch ASIC # as fill words.","Upon winning control of the initialization cycle, Loop Switch ASIC # connects Disk # into the loop with the local router and the duplicate cascade port. After this loop is made, the LIP's are allowed to propagate from Disk # into the entire system.","Upon receipt of the second set of LIP's, Loop Switch ASIC # configures its ports for the initialization cycle based on the interswitch frame. In this case, the HBA's, the duplicate cascade port and the router are rolled into a loop. As soon as a loop is created on each switch, each switch then allows all unaffected ports on that switch to resume communications and traffic could resume between the Loop Switch ASIC's on the primary cascade. The devices in the loop initialization will start arbitrating to determine the LIM.","The router logic in Loop Switch ASIC # will not attempt to modify either the LIFA or LIRP frames. Both devices attached locally to this Loop Switch ASIC are involved in the initialization cycle and don't require the Loop Switch ASIC to reserve their ALPA's. The router logic in Loop Switch ASIC # will format bits to logically OR with the LIFA frame. In this example, the bits corresponding to the ALPA's for Disks # and # will be set. Additionally the ALPAs for Disks # and # will be formatted into the list to be inserted into the LIRP frame.","As the LIFA frame passes through the router in Loop Switch ASIC #, it is unaffected. As the LIFA frame passes through the router in ASIC #, it is modified by the router, OR'ing in all ALPA's from the list formatted in the router.","As the LIRP frame passes through the router in Loop Switch ASIC #, it is also modified. The ALPA list, containing devices in the zone(s) being initialized but not actually involved in the initialization, is inserted into the LIRP frame. The offset field is incremented and the CRC recalculated.","The loop initialization cycle concludes with the LILP frame and CLS ordered set being circulated around the loop.","When the Loop Switch ASIC detects the initialization is complete, the router will allow the isolated ports to participate with the main system again.","At this point, both HBA's will attempt to OPN each ALPA detected in the LILP frame to PLOGI into each device. Since the Route between HBA # and HBA # is blocked, the router will return the OPN to the originator when either HBA tries to open the other. Additionally, HBA # may have discovered the presence of Disk # and will attempt to PLOGI into that disk. If this access is not desired either route blocking between HBA # and Disk # could be configured or a 3isolation zone covering only Disk # and HBA # could be set up.","5.11.8 Stealth Mode Isolation, Multiple ASICs, Devices in Multiple LIP Zones, Simultaneous LIP's","In the table below, the basic controls for stealth isolation for each device is shown, also refer to  and .",{"@attributes":{"id":"p-0322","num":"0613"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}},{"entry":[{},"Routes",{},{},"Steath"]},{"entry":[{},"Blocked","LIP Zone","Stealth_rcv_lip","gen_lip"]},{"entry":["Device","(router)","(router)","(port)","(port)"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["HBA #1 1400 1500","None","1 1429 1529","1","0"]},{"entry":["HBA #2 1404 1504","None","2 1428 1528","1","0"]},{"entry":["Disk #1 1402 1502","None","1 1429 1529","0","1"]},{"entry":["Disk #2 1403 1503","None","1 1429 1529","0","1"]},{"entry":["Disk #3 1401 1501","None","2 1428 1528","0","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}}}},"In this example, all five devices attached to the Loop Switch ASICs are in a combination of LIP Zones , , , . HBA # ,  gets LIP'ed if either disk # ,  or # ,  generates a LIP. HBA # ,  gets a LIP if Disk # ,  generates a LIP. To support the multiple switch system , , , , the duplicate cascade ,  on each Loop Switch ASIC is configured as a stealth interswitch cascade.","Assuming a LIP is generated by Disk # ,  and Disk # ,  almost simultaneously, two loop initialization cycles will have to be performed to handle the non-overlapping zones. Loop Switch ASIC # ,  will win control of the first initialization cycle (due to the lower serial number) and the ports will be connected into a loop as illustrated by the path shown in , , , . HBA # ,  gets included in a loop with only Disk # ,  while HBA # ,  and Disk # ,  are unaffected and could continue communications on the primary cascade. HBA # ,  and Disk # ,  will perform a loop initialization cycle. Upon completion, both of these devices will be allowed to enter switching mode and communicate with the rest of the system.","Upon detection of the complete loop initialization cycle, Loop Switch ASIC # ,  will then initiate a loop initialization cycle including HBA # ,  and Disk # , . The resulting loop is shown in , , , , , , . HBA #  and Disk #  will perform a loop initialization cycle. Upon completion, both of these devices will be allowed to enter switching mode and communicate with the rest of the system. NOTE: If both LIP'ing devices had been in the same zone, Loop Switch ASIC #  would have detected this and only one loop initialization would have been required.","Within the Loop Switch ASICs, the ports ,  connected to Disks # and # will detect the LIP's. The LIP's will be blocked at each port however a \u201cLIP detected\u201d signal will be forwarded to the router , , ,  in each Loop Switch ASIC. The router logic , , ,  will control all the ports , , , , , , , , , , , , , , , , ,  and cause fill words to be replaced with blocking ARB's to stop new connections from forming within the Loop Switch ASIC. Additionally, R_RDY ordered sets will not be passed through the Loop Switch ASIC to cause existing connections to complete quickly.","Unlike the single Loop Switch ASIC system, this system has to arbitrate for the master of the initialization cycle and pass the LIP zone(s) affected information to the other Loop Switch ASIC. As soon as the traffic is stopped on each Loop Switch ASIC, a loop connecting the router to the stealth interswitch cascade port, in this case the duplicate cascade between Loop Switch ASICs, is made within the switch. When each Loop Switch ASIC's interswitch cascade\/router loop has been formed, a stream of 16 LIP's is sent out. The LIP interswitch frame generated by Loop Switch ASIC #, received by the router in Loop Switch ASIC #, but is discarded since it has a higher serial number than Loop Switch ASIC #. The Loop Switch ASIC # interswitch frame is received by Loop Switch ASIC #, stored and forwarded back to Loop Switch ASIC #. ARB FF ordered sets are sent out by both Loop Switch ASIC's as fill words. Upon detecting it won, Loop Switch ASIC # will roll Disk # and the duplicate cascade port into a loop and generate at least 10 milliseconds worth of LIP's.","Upon receipt of the second set of LIP's, Loop Switch ASIC # configures its ports for the initialization cycle based on the interswitch frame from Loop Switch ASIC #. In this case, HBA #, the duplicate cascade ports and Disk # are rolled into a loop. As soon as this loop created on each switch, each switch then allows all unaffected ports on that switch to resume communications and traffic could resume between the Loop Switch ASIC's on the primary cascade. The devices in the loop initialization will start arbitrating to determine the LIM.","The router logic in Loop Switch ASIC # will OR in the bit representing the ALPA for HBA # in the LIFA frame but will not add the ALPA to the LIRP frame since HBA # is in another isolation zone. The router logic in Loop Switch ASIC # will format bits to logically OR with the LIFA frame. In this example, the bits corresponding to the ALPA's for Disks # and # will be set to reserve those ALPA's but it will not modify the LIRP frame since the other disks are in a separate LIP isolation zone.","The switch will detect the port that contains the LIM relative to each Loop Switch ASIC and connect the router in each Loop Switch ASIC between the LIM port and the other ports in the initialization loop. (In this case Disk # became the LIM) As the LIFA frame passes through the router in Loop Switch ASIC #, HBA #'s ALPA bit is OR'ed in and the CRC is recalculated. As the LIFA frame passes through the router in Loop Switch ASIC #, it will be modified by the router, OR'ing in all ALPA's for both Disk # and Disk #.","As the LIRP frame passes through the router in each Loop Switch ASIC, it is not modified.","The loop initialization cycle concludes with the LILP frame and CLS ordered set being circulated around the loop.","When the Loop Switch ASIC detects the initialization is complete, the router will allow the isolated ports to participate with the main system again.","Loop Switch ASIC # will then detect that the LIP Zone # ,  cycle is complete and will initiate the LIP Zone # ,  loop initialization cycle.","5.12 CPU Port Interface","5.12.1 CPU Port Description and Operation","There are situation in which in band communication needs to take place between switches and remote Fibre Channel devices such as RAID controllers when the Loop Switch is contained in an SBOD configuration. The cpu_port is a Fibre Channel MAC, the encoder\/decoder or link side is connected to the Loop Switch crossbar switch. This is then accessed as an additional port. The CPU Port will look like another device sitting on a Loop Switch port. In which the 23rd or additional port can be configured to be a device, tree, or string port like any other port along with all other port functionality.","A transmit engine is used to send data to commands out of the FC interfaces. Firmware will create the frame or packet in RAM. It will configure and load the data from RAM to the CPU Port transmit buffer. The buffer is large enough to hold an entire FC frame (2112 byte payload). An interrupt will go back to the processor to indicate when the transmit is completed. CRC will be created and sent out with the frame. The CPU port transmit buffer will be accessible through the parallel or IC interface.","The receive engine will handle frames and packets that are sent to the CPU port. The buffer is large enough to hold an entire FC frame (2112 byte payload). CRC will be checked when the frame arrives. An interrupt will go back to the processor to indicate when a frame has been received and when the frame has been read out. The CPU port receive buffer will be accessible through the parallel or IC interface.","In the transmit engine the processor moves data into the transmit FIFO in the CPU Port, see . This is accomplished by first writing a zero to the Tx FIFO Pointer register . This sets the FIFO pointer address to zero. Next, write the data to the Data Port register . The data that is being written to the FIFO is writing to a two word wide FIFO which means that data is not written to the FIFO until two words have been sent. So even if there are an odd number of words being written a dummy write of 32'h0 needs to be done to load in the last two words . The first and last words sent are the system SOF and EOF delimiters. The definitions of the system delimiters are below. A valid SOF delimiter would be 32'h2e000000 and a valid EOF would be 32'h41000000. After the DMA transfer is complete, set the Send Frame bit in the Control Register to send the frame to the switch core .","In the Receive engine the processor reads data from CPU port to RAM. An interrupt will occur upon a frame being rx'ed in the Rx FIFO. The Rx FIFO Pointer register should be read to determine the length of the Rx frame . The Rx Pointer register then needs to be written a zero to preload the data for reading . The first and last words in the frame will be the specially encoded system SOF and EOF delimiters.","5.13 Port Management Functions","5.13.1 Port Control","Port control functions include beaconing, forcing a port insertion or bypass, setting policies, transmitting ordered sets into the port or loop and capturing ordered sets on the port.","5.13.2 Port Status","Port status functions include port initialization state, GBIC\/SFP status, transceiver operational status as well as the ordered set detection capability on a per port basis.","5.13.3 Ordered Set Detection","Ordered set detection is constantly occurring with Port Detector Register. This register is cleared on read or by writing to the Clear Status Register bit in the Port Control Register. For a management card to do a detection cycle, it would clear the Detector register, wait for an amount of time to sample the data stream and then read Detector Register.","5.13.4 User Match Functions","The User Match functions provide another mechanism for detecting what is occurring on the loop or a port. The User Match functions include the ability to search for a particular ordered set, search for any ordered set that doesn't have a predefined detector bit, count the number of ordered sets that match the search criteria and capture an ordered set that matches the search criteria.","The first function, search for a particular ordered set is accomplished by setting up the User Ordered Set Match register with the ordered set to look for and setting the User Match Enable bit in the Port Control register. If a match occurs, the User Match bit in the Port Detector Register is set. Optional bits that can also be set are the Match3x bit and one or more of the Match Mask bits. The Match3x bit forces the logic to see three consecutive ordered sets that match the search criteria before setting the User Match bit. This is to allow the search for FC Primitive Sequences. The Match Mask bits allow the user to make any of the bits in the ordered set don't cares. This provides for the ability to search for any SOF, for example, without regard to what type of SOF it might be or to search for any OPN regardless of the source or destination ALPA.","The second function is the ability to search for ordered sets that don't have a predefined bit in the detector register. This is done by setting the match_othr bit and the User Match Enable bit. The User Ordered Set Match register is not used for this function. When an ordered set is received that is not a LIP, OPN, CLS, RRDY, ARB, IDLE, SOF or EOF, the User Match bit is set. Note that if the ordered set that is received is a Point-to-Point OS (i.e. OLS, NOS, LR or LRR), the Match, Unknown OS and Pt-Pt Primitive bits are set in the Port Detector register. If the received OS is anything else, the Match (usr_match_detect) and Unknown OS Detect (unk_os_detect) bit are set. Note that the match3x flag is ignored when the Match Other bit is set.","The next two functions occur anytime either of the first two functions are enabled. The Port Match Count register counts each occurrence of a match. Note the counter counts each ordered set, even if the Match 3x bit is set. If only two consecutive ordered sets are received that match the User Ordered Set Match register, the count is incremented by two, but the detector bit is not seen unless a third OS is received. The Match Counter is cleared only when the Match Enable bit is written to the Port Control register and continues to count until the bit is cleared.","The Port Capture Ordered Set register is used to record the FIRST ordered set that matches the search criteria. Again this function does not use the Match3x bit. This function can be used to see what ordered set caused the setting of the User Match (usrm_en)bit. This function is most interesting when using the Match Mask bits or when using the Match Other bit.","Another function of the User Match registers is to inject an internal parity error upon detection of a user match. This function allows software error handling routines to be exercised.","5.13.5 Ordered Set Transmission","Ordered set transmission is accomplished by writing the desired ordered set to the Port User Ordered Set Transmit Registers along with the control bits in that register to set the method to use in sending the ordered sets. The \u2018S\u2019 bit controls whether to continuously send the given ordered set or just send it 1-15 times. (Control of the number of Ordered Sets to send is via the Port Control Register # Bits.) The \u2018I\u2019 bit controls whether to immediately send the ordered set(s) or wait and replace only fill words. The \u2018M\u2019 bit allows the user to define a particular ordered set to look for in the receive data stream, using the User Ordered Set Match register, and replace this ordered set with the new one defined in the User Ordered Set Transmit register. The \u2018F\u2019 acts a little differently in that it doesn't use the data fields in the User Ordered Set Transmit register, but looks for ordered sets that match the User Ordered Set Match register and replaces them with the current fill word.","To send an ordered set, the lower word must be written first followed by the upper word with the TX Enable (xmit_os_reg) bit set. To change to another transmit word, the new lower word is written and then the new upper word is written, again with the TX Enable bit set. When the upper word write is complete, the Loop Switch synchronously changes to the new word. To stop transmission of the user word, the upper word is written with the TX Enable bit cleared. The Loop Switch synchronously terminates the transmission when the register write is complete.","Note that if the port is inserted in the loop, the transmission of ordered sets replaces the ordered sets that would normally be sent. If the port is not inserted the normal IDLE or ARB characters that would have been transmitted are replaced with the given ordered set. When the requested transmission is complete, the normal data stream is resumed.","An example of using the transmit capability on an operating loop would be to send a Mark character around the loop to detect which Loop Switches are connected together. The User Ordered Set Match and the User Ordered Set Transmit registers would be loaded with the Mark character. The \u2018E\u2019, \u2018S\u2019 and the \u2018F\u2019 bits would be set in the User Ordered Set Transmit register as well. This would send the Mark character once (if count set to one) by replacing a fill word and when the Mark comes back around and is detected by the match function, it would be removed.","5.13.6 GBIC\/SFP Status and Control","The port status and control registers allow the management card to access the status pins of the GBIC\/SFP as well and the control pins. The status includes receiver loss of signal (RX_LOS), transmitter fault (TX_FAULT) and the Mod_Def pins that indicate the type of GBIC or SFP installed. The only control signal for the GBIC\/SFP is the transmit disable pin.","5.13.7 GBIC\/SFP Serial ID","The Loop Switch provides a mechanism to read serial ID data from an attached GBIC\/SFP that supports the IC interface. Two microprocessor accessible registers are defined that assist the Loop Switch in reading the EEPROM. The first register is an address register that indicates where the next access to the EEPROM is to occur. The second register is a 16-bit data register that the serial ID data is read into. After reset or after a GBIC or SFP is inserted into the Loop Switch, the Loop Switch pauses for 2 seconds to allow the GBIC\/SFP internal logic to settle to a known state and then automatically reads the first 2 bytes from the GBIC and put them into the data register. the Loop Switch then sets the Serial ID Ready bit in the Port Status Register #. The microprocessor can then read the GBIC\/SFP Serial ID Data Register to get the data, which in turn causes the Loop Switch to read the next 2 words. The microprocessor could also write a different address into the GBIC\/SFP Read Address Register and then do the read of the data register that causes the Loop Switch to read data from the new location. The micro must set the address first and then do the data register read to cause the Loop Switch to read from the proper location. Note that the GBIC Read Address Register shouldn't be modified unless the Serial ID Ready bit is set in the Port Status Register # to prevent the corruption of the address during the read process.","Note that the data is read from the GBIC\/SFP one byte at a time. It also does the read using a fully compliant IC protocol to prevent the problems seen with reading Finisar GBICs.","5.13.8 Error Counters","Each port maintains frame CRC error and bad transmission word counters. Bad transmission characters are detected within the 10 b\/8 b decode logic. If bad characters are detected within a 40-bit word, the counter is incremented by 1. The CRC is calculated for each frame that is detected on the receiver of the port. The CRC is calculated and verified on a 16-bit data path at the receiver of each port. Both counters stick at their maximum value and are cleared by a read from the microprocessor. Along with the detection of a CRC error, the Loop Switch saves the low order byte of the S_ID of the last frame that had the error in the CRC Error ALPA Register. This can be used to determine the ALPA of the frame's source node. This information can be used to determine where a bad link might exist.","Each port also maintains an 8 bit counter for both port insertions and loop up state changes. The loop up counter is maintained in each port to allow the ports to be hard zoned and still maintain a loop up counter for each zone.","Another error detection function is the ability to capture the number of the first port that generates a LIP. This can be used to determine is a particular port is experiencing problems that require frequent loop initializations to occur.","5.13.9 Port Monitoring Mode","The router logic has registers called the Switch Matrix Control Registers. These registers allow a management entity to configure any port to be a monitoring port. This monitoring port can be connected to the receiver of any port, including the expansion port or the receiver of the monitoring port itself. This capability allows a particular port to be set aside as an analyzer port where a FC protocol analyzer can be plugged in. The management card \u2018moves\u2019 the analyzer from port to port to discover what is happening. Note that whenever the Switch Matrix Control register takes over control of a port, that port's bypass LED starts blinking to indicate manual control is in effect.","5.13.10 Port External Loopback","A port can be placed in monitoring mode, as explained above, where the port is monitoring itself. In this case, the port is operating in a loopback mode where anything received on the port is sent back out its transmitter. An administrator can test a link to the Loop Switch before actually allowing it to be inserted into the loop using this mode. With the port in loopback, the loop segment connected to the port completes loop initialization, if the link is good. With the diagnostics of the Loop Switch, the administrator can verify the loop is operational and then put the port into the loop.","5.13.11 Frequency Check Circuit","The frequency check circuit is implemented within the elasticity buffer. This circuit is a word counter that is used to determine the time between inserts\/deletes within the elasticity buffer. The counter is 16 bits with the upper bit specifying whether the upstream node is higher or lower in frequency. A one in the 16bit denotes that the upstream node frequency is higher and a zero denotes the upstream node frequency is lower. The remaining 15 bits count the frequency delta between inserts or deletes. A count value less than approximately 10,000 decimal (2710 hex) signifies a frequency delta outside the specified range (plus or minus 100 PPM=200 PPM). The counter value is loaded into the processor accessible register every 752.94 microseconds and then reinitialized to start a new sample. The sample period is enabled on the first insert\/delete after the read, then disabled on the second insert\/delete.","The clock tolerance of a Fibre Channel transmitter is +\/\u2212100 parts per million. If one of the transmitters is transmitting at the slow end of the tolerance range and the other is transmitting at the fast end of the tolerance range, the maximum allowable difference between the two clocks would be 200 parts per million. The ideal frequency of a Fibre Channel transmitter is 1062500 Kbps and so 200 ppm would be a difference of 200 KBPS. This corresponds to one transmission word every 5,000 words or one word every 10,000 half-words (the elastic-store portion of the design uses a 16 bit internal data path while the reset of the ASIC uses a 32 bit path). Since the counter increments every half-word, the allowable limit would be 10,000. Values 0x8000 or 0x0000 in this register indicate that an insert or delete did not occur since the last read of the register, again indicating that the two clocks are well within spec.","For clocks that are very close to the same frequency, a prescaler circuit allows the counter to track the longer times between insertions or deletions by changing the resolution of the 1sb of the frequency counter. The counter works in exactly the same way as described above except that the value reported in the frequency counter must be processed to account for the prescaler setting.","5.13.12 Port Operational Policies","The Loop Switch ASIC has many automatic features that may or may not be desirable in a particular installation. These policies are loaded via the EEPROM policy bits. Because of this, several of the Loop Switch's features have management overrides built in. These overrides are contained in the Port Configuration Register. A management station can set one or more of these policy flags to disable an undesired function, on a per port basis. With the exception of TINMAN, all policies are independent.","Port Insertion on word sync (TINMAN): This mode allows a port to be inserted if a signal is present on the receive inputs that the chip can sync to. No checks are made to insure that the data received is good other than it contains comma characters. Disables all other policies except byp_no_comma when enabled. The initial state is set by the Policy bit[0] in the EEPROM.","Disable attached device discovery (SEOC): At port insertion time, a port attempts to determine what type of device is connected by sending various signals to the device. If this signaling causes interoperability problems, setting this policy disables it. The initial state is set by the Policy bit[1] in the EEPROM.","Port Bypass on LIPf presence (byp on lipf): Anytime a port detects LIPf ordered sets, it changes them to LIPfs and lets them be passed around the loop. When the LIPf has made it back to the port, the port is bypassed and the loop is allowed to proceed through the normal insertion process. Setting this policy flag disables the LIPf substitution and subsequent bypass. The initial state is set by the Policy bit[2] in the EEPROM.","Port bypass on no data (byp no comma): Anytime a port detects that it is not passing ordered sets that contain a comma character for more than 100 us, the port is bypassed and remains that way until the port can pass the insertion criteria. Setting this policy flag disables the check & subsequent bypass. The initial state is set by the Policy bit[3] in the EEPROM.","LIP on port bypass(lip on byp): When a port is bypassed, the Loop Switch forces a LIPf into the loop to guarantee that all devices on the loop recognize the change in the loop configuration. Setting this policy disables the LIP generation and the port simply is removed from the loop. NOTE: LIPf is not generated if TINMAN policy is active. The initial state is set by the Policy bit[4] in the EEPROM.","LIP on port insertion(lip on ins): When a port is inserted into the loop, the Loop Switch forces a LIPf into the loop to guarantee that all devices on the loop recognize the change in the loop configuration. Setting this policy disables the LIP generation and simply inserts the port into the loop. This allows the mixing of current devices that follow the FC-AL initialization protocol with future devices that may not chose to follow the older protocol. NOTE: LIPf is not generated if TINMAN policy is active. The initial state is set by the Policy bit[5] in the EEPROM.","Disable cascade hardware load balancing (dis balance): When multiple trunks are connected between Loop Switches, setting this bit disables hardware detection of initiators for load-balancing of the trunks. Software assigned load balancing of connections is still enabled.","5.13.13 ALPA to Port Map","The Loop Switch executes a device discovery process that maps all existing ALPAs to the ports on the Loop Switch. This mapping is available in the Router's Port ALPA Registers for use by a management entity to create a topology map.","5.13.14 Traffic Patterns","Traffic patterns are determined by maintaining a OPN port bit map register for each port. When a connection is made between 2 ports, the register for the port sourcing the OPN is updated by setting the bit corresponding to the destination port. In addition, each port saves the destination ALPA when a connection is made. The port bit map register is cleared by a read from the microprocessor.","5.13.15 Port\/Loop Segment Utilization Measurement","Each Loop Switch port has a register set that is used to provide an indication of the port utilization. This measurement is done in one of two ways. In loop Loop Switch mode the measurement is of the amount of frame data that passing the port. In switching mode, the measurement is of the percentage of time the port is involved in a connection, regardless of the amount of data that is being sent.","In loop mode, one of the registers is continuously counting transmission words while another register is counting transmission words between a SOF and an EOF. When the 1counter reaches terminal count, the most significant bits of the 2register are stored off as a representation of the percentage of the traffic that carried actual data payloads. This stored off value can be sampled by the CPU every \u02dc240 ms.","In switching mode the operation is similar except instead of counting transmission words between an SOF and an EOF, the 2counter is counting transmission words while the connection is up on the port.","The 2 counters are 24 bit counters with the 1counting up to 0xC80000 and the top 8 bits of the second counter being the measure of utilization. This 8-bit value is stored in a CPU readable register and represent utilization in 0.5% increments.","5.13.16 Port Overlapping Hard Zoning (Segmenting Mode Only)","Connections between ports can be disabled using the destination disable registers. A register exists for each port and masks the valid bit in the ALPA-to-port registers during lookup. The microcontroller must write these registers before completion of port discovery to insure connections are not made when the switched mode is enabled. If a device requests a connection to a port and access to the port is disabled, the node that sent the OPN receives it back. Note that the same actions occur if the ALPA does not exist.","5.13.17 Raw Data Snoop Port","A secondary function of the port logic is that it can be configured as a snoop port that can be connected to any of the receive ports of the Loop Switch chip. In this mode, the decoded transmission words from a port go through the switch matrix and the data stream is presented at the snoop port's transmitter. The port in this mode can be used as a debugging tool by connecting the port to a logic analyzer and viewing the raw data output of any port. The switch control register is used to select which port to snoop. NOTE: A limitation of the snoop port is that any R_RDY Ordered sets received after the OPN but before the connection has actually been established is not reflected to the snoop port.","5.14 Loop Switch Management Functions","5.14.1 Input Data Signals","The frame extraction logic also has the ability to filter data frames by replacing the EOFwith an EOF, corrupting the CRC or replacing the entire frame with the last fill word. External logic provides a \u201cfilter frame\u201d command and the receiver port number of the frame that is to be filtered. Logic inside the ASIC will route the filter command to the appropriate transmitter. Note this filter frame command is time critical as the transmitter filters out either the current or next frame it sees after the filter command.","5.15 Loop Switch Management Functions","5.15.1 Environmental Monitoring","The Loop Switch has two environmental monitoring functions. The first is an input for an over-temperature sensor. This is a single signal input that indicates that the enclosure temperature has an externally configured threshold. The second function is a set of 4 inputs that indicate whether there has been a fan failure in the enclosure. The Loop Switch illuminates the environmental alert LED if either of these functions has a failure and reports the failure condition in the Router Status Register # for reporting to a management entity. This also causes an interrupt to be generated to the management card, if present.","5.15.2 Loopstate Detection and LED","The Loop Switch has two separate methods of tracking the state of the loop. In the first method, each port has a state machine that tracks progress through loop initialization. This state is reported in the Port's Status Register #. This information is provided for the case where ports are partitioned into zones and reporting on each of the zone's loopstate is needed.","In the second method, the router also has a state machine that tracks progress of the loop initialization. This state machine is in the logic that accomplishes the port discovery process. The loopstate in the router state machine is used to drive the Loop Switch's Loop Up LED. In hard-zoned mode, the Loop Up LED reflects the status of zone .","5.15.3 Loop Initialization","The Loop Switch can reset the loop by writing to the Router Configuration Register. This can be used if a Loop Switch reconfiguration is necessary to guarantee the change is seen. This capability only applies when non-overlapping hard zones are not used in hub emulation mode, and when LIP isolation is not selected in switching (segmenting) mode.","5.16 FC Port Interfaces","5.16.1 GBIC\/SFP Pins","The Loop Switch supports all the status and control pins of the standard GBIC and SFP. This includes transmit disable, transmit fault, receiver loss of signal and the mod_def pins. The Loop Switch also provides the ability to access a serial ID EEPROM on any GBIC or SFP that supports this feature.","5.16.2 Lock-to-Reference","The Loop Switch has the internal logic to drive a Lock-to-Reference signal for each internal transceiver. If a part that requires lock_to_ref must be used, this signal can be routed out.","5.17 System Interface","The system interface includes the locally generated clocks and the reset signal. The Loop Switch requires a single 106.25 MHz system clock.","5.18 Microprocessor Interface","The Loop Switch is directly accessible either through an IC interface or a parallel interface with 16 non-multiplexed address and data lines, RD, WR and CS.","5.18.1 Interrupt Signal","If the Loop Switch is operating in a configuration that includes a management entity, it generates interrupts for various configuration changes that might be of interest to a management entity. These changes include:\n\n","The interrupt pin is an open drain signal to allow multiple Loop Switches to drive it. The microprocessor should read the router status register # in the Loop Switch \u201800\u2019 to determine if it is asserting the interrupt signal. If it isn't, the microprocessor reads the other the Loop Switch's status registers. Once the proper the Loop Switch is found, the status register indicates if a port is causing the interrupting condition. If it is, the microprocessor must read the Port Error\/Change Status Register to see what the interrupting condition is. If the router were causing the interrupt, its status register would indicate one of the other interrupting conditions.","Interrupt mask registers are provided for each interrupt status register. These mask registers enable all interrupts by default.","5.18.2 IC Serial Interface","An IC interface is used to manage the circuitry deployed around the SOC422.","5.18.3 Parallel Processor Interface","In addition to the IC interface, The Loop Switch provides a sixteen bit asynchronous parallel interface.","5.19 Serial EEPROM Interface","The serial EEPROM is used to store the power on reset configuration information for the Loop Switch. An internal state machine reads the configuration after each reset and stores the information in various registers in the Loop Switch. If the external EEPROM_pres pin is pulled to a logic high, the ASIC assumes no EEPROM is present and skips the prom loading process.","6. Register Definitions for Vixel SOC 422 Loop Switch","6.1 Router Register Definitions",{"@attributes":{"id":"p-0395","num":"0694"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Register Description"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Configuration Register","R\/W"]},{"entry":["Control Register #1","R\/W"]},{"entry":["Control Register #2","R\/W"]},{"entry":["Remove Connection\/OPN #1","R\/W"]},{"entry":["Remove Connection\/OPN #2","R\/W"]},{"entry":["Stall Threshold","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["SEOC USER2","SEOC USER1","RW"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["RTR SW Matrix Configuration Register","R\/W"]},{"entry":["Port Active (15-0)","R"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Reserved","Port Active (22-16)","NA"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Switch Matrix Control Registers"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Port 1","Port 0","R\/W"]},{"entry":["Port 3","Port 2","R\/W"]},{"entry":["Port 5","Port 4","R\/W"]},{"entry":["Port 7","Port 6","R\/W"]},{"entry":["Port 9","Port 8","R\/W"]},{"entry":["Port 11","Port 10","R\/W"]},{"entry":["Port 13","Port 12","R\/W"]},{"entry":["Port 15","Port 14","R\/W"]},{"entry":["Port 17","Port 16","R\/W"]},{"entry":["Port 19","Port 18","R\/W"]},{"entry":["Port 21","Port 20","R\/W"]},{"entry":["Reserved","CPU Port"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Switch Matrix Select Registers"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Port 1","Port 0","R"]},{"entry":["Port 3","Port 2","R"]},{"entry":["Port 5","Port 4","R"]},{"entry":["Port 7","Port 6","R"]},{"entry":["Port 9","Port 8","R"]},{"entry":["Port 11","Port 10","R"]},{"entry":["Port 13","Port 12","R"]},{"entry":["Port 15","Port 14","R"]},{"entry":["Port 17","Port 16","R"]},{"entry":["Port 19","Port 18","R"]},{"entry":["Port 21","Port 20","R"]},{"entry":["Reserved","CPU Port","R\/W"]},{"entry":["Reserved","LED_update_timer","R\/W"]},{"entry":["Reserved","rem_conn_cnt","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Ports Unfair [ports 15:0]","NA"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Reserved","Ports Unfair [22:16]","NA"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Port 15-0 Interrupt Status","R"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Reserved","Interrupt Status (22-16)","NA"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Status Register #1","R"]},{"entry":["Status Register #2","R"]},{"entry":["Status Register #3","R"]},{"entry":["Status Register #4","R"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Block_ALPA","Loop Up Counter","R"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Port 3 LED","Port 2 LED","Port 1 LED","Port 0 LED","R\/W"]},{"entry":["OVRD","OVRD","OVRD","OVRD"]},{"entry":["Port 7 LED","Port 6 LED","Port 5 LED","Port 4 LED","R\/W"]},{"entry":["OVRD","OVRD","OVRD","OVRD"]},{"entry":["Port 11 LED","Port 10 LED","Port 9 LED","Port 8 LED","R\/W"]},{"entry":["OVRD","OVRD","OVRD","OVRD"]},{"entry":["Port 15 LED","Port 14 LED","Port 13 LED","Port 12 LED","R\/W"]},{"entry":["OVRD","OVRD","OVRD","OVRD"]},{"entry":["Port 19 LED","Port 18 LED","Port 17 LED","Port 16 LED","R\/W"]},{"entry":["OVRD","OVRD","OVRD","OVRD"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Reserved","Port 21 LED","Port 20 LED","R\/W"]},{"entry":[{},"OVRD","OVRD"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Router Control Register #3","R\/W"]},{"entry":["System LED Overrides","R\/W"]},{"entry":["Router Interrupt Mask","R\/W"]},{"entry":["Port Fairness Control","R\/W"]},{"entry":["Variable Priority Timer Register","R\/W"]},{"entry":["User I\/O Direction Register","R\/W"]},{"entry":["User I\/O Register","R\/W"]},{"entry":["FPGA Revision","R"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Overlapping Zone Control"},{"entry":"(Upper_page_select = 0000)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Port 0 Overlapping Hard Zone Control (Ports 15-0)","R\/W"]},{"entry":["Port 0 Overlapping Hard Zone Control (Ports 31-16)","R\/W"]},{"entry":"."},{"entry":"."},{"entry":"."},{"entry":["Port XX Overlapping Zone Control (Ports 15-0)","R\/W"]},{"entry":["Port XX Overlapping Zone Control (Ports 31-16)","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Opened Port Map"},{"entry":"(Upper_page_select = 0001)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Opened Port Map (Ports (15-0) - Port 0","R"]},{"entry":["Opened Port Map (Ports 31-16) - Port 0","R"]},{"entry":"."},{"entry":"."},{"entry":"."},{"entry":["Opened Port Map (Ports (15-0) - Port XX","R"]},{"entry":["Opened Port Map (Ports 31-16) - Port XX","R"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"ALPA Port Map"},{"entry":"(Upper_page_select = 0010)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Port for ALPA 0x01","Port for ALPA 0x00","R\/W"]},{"entry":[".",".","R\/W"]},{"entry":[".","."]},{"entry":[".","."]},{"entry":["Reserved","Port for ALPA 0xEF","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"ALPA Position Map"},{"entry":"(Upper_page_select = 0011)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ALPA Position 1","Offset Byte","R"]},{"entry":[".",".","R"]},{"entry":[".","."]},{"entry":[".","."]},{"entry":["ALPA Position 127","ALPA position 126","R"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"EEPROM"},{"entry":"(Upper_page_select = 0100)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Local Serial Number Upper (EEPROM Bits [15:0])","R\/W"]},{"entry":["Local Serial Number Middle (EEPROM Bits [31:16])","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Loop Switch Configuration","Serial Number Lower","R\/W"]},{"entry":["(EEPROM Bits[47:40])","(EEPROM Bits [39:32])"]},{"entry":["Reserved","Reserved","NA"]},{"entry":["Reserved","Misc System Configuration Bits","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Date Code (EEPROM Bits[95:80])","R\/W"]},{"entry":["Non-Overlapping Hard Zone Map Ports [3:0]","R\/W"]},{"entry":["Non-Overlapping Hard Zone Map Ports [7:4]","R\/W"]},{"entry":["Non-Overlapping Hard Zone Map Ports [11:8]","R\/W"]},{"entry":["Non-Overlapping Hard Zone Map Ports [15:12]","R\/W"]},{"entry":["Non-Overlapping Hard Zone Map Ports [19:16]","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Reserved","Non-Overlapping H. Zone","R\/W"]},{"entry":[{},"Map Ports [22:20]"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["SerDes\/Selftest Enable Ports [15:0]","R\/W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"126pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Reserved","SerDes\/Selftest","R\/W"]},{"entry":[{},"Enables Ports"]},{"entry":[{},"[21:16]"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["SEEPROM Calculated CRC (bits 15:0)","R"]},{"entry":["SEEPROM Caclulated CRC (bits 31:16)","R"]},{"entry":"Reserved"},{"entry":["LIM WWN [63:48]","R"]},{"entry":["LIM WWN [47:32]","R"]},{"entry":["LIM WWN [31:16]","R"]},{"entry":["LIM WWN [15:0]","R"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Duplicate Cascade Load Balancing"},{"entry":"(Upper_page_select = 0101)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["SW Override of Initiators #0 (bit ordered per LixA frames)","R\\W"]},{"entry":["SW Override of Initiators #1 (bit ordered per LixA frames)","R\\W"]},{"entry":["SW Override of Initiators #2 (bit ordered per LixA frames)","R\\W"]},{"entry":["SW Override of Initiators #3 (bit ordered per LixA frames)","R\\W"]},{"entry":["SW Override of Initiators #4 (bit ordered per LixA frames)","R\\W"]},{"entry":["SW Override of Initiators #5 (bit ordered per LixA frames)","R\\W"]},{"entry":["SW Override of Initiators #6 (bit ordered per LixA frames)","R\\W"]},{"entry":["SW Override of Initiators #7 (bit ordered per LixA frames)","R"]},{"entry":["Hardware Detected Initiators #0 (bit ordered per LixA frames)","R"]},{"entry":["Hardware Detected Initiators #1 (bit ordered per LixA frames)","R"]},{"entry":["Hardware Detected Initiators #2 (bit ordered per LixA frames)","R"]},{"entry":["Hardware Detected Initiators #3 (bit ordered per LixA frames)","R"]},{"entry":["Hardware Detected Initiators #4 (bit ordered per LixA frames)","R"]},{"entry":["Hardware Detected Initiators #5 (bit ordered per LixA frames)","R"]},{"entry":["Hardware Detected Initiators #6 (bit ordered per LixA frames)","R"]},{"entry":["Hardware Detected Initiators #7 (bit ordered per LixA frames)","R"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["reserved","#0 Assigned Trunk","Reserved","#0 Trunkset Primary","R\\W"]},{"entry":[{},"Port",{},"Port"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["reserved","#0 Initiator's Alpa","R\\W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["reserved","#1 Assigned Trunk","Reserved","#1 Trunkset Primary","R\\W"]},{"entry":[{},"Port",{},"Port"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["reserved","#1 Initiator's Alpa","R\\W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["reserved","#2 Assigned Trunk","Reserved","#2 Trunkset Primary","R\\W"]},{"entry":[{},"Port",{},"Port"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["reserved","#2 Initiator's Alpa","R\\W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["reserved","#3 Assigned Trunk","Reserved","#3 Trunkset Primary","R\\W"]},{"entry":[{},"Port",{},"Port"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["reserved","#3 Initiator's Alpa","R\\W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["reserved","#4 Assigned Trunk","Reserved","#4 Trunkset Primary","R\\W"]},{"entry":[{},"Port",{},"Port"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["reserved","#4 Initiator's Alpa","R\\W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["reserved","#5 Assigned Trunk","Reserved","#5 Trunkset Primary","R\\W"]},{"entry":[{},"Port",{},"Port"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["reserved","#5 Initiator's Alpa","R\\W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["reserved","#6 Assigned Trunk","Reserved","#6 Trunkset Primary","R\\W"]},{"entry":[{},"Port",{},"Port"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["reserved","#6 Initiator's Alpa","R\\W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["reserved","#7 Assigned Trunk","Reserved","#7 Trunkset Primary","R\\W"]},{"entry":[{},"Port",{},"Port"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["reserved","#7 Initiator's Alpa","R\\W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["reserved","#8 Assigned Trunk","Reserved","#8 Trunkset Primary","R\\W"]},{"entry":[{},"Port",{},"Port"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Reserved","#8 Initiator's Alpa","R\\W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},".",{},".",{}]},{"entry":[{},".",{},"."]},{"entry":[{},".",{},"."]},{"entry":[{},".",{},"."]},{"entry":[{},".",{},"."]},{"entry":[{},".",{},"."]},{"entry":["reserved","#22 Assigned Trunk","Reserved","#22 Trunkset","R\\W"]},{"entry":[{},"Port",{},"Primary Port"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Reserved","#22 Initiator's Alpa","R\\W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["reserved","#23 Assigned Trunk","Reserved","#23 Trunkset","R\\W"]},{"entry":[{},"Port",{},"Primary Port"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["reserved","#23 Initiator's Alpa","R\\W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Learned Port ALPA Map"},{"entry":"(Upper_page_select = 0110)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Port for ALPA 0x01","Port for ALPA 0x00","R\/W"]},{"entry":[".",".","R\/W"]},{"entry":[".","."]},{"entry":[".","."]},{"entry":["Reserved","Port for ALPA 0xEF","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Misc Controls"},{"entry":"(Upper_page_select = 0111)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Reserved","Probe Mux Select A","R\/W"]},{"entry":["Reserved","Probe Mux Select B","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["R","Utility Timer 0 Current Value(Write preload is for","R\/W"]},{"entry":[{},"simulation only)"]},{"entry":["x","Utility Timer 0 Maximum Count","R\/W"]},{"entry":["R","Utility Timer 1 Current Value(Write preload is for","R\/W"]},{"entry":[{},"simulation only)"]},{"entry":["x","Utility Timer 1 Maximum Count","R\/W"]},{"entry":["R","Utility Timer 2 Current Value(Write preload is for","R\/W"]},{"entry":[{},"simulation only)"]},{"entry":["x","Utility Timer 2 Maximum Count","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Close Count on Destination ALPA [15:0]","R\/W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Reserved","Close count Dest ALPA (22-16)","R\/W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["PLL control register","R\/W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ALPA 04","ALPA 02","ALPA 01","ALPA 00","R\/W"]},{"entry":["OPN_max","OPN_max","OPN_max","OPN_max"]},{"entry":[".",".",".",".","."]},{"entry":[".",".",".",".","."]},{"entry":[".",".",".",".","."]},{"entry":[".",".",".",".","."]},{"entry":[".",".",".",".","."]},{"entry":[".",".",".",".","."]},{"entry":["Reserved","ALPA EF","ALPA E8","ALPA E4","R\/W"]},{"entry":[{},"OPN_max","OPN_max","OPN_max"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"LIP Isolation Controls\/LIFA Map"},{"entry":"(Upper_page_select = 1000)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Stealth Isolation Control Register #1","R\/W"]},{"entry":["Stealth Isolation Control Register #2","R\/W"]},{"entry":["Stop Traffic Control, Ports 15:0","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Stealth Cycle Interval","Reserved","Stop Traffic Ctrl, Ports","R\/W"]},{"entry":[{},{},"22:16"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Status Register #5 (Stealth Interrupt Status)","R"]},{"entry":["Mask Register for Status Register #5","R\/W"]},{"entry":["Stealth Timeout Register","R"]},{"entry":["Status Register #6 (Stealth State)","R"]},{"entry":["Stealth LIP Inter-Switch Frame Transmit Payload Registers","R\/W"]},{"entry":["Stealth LIP Inter-Switch Frame Receive Payload Registers","R"]},{"entry":["LIFA Modification ALPA Bit Map, Word 0, bits 15:0","R\/W"]},{"entry":["LIFA Modification ALPA Bit Map, Word 0, bits 31:16","R\/W"]},{"entry":["LIFA Modification ALPA Bit Map, Word 1, bits 15:0","R\/W"]},{"entry":["LIFA Modification ALPA Bit Map, Word 1, bits 31:16","R\/W"]},{"entry":["LIFA Modification ALPA Bit Map, Word 2, bits 15:0","R\/W"]},{"entry":["LIFA Modification ALPA Bit Map, Word 2, bits 31:16","R\/W"]},{"entry":["LIFA Modification ALPA Bit Map, Word 3, bits 15:0","R\/W"]},{"entry":["LIFA Modification ALPA Bit Map, Word 3, bits 31:16","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"LIP Isolation LIRP Modification Map"},{"entry":"(Upper_page_select = 1001)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1ALPA for LIRP","LIRP ALPA Count","R\/W"]},{"entry":["3ALPA for LIRP","2ALPA for LIRP","R\/W"]},{"entry":[".",".","R\/W"]},{"entry":[".","."]},{"entry":[".","."]},{"entry":["126ALPA for LIRP","125ALPA for LIRP","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Route-Blocking Groups, 7-0"},{"entry":"(Upper_page_select = 1010)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Route-Blocking Group 0, Bits [15:0]","R\/W"]},{"entry":["Route-Blocking Group 0, Bits [31:16]","R\/W"]},{"entry":["Route-Blocking Group 0, Bits [47:32]","R\/W"]},{"entry":["Route-Blocking Group 0, Bits [63:48]","R\/W"]},{"entry":"Route-Blocking Group 0, Bits [79:64]"},{"entry":["Route-Blocking Group 0, Bits [95:80]","R\/W"]},{"entry":["Route-Blocking Group 0, Bits [111:96]","R\/W"]},{"entry":["Route-Blocking Group 0, Bits [127:112]","R\/W"]},{"entry":["Route-Blocking Group 1, Bits [15:0]","R\/W"]},{"entry":["Route-Blocking Group 1, Bits [31:16]","R\/W"]},{"entry":["Route-Blocking Group 1, Bits [47:32]","R\/W"]},{"entry":["Route-Blocking Group 1, Bits [63:48]","R\/W"]},{"entry":["Route-Blocking Group 1, Bits [79:64]","R\/W"]},{"entry":["Route-Blocking Group 1, Bits [95:80]","R\/W"]},{"entry":["Route-Blocking Group 1, Bits [111:96]","R\/W"]},{"entry":["Route-Blocking Group 1, Bits [127:112]","R\/W"]},{"entry":["Route-Blocking Group 2, Bits [15:0]","R\/W"]},{"entry":[".","."]},{"entry":[".","."]},{"entry":[".","."]},{"entry":["Route-Blocking Group 7, Bits [127:112]","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Route-Blocking Groups, 15-8"},{"entry":"(Upper_page_select = 1011)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Route-Blocking Group 8, Bits [15:0]","R\/W"]},{"entry":["Route-Blocking Group 8, Bits [31:16]","R\/W"]},{"entry":["Route-Blocking Group 8, Bits [47:32]","R\/W"]},{"entry":["Route-Blocking Group 8, Bits [63:48]","R\/W"]},{"entry":"Route-Blocking Group 8, Bits [79:64]"},{"entry":["Route-Blocking Group 8, Bits [95:80]","R\/W"]},{"entry":["Route-Blocking Group 8, Bits [111:96]","R\/W"]},{"entry":["Route-Blocking Group 8, Bits [127:112]","R\/W"]},{"entry":["Route-Blocking Group 9, Bits [15:0]","R\/W"]},{"entry":["Route-Blocking Group 9, Bits [31:16]","R\/W"]},{"entry":["Route-Blocking Group 9, Bits [47:32]","R\/W"]},{"entry":["Route-Blocking Group 9, Bits [63:48]","R\/W"]},{"entry":["Route-Blocking Group 9, Bits [79:64]","R\/W"]},{"entry":["Route-Blocking Group 9, Bits [95:80]","R\/W"]},{"entry":["Route-Blocking Group 9, Bits [111:96]","R\/W"]},{"entry":["Route-Blocking Group 9, Bits [127:112]","R\/W"]},{"entry":["Route-Blocking Group 10, Bits [15:0]","R\/W"]},{"entry":[".","."]},{"entry":[".","."]},{"entry":[".","."]},{"entry":["Route-Blocking Group 11, Bits [127:112]","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"LIP Isolation Zone Control"},{"entry":"(Upper_page_select = 1100)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Port 0 LIP Isolation Group Control","R\/W"]},{"entry":["Port 1 LIP Isolation Group Control","R\/W"]},{"entry":"."},{"entry":"."},{"entry":"."},{"entry":["Port 18 LIP Isolation Group Control","R\/W"]},{"entry":["Port 19 LIP Isolation Group Control","R\/W"]},{"entry":["Port 20 LIP Isolation Group Control","R\/W"]},{"entry":["Port 21 LIP Isolation Group Control","R\/W"]},{"entry":["CPU Port LIP Isolation Group Control","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Generic Interswitch Frame Buffers"},{"entry":"(Upper_page_select = 1101)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Stealth Inter-Switch Frame Header Registers","R\/W"]},{"entry":["Stealth Generic Inter-Switch Frame Transmit Payload Registers","R\/W"]},{"entry":["Stealth Generic Inter-Switch Frame Receive Payload Registers","R"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The bits in the configuration register are operating modes that are set once\/changed infrequently.",{"@attributes":{"id":"p-0397","num":"0696"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"189pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","on_line","When set this bit enables a Loop Switch to go from the startup"]},{"entry":[{},{},"mode to the operational mode. When clear, this bit holds off"]},{"entry":[{},{},"the Loop Switch from becoming operational until the"]},{"entry":[{},{},"management card has had a chance to reconfigure it, if"]},{"entry":[{},{},"necessary. Used only if a management card is present."]},{"entry":["14","smd_dis","Disable switch mode operation."]},{"entry":["13","discvr_dis","Disable device discovery. When this bit is set, device"]},{"entry":[{},{},"discovery does not take place during loop initialization."]},{"entry":["12","Reserved"]},{"entry":["11","fast_time","Bit controls whether internal timers are driven by a normal"]},{"entry":[{},{},"timer tick or an accelerated one for simulations."]},{"entry":["10","up_filt_dis","IC glitch filter disable. Only used for simulation."]},{"entry":["9-6","Upper_page_select","Select active function for upper portion of Router Register"]},{"entry":[{},{},"map NOTE: Upper pages are normally controlled via RAR"]},{"entry":[{},{},"Upper Byte. These bits are mainly for preexisting simulation"]},{"entry":[{},{},"compatibility."]},{"entry":[{},{},"0000 - Hard Zone Control Active"]},{"entry":[{},{},"0001 - Opened Port Map"]},{"entry":[{},{},"0010 - Alpa Port Map"]},{"entry":[{},{},"0011 - Alpa Position Map"]},{"entry":[{},{},"0100 - EEPROM Data Map"]},{"entry":[{},{},"0101 - Load Balance Control Map"]},{"entry":[{},{},"0110 - Learned Port ALPA Map"]},{"entry":[{},{},"0111 - Misc Controls Map"]},{"entry":[{},{},"1000 - LIP Isolation Controls\/LIFA Map"]},{"entry":[{},{},"1001 - LIP Isolation Manipulated LIRP MAP"]},{"entry":[{},{},"1010 - Route Blocking Groups 0 to 7"]},{"entry":[{},{},"1011 - Route Blocking Groups 8 to 15"]},{"entry":[{},{},"1100 - Lip Isolation Zone Control"]},{"entry":[{},{},"1101 - Generic Interswitch Frame Buffers"]},{"entry":["\u20025","force_smd_en","Force switch mode enable. Setting this bit forces Loop Switch"]},{"entry":[{},{},"into switch mode operation. It is assumed that the ALPA-to-"]},{"entry":[{},{},"port map registers have been loaded to allow switch mode."]},{"entry":[{},{},"NOTE: This bit should not be set until Loop Switch_rdy bit in"]},{"entry":[{},{},"Router Status Register #1 is set. Also, this bit is for test"]},{"entry":[{},{},"purposes only."]},{"entry":["4:3","Fault\/selftest_control","These bits control the fault and selftest functions of the Loop"]},{"entry":[{},{},"Switch."]},{"entry":[{},{},"00 - normal mode, selftest starts after EEPROM read"]},{"entry":[{},{},"correctly with valid CRC"]},{"entry":[{},{},"01 - fault override, override both selftest and"]},{"entry":[{},{},"EEPROM CRC faults and continue operation"]},{"entry":[{},{},"10 - generate fault, force a Loop Switch fault that disables"]},{"entry":[{},{},"Loop Switch operation and turn on the Loop Switch"]},{"entry":[{},{},"Fault LED"]},{"entry":[{},{},"11 - run selftest, run the selftest 1 time whenever the"]},{"entry":[{},{},"control bits are first changed to 11."]},{"entry":["\u20022","loopback","Internal Loopback mode. Causes internal loopback pin to"]},{"entry":[{},{},"transceivers to be enabled and allows a management card to do"]},{"entry":[{},{},"a selftest."]},{"entry":["\u20021","lilp_update_dis","When this bit is set, the ALPA map is not updated when a"]},{"entry":[{},{},"LILP frame is received during loop initialization."]},{"entry":["\u20020","pause_map_cln","When this bit is set the ALPA map update is paused between"]},{"entry":[{},{},"the steps where the LILP frame is used to update the"]},{"entry":[{},{},"remaining valid ALPAs and the step where the remaining"]},{"entry":[{},{},"unmapped ALPAs are converted to invalid ALPAs. This bit is"]},{"entry":[{},{},"used mainly for test purposes."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{},"b":"1"},"The control register contains bits that are changed during normal operation. These bits affect the operation of the entire Loop Switch\/router. Individual ports are controlled through the port control registers.",{"@attributes":{"id":"p-0399","num":"0698"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"189pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","frc_arb_block","When this bit is set, the Loop Switch blocks all port"]},{"entry":[{},{},"arbitration. This is required if the microprocessor manually"]},{"entry":[{},{},"loads the ALPA map and then forces the Loop Switch into"]},{"entry":[{},{},"switching mode with the force_seg_mode bit."]},{"entry":["14","clr_pstats","Setting this bit clears all Port Detector registers at one time."]},{"entry":[{},{},"This bit is self-clearing."]},{"entry":["13","global_isolate_en","When set, LIP isolation behavior is individually selectable for"]},{"entry":[{},{},"each port in that port's control registers. When this bit is reset"]},{"entry":[{},{},"LIP isolation is totally disabled."]},{"entry":["12-8","reinsert_port_id","This field identifies a port to be re-inserted when the"]},{"entry":[{},{},"reinsert_port bit is set."]},{"entry":["\u20027","block_LILP_CLS","When this bit is set, and a destination port is blocked out for a"]},{"entry":[{},{},"source port in the overlapping hard zone control registers, and"]},{"entry":[{},{},"a valid LILP frame was received during the previous full-hub"]},{"entry":[{},{},"emulation mode initialization cycle, a CLS is sent to the"]},{"entry":[{},{},"source port. If not true, then the source port receives its own"]},{"entry":[{},{},"OPN back instead."]},{"entry":["\u20026","block_force_CLS","When this bit is set and a destination port is blocked out for a"]},{"entry":[{},{},"source port in the overlapping hard zone control registers, a"]},{"entry":[{},{},"CLS is sent back to the source port. If this is not true, then the"]},{"entry":[{},{},"source port receives its own OPN back instead."]},{"entry":["\u20025","dis_string_follow","When this bit is not set, traffic through a Loop Switch, arriving"]},{"entry":[{},{},"on a port that is a cascade trunk defined as a string will go out"]},{"entry":[{},{},"the Loop Switch on the other port assigned to the same string,"]},{"entry":[{},{},"ignoring load-balance settings. If this bit is set, the load-"]},{"entry":[{},{},"balance settings take precedence on the path."]},{"entry":["\u20024","reinsert_port","When this bit is set, a request is issued to the router to re-"]},{"entry":[{},{},"insert a LIP isolated port. The port to be re-inserted is"]},{"entry":[{},{},"identified by the reinsert_port_id field. This bit is self-"]},{"entry":[{},{},"clearing."]},{"entry":["\u20023","classic_led","Setting this bit to \u20181\u2019 makes the LED flashing behavior match"]},{"entry":[{},{},"the Hydra 2 behavior . . . The Activity LED flashes during"]},{"entry":[{},{},"switch-mode data transactions. If this bit is set to \u20180\u2019, the"]},{"entry":[{},{},"Activity LED is unused and the GBIC LED flashes during"]},{"entry":[{},{},"switch-mode data transactions. The flash rate of all the LED's"]},{"entry":[{},{},"is controlled by the LED Update Timer Register for both LED"]},{"entry":[{},{},"modes."]},{"entry":["\u20022","frc_leds_off","Forces all LEDs off. 2highest priority control of LEDs after"]},{"entry":[{},{},"frc_leds_on."]},{"entry":["\u20021","frc_leds_on","Forces all LEDs on. Highest priority control of LEDs."]},{"entry":["\u20020","init_loop","When set, causes the Loop Switch to send a LIP to re-initialize"]},{"entry":[{},{},"the loop. A LIP is originated on the port connected to the"]},{"entry":[{},{},"router. When the LIP returns to that port the Loop Switch"]},{"entry":[{},{},"allows the loop master to take control of the loop initialization"]},{"entry":[{},{},"process. This bit is self-clearing. Since only one non-"]},{"entry":[{},{},"overlapping hard zone can be connected to the router at a time,"]},{"entry":[{},{},"this feature has limited use for non-overlapping hard zone"]},{"entry":[{},{},"applications. NOTE: This feature is disabled if Stealth"]},{"entry":[{},{},"Isolation is active."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"6.1.3 Router Control Register #","The control register contains bits that are changed during normal operation. These bits affect the operation of the entire Loop Switch or the router. Individual ports are controlled through the port control registers.",{"@attributes":{"id":"p-0401","num":"0700"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"182pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15-14","Data_rate","These pins control the data rate of the internal serdes."]},{"entry":[{},{},"00 TX\/RX Rate 1.06 Gbps"]},{"entry":[{},{},"01 TX\/RX Rate 2.12 Gbps"]},{"entry":[{},{},"10 TX\/RX Rate 4.24 Gbps"]},{"entry":[{},{},"11 TX\/RX Rate Selected by pins"]},{"entry":["13","pwr_dwn_serdes_no_gbic","Setting this bit will cause each serdes to be powered down if"]},{"entry":[{},{},"the associated moddef pins on that port indicate no GBIC or"]},{"entry":[{},{},"SFP is present. When a GBIC\/SFP is detected on a port, the"]},{"entry":[{},{},"associated serdes will be enabled."]},{"entry":["12","dis_hw_initiator_det","Setting this bit disables the hardware-based initiator detection"]},{"entry":[{},{},"function. Software load balancing is still enabled."]},{"entry":["11","Rtrim_termen","Termination Trimming Enable for serdes auto-trim module."]},{"entry":[{},{},"For test use only. Should always be set to 0."]},{"entry":["10","Rtrim_pd","Power-down control for serdes auto-trim module. For test use"]},{"entry":[{},{},"only. Should always be set to 0."]},{"entry":["\u20029","dis_isolate_send_CLS","When this bit is not set and an OPN request is made to a LIP-"]},{"entry":[{},{},"isolated destination port, a CLS is sent back to the source port."]},{"entry":[{},{},"If this bit is set, a route is not established to the destination"]},{"entry":[{},{},"port and the OPN is returned to the originating port."]},{"entry":["\u20028","RESET_SYSTEM","Writing a \u20181\u2019 to this bit resets the entire ASIC."]},{"entry":["7:4","Cscd_wdog_max","Cascade watchdog timeout maximum value. Watchdog to"]},{"entry":[{},{},"ensure that a cascade string port does not get stuck scrubbing"]},{"entry":[{},{},"ARB's off the string. LSB of value is 10 microseconds."]},{"entry":["3:0","Delta_cnt_prescale","Prescaler for delta frequency counter. See paragraph 5.13.11"]},{"entry":[{},{},"for more details. Valid values of 0-15 set the resolution of"]},{"entry":[{},{},"delta counter's LSB as follows:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Bits 3:0","LSB Resolution"]},{"entry":[{},{},"0","~18.8 ns (61 ppm)"]},{"entry":[{},{},"1","~37.6 ns (30 ppm)"]},{"entry":[{},{},"2","~56.4 ns (15 ppm)"]},{"entry":[{},{},".","."]},{"entry":[{},{},".","."]},{"entry":[{},{},".","."]},{"entry":[{},{},"15","~282 ns"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"6.1.4 Remove Connection\/Pending OPN Registers","In Remove Connection mode:","When any of these bits are set, any existing switching connection for the port(s) that correspond to the set bits is removed. This is useful for breaking deadlocked connections in the event that a CLS is never generated to close the connection between two communicating devices. These bits are self-clearing. Ports - are controlled by bits - respectively in Remove Connection Register #, Ports - are controlled by Remove Connection Register #. Note: Register # must be written to first, followed by a write to Register #. The write to Remove Connection Register # latches in both registers to ensure the remove connect acts on all ports simultaneously.","In Remove Pending OPN mode (bit 14 of address 0x08 is \u20181\u2019):\n\n","To allow the processor to kill all connections quickly, bit  of Remove Connection Register # is a global remove connect bit. Setting this bit will break down every connection (or every pending OPN).",{"@attributes":{"id":"p-0406","num":"0706"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Addr","Bits","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"0x06","15:0","Remove Connect\/Pending OPN ports 15:0"]},{"entry":[{},"0x08","15","Global Remove\/Pending OPN connect,"]},{"entry":[{},{},{},"breaks all connections."]},{"entry":[{},"0x08","14"]},{"entry":[{},"0x08","13:6","Reserved Always returns 0"]},{"entry":[{},"0x08","\u20025:0","Remove Connect\/Pending OPN, ports 22:16"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"This register contains the stall threshold value for port connections in switching mode. The value in this register is used as a threshold for the number of timer ticks that must be counted in the port stall counters before a stall_detect interrupt is triggered in the port interrupt status registers. The resolution of the stall counter is 10 microseconds.","6.1.6 Router Local SEOC USER Register","This register contains the information that is transmitted as payload in the SEOC exchange sequence ordered sets USER and USER. Received information from remote Loop Switch devices is stored at the individual port level. If an EEPROM is present, this data is loaded from the EEPROM at reset. NOTE: The data loaded into this register must be neutral disparity or the link will not function correctly.","6.1.7 RTR SW Matrix Configuration Register","This register configures the operation of the Router snoop port and sets the data rate, overriding the discrete input data rate select.",{"@attributes":{"id":"p-0410","num":"0710"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"182pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15\u20138\u2002","rtr_mtrx_sel","Router Switch Matrix Selected. Actual setting used by the"]},{"entry":[{},{},"router. If manual mode should match the rtr_mtrx_ctrl. If"]},{"entry":[{},{},"auto mode, shows active setting."]},{"entry":["7\u20130","rtr_mtrx_ctrl","Router Switch Matrix Control. Controls which port the router"]},{"entry":[{},{},"is to monitor. Value should normally be left at 0x40, which"]},{"entry":[{},{},"enables auto mode selection."]},{"entry":[{},{},"Valid entries are defined below:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"91pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"00000000\u201300011111","Port 0\u201331 selected"]},{"entry":[{},{},"001xxxxx","Router Selected"]},{"entry":[{},{},"01xxxxxx","Auto mode selected"]},{"entry":[{},{},"1xxxxxxx","Reserved"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"6.1.8 Port Active Status Registers","The P_Active registers show the current state of the P_Active signals for Port's - and CPU PORT (port).","6.1.9 Switch Matrix Control Register","These registers contain twenty 8-bit fields that indicate whether a port is running in automatic mode or is forced configured as a monitor port and its transmitter is connected to another port's receiver. When a port is in monitoring mode, its receiver is left unconnected from the switch matrix, unless another port is configured to monitor that port. This mode can be used to establish one or more ports as monitor ports that an analyzer would be connected to and through management, be connected to various ports for diagnostic purposes.","If a port is monitoring the probe mux, care must be taken that it is monitoring a valid data stream from the probe mux. Only pbmux[5:0] address 0x03 through 0x07 on ports - and CPU PORT(port) are valid. Monitoring any other probe mux selection will have undefined results.","Note that the ports are in auto mode after a reset. This register can be used in both loop and Loop Switch switching mode. The following table defines what the various bit configurations mean for each port:",{"@attributes":{"id":"p-0415","num":"0715"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field Value","Definition"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"0x00\u20130x15","Connect to port 0\u201321"]},{"entry":[{},"0x16","CPU PORT (port22)"]},{"entry":[{},"0x17","Connect to probe mux A"]},{"entry":[{},"0x18","Connect to probe mux B"]},{"entry":[{},"0x19\u20130x1f","Reserved"]},{"entry":[{},"0x20","Connect to router"]},{"entry":[{},"0x40","Port running in auto mode"]},{"entry":[{},{},"(default mode)"]},{"entry":[{},"All other addresses","Reserved"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"This register shows the configuration of the switch matrix during operation. Each port's 8 bit value indicates which port the mux is monitoring. The router logic muxes (Port #) are located in the RTR SW Matrix Configuration register.","6.1.11 Rem conn cnt Register","This 10 bit register sets the delay that remove connect waits between stopping traffic via blocking ARB's and eating R_RDY's and resetting the receive state machines of the affected ports. Each LSB is 10 microseconds, with the default setting causing a 2-millisecond delay.","6.1.12 Port Unfair Registers","These registers allow ports to be set in unfair mode where the port priority logic is bypassed. These bits are primarily used on cascade ports to allow more access.","6.1.13 Port - Interrupt Status Register","This register contains Port - interrupt status bits. If a bit in this register is set to one, then bit  in the Router Interrupt Status Register is set to generate an interrupt to the processor.","6.1.14 Future Port -\/Port - Interrupt Status Register","This register contains Port - interrupt status bits as well as reserved bits for Future Port - interrupt status bits. If a bit in this register is set to one, then bit  in the Interrupt Status Register is set to generate an interrupt to the processor.","6.1.15 Router Status Register #","The register provides a real time snapshot of the conditions indicated. The Status Register Clear does NOT clear this control register.",{"@attributes":{"id":"p-0422","num":"0722"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Router Status Register #1 Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["15\u201314","HW Rev Code","2 bit value that indicates the silicon revision."]},{"entry":["13","prom_done","When set, indicates that The Loop Switch has completed reading of"]},{"entry":[{},{},"the startup configuration from the serial EEPROM. NOTE: If the"]},{"entry":[{},{},"EEPROM is not present as indicated by the discrete input signal"]},{"entry":[{},{},"EEPROM_present#, this bit will be also be set."]},{"entry":["12\u20139\u2002","Router State Bits","The current state of the router state machine:"]},{"entry":[{},{},"0x0\u2014waiting or verifying to enter switch mode"]},{"entry":[{},{},"0x1\u2014wait for port request (ARB\/OPN)"]},{"entry":[{},{},"0x2\u2014check for valid\/blocked request"]},{"entry":[{},{},"0x5\u2014connect ports"]},{"entry":[{},{},"0x6\u2014port-connection wait state"]},{"entry":[{},{},"0x7\u2014disconnect losing pending requests"]},{"entry":[{},{},"0x8\u2014wait before attempting to disconnect losing pending"]},{"entry":[{},{},"requests"]},{"entry":[{},{},"0x9\u2014delay"]},{"entry":["\u20028\u20137","Rate","Indicates the current data rate of the Loop Switch."]},{"entry":[{},{},"00\u20141 Gbps operation"]},{"entry":[{},{},"01\u20142 Gbps operation"]},{"entry":[{},{},"10\u20144 Gbps operation"]},{"entry":[{},{},"11\u2014not defined"]},{"entry":["\u20026","hub_ready","When set, indicates the Loop Switch has completed its startup"]},{"entry":[{},{},"process and is waiting for the management card to reconfigure it, if"]},{"entry":[{},{},"necessary. Used only if management card is present."]},{"entry":["\u20025","hub_fault","Internal selftest failed. The Loop Switch goes into halt mode and"]},{"entry":[{},{},"prevent any port insertions from occurring."]},{"entry":["\u20024","Mgmt_Pres","The bit read from the serial status register. Provided for testing"]},{"entry":[{},{},"purposes."]},{"entry":["\u20023","Seg_Mode","Current operating mode based on configuration EEPROM and"]},{"entry":[{},{},"completion of Loop Switch initialization and device discovery."]},{"entry":[{},{},"0\u2014Hub Emulation Mode"]},{"entry":[{},{},"1\u2014Switching (segmenting) Mode"]},{"entry":["\u20022\u20130","Board id","Board ID bits from serial status interface."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{},"b":"2"},"This register reports changes in the state of the Loop Switch. This includes loop state as well as port configuration state. Any bit set in this register causes the interrupt pin to be asserted. This register is cleared on read except for bits ,, and . These bits need to be cleared in the corresponding interrupt status register.","Note that the management failure LED is keyed off the reading of this status register. If the management present signal indicates that a management card exists, then a watchdog timer is activated by the first read of this register. This timer expects that this register is then read at least every 100 ms. If it is not, the management LED is not illuminated.",{"@attributes":{"id":"p-0425","num":"0725"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Router Status Register #2 Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["15","Reset Complete","The Loop Switch has finished its reset processing and if Management is"]},{"entry":[{},{},"present, the Loop Switch is waiting to go online."]},{"entry":["14","Loop Down","Loop state in Router Status Register #3 has gone from state \u2018\u2019100\u2019 or"]},{"entry":[{},{},"higher to state \u2018011\u2019 or lower."]},{"entry":["13","Loop Up","Loop state in Router Status Register #3 has gone from state \u2018011\u2019 to"]},{"entry":[{},{},"state \u2018100\u2019 or higher."]},{"entry":["12","Ext Status Active","A fan fault or an over temp condition has been detected in Router"]},{"entry":[{},{},"Status Register #3."]},{"entry":["11","Frame_filt_err","More than 8 words have been selected on one of the frame filters. The"]},{"entry":[{},{},"filter will be disabled until this error is corrected."]},{"entry":["10","Zone_violation","A zone access violation was detected. A device tried to access another"]},{"entry":[{},{},"device that was not within the same logical zone of the Loop Switch."]},{"entry":[{},{},"(Note: The connection was not allowed.)"]},{"entry":["\u20029","pdisc_error","This bit is set if multiple ports claim the same ALPA during full-Loop"]},{"entry":[{},{},"Switch loop initialization and port discovery."]},{"entry":["\u20028","CPU PORT int","This bit is set if the FCPM or CPU port has an interrupt. This bit is"]},{"entry":[{},{},"used only if interrupt2 (cpu port int) is not used."]},{"entry":["\u20027","seprom_crc_fail","This bit is set if a CRC error is detected while reading the seprom data."]},{"entry":["\u20026","Utility_tmr2_tick","Utility timer 2 max has been reached. NOTE the timer rolls over and"]},{"entry":[{},{},"continues counting automatically."]},{"entry":["\u20025","Utility_tmrl_tick","Utility timer 1 max has been reached. NOTE the timer rolls over and"]},{"entry":[{},{},"continues counting automatically."]},{"entry":["\u20024","Utility_tmr0_tick","Utility timer 0 max has been reached. NOTE the timer rolls over and"]},{"entry":[{},{},"continues counting automatically."]},{"entry":["\u20023","Interswitch_frame","An inter-switch frame has been received"]},{"entry":["\u20022","Stealth_Isolation","An event has happened during Stealth LIP isolation that requires"]},{"entry":[{},{},"processor intervention."]},{"entry":["\u20021","Port 22\u201316 Interrupt","One port in the corresponding port bank needs attention, as indicated by"]},{"entry":[{},{},"a change in that Port's Error \/ Change Status Register. Bit 22 is the"]},{"entry":[{},{},"interrupt for the port that is connected to the CPU PORT."]},{"entry":["\u20020","Port 15\u20130 Interrupt","One port in the corresponding port bank needs attention, as indicated by"]},{"entry":[{},{},"a change in that Port's Error \/ Change Status Register."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{},"b":"3"},"The register provides a real time snapshot of the conditions indicated. The Status Register Clear does NOT clear this control register.",{"@attributes":{"id":"p-0427","num":"0727"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"301pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Router Status Register #3 Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["15\u2002","LIP_Valid","When set, indicates LIP_Port field is valid. This field is cleared on"]},{"entry":[{},{},"read. NOTE: Isolated ports are not included in last LIP'ed port logic."]},{"entry":["14\u201310","LIP_Port","The port number that received the last LIP since the last status register"]},{"entry":[{},{},"read. NOTE: Isolated ports are not included in last LIP'ed port logic."]},{"entry":["9","M_Ethernet_LED","Ethernet Activity LED. This bit is latched until read."]},{"entry":["8","Over_Temp","Indicates temperature sensor detected an over temperature condition."]},{"entry":["7","N_fan3_ok","Fan 3 not OK"]},{"entry":["6","N_fan2_ok","Fan 2 not OK"]},{"entry":["5","N_fan1_ok","Fan 1 not OK"]},{"entry":["4","N_fan0_ok","Fan 0 not OK"]},{"entry":["3\u20130","Loop State bits","4'h0\u2014IDLE: Loop Down, No port inserted"]},{"entry":[{},{},"4'h1\u2014INIT: Loop Initializing (LIP seen)"]},{"entry":[{},{},"4'h2\u2014OPEN_INIT: Loop Open Init state (SOF seen)"]},{"entry":[{},{},"4'hb\u2014LINKUP: Loop and Loop Switch initialization complete."]},{"entry":[{},{},"4'hc\u2014SRC_LIPS: uP is re-initializing the loop by forcing LIPs on"]},{"entry":[{},{},"loop."]},{"entry":[{},{},"4'hd\u2014CLR_TMR: End of uP loop re-init phase."]},{"entry":[{},{},"Notes:"]},{"entry":[{},{},"1. When state changes from state 4'h2 to 4'h3 thru 4'hb, this is"]},{"entry":[{},{},"considered a loop up event which increments the loop up count and"]},{"entry":[{},{},"turns on the Loop Up LED."]},{"entry":[{},{},"2. When the state changes from states 4'h3 thru 4'hb to any other"]},{"entry":[{},{},"state, this is considered a loop down event which turns off the Loop"]},{"entry":[{},{},"Up LED."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{},"b":"4"},"The register provides a real time snapshot of the conditions indicated. The Status Register Clear does NOT clear this control register.",{"@attributes":{"id":"p-0429","num":"0729"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Router Status Register #4 Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["15","WWN_valid","Read only bit. When this bit is set it indicates that during the"]},{"entry":[{},{},"previous loop initialization cycle the WWN of the loop master was"]},{"entry":[{},{},"captured from the last LISM frame to pass through, and is available"]},{"entry":[{},{},"to be read. This bit is reset when a LIP is received by any port on"]},{"entry":[{},{},"the device. NOTE: Only valid for zone 0."]},{"entry":["14","LILP_valid","Read only bit. When this bit is set it indicates that during the last"]},{"entry":[{},{},"loop initialization cycle a LILP frame was received and the payload"]},{"entry":[{},{},"is ready to be read. This bit is reset when a LIP is received by any"]},{"entry":[{},{},"port on the device. NOTE: Only valid for zone 0."]},{"entry":["13","map_done","Read only bit. The loop initialization portion of port discovery has"]},{"entry":[{},{},"completed and some of the data in the ALPA map registers is valid,"]},{"entry":[{},{},"but might not be fully resolved. The ALPA map locations would"]},{"entry":[{},{},"only be fully resolved if the lilp valid bit is set in the router status"]},{"entry":[{},{},"register #4 or if each potential device on the loop is either"]},{"entry":[{},{},"successfully or unsuccessfully accessed. NOTE: Only valid for zone"]},{"entry":[{},{},"0."]},{"entry":["12\u20137\u2002","Reserved"]},{"entry":["\u20026","Force LIM Port","Writing a \u20181\u2019 to this bit forces the LIM port to maintain the value"]},{"entry":[{},{},"written to bits 4:0 regardless of the true LIM port determined during"]},{"entry":[{},{},"subsequent loop initialization cycles."]},{"entry":["\u20025","EEPROM_PRES","Read only bit. Monitors the status of the EEPROM present input"]},{"entry":[{},{},"line to allow the processor to determine if the ASIC has a"]},{"entry":[{},{},"companion EEPROM attached for initial configuration."]},{"entry":["4\u20130","Lim_port_value","Contains the port value where the current LIM resides. NOTE: This"]},{"entry":[{},{},"value is only valid for ports in zone 0 where passive port discovery"]},{"entry":[{},{},"is performed. In zones other than zone 0, the LIM_port bit in the"]},{"entry":[{},{},"Port Status Register #1 registers should be checked. NOTE: A value"]},{"entry":[{},{},"of 0x1F in this field indicates no valid LIM port at this time."]},{"entry":[{},{},"Writing to this field will set the LIM port only until the next loop"]},{"entry":[{},{},"initialization cycle unless the Force LIM Port (bit 6) bit is set to \u20181\u2019."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"This register combines the programmable Idle-blocking ALPA value with the count of the number of times the loop has come up.",{"@attributes":{"id":"p-0431","num":"0731"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Router Block ALPA\/Router Loop Up Counter Register Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["15\u20138\u2002","block_ALPA","ARB ALPA value to use for blocking idles in switching mode. This"]},{"entry":[{},{},"value is reset to 0xff."]},{"entry":["7\u20130","loop_up_count","Count of the number of times the loop has come up. The count sticks"]},{"entry":[{},{},"at maximum count and is cleared on read. This register is"]},{"entry":[{},{},"incremented each time full-Loop Switch loop initialization occurs,"]},{"entry":[{},{},"which can be either in loop mode, or in switching mode when LIP"]},{"entry":[{},{},"isolation is disabled."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{},"b":"3"},"Each bit in this register controls the functions as defined in the table below.",{"@attributes":{"id":"p-0433","num":"0733"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"182pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15\u201310","Reserved",{}]},{"entry":["9","dis_emc_opn_lockup_rmv","When set, disables multiple-cascade lockup detection logic"]},{"entry":[{},{},"for root-Loop Switch systems."]},{"entry":["8","en_old_string_fairness","When set to \u20181\u2019, a tree cascade port's access request to a"]},{"entry":[{},{},"string is unfair. The tree cascade's arb will go on the string"]},{"entry":[{},{},"on the next arbitration cycle even if fairness has not be reset"]},{"entry":[{},{},"on the string."]},{"entry":["7","dis_cls_cnt_opn_lockup_rmv","Disable for close count open-lockup condition. (NOTE:"]},{"entry":[{},{},"This bit is for test only.)"]},{"entry":["6","dis_opn_lockup_rmv","Disable for tree cascade lockup clearing logic. If two or"]},{"entry":[{},{},"more multiple cascade trunksets are configured on an ASIC"]},{"entry":[{},{},"and no strings are defined. (Note This bit is for test only.)"]},{"entry":["5","dis_opn_wait","Set this bit to a \u20181\u2019 to disable the wait for IDLE to appear on"]},{"entry":[{},{},"a port before allowing a pending request to connect to that"]},{"entry":[{},{},"port. Normally, a pending request is held off until the IDLE"]},{"entry":[{},{},"is detected to ensure that a port that has both a target and"]},{"entry":[{},{},"initiator is not in an active connection."]},{"entry":["4","Port_pri_en","Setting this bit causes ports that have the same"]},{"entry":[{},{},"configuration type (tree or string cascade) to use the rotating"]},{"entry":[{},{},"priority to determine if a conflicting port is closed. If the bit"]},{"entry":[{},{},"is not set, a pending port that is held off by an active"]},{"entry":[{},{},"connection may have its pending request closed down by"]},{"entry":[{},{},"another port of the same type regardless of the rotating"]},{"entry":[{},{},"priority."]},{"entry":["3","Scsi_init_det_en","SCSI Initiator detect enable. When set, initiators"]},{"entry":[{},{},"are detected based on SCSI FCP frames. When clear,"]},{"entry":[{},{},"initiators are detected based on received PRL1 frames."]},{"entry":["2","dis_initiator_lockup_remove","If set, disables the initiator lockup resolution logic. This is"]},{"entry":[{},{},"only required if bit 0, dis_initiator_dflt_2_primary, is set"]},{"entry":[{},{},"and the HBA's are on strings. Auto-remove connect on stall"]},{"entry":[{},{},"can also be used to resolve initiator lockups."]},{"entry":[{},"en_port_priority_dis_on_arb","If set, does not increment port_priority logic on receipt of"]},{"entry":[{},{},"the ARB."]},{"entry":["0","dis_initiator_dflt_2_primary","If set, disables the logic that forced initiator to initiator"]},{"entry":[{},{},"communications to follow the primary string. NOTE:"]},{"entry":[{},{},"Setting this bit may cause some short-term system lockups"]},{"entry":[{},{},"which can be resolved by enabling the auto-remove connect"]},{"entry":[{},{},"on stall feature. However, this may imact system"]},{"entry":[{},{},"performance"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},"This register contains LED overrides to allow the microprocessor to directly control the state of the system level LED's. Setting the override bit for each function allows the microprocessor to control that LED.",{"@attributes":{"id":"p-0435","num":"0735"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"203pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15\u201314","Reserved",{}]},{"entry":["13\u201312","Reserved"]},{"entry":["11\u201310","Segment Mode LED","These bits allow the microprocessor to directly control the associated"]},{"entry":[{},"Override","LED as defined below:"]},{"entry":[{},{},"0 0 Normal LED operation"]},{"entry":[{},{},"0 1 Blink at 440 ms rate"]},{"entry":[{},{},"1 0 LED Forced off"]},{"entry":[{},{},"1 1 LED Forced on"]},{"entry":["9\u20138","Environmental LED","These bits allow the microprocessor to directly control the associated"]},{"entry":[{},"Override","LED as defined below:"]},{"entry":[{},{},"0 0 Normal LED operation"]},{"entry":[{},{},"0 1 Blink at 440 ms rate"]},{"entry":[{},{},"1 0 LED Forced off"]},{"entry":[{},{},"1 1 LED Forced on"]},{"entry":["7\u20136","Loop Switch Fault","These bits allow the microprocessor to directly control the associated"]},{"entry":[{},"LED Override","LED as defined below:"]},{"entry":[{},{},"0 0 Normal LED operation"]},{"entry":[{},{},"0 1 Blink at 440 ms rate"]},{"entry":[{},{},"1 0 LED Forced off"]},{"entry":[{},{},"1 1 LED Forced on"]},{"entry":["5\u20134","Loop Up LED","These bits allow the microprocessor to directly control the associated"]},{"entry":[{},"Override","LED as defined below:"]},{"entry":[{},{},"0 0 Normal LED operation"]},{"entry":[{},{},"0 1 Blink at 440 ms rate"]},{"entry":[{},{},"1 0 LED Forced off"]},{"entry":[{},{},"1 1 LED Forced on"]},{"entry":["3\u20132","Management Present","These bits allow the microprocessor to directly control the associated"]},{"entry":[{},"LED Override","LED as defined below:"]},{"entry":[{},{},"0 0 Normal LED operation"]},{"entry":[{},{},"0 1 Blink at 440 ms rate"]},{"entry":[{},{},"1 0 LED Forced off"]},{"entry":[{},{},"1 1 LED Forced on"]},{"entry":["1\u20130","Ethernet LED","These bits allow the microprocessor to directly control the associated"]},{"entry":[{},"Override","LED as defined below:"]},{"entry":[{},{},"0 0 Normal LED operation"]},{"entry":[{},{},"0 1 Blink at 440 ms rate"]},{"entry":[{},{},"1 0 LED Forced off"]},{"entry":[{},{},"1 1 LED Forced on"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},"This register is used to mask router interrupt status bits. If a bit in this register is set to one, then the corresponding bit in the Router Status Register # is enabled to generate an interrupt to the processor.","6.1.23 Port Fairness Control Register","This register is controls the operation of the CLS counter which is used to vary the priority of a port based on the ALPA and the number of times that ALPA has attempted a transaction without being able to transfer a single frame of data",{"@attributes":{"id":"p-0438","num":"0738"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"224pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15\u201310",{},{}]},{"entry":["9","dis_cls_cnt_initiator","When set to \u20181\u2019, disables the destination ALPA close counter on"]},{"entry":[{},{},"ALPA's that have been defined as initiators."]},{"entry":["8","en_per_alpa_cls_cnt","Setting this bit to a \u20181\u2019 causes the OPN close counter to use the"]},{"entry":[{},{},"individual thresholds for increasing the priority of closed down ports."]},{"entry":[{},{},"This function provides some support for multiple-level QOS based on"]},{"entry":[{},{},"ALPA's."]},{"entry":["7\u20134","cls_cnt_max_dst","Global Threshold value for OPN close counter on destination."]},{"entry":[{},{},"When the close count associated with a specific ALPA hits the"]},{"entry":[{},{},"threshold value, the priority of that port will be increased to"]},{"entry":[{},{},"minimize its chances of being closed down. This mechanism is to"]},{"entry":[{},{},"ensure no devices are starved. To enable this function, either bit of"]},{"entry":[{},{},"this register needs to be set to \u20180\u2019, to support initiators, or bits in the"]},{"entry":[{},{},"Close Count on Destination ALPA registers need to be set."]},{"entry":[{},{},"NOTE: The cls_cnt_en bit must be set on a per port basis to enable"]},{"entry":[{},{},"this function."]},{"entry":["3\u20130","Cls_cnt_max","Global Threshold value for OPN close counter. When the close count"]},{"entry":[{},{},"associated with a specific ALPA hits the threshold value, the priority of"]},{"entry":[{},{},"that port will be increased to minimize its chances of being closed"]},{"entry":[{},{},"down. This mechanism is to ensure no devices are starved. This global"]},{"entry":[{},{},"threshold is used unless the en_per_alpa_cls_cnt, bit 8, is set to a \u20181\u2019. If"]},{"entry":[{},{},"en_per_alpa_cls_cnt is set, the per_alpa_cls_cntvalues are used."]},{"entry":[{},{},"NOTE: The cls_cnt_en bit must be set on a per port basis to enable this"]},{"entry":[{},{},"function."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},"This register sets the duty cycle of the variable priority ports. The port will have its normal priority, set by the port type for the low_pulse duty cycle. During the high_pulse duty cycle, the port's priority is increased to minimize pending OPN requests from being closed down and possibly starving a device. NOTE: It is recommended that the ALPA based close counter is used in normal operation.",{"@attributes":{"id":"p-0440","num":"0740"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15-8","High_pulse","Time, in milliseconds, that the port has the"]},{"entry":[{},{},"highest priority enabled."]},{"entry":["\u20027-0","Low_pulse","Time, in milliseconds, that the port has the"]},{"entry":[{},{},"priority associated with the port type."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},"This set of registers defines bitmaps to prevent devices on any given port from accessing devices on other ports. A 32-bit map is defined for each port. Bits - of each port bitmap represent ports  through port  respectively. Setting the appropriate bit disables access for the port (i.e. setting bit  and bit  of register 0x80 prevents port  from accessing ports  and ). This register is only used in switching mode. Note: References to ports above port  are for future implementations.","These registers can be accessed at the specified address when the upper_page_select bits are set to \u201c0000\u201d.","6.1.26 Router Opened Port Map Registers","These registers contain a cumulative bit map of the ports OPNed by the specified port. These registers are clear on read. This register is only used in switching mode.","These registers can be accessed at the specified address when the upper_page_select bits are set to \u201c0001\u201d.","6.1.27 Router ALPA Port Map Register","This register set contains an ALPA to port map for each possible ALPA. The ALPAs are determined during port discovery. The ALPA to port bitmap for each ALPA is as defined in the following table. These registers are both read and write accessible so that Port Discovery can be performed by firmware prior to entering switching mode if there are ASIC problems with Port Discovery.",{"@attributes":{"id":"p-0446","num":"0746"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field Value","Definition"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"00000000-00011111","ALPA exists on port 0-31"]},{"entry":[{},"110xxxxx","ALPA does not exist on loop"]},{"entry":[{},"111xxxxx","ALPA probably does not exist on"]},{"entry":[{},{},"loop but may be shadowed"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"These registers can be accessed at the specified address when the upper_page_select bits are set to \u201c0010\u201d.","6.1.28 Router ALPA Position Map (LILP Payload) Register","This register set contains an ALPA to port map for each possible ALPA. These registers contain a snapshot of the LILP frame payload from the most recent loop initialization cycle where positional mapping was supported.","These registers can be accessed at the specified address when the upper_page_select bits are set to \u201c0011\u201d.","6.1.29 Router Serial EEPROM Capture Registers","These registers report the global controls read from the serial EEPROM at startup. These values can also be written by the microprocessor for debug or ASIC simulation. Configuration bits that are port specific are accessible via port register accesses to the appropriate registers.","NOTE: While a write to the ASIC changes the values in the Router memory map, the processor is responsible for updating the EEPROM via the IC bus.","These registers can be accessed at the specified address when the upper_page_select bits are set to \u201c0100\u201d.","6.1.30 Loop Initialization Master WWN Register","These registers contain the captured value of the WWN from the last LISM frame during the most recent loop initialization cycle. The bits - are contained in register #, bits - in register #, bits - in register #, and bits - in register #.","These registers can be accessed at the specified address when the upper_page_select bits are set to \u201c0100\u201d.","6.1.31 Software Override Initiator Bit Map","This 128-bit table is organized per the table below. Under software control, initiators can be added or subtracted from the hardware Captured Initiator Table described below. This table is XOR'ed with the Captured Initiator Table to provide the hardware with the initiators present on the loop. If the hardware detects 2 initiators in a requested OPN connection, that connection is routed down the primary cascade. If only one of the ALPA's in the OPN is an initiator, the hardware defaults to routing the connection down the primary cascade unless an alternative duplicate trunk route is defined in the Trunk Grouping Registers described below.","Software can force a specific device to be treated as an initiator for target-based load balancing. Defining half the targets as initiators forces all their traffic down the primary connection while all other connections are routed down the duplicate trunk.",{"@attributes":{"id":"p-0457","num":"0757"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"BIT Position"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"16"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"10","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"11","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"12","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"13","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"14","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"15","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"16","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","14","13","12","11","10","09","08","07","06","05","04","03","02","01","00"]},{"entry":{"@attributes":{"namest":"1","nameend":"16","align":"center","rowsep":"1"}}},{"entry":["26","25","23","1F","1E","1D","1B","18","17","10","0F","08","04","02","01","00"]},{"entry":["3C","3A","39","36","35","34","33","32","31","2E","2D","2C","2B","2A","29","27"]},{"entry":["56","55","54","53","52","51","4E","4D","4C","4B","4A","49","47","46","45","43"]},{"entry":["73","72","71","6E","6D","6C","6B","6A","69","67","66","65","63","5C","5A","59"]},{"entry":["9B","98","97","90","8F","88","84","82","81","80","7C","7A","79","76","75","74"]},{"entry":["B3","B2","B1","AE","AD","AC","AB","AA","A9","A7","A6","A5","A3","9F","9E","9D"]},{"entry":["CE","CD","CC","CB","CA","C9","C7","C6","C5","C3","BC","BA","B9","B6","B5","B4"]},{"entry":[{},"EF","E8","E4","E2","E1","E0","DC","DA","D9","D6","D5","D4","D3","D2","D1"]},{"entry":{"@attributes":{"namest":"1","nameend":"16","align":"center","rowsep":"1"}}}]}}]}}},"These registers can be accessed at the specified address when the upper_page_select bits are set to \u201c0101\u201d.","6.1.32 Captured Initiator Bit Map","These registers contain the ALPAs of all initiators detected on the loop XOR'ed with initiators set in the Software Override Initiator Bit map. This 128-bit table is organized per the bit mappings in the table below. The ALPA of a detected initiator has its corresponding bit set in the table. A LIP clears the table to ensure valid entries are loaded every time the loop initializes. If the hardware initiator detection function is disabled in Router Control Register #, no initiators are detected. The XOR with the Software Override of Initiators Registers above allows software to override individual ALPAs by either defining or masking out of the initiator table.","If detection of initiators is disabled by the dis_hw_initiator_det bit these bits will always be \u20180\u2019.",{"@attributes":{"id":"p-0461","num":"0761"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"BIT Position"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"16"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"10","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"11","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"12","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"13","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"14","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"15","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"16","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","14","13","12","11","10","09","08","07","06","05","04","03","02","01","00"]},{"entry":{"@attributes":{"namest":"1","nameend":"16","align":"center","rowsep":"1"}}},{"entry":["26","25","23","1F","1E","1D","1B","18","17","10","0F","08","04","02","01","00"]},{"entry":["3C","3A","39","36","35","34","33","32","31","2E","2D","2C","2B","2A","29","27"]},{"entry":["56","55","54","53","52","51","4E","4D","4C","4B","4A","49","47","46","45","43"]},{"entry":["73","72","71","6E","6D","6C","6B","6A","69","67","66","65","63","5C","5A","59"]},{"entry":["9B","98","97","90","8F","88","84","82","81","80","7C","7A","79","76","75","74"]},{"entry":["B3","B2","B1","AE","AD","AC","AB","AA","A9","A7","A6","A5","A3","9F","9E","9D"]},{"entry":["CE","CD","CC","CB","CA","C9","C7","C6","C5","C3","BC","BA","B9","B6","B5","B4"]},{"entry":[{},"EF","E8","E4","E2","E1","E0","DC","DA","D9","D6","D5","D4","D3","D2","D1"]},{"entry":{"@attributes":{"namest":"1","nameend":"16","align":"center","rowsep":"1"}}}]}}]}}},"These registers can be accessed at the specified address when the upper_page_select bits are set to \u201c0101\u201d.","6.1.33 Trunk Grouping Registers","The Trunk Grouping Registers consists of 24 sets of 2 registers containing 3 fields: 1) the trunkset primary port, 2) the trunkset assigned (or alternate) port and the ALPA of the affected initiator. If an ALPA is defined as an initiator in one of the tables described above, it can be loaded into this table. An OPN request is initially processed as a normal connection. The port number output from the lookup it compared to the trunkset primary port entries. If the lookup table's output port number matches one in the Trunk Grouping Table as well as the ALPA entry, the OPN is routed down the indicated alternate port. The alternate port is qualified with the internal \u201cp_active\u201d flag to verify it is an active port. If the alternate port is not active, the connection defaults back to the original primary port. Two exceptions exist to this rule: 1) OPN's between initiators are always routed down the primary connection and 2) half-duplex OPN's are always routed down the primary port. These 2 exceptions exist to minimize 2 OPN requests from devices A and B going down separate cascades to each other and providing a dead-lock situation.","For each pair of trunkset registers the bit format is as shown below:",{"@attributes":{"id":"p-0465","num":"0765"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15-13","Reserved","Unused"]},{"entry":["12:8","Assigned","Port in this group of trunks that will handle all"]},{"entry":[{},"Trunk","traffic for the ALPA, defined below in the upper"]},{"entry":[{},"Port","word, with the exceptions of initiator-to-initiator"]},{"entry":[{},{},"and half-duplex traffic."]},{"entry":["\u20027-5","Reserved","Unused"]},{"entry":["\u20024-0","Trunkset","The primary port for this group of trunks. This"]},{"entry":[{},"Primary","port is the port that will be active during loop"]},{"entry":[{},"Port","initialization while in loop mode."]},{"entry":["15:8","Reserved","Unused"]},{"entry":["\u20027-0","ALPA of","ALPA of initiator that is to send all its traffic"]},{"entry":[{},"Initiator","via the defined duplicate trunk, described above"]},{"entry":[{},{},"in the lower word, when the Loop Switch is"]},{"entry":[{},{},"in switching (segmenting) mode."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"These registers can be accessed at the specified address when the upper_page_select bits are set to \u201c0101\u201d.","6.1.34 Learned Initiator Port Map Registers","This register set contains an ALPA to port map for each possible initiator ALPA. The ALPA port mappings are determined by monitoring received OPN frames and loading the port number of any OPN with an initiator as its source into the table. This table is used to ensure transactions to an initiator use the path the initiator used in its last transaction to minimize congestion.",{"@attributes":{"id":"p-0468","num":"0768"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Field Value","Definition"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"00000000-00011111","ALPA exists on port 0-31"]},{"entry":[{},"110xxxxx","ALPA does not exist on loop"]},{"entry":[{},"111xxxxx","ALPA probably does not exist on"]},{"entry":[{},{},"loop but may be shadowed"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"These registers can be accessed at the specified address when the upper_page_select bits are set to \u201c0110\u201d.","This register can be accessed at the specified address when the upper_page_select bits are set to \u201c0111\u201d.","6.1.35 Close Count on Destination ALPA Registers","Each bit in these register corresponds to a port, with address 0x90 configures ports :, address 0x92 bits : configures ports : respectively. If a bit is set, the destination of the OPN determines the close counter to increment. NOTE: Initiators automatically default to using the destination of the OPN to determine the close counter to increment unless explicitly disabled in the Port Fairness Control Register.","6.1.36 Per ALPA Open Counter Max Registers","The Per ALPA Open Counter registers allow the OPN counter to increase the priority of each ALPA's OPN request with a unique maximum closed OPN count threshold per ALPA. The threshold is a value from 0x0 to 0x0f per ALPA. A value of 0x0 always increases the priority. A value of 0xf disables the CLS counter operation for that particular ALPA, a value of 0x01 increases the priority after 1 close, a value of 0x2 increase the priority after 2 closes, etc. The thresholds are arranged four to a register in sequentially increasing ALPA order.","This register can be accessed at the specified address when the upper_page_select re set to \u201c0111\u201d.","6.1.37 Stealth Isolation Control Register #","The Stealth Isolation Control Register # controls Stealth Isolation modes of operation from a policy standpoint. These controls are intended to be set at during the original configuration and not modified in normal operation.","This register can be accessed when the upper_page_select bits are set to \u201c1000.",{"@attributes":{"id":"p-0476","num":"0776"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"210pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","Frc_LIRP_FRM","Setting this bit forces the payload in the LIRP frame to be overwritten"]},{"entry":[{},{},"by the data contained in the LIRP frame modification registers. NOTE:"]},{"entry":[{},{},"Any active port the LIRP frame is routed through after the router will"]},{"entry":[{},{},"append ALPA's present on that port to the list in the LIRP payload."]},{"entry":["14","Frc_LIFA_FRM","Setting this bit forces the payload in the LIFA frame to be overwritten"]},{"entry":[{},{},"by the data contained in the LIFA Modification Bit map."]},{"entry":["13","Dis_LIRP_frm_mod","Setting this bit to a \u20181\u2019 disables LIRP frame modification during a"]},{"entry":[{},{},"Stealth loop initialization cycle. Normally, if a Stealth initialization"]},{"entry":[{},{},"cycle is in progress, the router will logically OR the data contained in"]},{"entry":[{},{},"the LIRP Frame Modification Registers into the LIRP frame."]},{"entry":["12","Dis_LIFA frm_mod","Setting this bit to a \u20181\u2019 disables LIFA frame modification during a"]},{"entry":[{},{},"Stealth loop initialization cycle. Normally, if a Stealth initialization"]},{"entry":[{},{},"cycle is in progress, the router will logically OR the data contained in"]},{"entry":[{},{},"the LIFA Frame Modification Registers into the LIFA frame."]},{"entry":["11","dis_redo_intsw_chg_on_to","Clearing this bit causes the ASIC to repeat the interswitch cascade"]},{"entry":[{},{},"stealth cycle if a timeout is detected. This corrects for two ASIC's"]},{"entry":[{},{},"cascade ports coming up out of sync when they are connected."]},{"entry":["10","En_global_LIRP","Setting this bit places every ALPA in the system in the LIRP frame"]},{"entry":[{},{},"regardless of the LIP isolation settings. NOTE: In a multiple-ASIC"]},{"entry":[{},{},"system only the ALPA's local to this ASIC are included."]},{"entry":["9","Dis_hw_LIRP_gen","Setting this bit disables the hardware state-machine from generating the"]},{"entry":[{},{},"LIRP entries to be appended to the list in the LIRP frame's payload"]},{"entry":[{},{},"during a stealth loop initialization cycle."]},{"entry":["8","Dis_hw_LIFA_gen","Setting this bit disables the hardware state-machine from generating the"]},{"entry":[{},{},"LIFA ALPA bits to be OR'ed into the LIFA frame during a stealth loop"]},{"entry":[{},{},"initialization cycle."]},{"entry":["7","dis_rx_lism_resets_to","Clearing this bit causes the timeout counter of the Stealth state machine"]},{"entry":[{},{},"to reset to 0x00 every time a LISM is detected. This allows for short"]},{"entry":[{},{},"timeouts for removed ports but allows LISM resolution to continue even"]},{"entry":[{},{},"though the timeout would be exceded."]},{"entry":["6","stlth_insert_lip","Setting this bit generates LIPs to all the ports in the stealth cycle loop"]},{"entry":[{},{},"for the entire time the lifa and lirp data is being parsed by the stealth"]},{"entry":[{},{},"state machine."]},{"entry":["5","stlth_stop_all_til_done","Setting this bit stops traffic on all channels for the duration of the"]},{"entry":[{},{},"stealth isolation cycle"]},{"entry":["4","En_interactive_stealth","Setting this bit pauses the ASIC's stealth state-machine and allows the"]},{"entry":[{},{},"microprocessor to provide step-by-step control of the loop initialization"]},{"entry":[{},{},"cycle via the Stealth Isolation Control Register #2."]},{"entry":["3","Relip_zones_pwrup","When reset, the switch forms a loop to initialize the system the first"]},{"entry":[{},{},"time. If this bit is set, after going into switching mode the first time, the"]},{"entry":[{},{},"ports enabled to receive LIPs in stealth are re-LIP'ed to ensure they"]},{"entry":[{},{},"have only the ALPA map of their zone. NOTE only valid if stealth is"]},{"entry":[{},{},"enabled."]},{"entry":["2","Reserved"]},{"entry":["1","Send_frame","Setting this bit will cause the ASIC to transmit a generic interswitch"]},{"entry":[{},{},"frame to all switches in the system. NOTE: This bit is autoclearing."]},{"entry":["0","Byp_positional_map","Setting this bit will cause the ASIC to clear the positional mapping bit"]},{"entry":[{},{},"in the LISA frame during a Stealth loop initialization cycle. The LIM"]},{"entry":[{},{},"will not generate the LIRP and LILP frames if this bit is not set."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{},"b":"2"},"The Stealth Isolation Control Register # enables allow interactive control of a th loop initialization cycle by an external microprocessor.","This register can be accessed at the specified address when the upper_page_select are set to \u201c1000.",{"@attributes":{"id":"p-0479","num":"0779"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"210pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","Resume_hw_stealth","Setting this bit allows the hardware state machine to continue the"]},{"entry":[{},{},"processing a stealth loop isolation cycle if the \u201cen_interactive_stealth\u201d"]},{"entry":[{},{},"bit is set in the Stealth Isolation Control Register #1. The use of these"]},{"entry":[{},{},"bits allows the processor to be interrupted upon receipt of a LIP,"]},{"entry":[{},{},"manipulate the stealth control bits and then allow the hardware to"]},{"entry":[{},{},"complete the loop initialization cycle. NOTE: This bit is self-clearing."]},{"entry":["14","Reserved","Always \u20180\u2019"]},{"entry":["13","lip_on_intersw_chg","If this bit is set, the hardware will automatically LIP all the zones on the"]},{"entry":[{},{},"insertion or removal of a stealth interswitch link. If this bit is not set,"]},{"entry":[{},{},"no LIP will be generated."]},{"entry":["12:8","Port_for_sw_LIP","The port defined in these bits is included in a software commanded lip"]},{"entry":[{},{},"cycle initiated by setting bit 2 or 1 as defined below. This port must"]},{"entry":[{},{},"have at least one device capable of becoming the LIM which generates"]},{"entry":[{},{},"the loop initialization frames."]},{"entry":["\u20027","Pause_lip_cls","If interactive_stealth is enabled as described in section6.1.37, the"]},{"entry":[{},{},"stealth state machine in the router will pause the stealth LIP processing"]},{"entry":[{},{},"after the CLS has circulated the loop. Blocking ARB's will be"]},{"entry":[{},{},"generated on each port to hold off device accesses and the isolated ports"]},{"entry":[{},{},"will not be allowed into the main system loop. An interrupt will be"]},{"entry":[{},{},"generated to the processor. The processor may determine which"]},{"entry":[{},{},"ALPA(s) have been added\/subtracted during this LIP cycle and modify"]},{"entry":[{},{},"the isolation registers if required. Upon completion, the processor may"]},{"entry":[{},{},"then command the LIP cycle to complete, allowing the devices into the"]},{"entry":[{},{},"main system. Reserved for ASIC simulations only."]},{"entry":["\u20026","Pause_lip_frame","If interactive_stealth is enabled as described in section 6.1.37, the"]},{"entry":[{},{},"stealth state machine in the router will pause the stealth LIP processing"]},{"entry":[{},{},"upon the receipt of the interswitch frame, allowing the processor to"]},{"entry":[{},{},"format the frame to pass on instead of automatically forwarding the"]},{"entry":[{},{},"received frame. Reserved for ASIC simulations only."]},{"entry":["\u20025","Pause_before_lip_frame","If interactive_stealth is enabled as described in section 6.1.37, the"]},{"entry":[{},{},"stealth state machine in the router will pause the stealth LIP processing"]},{"entry":[{},{},"before transmitting an interswitch frame, allowing the processor to"]},{"entry":[{},{},"format the frame to. Reserved for ASIC simulations only."]},{"entry":["\u20024","Pause_lip_rcvd","If interactive_stealth is enabled as described in section 6.1.37, the"]},{"entry":[{},{},"stealth state machine in the router will pause the stealth LIP processing"]},{"entry":[{},{},"as soon as a LIP is detected. The processor may modify the settings for"]},{"entry":[{},{},"this LIP cycle then command the LIP cycle to resume. Reserved for"]},{"entry":[{},{},"ASIC simulations only."]},{"entry":["\u20023","Reserved"]},{"entry":["\u20022","Gen_router_only_LIP","Setting this bit generates LIP cycle with a special interswitch frame"]},{"entry":[{},{},"which has the payload bytes defined in section 6.1.44. This"]},{"entry":[{},{},"initialization cycle causes only the router in each switch to involved in"]},{"entry":[{},{},"the initialization loop. In a single ASIC system, setting this bit will"]},{"entry":[{},{},"cause the stealth cycle to run per the settings of the port specified by"]},{"entry":[{},{},"bits 12:8 in this register. NOTE: This bit is auto-clearing."]},{"entry":["\u20021","Gen_selective_LIP","Setting this bit generates LIP cycle with a special interswitch frame"]},{"entry":[{},{},"which has the payload bytes defined. This initialization cycle causes all"]},{"entry":[{},{},"ports enabled to be notified of a LIP event, in the zone(s) defined in bits"]},{"entry":[{},{},"in the payload of the interswitch frame, to be rolled into a loop. Each of"]},{"entry":[{},{},"these ports will then be involved in a loop initialization cycle. Ports not"]},{"entry":[{},{},"enabled for LIP notification will remain undisturbed. In a single ASIC"]},{"entry":[{},{},"system, setting this bit will cause the stealth cycle to run per the settings"]},{"entry":[{},{},"of the port specified by bits 12:8 in this register. NOTE: This bit is"]},{"entry":[{},{},"auto-clearing."]},{"entry":["\u20020","Gen_system_LIP","Setting this bit generates a LIP cycle which causes all ports, regardless"]},{"entry":[{},{},"of LIP isolation settings, to be rolled into a loop involving every port in"]},{"entry":[{},{},"a loop initialization cycle. This bit is not defined for single ASIC"]},{"entry":[{},{},"systems. NOTE: This bit is auto-clearing."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},"This register allows the microprocessor to force blocking ARB's as the fill word on any port as a mechanism to hold off OPN requests thus blocking traffic.","This register can be accessed at the specified address when the upper_page_select bits are set to \u201c1000.",{"@attributes":{"id":"p-0482","num":"0782"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Address","Bits","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0x84","15-0","Port 15:0 respectively controls to force"]},{"entry":[{},{},"blocking ARB's as the fill word"]},{"entry":[{},{},"transmitted out that port."]},{"entry":[{},{},"A \u20181\u2019 enables blocking ARB generation."]},{"entry":["0x86","15-8","Stlth_holdoff_interval Timer in milliseconds that"]},{"entry":[{},{},"holds off sequential local stealth"]},{"entry":[{},{},"LIP cycles to ensure that multi-cycle"]},{"entry":[{},{},"systems all have time to stop traffic and"]},{"entry":[{},{},"update their local router lookup tables. (Default"]},{"entry":[{},{},"value is 4 milliseconds)"]},{"entry":["0x86","7-6","Reserved, always \u20180\u2019"]},{"entry":["0x86","5-0","Port 21:16 respectively controls to force blocking ARB's"]},{"entry":[{},{},"as the fill word transmitted out that port. A \u20181\u2019 enables"]},{"entry":[{},{},"blocking ARB generation."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{},"b":"5"},"This register contains status bits relating to Stealth Isolation Operation. All status bits are clear on read and are maskable via Status Register # Interrupt Mask Register. Any unmasked bit that goes high will generate an interrupt and set the Stealth_Isolation status bit in Router Status Register #.","This register can be accessed at the specified address when the upper_page_select bits are set to \u201c1000.",{"@attributes":{"id":"p-0485","num":"0785"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"217pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15-13","Unused","Always \u20180\u2019"]},{"entry":["12","interswitch_link_chg","This bit is set if one of the stealth interswitch links is inserted or"]},{"entry":[{},{},"removed."]},{"entry":["11","lip_cycle_to","The lip cycle timed out without receiving a CLS. This normally"]},{"entry":[{},{},"indicates a device was removed without any other devices in its zone"]},{"entry":[{},{},"enabled to receive the LIP thus driving the stealth cycle."]},{"entry":["10","Rcvd_lism_frame","This bit is set if the switch detects a LISM frame instead of an expected"]},{"entry":[{},{},"interswitch frame. This indicates the device on the stlth_sw_cscd is"]},{"entry":[{},{},"either a switch not in stealth (possibly due to power-up sequence) or a"]},{"entry":[{},{},"non-switch device."]},{"entry":["\u20029","Rcvd_own_frame","This bit is set if the ASIC detects it has received its own Generic Inter-"]},{"entry":[{},{},"switch frame indicating the frame has circulated the loop."]},{"entry":["\u20028","Rcvd_remote_frame","This bit is set to indicate this ASIC has received a Generic Inter-switch"]},{"entry":[{},{},"frame from another ASIC."]},{"entry":["\u20027","Paused_for_lip_cls","This bit is set when a CLS following the LIP initialization cycle has"]},{"entry":[{},{},"been received when the en_interactive_stealth bit is set in Steatlh"]},{"entry":[{},{},"Control Register #1. Note: The Stealth Isolation state machine is"]},{"entry":[{},{},"halted until the resume_stealth bit is set."]},{"entry":["\u20026","Paused_for_lip_frame","This bit is set when a remote LIP inter-switch frame has been received"]},{"entry":[{},{},"when the en_interactive_stealth bit is set in Steatlh Control Register #1."]},{"entry":[{},{},"Note: The Stealth Isolation state machine is halted until the"]},{"entry":[{},{},"resume_stealth bit is set."]},{"entry":["\u20025","Paused_before_lip_frame","This bit is set before the local LIP inter-switch frame has been transmitted"]},{"entry":[{},{},"when the en_interactive_stealth bit is set in Steatlh Control Register #1."]},{"entry":[{},{},"Note: The Stealth Isolation state machine is halted until the"]},{"entry":[{},{},"resume_stealth bit is set."]},{"entry":["\u20024","Paused_for_lip_rcvd","This bit is set when a LIP has been received when the"]},{"entry":[{},{},"en_interactive_stealth bit is set in Steatlh Control Register #1. Note:"]},{"entry":[{},{},"The Stealth Isolation state machine is halted until the resume_stealth bit"]},{"entry":[{},{},"is set."]},{"entry":["\u20023","stealth_cycle_occurred","This bit is set to indicate that the stealth state machine has run (State"]},{"entry":[{},{},"machine leaves the IDLE state.)"]},{"entry":["\u20022","frame_crc_err","This bit is set when a crc error is detected on either an interswitch LIP"]},{"entry":[{},{},"or generic frame."]},{"entry":["\u20021","gen_frm_cycle_cmplt","This bit is set when a locally requested interswitch generic frame cycle"]},{"entry":[{},{},"is completed."]},{"entry":["\u20020","Traffic_stopped","This bit is set when traffic has been stopped when the"]},{"entry":[{},{},"en_interactive_stealth bit is set in Steatlh Control Register #1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{},"b":"5"},"This register contains mask bits for Status Register #, relating to Stealth Isolation Operation. Any unmasked bit that goes high will generate an interrupt and set the Stealth_Isolation status bit in Router Status Register #.","6.1.42 Stealth Timeout Register","This register the maximum value for the two timouts used by the stealth state machine.",{"@attributes":{"id":"p-0488","num":"0788"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0x8C","15-8","slth_cls_cntr_max \u2014delay the stealth state machine"]},{"entry":[{},{},"waits after attempting to stop traffic with blocking"]},{"entry":[{},{},"ARB's until it issues a \u201cremove_connect\u201d pulse to any"]},{"entry":[{},{},"ports not stopped. A LSB is 100 microseconds and the"]},{"entry":[{},{},"default setting is 4 milliseconds (0x28) NOTE: A"]},{"entry":[{},{},"value of 0xff disables the timeout"]},{"entry":["0x8C","\u20027-0","slth_wait_cntr_max \u2014delay the stealth state"]},{"entry":[{},{},"machine waits until it generates a CLS to shut down"]},{"entry":[{},{},"a stalled stealth cycle. A LSB is 1 millisecond and the"]},{"entry":[{},{},"default setting is 100 milliseconds (0x64) NOTE: A"]},{"entry":[{},{},"value of 0xff disables the timeout"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{},"b":"6"},"This register displays the current state of the stealth state machine as well as other control signal states as shown below:",{"@attributes":{"id":"p-0490","num":"0790"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15:5","reserved",{}]},{"entry":["5","req_traffic_stopped","All ports that have a request to stop traffic"]},{"entry":[{},{},"has successfully stopped their traffic."]},{"entry":["4","lip_pending","A LIP has been detected and"]},{"entry":[{},{},"stealth resolution is pending"]},{"entry":["\u20023:0","stlth_state","0 = IDLE"]},{"entry":[{},{},"1 = STOP_TRAFFIC"]},{"entry":[{},{},"2 = SEND_FRAME"]},{"entry":[{},{},"3 = WAIT_FRAME"]},{"entry":[{},{},"4 = FORWARD_FRAME"]},{"entry":[{},{},"5 = WAIT_LIP"]},{"entry":[{},{},"6 = CREATE_ISOLATED_LOOP"]},{"entry":[{},{},"7 = WAIT_CLS"]},{"entry":[{},{},"8 = WAIT_TABLE_UPDATE"]},{"entry":[{},{},"9 = SEND_GEN_FRAME"]},{"entry":[{},{},"A = WAIT_GEN_FRAME"]},{"entry":[{},{},"B = FORWARD_GEN_FRAME"]},{"entry":[{},{},"C = SEND_CLS"]},{"entry":[{},{},"D = RELEASE_ISOLATION"]},{"entry":[{},{},"E = UPDATE_LOOKUP_TABLE"]},{"entry":[{},{},"F = STOP_TRAFFIC_4_UPDATE"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},"These registers contain the ten bytes of the payload to be loaded into the transmitted LIP interswitch frame. During normal stealth LIP isolation cycles, this frame is passed through the router of each switch to determine which switch controls the existing loop initialization cycle as well as containing the LIP isolation zones that are involved in the cycle. The ASIC will automatically format the frame during an automatic stealth isolation cycle. A commanded cycle during interactive stealth frame will use the data written to these registers by the processor. The format the payload of the frame is shown below:",{"@attributes":{"id":"p-0492","num":"0792"},"tables":{"@attributes":{"id":"TABLE-US-00041","num":"00041"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Register","Payload Byte","LIP Control Frame"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0x90, bits[7:0]","0","00"]},{"entry":["0x90, bits [15:0]","1","08"]},{"entry":["0x92, bits[7:0]","2","00 = LIPing port and routers"]},{"entry":[{},{},"01 = LIPing port, ports in zone"]},{"entry":[{},{},"enabled to rcv LIPs and"]},{"entry":[{},{},"routers"]},{"entry":[{},{},"02 = All ports regardless of"]},{"entry":[{},{},"isolation modefor ports"]},{"entry":["0x92, bits [15:0]","3","00"]},{"entry":["0x94, bits[7:0]","4","Local SN [7:0]"]},{"entry":["0x94, bits [15:0]","5","Local SN [15:8]"]},{"entry":["0x96, bits[7:0]","6","Local SN [23:16]"]},{"entry":["0x96, bits [15:0]","7","Local SN [31:24]"]},{"entry":["0x98, bits[7:0]","8","Isolation Zones[7:0]"]},{"entry":["0x98, bits [15:0]","9","Isolation Zones[15:8]"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"These read-only registers contain the 10 byte payload received in the LIP interswitch frame. During stealth LIP isolation cycles, this frame is received to determine which switch controls the existing loop initialization cycle as well as containing the LIP isolation zones that are involved in the cycle.",{"@attributes":{"id":"p-0494","num":"0794"},"tables":{"@attributes":{"id":"TABLE-US-00042","num":"00042"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Register","Payload Byte","LIP Control Frame"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["0xA0, bits[7:0]","0","00"]},{"entry":["0xA0, bits [15:0]","1","08"]},{"entry":["0xA2, bits[7:0]","2","00 = LIPing port and routers"]},{"entry":[{},{},"01 = LIPing port, ports in zone"]},{"entry":[{},{},"enabled to rcv LIPs and"]},{"entry":[{},{},"routers"]},{"entry":[{},{},"02 = All ports regardless of"]},{"entry":[{},{},"isolation modefor ports"]},{"entry":["0xA2, bits [15:0]","3","00"]},{"entry":["0xA4, bits[7:0]","4","Local SN [7:0]"]},{"entry":["0xA4, bits [15:0]","5","Local SN [15:8]"]},{"entry":["0xA6, bits[7:0]","6","Local SN [23:16]"]},{"entry":["0xA6, bits [15:0]","7","Local SN [31:24]"]},{"entry":["0xA8, bits[7:0]","8","Isolation Zones[7:0]"]},{"entry":["0xA8, bits [15:0]","9","Isolation Zones[15:8]"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The LIFA Frame modification registers hold the values used to modify the LIFA frame during stealth LIP isolation cycles. In normal operation, this registers are read-only by the microprocessor with the ASIC's hardware formatting the bits representing each ALPA. If the dis_hw_LIFA_GEN bit is set in the Stealth Isolation Control Register #, write access to these registers is enabled and the processor is responsible for generating the in these registers.","If the FRC_LIFA_FRM_MOD bit is set in the Stealth Isolation Control Register #, the values in these registers will overwrite the payload in the LIFA frame. If the FRC_LIFA_FRM_MOD bit is not set, the ASIC will logically OR the LIFA payload and these registers together.","This register can be accessed at the specified address when the upper_page_select bits are set to \u201c1000.",{"@attributes":{"id":"p-0498","num":"0798"},"tables":{"@attributes":{"id":"TABLE-US-00043","num":"00043"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"BIT Position"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"16"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"10","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"11","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"12","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"13","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"14","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"15","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"16","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","14","13","12","11","10","09","08","07","06","05","04","03","02","01","00"]},{"entry":{"@attributes":{"namest":"1","nameend":"16","align":"center","rowsep":"1"}}},{"entry":["25","23","1F","1E","1D","1B","18","17","10","0F","08","04","02","01","00","X"]},{"entry":["3A","39","36","35","34","33","32","31","2E","2D","2C","2B","2A","29","27","26"]},{"entry":["55","54","53","52","51","4E","4D","4C","4B","4A","49","47","46","45","43","3C"]},{"entry":["72","71","6E","6D","6C","6B","6A","69","67","66","65","63","5C","5A","59","56"]},{"entry":["98","97","90","8F","88","84","82","81","80","7C","7A","79","76","75","74","73"]},{"entry":["B2","B1","AE","AD","AC","AB","AA","A9","A7","A6","A5","A3","9F","9E","9D","9B"]},{"entry":["CD","CC","CB","CA","C9","C7","C6","C5","C3","BC","BA","B9","B6","B5","B4","B3"]},{"entry":["EF","E8","E4","E2","E1","E0","DC","DA","D9","D6","D5","D4","D3","D2","D1","CE"]},{"entry":{"@attributes":{"namest":"1","nameend":"16","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The LIRP Frame modification registers hold the values used to modify the LIRP frame during stealth LIP isolation cycles. In normal operation, this registers are read-only by the microprocessor with the ASIC's hardware formatting the count and ALPA list. If the dis_hw_LIRP_GEN bit is set in the Stealth Isolation Control Register #, write access to these registers is enabled and the processor is responsible for generating the values in these registers.","If the FRC_LIRP_FRM_MOD bit is set in the Stealth Isolation Control Register #, the values in these registers will overwrite the payload in the LIRP frame. If the FRC_LIRP_FRM_MOD bit is not set, the ASIC will append the number of ALPA's indicated by the LIRP ALPA count field to the ALPA's already in the LIRP payload and update the count to reflect the added ALPA's.","This register can be accessed at the specified address when the upper_page_select bits are set to \u201c1001.",{"@attributes":{"id":"p-0502","num":"0802"},"tables":{"@attributes":{"id":"TABLE-US-00044","num":"00044"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"LIP Isolation LIRP Modification Map"},{"entry":"(Upper_page_select = 1001)"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1ALPA for LIRP","LIRP ALPA Count","R\/W"]},{"entry":[{},"3ALPA for LIRP","2ALPA for LIRP","R\/W"]},{"entry":[{},".",".","R\/W"]},{"entry":[{},".","."]},{"entry":[{},".","."]},{"entry":[{},"126ALPA for LIRP","125ALPA for LIRP","R\/W"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}},"br":{},"b":["0","7"]},"The route blocking registers hold the values used to determine access privileges between various devices using the ALPA's contained in the OPN ordered set. Writing a \u20181\u2019 to a location blocks a device with that ALPA from communicating with any device whose ALPA is also blocked. Each ALPA is represented by a single bit in each group as shown in the table below where the \u2018?\u201d in the address field is a value of 8-F for groups - respectively. NOTE: The unused bit is placed in the most significant position of each group, unlike LixA frames that use the least significant position.",{"@attributes":{"id":"p-0504","num":"0804"},"tables":{"@attributes":{"id":"TABLE-US-00045","num":"00045"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]},{"entry":[{},"BIT Position"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"17"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"10","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"11","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"12","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"13","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"14","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"15","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"16","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"17","colwidth":"14pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ADDR","15","14","13","12","11","10","09","08","07","06","05","04","03","02","01","00"]},{"entry":{"@attributes":{"namest":"1","nameend":"17","align":"center","rowsep":"1"}}},{"entry":["0x?0:","26","25","23","1F","1E","1D","1B","18","17","10","0F","08","04","02","01","00"]},{"entry":["0X?2:","3C","3A","39","36","35","34","33","32","31","2E","2D","2C","2B","2A","29","27"]},{"entry":["0X?4:","56","55","54","53","52","51","4E","4D","4C","4B","4A","49","47","46","45","43"]},{"entry":["0X?6:","73","72","71","6E","6D","6C","6B","6A","69","67","66","65","63","5C","5A","59"]},{"entry":["0X?8:","9B","98","97","90","8F","88","84","82","81","80","7C","7A","79","76","75","74"]},{"entry":["0X?A:","B3","B2","B1","AE","AD","AC","AB","AA","A9","A7","A6","A5","A3","9F","9E","9D"]},{"entry":["0X?C:","CE","CD","CC","CB","CA","C9","C7","C6","C5","C3","BC","BA","B9","B6","B5","B4"]},{"entry":["0X?E:",{},"EF","E8","E4","E2","E1","E0","DC","DA","D9","D6","D5","D4","D3","D2","D1"]},{"entry":{"@attributes":{"namest":"1","nameend":"17","align":"center","rowsep":"1"}}}]}}]}}},"This register can be accessed at the specified address when the upper_page_select bits are set to \u201c1010.","6.1.49 Route Blocking, Registers, Groups  to F","The route blocking registers hold the values used to determine access privileges between various devices using the ALPA's contained in the OPN ordered set. Writing a \u20181\u2019 to a location blocks a device with that ALPA from communicating with any device whose ALPA is also blocked. Each ALPA is represented by a single bit in each group as shown in the table below where the \u2018?\u201d in the address field is a value of 8-F for groups -F respectively. NOTE: The unused bit is placed in the most significant position of each group, unlike LixA frames that use the least significant position.",{"@attributes":{"id":"p-0507","num":"0807"},"tables":{"@attributes":{"id":"TABLE-US-00046","num":"00046"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]},{"entry":[{},"BIT Position"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"17"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"10","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"11","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"12","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"13","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"14","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"15","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"16","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"17","colwidth":"14pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ADDR","15","14","13","12","11","10","09","08","07","06","05","04","03","02","01","00"]},{"entry":{"@attributes":{"namest":"1","nameend":"17","align":"center","rowsep":"1"}}},{"entry":["0x?0:","26","25","23","1F","1E","1D","1B","18","17","10","0F","08","04","02","01","00"]},{"entry":["0X?2:","3C","3A","39","36","35","34","33","32","31","2E","2D","2C","2B","2A","29","27"]},{"entry":["0X?4:","56","55","54","53","52","51","4E","4D","4C","4B","4A","49","47","46","45","43"]},{"entry":["0X?6:","73","72","71","6E","6D","6C","6B","6A","69","67","66","65","63","5C","5A","59"]},{"entry":["0X?8:","9B","98","97","90","8F","88","84","82","81","80","7C","7A","79","76","75","74"]},{"entry":["0X?A:","B3","B2","B1","AE","AD","AC","AB","AA","A9","A7","A6","A5","A3","9F","9E","9D"]},{"entry":["0X?C:","CE","CD","CC","CB","CA","C9","C7","C6","C5","C3","BC","BA","B9","B6","B5","B4"]},{"entry":["0X?E:",{},"EF","E8","E4","E2","E1","E0","DC","DA","D9","D6","D5","D4","D3","D2","D1"]},{"entry":{"@attributes":{"namest":"1","nameend":"17","align":"center","rowsep":"1"}}}]}}]}}},"This register can be accessed at the specified address when the upper_page_select bits are set to \u201c1011.","6.1.50 LIP Isolation Zone Control Registers","This set of registers defines bitmaps to set the LIP isolation zones within the ASIC. Each port has a 16-bit register associated with it where Bit  corresponds to LIP isolation zone , Bit  corresponds to zone , etc.","These registers can be accessed at the specified address when the upper_page_select bits are set to \u201c1100\u201d.","6.1.51 Stealth Generic Inter-Switch Frame Header Registers","These registers contain the 6 words of the header to be loaded into the transmitted Generic interswitch frames. Additionally, words  and  of the header are used to detect received Generic interswitch frames.",{"@attributes":{"id":"p-0512","num":"0812"},"tables":{"@attributes":{"id":"TABLE-US-00047","num":"00047"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Header Word","Field Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"0 [31:16]",{}]},{"entry":[{},"0 [15:0]"]},{"entry":[{},"1 [31:16]"]},{"entry":[{},"1 [15:0]"]},{"entry":[{},"2 [31:16]"]},{"entry":[{},"2 [15:0]"]},{"entry":[{},"3 [31:16]"]},{"entry":[{},"3 [15:0]"]},{"entry":[{},"4 [31:16]"]},{"entry":[{},"4 [15:0]"]},{"entry":[{},"5 [31:16]"]},{"entry":[{},"5 [15:0]"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"These registers can be accessed at the specified address when the upper_page_select bits are set to \u201c1101\u201d.","6.1.52 Stealth Generic Inter-Switch Frame Transmit Payload Registers","These registers contain the 8 words of the payload to be loaded into the transmitted Generic interswitch frame. NOTE: Payload word  must be the local serial number for broadcast frames. If the local serial number is not used, the frame will be blocked by a switch with the matching serial number.",{"@attributes":{"id":"p-0515","num":"0815"},"tables":{"@attributes":{"id":"TABLE-US-00048","num":"00048"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Payload Word","Field Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"0 [31:16]","Local Serial Number [31:15]"]},{"entry":[{},"0 [15:0]","Local Serial Number [15:0]"]},{"entry":[{},"1 [31:16]","User Data"]},{"entry":[{},"1 [15:0]","User Data"]},{"entry":[{},"2 [31:16]","User Data"]},{"entry":[{},"2 [15:0]","User Data"]},{"entry":[{},"3 [31:16]","User Data"]},{"entry":[{},"3 [15:0]","User Data"]},{"entry":[{},"4 [31:16]","User Data"]},{"entry":[{},"4 [15:0]","User Data"]},{"entry":[{},"5 [31:16]","User Data"]},{"entry":[{},"5 [15:0]","User Data"]},{"entry":[{},"6 [31:16]","User Data"]},{"entry":[{},"6 [15:0]","User Data"]},{"entry":[{},"7 [31:16]","User Data"]},{"entry":[{},"7 [15:0]","User Data"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"These registers can be accessed at the specified address when the upper_page_select bits are set to \u201c1101\u201d.","6.1.53 Stealth Generic Inter-Switch Frame Payload Registers","These registers contain the 8 words of the payload to be received in a Generic interswitch frame.",{"@attributes":{"id":"p-0518","num":"0818"},"tables":{"@attributes":{"id":"TABLE-US-00049","num":"00049"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Payload Word","Field Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"0 [31:16]","Rcvd Serial Number [31:15]"]},{"entry":[{},"0 [15:0]","Rcvd1 Serial Number [15:0]"]},{"entry":[{},"1 [31:16]","User Data"]},{"entry":[{},"1 [15:0]","User Data"]},{"entry":[{},"2 [31:16]","User Data"]},{"entry":[{},"2 [15:0]","User Data"]},{"entry":[{},"3 [31:16]","User Data"]},{"entry":[{},"3 [15:0]","User Data"]},{"entry":[{},"4 [31:16]","User Data"]},{"entry":[{},"4 [15:0]","User Data"]},{"entry":[{},"5 [31:16]","User Data"]},{"entry":[{},"5 [15:0]","User Data"]},{"entry":[{},"6 [31:16]","User Data"]},{"entry":[{},"6 [15:0]","User Data"]},{"entry":[{},"7 [31:16]","User Data"]},{"entry":[{},"7 [15:0]","User Data"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"These registers can be accessed at the specified address when the upper_page_select bits are set to \u201c1101\u201d.","6.2 Port Register Definitions",{"@attributes":{"id":"p-0520","num":"0820"},"tables":{"@attributes":{"id":"TABLE-US-00050","num":"00050"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Port Logic Registers"},{"entry":"Register Description"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Configuration Register","R\/W"]},{"entry":["Control Register #1","R\/W"]},{"entry":["Port Interrupt Mask #1","R\/W"]},{"entry":["Port Interrupt Mask #2","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["User OS Match Byte 2 Mask","User OS Match Byte 2","R\/W"]},{"entry":["User OS Match Byte 3 Mask","User OS Match Byte 3","R\/W"]},{"entry":["User OS Match Byte 4 Mask","User OS Match Byte 4","R\/W"]},{"entry":["User Tx Byte 3","User Tx Byte 4","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"10"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"7pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"10","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["E","S","I","M","F","Ob","Ib","RES","User Tx Byte 2","R\/W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Reserved","User_10b_word[9:0]","R\/W"]},{"entry":["Reserved","User_10b_word[19:10]","R\/W"]},{"entry":["Reserved","User_10b_word[29:20]","R\/W"]},{"entry":["Reserved","User_10b_word[39:30]","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Local SEOC P_INFO","Reserved","R\/W"]},{"entry":["Reserved","No Comma Timer","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["OS Error Threshold Lower","R\/W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["CRC Error Threshold","OS Error Threshold Upper","R\/W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Control Register #2","R\/W"]},{"entry":["Stall Counter","R\/W"]},{"entry":["Status Register #1","R"]},{"entry":["Status Register #2","R"]},{"entry":["Port Detector Register #1","R"]},{"entry":["Port Detector Register #2","R"]},{"entry":["Port Error\/Change (Interrupt) Status Register #1","R\/W"]},{"entry":["Port Error\/Change (Interrupt) Status Register #2","R\/W"]},{"entry":["OS Error Count Lower","R"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Current destination register","OS Error Count Upper","R"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Match Count Lower","R"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"140pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Reserved","MC Upper","R"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["RX Frame Count Register","R"]},{"entry":["Future TX Frame Count Register","N\/A"]},{"entry":["Port Connections Attempted","R"]},{"entry":["Port Connections Held Off","R"]},{"entry":["Clock Delta","R"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Reserved","Port Utilization %","R"]},{"entry":["OS Capture Byte 3","OS Capture Byte 4","R"]},{"entry":["Reserved","OS Capture Byte 2","R"]},{"entry":["CRC Error Count","Invalid OPN\/Broadcast","R"]},{"entry":[{},"ALPA Capture Reg."]},{"entry":["Port Insertion Count","Loop Up Count","R"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Val","Reserved","CRC Error ALPA","R"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Src ALPA","Dest ALPA","R"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Port_alpa_bitmap[0.14]","R\/W"]},{"entry":["Port_alpa_bitmap[15.30]","R\/W"]},{"entry":["Port_alpa_bitmap[31.46]","R\/W"]},{"entry":["Port_alpa_bitmap[47.62]","R\/W"]},{"entry":["Port_alpa_bitmap[63.78]","R\/W"]},{"entry":["Port_alpa_bitmap[79.94]","R\/W"]},{"entry":["Port_alpa_bitmap[95.1102]","R\/W"]},{"entry":["Port_alpa_bitmap[111.126]","R\/W"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Remote SEOC SN Byte 1","Remote SEOC SN Byte 2","R"]},{"entry":["Remote SEOC SN Byte 3","Remote SEOC SN Byte 4","R"]},{"entry":["Remote SEOC P_INFO","Remote SEOC SN Byte 5","R"]},{"entry":["Remote SEOC USER2","Remote SEOC USER1","R"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Reserved","GBIC\/SFP Read Address[10:0]","R\/W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["stop_traffic_cnt","prt_opn_lockup_max","R\/W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"189pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["GBIC\/SFP Serial ID Data","R"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["OPN Mismatch Src ALPA","OPN Mismatch Dest ALPA","R"]},{"entry":["Reserved","OPN Mismatch D_ID from Frame","R"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Src\/Dest ALPAs From Unknown OPN\/Lost Node","R"]},{"entry":"Extra Control Register"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["SCSI Statistics Source ALPA","SCSI Statistics Destination ALPA","R\/W"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"196pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["SCSI Read IO Counter","R\/W"]},{"entry":["SCSI Write IO Counter","R\/W"]},{"entry":["SCSI Read Byte Counter[15:0]","R\/W"]},{"entry":["SCSI Read Byte Counter[31:16]","R\/W"]},{"entry":["SCSI Read Byte Counter[47:32]","R\/W"]},{"entry":["SCSI Write Byte Counter[15:0]","R\/W"]},{"entry":["SCSI Write Byte Counter[31:16]","R\/W"]},{"entry":["SCSI Write Byte Counter[47:32]","R\/W"]},{"entry":["Serdes Control Register","R\/W"]},{"entry":["Serdes Sync Control Register","R\/W"]},{"entry":["Serdes Sync Mask Register","R\/W"]},{"entry":["Serdes Analog Configuration Register","R\/W"]},{"entry":["Serdes Compatibility Register","R\/W"]},{"entry":["Serdes Status Register","R"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":"Note:"},{"entry":"Many port register addresses are marked Read Only. Some of these registers (e.g., counters which stick at max) may in reality be Read\/Write for testing and simulation purposes. In normal operation, these registers are only intended to be read, and as such, should never be written to by firmware!"}]}}]}},"br":{}},"The port configuration register bits define operating modes that are set once or control signals that are changed infrequently.",{"@attributes":{"id":"p-0522","num":"0822"},"tables":{"@attributes":{"id":"TABLE-US-00051","num":"00051"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Port Configuration Register"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","rmv_conn_on_dup_stall","When set, issues a remove connect "]},{"entry":[{},{},"to duplicate cascades that have"]},{"entry":[{},{},"stalled while pending a connection."]},{"entry":["14","rmv_conn_on_stall","When set, issues a remove connect"]},{"entry":[{},{},"to the port on detection of a stall."]},{"entry":["13","Pending_opn_en","When set, modifies stall detection to"]},{"entry":[{},{},"occur starting with the pending open"]},{"entry":[{},{},"state."]},{"entry":["12","filt_dis","GBIC\/SFP I2C glitch"]},{"entry":[{},{},"filter disable. Used only for"]},{"entry":[{},{},"ASIC simulation."]},{"entry":["11","tx_disable","When set, asserts the transmit disable"]},{"entry":[{},{},"signal to the GBIC\/SFP. Also causes"]},{"entry":[{},{},"the bypassed LED to blink."]},{"entry":[{},{},"Warning: setting this bit can bring"]},{"entry":[{},{},"down an operational loop."]},{"entry":["10","forced_insert","When set, causes the port to be"]},{"entry":[{},{},"inserted into the loop regardless of"]},{"entry":[{},{},"the input signal. Also causes the"]},{"entry":[{},{},"bypassed LED to blink."]},{"entry":["9","forced_bypass","Port insertion state machine is"]},{"entry":[{},{},"disabled and prevents the port from"]},{"entry":[{},{},"participating in activity, even if all"]},{"entry":[{},{},"other conditions for insertion are"]},{"entry":[{},{},"present. Also causes the"]},{"entry":[{},{},"bypassed LED to blink."]},{"entry":["8","p_beacon","When set, port LED's blink at a 2 Hz"]},{"entry":[{},{},"rate."]},{"entry":["7","en_ins_rdy","When set, the Loop Switch asserts"]},{"entry":[{},{},"the Insertion Rdy bit in the Port"]},{"entry":[{},{},"Error\/Change Status Register any"]},{"entry":[{},{},"time a port is going to be inserted."]},{"entry":[{},{},"This differs from normal operation"]},{"entry":[{},{},"when the Insertion Rdy bit is only set"]},{"entry":[{},{},"when a serial number is exchanged "]},{"entry":[{},{},"during the insertion process."]},{"entry":["6","dis_arbff","Disables the normal replacement of"]},{"entry":[{},{},"received Idles with ARBff for EMI"]},{"entry":[{},{},"emissions control."]},{"entry":["5","dis_lip_on_ins","Port logic normally forces"]},{"entry":[{},{},"reinitialization by sourcing LIPf7s"]},{"entry":[{},{},"into the loop when a port is switched"]},{"entry":[{},{},"in. Setting this bit disables"]},{"entry":[{},{},"this function. NOTE: This bit is"]},{"entry":[{},{},"automatically set by the ASIC if this"]},{"entry":[{},{},"port is configured as a"]},{"entry":[{},{},"duplicate cascade."]},{"entry":["4","dis_lip_on_byp","Port logic normally forces"]},{"entry":[{},{},"reinitialization by sourcing LIPf7s"]},{"entry":[{},{},"into the loop when a port is switched"]},{"entry":[{},{},"out. Setting this bit disables this"]},{"entry":[{},{},"function. NOTE: This bit is"]},{"entry":[{},{},"automatically set by the ASIC if this"]},{"entry":[{},{},"port is configured as a"]},{"entry":[{},{},"duplicate cascade."]},{"entry":["3","dis_byp_no_comma","Port logic normally switches out"]},{"entry":[{},{},"a port if a valid comma character is"]},{"entry":[{},{},"not received in 100 usec. Setting this"]},{"entry":[{},{},"bit disables this function."]},{"entry":["2","dis_byp_on_lipf8","Port logic normally replaces LIPf8s"]},{"entry":[{},{},"received on the port with LIPf7s and"]},{"entry":[{},{},"switches out the port. Setting this bit"]},{"entry":[{},{},"disables this function."]},{"entry":["1","dis_seoc","Port logic normally attempts to"]},{"entry":[{},{},"determine the type of device attached"]},{"entry":[{},{},"to the port. Setting this bit disables"]},{"entry":[{},{},"this function."]},{"entry":["0","Tinman","Setting this bit allows any port to"]},{"entry":[{},{},"be inserted provided word sync is"]},{"entry":[{},{},"acquired. No other checks are done."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{},"b":"1"},{"@attributes":{"id":"p-0523","num":"0823"},"tables":{"@attributes":{"id":"TABLE-US-00052","num":"00052"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"287pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Port Control Register #1 Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","clear_detector","Set to clear port detector register. Bit is auto cleared."]},{"entry":["14","comp_ins","Complete insertion. The microprocessor sets this bit in"]},{"entry":[{},{},"response to the setting of the Insertion Rdy bit in Status"]},{"entry":[{},{},"Register #1 when the controller has finished configuring the"]},{"entry":[{},{},"port for insertion. This would include any required duplicate"]},{"entry":[{},{},"port registers in the router. Only used in when management is"]},{"entry":[{},{},"present. Bit is auto cleared."]},{"entry":["13","dup_cascade_conn","When set, indicates that the port is a duplicate (secondary)"]},{"entry":[{},{},"cascade connection to another Loop Switch."]},{"entry":["12-10","Port type","Controls port mode of operation."]},{"entry":[{},{},"0 0 0 non-cascade"]},{"entry":[{},{},"0 0 1 tree cascade"]},{"entry":[{},{},"0 1 0 auto cascade, non-cascade unless SEOC"]},{"entry":[{},{},"successfully completes and changes to tree"]},{"entry":[{},{},"0 1 1 reserved"]},{"entry":[{},{},"1 0 0 string #0 cascade"]},{"entry":[{},{},"1 0 1 string #1 cascade"]},{"entry":[{},{},"1 1 0 string #2 cascade"]},{"entry":[{},{},"1 1 1 string #3 cascade"]},{"entry":["9","hi_priority_tmr_en","When set, varies the priority of the port between the normal"]},{"entry":[{},{},"priority set by the port type field above and highest priority to"]},{"entry":[{},{},"help ensure that the port doesn't have any devices that are"]},{"entry":[{},{},"starved."]},{"entry":["8","Close_cntr_dis","Disable the ALPA close counter. If an OPN request is closed"]},{"entry":[{},{},"down without a SOF ordered set being received, the close"]},{"entry":[{},{},"counter for the source's ALPA is incremented. If that counter"]},{"entry":[{},{},"reaches the threshold value set in the router registers and this"]},{"entry":[{},{},"bit is set, the priority of this port will be increased until 1"]},{"entry":[{},{},"successful connection has been made to minimize the chances"]},{"entry":[{},{},"of a device being starved."]},{"entry":["7","pass_thru","When this bit is set, data is passed straight thru the port."]},{"entry":["6","util_conn","If this bit is not set or in hub emulation mode, the utilization"]},{"entry":[{},{},"counter reflects the % of data sent within a frame as compared"]},{"entry":[{},{},"to the total data bandwidth. When this bit is set in switching"]},{"entry":[{},{},"mode, this bit enables the port utilization count register to"]},{"entry":[{},{},"reflect the % of time that a port is connected and"]},{"entry":[{},{},"generating\/requesting traffic."]},{"entry":["5","match3x","User match must see 3 consecutive matching ordered sets."]},{"entry":[{},{},"Note this bit is ignored if the Match Other bit is set."]},{"entry":["4","usrm_en","0 - User match is disabled and OS capture is reset."]},{"entry":[{},{},"1 - User match is enabled and OS capture is started."]},{"entry":[{},{},"The user match count is reset when this bit transitions from the"]},{"entry":[{},{},"reset (0) to the set (1) condition."]},{"entry":["3","match_othr","1 - Match on any ordered set that doesn't have a detect bit in"]},{"entry":[{},{},"Port Detector Register. The exception to this rule is that pt-pt"]},{"entry":[{},{},"ordered sets set a detector bit and match other as well, since"]},{"entry":[{},{},"more than that OS can set the detector bit."]},{"entry":["2","match_mask_4","0 - Byte 4 is used in match."]},{"entry":[{},{},"1 - Byte 4 is ignored in match"]},{"entry":["1","match_mask_3","0 - Byte 3 is used in match."]},{"entry":[{},{},"1 - Byte 3 is ignored in match"]},{"entry":["0","match_mask_2","0 - Byte 2 is used in match."]},{"entry":[{},{},"1 - Byte 2 is ignored in match"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"This set of registers defines an ordered set that the port searches for in the received data stream. Each bit of the payload bytes of the ordered set can be individually masked off. When a match is found, the USR Match bit in the status register is set.","The lower 8 bits of Address 0x04 contains the 2byte of the ordered set following a K28.5. The upper 8 bits of Address 0x04 contain the bit mask for the 2byte. If a bit is set in the bit mask, that bit is treated as \u201cdon't care\u201d during the byte compare operation. Address 0x06 contains the 3byte to match and its associated mask. Address 0x08 contains the 4th byte to match and its associated mask. Note that the 1st byte of the ordered set is hardwired to K28.5 (positive or negative running disparity). This means that K28.5s must be present on the loop in order to do a capture. Note that EOFs can be captured since a K28.5 of either running disparity is recognized.","If the parity error on match bit is set, any ordered sets that match the value in this register will generate a parity error.","6.2.4 Port User Ordered Set Transmit Register","This set of registers defines an arbitrary ordered set that is to be sent on the loop. The lower 8 bits of Address 0x0C is the 2nd byte to be transmitted after a K28.5. Address 0x0A contains the 3rd and 4th byte. For this data to be properly written, the lower register must be written prior to the upper, and the upper register write must have the enable bit (xmit_os_reg) set in the data that is to be written.",{"@attributes":{"id":"p-0528","num":"0828"},"tables":{"@attributes":{"id":"TABLE-US-00053","num":"00053"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Port User Ordered Set Transmit Register Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Address 0x0A (lower)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15-8","Tx Byte #3",{}]},{"entry":["\u20027-0","Tx Byte #4","Least significant byte of ordered set"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Address 0x0C (upper)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","xmit_os_reg","Global enable for ordered set transmit"]},{"entry":[{},{},"register contents. Setting only this bit"]},{"entry":[{},{},"replaces all fill words with the contents"]},{"entry":[{},{},"of the Ordered Set Transmit Registers"]},{"entry":["14","xmit_some","When this bit is set and the xmit_os_reg"]},{"entry":[{},{},"bit is set, the given ordered set is sent"]},{"entry":[{},{},"one through 15 times based on the count"]},{"entry":[{},{},"in Port Control Register #2. If clear,"]},{"entry":[{},{},"the ordered set is sent continuously."]},{"entry":["13","xmit_imm","When this bit is set and the xmit_os_reg"]},{"entry":[{},{},"bit is set, the given ordered set replaces"]},{"entry":[{},{},"the next ordered set. If clear, only fill"]},{"entry":[{},{},"words are replaced."]},{"entry":["12","xmit_match","When this bit is set and the xmit_os"]},{"entry":[{},{},"reg bit is set, the given ordered set"]},{"entry":[{},{},"replaces ordered sets that meet the"]},{"entry":[{},{},"User match criteria"]},{"entry":["11","xmit_fill","When this bit is set and the"]},{"entry":[{},{},"xmit_os_reg bit is set,"]},{"entry":[{},{},"ordered sets that meet the"]},{"entry":[{},{},"User match criteria are replaced"]},{"entry":[{},{},"with the current fill word."]},{"entry":["10","Xmit_bad_os_reg","Global enable for bad ordered"]},{"entry":[{},{},"set transmit register contents."]},{"entry":["9","xmit_bad_10b_once","When this bit is set and the"]},{"entry":[{},{},"xmit_bad_os_reg bit is"]},{"entry":[{},{},"set, the contents of the a badUser 10b"]},{"entry":[{},{},"Word-encoded ordered set (with negative"]},{"entry":[{},{},"disparity) is sent once."]},{"entry":["8","xmit_bad_10b_imm","When this bit is set and the xmit"]},{"entry":[{},{},"bad_os_reg bit is set,"]},{"entry":[{},{},"the contents of the User 10B Word a"]},{"entry":[{},{},"bad 10b-encoded ordered set (with"]},{"entry":[{},{},"negative disparity) replaces the next"]},{"entry":[{},{},"ordered set. Otherwise, if just the"]},{"entry":[{},{},"xmit_bad_os_reg"]},{"entry":[{},{},"is set, only fill words are replaced"]},{"entry":["7-0","Tx Byte #2","Most significant byte of ordered set"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":[{},{}]},"These registers contain a user configurable 10b encoded word. When the conditions of the xmit_bad10b_once or xmit_bad10b_imm bits of the Port User Ordered Set Transmit Register are met, this encoded word is transmitted from the ASIC. Note: The ASIC does not perform any checks on the word and its use is intended strictly for testing purposes.",{"@attributes":{"id":"p-0530","num":"0830"},"tables":{"@attributes":{"id":"TABLE-US-00054","num":"00054"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Address 0x0E"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15:10","Reserved",{}]},{"entry":["9:0","OS Byte #3","Bits [9:0] of the ordered set"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Address 0x10"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["5:10","Reserved",{}]},{"entry":["9:0","OS Byte #2","Bits [19:10] of the ordered set"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Address 0x12"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15:10","Reserved",{}]},{"entry":["9:0","OS Byte #1","Bits [29:20] of the ordered set"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Address 0x14"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15:10","Reserved",{}]},{"entry":["10:0","OS Byte 0","Ordered set bits [39:32] Normally K28.5 character"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The upper 8 bits of this register contain the payload data for this port's P_INFO SEOC ordered set. During reset this value is loaded to a neutral-disparity value to indicate the port. The neutral-disparity values start with 0x00 for port , 0x01 for port  0x02 for port , 0x04 for port , etc.","6.2.7 Port Interrupt Mask Register #","This register is used to mask port interrupt status bits in port error status register #. If a bit in this register is set to one, then the corresponding bit in the port interrupt status register is enabled to generate an interrupt to the processor.","6.2.8 Port Interrupt Mask Register #","This register is used to mask port interrupt status bits in port error status register #. If a bit in this register is set to one, then the corresponding bit in the port interrupt status register is enabled to generate an interrupt to the processor.","6.2.9 No Comma Timer Register",{"@attributes":{"id":"p-0534","num":"0834"},"tables":{"@attributes":{"id":"TABLE-US-00055","num":"00055"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15-8","Reserved",{}]},{"entry":["\u20027-0","No Comma Timer","These bits are used to configure the"]},{"entry":[{},{},"amount of time to look for the absence of"]},{"entry":[{},{},"comma characters before bypassing a port."]},{"entry":[{},{},"This 8-bit register counts the time in increments"]},{"entry":[{},{},"of 100 us. The value \u2018n\u2019 written to this register"]},{"entry":[{},{},"results in an interval of between (n) and"]},{"entry":[{},{},"(n + 1) * 100 us. (Due to unsynchronized"]},{"entry":[{},{},"internal timers there may be a fraction of 1 lsb"]},{"entry":[{},{},"added to the count.) This register defaults to"]},{"entry":[{},{},"a value of 1, which indicates an interval of"]},{"entry":[{},{},"100 us. NOTE: A value of 0 in invalid."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},"The 24-bit value contained in address 0x1e and the bottom 8 bits of address 0x20, is compared to the count in the OS Error Count registers and if the count exceeds the threshold, an interrupt is generated to the CPU. A certain number of ordered set errors is expected to occur. The threshold value should be set to a value such that the interrupt is triggered very infrequently under normal operating conditions.","The value in the upper 8 bits of address 0x20 is compared to the count in the CRC Error Count register and if the count exceeds the threshold, an interrupt is generated to the CPU. This value resets to 0xFF.","6.2.11 Port Control Register #","The port control # register contains bits that are changed during normal operation.",{"@attributes":{"id":"p-0538","num":"0838"},"tables":{"@attributes":{"id":"TABLE-US-00056","num":"00056"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Port Control Register #2 Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["15-12","Xmt_os_cnt","Four bit field that modifies the"]},{"entry":[{},{},"xmt_os_once control to send 1-16"]},{"entry":[{},{},"ordered sets instead of just one. A value"]},{"entry":[{},{},"of 0x0 sends 1 ordered set, a value of"]},{"entry":[{},{},"0xf sends 16."]},{"entry":["11-10","rx_los_mode","Determines the source of the rx_los"]},{"entry":[{},{},"used by insertion logic"]},{"entry":[{},{},"\u2003\u20030 0 - Use SFP rx_los only"]},{"entry":[{},{},"\u2003\u20030 1 - Use serdes rx_los only"]},{"entry":[{},{},"\u2003\u20031 x - Logically OR SFP and serdes"]},{"entry":[{},{},"rx_los"]},{"entry":["9","request_seoc","When set to a \u20181\u2019, this bit forces the"]},{"entry":[{},{},"port to rerun the SEOC algorithm,"]},{"entry":[{},{},"causing the port to reinsert. NOTE: This"]},{"entry":[{},{},"bit is self-clearing."]},{"entry":["8","Port_filter_en","When this bit is set, the frame header"]},{"entry":[{},{},"filter for this port is enabled. The filter"]},{"entry":[{},{},"type controls must be set in the router"]},{"entry":[{},{},"memory map to select the enabled"]},{"entry":[{},{},"filter(s)."]},{"entry":["7","tx_fault_polarity","Invert polarity of tx_fault signal."]},{"entry":[{},{},"\u2003\u20030 - tx_fault is active high"]},{"entry":[{},{},"\u2003\u20031 - tx_fault is active low"]},{"entry":["6","Rx_los_polarity","Invert polarity of rx_los_tx signal."]},{"entry":[{},{},"\u2003\u20030 - rx_los_tx is active high"]},{"entry":[{},{},"\u2003\u20031 - rx_los_tx is active low"]},{"entry":["5","Parity_err_on_match","When this bit is set, a USER match"]},{"entry":[{},{},"generates bad parity on the"]},{"entry":[{},{},"internal data bus."]},{"entry":["4","Rcv_lip","Stealth LIP Isolation control. If set to"]},{"entry":[{},{},"\u20181\u2019 this port is LIP'ed and involved"]},{"entry":[{},{},"in a loop initialization cycle any time"]},{"entry":[{},{},"a port, within the same LIP zone, with"]},{"entry":[{},{},"fwd_lip set, receives a LIP"]},{"entry":[{},{},"from an external device."]},{"entry":["3","Fwd_lip","Stealth LIP Isolation control. If set to"]},{"entry":[{},{},"\u20181\u2019 this port forwards a LIP to the"]},{"entry":[{},{},"system to LIP all ports, within the same"]},{"entry":[{},{},"LIP zone, with rcv_lip set, whenever it"]},{"entry":[{},{},"receives a LIP from an external device."]},{"entry":["2","Manual_LIP","When this bit is set and LIP isolation is"]},{"entry":[{},{},"enabled for the port, local loop"]},{"entry":[{},{},"initialization is blocked and not"]},{"entry":[{},{},"allowed to proceed on a"]},{"entry":[{},{},"LIP-isolated loop segment."]},{"entry":["1","Pass_LIP","When this bit is set and LIP isolation is"]},{"entry":[{},{},"enabled for the port, local loop"]},{"entry":[{},{},"initialization is allowed to proceed"]},{"entry":[{},{},"on a LIP-isolated loop segment."]},{"entry":["0","Port_isolate_en","When this bit is set and the"]},{"entry":[{},{},"global_isolate_en bit is"]},{"entry":[{},{},"set in the router, LIP isolation is"]},{"entry":[{},{},"enabled for the port."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The stall counter register contains the time a port has had a connection active and has not seen a SOF or EOF ordered set pass by. The counter resets by detecting a SOF or EOF ordered set or by a processor write of 0x0000. The counter has a terminal count at the stall threshold, set in the router memory map space. Upon reaching the stall threshold, an interrupt is generated. The resolution of the counter is 10 \u25a1s.","6.2.13 Port Error\/Change Status Register #","This register reports errors or changes in the configuration of the port. Any change in the state of this register causes an interrupt to the Router Status Register #. This allows a management entity to simply poll the Router Status register for any changes and then read the appropriate port register to determine the change. This register is cleared on read.",{"@attributes":{"id":"p-0541","num":"0841"},"tables":{"@attributes":{"id":"TABLE-US-00057","num":"00057"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"308pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Port Error Status Register #1 Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","int2_active","This bit is set when an interrupt is triggered by port error status"]},{"entry":[{},{},"register #2."]},{"entry":["14","user_match_int","This bit is set if the user match bit in the port detector register is"]},{"entry":[{},{},"asserted. This bit is only cleared by a microprocessor access"]},{"entry":[{},{},"directly to this register."]},{"entry":["13","snum_change","Serial number exchange completed. This interrupt is set after the"]},{"entry":[{},{},"last sequence in the exchange is completed."]},{"entry":["12","crc_err_th","CRC Error Threshold count has been exceeded."]},{"entry":["11","os_err_th","Ordered Set Error Threshold count has been exceeded."]},{"entry":["10","gbic_insert","A GBIC\/SFP has been inserted since the last read."]},{"entry":["9","gbic_bypass","A GBIC\/SFP has been removed since the last read."]},{"entry":["8","loop_up","Port State in Port Status Register #1 has gone from state \u201801010\u2019"]},{"entry":[{},{},"to state \u201801100\u2019 or higher."]},{"entry":["7","loop_down","Port state in Port Status Register #1 has gone from state \u201801100\u2019"]},{"entry":[{},{},"or higher to state \u201801000\u2019 or lower."]},{"entry":["6","port_insert","Port has changed from being bypassed to being inserted."]},{"entry":["5","port_bypass","Port has changed from being inserted to being bypassed."]},{"entry":["4","insert_lipf8_fault","Indicates that the Port kicked out of the Validate Data state"]},{"entry":[{},{},"because LIP(F8) was received after having xmt'ed LIP(F7) to"]},{"entry":[{},{},"the attached node for more than 15 ms."]},{"entry":["3","insert_timeout","Indicates that LIP(F7, F7) was never received by the port during the 112 ms"]},{"entry":[{},{},"wait in Validate Data."]},{"entry":["2","insertion_rdy","When set, indicates that a port is ready to be inserted and requires"]},{"entry":[{},{},"manual intervention by the management card. If the en_ins_rdy policy"]},{"entry":[{},{},"bit in the Port Configuration Register is clear, then this bit is only set if"]},{"entry":[{},{},"a management card is present and the insertion process exchanged"]},{"entry":[{},{},"serial numbers with another Vixel Loop Switch. If the policy bit is set,"]},{"entry":[{},{},"any port insertion attempt generates this bit."]},{"entry":["1","crc_error","CRC Error detected in a frame. LSB of S_ID of last frame w\/error is"]},{"entry":[{},{},"contained in CRC Error ALPA Register."]},{"entry":["0","connect_overflow","An error occurred during a connection attempt where a frame arrived"]},{"entry":[{},{},"before the connection was made. This can happen if a node is using"]},{"entry":[{},{},"non-zero BB_credit or if an OPN broadcast was used. Only valid in"]},{"entry":[{},{},"switching mode."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{},"b":"2"},"This register reports errors or changes in the configuration of the port. Any change in the state of this register causes an interrupt to the Router Status Register #. This allows a management entity to simply poll the Router Status register for any changes and then read the appropriate port register to determine the change. This register is cleared on read.",{"@attributes":{"id":"p-0543","num":"0843"},"tables":{"@attributes":{"id":"TABLE-US-00058","num":"00058"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Port Error Status Register #2 Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","Reserved",{}]},{"entry":["11","Parity_error","A parity error was detected at prx_sw mux"]},{"entry":["10","Parity_error","A parity error was detected at ptx_sw mux."]},{"entry":["9","Parity_error","A parity error was detected at transmit encoder"]},{"entry":["8","Lost_node","An OPN was looped back on a port that the ALPA map"]},{"entry":[{},{},"indicates the device should exist on. This indicates either the"]},{"entry":[{},{},"OPN was misrouted or the device has gone off-line. The source"]},{"entry":[{},{},"and destination ALPAs are stored in a register."]},{"entry":["7","Unknown_OPN","An OPN was detected that does not exist in the lookup table and"]},{"entry":[{},{},"the source and destination ALPAs stored. NOTE: Hardware has"]},{"entry":[{},{},"no mechanism to determine if this unknown OPN is the result of"]},{"entry":[{},{},"an initiator \u201cwalking\u201d the loop or a true error. Software has to"]},{"entry":[{},{},"make the determination."]},{"entry":["6","OPN_D_ID_mismatch","A mismatch was detected between the destination ALPA in the"]},{"entry":[{},{},"last OPN received and the destination ID in the FC header of a"]},{"entry":[{},{},"frame."]},{"entry":["5","Alpa_valid","This bit is set when a frame is received by the ASIC. The bit"]},{"entry":[{},{},"being set indicates that a valid src\/dest ALPA is available in the"]},{"entry":[{},{},"Src\/Dest ALPA Register."]},{"entry":["4","Stall_detect","This bit is set if the stall counter exceeds the stall threshold."]},{"entry":["3","Reserved"]},{"entry":["2","Rx_invalid_opn","This bit is set when an OPN has been sent out on a destination"]},{"entry":[{},{},"port in switching mode and a different OPN is returned before"]},{"entry":[{},{},"the loop is closed. When this bit is set, the ALPA in the last"]},{"entry":[{},{},"ARBx received on that port prior to the OPN is captured in the"]},{"entry":[{},{},"Invalid OPN ALPA capture register."]},{"entry":["1","Reserved","Always \u20180\u2019"]},{"entry":["0","isolated_LIP","This bit is set whenever a LIP is received and isolated on a port."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{},"b":"1"},"This register provides a real time status of the port at the time the read occurs.",{"@attributes":{"id":"p-0545","num":"0845"},"tables":{"@attributes":{"id":"TABLE-US-00059","num":"00059"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Port Status Register #1 Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["15","src_conn","port connected as a source (switching mode)"]},{"entry":["14","dest_conn","port connected as a destination (switching mode)"]},{"entry":["13","Lim_port","This bit is set to indicate that the port is the LIM on its loop."]},{"entry":["12-8","port state","Valid in hub emulation and switching modes:"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"\u20180x0\u2019 port is switched out."]},{"entry":[{},{},"\u20180x1\u2019 port is performing insertion algorithm."]},{"entry":[{},{},"\u20180x8\u2019 loop in initializing state (LIP seen)."]},{"entry":[{},{},"\u20180x9\u2019 loop in open init state (SOF seen)."]},{"entry":[{},{},"\u20180xa\u2019 loop in open init, post LISM state (ARBf0 seen)"]},{"entry":[{},{},"\u20180xc\u2019 loop init complete (CLS seen)."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},{},"Valid only in switching mode:"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"196pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"\u2018{1\u2032b1,rx_state[3:0]}\u2019, where rx_state is one of the following:"]},{"entry":[{},{},"0x0: RX_INACTIVE \u2014power up state, until port is inserted"]},{"entry":[{},{},"0x1: RX_ACTIVE \u2014port active and idle"]},{"entry":[{},{},"0x2: ARB_CREQ \u2014ARBx received and request ARB connection."]},{"entry":[{},{},"Also used for a destination port when that port is a cascade port"]},{"entry":[{},{},"and has not yet won cascade arbitration."]},{"entry":[{},{},"0x3: ARB_CONN \u2014ARB connection made and waiting for OPN."]},{"entry":[{},{},"Also used for a destination port when that port is a cascade port"]},{"entry":[{},{},"and has not yet won cascade arbitration."]},{"entry":[{},{},"0x4: OPN_CREQ1 \u2014OPN received and connection requested."]},{"entry":[{},{},"0x5: OPN_CREQ2 \u2014OPN connection still requested and"]},{"entry":[{},{},"destination lookup has been performed. Waiting for source and"]},{"entry":[{},{},"destination ports to be properly connected, or waiting to be be"]},{"entry":[{},{},"disconnected if a higher priority port needs access."]},{"entry":[{},{},"0x6: SRC_OPEN \u2014Send the OPN or send CLS back to self if"]},{"entry":[{},{},"request is blocked and CLS behavior is selected."]},{"entry":[{},{},"0x7: SLV_CONN \u2014Port connected as a slave (destination)."]},{"entry":[{},{},"0x8: SRC_CONN \u2014Port connected as a source."]},{"entry":[{},{},"0x9: WAIT_SCLS \u2014CLS received and waiting for port to send it"]},{"entry":[{},{},"back out."]},{"entry":[{},{},"0xA: WAIT_RCLS \u2014CLS sent out and waiting for port to receive"]},{"entry":[{},{},"it."]},{"entry":[{},{},"0xB: WAIT_S \u2014State used when connections are removed. Wait"]},{"entry":[{},{},"for port to be disconnected."]},{"entry":[{},{},"0xC: WAIT_FCLS \u2014If OPN request was made and another"]},{"entry":[{},{},"higher priority port is requesting access to use it as a destination,"]},{"entry":[{},{},"a CLS is sent out and the port waits for it to return until becoming"]},{"entry":[{},{},"connected as a slave."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["7:6","Reserved","Always returns 00"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["5:0","Ctl_state","INACTIVE","6\u2032h00","WAIT_PINFO"]},{"entry":[{},{},"6\u2032h14"]},{"entry":[{},{},"DET_VIX","6\u2032h01","DELAY_PINFO"]},{"entry":[{},{},"6\u2032h15"]},{"entry":[{},{},"WAIT_VIX","6\u2032h02","LIP_USER1"]},{"entry":[{},{},"6\u2032h16"]},{"entry":[{},{},"DELAY_VIX","6\u2032h03","WAIT_USER 1"]},{"entry":[{},{},"6\u2032h17"]},{"entry":[{},{},"LIP_SN1","6\u2032h04","DELAY_USER1"]},{"entry":[{},{},"6\u2032h18"]},{"entry":[{},{},"WAIT_SN1","6\u2032h05","LIP_USER2"]},{"entry":[{},{},"6\u2032h19"]},{"entry":[{},{},"DELAY_SN1","6\u2032h06","WAIT_USER2"]},{"entry":[{},{},"6\u2032h1A"]},{"entry":[{},{},"LIP_SN2","6\u2032h07","DELAY_USER2"]},{"entry":[{},{},"6\u2032h1B"]},{"entry":[{},{},"WAIT_SN2","6\u2032h08","WAIT_UC"]},{"entry":[{},{},"6\u2032h1C"]},{"entry":[{},{},"DELAY_SN2","6\u2032h09","VAL_DATA"]},{"entry":[{},{},"6\u2032h1D"]},{"entry":[{},{},"LIP_SN3","6\u2032h0A","SCRB_LOOP"]},{"entry":[{},{},"6\u2032h1E"]},{"entry":[{},{},"WAIT_SN3","6\u2032h0B","PASV_VAL"]},{"entry":[{},{},"6\u2032h1F"]},{"entry":[{},{},"DELAY_SN3","6\u2032h0C","ACTIVE"]},{"entry":[{},{},"6\u2032h20"]},{"entry":[{},{},"LIP_SN4","6\u2032h0D","INIT"]},{"entry":[{},{},"6\u2032h21"]},{"entry":[{},{},"WAIT_SN4","6\u2032h0E","OPN_INIT1"]},{"entry":[{},{},"6\u2032h22"]},{"entry":[{},{},"DELAY_SN4","6\u2032h0F","OPN_INIT2"]},{"entry":[{},{},"6\u2032h23"]},{"entry":[{},{},"LIP_SN5","6\u2032h10","LINK_UP"]},{"entry":[{},{},"6\u2032h25"]},{"entry":[{},{},"WAIT_SN5","6\u2032h11","WAIT_16"]},{"entry":[{},{},"6\u2032h26"]},{"entry":[{},{},"DELAY_SN5","6\u2032h12","BLINK_TX"]},{"entry":[{},{},"6\u2032h27"]},{"entry":[{},{},"LIP_PINFO","6\u2032h13","LINK_OR_NOT_2_BLINK"]},{"entry":[{},{},"6\u2032h28"]},{"entry":[{},{},{},{},"WAIT_UC_NOLIP"]},{"entry":[{},{},"6\u2032h29"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},{},","]},{"entry":[{},{},{},{},","]},{"entry":[{},{},{},{},","]},{"entry":[{},{},{},{},","]},{"entry":[{},{},{},{},","]},{"entry":[{},{},{},{},","]},{"entry":[{},{},{},{},","]},{"entry":[{},{},{},{},","]},{"entry":[{},{},{},{},";"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}},"br":{},"b":"2"},{"@attributes":{"id":"p-0546","num":"0846"},"tables":{"@attributes":{"id":"TABLE-US-00060","num":"00060"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Port Status Register #2 Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","serial_id_rdy","GBIC\/SFP Serial ID data ready. New data is"]},{"entry":[{},{},"present in the GBIC\/SFP serial ID data"]},{"entry":[{},{},"register. This bit is cleared during"]},{"entry":[{},{},"a read operation."]},{"entry":["14","port_activity","Latched Port Activity. This bit indicates that"]},{"entry":[{},{},"the port has been involved in a connection"]},{"entry":[{},{},"since it was read last. This bit"]},{"entry":[{},{},"is cleared during a read operation."]},{"entry":["13","port_bypassed","Real time Port bypassed state. Port has\/may"]},{"entry":[{},{},"have a GBIC\/SFP, but is not inserted into the"]},{"entry":[{},{},"loop or is not part of the connection matrix."]},{"entry":["12","gbic_ok","Real time GBIC\/SFP present and"]},{"entry":[{},{},"tx_fault is deasserted."]},{"entry":["11","reserved","Always returns 0"]},{"entry":["10-8","mod_def","Real time port GBIC\/SFP type from GBIC\/SFP"]},{"entry":[{},{},"\u2003\u2003Bits 10-8 \u2003\u2003\u2003Description"]},{"entry":[{},{},"\u2003\u2003\u20031 1 1 \u2002\u2003\u2003\u2003No GBIC or SFP present"]},{"entry":[{},{},"\u2003\u2003\u20030 1 1 \u2002\u2003\u2003\u2003Serial ID Module"]},{"entry":[{},{},"All other values indicate module present,"]},{"entry":[{},{},"non-serial ID"]},{"entry":["7","Reserved","Always returns 0"]},{"entry":["6","tx_fault_Itch","Latched Transmitter Fault from GBIC\/SFP."]},{"entry":[{},{},"This bit is cleared during a read operation."]},{"entry":["5","rx_los_Itch","Latched Loss of Signal from GBIC\/SFP."]},{"entry":[{},{},"This bit is cleared during a read operation."]},{"entry":["4","loss_sync_Itch","Latched Loss of Sync status. This bit is "]},{"entry":[{},{},"cleared during a read operation."]},{"entry":["3","Reserved","Always returns 0"]},{"entry":["2","tx_fault","Real time Transmitter Fault from GBIC\/SFP"]},{"entry":["1","rx_los","Real time Loss of Signal from GBIC\/SFP."]},{"entry":["0","loss_sync","Real time Loss of Sync > RTTOV status"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{},"b":"1"},"This register contains the detector bits that indicate that particular conditions have occurred on the port. This register is cleared on read, but can also be cleared by setting the Clear Detector Register bit in Port Control Register. A third way to clear this register on all ports simultaneously is by setting the Clear Port Detector bit in the Router Control register. Note that this register has bits set after a reset due to the passing of the data pattern during selftest. The selftest pattern is designed to set all the bits except User Match (0xFFFE).",{"@attributes":{"id":"p-0548","num":"0848"},"tables":{"@attributes":{"id":"TABLE-US-00061","num":"00061"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Port Detector Register #1 Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","pt_pt_primitive_detect","A Point-to-Point Primitive Sequence"]},{"entry":[{},{},"was detected. This includes OLS, NOS,"]},{"entry":[{},{},"LR and LRR. (3 ordered sets in a row)."]},{"entry":[{},{},"Note that these are illegal on"]},{"entry":[{},{},"a loop."]},{"entry":["14","crcerr detect","CRC Error detected in a frame. LSB of"]},{"entry":[{},{},"S_ID of last frame w\/ error is"]},{"entry":[{},{},"contained in CRC Error ALPA Register."]},{"entry":["13","Invalid_tx_word_detect","Transmission word received with"]},{"entry":[{},{},"encoding error"]},{"entry":["12","Unk_os_detect","Any ordered set that does not already"]},{"entry":[{},{},"set any of the Detector Reg #1"]},{"entry":[{},{},"bits 1-11, 15, Reg #2 bits 0-4."]},{"entry":["11","lip_detect","Any LIP primitive sequence detected"]},{"entry":[{},{},"(3 ordered sets in a row)."]},{"entry":["10","lipf7_detect","LIP f7 primitive sequence detected"]},{"entry":[{},{},"(3 ordered sets in a row)."]},{"entry":["9","lipf8_detect","LIP f8 primitive sequence detected"]},{"entry":[{},{},"(3 ordered sets in a row)."]},{"entry":["8","opn_detect","Any OPN ordered set detected."]},{"entry":["7","cls_detect","A CLS ordered set detected."]},{"entry":["6","rrdy_detect","A RRDY ordered set detected."]},{"entry":["5","arb_detect","Any ARB ordered set detected."]},{"entry":["4","arbff_detect","ARBff ordered set detected."]},{"entry":["3","idle_detect","IDLE ordered set detected."]},{"entry":["2","sof_detect","Any Start of Frame ordered set"]},{"entry":[{},{},"detected."]},{"entry":["1","eof_detect","Any End of Frame ordered set detected."]},{"entry":["0","user_match_detect","User defined ordered set detected."]},{"entry":[{},{},"Note that mask match bits from"]},{"entry":[{},{},"control register are used in match."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{},"b":"2"},"This register contains the detector bits that indicate that particular conditions have occurred on the port. This register is cleared on read, but can also be cleared by setting the Clear Detector Register bit in Port Control Register. A third way to clear this register on all ports simultaneously is by setting the Clear Port Detector bit in the Router Control register.",{"@attributes":{"id":"p-0550","num":"0850"},"tables":{"@attributes":{"id":"TABLE-US-00062","num":"00062"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Port Detector Register #2 Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["15","Reserved",{}]},{"entry":["14","Reserved"]},{"entry":["13","Reserved"]},{"entry":["12","Reserved"]},{"entry":["11","Reserved"]},{"entry":["10","Reserved"]},{"entry":["9","Reserved"]},{"entry":["8","Reserved"]},{"entry":["7","Reserved"]},{"entry":["6","LIPff_detected","LIPff ordered set detected"]},{"entry":["5","device_detected","Ordered set other than"]},{"entry":[{},{},"blocking ARB detected after OPN"]},{"entry":["4","Half_dup_opn_detect","Half-duplex OPN ordered set detected"]},{"entry":["3","mrk_detect","MRK ordered set detected"]},{"entry":["2","brdcst_lpe_detect","LPE ordered set detected"]},{"entry":["1","brdcst_lpb_detect","LPB ordered set detected"]},{"entry":["0","brdcst_opn_detect","Broadcast OPN ordered set detected"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"This 24 bit counter maintains a running count of the number of transmission words that are received on this port with an encoding error. The counter increments only once for each bad word, even if multiple errors occur within a single word. The count sticks at maximum count and is cleared when the lower OS Error Count Register is read. This counter requires the reading of two registers. The least significant register must be read first and then the most significant register must be read last to guarantee an accurate reading. When the least significant register is read, the most significant register is put into a holding register before clearing both registers.","6.2.20 Current Destination Register","This 8 bit value shows the port that is currently connected to this port. Due to the high speed of connections and the low speed of the IC interface, this register is intended mainly to assist in clearing stalled connections. These 8 bits are located in bits [:] of the 16 bit register. The lower half is for Port OS error Count described above.","6.2.21 Port Match Count Register","The lower 4 bits of Upper Match Count Register and the Lower Match Count Register make up a 20 bit counter that is used to count the number of User Match ordered sets seen on the link being monitored. This function is enabled while the user match function is enabled. This counter requires the reading of two registers. The least significant register must be read first and then the most significant register must be read last to guarantee an accurate reading. This register is only cleared when the User Match function is enabled and not when it is read. This count is reset when the user match enable bit transitions from a zero to a one.","6.2.22 Port Utilization % Register","This register contains an 8-bit value that can be used to reflect two different measurements. By default, this register represents the percentage of the transmission words received that were within a frame relative to the total traffic. If the util_conn_en bit is set in the port control register and the Loop Switch is operating in switching (segmenting) mode this register represents the percentage of time connections were made with this port while in switching mode. This value is updated every \u02dc240 ms. The bit value is given in 0.5% increments.","6.2.23 Port Capture Ordered Set Register","This set of registers is used to store the ordered set present when the User Match bit was set. This register is only re-enabled for capture by the User Match Enable control bit being cleared and then set. This function can be used as a simple triggered analyzer.","Register E is the 2nd byte of the ordered set following a K28.5. Register C contains the 3rd and 4th byte. Note that the 1st byte of the ordered set is hardwired to K28.5. This means that K28.5s must be present on the loop in order to do a capture.","6.2.24 Invalid OPN\/Broadcast (ARBx) ALPA Capture Register",{"@attributes":{"id":"p-0557","num":"0857"},"tables":{"@attributes":{"id":"TABLE-US-00063","num":"00063"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Invalid OPN\/Broadcast Register Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["15-8","Crc_err_count","This register maintains a running count of the"]},{"entry":[{},{},"number of CRC errors that are detected in frames"]},{"entry":[{},{},"passing through the port. The count sticks at its"]},{"entry":[{},{},"maximum count and is cleared when the register"]},{"entry":[{},{},"is read. Note that after reset this register has"]},{"entry":[{},{},"a count of 2 reset due to the passing of the"]},{"entry":[{},{},"data pattern during selftest."]},{"entry":["\u20027-0","rx_arb_alpa","When the rx_invalid_opn interrupt status bit"]},{"entry":[{},{},"or a broadcast OPN, LPB or LPE is set, the"]},{"entry":[{},{},"ALPA value from the previous ARBx received"]},{"entry":[{},{},"by this port is captured into this register."]},{"entry":[{},{},"This value is not overwritten until the"]},{"entry":[{},{},"corresponding interrupt is cleared and this"]},{"entry":[{},{},"register is read. This clearing mechanism is"]},{"entry":[{},{},"required since all interrupts are automatically"]},{"entry":[{},{},"cleared on read, otherwise the interrupt status"]},{"entry":[{},{},"bit alone could be used to disable\/enable "]},{"entry":[{},{},"this register to be overwritten by the port logic."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0558","num":"0858"},"tables":{"@attributes":{"id":"TABLE-US-00064","num":"00064"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Port Insertion\/Loop Up Count Register Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["15-8","Port Insertion Count","Count of the number of times this port has"]},{"entry":[{},{},"been inserted into the loop. The count "]},{"entry":[{},{},"sticks at maximum count and is"]},{"entry":[{},{},"cleared on read."]},{"entry":["\u20027-0","Loop Up Count","Count of the number of times the loop"]},{"entry":[{},{},"connected to this port has come up. The"]},{"entry":[{},{},"count sticks at maximum count and is"]},{"entry":[{},{},"cleared on read."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"This register contains the ALPA of the last frame that had a CRC error. The ALPA is derived from the SID of the frame. Note that there is a probability that the SID was corrupted, so this ALPA may not be accurate. The MSB indicates whether the ALPA field has been updated or not. The valid bit is cleared when the register is read. Note that after reset this register indicates that a CRC error has occurred and has captured the ALPA. This is a result of the data pattern sent around the internal loop during selftest. The value in this register will be 0x80D5.","6.2.27 RX Frame Count Register","The RX Frame Count Register is a 16 bit counter that is used to count the number of frames seen on the RX link being monitored. This count is reset on read.","6.2.28 Port Connections Attempted Register","Count of the number of times this port has attempted to make a connection due to ARB connect requests. The count sticks at maximum count and is cleared on read. This value is valid in switching mode only.","6.2.29 Port Connections Held Off Register","Count of the number of times this port has attempted to make a connection and was held off by a busy port. The count sticks at maximum count and is cleared on read. This value is valid in switching mode only.","6.2.30 Port Clock Delta Counter","This register contains the value of the transmit\/receive clock delta counter.","6.2.31 Src\/Dest ALPA Register","When ALPA Valid bit is set in Port Error\/Change Status Register #, this register contains the source and destination ALPA of the last frame received into this port. This register is cleared after each read access","6.2.32 Port ALPA Bitmap Registers","These registers contain a bitmap of the ALPAs claimed on this port during the last loop initialization cycle.","6.2.33 Remote SEOC P INFO Register","This register contains the payload data from the P_INFO SEOC ordered set received from a remote SEOC compliant device when is detected. If no device or a non-SEOC compliant device is detected, this register is set to all zeros.","6.2.34 Remote SEOC USER Register","This register contains the payload data from the USER and USER SEOC ordered sets received from a remote SEOC compliant device when is detected. If no device or a non-SEOC compliant device is detected, this register is set to all zeros.","6.2.35 GBIC\/SFP Read Address Register","This register contains the address of the next location in the GBIC's (or SFP's) Serial ID EEPROM to be read by the Loop Switch. This register is reset to zero on reset and is incremented each time a read occurs to the GBIC\/SFP. The microprocessor can write a new value in this register to change where the Loop Switch reads the next value. This register should only be changed when the Serial ID RDY bit is set in the Port Status Register #. Note: The GBIC\/SFP address is an 11-bit value. The top 5 bits of the register are always 0.","6.2.36 Port Open Lockup Max Count Register","Bits [:] of this register sets the timeout value of the Port OPN Lockup watchdog timer. This 8-bit field is in the lower half of the register and has a resolution of 40 microseconds.","Bits [:] of this register contain the stop_traffic_cnt_max value. This 8-bit field defines the delay the \u201crxstate\u201d state machine delays before determining that traffic is truly stopped if the state machine is steady in state ARB_CREQ or ARB_CONN. The resolution of this counter is 10 microseconds.","6.2.37 GBIC\/SFP Serial ID Data Register","This register contains the data read from the GBIC's (or SFP's) Serial ID EEPROM. After reset, the Loop Switch reads the first 2 bytes from the GBIC\/SFP (assuming it's a serial ID GBIC or SFP) and store them here. Loop Switch also sets the Serial ID Rdy bit in the Port Status Register # to indicate the data is ready. The microprocessor can then read this data. When that happens, the Loop Switch automatically goes out and reads the next 2 bytes from the GBIC\/SFP. The Loop Switch reads the data from the EEPROM one byte at a time and the first byte read is placed in the LSB and the second byte in the MSB of this register.","6.2.38 SRC\/DEST ALPA on Mismatch OPN Register","This register contains the source, bits [:], and destination, bits [:], ALPAs associated with the last detection of a frame whose destination ID doesn't match the destination ALPA in the previously received OPN. Only valid in switching mode and is cleared in hub emulation mode.","6.2.39 Destination ID on OPN Mismatch Register","This register contains destination Id from the FC header of a frame, bits [:], whose destination ID doesn't match the destination ALPA in the previously received OPN. This register is only used in switching mode and is cleared in hub emulation mode.","6.2.40 SRC\/DEST ALPA from Unknown OPN\/Lost Node Register","This register contains the source, bits [:], and destination, bits [:], ALPAs associated with the last detection of either an Unknown OPN or Lost Node error. This register is only used in switching mode and is cleared in hub emulation mode.","6.2.41 Extra Control Register",{"@attributes":{"id":"p-0575","num":"0875"},"tables":{"@attributes":{"id":"TABLE-US-00065","num":"00065"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Port Insertion\/Loop Up Count Register Definition"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Bits","Field Name","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["15-3","Reserved",{}]},{"entry":["2","dis_new_cscd_arb","If not set, the logic for rx_new_cscd_arb"]},{"entry":[{},{},"will function as normal for detecting hidden"]},{"entry":[{},{},"opens when there are multiple devices on"]},{"entry":[{},{},"ports. If set, then this logic will be disabled"]},{"entry":[{},{},"and having HBA with devices on a same"]},{"entry":[{},{},"port will fail."]},{"entry":["1","dis_block_arb","If not set, after an ARB wins arbitration,"]},{"entry":[{},{},"ARBs with that ALPA will be blocked for"]},{"entry":[{},{},"the internal scrubber timeout. If set, that"]},{"entry":[{},{},"ALPA will not be blocked."]},{"entry":["0","dis_block_init_arb","If not set, the scrubber logic scrubs the ARB"]},{"entry":[{},{},"detected immediately preceeding the OPN if"]},{"entry":[{},{},"an ARBf0 is detected for the scrub timeout."]},{"entry":[{},{},"If set, disables the ARBf0 detection"]},{"entry":[{},{},"of the ARBs and does normal scrubbing."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"The lower 8 bits of this register control a filter that determines the destination ALPA of the SCSI FCP frames that are used for collecting read and write statistics. A value of 0xff enables all destination ALPA's for aggregate port statistics. A specific destination ALPA will cause the ASIC to track statistics for only that destination ALPA. The upper 8 bits determine the source ALPA of the FCP frames being tracked. A value of 0xff in the upper 8 bits enables tracking of all source ALPA's.","6.2.43 SCSI Read IO Counter","This register contains a clear on read counter that tracks the number of read I\/O's of frames that match the source\/destination ALPA criteria set in the SCSI Statistics ALPA register.","6.2.44 SCSI Write IO Counter","This register contains a clear on read counter that tracks the number of write I\/O's of frames that match the source\/destination ALPA criteria set in the SCSI Statistics ALPA register.","6.2.45 SCSI Read Byte Counter","These registers contain a clear on read counter that tracks the number of read bytes from frames that match the source\/destination ALPA criteria set in the SCSI Statistics ALPA register. NOTE: To ensure accurate reading of the counter, bits  to  of the counter are loaded into a temporary holding register on a read of bits  to  (address 0x84). The temporary holding register is shared with the write byte counter so care must be taken when accessing the upper 2 words of both registers.","6.2.46 SCSI Write Byte Counter","These registers contain a clear on read counter that tracks the number of write bytes from frames that match the source\/destination ALPA criteria set in the SCSI Statistics ALPA register. NOTE: To ensure accurate reading of the counter, bits  to  of the counter are loaded into a temporary holding register on a read of bits  to  (address 0x8a). The temporary holding register is shared with the read byte counter so care must be taken when accessing the upper 2 words of both registers.","6.3 CPU Port Registers",{"@attributes":{"id":"p-0581","num":"0881"},"tables":{"@attributes":{"id":"TABLE-US-00066","num":"00066"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"308pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Register","RW","Bits","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"11"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"10","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"11","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Interrupt","RW","31:24",{},{},{},{},{},"Heartbeat","Timer 1","Timer 0"]},{"entry":[{},"RW","23:16",{},{},{},{},{},"Rcv","Xmt","Rcv"]},{"entry":[{},{},{},{},{},{},{},{},"Frame","Frame","Frame"]},{"entry":[{},{},{},{},{},{},{},{},"DMA'ed","Sent","Received"]},{"entry":[{},"RW","15:8\u2002","Xmit","Rcv",{},"Xmt","Rcv","Rcv","Rcv Tag","Rcv"]},{"entry":[{},{},{},"Word","Word",{},"Delimiter","DMA","Delimiter","Error","CRC"]},{"entry":[{},{},{},"CNTR","CNTR",{},"Error","Service","Error","CNTR","Error"]},{"entry":[{},{},{},"Wrap","Wrap",{},"CNTR","CNTR","CNTR","Wrap","CNTR"]},{"entry":[{},{},{},{},{},{},"Wrap","Wrap","Wrap",{},"Wrap"]},{"entry":[{},"RW","7:0","Rcv",{},"Xmt","Rcv","Xmt","Rcv","Rcv Tag","Rcv"]},{"entry":[{},{},{},"DMA",{},"FIFO","FIFO","Missing","Missing","Error","CRC"]},{"entry":[{},{},{},"Service",{},"Overrun","Overrun","Delimiter","Delimiter",{},"Error"]},{"entry":[{},{},{},"Timer"]},{"entry":[{},{},{},"Expired"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"308pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Interrupt mask","RW","31:0\u2002","(See Interrupt register)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"11"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"10","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"11","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Control","RW","31:24","Xmt","Rcv","Xmt","Rcv","Rcv","Tag Error","CRC","Send"]},{"entry":[{},{},{},"Frame","Frame","Delim","DMA","Delim err","cnt","Error cnt","frame"]},{"entry":[{},{},{},"cnt","cnt","error","service","cnt"]},{"entry":[{},{},{},{},{},"cnt","cnt"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"9"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"105pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RW","23:16","10us","MSTB","Rx write tag [1:0]",{},{},"Tx write tag"]},{"entry":[{},{},{},"Reset","Reset",{},{},{},"[1:0]"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"11"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"10","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"11","colwidth":"63pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RW","15:8\u2002","ARM","Global",{},"Router","Discard","Xmt","Rcv","Xmt Tag Generation"]},{"entry":[{},{},{},"reset","reset",{},"Request","Frame on","DMA","DMA","Enable"]},{"entry":[{},{},{},{},{},{},"Enable","Error","Request","Request"]},{"entry":[{},{},{},{},{},{},{},"Enable","Enable","Enable"]},{"entry":[{},"RW","7:0","Rcv Tag","Reset","Big","Rcv","Xmt","Rcv CRC","Xmt","Rcv"]},{"entry":[{},{},{},"Checking",{},"endian","DMA","CRC","Checking","Enable","Enable"]},{"entry":[{},{},{},"Enable",{},{},"Service","Generation","Enable"]},{"entry":[{},{},{},{},{},{},"Timer","Enable"]},{"entry":[{},{},{},{},{},{},"Enable"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"7"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"140pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Xmt FIFO Read\/Write Pointer","RW","31:0\u2002",{},"Xmt FIFO read pointer",{},"Xmt FIFO write pointer"]},{"entry":[{},{},{},{},"[8:0]","[8:0]"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"308pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["Xmt FIFO Data","RW","31:0\u2002","Xmt FIFO data word [31:0]"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"7"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"140pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Rcv DMA Service Timer","RW","31:0\u2002",{},"Rcv DMA Service Max",{},"Rcv DMA Service Timer"]},{"entry":[{},{},{},{},"[9:0]",{},"[9:0]"]},{"entry":["Rcv FIFO Read\/Write Pointer","RW","31:0\u2002",{},"Rcv FIFO read pointer",{},"Rcv FIFO write pointer"]},{"entry":[{},{},{},{},"[8:0]",{},"[8:0]"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"308pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Rcv FIFO Data","RW","31:0\u2002","Rcv FIFO data word [31:0]"]},{"entry":["Rcv CRC error","RW","31:0\u2002","Counter [31:0]"]},{"entry":["Rcv Tag error","RW","31:0\u2002","Counter [31:0]"]},{"entry":["Rcv Delimiter error","RW","31:0\u2002","Counter [31:0]"]},{"entry":["Rcv DMA service expired","RW","31:0\u2002","Counter [31:0]"]},{"entry":["Xmt Delimiter error","RW","31:0\u2002","Counter [31:0]"]},{"entry":["Rcv word count","RW","31:0\u2002","Counter [31:0]"]},{"entry":["Xmt word count","RW","31:0\u2002","Counter [31:0]"]},{"entry":["MS Timebase","RW","31:16","MS timebase reload [15:0]"]},{"entry":[{},"RW","15:0\u2002","MS timebase counter [15:0]"]},{"entry":["10us Timebase","RW","31:16","10us timebase reload [15:0]"]},{"entry":[{},"RW","15:0\u2002","10us timebase counter [15:0]"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}},"br":{}},{"@attributes":{"id":"p-0582","num":"0882"},"tables":{"@attributes":{"id":"TABLE-US-00067","num":"00067"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"259pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Register","RW","Bits","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"11"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"7","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"8","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"9","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"10","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"11","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Interrupt","RW","31:24",{},{},{},{},{},"Heartbeat","Timer 1","Timer 0"]},{"entry":[{},"RW","23:16",{},{},{},{},{},"Rcv","Xmt","Rcv"]},{"entry":[{},{},{},{},{},{},{},{},"Frame","Frame","Frame"]},{"entry":[{},{},{},{},{},{},{},{},"DMA'ed","Sent","Received"]},{"entry":[{},"RW","15:8","Xmit","Rcv",{},"Xmt","Rcv","Rcv","Rcv Tag","Rcv"]},{"entry":[{},{},{},"Word","Word",{},"Delimiter","DMA","Delimiter","Error","CRC"]},{"entry":[{},{},{},"CNTR","CNTR",{},"Error","Service","Error","CNTR","Error"]},{"entry":[{},{},{},"Wrap","Wrap",{},"CNTR","CNTR","CNTR","Wrap","CNTR"]},{"entry":[{},{},{},{},{},{},"Wrap","Wrap","Wrap",{},"Wrap"]},{"entry":[{},"RW","\u20027:0","Rcv",{},"Xmt","Rcv FIFO","Xmt","Rcv","Rcv Tag","Rcv"]},{"entry":[{},{},{},"DMA",{},"FIFO","Overrun","Missing","Missing","Error","CRC"]},{"entry":[{},{},{},"Service",{},"Overrun",{},"Delimiter","Delimiter",{},"Error"]},{"entry":[{},{},{},"Timer"]},{"entry":[{},{},{},"Expired"]},{"entry":{"@attributes":{"namest":"1","nameend":"11","align":"center","rowsep":"1"}}}]}}]}},"ul":{"@attributes":{"id":"ul0046","list-style":"none"},"li":["Rcv CRC error (bit ). This is set when a CRC error is detected on the Receive data frame (Data from switch core). This bit resets to zero.","Rcv Tag error (bit ). This is set when a Tag error is detected on the Receive data (Data from switch core). This bit resets to zero.","Rcv Missing Delimiter error (bit ). This is set when a missing SOF or EOF is detected on the Receive data frame (Data from switch core). This bit resets to zero.","Xmt Missing Delimiter error (bit ). This is set when a missing SOF or EOF is detected on the Transmit data frame (Data from AHB bus). This bit resets to zero.","Rcv FIFO overrun (bit ). This is set when there is an overrun in the Receive FIFO. This bit resets to zero.","Xmt FIFO overrun (bit ). This is set when there is an overrun in the Transmit FIFO. This bit resets to zero.","Rcv DMA service timer expired (bit ). This is set when the DMA Service timer expired on the Receive side. This bit resets to zero.","Rcv CRC error counter wrap (bit ). This is set when the Rcv CRC error counter wraps from its maximum count back to zero. This bit resets to zero.","Rcv Tag error counter wrap (bit ). This is set when the Rcv Tag error counter wraps from its maximum count back to zero. This bit resets to zero.","Rcv Delimiter error counter wrap (bit ). This is set when the Rcv Delimiter error counter wraps from its maximum count back to zero. This bit resets to zero.","Rcv DMA service expired counter wrap (bit ). This is set when the Rcv DMA service counter wraps from its maximum count back to zero. This bit resets to zero.","Xmt Delimiter error counter wrap (bit ). This is set when the Xmt Delimiter error counter wraps from its maximum count back to zero. This bit resets to zero.","Rcv word counter wrap (bit ). This is set when the Rcv word counter wraps from its maximum count back to zero. This bit resets to zero.","Xmt word counter wrap (bit ). This is set when the Xmt word counter wraps from its maximum count back to zero. This bit resets to zero.","Rcv Frame received (bit ). This is set when the Rcv FIFO received a complete frame from the switch core. This bit resets to zero.","Xmt Frame received (bit ). This is set when the Xmt FIFO transmitted a complete frame to the switch core. This bit resets to zero.","Rev Frame DMA'ed (bit ). This is set after the Rcv frame in FIFO has been DMA'ed by the processor.","Timer  (bit ). This is set when the Timer  counter reaches 0.","Timer  (bit ). This is set when the Timer  counter reaches 0.","Heartbeat (bit ). This is set when the Hearbeat counter reaches 0.\n\n6.3.2 Interrupt Mask Register\n"]}},{"@attributes":{"id":"p-0583","num":"0903"},"tables":{"@attributes":{"id":"TABLE-US-00068","num":"00068"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},"Register","RW","Bits","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Interrupt mask","RW","31:0","(See Interrupt register)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0047","list-style":"none"},"li":"Event interrupt mask (bits :). Set the mask bits corresponding to the interrupt bits that are to generate interrupt to the processor. Reset the mask bits corresponding to the interrupt bits to be ignored. This register resets to zero. Note: this register only selects the interrupt bits that contribute to the \u201cINT_\u201d output pin. It has no effect on the actual interrupt register bits.\n\n6.3.3 Control Register\n"}},{"@attributes":{"id":"p-0584","num":"0905"},"tables":{"@attributes":{"id":"TABLE-US-00069","num":"00069"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"266pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Register","RW","Bits","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"11"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"7","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"8","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"9","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"10","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"11","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Control","RW","31:24","Xmt","Rcv","Xmt","Rcv","Rcv","Tag Error","CRC","Send"]},{"entry":[{},{},{},"Frame","Frame","Delim","DMA","Delim","cnt","Error","frame"]},{"entry":[{},{},{},"cnt","cnt","error","service","err cnt",{},"cnt"]},{"entry":[{},{},{},{},{},"cnt","cnt"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"8"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"77pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"70pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RW","23:16","10us","MSTB","Rx write tag [1:0]",{},"Tx write tag [1:0]"]},{"entry":[{},{},{},"Reset","Reset"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"11"},"colspec":[{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"6","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"7","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"8","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"9","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"10","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"11","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RW","15:8","ARM","Global",{},"Router","Discard","Xmt","Rcv","Xmt Tag"]},{"entry":[{},{},{},"reset","reset",{},"Request","Frame","DMA","DMA","Generation"]},{"entry":[{},{},{},{},{},{},"Enable","on Error","Request","Request","Enable"]},{"entry":[{},{},{},{},{},{},{},"Enable","Enable","Enable"]},{"entry":[{},"RW","\u20027:0","Rcv Tag","DMA","Big","Rcv","Xmt","Rcv CRC","Xmt","Rcv"]},{"entry":[{},{},{},"Checking","Reset","endian","DMA","CRC","Checking","Enable","Enable"]},{"entry":[{},{},{},"Enable",{},{},"Service","Generation","Enable"]},{"entry":[{},{},{},{},{},{},"Timer","Enable"]},{"entry":[{},{},{},{},{},{},"Enable"]},{"entry":{"@attributes":{"namest":"1","nameend":"11","align":"center","rowsep":"1"}}}]}}]}},"ul":{"@attributes":{"id":"ul0048","list-style":"none"},"li":["Rcv enable (bit ). This bit must be set to enable the receive path. This bit resets to zero.","Xmt enable (bit ). This bit must be set to enable the receive path. This bit resets to zero.","Rcv CRC checking enable (bit ). When this bit is set, CRC checking is enabled in the Receive path. This bit resets to zero.","Xmt CRC generation enable (bit ). When this bit is set, CRC generation is enabled in the Transmit path. This bit resets to zero.","Rcv DMA service timer enable (bit ). When this bit is set, the Receive DMA service timer is enabled. This bit resets to zero.","Big endian (bit ). When this bit is set, bytes are swapped on all words going to and from the switch core as follows: [:] to [:], [:] to [:], [:] to [:], and [:] to [:].","DMA Reset (bit ). When set, this bit initializes the CPU port module. This bit must be written to zero to terminate the reset operation. This bit resets to zero.","Rcv Tag checking enable (bit ). When this bit is set, Tag checking is enabled in the Receive path. This bit resets to zero.","Xmt Tag generation enable (bit ). When this bit is set, Tag generation is enabled in the Transmit path. If this bit is not set then the Tag information needs to be provided via the TX write Tag and the Rx Write tag. Note: the EOF Tag needs to be set on the previous two data words. This bit resets to zero.","Rcv DMA request enable (bit ). When this bit is set, The DMA request interface function is enabled in the Receive path. This bit resets to zero.","Xmt DMA request enable (bit ). When this bit is set, The DMA request interface function is enabled in the Transmit path. This bit resets to zero.","Discard frame on error enable (bit ). When this bit is set, A frame is discarded when an error is detected. This bit resets to zero.","Router request enable (bit ). When this bit is set, The Router interface function is enabled. This bit resets to zero.","Global Reset (bit ). This signal is mapped to an output pin to reset the entire group of ASICs for maintaining system level synchronization. This bit must be written to zero to terminate the reset operation. This bit resets to zero.","ARM Reset (bit ). When set, this bit initializes the ARM processor. This bit must be written to zero to terminate the reset operation. This bit resets to zero.","Tx write tag [:] (bit :). This field provides the tag bits when manually writing to the Tx FIFO's. This field resets to zero.","Rx write tag [:] (bit :). This field provides the tag bits when manually writing to the Rx FIFO. This field resets to zero","MSTB Reset (bit ). When this bit is set the millisecond timer reset to zero. This bit resets to zero.","10 us Reset (bit ). When this bit is set the 10 micro-second timer reset to zero. This bit resets to zero.","Send Frame (bit ). After a frame has been loaded into the Tx FIFO then this bit needs to be set to send the frame to the switch core. This bit is selfclearing","CRC Error Cnt Enable (bit). This bit corresponds to the statistic counters. When this bit is set the counter is enabled.","TAG Error Cnt Enable (bit). This bit corresponds to the statistic counters. When this bit is set the counter is enabled.","RCV Delimiter Error Cnt Enable (bit). This bit corresponds to the statistic counters. When this bit is set the counter is enabled.","DMA Service Expired Cnt Enable (bit). This bit corresponds to the statistic counters. When this bit is set the counter is enabled.","XMT Delimiter Error Cnt Enable (bit). This bit corresponds to the statistic counters. When this bit is set the counter is enabled.","RCV Frame Cnt Enable (bit). This bit corresponds to the statistic counters. When this bit is set the counter is enabled.","XMT Frame Cnt Enable (bit). This bit corresponds to the statistic counters. When this bit is set the counter is enabled.","6.3.4 Xmt FIFO Read and Write Pointer Register"]}},{"@attributes":{"id":"p-0585","num":"0934"},"tables":{"@attributes":{"id":"TABLE-US-00070","num":"00070"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"105pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Register","RW","Bits","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"56pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Xmt FIFO Read\/Write","RW","31:0","Xmt FIFO read","Xmt FIFO write"]},{"entry":["Pointer",{},{},"pointer [8:0]","pointer [8:0]"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}},"ul":{"@attributes":{"id":"ul0049","list-style":"none"},"li":["Xmt FIFO write pointer [:] (bits :). This field specifies the next location to be written in the Xmt FIFO. This field resets to zero.","Xmt FIFO read pointer [:] (bits :). This field specifies the next location to be read from the Xmt FIFO. This field resets to zero.\n\n6.3.5 Xmt FIFO Data Register\n"]}},{"@attributes":{"id":"p-0586","num":"0937"},"tables":{"@attributes":{"id":"TABLE-US-00071","num":"00071"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},"Register","RW","Bits","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Xmt FIFO Data","RW","31:0","Xmt FIFO data word [31:0]"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0050","list-style":"none"},"li":"Xmt FIFO data [:] (bits :). Reading this register reports the contents of the Xmt FIFO RAM word addressed by the Xmt read pointer. The Xmt read pointer auto-increments by one with each read from this register. Writing this register writes to the word addressed by the Xmt write pointer. The Xmt write pointer auto-increments by one with each write to this register. This register resets to zero.\n\n6.3.6 Rcv DMA Service Timer Register\n"}},{"@attributes":{"id":"p-0587","num":"0939"},"tables":{"@attributes":{"id":"TABLE-US-00072","num":"00072"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"105pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Register","RW","Bits","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"42pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Rcv DMA Service","RW","31:0","Rcv DMA Service","Rcv Service"]},{"entry":["Timer",{},{},"Max [9:0]","Timer [9:0]"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}},"ul":{"@attributes":{"id":"ul0051","list-style":"none"},"li":["Rcv DMA service timer [:] (bits :). This field accesses DMA service timer counter. The counter starts counting upon a full frame being rcv'ed into the FIFO and stops counting upon the full frame being completely DMA'ed. Each bit represents one millisecond that is based off of the MSTB counter. The DMA Service timer is the actual count the counter is on. This counter resets to zero.","Rcv DMA service Max [:] (bits :). The RCV DMA Service max is the maximum the counter will count to before setting the corresponding interrupt bit. This counter resets to zero.\n\n6.3.7 Rcv FIFO Read and Write Pointer Register\n"]}},{"@attributes":{"id":"p-0588","num":"0942"},"tables":{"@attributes":{"id":"TABLE-US-00073","num":"00073"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"98pt","align":"center"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Register","RW","Bits","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"49pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Rcv FIFO Read\/Write","RW","31:0","Rcv FIFO read","Rcv FIFO write"]},{"entry":["Pointer",{},{},"pointer [8:0]","pointer [8:0]"]},{"entry":{"@attributes":{"namest":"1","nameend":"5","align":"center","rowsep":"1"}}}]}}]}},"ul":{"@attributes":{"id":"ul0052","list-style":"none"},"li":["Rcv FIFO write pointer [:] (bits :). This field specifies the next location to be written in the Rcv FIFO. This field resets to zero.","Rcv FIFO read pointer [:] (bits :). This field specifies the next location to be read from the Rcv FIFO. This field resets to zero.\n\n6.3.8 Rcv FIFO Data Register\n"]}},{"@attributes":{"id":"p-0589","num":"0945"},"tables":{"@attributes":{"id":"TABLE-US-00074","num":"00074"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},"Register","RW","Bits","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Rcv FIFO Data","RW","31:0","Rcv FIFO data word [31:0]"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0053","list-style":"none"},"li":"Rcv FIFO data [:] (bits :). Reading this register reports the contents of the Rcv FIFO RAM word addressed by the Rcv read pointer. The Rcv read pointer auto-increments by one with each read from this register. Writing this register writes to the word addressed by the Rcv write pointer. The Rcv write pointer auto-increments by one with each write to this register. This register resets to zero.\n\n6.3.9 Statistics Counter Registers\n"}},{"@attributes":{"id":"p-0590","num":"0947"},"tables":{"@attributes":{"id":"TABLE-US-00075","num":"00075"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},"Register","RW","Bits","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Rcv CRC error","RW","31:0","Counter [31:0]"]},{"entry":[{},"Rcv Tag error","RW","31:0","Counter [31:0]"]},{"entry":[{},"Rcv Delimiter error","RW","31:0","Counter [31:0]"]},{"entry":[{},"Rcv DMA service expired","RW","31:0","Counter [31:0]"]},{"entry":[{},"Xmt Delimiter error","RW","31:0","Counter [31:0]"]},{"entry":[{},"Rcv word count","RW","31:0","Counter [31:0]"]},{"entry":[{},"Xmt word count","RW","31:0","Counter [31:0]"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}},"ul":{"@attributes":{"id":"ul0054","list-style":"none"},"li":"Statistics counter [:] (bits :). Reading this register reports the counter value. Writing this register presets a counter with the value in this register. The enable bits for each corresponding register are in the Control Register. The counter resets to zero.\n\n7. Signal Descriptions\n"}},"The table below describes the signals from the Vixel SOC422 Loop Switch.",{"@attributes":{"id":"p-0592","num":"0950"},"tables":{"@attributes":{"id":"TABLE-US-00076","num":"00076"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Signal Name","I\/O","Signal Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Clocks\/Reset Interface"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["clk106","I","106.25 MHz clock, locally generated from"]},{"entry":[{},{},"crystal oscillator"]},{"entry":["refclkr[3:0]","I","106.25 MHz clock, frequency locked to source"]},{"entry":[{},{},"driving clk106 must maintain +\/\u2212 1 ns skew"]},{"entry":[{},{},"between clk106 and refclk0-3"]},{"entry":["clk53","O","53.125 MHz clock, internally generated from"]},{"entry":[{},{},"106 MHz input clock."]},{"entry":["sysclk_out","O","53.125 (1 Gbps) or 106.25 (2 Gbps) MHz"]},{"entry":[{},{},"internal system clock."]},{"entry":["Reset_1","I","System reset. Must be held low for at least"]},{"entry":[{},{},"80 ns. Active low."]},{"entry":["lip_timeout","O","Reset out signal asserted when a forced loop"]},{"entry":[{},{},"initialization doesn't return a LIP"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Serial EPROM Interface"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Par_sel","I","Select parallel or IC interface as active (1 ="]},{"entry":[{},{},"parallel interface active)"]},{"entry":["seeprom_clk","IO","Serial shift clock for EEPROM to be used"]},{"entry":[{},{},"to hold product serial number."]},{"entry":["seeprom_data","IO","Serial data signal for EEPROM."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"IC Microprocessor Interface"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["up_data","IO","Microprocessor IC serial data pin"]},{"entry":["up_clk","I","Microprocessor IC serial clock pin"]},{"entry":["Dev_id[1:0]","I","Device ID for IC bus. Allows 4 Loop Switch"]},{"entry":[{},{},"chips to share 1 IC control bus"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Parallel Microprocessor Interface"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Addr[15:0]","IO","Parallel processor address bus."]},{"entry":["Data[15:0]","IO","Parallel processor data bus."]},{"entry":["Wrn","I","Parallel processor write control line"]},{"entry":["Rdn","I","Parallel processor read control line"]},{"entry":["Rwn","I","Parallel processor data bus direction control"]},{"entry":[{},{},"line"]},{"entry":["Csn","I","Parallel processor chip select line"]},{"entry":["interrupt","O","CPU Interrupt signal. Open collector output."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Probe Mux interface"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Pbmuxi[10:0]","I","Select lines for the main probe mux. When set"]},{"entry":[{},{},"to all 0's, the probe mux outputs for all 3 probe"]},{"entry":[{},{},"muxes are disabled. (Alternative function is"]},{"entry":[{},{},"scan_in bus during scan testing.)"]},{"entry":["pbmuxo[19:0]","O","Dedicated probe data outputs. Refer to section"]},{"entry":[{},{},"Error! Reference source not found. for more"]},{"entry":[{},{},"details (Alternative function is scan_out bus"]},{"entry":[{},{},"during scan testing.)"]},{"entry":["pb_mux_sel2a[4:0]","I","Select lines for probe mux 2a."]},{"entry":["pb_mux_sel2b[4:0]","I","Select lines for probe mux 2b."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Status and LED Interface"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["led_data","O","LED serial data. Used to shift LED data into"]},{"entry":[{},{},"external shift registers to drive LED's."]},{"entry":["Serial_clk","O","LED serial clock. Used to clock serial data into"]},{"entry":[{},{},"external shift registers."]},{"entry":["d_rate_sel","I","Data rate select pin"]},{"entry":[{},{},"0-1 GBPS Data Rate"]},{"entry":[{},{},"1-2 GBPS Data Rate"]},{"entry":["act_d_rate","O","Active data rate of the Loop Switch. Software"]},{"entry":[{},{},"override of discrete input d_rate_sel may"]},{"entry":[{},{},"change the active rate from that selected."]},{"entry":["Brd_id[2:0]","I","Board ID status. Allows processor to read the"]},{"entry":[{},{},"board revision."]},{"entry":["Mgmt_Pres","I","Management Present Status. Allows the Loop"]},{"entry":[{},{},"Switch to determine whether a processor is"]},{"entry":[{},{},"present or not."]},{"entry":["Mgmt_Activity","I","Ethernet interface activity status. Controls"]},{"entry":[{},{},"LED showing ethernet activity."]},{"entry":["EEPROM_Pres","I","EEPROM Present status. If EEPROM is"]},{"entry":[{},{},"present, load data from EEPROM and start"]},{"entry":[{},{},"running. If no EEPROM is present, wait for"]},{"entry":[{},{},"processor configuration to complete and be"]},{"entry":[{},{},"placed on-line. (Low level indicates EEPROM"]},{"entry":[{},{},"is present)"]},{"entry":["Overtemp","I","Overtemp Status. Active low signal indicating"]},{"entry":[{},{},"temperature has exceeded limits."]},{"entry":["Fan[3:0]","I","Fan Stall Status. Monitors for chassis fan stall."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0593","num":"0951"},"tables":{"@attributes":{"id":"TABLE-US-00077","num":"00077"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Signal Name","I\/O","Signal Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Port Interface (\u00d720)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["txp\/txn","O","Encoded differential data to be transmitted."]},{"entry":["tx_dis","O","Transmitter disable to GBIC\/SFP to turn off a"]},{"entry":[{},{},"laser driver."]},{"entry":["tx_fault","I","Transmitter fault from GBIC\/SFP. Indicates a"]},{"entry":[{},{},"laser has had a failure."]},{"entry":["rxp\/rxn","I","Encoded differential data received by transceiver."]},{"entry":["rx_los","I","Receiver loss of signal from GBIC\/SFP. Indicates"]},{"entry":[{},{},"the receive signal does not have sufficient signal"]},{"entry":[{},{},"amplitude to recover a proper signal."]},{"entry":["Moddef[2:0]","IO","GBIC\/SFP Module ID pins. Note: moddef[0] is"]},{"entry":[{},{},"always an input, but moddef[2:1] are bi-"]},{"entry":[{},{},"directional signals to allow the port logic to read"]},{"entry":[{},{},"and write to these pins to read the serial"]},{"entry":[{},{},"ID on a GBIC\/SFP Module."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"moddef[0:2]","Description"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"111","No module present"]},{"entry":[{},"110","Copper style 1 or style 2 active, inter-"]},{"entry":[{},{},"connector"]},{"entry":[{},"101","Copper style 1 or style 2 passive,"]},{"entry":[{},{},"intra-connector"]},{"entry":[{},"100","Optical LW 100-SM-LC-L"]},{"entry":[{},"011","Serial ID Module"]},{"entry":[{},"010","Optical SW 100-M5-SN-I or 100-"]},{"entry":[{},{},"M6-SN-I"]},{"entry":[{},"001","Optical LW 100-SM-LC-L & similar"]},{"entry":[{},{},"1.25 Gbd"]},{"entry":[{},"000","Optical SW 100-M5-SN-I, 100-M6-"]},{"entry":[{},{},"SN-I & 1.25 Gbd"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Rtrim",{},"Serdes process compensation circuit for tx\/rx"]},{"entry":[{},{},"termination 1 input only, connect to 3.0K 1%"]},{"entry":[{},{},"resistor to VDD"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Discrete I\/O"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Utility_tm","O","Output pulse indicating that the utility timer"]},{"entry":["r0",{},"has reached its max count and rolled over."]},{"entry":["Utility_tm","O","Output pulse indicating that the utility timer"]},{"entry":["r1",{},"has reached its max count and rolled over."]},{"entry":["Utility_tm","O","Output pulse indicating that the utility timer"]},{"entry":["r2",{},"has reached its max count and rolled over."]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Power\/Ground"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["rxbvdd[21:0]",{},"Serdes receiver serial analog power 1.8 V +\/\u2212 5%"]},{"entry":["rxbvss[21:0]",{},"Serdes receiver serial analog ground"]},{"entry":["portx_vdd[21:0]",{},"Serdes receiver analog power 1.8 V +\/\u2212 5%"]},{"entry":["rxvss[21:0]",{},"Serdes receiver analog ground"]},{"entry":["txbvdd[21:0]",{},"Serdes transmitter serial analog power"]},{"entry":[{},{},"1.8 V +\/\u2212 5%"]},{"entry":["txbvss[21:0]",{},"Serdes transmitter serial analog ground"]},{"entry":["txvdd[21:0],",{},"Serdes transmitter analog power 1.8 V +\/\u2212 5%"]},{"entry":"port_x_vdd_the"},{"entry":"rm[x:0]"},{"entry":["txvss[21:0]",{},"Serdes transmitter analog ground"]},{"entry":["vdd18core",{},"Core power, 1.8 V +\/\u2212 5%"]},{"entry":["vddio33",{},"3.3 V digital I\/O power 3.3 V +\/\u2212 5%"]},{"entry":["Vss",{},"Core and digital I\/O ground"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Test Interface"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["tn_enable","I","Chip in-state control."]},{"entry":[{},{},"0\u2014All output pins are tri-stated"]},{"entry":[{},{},"1\u2014Normal mode"]},{"entry":["iid_test","I","IDDQ test mode pin. Used only in chip"]},{"entry":[{},{},"production. Should be tied low for normal"]},{"entry":[{},{},"operation."]},{"entry":["Prmndao","O","Process monitor output Used for factory test only"]},{"entry":["jtag_tclk","I","JTAG test clock"]},{"entry":["jtag_tdi","I","JTAG scan data input"]},{"entry":["jtag_tdo","O","JTAG scan data output"]},{"entry":["jtag_rst","I","JTAG reset"]},{"entry":["jtag_msel","I","JTAG mode select"]},{"entry":["scn_enb","I","Internal scan enable"]},{"entry":["scan_mode","I","Internal scan test mode."]},{"entry":[{},{},"0\u2014Normal Operating Mode"]},{"entry":[{},{},"1\u2014Scan Mode, bypasses gated resets"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Although the foregoing invention has been described in some detail by way of illustration and example for purposes of clarity and understanding, it may be readily apparent to those of ordinary skill in the art in light of the teachings of this invention that certain changes and modifications may be made thereto without departing from the spirit or scope of the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 9","i":"a "},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 9","i":"b "},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 9","i":"c "},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 9","i":"d "},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 10","i":"a "},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 10","i":"b "},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 10","i":"c "},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 10","i":"d "},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 11","i":"a "},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 11","i":"b "},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 11","i":"c "},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 11","i":"d "},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 12","i":"a "},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 12","i":"b "},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 12","i":"c "},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 13","i":"a "},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 13","i":"b "},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 14","i":"a "},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 14","i":"b "},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 15","i":"a "},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 15","i":"b "},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 15","i":"c "},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 15","i":"d "},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 16","i":"a "},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 16","i":"b "},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 16","i":"c "},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 32"},{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 34"},{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 35"}]},"DETDESC":[{},{}]}
