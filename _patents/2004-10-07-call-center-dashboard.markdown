---
title: Call center dashboard
abstract: A password management system is provided. The password management system includes a plurality of enterprise applications accessible by local and remote desktop computers by providing single sign-on security information. Each of the plurality of enterprise applications require separate login information which is stored in a secure back-end system along with the single sign-on security information. Scripts located, for example, on remotely accessible servers and/or on the local desktop computer, allow a user to logon with a single sign-on and have access to the plurality of enterprise applications. The script uses the single sign-on security information, and perhaps other information, to authenticate the user and access the login information for each of the enterprise applications. The script is further operable to automatically interface with the enterprise applications through user input windows, such as by scripting login information automatically into the enterprise application login windows.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07636852&OS=07636852&RS=07636852
owner: Sprint Communications Company L.P.
number: 07636852
owner_city: Overland Park
owner_country: US
publication_date: 20041007
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT","REFERENCE TO A MICROFICHE APPENDIX","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This application includes subject matter related to U.S. patent application Ser. No. 10\/284,680, filed Oct. 31, 2002, entitled \u201cSecurity Framework Bridge\u201d, by Ken Boydstun, et al, and to U.S. patent application Ser. No. 10\/631,984, filed Jul. 31, 2003, entitled \u201cBusiness-to-business Security Integration\u201d, by Kenneth Boydstun, et al, both of which are incorporated herein by reference for all purposes.","Not applicable.","Not applicable.","The present disclosure is directed to computer software for controlling access to enterprise computer applications, and more particularly, but not by way of limitation, to a system and method for providing a single sign-on capability for users.","Employees in businesses may use multiple computer programs or applications during the course of performing their tasks. Typically each application requires a user to login using a user identity and a password. The user identity and the password of an individual employee may not be the same from one application to another. Applications may require users to change their passwords periodically, every 60 days for example. Applications may require that passwords meet certain criteria such as containing a minimum number of characters, at least one upper case character, at least one numeral, and\/or at least one special character. The password change period and the criteria for constructing passwords typically are different among the applications.","In one embodiment, a password management system is provided. The password management system includes a plurality of enterprise applications, an application security data store, an authentication component, a web server, an application server, and password management applications and clients. The plurality of enterprise applications are accessible by a desktop computer by providing user security information. The application security data store stores the user security information, and the web server communicates with the authentication component to authenticate a request for web services and to forward a request for the user security information. The application server receives the request for the user security information from the web server for user security information. The password management application is preferably executed by the application server. The password management application requests user security information related to one or more of the enterprise applications from the application security data store. The password management application also updates the user security information maintained by the application security data store. The password management client is preferably resident on the desktop computer in communication with the web server. The password management client is operable using single sign-on information to be authenticated by the authentication component and obtain user security information for one or more of the enterprise applications from the password management application. The password management client uses the user security information to access the one or more enterprise applications.","In another embodiment, a method for logging into enterprise applications from a computer is provided. The method includes logging into a password management system using a single sign-on login information, and authenticating the single sign-on login information to access a business enterprise. The method includes requesting login information for one of the enterprise applications, and retrieving the login information from a data store. The method also provides for using the login information to log into at least one of the enterprise applications.","In one embodiment, a method for logging into a enterprise application from a computer is provided that includes attempting to log into a password management system and receiving an out of service message. The method includes logging into a backup password management system, and retrieving a login information for a plurality of enterprise applications from the backup password management system. The method includes providing the login information for the enterprise applications in clear text, and using the login information to log into one or more of the enterprise applications.","In still another embodiment, a method for logging into enterprise applications from computers local and remote to an enterprise using a single sign-on is provided. The method includes using a single sign-on information from the remote computer to log into a server communicating with a web server of the enterprise. The method includes authenticating the single sign-on information received from the remote computer and security information to access the enterprise. The method includes requesting login information specific to at least one enterprise application, and retrieving enterprise application login information from a data store. The method includes using the enterprise application login information to log into one or more of the enterprise applications by the remote computer. The method provides for using the single sign-on information from the local computer to log into the web server, and authenticating the single sign-on information received from the local computer to access the enterprise. The method also provides for using the enterprise application login information to log into one or more of the enterprise applications by the local computer.","These and other features and advantages will be more clearly understood from the following detailed description taken in conjunction with the accompanying drawings and claims.","It should be understood at the outset that although an exemplary implementation of one embodiment of the present disclosure is illustrated below, the present system may be implemented using any number of techniques, whether currently known or in existence. The present disclosure should in no way be limited to the exemplary implementations, drawings, and techniques illustrated below, including the exemplary design and implementation illustrated and described herein.","Employees working in call centers may employ many applications in the course of receiving and responding to customer calls. These applications may be referred to as customer care applications. Call center employees may be required to remember many different passwords to access the applications. With passwords being changed periodically and with application password criteria requiring mixed character strings, it will be readily appreciated that call center employees find it difficult to remember all of the passwords to the applications that they use. When a call center employee forgets a password to an application, the employee may call a help desk or administrator and request that the forgotten password be reset. Having to request that the password be reset delays providing service to the customer, decreasing customer satisfaction.","While call center employees are a signal case of individuals having difficulty coping with multiple passwords, employees in other positions may also experience similar difficulties coping with multiple passwords. What is needed is a single sign-on solution to access the applications of an enterprise that requires no changes to the applications and which hides the details of changing passwords periodically. The present disclosure provides a single sign-on solution, which may be referred to as a call center dashboard, for users both internal and external to the corporate firewall that may not require any changes to the applications. The call center dashboard single sign-on solution securely accesses a database to obtain the passwords to each of the applications utilized by an individual user and then interacts with the applications to log the user into the applications. The call center dashboard single sign-on solution changes passwords when prompted by the applications and securely stores the new passwords back on the database without user intervention. The call center dashboard single sign-on solution does not change how the individual user interacts with the applications but enhances the experience of the call center workers and the service provided to the enterprise customers.","Turning now to , a block diagram depicts a system  for implementing embodiments of the present disclosure. A desktop computer  provides access to a password protected computer program, such as an enterprise application , which may be referred to as a customer care application, through a call center dashboard desktop . The term enterprise application  is used herein to reference any computer program or application used by an enterprise, corporation, business, organization, or individual which is password protected or otherwise authenticates a user before providing functionality. Although  depicts only one enterprise application , several enterprise applications  may be supported by the system . A telecommunications provider or carrier may employ the enterprise applications  for provisioning a cell phone or for troubleshooting customer billing issues, for example. The call center dashboard desktop  logs the user into the enterprise application , including providing a user identity, a user password, and other secure user information as needed by the particular enterprise application . The user identity, user password, and other secure user information may be referred to collectively as login information. The call center dashboard desktop  requests the login information from a web server .","The web server  first authenticates the requester, in this case the call center dashboard desktop , with an authentication server . An authentication agent  at the web server  mediates between the web server  and the authentication server  to authenticate the requestor for the web server . Assuming the requestor is authenticated, the web server  forwards the request to a call center dashboard application  executing on an application server . In an embodiment, the interface between the web server  and the call center dashboard application  may be provided as a JAVA server page (JSP). The JAVA server page is logically a part of the call center dashboard application .","The call center dashboard application  communicates with an application security data store  which contains the login information. The call center dashboard application  obtains the login information from the application security data store  and returns the login information to the web server . The web server  returns the login information to the call center dashboard desktop . The call center dashboard desktop  logs the user in to the enterprise application . The web server , the authentication agent , the application server , the call center dashboard application , the authentication server , and the application security data store  may be referred to collectively as the back end  of the system .","The call center dashboard desktop  includes a call center dashboard client , a control , and a script . The call center dashboard desktop  provides an application icon (not shown) associated with the enterprise application . When the user clicks on the application icon, the control  associated with the application icon executes. The only action of the control  is to execute the script . The script  interacts with the enterprise application  and the web server  as described above to login to the enterprise application . In the preferred embodiment, the control  is a Microsoft ActiveX control, but alternate technologies may be employed to implement the control  to execute the script .","In the case that the user password for the enterprise application  has expired, the script  is operable to detect the expiration of the user password, to dialog with the enterprise application  to change the user password to a valid changed password generated by the script . The script  is further operable to communicate with the web server , via the call center dashboard client , to request that the changed user password be stored in the application security data store .","The script  is programmed to detect and respond appropriately to each of the windows which the enterprise application  may open. The script  may identify the appearance of windows, as for example using the identity of the window, the title of the window, and\/or the text layout of the window all of which are stored in application security data store  or programmed in to the scripts . The identity of the window, the title of the window, and the text layout of the windows that the enterprise application  may open may be determined by researching and\/or executing the enterprise application . The scripts  detect, for example, normal login windows, password change windows, invalid password windows, changed password malformed windows, and other password or authentication related windows. The script  automatically generates, without intervention of the user, an updated password which conforms to the specific password requirements of the enterprise application , all of which may be stored in application security data store , and sends  the password update to the enterprise application , as for example by interacting with the password change dialog box window of the application.","In an embodiment, the authentication server  and authentication agent  are provided by the Netegrity, Inc. SiteMinder authentication software package. In a typical sequence of events, a request associated with a user arrives at the web server . The authentication agent  sends the identity of the user and the identity of the requested resource to the authentication server . The authentication server  compares the identity of the user with the authorization policy for the requested resource, in this case the call center dashboard services. If the comparison is successful, the authentication server  authorizes the access, and the web server  forwards the request to the application server  for action. For further details related to the use of the Netegrity, Inc. SiteMinder authentication software package, see the related U.S. patent application Ser. No. 10\/284,680, filed Oct. 31, 2002, entitled \u201cSecurity Framework Bridge\u201d, by Ken Boydstun, et al, and U.S. patent application Ser. No. 10\/631,984, filed Jul. 31, 2003, entitled \u201cBusiness-to-business Security Integration\u201d, by Kenneth Boydstun, et al, both of which are incorporated herein by reference for all purposes.","The operations described briefly above as well as others yet to be disclosed are described more fully hereinafter with reference to a plurality of message sequence diagrams. The components described above are all computer programs or applications that may be executed on a general purpose computer system. General purpose computer systems are described in greater detail hereinafter.","Turning now to , a detailed block diagram of the desktop computer  is provided. The call center dashboard client  is in communication with a control . As stated above, in the preferred embodiment, the control  is a Microsoft ActiveX control, but alternate technologies may be employed to implement the control . An ActiveX control is a program able to execute with powerful privileges on the desktop computer  that can be distributed from a web page, in this case from the web server  to the desktop computer . The ActiveX control employed in the system  is signed using an enterprise certificate for authentication purposes.","The control  is in communication with a plurality of scripts \u2014a first script , a second script , and a third script . The scripts  login to a plurality of enterprise applications \u2014the first script logs in to a first enterprise application , the second script logs in to a second enterprise application , and the third script logs in to a third enterprise application . While three enterprise applications  are depicted, the number of enterprise applications  may be either greater or fewer than three. The number of enterprise applications  agrees with and determines the number of the scripts .","The system  described with reference to  and  provides a single sign-on solution to a user logging in to the enterprise applications . When logging in to the call center dashboard desktop , the user is challenged for a user identity and user password, which may be a corporate identity and corporate password for example. Once logged in to the call center dashboard desktop , the user need only click on the icons associated with the enterprise applications , and the call center dashboard desktop  then dialogs with the enterprise applications  to supply passwords and update passwords if need be. While the exemplary system  depicted in  and  is directed to a call center and the customer care applications that operators in a call center may employ to serve their customers, one skilled in the art will readily appreciate that the exemplary system  may be applied to other environments using other kinds of applications.","Turning now to , a block diagram of an embodiment of the back-end  of the system  is depicted. The call center dashboard client  may send a request to the web server  via a load balancing switch  accessed by sending the request to a primary or a first universal resource locator (URL). The load balancing switch  distributes the request to a first web server or a second web server based on the current processing load of the web servers  and\/or the application servers . The application servers  include a first application server in communication with the first web server and a second application server in communication with the second web server . The load balancing switch  communicates with the web servers  over a secure socket layer (SSL). The processing of the request from the call center dashboard client  after it is routed to the selected web server  is as described above. In other embodiments, more than two web servers  and more than two application servers  may be employed.","If either the application security data store  or the authentication server  become inoperable, the login information stored in the application security data store  may become unavailable, and hence users may not be able to log into the enterprise applications  without having their passwords reset, such as by help desk personnel or application administrators. In the event the application security data store  or the authentication server  become inoperable, a backup system  may be automatically enabled by a software component, for example the call center dashboard application , or manually enabled by administrators, and provides a component which users may use to access login information. The software component may provide, for example, the user his or her password in clear text, and the user may then use the password to manually login to the enterprise applications .","The backup system  includes a backup switch  which is accessed using an alternate universal resource locator. The desktop computer  may provide an icon linked to the backup system  in addition to providing an icon linked to the call center dashboard desktop . The backup switch  routes user requests to a third web server over a secure socket layer interface. The third web server may listen for requests on a protocol port number which is different from the protocol port number on which the first web server and the second web server , part of system , listen for requests. The third web server authenticates the requestor, in this case the user, with an alternate authentication server (not shown). An authentication agent within the web server mediates between the web server and the alternate authentication server (not shown). The third web server passes requests for login information to a third application server . Note that the third application server may be a separate back-up application server or may be the first application server responding to requests for back-up services or the second application server responding to requests for back-up services. The third application server requests the login information from a cached application security data store . The login information is retrieved from the cached application security data store  and forwarded back to the web server for display to the user's browser in clear text. The user may then use the clear text login information to log into the desired enterprise applications  manually. This is one method of providing users access when the application security data store  or the authentication server  are inoperable.","During normal operations of the system , the cached application security data store  is periodically updated with login information from the application security data store . In an embodiment, the update may occur every five minutes or every twenty minutes. In other embodiments, other update periods may be employed.","Turning now to , another embodiment of the system  for supporting users outside of the enterprise is depicted. A remote desktop computer  includes a remote client . The remote desktop computer , using the remote client , may log into a remote server  located within the enterprise. The remote server  provides the password protected enterprise application , a remote script , and a web browser . In the preferred embodiment, the remote client  is a CITRIX client and the remote server  is a CITRIX server. In another embodiment, the remote client and remote server may be provided by a different remote access software tool. The back end  is the same as that used by the non-CITRIX access using the desktop computer  as previously described.","When the remote user logs into the remote server  from the remote desktop computer , an icon associated with the password protected enterprise application  is displayed to the remote user on the remote desktop computer . When the remote user clicks on the icon associated with the password protected enterprise application , the remote script  executes and causes the web browser  to send a request for login information to the web server . With the request for login information, the web browser  may include, for example, the identity of the remote user, the identity of the application that the remote user is requesting to access, and other authentication, such as a hash value, which may be referred to as a digest, formed by hashing the remote script  using the MD5 secure hashing algorithm. MD5 may stand for \u201cmessage digest 5.\u201d Other security means and\/or information may be used for authenticating the request and readily suggest themselves to one skilled in the art. The identity of the remote user, the identity of the application, and the hash value or digest may be referred to as secure tokens or tokens. Also, the internet protocol address of the remote server  may be included with the secure tokens.","The web server  authenticates the request from the remote server  differently than the request from the desktop computer . If the remote script  has been tampered with, the hash value or digest provided by the web browser  with the secure tokens will not agree with the hash value or digest that the application server  may calculate on the application server . In this case access will be denied by the web browser . The remote script  may be tampered with, for example, in an attempt to defeat the security provisions of the system . In an embodiment, the application server  may precalculate and store the hash value rather than calculating the hash value on the fly. If the secure tokens meet the expectations of the application server  for the internet protocol address of the remote server , user identity, digest, domain, the application server  associates an administrator identity, which may be termed a proxy identity, with the request, conducts authentication through the authentication server  based on this proxy identity, and forwards the request for service to the application server .","To confirm or authenticate the provided internet protocol address of the remote server , the call center dashboard application  looks up the needed login information, and the login information is forwarded back to the requesting remote script . The call center dashboard application  may store instructions referencing specific internet protocol addresses of the remote servers  or a covering range of internet protocol addresses of the remote servers . Alternatively, the call center dashboard application  may read specific internet protocol addresses of the remote servers  or a covering range of internet protocol addresses of the remote servers  from a stored file, for example stored in the application security data store . The remote script  then logs into the password protected enterprise application  on behalf of the remote user as previously discussed. From this point on, the remote user interacts with the password protected enterprise application  via the mediation of the remote client .","Turning to , a detailed block diagram of the remote desktop computer  is depicted. When the remote user logs into the remote client , icons for each of the plurality of password protected enterprise applications \u2014the first enterprise application , the second enterprise application , and the third enterprise application will display on the remote desktop computer . Each enterprise application  is associated with a remote script \u2014the first enterprise application associated with a first remote script , the second enterprise application associated with a second remote script , and the third enterprise application associated with a third remote script . The number of remote scripts  agrees with and determines the number of enterprise applications . In some embodiments more or fewer applications and call center dashboard scripts may be provided.","To provide the computing power needed to execute the enterprise applications  on the remote server , a plurality of remote servers  are provided by the system , and the remote users are connected to one of the remote servers  by a switch (not shown).","Turning now to , a message sequence diagram depicts an exemplary initialization of the desktop computer . In message sequence diagrams vertical lines are associated with communicating entities. The specific communicating entities are identified at the top of the vertical lines. Horizontal lines terminated with an arrowhead indicating direction represent messages or events which flow between the communicating entities. Messages and events occurring earlier in time are located higher up on the message sequence diagram than messages and events occurring later in time. Sometimes an event is depicted as originating and terminating on the same entity to capture an action confined to the entity itself or to capture a user action, as for example the clicking of an icon displayed in a graphical user interface.","Initially the call center dashboard client  and the enterprise applications  are installed on the desktop computer . The user selects the call center dashboard icon, and the desktop computer , via the call center dashboard client , sends  a call center dashboard login request to the web server . The web server  sends  an authenticate user request to the authentication server . The authentication server  validates the user and returns  an authentication response to the web server . Assuming the authentication response is positive and the user is authenticated successfully, the web server  sends  a call center dashboard login response to the desktop computer .","The call center dashboard client  recognizes that the desktop computer  has not been configured with the control  and the scripts . Accordingly, the desktop computer  sends  a request for the control  and scripts  to the web server . The web server  returns  a response containing the control  and the scripts  to the desktop computer . The call center dashboard client  installs the control  and the scripts  on the desktop computer  in the appropriate places and creates icons associated with each of the enterprise applications  linked to the control . In the case that the control  is Microsoft ActiveX control, the desktop computer  asks the user to accept or reject installation of each of the Microsoft ActiveX controls and also provides notification of the presence of the enterprise signature with the Microsoft ActiveX controls. In the preferred embodiment, the control  and the scripts  are compressed and packaged in a file for sending to the desktop computer . The file format used may be the Microsoft cabinet file format, the JAVA archive (JAR) file format, or some other file format as known to one skilled in the art.","To initially set-up the system , the user names and user passwords for each of the enterprise applications  must be taught to the system . In one embodiment, the call center dashboard client  prompts the user for login information for each of the enterprise applications . The desktop computer  sends the login information for the first enterprise application to the web server . The web server  forwards the login information to the application server . The application server  sends the login information to the application security data store . The desktop computer  repeats this message sequence , , and  for each of the enterprise applications . The diagram depicts the message sequence for storing login information for the second enterprise application , comprising messages , , and , but one skilled in the art will readily appreciate that this message sequence may be altered or repeated the appropriate number of times to store all the needed login information in the application security data store .","At the completion of the message sequence depicted in  the system  may be said to be initialized. The process of prompting for and storing login information may be referred to as a learning mode of the system . When the control  or the scripts  are updated in the back end , the call center dashboard client  detects the change. In this case, the call center dashboard client  will request the current control  and\/or scripts  from the back end  using messages  and  as described above.","The call center dashboard remote scripts  may be updated on the remote servers  by any method for updating a plurality of servers with common software such as would be known to one skilled in the art, for example a network push utility which installs software overnight. The remote desktop computer  and remote server  also support a learning mode very similar to that supported by the non-remote portion of the system .","Turning now to , a message sequence diagram depicts an exemplary method of the desktop computer  for logging into the enterprise application  using the system . The user logs into the call center dashboard client  with messages , , , and  as described above with reference to . At label  the user clicks the icon associated with the enterprise application , for example. The control  executes and causes the script  associated with the enterprise application  to execute. The desktop computer , on behalf of the script , sends  a request for login information to the web server . The web server  forwards  the request to the application server , and the application server  requests  the login information associated with the enterprise application  from the application security data store . The application security data store  returns  the login information to the application server . The application server  returns  the login information to the web server . The web server  returns  the login information to the desktop computer . The script  associated with the enterprise application  invokes  the enterprise application  using the login information, and the enterprise application  opens  for the user, for example displaying a graphical user interface allowing the user to operate the enterprise application .","Turning to , a message sequence diagram depicts an alternate exemplary method of the desktop computer  for logging into the enterprise application  using the system  wherein the enterprise application  requires that the user password be updated. As in  above, at label  the user clicks the icon associated with the enterprise application , for example. As in  above, the login information is obtained and provided to the enterprise application  at labels , , , , , , and . In the case of , however, the enterprise application  decides that the user password is due to be changed, for example at the end of a 45 day password update period.","The enterprise application  sends  a request to change the password to script  on the desktop computer . In the preferred embodiment, the enterprise application  opens a password change dialog box window for a user to change the password, and the script  detects and identifies the appearance of this window, as for example using the identity of the window, the title of the window, and\/or the text layout of the window all of which are stored in data store  or programmed in to the scripts . The identity of the window, the title of the window, and the text layout of the window may be determined by researching the enterprise application . The script  automatically generates, without intervention of the user, an updated password which conforms to the specific password requirements of the enterprise application , all of which may be stored in data store , and sends  the password update to the enterprise application , as for example by interacting with the password change dialog box window of the application.","The enterprise application  opens  for the user, for example displaying a graphical user interface allowing the user to operate the enterprise application . The desktop computer  sends  a password update message to the web server . The web server  sends  the password update message to the application server . The application server  sends  the password update message to the application security data store . While not depicted here, in another embodiment confirmation of the storage of the password update in the application security data store  may be sent back to the desktop computer . Note that the desktop computer , specifically the script , does not return the password update message until after the enterprise application  has accepted the password update.","The script  may also store the password update in a recovery file prior to the action at label . In the event that the desktop computer  crashes after the enterprise application  updates the password but before the password is stored to the application security data store , the script  may use the recovery file to complete the storing of the updated password to the application security data store . After the script  has stored the updated password to the application security data store , either in a normal password update scenario or in a recovery scenario, the recovery file may be deleted. As will be readily apparent to one skilled in the art, there are many error scenarios which may be identified for the uses of the system . Similarly, there are many error handling scenarios which readily suggest themselves to one skilled in the art, which for the sake of brevity are not discussed herein.","Turning to , a message sequence diagram depicts an alternate exemplary method of the desktop computer  for logging into an enterprise application  using the system  wherein the application requires a new password to be provided and wherein the script  provides a malformed password. As in  above, at label  the user clicks the icon associated with the enterprise application , for example. As in  above, the login information is obtained and provided to the enterprise application  at labels , , , , , , and . In the case of  and of , however, the enterprise application  decides that the user password is due to be changed, for example at the end of a 45 day password update period. The enterprise application  sends  a request to change the password to script  on the desktop computer . The script  automatically generates, without intervention of the user, an updated password which is expected to conform to the specific password requirements of the enterprise application  and sends  the password update to the enterprise application .","The enterprise application  sends  a message rejecting the automatically generated updated password as not in conformance with the specific password requirements of the enterprise application  back to the desktop computer . In the preferred embodiment, the enterprise application  opens an invalid password change dialog box window for a user to change the password. The script  detects and identifies  the appearance of this window, as for example using the window identity, the window title, and\/or the text layout of the window. In this case, the script  allows the user to manually enter a password update.","The user directly enters  a first manual password update for the enterprise application . The first manual password update, however, does not conform to the specific password requirements of the enterprise application , and the enterprise application  sends  a message rejecting the first manual password update. In the preferred embodiment, the enterprise application  opens an invalid password change dialog box window for a user to change the password. The script  detects and identifies  the appearance of this window and allows the user to manually enter a password update. The user directly enters  a second manual password update.","The application opens  for the user, for example displaying a graphical user interface allowing the user to operate the enterprise application . The desktop computer  sends  a password update message to the web server . The web server  sends  the password update message to the application server . The application server  sends  the password update message to the application security data store . While not depicted here, in another embodiment confirmation of the storage of the password update in the application security data store  may be sent back to the desktop computer . Note that the password update is not sent back to the application security data store  until the password update is accepted by the enterprise application .","Turning to , a message sequence diagram depicts an alternate exemplary method of the desktop computer  for logging into an enterprise application  using the system  wherein the password provided by the system  does not agree with the password stored by the enterprise application , as for example after a user has manually updated his or her password outside of the system . As in  above, at label  the user clicks the icon associated with the enterprise application , for example. As in  above, the login information is obtained and provided to the enterprise application  at labels , , , , , , and . In , however, the user has manually updated his or her application password, and this manually updated password was not stored in the application security data store .","The enterprise application  sends  a password failure message to the desktop computer . In the preferred embodiment, the enterprise application  opens an invalid password dialog box window for a user to change the password. The script  detects and identifies  the appearance of this window and allows the user to manually enter a password. The user manually enters  the appropriate password, for example the password which the user had manually updated.","The application opens  for the user, for example displaying a graphical user interface allowing the user to operate the enterprise application . The desktop computer  sends  a password update message to the web server . The web server  sends  the password update message to the application server . The application server  sends  the password update message to the application security data store . While not depicted here, in another embodiment confirmation of the storage of the password update in the application security data store  may be sent back to the desktop computer .","Turning now to , a message sequence diagram depicts a method for logging into an enterprise application  using the backup system  depicted in . At label  the user selects the call center dashboard icon, and the desktop computer , via the call center dashboard client , sends  a call center dashboard login message to the web server . The web server  returns  an out of service message to the desktop computer , indicating that the authentication server  and\/or the application security data store  are out of service.","At label  the user selects the alternate call center dashboard icon, and the desktop computer , via the call center dashboard client , sends  a call center dashboard login message to the backup web server . Alternately, in an embodiment, when the back end system  is out of service, the call center dashboard client  may automatically remap the selection of the call center dashboard icon to send  the call center dashboard login message to the backup web server . The backup web server sends  an authentication request to the backup authentication server . The backup authentication server sends  an authentication response to the backup web server . Assuming the authentication response is positive, the backup web server sends  a call center dashboard login complete message to the desktop computer .","The call center dashboard client  sends  a request for alternate login information to the backup web server . The backup web server forwards  the request to the application server . The application server requests  the alternate login information from the cached application security data store . The cached application security data store  returns  the alternate login information to the application server . The application server  returns  the alternate login information to the backup web server . The backup web server returns  the alternate login information to the desktop computer .","The call center dashboard client  displays the alternate login information, comprising the passwords and other secure information as required, in clear text in a window to the user. At label  the user may then manually log into the enterprise application  using the alternate login information. The application opens  for the user, for example displaying a graphical user interface allowing the user to operate the enterprise application .","Turning to , a message sequence diagram depicts an exemplary method of the remote desktop computer  logging into an enterprise application  using system . When the user logs into the remote client , the remote desktop computer  sends  a login message to the remote server . The remote server  sends  a request to authenticate the user to the web server . The web server  sends  the request to authenticate the user to the authentication server . The authentication server  sends  a response back to the web server . The web server  sends  the response back to the remote server . The remote server  sends  the response back to the remote desktop computer . Assuming the authentication succeeded, the user is presented with icons associated with each of the accessible enterprise applications .","At label  the user clicks on an application associated with the enterprise application . The remote desktop computer  sends  a request to log into the enterprise application  to the remote server . The remote server  invokes the remote script  associated with the application and sends  a request to the web server  for login information. The web server  sends  the request to the application server . The application server  sends  the request for login information to the application security data store . The application security data store  returns  the login information to the application server . The application server returns  the login information to the web server . The web server  returns  the login information to the remote server . At label  the call center dashboard remote script employs the login information to log the user into the enterprise application . The enterprise application  opens . The remote server  returns  an interface to the application to the remote desktop computer , for example displaying a graphical user interface allowing the user to operate the enterprise application .","One skilled in the art will readily understand how to extrapolate the password update message sequences of the desktop computer , , , and , to the similar password update messages sequences for the remote desktop computer .","In another embodiment, some integrated applications may be integrated with the authentication software, for example with either the authentication server  and\/or the authentication agent , and\/or with the call center dashboard application . The integrated applications run on the web server  and provide a presentation view only to the desktop computer . The integrated applications may be referred to as thin clients because only a presentation portion of the integrated applications appear on the desktop computer . The authentication server , the authentication agent , and\/or the call center dashboard application  may communicate with the integrated applications using an application programming interface (API) provided by the integrated applications.","The integrated applications provide an application programming interface to the authentication software and the web server  through which the authentication software and web server  may interact with the integrated applications. When the desktop computer  attempts to log into one of the integrated applications and the integrated application is due for the user password to be updated, the authentication software generates a valid password update to log into the integrated application and sends the new password to the call center dashboard application  for storing in the application security data store .","When the user logs into the call center dashboard desktop , only icons for the integrated applications which the user is authorized to access will appear on the desktop computer interface. The call center dashboard application  determines what integrated applications a user is authorized to access by retrieving access information for the user from the application security data store .","The system described above may be implemented on any general-purpose computer with sufficient processing power, memory resources, and network throughput capability to handle the necessary workload placed upon it.  illustrates a typical, general-purpose computer system suitable for implementing one or more embodiments disclosed herein. The computer system  includes a processor  (which may be referred to as a central processor unit or CPU) that is in communication with memory devices including secondary storage , read only memory (ROM) , random access memory (RAM) , input\/output (I\/O) devices , and network connectivity devices . The processor may be implemented as one or more CPU chips.","The secondary storage  is typically comprised of one or more disk drives or tape drives and is used for non-volatile storage of data and as an over-flow data storage device if RAM  is not large enough to hold all working data. Secondary storage  may be used to store programs which are loaded into RAM  when such programs are selected for execution. The ROM  is used to store instructions and perhaps data which are read during program execution. ROM  is a non-volatile memory device which typically has a small memory capacity relative to the larger memory capacity of secondary storage . The RAM  is used to store volatile data and perhaps to store instructions. Access to both ROM  and RAM  is typically faster than to secondary storage .","I\/O devices  may include printers, video monitors, liquid crystal displays (LCDs), touch screen displays, keyboards, keypads, switches, dials, mice, track balls, voice recognizers, card readers, paper tape readers, or other well-known input devices. The network connectivity devices  may take the form of modems, modem banks, ethernet cards, universal serial bus (USB) interface cards, serial interfaces, token ring cards, fiber distributed data interface (FDDI) cards, wireless local area network (WLAN) cards, radio transceiver cards such as Global System for Mobile Communications (GSM) radio transceiver cards, and other well-known network devices. These network connectivity devices  may enable the processor  to communicate with an Internet or one or more intranets. With such a network connection, it is contemplated that the processor  might receive information from the network, or might output information to the network in the course of performing the above-described method steps. Such information, which is often represented as a sequence of instructions to be executed using processor , may be received from and outputted to the network, for example, in the form of a computer data signal embodied in a carrier wave.","Such information, which may include data or instructions to be executed using processor  for example, may be received from and outputted to the network, for example, in the form of a computer data baseband signal or signal embodied in a carrier wave. The baseband signal or signal embodied in the carrier wave generated by the network connectivity devices  may propagate in or on the surface of electrical conductors, in coaxial cables, in waveguides, in optical media, for example optical fiber, or in the air or free space. The information contained in the baseband signal or signal embedded in the carrier wave may be ordered according to different sequences, as may be desirable for either processing or generating the information or transmitting or receiving the information. The baseband signal or signal embedded in the carrier wave, or other types of signals currently used or hereafter developed, referred to herein as the transmission medium, may be generated according to several methods well known to one skilled in the art.","The processor  executes instructions, codes, computer programs, scripts which it accesses from hard disk, floppy disk, optical disk (these various disk based systems may all be considered secondary storage ), ROM , RAM , or the network connectivity devices .","While several embodiments have been provided in the present disclosure, it should be understood that the disclosed systems and methods may be embodied in many other specific forms without departing from the spirit or scope of the present disclosure. The present examples are to be considered as illustrative and not restrictive, and the intention is not to be limited to the details given herein, but may be modified within the scope of the appended claims along with their full scope of equivalents. For example, the various elements or components may be combined or integrated in another system or certain features may be omitted, or not implemented.","Also, techniques, systems, subsystems and methods described and illustrated in the various embodiments as discrete or separate may be combined or integrated with other systems, modules, techniques, or methods without departing from the scope of the present disclosure. Other items shown or discussed as directly coupled or communicating with each other may be coupled through some interface or device, such that the items may no longer be considered directly coupled to each other but may still be indirectly coupled and in communication, whether electrically, mechanically, or otherwise with one another. Other examples of changes, substitutions, and alterations are ascertainable by one skilled in the art and could be made without departing from the spirit and scope disclosed herein."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a more complete understanding of the present disclosure and the advantages thereof, reference is now made to the following brief description, taken in connection with the accompanying drawings and detailed description, wherein like reference numerals represent like parts.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 13"}]},"DETDESC":[{},{}]}
