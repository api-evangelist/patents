---
title: Apparatus and method for processing an interactive service
abstract: A method of processing a digital service signal and an apparatus thereof are disclosed. The present invention includes executing a primary application for the digital service signal, wherein the primary application is a triggered application or a non-triggered application, transmitting messages of interactive services for a secondary application associated with the primary application, wherein the interactive services includes a first mode related to the triggered application or a second mode related to the non-triggered application, receiving a request for descriptions identifying the interactive services, transmitting the descriptions having service id information identifying each of the interactive services and service type information indicating a type of the each of the interactive services, and providing the interactive services by transmitting information for the interactive services.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09516384&OS=09516384&RS=09516384
owner: LG ELECTRONICS INC.
number: 09516384
owner_city: Seoul
owner_country: KR
publication_date: 20131127
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["Pursuant to 35 U.S.C. \u00a7119(e), this application claims the benefit of U.S. Provisional Application No. 61\/730,937 filed on Nov. 28, 2012 and U.S. Provisional Application No. 61\/736,529 filed on Dec. 12, 2012, which are hereby incorporated by reference as if fully set forth herein.","Field of the Invention","The present invention relates to a method and apparatus for providing, receiving and processing a broadcast service, and more particularly, to a method and apparatus for providing a supplementary service related to broadcast content.","Discussion of the Related Art","TVs first appeared at the end of the 19th century and have become the most popular information delivery apparatus since the end of the 20th century as a screen display method or design thereof has been continuously developed. However, TVs generally enable viewers to receive unidirectional information from a broadcast station. Such TV limitations have become problematic as personal computers (PCs) and the Internet have come into widespread use since the 1990s. Therefore, TVs have been developed to be able to provide an interactive service.","However, currently, there is no system for providing an interactive service between a content provider and a viewer. In particular, in order to provide such an interactive service, there is a need for a method of executing an application related to broadcast content, which is currently being broadcast, at a specific time and providing related information to a viewer through special information processing.","An object of the present invention devised to solve the problem lies on supplementary information related to broadcast content at an appropriate time during a period when the broadcast content is played back.","The object of the present invention can be achieved by providing a method of processing a digital service signal including executing a primary application for the digital service signal, wherein the primary application is a triggered application or a non-triggered application, transmitting messages of interactive services for a secondary application associated with the primary application, wherein the interactive services includes a first mode related to the triggered application or a second mode related to the non-triggered application, receiving a request for descriptions identifying the interactive services, transmitting the descriptions having service id information identifying each of the interactive services and service type information indicating a type of the each of the interactive services, and providing the interactive services by transmitting information for the interactive services.","Preferably, the information for the interactive services are defined according to the each of the interactive services, and the information for the interactive services are one of triggers, bytes and URL information.","Preferably, when the information for the interactive services are triggers, at least one of the triggers includes channel change information having a value for indicating changed numbers of channels of the digital service signal.","Preferably, when the information for the interactive services are triggers, the method further includes, augmenting the triggers by combining with information in a TPT, wherein the TPT contains metadata about the triggered application and transmitting the augmented triggers having an event indicator indicating an event identified in the triggers.","Preferably, the information for the interactive services are bytes, the interactive services includes a status state variable indicating whether or not the application is executed and prepared to engage in communication with the secondary application, the method further includes setting the status state variable.","Preferably, the primary application uses an API to provide interactive services.","Preferably, the API includes an address argument having information about an address and port for the bytes and a bytes argument.","Preferably, the method further comprises receiving a request for the messages of interactive services for the secondary application associated with the primary application, before the transmitting messages.","In another aspect of the present invention, provided herein is a method of processing a digital service signal including executing an application for the digital service signal, receiving messages of interactive services for the executed application, sending a request for descriptions identifying the interactive services, receiving the descriptions having service id information identifying each of the interactive services and service type information indicating a type of the each of the interactive service, accessing at least one interactive service using the descriptions, wherein the accessing further includes, subscribing to protocols for notifications for the at least one interactive service, receiving the notifications, and receiving information for the at least one interactive service using the received notifications, and downloading files for the accessed interactive service.","Preferably, the information for the at least one interactive service are defined according to the interactive services, and the information for the at least one interactive service are one of triggers, bytes and URL information.","Preferably, when the information for the discovered interactive service are triggers, wherein at least one of the triggers includes channel change information having a value for indicating changed numbers of channels of the digital service signal.","Preferably, when the information for the accessed interactive service are bytes, the method further includes, determining whether the interactive services is prepared to start or not using the received notifications, and transmitting a request for a connection for transmitting the bytes using the received notifications.","Preferably, the method further comprises sending a request for the messages of interactive services for the executed application, before the receiving messages.","In another aspect of the present invention, provided herein is an apparatus for processing a digital service signal including an executing module configured to execute a primary application for the digital service signal, wherein the primary application is a triggered application or a non-triggered application, a transmitting module configured to transmit messages of interactive services for a secondary application associated with the primary application and descriptions identifying the interactive services, wherein the interactive services includes a first mode related to the triggered application or a second mode related to the non-triggered application, wherein the description is transmitted according a request, a receiving module configured to receive the request for the descriptions having service id information identifying each of the interactive services and service type information indicating a type of the each of the interactive services, and a providing module configured to provide the interactive services by transmitting information for the interactive services.","Preferably, the information for the interactive services are defined according to the each of the interactive services, and the information for the interactive services are one of triggers, bytes and URL information.","Preferably, when the information for the interactive services are triggers, at least one of the triggers includes channel change information having a value for indicating changed numbers of channels of the digital service signal.","Preferably, when the information for the interactive services are triggers, further includes an augmenting module configured to augment the triggers by combining with information in a TPT, wherein the TPT contains metadata about the triggered application, wherein the transmitting module further transmits the augmented triggers having an event indicator indicating an event identified in the triggers.","Preferably, the information for the interactive services are bytes, the interactive services includes a status state variable indicating whether or not the application is executed and prepared to engage in communication with the secondary application, the method further includes setting the status state variable.","Preferably, the primary application uses an API to provide interactive services.","Preferably, the API includes an address argument having information about an address and port for the bytes and a bytes argument.","Preferably, the receiving module further configured to receive a request for the messages of interactive services for the secondary application associated with the primary application, before the transmitting module transmits the messages.","In another aspect of the present invention, provided herein is an apparatus for processing a digital service signal including an executing module configured to execute an application for the digital service signal, a receiving module configured to receive messages of interactive services for the executed application and the descriptions, a sending module configured to send a request for descriptions identifying the interactive services, wherein the descriptions have service id information identifying each of the interactive services and service type information indicating a type of the each of the interactive service, an accessing module configured to access at least one interactive service using the descriptions, wherein the accessing module further subscribes to protocols for notifications for the at least one interactive service, receives the notifications, and receives information for the at least one interactive service using the received notifications, and a downloading module configured to download files for the accessed interactive service.","Preferably, the information for the at least one interactive service are defined according to the interactive services, and the information for the at least one interactive service are one of triggers, bytes and URL information.","Preferably, when the information for the discovered interactive service are triggers, wherein at least one of the triggers includes channel change information having a value for indicating changed numbers of channels of the digital service signal.","Preferably, when the information for the accessed interactive service are bytes, an accessing module further determines whether the interactive services is prepared to start or not using the received notifications, and transmits a request for a connection for transmitting the bytes using the received notifications.","Preferably, the sending module further configured to send a request for the messages of interactive services for the executed application, before the receiving module receives the messages.","It is to be understood that both the foregoing general description and the following detailed description of the present invention are exemplary and explanatory and are intended to provide further explanation of the invention as claimed.","Reference will now be made in detail to the preferred embodiments of the present invention, examples of which are illustrated in the accompanying drawings. Wherever possible, the same reference numbers will be used throughout the drawings to refer to the same or like parts.","Although the terms used in the present invention are selected from generally known and used terms, terms used herein may be variable depending on operator's intention or customs in the art, appearance of a new technology, or the like. In addition, some of the terms mentioned in the description of the present invention have been selected by the applicant at his or her discretion, the detailed meanings of which are described in relevant parts of the description herein. Furthermore, it is required that the present invention is understood, not simply by the actual terms used but by the meanings of each term lying within.","In the present specification, the term media time stands for a parameter referencing a point in the playout of an audio\/video or audio content item. ACR stands for Automatic Content Recognition. AMT stands for Activation Messages Table. API stands for Application Programming Interface. DAE stands for Declarative Application Environment. DO stands for Declarative Object. FLUTE stands for File Delivery over Unidirectional Transport. GPS stands for Global Positioning System. HTTP stands for Hypertext Transfer Protocol. IP stands for Internet Protocol. IPTV stands for Internet Protocol Television. iTV stands for Interactive Television. MIME stands for Internet Media Type. NDO stands for NRT Declarative Object. NRT stands for Non-Real Time. SMT stands for Service Map Table. SSC stands for Service Signaling Channel. TDO stands for Triggered Declarative Object. TPT stands for TDO Parameters Table. UDO stands for Unbound Declarative Object. UPnP stands for User Plug and Play. URI stands for Uniform Resource Identifier. URL stands for Uniform Resource Locator. XML stands for eXtensible Markup Language. TFT stands for Text Fragment Table. Details thereof will be described below.","In this specification, DO, TDO, NDO, UDO, Link and Packaged App have the following meanings.","DO (Declarative Object) can be a collection constituting an interactive application. (For example, HTML, JavaScript, CSS, XML and multimedia files)","The term \u201cTriggered Declarative Object\u201d (TDO) is used to designate a Declarative Object that has been launched by a Trigger in a Triggered interactive adjunct data service, or a DO that has been launched by a DO that has been launched by a Trigger, and so on iteratively.","The term \u201cNRT Declarative Object\u201d (NDO) is used to designate a Declarative Object that has been launched as part of an NRT service that is not a Triggered interactive data service.","The term \u201cUnbound Declarative Object\u201d (UDO) is used to designate a Declarative Object that is not bound to a service, such as a Packaged App or a DO launched by a Link, or a DO that has been launched by such a DO, and so on iteratively.","The \u201cLink\u201d is a broadcaster-provided URL that points to a web site which provides on-line information or functionality related to the current TV programming or NRT service.","The \u201cPackaged App\u201d is a broadcaster-provided Declarative Object (DO) that provides information or functionality which the broadcaster wants to offer viewers, and that is packaged up into a single file for viewers to download and install.","Details thereof will be described below.","In this specification, a time base message includes a time base trigger and an equivalent thereof. Accordingly, the term \u201ctime base message\u201d may be used interchangeably with the term \u201ctime base trigger\u201d.","In this specification, an activation message includes all information delivery causing activation, such as an activation element in an AMT and\/or an activation trigger.",{"@attributes":{"id":"p-0169","num":"0168"},"figref":"FIG. 1"},"A typical broadcast stream includes a sequence of TV programs. Each TV program includes an underlying show, which is typically broken up into blocks separated by ads and\/or other interstitial material.","In , Segment of Show A, Ad1, Ad2, Segment of Show B, etc. are sequentially included in the broadcast stream. Segments configuring each show may be referred to as show content and Ads may be referred to as interstitial content.","Each show or piece of interstitial material might or might not have an interactive adjunct data service associated with it.","The term \u201cinteractive service segment,\u201d or just \u201csegment,\u201d will be used in this specification to refer to a portion of an interactive adjunct service that is treated by the broadcaster as an integrated unit. An interactive service segment is typically, but not necessarily, associated with a single show or a single piece of interstitial material.","In order to execute such an interactive adjunct data service, there are two models: Direct execution model and triggered declarative object (TDO) model.","In the direct execution model, a declarative object (DO) can be launched automatically as soon as the virtual channel is selected. It can communicate over the Internet with a backend server to get detailed instructions for providing interactive features\u2014creating displays in specific locations on the screen, conducting polls, launching other specialized DOs, etc., all synchronized with the audio-video program.","In the TDO model, signals can be delivered in the broadcast stream or via the Internet in order to initiate TDO events, such as launching a TDO, terminating a TDO, or prompting some task by a TDO. These events can be initiated at specific times, typically synchronized with the audio-video program. When a TDO is launched, it can provide the interactive features it is programmed to provide.","A basic concept behind the TDO model is that the files that make up a TDO, and the data files to be used by a TDO to take some action, all need some amount of time to be delivered to a receiver, given their size. While the user experience of the interactive elements can be authored prior to the broadcast of the content, certain behaviors must be carefully timed to coincide with events in the program itself, for example the occurrence of a commercial advertising segment.","The TDO model separates the delivery of declarative objects and associated data, scripts, text and graphics from the signaling of the specific timing of the playout of interactive events.","The element that establishes the timing of interactive events is the Trigger.","The information about the TDOs used in a segment and the associated TDO events that are initiated by Triggers is provided by a data structure called the \u201cTDO Parameters Table\u201d (TPT).",{"@attributes":{"id":"p-0181","num":"0180"},"figref":"FIG. 2"},"Trigger is a signaling element whose function is to identify signaling and establish timing of playout of interactive events.","The trigger includes a time base trigger which serves to indicate a media time of a segment related to an interactive service and an activation trigger which serves to indicate an event occurrence time of an application related to an interactive service.","Triggers can perform various timing-related signaling functions in support of interactive services. Triggers can be multi-functional; depending on their structure, a particular Trigger instance can perform one or more of the following functions:","1. Signal the location of a TPT (accessible via a FLUTE session in the emission stream, via an Internet server, or both);","2. Indicate that interactive content for an upcoming program segment is available to be pre-loaded;","3. Indicate the current Media Time of associated audio\/video or audio-only content;","4. Reference a particular interactive event in a TPT and signal that the event is to be executed now or at a specified future Media Time;","5. Indicate that accesses to an Internet server are to be spread out randomly over a specified time interval in order to avoid a peak in demand.",{"@attributes":{"id":"p-0190","num":"0189"},"figref":"FIG. 2"},"As shown, a short time prior to the occurrence of programming segment 1, a \u201cpre-load\u201d Trigger can be delivered to allow receivers an opportunity to acquire the TPT and interactive content associated with programming segment 1. If a pre-load Trigger is not transmitted, receivers can be expected to use the first Trigger they see within the segment to acquire the content.","Triggers can be sent throughout segment 1, as shown, to indicate the current Media Time (labeled \u201cm\u201d in the figure) relative to the segment. Periodic delivery of Media Time Triggers can be necessary to allow receivers who are just encountering the channel to synchronize and acquire the interactive content.","Just prior to the beginning of segment 2, a pre-load Trigger for that upcoming segment is sent.","In the case of pre-produced content (non-live), the TPT that the receiver can acquire after processing the first Trigger can define the timing of all elements of the interactive experience for that segment. All that is needed for the receiver and TDO to play out the interactive elements can be the knowledge of the media timing; the TPT can describe interactive events relative to Media Time.",{"@attributes":{"id":"p-0195","num":"0194"},"figref":"FIG. 3"},"For the case of live content, the TPT still contains data and information pertinent to different interactive events, however the timing of playout of those events cannot be known until the action in the program unfolds during the broadcast. For the live case, the \u201cevent-timing\u201d function of the Trigger is utilized. In this mode, the Trigger can signal that a specified interactive event is to be re-timed to a specified new value of Media Time. Alternatively, the Trigger can indicate that a certain event is to be executed immediately.","In , the functions of triggers of segment 3 will now be described.","A first trigger is a pre-load trigger, which refers to a directory capable of files of segment 3.","A second trigger is a media time trigger which is used to indicate the playout timing of segment 3.","A third trigger is an event re-timing trigger and indicates that the event with eventID=2 in the TPT is to be re-timed to occur at Media Time . The hatched area indicates the time interval prior to 240 over which Trigger #3 may be delivered to receivers.","A fourth trigger is a media time trigger.","A fifth trigger is an event re-timing trigger and indicates that the event with eventID=5 in the TPT is to be re-timed to occur at Media Time .","A sixth and seventh triggers are media time triggers.","An eighth trigger is an event Trigger and indicates that the event with eventID=12 in the TPT is to be executed immediately.","A ninth trigger is an event re-timing Trigger and indicates that the event with eventID=89 in the TPT is to be re-timed to occur at Media Time .","Hereinafter, the life cycle, state and state changing event of the TDO will be described.","A TDO can exist in four different states: Released, Ready, Active and Suspended. A number of different factors can cause a transition from one state to another (trigger, user action, changing channels, etc.).","The TDO may include the following four states. The four states are Ready, Active, Suspended and Released. Ready state means that TDO is downloaded and prepared for execution, but not yet executing. Active state means that TDO is executing. Suspended state means that TDO is temporarily suspended from execution, with its state saved. Released state means that TDO is not Ready, Active or Suspended.","The followings are some of the events that can cause a change of state for a TDO:","1. Trigger \u201cprepare\u201d\u2014Device receives a trigger (in the currently selected primary virtual channel) which requests that the TDO be prepared to execute (allocate resources, load into main memory, etc.)","2. Trigger \u201cexecute\u201d\u2014Device receives a trigger (in the currently selected primary virtual channel) which requests that the TDO be activated","3. Trigger \u201csuspend\u201d\u2014Device receives a trigger (in the currently selected primary virtual channel) which directs that the TDO be suspended","4. Trigger \u201ckill\u201d\u2014Device receives a trigger (in the currently selected primary virtual channel) which directs that the TDO be terminated",{"@attributes":{"id":"p-0214","num":"0213"},"figref":"FIG. 4"},"Both Activation messages and Time Base messages can have the general \u201cTrigger\u201d format under certain delivery circumstances.","The syntactic definition here is described using the Augmented Backus-Naur Form (ABNF) grammar, except that the vertical bar symbol \u201c|\u201d is used to designate alternatives. Rules are separated from definitions by an equal \u201c=\u201d, indentation is used to continue a rule definition over more than one line, literals are quoted with \u201c \u201d, parentheses \u201c(\u201d and \u201c)\u201d are used to group elements, optional elements are enclosed in \u201c[\u201d and \u201c]\u201d brackets, and elements may be preceded with <n>* to designate n or more repetitions of the following element; n defaults to 0. And elements may be preceded with <n>*<m> designate n or more repetitions and m or less repetitions of the following element.","This Trigger syntax is based on the Uniform Resource Identifier (URI): Generic Syntax, excluding the <scheme> and \u201c:\/\/\u201d portion, with additional restrictions.","The trigger may include locator_part and terms. Terms may be omitted. If terms are present, locator_part and terms may be connected by \u2018\/\u2019.","The locator_part may include a hostname part and a path_segments part, which may be connected by \u2018\/\u2019.","The hostname may include domainlabel and toplabel, and domainlabel may be repeated 0 times or more along with \u2018.\u2019. That is, hostname may include repeated domainlabel connected with toplabel or include only toplabel.","domainlabel may include one alphanum or include alphanum or \u201c-\u201d repeatedly inserted between alphanum and alphanum 0 times or more.","Here, alphanum may mean alpha or digit.","Here, alpha may be one of lowalpha or upalpha.","Here, lowalpha may be one of a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, and z.","Here, upalpha may be one of A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, and Z.","Here, digit may be one of 0, 1, 2, 3, 4, 5, 6, 7, 8, and 9.","toplabel includes one alpha or include alphanum or \u201c-\u201d repeatedly inserted between alpha and alphanum 0 times or more.","path_segments includes one segment, which is followed by segment repeated 0 times or more. At this time, segments may be connected by \u2018\/\u2019.","Here, segment includes alphanum which is repeated once or more.","Terms may include one of event_time or media_time, which may be followed by spread or others. Spread and others may be omitted. If spread and others are present, \u2018&\u2019 may be placed ahead of spread and others and spread and others may be placed after event_time or media_time.","Here, spread may include digit repeated once or more after \u2018s=\u2019.","Event_time may include digit repeated once or more after \u2018e=\u2019 or include hexdigit repeated once or more or seven times or less after \u2018&t=\u2019. \u2018&t=\u2019 and the back part thereof may be omitted.","Here, hexdigit may be one of 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, a, b, c, d, e and f.","Media_time may include hexdigit repeated once or more or less than seven times after \u2018m=\u2019.","Others may include one \u201cother\u201d or \u201cother\u201d followed by \u2018&\u2019 and \u201cother\u201d.","Here, other may include resv_cmd and alphanum which are repeated once or more and are connected by \u2018=\u2019.","Here, resv_cmd may be alphanum excluding \u2018c\u2019, \u2018e\u2019, \u2018E\u2019, \u2018m\u2019, \u2018M\u2019, \u2018s\u2019, \u2018S\u2019, \u2018t\u2019, and \u2018T\u2019.","The length of the trigger may not exceed 52 bytes. In addition, the hostname portion of the Trigger can be a registered Internet domain name.","A Trigger can be considered to include three parts.","<domain name part>\/<directory path>[?<parameters>]","The <domain name part> can be a registered domain name, <directory path> can be a path as it would appear in a URI.","The <domain name part> can reference a registered Internet domain name. The <directory path> can be an arbitrary character string identifying a directory path under the control and management of the entity who owns rights to the identified domain name.","In the TDO model, the combination of <domain name part> and <directory path> can uniquely identify a TPT that can be processed by a receiver to add interactivity to the associated content.","The combination of <domain name part> and <directory path> can be the URL of an Internet location where the TPT for the current segment can be obtained.","That is, the trigger may identify the TPT using <domain name part> and <directory path>. Through <domain name part> and <directory path>, it is possible to confirm the TPT to which the trigger applies. The role performed by applying the trigger to the TPT depends on <parameters>.","Hereinafter, <parameters> will be described.","<parameters> may include one or more of \u201cevent_time\u201d, \u201cmedia_time\u201d, or \u201cspread\u201d","Next, \u201cevent_time\u201d, \u201cmedia_time\u201d and \u201cspread\u201d of the syntax shown in  will be described.","event_time=\u201ce=\u201d 1*digit [\u201c&t=\u201d 1*7hexdigit]","media_time=\u201cm=\u201d 1*7hexdigit","spread=\u201cs=\u201d 1*digit","The \u201cevent_time\u201d term can be used in an Activation trigger to identify the targeted event (\u201ce=\u201d term) and the time the event should be activated (\u201ct=\u201d term). When the \u201ct=\u201d term is absent, that means the event should be activated at the time the trigger arrives.","That is, \u201ce=\u201d, which is an interactive event ID term, can reference the appID in the associated TPT of the TDO targeted by the event, the eventID of the specific event, and the dataID of the Data element to be used for this event activation.","\u201ct=\u201d, which is an optional timing value term, can indicate a new media timing for the designated event. If the \u201ct=\u201d part is not present, that can mean the timing for the designated event is the arrival time of the Trigger.","The \u201cmedia_time\u201d term (\u201cm=\u201d term) can be used in a Time base trigger to identify the current time relative to the time base represented by the Time base trigger. Content identifier information (\u201cc=\u201d term) for identifying currently displayed content may be further included in media_time. For \u201cc=\u201d term, the direct execution model will be described below.","That is, \u201cm=\u201d, which is a media timestamp term, followed by a character string of 1 to 8 characters in length representing a hexadecimal number, can indicate the current Media Time.","The \u201cspread\u201d term can be used to indicate that any action taken in response to a Time base trigger (such as retrieving a TPT from a server) or an Activation trigger (such as causing a TDO to access a server) should be delayed a random amount of time, to spread out the workload on the server.","\u201cs=\u201d term can indicate the number of seconds of time over which all receivers should attempt to access the Internet server identified in the Trigger. Each individual receiver can be expected to derive a random time within the designated interval and delay the access request by that amount, thereby spreading in time the peak in demand that might otherwise occur at the first appearance of a Trigger at the receiver.","A Trigger containing a <media time> parameter can be called a Time base trigger, since it is used to establish a time base for event times.","A Trigger containing an <event time> parameter can be called an Activation Trigger, since it sets an activation time for an event.",{"@attributes":{"id":"p-0261","num":"0260"},"figref":["FIG. 5","FIG. 6"]},"A TDO Parameters Table (TPT) contains metadata about the TDOs of a segment and the Events targeted to them.","Hereinafter, fields included in the table will be described. The sizes of the fields and the types of the fields included in the table may be added or changed according to designer's intention.","The detailed semantics of the fields in the TPT structure is as follows.","TDO parameter table (TPT) may include @majorProtocolVersion, @minorProtocolVersion, @id, @tptVersion, @expireDate, @updatingTime, @serviceID, @baseURL attributes, Capabilities, LiveTrigger, and\/or TDO element.","TPT is the root element of the TPT. One TPT element describes all or a portion (in time) of one programming segment.","MajorProtocolVersion which can be 4-bit attribute can indicate the major version number of the table definition. The major version number can be set to 1. Receivers are expected to discard instances of the TPT indicating major version values they are not equipped to support.","When present, @MinorProtocolVersion which can be 4-bit attribute can indicate the minor version number of the table definition. When not present, the value defaults to 0. The minor version number can be set to 0. Receivers are expected to not discard instances of the TPT indicating minor version values they are not equipped to support. In this case they are expected to ignore any individual elements or attributes they do not support.","@id, which is URI, can uniquely identify the interactive programming segment which This TPT element pertains to. @id serves as an identifier of a segment. Accordingly, after a receiver parses the TPT, a trigger, an AMT, etc. related to one segment may match the TPT having @id for identifying the segment using @id information. Accordingly, a segment to which the trigger and the AMT will apply may be found. The details of the AMT will be described below.","@tptVersion, which can be 8-bit integer, can indicate the version number of the TPT element identified by the id attribute. The tptVersion can be incremented whenever any change is made to the TPT.","When present, @expireDate attribute of the TPT element can indicate the date and time of the expiration of the information included in this TPT instance. If the receiver caches the TPT, it can be re-used until the expireDate.","When present, @updatingTime which can be 16-bit element can indicate that the TPT is subject to revision, and it gives the recommended interval in seconds to download the TPT again and check whether the newly downloaded TPT is a new version.","When present, @serviceID which can be 16-bit integer can indicate the NRT service_id associated with the interactive service described in this TPT instance. This is needed for receivers to get FLUTE parameters from the Service Map Table when files for this interactive service are delivered in the broadcast stream.","When present, @baseURL attribute can give a base URL which, when concatenated onto the front of any relative URLs that appear in this TPT. It can give the absolute URLs of the files.","When present, Capabilities element can indicate capabilities that are essential for a meaningful presentation of the interactive service associated with this TPT. Receivers that do not have one or more of the required capabilities are expected not to attempt to present the service.","LiveTrigger element presents if and only if delivery of Activation Triggers via Internet is available. When present, it can provide information needed by a receiver to obtain the Activation Triggers. The child element and attribute of LiveTrigger will be described below.","TDO which is a child element of the TPT element can represent an application (for example, a TDO), that provides part of the interactive service during the segment described by this TPT instance. The child element and attribute of TDO will be described below.","LiveTrigger element may include @URL and\/or @pollPeriod attribute.","As described above, LiveTrigger element presents if and only if delivery of Activation Triggers via Internet is available. When present, it can provide information needed by a receiver to obtain the Activation Triggers.","@URL, which is an attribute of the LiveTrigger element, can indicate the URL of a server that can deliver Activation Triggers via Internet. Activation Triggers can be delivered via Internet using HTTP short polling, HTTP long polling, or HTTP streaming, at the option of the interactive service provider.","When present, @pollPeriod, which is an attribute of the LiveTrigger element, can indicate that short polling is being used to deliver Activation Triggers, and the value of the pollPeriod attribute can indicate the recommended time in seconds for the receiver to use as a polling period.","If LiveTrigger element is present, the receiver may parse the TPT and obtain information used to deliver the activation trigger using the Internet. The URL of the server which may receive the activation trigger may be used using @URL information. Through @pollPeriod information or information indicating that @pollPeriod attribute is not present, a method of delivering the activation trigger via the Internet and information about the polling period may be obtained. @pollPeriod will be described in detail below.","TDO element may include @appID, @appType, @appName, @globalID, @appVersion, @cookieSpace, @frequencyOfUse, @expireDate, @testTDO, @availInternet, @availBroadcast attribute, URL, Capabilities, Contentitem, and\/or Event element.","As described above, TDO which is a child element of the TPT element can represent an application (for example, a TDO), that provides part of the interactive service during the segment described by this TPT instance.","@appID, which can be 16-bit integer, can identify the application uniquely within the scope of the TPT. An Activation Trigger identifies the target application for the Trigger by means of a reference to the appID. @appID is an identifier of an application. One TPT may include several applications (such as TDO). Accordingly, after parsing the TPT, the application may be identified using @appID information. The trigger, AMT, etc. which will apply to one application may match an application having @appID for identifying the application. Accordingly, the application to which the trigger and the AMT will apply may be found. The AMT will be described in detail below.","@appType, which can be 8-bit integer, can indicate the application format type. The default value can be 1, which can represent a TDO. Other values can represent other formats.","@appName, which is attribute of the TDO element, can be a human readable name which can be displayed to a viewer when a viewer's permission is sought to launch the application.","@globalID, which is attribute of the TDO element, can be a globally unique identifier of the application. In many cases a receiver will cache an app that is going to be used again before too long. In order for this to be useful, the receiver must be able to recognize the app the next time it appears. A globalID is needed for the receiver to be able to recognize the app when it appears again in a new segment.","@appVersion, which is attribute of the TDO element, can be the version number of the application. The appVersion value can be incremented whenever the application (as identified by the globalID) changes. The appVersion attribute cannot be present if the globalID attribute is not present.","@cookieSpace, which can be 8-bit integer, can indicate how much space the application needs to store persistent data between invocations.","@frequencyOfUse, which can be 4-bit integer, can indicate approximately how frequently the application will be used in the broadcast, to provide guidance to receivers on managing their application code cache space. \u2018@frequencyOfUse\u2019 will be described in detail below.","@expireDate, which is attribute of the TDO element, can indicate a date and time after which the receiver can safely delete the application and any related resources.","When present with value \u201ctrue\u201d, @testTDO, which is Boolean attribute, can indicate that the application is for testing purposes only, and that it can be ignored by ordinary receivers.","The value \u201ctrue\u201d for @availInternet attribute can indicate that the application is available for downloading over the Internet. The value \u201cfalse\u201d can indicate that the application is not available for downloading over the Internet. When the attribute is not present, the default value can be \u201ctrue\u201d.","The value \u201ctrue\u201d for @availBroadcast attribute can indicate that the application is available for extraction from the broadcast. The value \u201cfalse\u201d can indicate that the application is not available for extraction from the broadcast. When the attribute is not present, the default value can be \u201ctrue\u201d.","Each instance of URL, a child element of the TDO element, can identify a file which is part of the application. URL element may include @entry attribute. @entry, an attribute of the URL element, has value \u201ctrue\u201d, that can indicate that the URL is an entry point for the application\u2014i.e., a file that can be launched in order to launch the application. When it has value \u201cfalse\u201d, that can indicate that the URL is not an entry point for the application. The default value when the attribute does not appear can be \u201cfalse\u201d. The URL element which is the child element of the TDO element identifies a file configuring the application as described above. The receiver parses the TPT to obtain URL information, accesses the server using the URL information, and downloads an application indicated by the URL information.","When present, Capabilities, which is child element of the TDO element, can indicate capabilities that are essential for a meaningful presentation of this application. Receivers that do not have one or more of the required capabilities are expected not to attempt to present launch the application.","ContentItem, a child element of the TDO element, can indicate a content item including one or more data files that are needed by the application. ContentItem element has information about data files required by an application indicated by the TDO element to which this element belongs. The receiver may download data files required by the application using URL information, etc. of ContentItem, if the ContentItem element is present after parsing. The child element and attribute of ContentItem will be described below.","Event, a child element of the TDO element can represent an event for the application. Event element indicates an event of an application to which this element belongs. The event element contains information indicating which events are present, which data is present, which action is present, etc. The receiver may parse the event element to obtain information about the event of the application. The child element and attribute of the event will be described below.","The receiver may receive and parse the TPT to obtain the child element of the TDO and the information about attributes.","ContentItem element which is the child element of the TDO element may include @updateAvail, @pollPeriod, @size, @availInternet, @availBroadcast attribute and\/or URL element.","Here, URL element may include @entry attribute. Each instance of URL, a child element of the ContentItem element, can identify a file which is part of the content item. URL element may include @entry attribute. @entry, an attribute of the URL element, has value \u201ctrue\u201d, that can indicate that the URL is an entry point for the content item\u2014i.e., a file that can be launched in order to launch the content item. When it has value \u201cfalse\u201d, that can indicate that the URL is not an entry point for the content item. The default value when the attribute does not appear can be \u201cfalse\u201d. The receiver may download data files required by the application using URL information of ContentItem after parsing. In this process, the information such as the above-described other attributes may be used.","@updatesAvail, which is a boolean attribute of the ContentItem element, can indicate whether or not the content item will be updated from time to time\u2014i.e., whether the content item includes static files or whether it is a real-time data feed. When the value is \u201ctrue\u201d the content item will be updated from time to time; when the value is \u201cfalse\u201d the content item will not be updated. The default value when this attribute does not appear can be false.","@pollPeriod, which is an attribute of the ContentItem element, may be present only when the value of the updatesAvail attribute is \u201ctrue\u201d. The presence of the pollPeriod attribute can indicate that short polling is being used to deliver Activation Triggers, and the value of the pollPeriod attribute can indicate the recommended time in seconds for the receiver to use as a polling period.","@Size, which is an attribute of the ContentItem element, can indicate the size of the content item.","The value \u201ctrue\u201d for @availInternet attribute can indicate that the content item is available for downloading over the Internet. The value \u201cfalse\u201d can indicate that the content item is not available for downloading over the Internet. When this attribute is not present, the default value can be \u201ctrue.\u201d","The value \u201ctrue\u201d for @availBroadcast attribute can indicate that the content item is available for extraction from the broadcast. The value \u201cfalse\u201d can indicate that the content item is not available for extraction from the broadcast. When this attribute is not present, the default value can be \u201ctrue.\u201d","The event element contains information about the event of the application indicated by the TDO element to which the event element belongs. The receiver may parse the event element to obtain information about the event.","The event element which is the child element of the TDO element may include @eventID, @action, @destination, @diffusion attribute and\/or Data element. Here, the data element may include @dataID attribute.","@eventID, which can be a 16-bit integer attribute of the Event element, can identify the event uniquely within the scope of the TDO element containing it. An Activation Trigger (or activation element in AMT) can identify the target application and event for the Trigger by the combination of appID and eventID. When an event is activated, receivers pass the event in to the application. @eventID serves as an identifier of an event. Using @eventID information, a trigger, AMT, etc. for activating the event may match an application having @eventID for identifying the event. That is, an Activation Trigger (or activation element in AMT) can identify the target application and event for the Trigger by the combination of appID and eventID. When an event is activated, receivers pass the event in to the application. The AMT will be described in detail below.","@action, which is an attribute of the Event element, can indicate the type of action to be applied when the event is activated. Allowed values can be \u201cprep\u201d, \u201cexec\u201d, \u201csusp\u201d, and \u201ckill\u201d.","\u201cprep\u201d can correspond to the \u201cTrig prep\u201d action. If the state of the targeted application is \u201cReleased,\u201d this action can cause a state change to \u201cReady.\u201d","\u201cexec\u201d can correspond to the \u201cTrig exec\u201d action. The state of the targeted application can become \u201cActive\u201d upon reception of this trigger.","\u201csusp\u201d can correspond to the \u201cTrig susp\u201d action. If the state of the targeted application is \u201cActive,\u201d the state can change to \u201cSuspended\u201d upon reception of this trigger, otherwise there is no change.","\u201ckill\u201d can correspond to the \u201cTrig kill\u201d action. The state of the targeted application can become \u201cReleased\u201d upon reception of this trigger.","@action can indicate the type of action to be applied when the event is activated.","@destination, which is an attribute of the Event element, can indicate the target device for the event. @destination will be described in detail below.","When present, @diffusion, which can be an 8-bit integer attribute of the Event element, can represent a period T of time in seconds. The purpose of the diffusion parameter is to smooth peaks in server loading. The receiver can be expected to compute a random time in the range 0-T, in increments of 10 milliseconds, and delay this amount before accessing an Internet server to retrieve content referenced by URLs in the TPT.","When present, Data which is a child element of the Event element can provide data related to the event. Different activations of the Event can have different Data elements associated with them. The data element may include @dataID attribute. @dataID, which is a 16-bit integer attribute, can identify the Data element uniquely within the scope of the Event element containing it. When an activation of an event has data associated with it, the Activation Trigger can identify the Data element by the combination of AppID, EventID, and DataID. The data element indicates data used for the event. One event element may have several data elements. Data is identified using @dataID attribute of the data element. In the receiver, if the event related to the data is activated, the Activation Trigger (or activation element in AMT) can identify the Data element by the combination of AppID, EventID, and DataID. AMT will be described in detail below.",{"@attributes":{"id":"p-0320","num":"0319"},"figref":"FIG. 7"},"The \u201cMeaning\u201d column indicates the frequency of occurrence of segments that contain this application. (An attribute can appear multiple times within a single segment, of course.) The frequencyOfUse attribute cannot be present if the globalID attribute is not present. If the app is going to be cached and used again later, the receiver needs to recognize that it is the same app when it appears again. This requires the globalId attribute.",{"@attributes":{"id":"p-0322","num":"0321"},"figref":"FIG. 8"},"As shown in , the destination attribute value of 0 indicates \u201creserved\u201d, the destination attribute value of 1 indicates primary device only, the destination attribute value of 2 indicates one or more secondary devices only 2, and the destination attribute value of 3 indicates Primary device and\/or one or more secondary devices.",{"@attributes":{"id":"p-0324","num":"0323"},"figref":["FIG. 9","FIG. 10","FIG. 11","FIG. 12","FIG. 13"]},"This is the binary format of the above-described TPT structure. This structure is a format necessary when the TPT is transmitted in NRT and is made such that the XML structure of the TPT is suitably transmitted in NRT.","The following elements and\/or attributes contained in the XML version of the TPT can be omitted from the binary version, since they can be provided by the encapsulation header for delivering the binary table in the broadcast stream: @protocolVersion (major\/minor), @serviceID and\/or @tptVersion.","The semantics of the fields are as follows. Fields of the binary format of TDO parameter table of , , ,  and  will be sequentially described.","expire_date_included, which can be 1-bit field, can indicate whether the expire_date field is included. The value \u20181\u2019 can mean it is included; the value \u20180\u2019 can mean it is not included.","segment_id_length, which can be a 5-bit field, can indicate the length in bytes of the segment_id field.","segment_id, which is a variable length field, can contain the bytes of the segment id, which can have the same semantics as the \u201cid\u201d attribute of the TPT XML format.","base_URL_length, which can be a 8-bit field, can indicate the length in bytes of the base_URL field.","base_URL, which is a variable length field, can contain the bytes of the base URL, which can have the same semantics as the baseURL attribute of the TPT XML format.","When present, expire_date, which can be a 32-bit field, can indicate the date and time of the expiration of the information included in this TPT instance. If the receiver caches the TPT, it can be re-used until the expireDate. The unsigned integer can be interpreted as the number of GPS seconds since 00:00:00 UTC, 6 Jan. 1980, minus the GPS-UTC_offset. The GPS UTC offset can be an 8-bit unsigned integer that defines the current offset in whole seconds between GPS and UTC time standards.","trigger_server_URL_length, which can be an 8-bit field, can indicate the length in bytes of the trigger_server_URL field. When the value of this field is 0, it can indicate that internet delivery of individual Activation Triggers is not available.","trigger_server_URL, when the value of the trigger_server_URL_length field is not 0, can contain the bytes of the Trigger Server URL, which can have the same semantics as the URL attribute of the LiveTrigger element of the TPT XML format.","trigger_delivery_type, which can be a 1-bit field, can indicate the delivery mode of individual Activation Triggers over the Internet. The value \u20180\u2019 can indicate that HTTP short polling is being used; the value \u20181\u2019 can indicate that either HTTP long polling or HTTP streaming is being used.","poll_period, which can be an 8-bit integer, can indicate the recommended number of seconds between polls, when HTTP short polling is being used.","num_apps_in_table, which can be an 8-bit field, can indicate the number of applications (TDOs) described in this TPT instance.","app_id, which can be a 16-bit field, can contain an identifier for this application (the application described in this iteration of the num_apps_in_table loop). It can be unique within this TPT instance.","app_type_included, which can be a 1-bit field, can indicate whether the app_type field is included for this application. The value \u20181\u2019 can mean it is included; the value \u20180\u2019 can mean it is not included.","app_name_included, which can be a 1-bit field, can indicate whether the app_name field is included for this application. The value \u20181\u2019 can mean it is included; the value \u20180\u2019 can mean it is not included.","global_id_included, which can be a 1-bit field, can indicate whether the global_id field is included for this application. The value \u20181\u2019 can mean it is included; the value \u20180\u2019 can mean it is not included.","app_version_included, which can be a 1-bit field, can indicate whether the app_version field is included for this application. The value \u20181\u2019 can mean it is included; the value \u20180\u2019 can mean it is not included.","cookie_space_included, which can be a 1-bit field, can indicate whether the cookie_space field is included for this application. The value \u20181\u2019 can mean it is included; the value \u20180\u2019 can mean it is not included.","frequency_of_use_included, which can be a 1-bit field, can indicate whether the frequency_of_use field is included for this application. The value \u20181\u2019 can mean it is included; the value \u20180\u2019 can mean it is not included.","expire_date_included, which can be a 1-bit field, can indicate whether the expire_date field is included for this application. The value \u20181\u2019 can mean it is included; the value \u20180\u2019 can mean it is not included.","When present, app_type, which can be an 8-bit field, can indicate the format type of this application. The value 0 can indicate that the application is a TDO. If this field is not present, the value can default to 0. Other values can represent other formats.","When present, app_name_length, which can be an 8-bit field, can indicate the length in bytes of the app_name field immediately following it. The value 0 for this field can indicate that no app_name field is present for this application.","When present, app_name, which is a variable length field, can have the same semantics as the appName attribute of the TDO element in the TPT XML format.","When present, global_id_length, which can be an 8-bit field, can indicate the length in bytes of the global_id field immediately following it. The value 0 for this field can indicate that no global_id field is present for this application.","When present, global_id, which is a variable length field, can have the same semantics as the globalId attribute of the TDO element in the TPT XML format.","When present, app_version, which can be an 8-bit field, has the same semantics as the appVersion attribute of the TDO element in the TPT XML format.","When present, cookie_space, which can be an 8-bit field, can have the same semantics as the cookieSpace attribute of the TDO element in the TPT XML format.","When present, frequency_of_use, which can be an 8-bit field, can have the same semantics as the frequencyOfUse attribute of the TDO element in the TPT XML format.","When present, expire_date, which can be an 8-bit field, can have the same semantics as the expireDate attribute of the TDO element in the TPT XML format.","test_app, which can be a 1-bit field, can indicate whether or not this application is a test application, intended to be ignored by ordinary receivers. The value \u20181\u2019 can mean it is a test application; the value \u20180\u2019 can mean it is not a test application.","available_on_internet, which can be a 1-bit field, can indicate whether or not this application is available via the Internet or not. The value \u20181\u2019 can mean it is available via the Internet; the value \u20180\u2019 can mean it is not available via the Internet.","available_in_broadcast, which can be a 1-bit field, can indicate whether or not this application is available via the broadcast or not. The value \u20181\u2019 can mean it is available via the broadcast; the value \u20180\u2019 can mean it is not available via the broadcast. number_URLs, which can be a 4-bit field, can indicate the number of files that comprise this application.","URL_length, which can be an 8-bit field, can indicate the length of the URL field following it.","URL, which is a variable length field, can have the same semantics as the URL attribute of the TDO element in the TPT XML format.","number_content_items, which can be an 8-bit field, can indicate the number of content items that are to be downloaded for use by this application.","updates_avail, which can be a 1-bit field, can indicate whether this content item will be updated from time to time\u2014i.e., whether it a set of static files or a real-time data feed. The value \u20181\u2019 can indicate that it will be updated; the value \u20180\u2019 can indicate that it will not be updated.","avail_internet, which can be a 1-bit field, can indicate whether the file(s) that comprise this content item can be downloaded via the Internet or not. The value \u20181\u2019 can mean that they are available for downloading via the Internet; the value \u20180\u2019 can mean they are not available.","avail_broadcast, which can be a 1-bit field, can indicate whether the file(s) that comprise this content item can be downloaded via the broadcast or not. The value \u20181\u2019 can mean that they are available for downloading via the broadcast; the value \u20180\u2019 can mean they are not available.","content_size_included, which can be a 1-bit field, can indicate whether or not the content_size field is included or not for this application. The value \u20181\u2019 can mean it is included; the value \u20180\u2019 can mean it is not included.","number_URLs, which can be a 4-bit field, can indicate the number of files that comprise this content item.","URL_length, which can be an 8-bit field, can indicate the length of the URL field following it.","URL, which is a variable length field, can have the same semantics as the URL attribute of the ContentItem, child element of the TDO element in the TPT XML format.","content_size, which can be a 24-bit field, can have the same semantics as the contentSize attribute of the ContentItem child element of the TDO element in the TPT XML format.","num_content_descriptors, which can be an 8-bit field, can indicate the number of content descriptors in the descriptor loop immediately following it.","content_descriptor( ), which is a variable length field, can be a descriptor conforming to the MPEG-2 descriptor format (tag, length, data). It can provide additional information about this content item. Among the descriptors that may be included in this descriptor loop can be the Capabilities descriptor, indicating receiver capabilities needed for a meaningful presentation of this content item.","number_events, which can be an 8-bit field, can indicate the number of events defined for this TDO.","event_id, which can be a 16-bit field, can contain an identifier for this event (the event described in this iteration of the number_events loop). It can be unique within the scope of this application. The event can be referenced within Activation Triggers by the combination of app_id and event_id.","action, which can be a 5-bit field, can have the same semantics as the action attribute of the Event child element of the TDO element in the TPT XML format.","destination_included, which can be a 1-bit field, can indicate whether or not the destination field is included for this event. The value \u20181\u2019 can indicate that it is included; the value \u20180\u2019 can indicate that it is not included.","diffusion_included, which can be a 1-bit field, can indicate whether or not the diffusion field is included for this event. The value \u20181\u2019 can indicate that it is included; the value \u20180\u2019 can indicate that it is not included.","data_included, which can be a 1-bit field, can indicate whether or not the data_size and data_bytes fields are included for this event. The value \u20181\u2019 can indicate that they are included; the value \u20180\u2019 can indicate that they are not included.","When present, the semantics of destination field can be the same as the semantics of the destination attribute of the Event child element of the TDO element in the TPT XML format.","When present, the semantics of diffusion field can be the same as the semantics of the diffusion attribute of the Event child element of the TDO element in the TPT XML format.","When present, the data_size field can indicate the size of the data_bytes field immediately following it.","When present, the data_bytes field can provide data related to this event. Whenever the event is activated, the target application will be able to read the data and use it to help carry out the desired action. The content of this field can be identical to the content of the corresponding Data child element of the corresponding Event child element of the corresponding TDO element in the TPT XML format, except that this field can contain the raw binary value, and the Data element in the TPT XML format can contain a base64 encoding of the binary value.","num_app_descriptors, which can be an 8-bit field, can indicate the number of descriptors in the descriptor loop immediately following it.","app_descriptor( ), which is a variable length field, can be a descriptor conforming to the MPEG-2 descriptor format (tag, length, data). It can provide additional information about this application (TDO). Among the descriptors that may be included in this descriptor loop is the Capabilities descriptor, indicating receiver capabilities needed for a meaningful presentation of this application.","num_TPT_descriptors, which can be an 8-bit field, can indicate the number of descriptors in the descriptor loop immediately following it.","TPT_descriptor( ), which is a variable length field, can be a descriptor conforming to the MPEG-2 descriptor format (tag, length, data). It can provide additional information about this TPT. Among the descriptors that may be included in this descriptor loop is the Capabilities descriptor, indicating receiver capabilities needed for a meaningful presentation of the interactive service represented by this TPT.",{"@attributes":{"id":"p-0386","num":"0385"},"figref":"FIG. 14"},"An Activation Messages Table (AMT) can contain the equivalent of the Activation Triggers for a segment. Under certain circumstances it can be delivered to receivers in lieu of Activation Triggers. A trigger can be delivered in the closed caption stream, by ACR servers, by a \u201clive trigger\u201d server, and via AMT.","The detailed semantics of the fields in the AMT structure is as follows:","An Activation Messages Table (AMT) may include @majorProtocolVersion, @minorProtocolVersion, @segmentId, @beginMT attribute and\/or Activation element.","@majorProtocolVersion, which can be a 4-bit attribute of the AMT element, can indicate the major version number of the AMT definition. The major version number can be set to 1. Receivers can be expected to discard instances of the AMT indicating major version values they are not equipped to support.","When present, @minorProtocolVersion, which can be a 4-bit attribute of the AMT element, can indicate the minor version number of the AMT definition. When not present, the value can default to 0. The minor version number can be set to 0. Receivers can be expected to not discard instances of the AMT indicating minor version values they are not equipped to support. In this case they can be expected to ignore any individual elements or attributes they do not support.","@segmentID, which is an identifier of the AMT, matches the identifier of the TPT which contains the applications and events to which the Activations in this AMT apply. @segmentId may serve as an identifier of the AMT. Accordingly, the receiver may receive and parse the AMT to identify the AMT via @segmentId information. @segmentId contains information indicating to which segment the AMT applies, matches @id of the TPT related to the segment, and serves to connect the AMT and the TPT. Further, the segment may be identified to provide basic information necessary to identify the target TDO and the event of the activation element of the AMT.","When present, @beginMT, which is an attribute of the AMT element, can indicate the beginning Media Time of the segment for which this AMT instance provides activation times. @beginMT may indicate beginning of the media time with respect to a segment to which the AMT will apply. Therefore, it is possible to decide a criterion of a time when activation indicated by the activation element occurs. Accordingly, if @beginMT is present, @startTime attribute in the activation element may be influenced by the beginning of the media time indicated by @beginMT.","Each instance of Activation element of the AMT can represent a command to activate a certain event at a certain time, with certain data associated with the event. A plurality of activation elements may be present in the AMT. Each activation element performs a role similar to that of the activation trigger. The activation element may apply to the segment indicated by @segmentId in the AMT. Attributes of the activation element may contain information about in which application activation occurs, in which event activation occurs, when activation occurs, etc. Attributes of the activation element will be described in detail below.","The activation element may include @targetTDO, @targetEvent, @targetData, @startTime and\/or @endTime attribute.","@targetTDO, which is an attribute of the Activation element, can match the appID attribute of a TDO element in the TPT with which the AMT is associated, thereby identifying the target application for the activation command @targetTDO may contain information to which application the activation element of the AMT applies. The receiver may receive and parse the AMT to obtain @targetTDO and find @appID in the TDO element of the matching TPT to identify the application to which the activation element will apply.","@targetEvent, which is an attribute of the Activation element, can match the eventID attribute of an Event element contained in the TDO element identified by the targetTDO attribute, thereby identifying the target event for the activation command @targetEvent may contain information to which event of which application the activation element of the AMT applies. The receiver may receive and parse the AMT to obtain @targetEvent and find @eventID in the TDO element of the matching TPT to identify the event to which the activation element will apply.","@targetData, which is an attribute of the Activation element, can match the dataID attribute of a Data element contained in the Event element identified by the targetTDO and targetEvent attributes, thereby identifying the Data that is to be associated with the target event when the activation command applies. @targetData may identify data related to the target event when the activation command applies. The receiver may receive and parse the AMT to obtain @targetData and find @dataID in the event element of the TPT.","@startTime, which is an attribute of the event element, can indicate the start of the valid time period for the event relative to Media Time. Receivers can be expected to execute the command when Media Time reaches the value in startTime, or as soon thereafter as possible. @startTime may indicate a start time when the event occurs. This start time is based on the media time. The receiver may parse the AMT to obtain @startTime information and confirm the time when the event occurs using @startTime. The receiver may activate the event if the media time reaches the startTime based on the media time of the segment identified by @segmentId. If startTime has been already elapsed, the event may be activated as soon as possible.","When present, @endTime, which is an attribute of the event element, can indicate the end of the valid time period for the event relative to Media Time. The receiver can be expected to not execute the command when Media Time is past the value in endTime. @endTime may indicate the end time of the event. If the media time reaches the endTime, the receiver may not perform the event.","The Activation elements in the AMT can appear in order of ascending startTime values.","When a receiver is activating events according to the Activations in an AMT, it can be expected to apply each activation at its startTime, or as soon thereafter as possible (for example, in the case when a receiver joins the service and receives the AMT at some time after the startTime and before the endTime). If the \u201caction\u201d attribute of the event element in TPT is \u201cexec\u201d, then the receiver can be expected to pass a TriggerEvent in to the target application. TriggerEvent will be described below in the part related to the API.",{"@attributes":{"id":"p-0403","num":"0402"},"figref":"FIG. 15"},"A URL List can contain certain URLs of potential use to a receiver. The URL list may include the following URLs, etc.","1. URL for TPTs for one or more future segments, allowing a receiver to pre-download files.","2. URL of an NRT Signaling Server from which information about stand-alone NRT services in the broadcast stream can be retrieved, allowing a receiver to access those services even if it does not have access to delivery of NRT service signaling in the broadcast stream.","3. URL of a Usage Reporting Server to which usage reports can be sent for a virtual channel, allowing a receiver to send in such reports even if it does not have access to delivery of this URL in the broadcast stream.","4. URL of the PDI-Q Table for a virtual channel, allowing a receiver to personalize the viewing experience even if it does not have access to the PDI-Q Table delivered in the broadcast stream. (The PDI-Q Table is related to personalization for providing a service customized for the user in provision of the interactive service. It is possible to inquire the user about personalization via the PDI-Q table.)","Among others, the URL list may be made with respect to the UrsUrl element so as to further indicate the URL of the server for usage reporting, in order to use preferred data and the type of content viewed and consumed currently through the receiver in business. The UrsUrl element included in the URL list may be variously interpreted as follows.","First, in case of a usage reporting server, the receiver may perform the usage reporting function of the receiver by a predetermined protocol (e.g., data structure, XML file, etc.) with the URL of the usage reporting server.","Second, there may be a TDO executed on the web browser of the receiver. In this case, this indicates the location of the Usage Reporting TDO. In this case, the TDO may directly collect and report information about content stored in the receiver or consumed currently using the API (e.g., file APIs or usage reporting APIs) of the web browser of the receiver. The TDO may transmit the collected data using Javascript API called XMLHttpRequest.","URLlist may include UrlList, TptUrl, UrsUrl, and\/or PdiUrl. The semantics of these elements is as follows.","TptUrl, which is an element of the UrlList element, can contain the URL of a TPT for a future segment in the current interactive adjunct service. When multiple TptUrl elements are included, they can be arranged in order of the appearance of the segments in the broadcast.","NrtSignalingUrl, which is an element of the UrlList element, can contain the URL of a server from which receivers can obtain NRT signaling tables for all the virtual channels in the current transport stream.","UrsUrl, which is an element of the UrlList element, can contain the URL of a server to which receivers can send usage (audience measurement) reports for the current virtual channel.","PdiUrl, which is an element of the UrlList element, can contain the URL of the PDI-Q table for the current virtual channel.",{"@attributes":{"id":"p-0417","num":"0416"},"figref":["FIG. 16","FIG. 16"]},"A description will be given of a delivery mechanism for delivering a trigger, a TPT, etc. Output from Interactive Service Creation, Delivery of Triggers in the Broadcast Stream, Delivery of Time base triggers via the Internet, Delivery of Activation Triggers via Internet (ACR Scenario), Delivery of TPTs in Broadcast Stream, Delivery of TPTs via Internet, Moving TDOs and Content Items, Combining Multiple Segments into One Segment will be sequentially described.","Hereinafter, Output from Interactive Service Creation will be described.","The process of service creation for a segment can result in folder containing all TDOs and other content items, TPT file in XML format and AMT file in XML format. The other results may be created.","Hereinafter, Delivery of Triggers in the Broadcast Stream will be described.","When delivered in the broadcast stream, Triggers can be delivered in the DTV Closed Caption channel, in Service #6, in the URLString command.","If the Trigger is less than or equal to 26 characters in length, it can be sent non-segmented (Type=11). If the Trigger is 27 to 52 characters in length, it can be sent in two segments (the first segment in a Type=00 segment and the second segment in a Type=10 segment).","The type of URI delivered in any given instance of the command can be given by an 8-bit parameter.","For interactive services using the TDO model, the URI type of the URI data structure can be set to 0 (Interactive TV Trigger for TDO model). This delivery mechanism includes both Time base triggers and Activation Triggers.","In the case in which the time base trigger is delivered via a broadcast stream (in closed caption service #6.), if \u201cm=\u201d term is absent, Time base triggers can simply deliver URL of Signaling Server. And if \u201cm=\u201d term is absent, then \u201ct=\u201d term must be absent from Activation triggers.","In the case in which the activation trigger is delivered via a broadcast stream (in closed caption service #6.), that is, in the case of \u201cTrigger\u201d format, with \u201ce=\u201d term, with or without \u201ct=\u201d term, if \u201ct=\u201d term is present, activation time can be the timestamp relative to a time base. And if \u201ct=\u201d term is absent, activation time can be the arrival time of the message.","In the case in which the time base trigger and the activation trigger are delivered via CC service #6, there can be three possible ways for broadcasters to handle Time Base and Activation triggers. The three ways are \u2018Segment mode without explicit time base\u2019, \u2018Segment mode with explicit time base\u2019 and \u2018Service mode with explicit time base\u2019.","These can be mixed within a broadcast, on a segment by segment basis.","In segment mode without explicit time base, Activation messages include no time stamp, so that the activation time of each message can be the delivery time of the message, and Time Base messages also include no time stamp, so that their only purpose can be to provide the URL of the Signaling Server that can deliver TPT files. Time Base messages can even be omitted entirely in this mode, relying on the URL in the Activation messages to provide the URL of the Signaling Server, but then receivers will not be able to retrieve a TPT and start downloading TDOs until after the first Activation message appears, delaying the response to the first Activation message by quite a bit.","In this case Time Base messages that can appear in CC service #6 can contain the \u201clocator_part\u201d of the \u201cTrigger\u201d format and possibly the \u201cspread\u201d term, but no \u201cmedia_time\u201d term, and Activation messages that can appear in CC service #6 can contain the \u201clocator_part\u201d of the \u201cTrigger\u201d format, the \u201cevent_time\u201d term, and possibly the \u201cspread\u201d term, but with no \u201ct=\u201d part in the \u201cevent_time\u201d term. The \u201clocator_part\u201d of both Time Base and Activation messages can be the current segmentId. This URL can also be used to retrieve the TPT for the segment via the Internet.","In segment mode with explicit time base, Time Base messages include a time stamp, to define a time base, and Activation messages might include a time stamp, to define the activation time relative to the time base, or they might include no time stamp, indicating that the activation time is the arrival time of the message.","In this case Time Base messages that can appear in CC service #6 can contain the \u201clocator_part\u201d of the \u201cTrigger\u201d format, the \u201cmedia_time\u201d term, and possibly the \u201cspread\u201d term, and Activation messages that can appear in CC service #6 can contain the \u201clocator_part\u201d of the \u201cTrigger\u201d format, the \u201cevent_time\u201d term, and possibly the \u201cspread\u201d term, with or without the \u201ct=\u201d part in the \u201cevent_time\u201d term. The \u201clocator_part\u201d of both Time Base and Activation messages can be the current segmentId, and the time base is specific to the segment. This URL can also be used to retrieve the TPT for the segment via the Internet.","In service mode with explicit time base, Time Base messages include a time stamp, to define a time base, and Activation messages might or might not include a time stamp. The time base can extend across multiple segments, rather than being specific to a single segment. The \u201clocator_part\u201d of the Time Base messages can be an identifier of the time base, and also a URL that can be used to retrieve TPTs for the service via the Internet.","In any case the Trigger Insertion Server that inserts the triggers into CC service #6 should work from the AMT, translating the Activation messages from the XML format in the AMT into the trigger format specified for delivery in CC service #6. In the case of an Activation element with no endTime attribute, a single trigger can be inserted with activation time equal to the startTime attribute. In the case of an Activation element with both startTime and endTime elements, a sequence of triggers can be inserted with same target. The first trigger in the sequence can have activation time equal to the startTime attribute, the last trigger in the sequence can have activation time equal to the endTime attribute, and there can be a fixed time interval between the activation times of the triggers in the sequence (except that the interval between the next-to-last and last trigger in the sequence can be shorter). The length of this fixed time interval can be configurable.","When the Time Base and Activation messages are in segment mode, the time base can be specific to the segment. It can start with the \u201cbeginMT\u201d value at the beginning of the segment, and run through the segment. The \u201cstartTime\u201d and \u201cendTime\u201d values of individual Activations can be relative to the \u201cbeginMT\u201d value. When the Time Base and Activation messages are in service mode, the time base can span segments, and the \u201cbeginMT\u201d value for each segment can be adjusted to take account of the service time base and the broadcast schedule.","Hereinafter, Delivery of Time base triggers via the Internet will be described.","Internet delivery of Time base triggers can be useful in so-called Automatic Content Recognition (ACR) situations, where the recipient of the Time base triggers has no access to Closed Caption service #6. In these situations the receiver needs to use ACR in order to recognize video frames and synchronize the time base with them. In ACR situations Time Base messages can be obtained from watermarks or from ACR servers. In case of reception from the ACR server, the Time Base messages are delivered as responses from an ACR server.","Hereinafter, Delivery of Activation Triggers via Internet (ACR Scenario) will be described.","Activation messages can be delivered via short polling, long polling or streaming, but all of these can impose a lot of overhead on the receivers and the server. Activation messages can also be delivered in the form of an AMT, but this can provide a good deal of information about the length of segments, facilitating ad killers. There might be other alternatives.","In the case in which the activation message is delivered in the form of the activation trigger, that is, in case of \u201cTrigger\u201d format with \u201ce=\u201d term, with or without \u201ct=\u201d term, this may be delivered via HTTP short polling, long polling or streaming.","When delivered via Internet, Activation messages can be delivered using either or both of the mechanisms, Individual Activation Trigger Delivery mechanism and Bulk Activation Trigger Delivery mechanism.","Hereinafter, Individual Activation Trigger Delivery will be described.","As described above, when individual Activation Triggers are delivered via the Internet, they can be delivered using HTTP short polling, long polling or streaming. The format of the Activation Trigger can be exactly the same as when they are delivered via DTVCC service #6.","In case of short polling, the polling period must be specified. In this period, a short polling operation may be set using pollPeriod included in the TPT as described below.","When Internet delivery of Activation Triggers is available, the URL attribute of the LiveTrigger element in the TPT can indicate the Activation Trigger Server which can deliver activation trigger. If the pollPeriod attribute of the LiveTrigger element is present in the TPT, this can indicate that HTTP short polling is being used, and it can indicate the polling period a receiver should use. If the pollPeriod attribute of the LiveTrigger element is not present in the TPT, this can indicate that either HTTP long polling or HTTP streaming is being used.","Regardless of which protocol is being used, the receiver can be expected to issue an HTTP request to the Activation Trigger Server with the query term:","?mt=<media_time>","where <media_time> can be the current media time of the viewed content.","If short polling is being used, the response from the Activation Trigger Server can contain all the Triggers that have been issued within the time interval of length pollPeriod ending at <media_time>. If more than one Activation Trigger is returned, they can be separated by one or more white space characters. If no Activation Triggers are returned, the response can be empty.","If HTTP long polling or HTTP streaming is being used, the Activation Trigger Server can wait to return a response until the media time when an Activation Trigger would be delivered in the broadcast stream. At this time it can return the Activation Trigger.","If HTTP long polling is being used, the Activation Trigger Server can close the session after returning an Activation Trigger. The receiver can be expected to immediately issue another request, with an updated media time.","If HTTP streaming is being used, the Activation Trigger Server can keep the session open after returning each Activation Trigger, and it can deliver additional Activation Triggers over the session as the time arrives for them to be delivered.","In all cases the HTTP response can contain an HTTP Response Header Field of one of the following forms to signal the delivery mode:","ATSC-Delivery-Mode: ShortPolling [<poll-period>]","ATSC-Delivery-Mode: LongPolling","ATSC-Delivery-Mode: Streaming","The <poll-period> parameter can indicate the recommended interval between polls for the succeeding polls. The <poll-period> can be omitted.","Hereinafter, Bulk Activation Trigger Delivery will be described.","When Activation Triggers are delivered via the Internet in bulk, the Activation Triggers for a segment can be delivered via HTTP along with the TPT for the segment, in the form of a multi-part MIME message, with the TPT as the first part of the message, and an Activation Messages Table (AMT) as the second part of the message.","Hereinafter, Delivery of TPTs in Broadcast Stream will be described.","When delivered in the broadcast stream, TPTs can be translated from their XML format into an equivalent binary NRT-style signaling table format and encapsulated in NRT-style private sections, one TPT per table instance. The TPT for the current segment is always present. TPTs for one or more future segments may also be present. The TPT instance is defined by the value of its segment_id field. For reference, the binary format of the TDO parameter table was described above. Here, NRT-style private section may correspond to tpt_section( ) of .","In summary, in order to transmit the binary structure of the TPT in NRT, the TPT may have a section structure suitable for NRT transmission. Hereinafter, this process will be described in detail.","Each TPT can be encapsulated in NRT-style private sections by dividing each TPT into blocks and inserting the blocks into the tpt_bytes( ) fields of sections that have a common value of table_id, protocol_version TPT_data_version and sequence_number fields. The blocks can be inserted into the sections in order of ascending section_number field values. The private sections can be carried in the Service Signaling Channel (SSC) of the IP subnet of the virtual channel to which the TPT pertains. Here, \u201cService Signaling Channel\u201d is defined in the ATSC-NRT standard and means a channel having a specific IP address and a port number. The sequence_number fields in the sections can be used to distinguish different TPT instances carried in the same SSC.","Hereinafter, the fields of  will be described.","The private section (tpt_section( )) may include table_id, protocol_version, sequence_number, TPT_data_version, current_next_indicator, section_number, last_section_number, service_id, and\/or tpt_bytes( ) information.","table_id, which can be an 8-bit field, can identify this table section as belonging to a TDO Parameters Table instance.","protocol_version may be divided into two parts. The high order 4 bits of this 8-bit unsigned integer field can indicate the major version number of the definition of this table and the TPT instance carried in it, and the low order 4 bits can indicate the minor version number. The major version number can be set to 1. Receivers can be expected to discard instances of the AMT indicating major version values they are not equipped to support. The minor version number can be set to 0. Receivers can be expected to not discard instances of the AMT indicating minor version values they are not equipped to support. In this case they can be expected to ignore any descriptors they do not recognize, and to ignore any fields that they do not support.","sequence_number can be an 8-bit field. The value of sequence_number can be the same as the sequence_number of all other sections of this TPT instance and different from the sequence_number of all sections of any other TPT instance in this Service Signaling Channel. Accordingly, this field may perform a role different from that of the other TPT instance. sequence_number field may indicate an IP subnet associated with a service signaling channel in this section. The values of the sequence_number fields of the different TPT instances can reflect the order in which the segments appear in the broadcast stream.","TPT_data_version, which can be a 5-bit field, can indicate the version number of this TPT instance, where the TPT instance can be defined by its segment_id. Since the TPT version is known in advance in order to determine whether the received TPT section data is a new version TPT, the TPT_data_version field may be present in the section table. The version number can be incremented by 1 modulo 32 when any field in the TPT instance changes.","current_next_indicator, which can be a 1-bit indicator, can always be set to \u20181\u2019 for TPT sections, indicating that the TPT sent is always the current TPT for the segment identified by its segment_id.","section_number, which can be an 8-bit field, can give the section number of this TPT instance section, where the TPT instance can be identified by its segment_id. The section_number of the first section in an TPT instance can be 0x00. The section_number can be incremented by 1 with each additional section in the TPT instance.","last_section_number, which can be an 8-bit field, can give the number of the last section (i.e., the section with the highest section_number) of the TPT instance of which this section is a part.","service_id, which can be a 16-bit field, can specify the service_id associated with the interactive service offering the content items described in this table instance.","tpt_bytes( ), which is a variable length field, can include a block of the TPT instance carried in part by this section. When the tpt_bytes( ) fields of all the sections of this table instance are concatenated in order of their section_number fields, the result can be the complete TPT instance.","That is, after the binary format of the TPT is used or the XML format is changed to a binary format, the TPT may be divided to be suitable for NRT transmission, included in tpt_bytes( ) field of the private section, and transmitted in NRT. At this time, if one TPT is divided into several private sections, the private section may have the same table_id, protocol_version TPT_data_version and sequence_number value. The divided TPT blocks may be inserted in order of section_number field values.","The receiver may parse the received private sections. In order to combine the private sections into one TPT again, the private sections having the same table_id, protocol_version TPT_data_version and sequence_number values may be used. At this time, order information capable of being obtained from section_number and last_section_number information may be used. If tpt_bytes( ) of all private sections having the same table_id, protocol_version TPT_data_version and sequence_number values are sequentially connected, one TPT may be created.","Delivery of TPTs via Internet will be described in detail with reference to .","Hereinafter, Moving TDOs and Content Items will be described.","Networks and stations will often need to provide their own HTTP servers for delivering TDOs and content items (files) used by TDOs. When this is done, the baseURL in the TPT can be adjusted to reflect the location of the server.","Hereinafter, Combining Multiple Segments into One Segment will be described.","In order to thoroughly obfuscate boundaries between segments, the TPTs and AMTs for multiple segments can be combined into a single TPT and AMT. The following steps may be performed.","1. Identify the set of segments to be combined.","2. Create a new TPT with a new segmentId.","3. If any of the segments being combined have live activations, provide a relay server that provides access to all of them, and put the parameters for this server in the \u201cLiveTrigger\u201d element.","4. Apply the baseURL for each segment as needed to get the full TDO and ContentItem URLs. (It may be possible to identify a shorter baseURL that is common to all the segments being combined, and retain that as a baseURL for the combined segment.)","5. Revise appId values as needed to remove conflicts.","6. Insert into the new TPT all the revised TDO elements for all the segments being combined.","7. Create a new AMT with segmentId equal to the new segmentId of the combined TPT.","8. Select an appropriate new \u201cbeginMT\u201d value for the new AMT.","9. Adjust the targetId values of all the Activation elements in the AMT files for the segments being combined to reflect any changes in appId values.","10. Adjust the startTime and endTime values of all the Activation elements in the AMT files for the segments being combined to reflect the new \u201cbeginMT\u201d value and the broadcast schedule for the segments being combined.","11. Insert all the revised Activation elements into the new AMT.",{"@attributes":{"id":"p-0494","num":"0493"},"figref":"FIG. 17"},"Hereinafter, Delivery of TPTs via Internet will be described.","When delivered over the Internet, TPTs can be delivered via HTTP. The URL of the TPT for the current segment can be the \u201c<domain name part>\/<directory path>\u201d in Time Base messages. The response to a request for a TPT can include just the TPT, or it can include a 2-part MIME message, with the requested TPT in the first part and a list of URLs in the second part, encoded as an XML document. (The response to a request will always include the TPT for the current segment. It may include TPTs for one or more future segments as well.)","The URLs as the second part of the above-described response may have the format shown in .","The semantics of the elements of  will be described.","\u201cUrlList\u201d can contain a list of URLs that are useful to a receiver.","\u201cTptUrl\u201d can contain the URL of a TPT for a future segment. When multiple TptUrl elements are included, they can be arranged in order of the appearance of the segments in the broadcast.","\u201cNrtSignalingUrl\u201d can contain the URL of a server where receivers can obtain NRT signaling tables for all the virtual channels in the current broadcast stream.",{"@attributes":{"id":"p-0502","num":"0501"},"figref":"FIG. 18"},"Hereinafter, ATSC JavaScript APIs for an environment for executing DO will be described.","In order to support synchronization of Declarative Object actions to broadcast programming, additional methods can be supported for the video\/broadcast object.","If the TPT is received via the DTVCC or the Internet, several events for executing the TDO may be present in the TPT and these events may be activated by the activation trigger.","In order to process this event, a Listener function may be registered on a per eventID basis. Accordingly, as the above-described \u2018additional methods\u2019, the two functions, addTriggerEventListener and removeTriggerEventListener, for registering the Listener function may be present.","In , addTriggerEventListener is described and format, arguments, etc. are shown.","addTriggerEventListener function can register a callback function (listener function) for processing an event generated on a per eventId basis. The addTriggerEventListener function may receive the listener of EventListener type and eventId of Number type as argument. The eventListener type will be described below. The addTriggerEventListener function may not have a return value (void). Here, eventId argument may be event ID in the event element of the TPT. Here, listener argument may be a listener for the event.","The trigger processing module of the receiver may register the listener function on a per eventId basis using the \u201caddTriggerEventListener\u201d function as soon as the activation message is received. If the event is activated, the registered listener function may be called. At this time, the object of TriggerEvent type may be delivered to the listener function. TriggerEvent type will be described below.",{"@attributes":{"id":"p-0510","num":"0509"},"figref":"FIG. 19"},"In , removeTriggerEventListener is described and format, arguments, etc. are shown.","The removeTriggerEventListener function can cancel registration of a callback function (listener function) for processing an event generated on a per eventId basis. The removeTriggerEventListener function may receive the listener of EventListener type and eventId of Number type as argument. The eventListener type will be described below. The removeTriggerEventListener function may not have a return value (void). Here, eventId argument may be event ID in the event element of the TPT. Here, listener argument may be a listener for the event.","In the javascript program, if the event which may be generated on a per eventId basis is desired to be no longer received or if the program \u201cDestroyWindow\u201d is finished, the listener function registered using \u201cremoveTriggerEventListener\u201d may be cancelled.",{"@attributes":{"id":"p-0514","num":"0513"},"figref":"FIG. 20"},"Here, the definition of the EventListener type conforms to Web Interface definition Language (Weg IDL). Web IDL can be used to describe interfaces that are intended to be implemented in web browsers. Web IDL is an IDL variant with a number of features that allow the behavior of common script objects in the web platform to be specified more readily.","EventListener may be an interface object. EventListener type may have an event of TriggerEvent type as an argument.",{"@attributes":{"id":"p-0517","num":"0516"},"figref":"FIG. 21"},"TriggerEvent type may contain information about the event.","TriggerEvent type may have eventId, data and status as properties. Here, eventId may be eventID in the event element of the TPT. Here, data may be data for this activation of the event. Here, data may be hexadecimal. Here, status may mean the status of the event. Here, if the status value is \u201ctrigger\u201d, this means a status in which the event is activated by the activation trigger. If the status value is \u201cerror\u201d, this means a status in which error occurs.","TDO model has been described. Hereinafter, Direct Execution model will be described.","In the Direct Execution model, a Declarative Object (DO) can be launched automatically as soon as the virtual channel is selected. It can communicate over the Internet with a backend server to get detailed instructions for providing interactive features\u2014creating displays in specific locations on the screen, conducting polls, launching other specialized DOs, etc., all synchronized with the audio-video program.","Hereinafter, the trigger operation in the direct execution model will be described.","The role, function and syntax of the trigger are not largely changed in the direct execution model.","Performance of the trigger is equal to that described above.","Trigger syntax is equal to that described above.","A Trigger can be considered to include three parts.","<domain name part>\/<directory path>[?<parameters>]","In the direct execution model, the combination of <domain name part> and <directory path> can uniquely identify the DO to be launched.","<parameters> may include one or more of \u201cevent_time\u201d, \u201cmedia_time\u201d, or \u201cspread\u201d","In the direct execution model, an application is launched automatically as soon as the virtual channel is selected. Application can communicate over the Internet with a backend server via a \u201cSynchronized Content Protocol\u201d. The server can give detailed instructions for providing interactive feature, which is all synchronized with the audio-video program.","In case of the direct execution model, since an application is immediately executed, information may be delivered to the currently executed application as a time base trigger is delivered. In this model, the application needs to continuously deliver information about currently broadcast content to the server for synchronization. To this end, the time base trigger may further include special information different from that of the TDO model. This special information may be an identifier of currently broadcast content.","Similarly, the content identifier may be present in the parameter part of the trigger in the form of a parameter.","Similarly, the content identifier may be present in media_time of the trigger in the form of one term. The content identifier term, which can be called content_id, which can be designated by \u201cc=\u201d followed by a character string, can represent an identifier for the content currently being viewed.","The content_id term can be intended to support the Direct Execution model of interactive service implementation.","As described above, in this model, Time base triggers with content_id term can be passed in to the application after it is launched, and the application can deliver the content_id to the backend server in order to identify the context for the interaction. Detailed operation thereof will be described below.","The delivery mechanism of the trigger in the direct execution module is equal to that described above.","However, in case of Delivery of Triggers in the Broadcast Stream, Triggers can be delivered in the DTV Closed Caption channel, in Service #6, in the URLString command. And for interactive services using the Direct Execution model, the URI_type field can be set to 2 (Interactive TV Trigger for Direct Execution model).","Hereinafter, overall operation of the direct execution module will be described.","As one model for executing interactive service, in the direct execution model, an application can be launched automatically as soon as the virtual channel is selected. The application can communicate over the Internet with a backend server via a \u201cSynchronized Content Protocol.\u201d The server can give detailed instructions for providing interactive features\u2014creating displays in specific locations on the screen, conducting polls, launching other specialized DOs, etc., all synchronized with the audio-video program.","Operation may be performed as follows.","First of all, an application can be launched. Then, a time base trigger is received. The time base trigger is delivered to the application after the application has been executed. The content_id term of the time base trigger may include content identification information of currently displayed content. The application can deliver the content_id to the backend server in order to identify the context for the interaction, and in order to identify the content currently being viewed.","Direct Execution Model has been described.",{"@attributes":{"id":"p-0543","num":"0542"},"figref":"FIG. 22"},"A description will be given of Delivery via other interfaces.","Protocols and architecture enabling acquisition of an interactive service in environments (for example, as received from a cable or satellite set-top box) in which only uncompressed video and audio are accessible) are defined. The architecture and protocols can be designed for use by receivers that have Internet connections and that only have access to the uncompressed audio and video from the broadcast stream. Of course, the architecture and protocols can be used successfully if the interactive service provider chooses to support the same.","The architecture can be designed to support two basic approaches to identifying the content being viewed, so that any associated interactive service data enhancements can be delivered via Internet. Two basic approaches can be watermarking and fingerprinting.","In both the watermarking and fingerprinting approaches, the intent can be to allow receivers to find out what programming is currently being watched and obtain a URL that can be used as the starting point to get additional information about interactive services for the programming.",{"@attributes":{"id":"p-0548","num":"0547"},"figref":"FIG. 22"},"In an architecture for a WM approach, the architecture may include a broadcaster , a watermark inserter , an MVPD , an STB , a receiver , a WM client , a TPT server  and\/or a content server .","The broadcaster  may be a source outputting audio\/video streams and interactive services related to the audio\/video streams. A TV station may be an example of the broadcaster . The broadcaster  may be a broadcast content producer or distributor. The broadcaster  can deliver broadcast streams, audio\/video content, interactive data, broadcast schedules or AMT.","The watermark inserter  can insert watermarks into broadcast audio\/video frames. The watermark inserter  may be integrated with the broadcaster  or may be a separate module. Watermarks may be information necessary for receivers. Watermarks may be information such as URL. Watermarks will be described in detail later.","The MVPD  is an abbreviation for multiprogram video program distributor. The MVPD  may be a cable operator, a satellite operator or an IPTV operator. The MVPD  can receive the broadcast stream from the Broadcaster\/Watermark Inserter, with the watermarks inserted by the Watermark Inserter  in the case of a watermarking ACR system. MVPD  often strips out all the program elements other than audio and video tracks, and sends the resulting stream to set-top boxes (STBs) in customer premises.","The STB  typically decodes (decompresses) the audio and video and sends the same to a TV set for presentation to viewers. The STB can send uncompressed audio\/video content to the receiver . The STB may be an external decoding unit according to an embodiment of the present invention.","The receiver  may include the WM client . The WM client  may be disposed outside the receiver . Here, the receiver may be watermark-capable. The structure of the receiver  will be described later.","The WM Client  can obtain Activation Triggers from the ACR Server (not shown) and passes the same into the main receiver code, using an API provided for such purpose. Normally the WM Client  would be built into the receiver, but other configurations are possible. The WM client  can extract inserted watermarks from uncompressed audio\/video content. Watermarks may be information such as a URL.","The TPT server  may be a server capable of downloading an application such as a TPT. The receiver  transmits the extracted watermarks to the ACR server. When the watermarks are matched to watermarks stored in a database (not shown), the receiver  can receive a trigger or triggers as a response. When the received trigger or triggers have the above-described new locator_part or a TPT or application parameter table of a new version is discovered, the receiver  may request the TPT server  to download a new TPT or application parameter table.","The content server  may provide applications and TDO necessary to provide interactive services. When a new application or TDO is needed, the new application can be downloaded using a URL in a TPT or application parameter table.","In the watermarking (WM) approach the broadcaster\/watermark inserter can insert watermarks into the broadcast audio or video frames. These watermarks can be designed to carry a modest amount of information to receivers, while being imperceptible or at least minimally intrusive to viewers. Such watermarks might provide directly the information that receivers need, or they might only provide a code value that receivers can send via an Internet connection to a remote server in order to get the information they need.",{"@attributes":{"id":"p-0559","num":"0558"},"figref":"FIG. 23"},"In the architecture for FP approach, the architecture may include a broadcaster , an MVPD , an STB , a receiver , an FP client , a TPT server , a content server , a signature extractor  and\/or an FP server .","The broadcaster  may be a source outputting audio\/video streams and interactive services related to the audio\/video streams. A TV station may be an example of the broadcaster . The broadcaster  may be a broadcast content producer or distributor. The broadcaster  can deliver broadcast streams, audio\/video content, interactive data, broadcast schedules or AMT.","The MVPD  is the abbreviation for multiprogram video program distributor. The MVPD  may be a cable operator, a satellite operator or an IPTV operator. The MVPD  often strips out all the program elements other than audio and video tracks, and sends the resulting stream to set-top boxes (STBs) on customer premises.","The STB  typically decodes (decompresses) the audio and video and sends the same to a TV set for presentation to viewers. The STB can send uncompressed audio\/video content to the receiver . The STB  may be an external decoding unit according to an embodiment of the present invention.","The receiver  may include the FP client . The FP client  may be disposed outside the receiver . Here, the receiver  may be fingerprint-capable. The structure of the receiver  will be described later.","The FP Client  can obtain Activation Triggers from the FP Server  and passes them into the main receiver code, using an API provided for such purpose. Normally the FP Client  would be built into the receiver, but other configurations are possible. The FP client  can extract a fingerprint from uncompressed audio\/video content. The fingerprint will be described in detail later.","The TPT server  may be a server capable of downloading an application such as a TPT. The receiver  transmits the extracted fingerprint to the FP server . When the fingerprint is matched to a signature of the signature extractor , the receiver  can receive a trigger or triggers as a response. When the received trigger or triggers have the above-described new locator_part or a TPT or application parameter table of a new version is discovered, the receiver  may request the TPT server  to download a new TPT or application parameter table.","The content server  may provide applications and TDO necessary to provide interactive services. When a new application or TDO is needed, the new application can be downloaded using a URL in a TPT or application parameter table.","The signature extractor  may receive metadata from the broadcaster . The signature extractor  may extract the signature of a frame from the received metadata. When the fingerprint transmitted to the FP server  matches the signature of the signature extractor , the signature extractor  can deliver the metadata related to the signature to the FP server .","The FP server  may perform signature matching operation with the signature extractor . The FP server  can match the signature to the fingerprint received from the receiver . When the signature is matched to the fingerprint, the FP server  can receive the metadata related to the signature from the signature extractor . The FP server  can transmit the metadata to the receiver .","In the fingerprinting (FP) approach, the FP Client  can extract fingerprints (also can be called signatures) from audio or video frames and check the fingerprints against a database of fingerprints of broadcast frames from multiple broadcasters in the area to find the information the receivers  need. Such checks can be done by signatures to a remote server and getting back a record with the desired information, or in some cases they can be done by checking against a database of signatures that has been downloaded into the receiver . Here, the remote server may be the FP server .","Although watermarking and fingerprinting can be distinct technologies, they are not necessarily exclusive of one another. Using a combination of the two technologies is quite conceivable. The term automatic content recognition (ACR) can be used to refer to either of these technologies separately or to any combination thereof.","An environment in which a receiver only has access to the uncompressed audio and video from the broadcast stream is called an \u201cACR environment.\u201d","In both WM and FP cases receivers can use the URL as a starting point to obtain interactive service content, including triggers.","In both WM and FP cases the timing information can be in the form of a timestamp relative to a broadcast side clock that is used for specification of the timing of time critical events for the channel, such as activation timestamps in triggers delivered over the Internet.","It is assumed that broadcasters can typically support delivery of interactive services directly in the broadcast stream, for the benefit of receivers that get TV signals from antennas, and also support delivery of interactive services over the Internet as described above, for the benefit of receivers that get uncompressed audio and video, but have an Internet connection. However, broadcasters can support either one of these two delivery mechanisms without the other.","A typical architecture for the watermarking approach in the case when the watermark provides only a code value would look something like a combination of the two architectures in  and . There would be a Watermark Inserter, as in , but it would insert a code, rather than the information needed by receivers. There would also be a WM Server, playing much the same role as the FP Server in . Receivers would send it codes, rather than signatures, and they would get back the information they need.","A description will be given of accessing interactive services.","Description of the accessing interactive services includes descriptions of Direct Execution Model, TDO Model with Activations Independent of ACR Server, TDO Model with Activations received from ACR Server. While the models are not shown, the models are not limited to the descriptions and may be changed according to the intention of a designer.","There are a number of different ways for a receiver in an ACR environment to access interactive services, depending on broadcaster choices and the nature of the ACR system. The interactive service model can be the Direct Execution model or the TDO model, and Activation In the case of the TDO model, Triggers can be delivered independently of the ACR Server, or they can be delivered by the ACR Server.","A description will be given of the Direct Execution Model.","An ACR process for a virtual channel that contains an interactive service which has the Direct Execution Model can provide to receivers viewing that channel the equivalent of Time Base Triggers that include the media_time (\u201cm=\u201d) term and the content_id (\u201cc=\u201d) term. These Triggers can be identified as Triggers for an interactive service with the Direct Execution model.","When a receiver first receives such a Trigger with a new locator_part, it can be expected to load into its browser the Declarative Object (DO) pointed to by the locator_part of the Trigger. Typically the DO will have been pre-installed or previously downloaded and cached. Otherwise the receiver can be expected to download the same, using an HTTP GET request.","Then, the DO can contact the appropriate back-end server and provide the interactive service as directed by the back-end server.","The receiver can be expected to make that initial Trigger and subsequent Triggers available to the DO as they are obtained until such time as it gets a Trigger from the ACR server that has a new locator_part and\/or that is identified as a Trigger for an interactive service with the TDO model (either of which typically indicates a channel change).","A description will be given of the TDO Model with Activations Independent of ACR Server.","An ACR process for a virtual channel that can contain an interactive service which has the TDO model, and which provide event activations independently of the ACR Server, can provide to receivers viewing that channel the equivalent of Time Base Triggers that can include the media_time (\u201cm=\u201d) term. These Triggers can be identified as Triggers for an interactive service with the TDO model.","When a receiver first receives such a Trigger with a new locator_part, it can be expected to retrieve the current TDO Parameters Table (TPT) from the TPT Server can be pointed to by the locator_part of the Trigger, and to use the media time in that Trigger and subsequent Triggers to establish a reference time base for event activations, relative to the audio or video frames can be identified by the ACR process.","If an (Activation Messages Table) AMT is delivered along with the TPT, the receiver can be expected to use the individual Activation elements in the table to activate events at the correct times relative to the time base established by the media-time terms in the Triggers. (These events can include loading and executing a TDO, causing a TDO to take a particular synchronized action, suspend a TDO, etc.)","If a LiveTrigger element is included in the TPT, the receiver can be expected to retrieve Activation Triggers from the Live Trigger Server identified by the URL in the LiveTrigger element, using the polling method signaled in the LiveTrigger element, and to use these Activation Triggers to activate events at the correct times relative to the time base established by the media-time terms in the Triggers.","Both an AMT and a Live Trigger Server can be used for the same service, typically with the former providing static activations and the latter providing dynamic activations. Alternatively, an AMT can be used alone when all activations for the segment are static, or a Live Trigger Server can be used alone to deliver both static and dynamic activations.","A description will be given of the TDO Model with Activations Received from the ACR server.","How activation triggers for a TDO interactive service model are delivered without a separate trigger server in an ACR environment is described.","Fingerprinting ACR systems can include an ACR server. Receivers can send frame signatures to an ACR server, and the ACR server can identify the frame represented by the signature and send back the information needed by the receivers. Watermarking ACR systems can include an ACR server in the case when the watermarks include no more that codes that can be sent to an ACR server to get the information needed by receivers. Watermarking ACR systems may not include an ACR server in the case when the watermarks themselves contain the information needed by receivers. In those ACR systems that include an ACR server, two different models can be used for communication between the ACR servers and receivers: a request\/response model and an event-driven model.","It is assumed that the broadcaster supports the TDO interaction model.","Three cases of an ACR server using a request\/response model, an ACR server using an event driven model and a watermarking ACR system inserting information directly may be assumed.","In the case of an ACR server, the ACR method could be fingerprinting, in which case receivers compute some sort of signature (or fingerprint) of audio or video frames and submit the same to an ACR server for identification, or it could be watermarking, in which case receivers extract codes in the form of watermarks from the audio or video frames and submit the codes to an ACR server for identification.","Terms of fingerprinting signatures are described for convenience. However, the system operates in the same manner as the case of watermarking codes and the present invention is not limited to fingerprinting.",{"@attributes":{"id":"p-0598","num":"0597"},"figref":"FIG. 24"},"A description will be given of a case in which an ACR server uses the request\/response model.","In the request\/response ACR model, the receiver can be expected to generate signatures of the content periodically (e.g. every 5 seconds, which is merely exemplary and can be changed by a designer) and send requests containing the signatures to the ACR server. When the ACR server gets a request from a receiver, it can return a response. The communications session may not kept open between request\/response instances. In this model, it may not be feasible for the ACR server to initiate messages to the client.","For an ACR server that is using this request\/response model and is delivering Activation Triggers to receivers, each response from the ACR server can be one of Null, Time Base Trigger and Activation Trigger.","A Null response can indicate that the signature is not recognized, or (if the ACR Ingest Module includes signatures for frames in program segments with no interactive service) that the signature represents a frame which belongs to a segment that does not have an interactive service associated therewith. The ACR ingest module will be described below.","A Time Base Trigger response can indicate that no event activation is scheduled to take place before the client's next request. The client can be expected to use the Time Base Triggers to maintain a media-time clock.","An Activation Trigger response can indicate that an activation is due to take place soon, with the time of the activation indicated by the \u201ct=\u201d term in the Trigger.","Whenever a receiver gets a Trigger with a new locator_part, it can be expected to download the new TPT immediately, unless it has already retrieved the same using a URLList delivered with a previous TPT.","Whenever a receiver obtains an Activation Trigger, it can be expected to activate the event at the time indicated by the \u201ct=\u201d term in the Trigger, relative to the media time clock.",{"@attributes":{"id":"p-0607","num":"0606"},"figref":"FIG. 24"},"In , the receiver can send signatures for frames which the ACR server determines to have media times MT1, MT2 and MT3. For the frame with media time MT1 the receiver simply obtains a response that contains a Time Base Trigger. For the frame with media time MT2, a static activation is due at media_time MTa, so the receiver obtains a response that contains an Activation Trigger which has a \u201ct=MTa\u201d term. For the frame with media time MT3 the receiver just obtains a response that contains a Time Base Trigger.","It can happen that a receiver receives more than one Activation Trigger for the same event activation. However, the media times for each of them will be the same, so the receiver can identify them as duplicates, and only apply one of them.",{"@attributes":{"id":"p-0610","num":"0609"},"figref":"FIG. 25"},"A description will be given of a case in which the ACR server uses the request\/response model.","In , the receiver can be sending signatures for frames viewed at local clock times LC1, LC2, LC3, etc. The media_time for the frame viewed at local clock time LC1 can be determined by the ACR server to be MT1, and the receiver just gets a response that contains a Trigger with no media_time or event_time. The media_time for the frame viewed at local clock time LC2 can be determined by the ACR server to be MT2, and the ACR server knows that a static activation is due at media_time MTa, so the ACR server sends a response that contains an Activation Trigger which has a \u201cd=<offset>\u201d term, meaning that the media_time MTa for the activation is <offset> time units after MT2. The receiver then adds the <offset> to time LC2 and gets LCa as the local time it should activate the event.",{"@attributes":{"id":"p-0613","num":"0612"},"figref":"FIG. 26"},"A description will be given of a case in which dynamic activation occurs in the request\/response ACR case.","For dynamic activations in situations when the ACR System does not learn of the event activation until it is too late to send the Trigger to the receiver ahead of time, the ACR Server needs to wait until the next request, and then sends an Activation Trigger.  illustrates this case. The effect of this is that dynamic activations can be delayed by as much as one request interval.","In , the receiver can be sending signatures for frames that the ACR server determines to have media times MT1, MT2 and MT3. For the frames with media times MT1 and MT2, the receiver just gets a response that contains a Time Base Trigger. When a dynamic activation with activation time MTa shows up at or shortly before media_time MTa, the ACR server cannot notify the receiver about it until the next request from the receiver, which occurs for the frame with media time MT3. At that time the ACR server response contains an Activation Trigger with activation time MTa (which is a little in the past). In this situation the receiver can be expected to apply the Activation Trigger as soon as it arrives.","Here again it is possible that a receiver receive more than one Activation Trigger for the same event activation. However, the media time for each of them will be the same, so the receiver can identify them as duplicates, and only apply one of them.",{"@attributes":{"id":"p-0618","num":"0617"},"figref":"FIG. 27"},"A description will be given of a case in which dynamic activation occurs in the request\/response ACR case.","In , the receiver can send signatures for frames viewed at local clock times LC1, LC2, LC3, etc. The media_time for the frame viewed at local clock time LC1 can be determined by the ACR server to be MT1, and the receiver just gets a response that contains a Trigger with no media_time or event_time. The media_time for the frame viewed at local clock time LC2 can be determined by the ACR server to be MT2, and the ACR server does not know that a dynamic activation will show up at media_time MTa, so the receiver just gets a response that contains a Trigger with no media_time or event_time. When a dynamic activation shows up at media_time MTa, the ACR server cannot notify the receiver about it until the next request from the receiver, which occurs at local time LC3. At that time the ACR server response can contain an Activation Trigger with a negative <offset> value or contains a \u201cdo it now\u201d activation trigger.","A description will be given of an ACR server using an event driven model.","In the event driven ACR model the receiver can be expected to initiate a permanent connection to the ACR server, generate signatures of the content periodically (e.g., every 5 seconds), and submit the signatures over the connection. The ACR server does not respond to each signature. It can send a message to the receiver when a new segment is detected or when an event activation needs to be communicated to the receiver. In this model, it is possible for the ACR server to initiate messages to the client at any time.","For an ACR server that is using this event driven model and is delivering activations to receivers, the following rules can apply for messages from the ACR server.","First of all, when the ACR server receives a signature from a receiver that corresponds to a new segment, the ACR server can send a Time Base Trigger to the receiver immediately, just to enable the receiver to obtain the associated TPT.","Second of all, whenever an event is due to be activated, the ACR server can send an Activation Trigger to the receiver. If possible, it can send the Activation Trigger slightly ahead of the time when the receiver needs to apply the same. (This is very similar to the behavior in the request\/response model.) If the ACR server learns of the activation so late that it cannot send an Activation Trigger very much ahead of time (which can happen in the case of a dynamic event activation), it still can send an Activation Trigger as soon as it can. In this latter case, it is possible that the client will get the message slightly after the activation time, because of message delays, in which case the receiver can be expected to activate the event immediately upon receipt of the message.","Whenever a receiver gets a Trigger with a new locator_part, it can be expected to download the new TPT immediately, unless it already retrieved it using a URLList delivered with a previous TPT.","A description will be given of a watermarking ACR system inserting information directly. While the watermarking ACR system is not shown, the watermarking ACR system is not limited to the following description and may be changed by a designer.","In the case of a watermarking system that inserts the information receivers need directly, the watermark associated with a frame can follow the same rules as stated above for what a request\/response ACR server would return for that frame as follows. The request\/response ACR server can return one of Null, Time Base Trigger and Activation Trigger.","A Null response can indicate that the signature is not recognized, or (if the ACR Ingest Module includes signatures for frames in program segments with no interactive service) that the signature represents a frame which belongs to a segment that does not have an interactive service associated with it.","A Time Base Trigger response can indicate that no event activation is scheduled to take place before the client's next request. The client can be expected to use the Time Base Triggers to maintain a media-time clock.","An Activation Trigger response can indicate that an activation is due to take place soon, with the time of the activation indicated by the \u201ct=\u201d term in the Trigger.","In the case of a watermarking ACR system that is delivering the information receivers need by including the same directly in the watermarks, so that no ACR server is needed, an Ingest Module can follow the same rules as described for the request\/response server model above to determine the Trigger to associate with each frame, but then include the Trigger in the watermark for the frame, rather than associate the Trigger with the frame in a Database. The ingest module and database will be described later.","A description will be given of support of stand-alone NRT services. This is not shown but the present invention is not limited to the following description and may be changed by a designer.","In order for a receiver in an ACR environment to obtain access to stand-alone NRT services, the broadcaster may need to support Internet access to the NRT services, and the receiver may need to obtain the SMT and the NRT-IT instances for the services.","A description will be given of a query protocol for obtaining PSIP tables and NRT tables over the Internet.","If a broadcaster supports this protocol for a particular broadcast stream, then a receiver that knows the URL of the broadcaster's Signaling Server for that broadcast stream can take the following steps.","First, the receiver can issue a query for the \u201cBasic NRT Set\u201d of tables for the broadcast stream, for a specified future time interval (for example, the next 12 hours).","Second, This will produce the SMT and ILT for each of the stand-alone NRT virtual channels, and the NRT-IT and TFT instances covering the specified time interval.","One way a receiver can discover the URL of the Signaling Server for a broadcast stream can be that the provider of an interactive service segment in the broadcast stream can choose to provide the Signaling Server URL in a URLList element delivered along with the TPT.","Another way a receiver can discover URLs of Signaling Servers can be by pre-configuration. In the same way that a DTV receiver manufacturer can pre-configure a DTV receiver to know how to find an ACR Server covering any particular broadcast area, a DTV receiver manufacturer can pre-configure a DTV receiver to know how to find an \u201cNRT Discovery Server\u201d covering any particular broadcast area. Such an NRT Discovery Server would be able to give the receiver a list of the broadcast streams that contain stand-alone NRT services, along with the Signaling Server URL for each one.",{"@attributes":{"id":"p-0641","num":"0640"},"figref":"FIG. 28"},"Some ACR systems include an ACR server, and some ACR systems do not. In fingerprinting ACR systems, receivers can compute and send frame signatures to an ACR server, and the ACR server can send back the information needed by the receivers. Thus, fingerprinting ACR systems include an ACR server. In watermarking ACR systems, the watermarks may contain only codes that uniquely identify the frames, or the watermarks may contain the full information needed by receivers. When the watermarks contain only codes, receivers can extract the codes and send the same to an ACR server, and the ACR server sends back the information needed by the receivers. In the case when the watermarks include the full information, receivers can just extract the information they need directly from the watermarks, and no ACR server is needed.","In those ACR systems that include an ACR server, two different models can be commonly used for communication between the ACR servers and receivers: a request\/response model and an event-driven model.","In the request\/response ACR server model the receiver can be expected to compute signatures of, or extract codes from, the content periodically (e.g. every 5 seconds) and send requests containing the signatures or codes to an ACR server. When an ACR server gets a request from a receiver, it can return a response. The communications session is not kept open between request\/response instances. In this model, it may not feasible for an ACR server to initiate messages to a receiver.","It is assumed that the broadcaster of the channel being processed is supporting the TDO interaction model.","There can be two general type of event activations: static activations in which the activation time is known before the broadcast of the segment begins, and dynamic activations in which the activation time in determined dynamically as the segment is being broadcast. In pre-recorded segments all of the event activations can be static. In segments that are broadcasting live shows, some or all of the event activations can be dynamic. Static activations are typically listed in the Activation Messages Table (AMT), although they might be delivered to receivers in the form of Activation Triggers. Dynamic activations can be delivered in the form of Activation Triggers, since their timing is not known at the time the AMT is generated.",{"@attributes":{"id":"p-0647","num":"0646"},"figref":"FIG. 28"},"In the architecture to support ACR systems that use an ACR server, the architecture may include a broadcast source , an ACR ingest module , an MVPD , an STB , a receiver , an ACR client , an ACR configuration server , an ACR server  and\/or a database .","The Broadcast Source  can be a point from which the A\/V stream and associated interactive services are transmitted, for example a network distribution point or a TV station.","The ACR Ingest Module  can compute signatures (fingerprints) of frames, in the case of a fingerprinting ACR system, or insert watermarks including codes into frames, in the case of a watermarking ACR system that is based on codes. It can store in the database  the media_time of each frame associated with a signature or code, together with other metadata. The ACR Ingest Module  could handle a single channel in a broadcast stream, or an entire broadcast stream, or multiple broadcast streams, or any combination thereof. For the purposes, it is assumed that the ACR Ingest Module  processes frames for program segments that contain an interactive service. However, it is possible to have ACR systems in which all frames are processed, but those that are not part of a segment with an interactive service have an indication in their database  entry that they are not part of a segment with an interactive service.","A Multiprogram Video Program Distributor (MVPD)  is typically a cable operator, satellite operator, or IPTV operator. It can receive the broadcast stream from the Broadcast Source in some way, with the watermarks inserted by the ACR Ingest Module  in the case of a watermarking ACR system, such a system often strips out all the program elements other than audio and video tracks, and sends the resulting stream to set-top boxes (STBs)  on customer premises.","The STB  typically decodes (decompresses) the audio and video and sends the same to a TV set for presentation to viewers. We are assuming that DTV Closed Caption service #6, which contains interactive service Triggers, is not available to the TV Set.","The receiver  may include the ACR client . The ACR client  may be disposed outside the receiver . The structure of the receiver  will be described later.","The ACR Client  in the receiver  can obtain Activation Triggers from the ACR Server  and pass the same to the main receiver code, using an API provided for that purpose. Normally the ACR client  would be built into the receiver , but other configurations are possible.","The ACR Configuration Server  can provide a way for ACR clients  to determine the location of a suitable ACR Server . This discovery process can be achieved in other ways.","The ACR Server  can obtain signatures or codes from receivers and return Activation Triggers at appropriate times.","The database  can be a data store of some kind, not necessarily a database in the strict sense of the term, in which information about audio or video frames (or both) is stored for the use of ACR servers .","The architecture of an ACR system that uses direct delivery of information in watermarks could have no Database and no ACR Server. The ACR Ingest Module could insert information directly into the frames in the broadcast stream, in the form of watermarks, instead of inserting, into a database records that contain identifiers of frames and the information associated with the same. Receivers could then extract this information from the frames in the broadcast, instead of obtaining the same from an ACR server.","A description will be given of delivery of activation triggers via request\/response ACR servers step by step. This is an embodiment of the present invention and a step may be omitted or new steps may be added or a sequence may be changed.","An efficient way to implement this ACR Server behavior is to follow the process described below, where the numbers of the actions in the process correspond to the numbers in the architecture diagram above, as shown in .","1) The broadcast schedule for the interactive service segments and the AMTs or their equivalents for each segment can be delivered to the ACR Ingest Module ahead of the time the segments are broadcast. The broadcast schedule can contain the segment ID, GPS start time and GPS end time of each segment that can contain an interactive service associated with it. If there are any last-minute changes to the broadcast schedule, the ACR Ingest Module can be notified of these changes immediately. The broadcast schedule could also contain the version number of the TPT for each segment, and the ACR Ingest Module could get notification in real time of any unscheduled changes in a TPT version, so that it can insert \u201cversion\u201d (\u201cv=\u201d) terms into Triggers when needed. The Ingest Module could also be configured to insert \u201cspread\u201d (\u201cs=\u201d) terms into Triggers at suitable times, such as during a specified interval at the beginning of each segment (when many receivers are likely to be requesting new TPTs at the same time).","2) If there are any dynamic activations, links can be set up from sources of dynamic activations to the ACR Ingest Module.","3) The broadcast stream can be routed to the ACR Ingest Module.","4) The ACR Ingest Module can extract signatures from the frames (in the case of a fingerprint ACR system) or insert codes into the frames (in the case of a watermark ACR system), for all frames contained in segments that have an interactive service associated with them. (The ACR Ingest Module can determine whether a frame is in such a segment by using a GPS clock and the start times and end times of segments in the broadcast schedule.) For each such frame the ACR Ingest Module can insert a record in the Database that can include a Trigger and the signature or code associated with the frame. The rules for what Trigger gets inserted are described at the end of this list of actions in the process.","5) Broadcast Stream can continue on to the MVPD.","6) MVPD can route the Broadcast Stream to the STB at a subscriber's location (typically stripping out all of the interactive content first).","7) STB can decode the A\/V and send the uncompressed A\/V to the DTV receiver.","8) When the receiver is first turned on, it can send its location to an ACR Configuration Server. (The URL of the ACR Configuration Server can be built into the receiver.)","9) The ACR Configuration Server can send back the URL of an ACR Server for the receiver to use.","10) The ACR Client in the receiver can start extracting fingerprint signatures or watermark codes and sending them to the ACR Server.","11) When the ACR Server receives a signature or code, it can attempt to match it in the Database.","12) If the signature or code does not match any signature or code in the Database, then the ACR Server can get back a \u201cno match\u201d indicator. If the signature or code does match a signature or code in the Database, then the ACR Server can get back the record for the frame that has the matching signature or code. In the latter case the record in the Database can contain a Time Base Trigger, and\/or it can contain one or more Activation Triggers, depending on what was inserted into the record for the frame by the ACR Ingest Module.","13) If the ACR Server gets back a \u201cno match\u201d indicator from the Database, it can return a NULL response to the ACR Client. Otherwise the ACR Server can return to the ACR Client the Trigger or Triggers it obtained.","The following rules can be used to determine what Trigger or Triggers the ACR Ingest Module inserts into each frame record in the Database.",{"@attributes":{"id":"p-0675","num":"0674"},"figref":"FIG. 29"},"It can be assumed that there is some upper bound L1 on the length of the request intervals used by individual ACR clients in receivers. (It is not important whether the ACR clients know what this bound is, as long as they operate within it in practice.) Let L2 be the length of time it takes a typical ACR client to compute the signature or extract the watermark associated with a frame, counting from the time the frame arrives at the receiver. Let L3 be the typical round-trip time for a message to go from an ACR client to an ACR server and back. Let M=L1+L2+L3. (A slightly larger value of M could also be used\u2014the advantage of a slightly larger value is that receivers get a little extra time to react to Activation Triggers; the disadvantage is that receivers are a little more likely to get multiple Activation Triggers for the same Event activation\u2014which is not much of a problem, since they will be able to detect that they are duplicates, as explained below, and only apply the activation once.)","The ACR Ingest Module can insert only a Time Base Trigger in the record associated with a frame unless at least one of the following three conditions holds:","(a) There is an Activation element in the AMT such that the media_time of the frame is in the time interval beginning at time span M before the startTime of the Activation element and ending at the endTime of the Activation element. (If an Activation has no endTime, the endTime is considered equal to the startTime.)","(b) A dynamic Activation Trigger was received by the Ingest Module before the time interval of time span M immediately preceding the activation time of the Trigger (\u201ct=<event_time>\u201d), and the frame lies within that interval.","(c) A dynamic Activation Trigger was received by the Ingest Module later than the beginning of the interval of time span M immediately preceding the activation time of the Trigger, and the media_time of the frame is in the interval of time span L1 immediately following the receipt of the Trigger.","If any of the conditions (a), (b) or (c) holds, then an Activation Trigger can be included in the record, with an \u201ce=\u201d term to identify the Event to be activated, and a \u201ct=\u201d term to indicate the startTime of the Activation element in the AMT (for condition (a)) or the event_time of the dynamic Trigger (for condition (b)). The Trigger can also contain a version (\u201cv=\u201d) term.","The reason for continuing to associate Activation Triggers with frames throughout the interval from the startTime to the endTime in case (a), is to accommodate receivers that join the channel partway through the interval.","Note that this approach requires no extra intelligence on the part of the ACR Server. It simply returns to the ACR Client the information it finds in the Database. All the intelligence can reside in the ACR Ingest Module. Moreover, the computations the ACR Ingest Module needs to do can be very simple.","With this scheme it is possible that a receiver can get more than one Activation Trigger (associated with different frames) for the same event activation. However, a receiver can easily see from the \u201ct=\u201d values that they all have the same activation time, so the receiver can determine that they are duplicates and activate the event only once.","In two of the situations above the \u201ct=\u201d term in the Activation Trigger can have an event_time earlier than the media_time of the frame with which it is associated. In situation (a), if the endTime of the Activation element is significantly later than the startTime, then a receiver can typically get multiple Activation Triggers throughout the interval between the startTime and the endTime, and they can all have the startTime as activation times. In situation (c), the Activation Triggers for the activation can get inserted into frame records so late that the Activation Trigger a receiver gets can come in response to a request with a signature for a frame that has media_time after the activation time. When a receiver gets an Activation Trigger with an event_time earlier than the media_time of the frame with which it is associated, it can be expected to activate the event immediately, unless it recognizes it as a duplicate of an Activation Trigger it has already seen and used to activate the event.","The purpose of using event_time values in the past, rather than \u201cdo it now\u201d Triggers, for the situation when the frame media_time is later than the event activation time is because a receiver can get more than one of these \u201cafter the fact\u201d Activation Triggers. The \u201ct=\u201d values allow the receiver to determine that they all have the same activation time, and to activate the event only once.",{"@attributes":{"id":"p-0687","num":"0686"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0688","num":"0687"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0689","num":"0688"},"figref":"FIG. 29"},"Four circled vertical arrows may represent an example when a typical receiver sends a request. In this example the receiver would get two Activation Triggers for the same event activation, but they would have the same event activation times, so the receiver would recognize them as duplicates and only apply the first one. Because the interval between receiver requests is less than L1, the receiver is guaranteed to make at least one request with a signature for a frame in the L1 interval shown in the diagram. This gives it time to compute the signature, send the request to the ACR server, and get the Activation Trigger back in response, all before the activation time. In this example, the first Activation Trigger the receiver gets would be delivered well ahead of time; the second Activation Trigger the receiver gets would barely arrive in time (it is a duplicate).",{"@attributes":{"id":"p-0691","num":"0690"},"figref":"FIG. 30"},"A description will be given of activation triggers in case (b) and case (a) without EndTime.",{"@attributes":{"id":"p-0693","num":"0692"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0694","num":"0693"},"figref":"FIG. 30"},"Four circled vertical arrows may represent an example when a typical receiver sends a request. In this example the receiver would get two Activation Triggers for the same event activation, but the activation times computed by adding the value <d1> to the receiver's local time for frame f1 or adding the value <d2> to the receiver's local time of frame f2 both give the same result, so the receiver would recognize them as duplicates and only apply the first one. Because the interval between receiver requests is less than L1, the receiver is guaranteed to make at least one request with a signature for a frame in the L1 interval shown in the diagram. This gives it time to compute the signature, send the request to the ACR server, and get the Activation Trigger in response, all before the activation time. In this example, the second Activation Trigger received by the receiver would arrive after the activation time.",{"@attributes":{"id":"p-0696","num":"0695"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0697","num":"0696"},"figref":"FIG. 31"},"The figure shows an event activation startTime and endTime above the time line, with an interval of length M preceding the startTime. The arrows below the time line show the times of individual frames. Each frame preceding the beginning of the interval of length M, or following the event activation endTime, would have associated with it in the Database a Time Base Trigger. Each frame inside the interval of length M or between the startTime and endTime of the event activation would have an Activation Trigger associated with it in the Database, in the form shown by the three examples at the bottom of the figure. The \u201ct=\u201d term for each frame would indicate the event activation time, relative to the media_time line (indicated by circled f1, f2 and f3).","Three circled vertical arrows may represent an example when a typical receiver sends a request. In this case the receiver would get three Activation Triggers for the same event activation, but the activation times would all be the same, so the receiver would recognize the same as duplicates and only apply the first one.","Of course, the first two Activation Triggers shown in the diagram would not be seen at all by a receiver that joins the channel after the startTime and sends the signature of frame f3 with its first request.",{"@attributes":{"id":"p-0701","num":"0700"},"figref":"FIG. 32"},"A description will be given of activation triggers in case (a) with EndTime.",{"@attributes":{"id":"p-0703","num":"0702"},"figref":"FIG. 32"},"The figure shows an event activation startTime and endTime above the time line, with an interval of length M preceding the startTime. The arrows below the time line show the times of individual frames. Each frame preceding the beginning of the interval of length M, or following the event activation endTime, would have associated with it in the Database a Trigger with no <media_time> or <event_time> terms. Each frame inside the interval of length M would have an Activation Trigger in the Database, in the form shown by the two examples at the bottom of the figure. The \u201cd=\u201d term for each frame would indicate the length of time between that frame and the event activation time (indicated by circled vertical arrows).","Circled vertical arrows may represent an example when a typical receiver sends a request. In this case the receiver would get three Activation Triggers for the same event activation, but the activation times computed by adding the value <d1> to the receiver's local time for frame f1 or adding the value <d2> to the receiver's local time of frame f2 or adding the (negative) value <d3> to the receiver's local time of frame f3 all give the same result, such that the receiver would recognize the same as duplicates and only apply the first one.","Of course, the first two Activation Triggers shown in the diagram would not be seen at all by a receiver that joins the channel after the startTime and sends the signature of frame f3 with its first request.",{"@attributes":{"id":"p-0707","num":"0706"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0708","num":"0707"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0709","num":"0708"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0710","num":"0709"},"figref":"FIG. 34"},"A description will be given of activation triggers for case (c).",{"@attributes":{"id":"p-0712","num":"0711"},"figref":"FIG. 34"},{"@attributes":{"id":"p-0713","num":"0712"},"figref":"FIG. 34"},{"@attributes":{"id":"p-0714","num":"0713"},"figref":"FIG. 35"},"In the event driven ACR model the receiver can be expected to initiate a persistent connection to the ACR server, generate signatures associated with frames at regular intervals (e.g., every 5 seconds), and submit the signatures over the connection. The ACR server does not respond to each signature. It can send a message to the receiver when a new segment is detected or when an event activation needs to be communicated to the receiver. In this model, it is possible for the ACR server to initiate messages to the client at any time over the persistent connection.","Moreover, it is straightforward for the server to maintain a certain amount of information about each receiver, such as the segment ID (<locator_part> of a Trigger) corresponding to the most recent submission from the receiver and the recent Activation Triggers sent to the receiver.","For an ACR server that is using this event driven model and is delivering activations to receivers, the following rules can apply for messages from the ACR server.","First of all, when the ACR server receives a signature from a receiver that corresponds to a frame in a new segment, the ACR server can send a message to the receiver with a Time Base Trigger immediately, to enable the receiver to obtain the associated TPT.","Second, when the ACR server receives a signature from a receiver that corresponds to a frame in a part of a segment that has a new version number for the TPT (different from the most recent version the receiver has seen), the ACR server can send a message immediately to the receiver with a Time Base Trigger that has a \u201cv=\u201d term to enable the receiver to obtain the new version of the associated TPT.","Third, when an event is due to be activated, the ACR server can send an Activation Trigger to the receiver. If possible, it can send the Activation Trigger slightly ahead of the time when the receiver needs to apply it, with a \u201ct=\u201d term in the Activation Trigger to indicate the activation time relative to the media time line. (This is very similar to the behavior in the request\/response model.) If the ACR server learns of the activation so late that it cannot send an Activation Trigger as far ahead of time as usual, it can send an Activation Trigger as soon as it does learn of the activation. (In this latter case, the receiver could get the Activation Trigger after its activation time, in which case it can be expected to activate the event as soon as it gets the Activation Trigger.)","The architecture for the Request\/Response case shown in  is also suitable for this Event Driven case, with one difference. The difference is that for the Event Driven case there can be a new action (2a). If there are any dynamic Activation Triggers, then connections can be set up between the ACR Ingest Module and all ACR Servers that use the Database populated by the ACR Ingest Module, so that the ACR Ingest Module can send selected dynamic Activation Triggers to the ACR Servers.","The numbered actions for the Event Driven case can be similar to those for the Request\/Response case. Besides the new action (2a), action (4) is a little different, action (13) is a little different, and a new action (14) is added.","In action (4) the ACR Ingest Module can extract signatures from the frames (in the case of a fingerprint ACR system) or insert codes into the frames (in the case of a watermark ACR system), for all frames contained in segments that have an interactive service associated with them. (The ACR Ingest Module can determine whether a frame is in such a segment by using a GPS clock and the start times and end times of segments in the broadcast schedule.) For each such frame the ACR Ingest Module can insert a record in the Database that can include the signature or code associated with the frame and a Trigger. The Trigger included in the record by the ACR Ingest Module can be a Time Base Trigger unless at least one of the following two conditions holds:","(a) There is an Activation element in the AMT such that the media_time of the frame is in the time interval beginning at time span M before the startTime of the Activation element and ending at the endTime of the Activation element. (If an activation has no endTime, the endTime is considered equal to the startTime.) (Same as condition (a) for the Request\/Response ACR model)","(b) A dynamic Activation Trigger was received by the Ingest Module before the time interval of time span M immediately preceding the activation time of the Trigger (\u201ct=<event_time>\u201d), and the frame lies within that interval. (Same as condition (b) for the Request\/Response ACR model)","If either of the conditions (a) or (b) holds, then an Activation Trigger can be included in the record, with an \u201ce=\u201d term to identify the Event to be activated, and a \u201ct=\u201d term to indicate the startTime of the Activation element in the AMT (for condition (a)) or the event_time of the dynamic Trigger (for condition (b)).","If a dynamic Activation Trigger is received by the Ingest Module during the interval of time span M immediately preceding the activation time of the Trigger (where M has the same meaning as in the request\/response server case), then the Ingest Module can pass the Activation Trigger on to all the ACR Servers that are using the Database into which the Ingest Module can be inserting records, without putting anything in the Database concerning that dynamic Activation Trigger. (Variations on this architecture are possible in which dynamic Activation Triggers are passed directly from the dynamic Activation Trigger sources to the ACR servers without going through the Ingest Model, but the ACR servers get the dynamic Activation Triggers that arrive later than M time units ahead of the activation time, so that it can send a message to the relevant receivers immediately. It might be too late if it waits until the next receiver submissions.)","In action (13), if the ACR Server gets back a \u201cno match\u201d indicator from the Database after not receiving one for the immediately preceding submission, it can send a NULL message to the receiver. If it gets back a Trigger with a <locator_part> that is different from the <locator_part> it got back for the immediately preceding submission, it can send the Trigger to the receiver, In both cases this can tell the receiver that either the channel being viewed has been changed, or the segment being viewed has come to an end, so the receiver can terminate any TDO that is currently executing, and if necessary download a new TPT. If the ACR Server gets back one or more Activation Triggers, it can send them to the receiver, discarding any that are duplicates of Activation Triggers it has already sent to the receiver. Otherwise the ACR Server may do nothing.","In a new action (14), if an ACR Server receives a dynamic Activation Trigger, it can compare the <locator_part> of the dynamic Activation Trigger with the current <locator_part> for each of its ACR clients (where the current <locator_part> for a client is the <locator_part> of the Trigger that the ACR Server got from the Database for the most recent submission from the ACR client. For each client where the <locator_part> matches, the ACR Server can send the Activation Trigger to the client.",{"@attributes":{"id":"p-0730","num":"0729"},"figref":"FIGS. 29 and 31"},{"@attributes":{"id":"p-0731","num":"0730"},"figref":"FIG. 35"},{"@attributes":{"id":"p-0732","num":"0731"},"figref":"FIG. 35"},{"@attributes":{"id":"p-0733","num":"0732"},"figref":"FIG. 36"},"A description will be given of dynamic activation triggers delivered at Last Minute.",{"@attributes":{"id":"p-0735","num":"0734"},"figref":"FIG. 36"},"The figure, Dynamic Activation Triggers Delivered at Last Minute, shows a dynamic event activation time above the time line, and a time shortly preceding the event activation time when the ACR Ingest Module learns of the event actuation. The arrows below the time line show the times of individual frames. As soon as the ACR Server receives the Activation Trigger from the ACR Ingest Module, it can send the Activation Trigger to all receivers that are currently viewing the segment associated with the Activation Trigger (as identified by the <locator_part> of the Trigger). For each receiver it adjusts the event_time of the Trigger to a <delay_time> relative to the frame corresponding to the most recently submitted signature from the receiver.",{"@attributes":{"id":"p-0737","num":"0736"},"figref":"FIG. 37"},{"@attributes":{"id":"p-0738","num":"0737"},"figref":"FIG. 37"},"An exemplary operation of the request\/response model in the order of request and response will now be described.","The sequence diagram between the ACR client and other servers in a request\/response ACR case may include ACR request 1 (S), ACR response 1 (S), ACR request 2 (S), ACR response 2 (S), HTTP request 1 (S), HTTP response 1 (S), HTTP request 2 (S), HTTP response 2 (S), ACR request 3 (S), ACR response 3 (S), ACR request 4 (S) and\/or ACR response 4 (S).","ACR request 1 (S) is a step in which the receiver transmits the signature of a currently viewed program to a server. The server may be the above-described ACR server. The signature may be a fingerprint signature or a watermark.","ACR response 1 (S) is a step in which the ACR server returns NULL when the signature is not recognized or a related interactive service is not present. This may be a case corresponding to the above-mentioned case in which a NULL response is returned.","ACR request 2 (S) is a step in which, when the channel or program is changed, the receiver transmits the signature of the changed program to the ACR server.","ACR response 2 (S) is a step in which the ACR server returns a trigger (e.g. xbc.com\/tpt504) including an address by which an interactive service related to the corresponding program can be obtained. This step may correspond to a case in which the signature is recognized and a related interactive service is present, unlink ACR response 1 (S). That is, a trigger is available in this step. In this case, the returned trigger may be a time based trigger having no information about media_time.","HTTP request 1 (S) is a step in which the receiver requests the TPT server (e.g. http:\/\/xbc.com\/tpt504) to provide a corresponding TPT using the address received in ACR response 2 (S) through the http protocol.","HTTP response 1 (s) is a step in which the TPT server transmits the TPT represented in XML at the request of the receiver.","HTTP request 2 (S) is a step in which the receiver requests the content server to provide an application such as TDO using the http protocol. The receiver can parse TDO related information included in the TPT. The TDO related information may be the URL of the content server through which a TDO can be downloaded. A request can be sent using the URL of the content server.","HTTP response 2 (S) is a step in which the content server transmits the corresponding TDO at the request of the receiver.","ACR request 3 (S) is a step in which the receiver sends the signature of a frame of the currently viewed program to the ACR server.","ACR response 3 (S) is a step in which the ACR server returns a trigger (e.g. xbc.com\/tpt504) including an address through which an interactive service related to the corresponding program can be obtained. In this case, the signature is recognized and the related interactive service is present, unlike ACR response 1 (S). That is, a trigger is available in this step.","ACR request 4 (S) is a step in which the receiver transmits the signature of a frame of the currently viewed program to the ACR server.","ACR response 4 (S) is a step in which the ACR server transmits an activation trigger related to the interactive service related to the signature transmitted from the receiver. A specific event can be activated at a specific time according to the activation trigger.",{"@attributes":{"id":"p-0753","num":"0752"},"figref":"FIG. 38"},{"@attributes":{"id":"p-0754","num":"0753"},"figref":"FIG. 38"},"An exemplary operation of the event-driven model in the order of request, response to the request and event will now be described.","The sequence diagram between the ACR client and other servers in an event-driven ACR case may include ACR request 1 (S), ACR request 2 (S), ACR event 1 (S), HTTP request 1 (S), HTTP response 1 (S), HTTP request 2 (S), HTTP response 2 (S), ACR request 3 (S), ACR event 2 (S) and\/or ACR response 4 (S).","ACR request 1 (S) is a step in which the receiver transmits the signature of a currently viewed program to a server. The server may be the above-described ACR server. The signature may be a fingerprint signature or a watermark. Here, when the signature is not recognized or a related interactive service is not present, the ACR server may send no response to ACR request 1 without returning NULL, unlike the sequence of .","ACR request 2 (S) is a step in which, when the channel or program is changed, the receiver transmits the signature of the changed program to the ACR server.","ACR event 1 (S) is a step in which the ACR server returns a trigger (e.g. xbc.com\/tpt504) including an address by which an interactive service related to the corresponding program can be obtained. This step may correspond to a case in which the signature is recognized and a related interactive service is present. That is, a trigger is available in this step. In this case, the returned trigger may be a time based trigger having no information about media_time.","HTTP request 1 (S) is a step in which the receiver requests the TPT server (e.g. http:\/\/xbc.com\/tpt504) to provide a corresponding TPT using the address received in ACR event 1 (S) through the http protocol.","HTTP response 1 (s) is a step in which the TPT server transmits the TPT represented in XML at the request of the receiver.","HTTP request 2 (S) is a step in which the receiver requests the content server to provide an application such as TDO using the http protocol. The receiver can parse TDO related information included in the TPT. The TDO related information may be the URL of the content server through which a TDO can be downloaded. A request can be sent using the URL of the content server.","HTTP response 2 (S) is a step in which the content server transmits the corresponding TDO at the request of the receiver.","ACR request 3 (S) is a step in which the receiver sends the signature of a frame of the currently viewed program to the ACR server.","ACR event 2 (S) is a step in which the ACR server transmits an activation trigger related to the interactive service related to the signature transmitted from the receiver. A specific event can be activated at a specific time according to the activation trigger.","ACR request 4 (S) is a step in which the receiver transmits the signature of a frame of the currently viewed program to the ACR server.",{"@attributes":{"id":"p-0767","num":"0766"},"figref":"FIG. 39"},"Second screen support relates to a method of, at a receiver, providing a service of a broadcaster or supplementary service suitable for a program provided by the broadcaster to a second screen device. Supplementary content may be provided via an application and the application may be displayed on a TV screen such that a user utilizes the supplementary content by manipulating a remote controller. However, recently, via personalized information instruments (smartphones, smart pads and downsized laptops), supplementary services may be displayed on the second screen device while displaying content played back on the TV screen. Therefore, the user can personally utilize the supplementary services without interrupting broadcast content. If such supplementary data or information is displayed and processed on the second screen device, when several persons watch TV together, only a person interested in a supplementary service may obtain the supplementary content without interrupting TV viewing of the other persons. Second screen support may be variously used in addition to the above-described effects.","For connection and control of one device to other devices, first, which devices are included in a home network should be determined. Accordingly, one or more devices periodically transmit messages to the home network so as to notify that the devices are present in the home network. If one device is newly connected to the home network, the device may ask which devices are present in the home network before notifying that the device is newly connected. Such connection methods may aid in easily and rapidly recognizing the presence of the devices. UPnP device discovery is one method of achieving this. If a device is detected, other devices interesting in the detected device may require information about which services may be provided to that device. Electronic apparatuses in which a UPnP framework is installed may confirm mutual functions and supported function ranges. This information may be defined in a UPnP Device Profile such that the devices confirm attributes of mutually provided services. A device for providing a specific service may be always waited for. If the device for providing the specific service is detected, it is possible to ask which services are included in the detected device. If a desired service is present in the detected device, the detected device may be immediately connected to perform communication. As defined in the UPnP Service Descriptor, services may be defined and exchanged.","Since one device has a single service or a plurality of services, the service(s) may be controlled and utilized by other devices. If the device has one or more functions, a plurality of services corresponding to the functions are included and controlled by other devices. Definition of the device may have unique information about the device. For example, the unique information about the device may include information such as Model Name, Serial Number, Model Number, CE Manufacturer Name and Web Site. This information may have a unique value for each device and may not be generally changed. The service is an operation performed by a device, which is referred to as an action, and each device may have one or more actions. The action has a parameter value such as a function and may have one or more parameter values. The action is performed by a service of a device and a return value defined as necessary may be returned after performing the action.","As an example of an action,  shows types of actions of a UPnP RemoteUI Client service and a description thereof. Connection\/disconnection may be an action for returning current connection states. GetCurrentConnection may be an action for returning a current connection list. GetDeviceProfile may be an action for returning a device profile as expressed in XML. GetUIListing may be an action for returning a compatible UI list as expressed in XML. AddUIListing\/RemoveUIListing may be an action for adding a URL of a remote UI to a UI list or removing the URL of the remote UI from the UI list. ProcessInput may be an action for sending data to a RemoteUI Client service. DisplayMessage may be an action for displaying a message on a device including a RemoteUI Client service.",{"@attributes":{"id":"p-0772","num":"0771"},"figref":"FIG. 40"},"In UPnP, an XML message format such as SOAP may be used to transmit the above-described actions and necessary parameter values and SOAP may be used to remotely perform a remote procedure. These messages may be transmitted using a HTTP.","The actions of the above-described RemoteUI Client may be performed as shown in . The actions shown in  are only examples of the above-described actions.","One embodiment of the UPnP RemoteUI Client Service may be divided into a UPnP Discovery Process and RemoteUI Client Actions.","The UPnP Discovery Process may include executing a UPnP application for a second screen service (s), finding UPnP devices (s), finding a RemoteUIClient (s), requesting a device description (s), receiving a device description (s), requesting a service control description (s) and\/or receiving a service control description (s).","RemoteUI Client Actions may include requesting a device profile (s), receiving a device profile (s), putting a URL of a Remote UI (s), sending a response1 (s), sending a message to the RemoteUI Client Service (s), sending a response2 (s) and\/or user clicking the button on the screen (s).","Executing a UPnP application for a second screen service (s) may include executing a UPnP application in a second screen device (RemoteUI Client).","Finding UPnP devices (s) may include a primary device multicasting a discovery message to applications which are being executed in the second screen device. By this step, the second screen device in the network may be found. The primary device may indicate a second screen support service provided thereby via the discovery message.","Finding a RemoteUIClient (s) may include the second screen device receiving the discovery message and sending a notification message to the primary device.","Requesting a Device Description (s) may include the primary device requesting a device description for the second screen device from the second screen device.","Receiving a device description (s) may include the primary device receiving the device profile of the second screen device when the second screen device transmits the device profile of the second screen device in response to requesting the Device Description (s).","Requesting a service control description (s) may include the primary device requesting a service control description from the second screen device.","Receiving a service control description (s) may include the primary device receiving the requested service control description from the second screen device.","The primary device and the second screen device present on the network may find and recognize each other via the UPnP Discovery Process. In addition, the primary device and the second screen device may be connected to each other.","Requesting a device profile (s) may include requesting the device profile of the second screen device. The above-described GetDeviceProfile action may be utilized.","Receiving a device profile (s) may include the primary device receiving the requested device profile of the second screen device. A device (second screen device and RemoteUI Client) having the \u201cRemoteUI Client Service\u201d may be responsible for finding and displaying a URL address of a UI on the screen if a remote device (primary device) sends the URL address of the UI. In addition, the device having the \u201cRemoteUI Server Service\u201d may multicast the URL address of the UI to notify interested devices of the URL address. However, in this case, since the remote UIs are made for a specific device, the remote UI suitable for the specific device should be provided. Accordingly, device profile information also needs to be transmitted and requesting the device profile (s) and receiving the device profile (s) may be necessary.","Putting a URL of a Remote UI (s) may include notifying the second screen device of the URL address of the Remote UI. The above-described AddUIListing action may be utilized. The second screen device may add the URL address of the remote UI to UIListing.","Sending a response1 (s) may include sending the result of putting the URL of the Remote UI (s). According to circumstance, a response such as HTTP\/1.1 200 OK (the request is successfully processed), HTTP\/1.1 501 Method Not Implemented (A function necessary to process the request is not implemented), and HTTP\/1.1 400 Not Found (The requested files\/resources are not present) may be sent.","Sending a message to the RemoteUI Client Service (s) may include the primary device transmitting a display message to the second screen device. The display message may include information such as a message type. The above-described DispalyMessage action may be utilized. The second screen device may display the message on the second screen according to the display message.","Sending a response2 (s) may include sending a result of sending the message to the RemoteUI Client Service (s). Similarly to sending the response1 (s), a response such as HTTP\/1.1 200 OK may be sent.","User clicking the button on the screen (s) may include the user performing selection according to the message displayed on the second screen.","RemoteUI Client Actions describe the process of operating the RemoteUI Client service via the above-described actions.","In the description of the remote user interface, functions which may be used in an existing PC system may be simplified in consideration of resources of an electronic apparatus, the function of which is added or restricted such that an HTML based application may be used in the electronic apparatus. This description largely includes two viewpoints: applying an HTML displayed on a screen to consumer electronics and defining a browser API which is applicable to consumer electronics. The browser API may be called and used from JavaScript, which is a widely used scripting language. As a result, the API called from the JavaScript calls a function of a receiver.","Among others, the above-described UPnP device and services may be executed by JavaScript executed in the browser. There is a need for a new API for delivering other parameters to UPnP devices in browser.",{"@attributes":{"id":"p-0796","num":"0795"},"figref":"FIG. 41"},"As described above, the above-described trigger may be transmitted using a digital TV closed caption service (DTVCC). The trigger may have one URL string value and may be received as DTVCC service series #6. An MPEG-2 Transport processor  may receive the trigger as DTVCC Service Series #6 and transmit the trigger to a DTV-CC module  via a transport processor driver . At this time, user data may pass through a buffer . The DTV-CC module  may serve as a DTVCC Decoder. The DTV-CC module  may send the trigger having a URI String value to an adjunct service module . The adjunct service module  is a trigger module which may detect a URI String value so as to acquire the above-described TPT (TDO Parameters Table). As described above, it is possible to provide an adjunct service using the trigger, TPT and TDO.",{"@attributes":{"id":"p-0798","num":"0797"},"figref":"FIG. 42"},"For second screen support, there may be several requirements. 1) The receiver may be connected to one or more second screen devices. 2) The second screen device may be a portable device such as a laptop, tablet, smartphone, or PDA. 3) The primary content of the second screen may be HTML, Text, Video, Audio, etc. 4) The content played back on the second screen may be designed so as not to interrupt a broadcast program of the primary device (receiver). 5) The second screen may be connected to an ATSC 2.0 receiver directly or indirectly via a 3GPP network. 6) The provider may signal specific content to be displayed only on the second screen. 7) According to circumstance, content played back by the receiver may be designed for playback by the second screen. 8) The second screen subjected to authentication and authorization may use a second screen service. 9) Audience usage of second screen content may be measured. (In this case, in order to obtain such information, user consent must be obtained and a function for such information may be necessary) and 10) This may be provided via a device capable of enhancing secondary language or content.","This specification may describe services that can be provided by a Receiver to support the display of content related to an A\/V broadcast by applications running on second screen devices (smart phones, tablets, laptops, etc.), including content synchronized with the programming being broadcast. The service is described based on the UPnP Device Architecture.","In this specification, the ATSC 2.0 Receiver may be a TV receiver or a normal receiver. In addition, the ATSC 2.0 Receiver may be a receiver in DVB, ATSC, etc.","The UPnP Device Architecture defines protocols for communication in an IP network between \u201ccontrolled devices\u201d that provide services and \u201ccontrol points\u201d that utilize those services. In the \u201csecond screen\u201d scenario, a TV receiver can play the role of a \u201ccontrolled device,\u201d and a second screen device can play the role of a \u201ccontrol point\u201d and vice versa.","The UPnP Device Architecture specifies, \u201cdiscovery\u201d protocols for control points to discover controlled devices of interest, \u201cdescription\u201d protocols for control points to learn details about controlled devices and services, \u201ccontrol\u201d protocols for control points to invoke \u201cactions\u201d (methods) on controlled devices, and \u201ceventing\u201d protocols for controlled devices to deliver asynchronous notifications to control points. The actions and events may be provided by the device services.","When an UPnP controlled device joins a network, it can multicast discovery messages to a \u201cwell-known\u201d IP multicast address and port. These messages can identify the device type and the service types offered by the device, and they can give URLs where descriptions of the device and services can be obtained.","When an UPnP control point joins a network, it can multicast a search message asking controlled devices to announce themselves. The search message can specify the device types and\/or service types of interest. Relevant devices can respond by sending unicast discovery messages to the control point.","Once a control point gets discovery messages about devices and services of interest, it can use the URLs in the messages to request descriptions of the devices and services. These descriptions can include the URLs that can be used to invoke actions and subscribe to events for the services.","Typical Second Screen Discovery Scenarios may be largely divided into Scenario A and scenario B. In case of Scenario A, the user has a second screen app running in his\/her second screen device when the TV receiver joins the network (which perhaps happens when the TV receiver is turned on, or perhaps when its network interface is enabled). In case of Scenario B, the user does not have a second screen app running in his\/her second screen device when the TV receiver joins the network.","Scenario A may be as follows. 1) A TV receiver that provides second screen support joins the network. 2) The TV receiver multicasts its discovery messages that advertise its second screen support services. 3) The second screen app running in the second screen device receives the multicast discovery messages and sends the TV receiver a request for descriptions of its services. 4) The TV receiver responds with descriptions of its services. 5) The second screen app uses the information given in the descriptions to access the appropriate services and provide an interactive experience synchronized with the TV programming.","Scenario B may be as follows. 1) The TV programming being viewed on the TV receiver enters a program segment that offers second screen support. (This could be as soon as the TV set is turned on, or when a channel change goes from a channel that does not offer an interactive data service with second screen support to one that does offer it, or when the channel being viewed goes from a program segment that does not offer an interactive data service with second screen support to a segment that does offer it.) 2) This causes the TV receiver to inform viewers in some way that second screen support is available\u2014for example, by a small icon in a corner of the screen. 3) The viewer decides to take advantage of the second screen support and activate a second screen app on his\/her second screen device. The second screen app then multicasts a message searching for devices that offer second screen support. The TV receiver responds to this message with its discovery messages. 4) When the second screen app receives the discovery messages, it sends the TV receiver a request for descriptions of its services. 5) The TV receiver responds with descriptions of its services. 6) The second screen app uses the information given in the descriptions to access the appropriate services and provide an interactive experience synchronized with the TV programming.","Scenario A may be also as follows. 1) A TV set that provides second screen support joins the network. (This could be when the TV set is turned on, or when its network interface is enabled.) 2) This causes the TV receiver to multicast its discovery messages that advertise itself and its second screen support services. 3) If a user has a Second Screen App running is his\/her second screen device at this time, the app receives the multicast discovery messages and proceeds to step (7). 4) The TV programming being viewed on the TV receiver enters a program segment that offers second screen support. (This could be as soon as the TV set is turned on, or when a channel change goes from a channel that does not offer an interactive data service with second screen support to one that does offer it, or when the channel being viewed goes from a program segment that does not offer an interactive data service with second screen support to a segment that does offer it.). 5) This causes the TV receiver to inform viewers in some way that second screen support is available\u2014for example, by a small icon in a corner of the screen. 6) If a viewer does not already have an Second Screen App running in his\/her second screen device, the viewer can decide to take advantage of the second screen support and activate an Second Screen App on his\/her second screen device. The Second Screen App then multicasts a message searching for devices that offer second screen support. The TV receiver responds to this message with its discovery messages. 7) When the Second Screen App receives the discovery messages, it sends the TV receiver a request for descriptions of its services. 8) The TV receiver responds with descriptions of its services. These will be a Trigger service and optionally an HTTP Proxy Server service. 9) The Second Screen App will subscribe to the \u201ceventing\u201d feature of the Trigger service. If the interaction model of the interactive data service being offered is the Direct Execution model, the Trigger service will send all Triggers to the second screen device as they are received by the TV receiver. If the interaction model of the interactive data service is the TDO model, the Trigger service will send an Activation Trigger to the Second Screen App whenever the activation time of a new Activation Trigger arrives. 10) The Second Screen App will act on the Triggers, downloading TDOs and other files as needed, either from an Internet link or from the HTTP Proxy Server service offered by the TV receiver, and providing the interactive service to the second screen device user. 11) Whenever the TV programming on the TV receiver goes to a segment that does not offer an interactive data service with second screen support, the Trigger service will send a \u201cnull Trigger\u201d to the Second Screen App to notify it that an interactive data service for the second screen device is no longer available. 12) The user of the second screen device can then close the Second Screen App or leave it running to resume the interactivity whenever the programming on the TV receiver enters another segment that offers second screen support.","In either scenario it can be possible that the household has more than one TV receiver on the home network. It this case the second screen app would receive discovery messages from multiple different receivers. If that happens, the second screen app can ask the user which one to interact with (displaying information from the description messages to help the user decide).","A TV receiver that provides second screen support can offer several UPnP services for the use of second screen apps. The UPnP services can be \u201cTrigger delivery service\u201d from the receiver to a second screen app, \u201cTwo-way communications service\u201d between Declarative Objects (DOs) running in the receiver and a second screen app and \u201cHTTP proxy server service\u201d. These services can be optional depends on configuration.","These services can be designed to support a wide variety of different types of second screen applications, obtained from a wide variety of different sources, running in a wide variety of different operating environments in a wide variety of different types of second screen devices.","A typical second screen packaged apps scenario is as follows. 1) A control point on a second screen device subscribes to a Packaged Apps service on a first screen device. 2) A consumer starts a Packaged App on the first screen device. 3) The Packaged App makes the name of a second screen app and the URL of the second screen app available to the Packaged App service. 4) The control point on the second screen device receives the companion app name and URL. 5) The control point sets a marker on the second screen indicating consumer action needed. 6) The consumer reviews the second screen app name and selects it. 7) The control point launches indicated second screen app.","A first screen device that provides second screen support can offer several UPnP service for the use of second screen apps. One of the UPnP service is \u201cApplication URL service\u201d which is providing the name and URL of the companion second screen app to be executed on the second screen device.","The system architecture for the second screen scenario will be described.","The system architecture for second screen scenario may include a broadcasting system , an ACR server , a broadcaster ATSC 2.0 iTV server , an ATSC 2.0 receiver  and\/or second screen devices .","The broadcasting system  may be a normal broadcast system and may deliver triggers, A\/V, TPTs and\/or other data files via a broadcast network. The trigger may be transmitted via the DTVCC as described above.","The ACR server  is a server for managing ACR related data of broadcast content, and may transmit a trigger to the ATSC 2.0 receiver  such that the ATSC 2.0 receiver  acquires an interactive service as requested or necessary. This may be equal to the above-described ACR server.","The broadcaster ATSC 2.0 iTV server  is a server for generating and managing an interactive service, and may manage associated TDO\/files and generate and manage a TDO parameter table (TPT) including information about the associated TDO\/files.","The ATSC 2.0 Receiver  may receive the trigger related to broadcast A\/V and interactive service and acquire and provide the interactive service on the screen using the trigger. This may be equal to the above-described receiver.","The second screen devices  may include a mobile phone, a tablet, a laptop, etc. which are the second screen devices. This may be equal to the above-described second screen device.","Triggers can be delivered to the ATSC 2.0 receiver () via the DTVCC channel or via an ACR process or from a Broadcaster interactive TV (iTV) Server (). In all cases Triggers are passed from the ATSC 2.0 receiver () to the second screen devices () at the appropriate times. This specification describes mechanisms for Triggers to be passed to second screen devices (). It also describes mechanisms for DOs running on an ATSC 2.0 receiver () to establish two-way communications with second screen devices ().","Apps and other files that are available via Internet can be retrieved by second screen devices () via the home network, via a separate 3GPP network, or via an HTTP Proxy Server (not shown) on the ATSC 2.0 receiver () if it offers that service. Apps executing on first screen devices may be Packaged Apps downloaded from the Internet or apps transmitted through the broadcast.","Apps and other files that are only available via FLUTE sessions in the broadcast can be retrieved by second screen devices () only if ATSC 2.0 receiver () offers an HTTP Proxy Server that will deliver the FLUTE files when requested (assuming the second screen device () does not include a TV receiver).","This specification also describes a mechanism for Packaged Apps running on an ATSC 2.0 receiver () to support launching of applications on second screen devices ().",{"@attributes":{"id":"p-0827","num":"0826"},"figref":"FIG. 43"},{"@attributes":{"id":"p-0828","num":"0827"},"figref":"FIG. 43"},"The embodiment of topology between the ATSC 2.0 receiver and the second screen (Direct Connection) may include a broadcasting system , a broadcaster ATSC 2.0 server , an ATSC 2.0 receiver  and\/or second screen devices .","The broadcasting system  may be equal to the broadcasting system .","The broadcaster ATSC 2.0 server  may be equal to the broadcaster ATSC 2.0 iTV server .","The ATSC 2.0 receiver  may be equal to the ATSC 2.0 receiver .","The second screen devices  may be equal to the second screen devices .","The ATSC 2.0 receiver  may be connected to a broadcast network to directly receive a terrestrial broadcast. Accordingly, the ATSC 2.0 receiver  may extract the URL string of the iTV message transmitted via the DTVCC from DTVCC Service Number 6. In addition, the ATSC 2.0 receiver  may be connected to a home gateway to access the Internet as necessary. The ATSC 2.0 receiver  may communicate with devices connected in other home networks using home networking technology (UPnP).","The second screen devices  are all connected to the home gateway to communicate with the devices and to freely access the Internet. The home gateway may include all functions for supporting Ethernet and Wi-Fi.","A broadcaster may provide a supplementary service via an Internet server for an interactive service. The ATSC 2.0 receiver  or the second screen devices  may access the server to download a TDO or web page for a mobile device. In case of the ATSC 2.0 receiver , a web page may be rendered to the resolution of a TV and, in case of the second screen devices , a web page may be rendered to resolution and APIs different from those of the TV.",{"@attributes":{"id":"p-0837","num":"0836"},"figref":"FIG. 44"},{"@attributes":{"id":"p-0838","num":"0837"},"figref":"FIG. 44"},{"@attributes":{"id":"p-0839","num":"0838"},"figref":"FIG. 44"},"The embodiment of topology between the ATSC 2.0 receiver and the second screen (Indirect Connection) may include a broadcasting system , a broadcaster ATSC 2.0 server , a broadcaster session management device , an ATSC 2.0 receiver  and\/or second screen devices .","The broadcasting system  may be equal to the broadcasting system .","The broadcaster ATSC 2.0 server  may be equal to the broadcaster ATSC 2.0 iTV server .","The broadcaster session management device  may serve to manage indirect connection between the second screen device  and the ATSC 2.0 receiver .","The ATSC 2.0 receiver  may be equal to the ATSC 2.0 receiver .","The second screen devices  may be equal to the second screen devices .","Indirect connection of  does not indicate that the second screen devices  are connected to the ATSC 2.0 receiver  via the home gateway but indicates that the second screen devices  are directly connected to the 3GPP network to be connected to the ATSC 2.0 receiver  over the home network. In this case, it is difficult to connect the second screen devices  to the home network or a network interface supporting the home network may not be present.","In this case, the second screen devices  may require information about the ATSC 2.0 receiver  stored on an external Internet server. In addition, the ATSC 2.0 receiver  reports the access address to the external Internet server upon operation.",{"@attributes":{"id":"p-0848","num":"0847"},"figref":"FIG. 45"},"The second screen devices generally execute applications using OSs. In general, some functions of OSs for mobile devices may not be included, for the purpose of lightweight. Accordingly, the functions, which are not supported by the OSs, need to be included in the applications.","The software layer of  shows the software structure of a second screen service application necessary for the second screen service.  may show the case in which the receiver manages the lifecycle of the second screen application.","Since the second screen device may play Internet content back, the OS may provide an environment, in which a web application may be executed, to programmers using a platform SDK. The environment may be provided in the form of the SDK such that the application executed by the OS directly displays the Internet content.","In , Second Screen Service Application can be running on Second Screen Device. This application can be downloaded from an AppStore (or some kind of application market). Second Screen Service Application can include ACR Client and use the microphone and camera to capture the video and audio data from TV set. Moreover, the ACR client can sample video and audio data and send a media signature to the ACR server. Second Screen Service Application may run on the OS and include a protocol such as HTTP, SSDP or Multicast Event, according to which a UPnP Framework may operate, and a browser module may be included in order to perform and display a web application.","The browser module can be a module to render Internet web pages. The browser module is a core part of the web browser engine to render the Web application (e.g., ECMAScript, HTML and XHTML). In addition, the browser module may mean a software module for providing a function equal or similar to a browser provided by the OS. The method of utilizing the browser and the controllable functions differ between OSs.","Second Screen Application can be a web application that is designed for Second Screen devices. Second Screen Application may be a web application for calling functions according to ECMAScript or a web application, the size of which is controlled to be executed in the browser module provided by a mobile OS. This web application may be executed in the Second Screen Service Application.","The operating system for the mobile device may be composed of drivers supporting hardware and include drivers for a kernel-specific service. Fundamentally, it is possible to support only IP, TCP and UDP protocols. A network protocol stack is present above the OS. In case of UPnP, a HTTP may be transmitted using a UDP.","A UPnP DCP Framework may mean device control points defined in UPnP Forum.","An SSDP (Simple Service Discovery Protocol) may search for one or more services according to the device connected to the network in the home network.",{"@attributes":{"id":"p-0858","num":"0857"},"figref":"FIG. 46"},"The software layer of  shows the software structure of the second screen service application necessary for the second screen service.  may show the case in which the second screen service application manages the lifecycle of the second screen application.","The description of each entity of  may be equal to that of  in terms of role and function.","The ATSC 2.0 Trigger Client may mean a module for receiving and processing the above-described trigger, TPT, AMT, etc. This module may be included in the second screen device according to circumstance. If this module is included in the second screen device, this module may directly process the TPT and AMT to directly check the lifecycle of the application.",{"@attributes":{"id":"p-0862","num":"0861"},"figref":"FIG. 47"},"The receiver may directly receive the TPT and the AMT using the DTVCC over the broadcast network or download the TPT and the AMT over the Internet network and process the TPT and the AMT. As described above, the TPT includes event information and the event information may include EventId, Action, Destination and Data information. \u201cEvent@Destination\u201d may indicate for which device this event information is generated. For example, the destination may be a receiver or a second screen device. If the destination is set to the second screen device, the receiver should deliver the event information to the second screen device.","Accordingly, there is a need for a method of delivering this information to the second screen device. The lifecycle of the second screen application may be managed by the receiver or the second screen service application.","The table of  shows summary of information delivery methods depending on which entity manages the lifecycle of the second screen application.","The first row may be a summary of a description of the below-described case of  and a detailed description thereof will be given below.","A second row may be a summary of a description of the case in which the receiver manages the lifecycle of the second screen application and a detailed description thereof will be given below.","A third row may be a summary of a description of the case in which the receiver filters (augments) and delivers trigger information necessary for the second screen device and a detailed description thereof will be given below.","A fourth row may be a summary of a description of the below-described case of  and a detailed description thereof will be given below.","A fifth row may be a summary of a description of the below-described case of  and a detailed description thereof will be given below.",{"@attributes":{"id":"p-0871","num":"0870"},"figref":"FIG. 48"},"A method of efficiently delivering an interactive service to a second screen device may include a centralized execution model and a distributed execution model.","As shown in the diagram showing the operational concept of the centralized execution model, a TV set may generate and update an RUI to be displayed on each second screen device using an RUI mechanism of UPnP and transmit the RUI over a network. Each second screen device may receive the RUI via an RUI client in real time and display the RUI on a screen. Unlike the distributed execution model, a DAE may be present in the primary device.",{"@attributes":{"id":"p-0874","num":"0873"},"figref":"FIG. 49"},"The flow of  may be an operation when a centralized execution model mechanism is applied in an environment in which a receiver is capable of acquiring an interactive service via a broadcast network and interworks with a second screen device in the embodiment of the operational concept of the centralized execution model.","The embodiment of the flow of interworking between the centralized execution model based receiver and the second screen may include sending a time base trigger (s), requesting a TPT (s), transmitting a TPT as a response (s), parsing a TPT (s), sending an execute trigger for the second screen (s), downloading TDOs\/Files (s), generating an RUI (s), sending an RUI via a RUI protocol (s), displaying a UI on the screen (s), user clicking a link for a new page (s), sending input data (s), downloading a new TDO\/file (s), updating an RUI (s), sending an RUI via a RUI protocol (s) and\/or displaying a UI on the screen (s).","Sending a time base trigger (s) may include the receiver receiving the time base trigger via a DTVCC or ACR server. The time base trigger was described above.","Requesting a TPT (s) may include the receiver interpreting the received trigger, acquiring a URL of a server capable of acquiring the TPT, and requesting the TPT.","Transmitting a TPT as a response (s) may include transmitting the TPT in response to the request in requesting TPT (S).","Parsing a TPT (s) may include the receiver parsing the requested TPT.","Sending an execute trigger for a second screen (s) may include the receiver receiving the execute trigger for the second screen via the DTVCC or ACR server. The execute trigger may be equal to the above-described activation trigger.","Downloading TDOs\/Files (s) may include the receiver acquiring the information about the TDOs and files associated with the time base trigger or the execute trigger from the received TPT and downloading the TDOs and files indicated by the trigger from a content server.","Generating an RUI (s) may include generating the RUI for the downloaded TDOs and files.","Sending RUI via a RUI protocol (s) may include the receiver transmitting the RUI generated on the second screen using the RUI protocol.","Displaying a UI on the screen (s) may include displaying the received RUI on the second screen.","User clicking a link for a new page (s) may include clicking a specific link on the RUI by selection of the user on the second screen.","Sending input data (s) may include delivering input information of the user to the receiver if a clicked specific link is connected to another page.","Downloading a new TDO\/file (s) may include the receiver downloading TDOs and files associated with user input.","Updating an RUI (s) may include updating the RUI according to the downloaded TDOs and files.","Sending an RUI via a RUI protocol (s) may include the receiver transmitting the updated RUI to the second screen using the RUI protocol.","Displaying an UI on the screen (s) may include displaying the updated RUI on the second screen.",{"@attributes":{"id":"p-0892","num":"0891"},"figref":"FIG. 50"},{"@attributes":{"id":"p-0893","num":"0892"},"figref":"FIG. 50"},"This process may include receiving a trigger for a receiver (s), receiving a trigger for a second screen service (s), sending notification about updated UI information (s), requesting updated UI information (s), transmitting compatible UI information as a response (s) and receiving another trigger for the receiver (s).","Receiving a trigger for a receiver (s) may include the primary device receiving the trigger for the receiver, that is, the primary device, from the broadcaster via the broadcast stream.","Receiving a trigger for a second screen service (s) may include the primary device receiving the trigger for the second screen service from the broadcaster via the broadcast stream.","Sending notification about updated UI information (s) may include notifying about updated UI. As described above, if the trigger is received while viewing a broadcast program, the receiver may check whether the trigger is for the second screen device or the primary device. At this time, if the trigger is for the second screen device, all UPnP devices or only a specific UPnP device may be notified of new UI information update. This may correspond to the case in which the second screen device subscribes using the UPnP protocol.","Requesting updated UI information (s) may include the second screen device requesting updated UI information from the primary device.","Transmitting compatible UI information as a response (s) may include the primary device transmitting compatible UI information to the second screen device.","Receiving another trigger for the receiver (s) may be equal to receiving a trigger for the receiver (s). That is, the above-described operation may be performed again.","Since the receiver may include a trigger module, the receiver may receive an XML file such as TPT and AMT over a broadcast network or an Internet network, parse the XML file, and perform an appropriate operation. If the second screen device is found, Action, TDO URL and Data delivered to the second screen device may be recognized using an Event@Destination field. The second screen device may not directly receive the XML file such as TPT or AMT and thus may not include the trigger module. If a RemoteUI Client Service is included, the receiver may manage the lifecycles of all second screen applications. In contrast, if several second screen devices are connected, data for controlling the second screen application should be transmitted several times.",{"@attributes":{"id":"p-0902","num":"0901"},"figref":"FIG. 51"},"Unlike ,  shows the case in which all UI information for the second screen device, which is determined to be suitably used for the second screen device, is directly delivered. That is, TDO URLs for the second screen device may be transmitted.","This process may include receiving a trigger for the receiver (s), receiving a trigger for the second screen service (s), notifying about UI information (s), sending a response \u201cok\u201d (s), receiving a trigger for the receiver (s), receiving a trigger for the receiver (s), receiving a trigger for the second screen service (s), notifying about UI information (s) and\/or sending a response \u201cok\u201d (s).","Receiving a trigger for the receiver (s) may be equal to receiving a trigger for the receiver (s).","Receiving a trigger for the second screen service (s) may be equal to receiving a trigger for the second screen service (s).","Notifying about UI information (s) may include notifying about UI information update.","Sending a response \u201cok\u201d (s) may include transmitting a message indicating that UI notification has been received.","Receiving a trigger for the receiver (s) and receiving a trigger for the receiver (s) may be equal to receiving a trigger for the receiver (s). That is, the above-described operation may be performed again.","Receiving a trigger for the second screen service (s) may be equal to receiving a trigger for the second screen service (s). That is, the above-described operation may be performed again.","Notifying about UI information (s) may be equal to notifying about UI information (s). That is, the above-described operation may be performed again.","Sending a response \u201cok\u201d (s) may be equal to sending a response \u201cok\u201d (s). That is, the above-described operation may be performed again.","In the method of , the receiver should know which UPnP device is a second screen device and which device profile is included. In particular, the receiver should know whether the second screen device supports the second screen service.","The method (the case of ) of notifying about UI information after determining whether the trigger is for the second screen device or the primary device and the method (the case of ) of delivering all UI information for the second screen device, which is determined to be suitably used for the second screen device, may be equal in that the receiver processes the TPT and the trigger and delivers only the TDO URL to the second screen device. These two methods may differ in that the receiver indirectly delivers the TDO to the second screen device or the receiver directly records the device profile of each device and notifies only the second screen device of the location of the second screen application.",{"@attributes":{"id":"p-0915","num":"0914"},"figref":"FIG. 52"},"One embodiment of broadcast signaling for RemoteUI Server Service may include UPnP device and service discovery (s), requesting UIListing (s), sending UIListing (s), subscribing to an event (s), returning an HTTP message (s), sending a UIListingUpdate message (s), requesting UIListing (s) and\/or returning UIListing (s).","UPnP device and service discovery (s) may include discovering the receiver and the second screen device. A device newly connected to the home network or a device already connected to the home network (the receiver or the second screen device) may multicast a message for discovery. At this time, a desired service may be searched for using multicasting and all services may be searched for with respect to a plurality of unspecific UPnP devices. This may be changed depending on which service is provided by the device. In this step, the second screen device may be aware of the device profile of the primary device. The primary device can process the device profile and build the appropriate UIListing. The RemoteUI Server can give the second screen device the CompatibleUIs XSD schema. This schema can include the URL of Application, unique id for this UI (\u201cuiID\u201d), name, protocolInfo and so on.","Requesting UIListing (s) may include the second screen device transmitting the device profile thereof and requesting UIListing. A GetCompatibleUIs action capable of obtaining a compatible UI may be used. (The UIFilter can be optional) A detailed description thereof will be given below.","Sending UIListing (s) may include the primary device transmitting appropriate UI listing to the second screen device according to the request. A detailed description thereof will be given below.","Subscribing to an event (s) can include subscribing to a proper exposed Event of the primary device. Subscribing to an event (s) may be selectively performed in order to receive \u201cUIListingUpdate\u201d which is event information provided by the RemoteUI Server Service. In returning UIListing (s), the second screen device may be notified that the address of RemoteUI has been changed or the UI has been changed. That is, since the second screen device is notified only that the UI has been changed, if detailed location or additional information is required, the \u201cGetCompatibleUIs\u201d Action should be transmitted to the receiver to obtain the \u201cUIListing\u201d value.","Returning an HTTP message (s) may include sending a result of subscribing to an event (s). Similarly to sending a response1 (s), a response such as HTTP\/1.1 200 OK may be sent according to circumstance.","Sending a UIListingUpdate message (s) may include transmitting a \u201cUIListingUpdate\u201d message to subscribers.","Requesting UIListing (s) may include the second screen device transmitting the device profile thereof and requesting UIListing. A GetCompatibleUIs action capable of obtaining a compatible UI may be used. Sending a UIListingUpdate message (s) and requesting UIListing (s) may include performing time setting such that the second screen application is not changed and are selectively possible only when supported by the server. This step is optional. This method may be a method of, at the receiver, notifying all second screen devices that the second screen service is present using the UPnP event. That is, all second screen devices in the home network may be notified that the UI has been changed in association with the second screen service. If all second screen devices are notified of a \u201cUIListingUpdate\u201d variable using the UPnP event, the second screen devices may confirm that the UI has been newly updated. Thereafter, the second screen device may perform the \u201cGetCompatibleUIs\u201d Action, select a UI suitable for the hardware device, and execute the UI by referring to the device profile.","Returning UIListing (s) may include the primary device transmitting appropriate UI listing to the second screen device according to the request. As described above, returning UIListing (s) may include notifying the subscribing second screen device that the address of RemoteUI has been changed or the UI has been changed. That is, since the second screen device is notified only that the UI has been changed, if detailed location or additional information is required, a \u201cGetCompatibleUIs\u201d Action should be transmitted to the receiver to obtain the \u201cUIListing\u201d value.","When the RemoteUI Server Service operates, the receiver should provide remote UI information according to the device profile of the requesting device. From the viewpoint of backward compatibility, the device profile \u201cDeviceInfo\u201d is exchanged and the URL sent by the RemoteUI Server Service may be changed according to the profile of the requesting client when requesting \u201cGetCompatibleUIs\u201d action from the receiver later. If the legacy UPnP device requests the \u201cGetCompatibleUIs\u201d action from the RemoteUI Server, a UI suitable for DeviceInfo of the legacy UPnP device should be provided. However, if the device supporting the second screen service requests the \u201cGetCompatibleUIs\u201d action, the RemoteUI Server Service device should also transmit URL information.","The receiver may obtain trigger information via the DTVCC and obtain media time and event time information from the trigger information. At this time, \u201cappID\u201d, \u201cURL\u201d(TDO_URL), \u201ceventID\u201d, \u201caction\u201d and, optionally, \u201cData\u201d for TDO or an execution time may be confirmed using the \u201ct=media_time\u201d syntax. If the receiver manages the lifecycle of the second screen application, the amount of information to be processed by the second screen service application may be reduced. In contrast, if the second screen service application directly manages the lifecycle of the second screen application, necessary information may be increased.",{"@attributes":{"id":"p-0927","num":"0926"},"figref":"FIG. 53"},"As a method of efficiently delivering the interactive service to the second screen device, the distributed execution model will be described.","As shown in the diagram showing the operational concept of the Distributed Execution model, a TV set may deliver information such as a trigger to the second screen device using UPnP, etc. Each second screen device has a trigger handler and may process information such as a trigger received via the trigger handler in real time. The browser may execute an interactive service associated therewith.","Unlike the Centralized Execution model, a DAE may be present in each second screen device.","A process of delivering an interactive service to a second screen device based on Distributed Execution model may be performed in the following order. 1. Receiver is presenting segment with 2nd screen support. 2. Receiver displays some indication that 2nd screen support is available. 3. User launches 2nd Screen app on 2nd screen device. 4. Receiver and 2nd Screen device discover each other via UPnP mechanisms (performed by native code on receiver and 2nd Screen app on device). 5. TV set gets Trigger (from DTVCC stream or ACR) to launch TDO on 2nd Screen device. 6. TV set combines Trigger with info from TPT and sends to 2nd Screen device at activation time. 7. 2nd screen device downloads TDO (one or more files) and executes it in browser. 8. User interacts with TDO, which may cause TDO to download additional files. 9. Receiver gets Trigger to generate Event for TDO on 2nd Screen device. 10. Receiver combines Trigger with info from TPT and sends to 2nd screen device at activation time. 11. 2nd screen device generates TriggerEvent (like DVB StreamEvent) for TDO in browser. 12. TDO carries out action requested by TriggerEvent, which may cause it to download data file(s)",{"@attributes":{"id":"p-0932","num":"0931"},"figref":"FIG. 54"},"The flow of the distributed execution model may be a data flow in the case in which the receiver transmits the information received via the DTVCC or ACR server to the second screen without change. The detailed flow will now be described.","The embodiment of the flow for interworking between the distributed execution model based receiver and the second screen may include sending a time base trigger (s), sending a time base trigger (s), requesting a TPT (s), transmitting a TPT as a response (s), parsing a TPT (s), sending an execute trigger for a second screen (s), sending an execute trigger (s), downloading TDOs\/Files (s), executing a TDO in browser (s), user clicking a link for a new page (s), downloading a new TDO\/file (s) and\/or executing a new TDO in browser (s).","Sending a time base trigger (s) may be equal to sending a time base trigger (s).","Sending a time base trigger (s) may include the receiver transmitting the received trigger to the second screen without change.","Requesting TPT (s) may include the second screen interpreting the received trigger, acquiring a URL of a service capable of acquiring a TPT and requesting the TPT.","Transmitting a TPT as a response (s) may include transmitting the TPT in response to the request in requesting TPT (s).","Parsing a TPT (s) may include parsing the requested TPT.","Sending an execute trigger for a second screen (s) may be equal to sending an execute trigger for a second screen (s).","Sending an execute trigger (s) may include the receiver transmitting the received trigger to the second screen without change.","Downloading TDOs\/files (s) may include the second screen acquiring TDOs\/files associated with the trigger from the TPT and downloading the TDOs\/files from the content server.","Executing a TDO in browser (s) may include executing the downloaded TDOs and files on browser.","User clicking a link for a new page (s) may include the user clicking a specific link on the executed TDO.","Downloading a new TDO\/file (s) may include downloading the associated TDO\/file if a specific link to another TDO is established.","Executing a new TDO in browser (s) may include executing the associated TDO and file on the browser.",{"@attributes":{"id":"p-0947","num":"0946"},"figref":"FIG. 55"},"The flow of the distributed execution model may be a data flow in the case in which the receiver does not transmit the information received via the DTVCC or ACR server to the second screen without change but inserts necessary information according to a trigger suitable for the second screen, changes the information to an expanded trigger, and transmits the information to the second screen. The detailed flow will now be described.","The embodiment of the flow for interworking between the distributed execution model based receiver and the second screen may include sending a time base trigger (s), requesting a TPT (s), transmitting a TPT as a response (s), parsing TPT (s), sending an execute trigger for a second screen (s), generating an expanded trigger (s), sending an expanded trigger (s), downloading TDOs\/Files (s), executing a TDO in browser (s), user clicking a link for a new page (s), downloading a new TDO\/File (s) and\/or executing a new TDO in browser (s).","Sending a time base trigger (s) may be equal to sending a time base trigger (s).","Requesting a TPT (s) may be equal to requesting a TPT (s).","Transmitting a TPT as a response (s) may be equal to transmitting a TPT as a response (s).","Parsing a TPT (s) may be equal to parsing a TPT (s).","Sending an execute trigger for a second screen (s) may be equal to sending an execute trigger for a second screen (s).","Generating an expanded trigger (s) may include the receiver acquiring information about TDOs and files associated with the trigger from the TPT and generating an expanded trigger including the same.","Sending an expanded trigger (s) may include the receiver transmitting the generated expanded trigger to the second screen.","Downloading TDOs\/Files (s) may be equal to downloading TDOs\/Files (s).","Executing TDO in browser (s) may be equal to executing TDO in browser (s).","User clicking a link for a new page (s) may be equal to user clicking a link for a new page (s).","Downloading a new TDO\/file (s) may be equal to downloading a new TDO\/file (s).","Executing a new TDO in browser (s) may be equal to executing a new TDO in browser (s).",{"@attributes":{"id":"p-0962","num":"0961"},"figref":"FIG. 56"},{"@attributes":{"id":"p-0963","num":"0962"},"figref":"FIG. 56"},"This process may include receiving a trigger for the receiver (s), receiving a trigger for the second screen service (s), translating a TPT and a trigger and generating event information (s), sending TDO and event information (s), sending a response \u201cok\u201d (s), receiving a trigger for the receiver (s), receiving a trigger for the receiver (s), receiving a trigger for the second screen service (s), translating a TPT and a trigger and generating event information (s), sending TDO and event information (s) and\/or sending a response \u201cok\u201d (s).","Receiving a trigger for the receiver (s) may be equal to receiving a trigger for the receiver (s).","Receiving a trigger for the second screen service (s) may be equal to receiving a trigger for the second screen service (s).","Translating a TPT and a trigger and generating event information (s) may include interpreting the TPT and the trigger and generating event information. The generated information may be used to combine the information included in the TPT and trigger for generation of a new data structure and may include information about which TDO was generated or when the TDO was generated. This data structure will be described below. If the new data structure is decided, a variety of necessary information may be transmitted in addition to the TDO URL.","Sending TDO and event information (s) may include transmitting the generated event information and TDO to the second screen device.","Sending a response \u201cok\u201d (s) may include transmitting a message indicating that the received TDO and event information have been received.","Receiving a trigger for the receiver (s) and receiving a trigger for the receiver (s) may be equal to receiving a trigger for the receiver (s).","Receiving a trigger for the second screen service (s) may be equal to receiving a trigger for the second screen service (s).","Translating a TPT and a trigger and generating event information (s) may be equal to translating a TPT and a trigger and generating event information (s).","Sending TDO and event information (s) may be equal to sending TDO and event information (s).","Sending a response \u201cok\u201d (s) may be equal to sending a response \u201cok\u201d (s).","Receiving a trigger for the receiver (s), receiving a trigger for the receiver (s), receiving a trigger for the second screen service (s), translating a TPT and a trigger and generating event information (s), sending TDO and event information (s) and sending a response \u201cok\u201d (s) may be equal to the above-described operations.",{"@attributes":{"id":"p-0976","num":"0975"},"figref":"FIG. 57"},"The second screen device is an independent device, which may directly execute the second screen application if the receiver receives the XML file such as TPT and AMT or knows the TPT and AMT server address via the Internet. In this case, the trigger module is included in the second screen device. The second screen device may receive the URI string for an iTV message received by the receiver. This message is applicable to both 1) the method of transmitting the URI string for the iTV message (trigger) in case of RemoteUI Server Service and 2) the method of transmitting the URI string for the iTV message (trigger) in case of RemoteUI Client Service.","First, the method of transmitting the URI string for the iTV message (trigger) in case of RemoteUI Server Service will be described.","This process may include receiving a trigger for the receiver (s), receiving a trigger for the second screen service (s), sending notification about updated UI information (s), requesting updated UI information (s), transmitting UI information as a response (s), requesting a TPT XML file (s), returning a TPT XML file (s), receiving a trigger for the second screen service (s), sending notification about updated UI information (s), requesting updated UI information (s), transmitting UI information as a response (s), receiving a trigger for the second screen service (s), sending notification about updated UI information (s), requesting updated UI information (s), transmitting UI information as a response (s), requesting a second screen application s) and\/or returning a second screen application (s).","Receiving a trigger for the receiver (s) may be equal to receiving a trigger for the receiver (s). Since the first trigger is not for the second screen device, the receiver does not deliver the trigger to the second screen device.","Receiving a trigger for the second screen service (s) may be equal to receiving a trigger for the second screen service (s). The trigger may have information about a media time for the second screen service. The second trigger may serve as the above-described pre-load trigger.","Sending notification about updated UI information (s) may include notifying about updated UI information. The receiver may transmit the received URIString to the second screen device because the second trigger is for the second screen service. At this time, the second screen device may be informed that new information is present and may be enabled to directly read this information.","Requesting updated UI information (s) may be equal to requesting Updated UI information (s).","Transmitting UI information as a response (s) may include the primary device transmitting UI information to the second screen device. At this time, the second trigger may be transmitted.","Requesting a TPT XML file (s) may include the second screen device parsing the information (second trigger) received from the primary device and requesting a TPT XML file from the TPT server.","Returning a TPT XML file (s) may include the second screen device downloading the requested TPT XML file from the TPT server.","Receiving a trigger for the second screen service (s) may be equal to receiving a trigger for the second screen service (s). The third Trigger is associated with the second screen device and may have information regarding a media time. The third trigger is a media time trigger, which may perform the same function as the above-described time base trigger.","Sending notification about updated UI information (s) may include notifying about updated UI information. Since it is determined that the third trigger is associated with the second screen device, the receiver may notify the second screen device about the third trigger.","Requesting updated UI information (s) may be equal to requesting Updated UI information (s).","Transmitting UI information as a response (s) may include the primary device transmitting UI information to the second screen device. At this time, the third trigger may be transmitted. However, since the third trigger is a media time trigger, it is possible to control only the media time of the second screen device. Therefore, it is possible to perform media time synchronization between the second screen device and the receiver.","Receiving a trigger for the second screen service (s) may be equal to receiving a trigger for the second screen service (s). The fourth trigger is associated with the second screen device and may have information about an event time. The fourth trigger is an event time trigger, which may perform the same function as the above-described activation trigger.","Sending notification about updated UI information (s) may include notifying updated UI. Since it is determined that the fourth trigger is associated with the second screen device, the receiver may notify the second screen device of the fourth trigger.","Requesting updated UI information (s) may be equal to requesting Updated UI information (s).","Transmitting UI information as a response (s) may include the primary device transmitting UI information to the second screen device. At this time, the fourth trigger may be transmitted.","Requesting a second screen application (s) may include the second screen device checking information about the fourth trigger and requesting the second screen application from the application server in order to download the second screen application of the location of the TDO URL.","Returning a second screen application (s) may include downloading the second screen application according to the request. The second screen application may be downloaded to perform Event@Action. At this time, since the application server is informed of the information about the browser of the second screen device, the application server may easily check which second screen device is connected. Accordingly, the application may be automatically selected and downloaded from the server.","In summary, if the URI string for the iTV message is received via the DTVCC, the receiver may transmit, to the found second screen device, an event indicating that a new UI has been updated. The second screen devices may check the event information and send a \u201cGetCompatibleUIs\u201d Action in order to obtain new UI information. The receiver may send the received URI information of the TPT server. By this method, the second screen device may receive the URI information, directly process the TPT and AMT information, and directly control the second screen application.","This process is possible if the ATSC 2.0 Trigger Client is included in the second screen service application.",{"@attributes":{"id":"p-0999","num":"0998"},"figref":"FIG. 58"},"Between the above-described two methods, the method of transmitting the URI string for the iTV message (Trigger) in case of RemoteUI Client Service will be described.","This process may include receiving a trigger for the receiver (s), receiving a trigger for the second screen service (s), notifying about a trigger (s), sending a response \u201cok\u201d (s), requesting a TPT XML file (s), returning a TPT XML file (s), receiving a trigger for the second screen service (s), notifying about a trigger (s), sending a response \u201cok\u201d (s), receiving a trigger for the second screen service (s), notifying a trigger (s), sending a response \u201cok\u201d (s), requesting a second screen application (s) and\/or returning a second screen application (s).","Receiving a trigger for the receiver (s) may include the primary device receiving the trigger for the receiver, that is, the primary device, from the broadcaster via the broadcast stream. Since the first trigger is for the receiver, the first trigger is not delivered to the second screen device.","Receiving a trigger for the second screen service (s) may be equal to receiving a trigger for the second screen service (s). The second trigger is a trigger for the second screen service and may have information about a media time. The second trigger may serve as the above-described pre-load trigger.","Notifying about a trigger (s) may include the receiver immediately transmitting the trigger to the second screen device unlike . If URI string for the iTV message is received via the DTVCC, the receiver may deliver the URI value received by the receiver to the second screen device using the \u201cAddUIListing\u201d Action.","Sending a response \u201cok\u201d (s) may include transmitting a message indicating that the trigger has been received.","Requesting a TPT XML file (s) may be equal to requesting a TPT XML file (s). The trigger module included in the second screen device may access the TPT server using the received URI value, download the TPT and AMT file, and directly control the second screen application.","Returning a TPT XML file (s) may be equal to returning a TPT XML file (s).","Receiving a trigger for the second screen service (s) may be equal to receiving a trigger for the second screen service (s). The third trigger is associated with the second screen device and may have information about a media time. The third trigger is a media time trigger, which may perform the same function as the above-described time base trigger.","Notifying about a trigger (s) may include delivering the trigger similarly to notifying about a trigger (s).","Sending a response \u201cok\u201d (s) may be equal to sending a response \u201cok\u201d (s).","Receiving a trigger for the second screen service (s) may be equal to receiving a trigger for the second screen service (s). The fourth trigger is associated with the second screen device and may have information about an event time. The fourth trigger is an event time trigger, which may perform the same function as the above-described activation trigger.","Notifying about a trigger (s) may include delivering the trigger similarly to notifying about a trigger (s).","Sending a response \u201cok\u201d (s) may be equal to sending a response \u201cok\u201d (s).","Requesting a second screen application (s) may be equal to requesting a second screen application (s).","Returning a second screen application (s) may be equal to returning a second screen application (s).","That is, the receiver may always deliver the trigger having the event information associated with the second screen service to the second screen device and the second screen device may immediately operate using the downloaded TPT information. Since the media time trigger is periodically delivered using the DTVCC, the receiver should continuously deliver this information.","Since the primary device or the second screen device has the TPT XML, the AMT may also be received when the event trigger is received from the Live Trigger server in real time.","The above-described two methods may be differently performed depending on which URL value is applied and the operation of the receiver or the structure and operation of the second screen service application may be changed.","The signaling mechanisms of the second screen service will be described.","The second screen service may be signaled using two methods: a first method of, at the receiver, notifying that the second screen service is present and a second method of searching for a device and service in order to detect an electronic apparatus for providing the second screen service when the second screen device is connected to the home network. Alternatively, the receiver may confirm a device descriptor of a new electronic apparatus and request a service descriptor.","Broadcast Signaling and Unicast Signaling will be described hereinafter.","In case of Broadcast Signaling, the second screen device detects the RemoteUI server service, confirms the device descriptor and requests a DeviceInfo profile compatible with the second screen service. An event may be received and a URL of a TDO (interactive application) changed according to a program viewed via the receiver may be received.","In contrast, in case of Unicast Signaling, the receiver may confirm whether DeviceInfo of the second screen device is compatible and transmit a compatible TDO URL. The RemoveUIListing Action may be transmitted to terminate the currently executed second screen application so as to support actions such as display message and to terminate a currently executed UI. Supplementary Event@data parsed and processed by the receiver may be delivered to the second screen service application by the ProcessInput Action.","Broadcast Signaling and Unicast Signaling will be described below.",{"@attributes":{"id":"p-1025","num":"1024"},"figref":"FIG. 59"},"In broadcast signaling, if the receiver is first connected to the home network, the receiver may notify all electronic apparatuses of the device descriptor and service descriptor thereof or receive a request from another control point and transmit the device descriptor and service descriptor thereof.","Another embodiment of the broadcast Signaling for the RemoteUI Server Service may include UPnP device and service discovery (s), sending UIListing (s), sending UIListing (s), requesting UIListing (s) and\/or returning UIListing (s).","UPnP device and service discovery (s) may be equal to UPnP device and service discovery (s).","Sending UIListing (s) may include transmitting a \u201cUIListingUpdate\u201d message to all UPnP devices. The primary device can send announcement of the UIListingUpdate to UPnP Devices on a unique \u201cuiID\u201d list. The second screen device may receive this message and check uiID. However, due to mismatching with a specific uiID, the second screen device may not perform UI update.","Sending UIListing (s) may include transmitting a \u201cUIListingUpdate\u201d message to all UPnP devices. Unlike sending UIListing (s), matching uiID may be present.","Requesting UIListing (s) may include the second screen device transmitting the device profile thereof and requesting UIListing, because the matching uiID is present in sending UIListing (s). The GetCompatibleUIs action capable of obtaining a compatible UI may be used.","Returning UIListing (s) may include the primary device transmitting appropriate UI Listing to the second screen device according to the request.",{"@attributes":{"id":"p-1033","num":"1032"},"figref":"FIG. 60"},"As described above, if the receiver is first connected to the home network, the receiver may notify all electronic apparatuses of the device descriptor and service descriptor thereof or receive a request from another control point and transmit the device descriptor and service descriptor thereof.","Each UPnP devices connected to the home network, which receive the device descriptor and service descriptor of the receiver, may send the location of the device descriptor thereof using the \u201cLOCATION\u201d header of the HTTP. That is, the UPnP device may transmit the location of the UPnP device descriptor. If an HTTP GET request is made using \u201cLOCATION\u201d, an XML file including information about the device may be received.","In the UPnP device and service discovery, a method of, at the primary device, detecting the second screen device capable of providing the second screen service will be introduced. This method may be largely divided into two methods. As a first method, the second screen device prepares two device profiles and notifies about an XML file of the device profiles using an HTTP header. Assume that an incompatible primary device ignores an uncomprehended HTT header. As a second method, in the device profile, information called the second screen device for providing the second screen service may be included in \u201cProtocol Info\u201d.",{"@attributes":{"id":"p-1037","num":"1036"},"figref":"FIG. 60"},"One embodiment of device discovery and device capability exchange for the second screen service may include executing a UPnP application for the second screen service (s), finding UPnP devices (s), finding a RemoteUIClient (s), requesting a device description (s), receiving a device description (s), requesting a service control description (s), receiving a service control description (s), requesting a device profile (s), receiving a device profile (s), putting a URL of a remote UI (s), sending a response1 (s), sending a message to the RemoteUI Client Service (s), sending a response2 (s) and\/or user clicking the button on the screen (s).","Executing a UPnP application for the second screen service (s), finding UPnP devices (s), finding a RemoteUIClient (s), requesting a device description (s), receiving a device description (s), requesting a service control description (s), receiving a service control description (s), requesting a device profile (s), receiving a device profile (s), putting a URL of a remote UI (s), sending a response1 (s), sending a message to the RemoteUI client service (s), sending a response2 (s) and user clicking the button on the screen (s) may be equal to executing a UPnP application for the second screen service (s), finding UPnP devices (s), finding a RemoteUIClient (s), requesting a device description (s), receiving a device description (s), requesting a service control description (s) receiving a service control description (s), requesting a device profile (s), receiving a device profile (s), putting a URL of a remote UI (s), sending a response1 (s), sending a message to the RemoteUI Client Service (s), sending a response2 (s) and user clicking the button on the screen (s), respectively.","In the first method, as shown in , after finding UPnP devices (s), notification about the location of the device profile supporting the second screen service using \u201cX-ATSC-COMPANION-LOCATION\u201d obtained from the HTTP Header may be performed. The part represented by X-ATSC-COMPANION-LOCATION: http:\/\/10.177.56.36:37900\/ATSC2ndScreenRemoteUIClient1.xml\\r\\n is an \u201cX-ATSC-COMPANION-LOCATION\u201d. The receiver may ignore the \u201cLOCATION\u201d header and instead obtain the device profile of the second screen device which is desired by the receiver.","Among the method of, the primary device, detecting the second screen device capable of providing the second screen service, in the above-described second method, the device profile may be obtained at the location of the \u201cLOCATION\u201d header and the value of the \u201cProtocol Info\u201d of the second screen device may be parsed and processed within the device profile. This may be performed in requesting UIListing (s) of the embodiment of broadcast signaling for RemoteUI Server Service #1.","In the device descriptor of a specific UPnP device, a list of providable services is present and one or a plurality of services may be provided. Each service of the UPnP device may be controlled by another remote UPnP device and an event may be received. The event may be received only when notifying about the provided service using the event. It is possible to notify about the URL such that the services provided by the UPnP device are controlled and an event is generated.",{"@attributes":{"id":"p-1043","num":"1042"},"figref":"FIG. 61"},"In the embodiment of broadcast signaling for RemoteUI Server Service #1, requesting UIListing (s) will be additionally described. This step may include the second screen device asking the receiver having the RemoteUI server service whether a UI suitable for the second screen device is present. The \u201cInputDeviceProfile\u201d should be in the format of an XSD file shown in .","Accordingly, the second screen device should transmit information about the device profile thereof to the receiver in the format of .",{"@attributes":{"id":"p-1046","num":"1045"},"figref":"FIG. 62"},"In the embodiment of broadcast signaling for RemoteUI Server Service #1, requesting UIListing (s) will be additionally described.  shows an example of a device profile. In requesting UIListing (s), the information such as the shown device profile may be sent to the receiver.","By determining whether the second screen service of the device profile, which is desired to be detected by the second screen device, is present in the receiver, the shown information may be stored in the \u201cInputDeviceProfile\u201d variable and may be transmitted. The receiver may confirm the \u201cInputDeviceProfile\u201d information so as to define service type to be provided, version, resolution of the second screen device, a receivable image encoding method, etc.",{"@attributes":{"id":"p-1049","num":"1048"},"figref":"FIG. 63"},"In the embodiment of broadcast signaling for RemoteUI Server Service #1, requesting UIListing (s) and Sending UIListing (s) will be additionally described.","As described above, the receiver may confirm the \u201cInputDeviceProfile\u201d information so as to define service type to be provided, version, resolution of the second screen device, a receivable image encoding method, etc. One embodiment of \u201cA description of ProtocoInfo for Second Screen Service\u201d may be one embodiment of \u201cInputDeviceProfile\u201d information.","When the shown information is delivered to the receiver (requesting UIListing (s)), UIListing information in XML is transmitted to the second screen device (sending UIListing (s)).","If the RemoteUI server service does not support the desired second screen device, in sending UIListing (s), error information may be returned to indicate that the RemoteUI server service cannot support the second screen service.",{"@attributes":{"id":"p-1054","num":"1053"},"figref":"FIG. 64"},"In the embodiment of broadcast signaling for RemoteUI Server Service #1, requesting UIListing (s) and Sending UIListing (s) will be additionally described.","After requesting UIListing (s), the receiver may detect and deliver compatible RemoteUI information to the requesting second screen device (sending UIListing (s)). The information received in sending UIListing (s) is shown in .","When the received information may be transmitted from the receiver to the second screen, the TPT and the AMP may be processed to insert the TDO URL. Accordingly, the second screen device may obtain only the information about the remote UI from the receiver and the second screen application may be downloaded and executed from the Internet application server outside the home network. At this time, the application may be executed by the second screen service application.","The broadcaster may transmit the second screen application for the second screen device to the receiver over the broadcast network. In this case, the receiver may store the application for the second screen service and directly provide the application. In this case, the web server may operate in the receiver and associated image and data may be downloaded from an external application server instead of the receiver or the home network. If the DO is an NDO, NDO and associated resource files may be transmitted over the broadcast network in ATSC-NRT and the second screen service may be provided.","In case of broadcast signaling, the lifecycle of the second screen application may be managed by the receiver or the second screen service application.","First, the method of, at the receiver, managing the lifecycle of the second screen application will be described.","The receiver may process information about the media time trigger transmitted using the DTVCC and then immediately notify all devices in the home network of the \u201cUIListingUpdate\u201d variable when the event associated with the second screen is present and this event is executed. The devices that subscribe to the event may check that UI information has been updated and perform the \u201cGetCompatibleUIs\u201d action in order to obtain necessary information. At this time, the RemoteUI server of the receiver may immediately deliver the TDO address.","Second, the method of, at the second screen service application, managing the lifecycle of the second screen application will be described.","In this case, the receiver may deliver the received information to the second screen device and the second screen service application may be executed. In case of broadcasting, if the client for the second screen service requests the \u201cGetComaptibleUIs\u201d action, the receiver may directly return the URIString of an iTV message (Trigger) received via the DTVCC and the second screen device may download the TPT file using the received URIString and interpret the TPT to operate similarly to the receiver. The receiver may immediately change the \u201cUIListingUpdate\u201d variable and transmit the changed variable to all devices whenever the media time trigger or the event time trigger is received using the DTVCC, such that the devices perform the \u201cGetCompatibleUIs\u201d action so as to receive the new URIString of the iTV message (Trigger).",{"@attributes":{"id":"p-1064","num":"1063"},"figref":"FIG. 65"},"Unicast signaling will be described.","In this method, RemoteUIClient service is included in the second screen device. If the UPnP device is first connected to the home network, the UPnP device notifies the other devices that the new device has been connected to the home network. As another method, if a message requesting periodic notification about a new device is delivered to all devices connected to the home network, all the devices connected to the home network may send a NOTIFY message to all the devices in response to this information. First, whether the second screen device supports the second screen service should be determined.","One embodiment of unicast Signaling for the RemoteUI client service may include UPnP device and service discovery (s), requesting a device profile (s), returning a device profile (s), sending TDO URL information (s), returning an HTTP message (s), sending a display message (s) and\/or returning an HTTP message (s).","UPnP device and service discovery (s) may be equal to UPnP device and service discovery (s).","Requesting a device profile (s) may include the receiver transmitting \u201cStaticDeviceInfo\u201d information to the newly detected second screen device in order to determine whether the second screen device supports the second screen service.","Returning a device profile (s) is a response to requesting a device profile (s), which obtains the device profile of the second screen device. If it is determined that the device profile sent by the newly detected second screen device does not match \u201cStatic DeviceInfo\u201d or the newly detected second screen device does not support the second screen service, the second screen service may not start. \u201cStaticDeviceInfo\u201d may be equal to the above-defined \u201cDeviceInfo\u201d. The receiver may determine whether \u201cStaticDeviceInfo\u201d matches DeviceInfo. If the number of second screen devices newly detected in the home network is one or more, this process is repeated. Even when the detected second screen device does not support the second screen service, this process is continuously performed. One or more pieces of software may be installed in or deleted from the second screen device and the result value of this process may be changed depending on whether the user executes software. If the second screen service application has been performed, sending TDO URL information (s) may be performed.","Sending TDO URL information (s) may include the receiver transmitting TDO URL information, which is the result of parsing the TPT and AMT. \u201cAddUIString\u201d defined in the UPnP RemoteUI client service may be used. \u201cAddUIString\u201d may be an action executed if the second screen device satisfies DeviceInfo of the second screen service. The TDO URL may include one or more URLs. In case of one or more URLs, the URL for immediate execution may be transmitted. At this time, sending a display message (s) may be selectively performed.","Returning an HTTP message (s) may include sending the result of sending TDO URL information (s). Similarly to sending a response1 (s), a response such as HTTP\/1.1 200 OK may be sent according to circumstance.","Sending a display message (s) may include transmitting the display message to the second screen device. Since the RemoteUI client service has a DisplayMessage Action capable of displaying a message on the screen of the second screen device, the TDO URL may be transmitted to the second screen device and a message indicating that the second screen application associated with the currently viewed broadcast program is present may be displayed using the DisplayMessage Action. If the user confirms this message, the second screen application may be immediately executed.","Returning an HTTP message (s) may include transmitting the result of sending a display message (s). Similarly to sending a response1 (s), a response such as HTTP\/1.1 200 OK may be sent according to circumstance.",{"@attributes":{"id":"p-1075","num":"1074"},"figref":"FIG. 66"},"Whenever the URL of a new UI is added to UIListing of the second screen device, the second screen service application may provide an environment in which the new second screen application is executed.","One embodiment of unicast Signaling for the RemoteUI client service of  shows the process of terminating the executed second screen application and executing the new second screen application.","One embodiment of unicast Signaling for the RemoteUI client service may include sending a RemoveUIListing action (s), returning an HTTP message (s), sending a display message (s), returning an HTTP message (s), sending TDO URL information (s), returning an HTTP message (s), sending a display message (s) and\/or returning an HTTP message (s).","Sending a RemoveUIListing action (s) may include terminating the second screen application which is being executed in the second screen service application using the \u201cRemoveUIListing\u201d action defined in the RemoteUI client service. The second screen service application may be aware that the RemoveUIListing action is sent when the receiver terminates use of the currently executed application of the UI. Accordingly, the second screen service application should immediately terminate the currently executed second screen application if the second screen device receives the RemoveUIListing action.","Returning an HTTP message (s) may include sending the result of sending a RemoveUIListing action (s). Similarly to sending a response1 (s), a response such as HTTP\/1.1 200 OK may be sent according to circumstance.","Sending a display message (s) may include sending a display message to the second screen device. After sending a RemoveUIListing action (s), a message indicating execution termination may be displayed on the screen of the second screen device. In this case, an appropriate message may be displayed on the screen using the DisplayMessage Action.","Returning an HTTP message (s) may include sending the result of sending a display message (s). Similarly to sending a response1 (s), a response such as HTTP\/1.1 200 OK may be sent according to circumstance.","Sending TDO URL information (s) may include performing the AddUIListing action such that the receiver transmits the TDO URL of the UI to be newly performed. When the new second screen application is executed, the second screen service application may be executed as soon as the TDO URL is added to UIListing. For reference, the TDO URL relates to the second screen application which may be directly downloaded and executed from the receiver or only some resource data may be downloaded from the Internet server. In addition, the TDO URL may indicate an external Internet server address. If the TDO URL indicates the external Internet server address, the second screen application and all data necessary for execution may be downloaded from the Internet server.","Returning an HTTP message (s) may include sending the result of sending TDO URL information (s). Similarly to sending a response1 (s), a response such as HTTP\/1.1 200 OK may be sent according to circumstance.","Sending a display message (s) may include sending the display message to the second screen device. After sending TDO URL information (s), a message indicating that a new second screen service is provided may be displayed on the screen of the second screen device. Similarly to sending a display message (s), an appropriate message may be displayed on the screen using the DisplayMessage Action.","Returning an HTTP message (s) may include sending the result of sending display message (s). Similarly to sending a response1 (s), a response such as HTTP\/1.1 200 OK may be sent according to circumstance.","In case of unicast signaling, the lifecycle of the second screen application may be managed by the receiver or the second screen service application.","First, the method of, at the receiver, managing the lifecycle of the second screen application will be described.","The second screen service application may be aware of only \u201cURL\u201d(TDO_URL) information. Accordingly, the receiver may perform the \u201cAddUIListing\u201d action with respect to the RemoteUI client service in the second screen device and execute the second screen application in the second screen device at a predetermined time. If the second screen application is terminated, the \u201cRemoveUIListing\u201d action may be performed to terminate the second screen application within a predetermined time.","If media time information for performing a TDO is provided in addition to a URL for detailed timing, the second screen service application may be executed at a predetermined time. However, since the media time is a relative time of media which is currently being played back by the receiver, this time needs to be changed to an absolute time understood by each device. Network time protocol (NTP) or other time information may be used and a time when the action is performed may be obtained by adding the media time having future time information to the NTP or the other time information. In the second screen device, since the action includes execution and termination, this may be changed according to implementation of the AddUIListing and RemoveUIListing action.","Second, the method of, at the second screen service application, managing the lifecycle of the second screen application will be described.","The second screen service application should be aware of information regarding an event or a time when the second screen application is executed and terminated in the second screen device. Therefore, as described above, the second screen service application includes the trigger client and the receiver may transmit the URIString of the iTV message (Trigger) information received using the DTVCC according to DeviceInfo (Device Profile) of the receiver.","The transmission method may be largely divided into two methods: a first method of transmitting a trigger message transmitted using the DTVCC and processed by the receiver without change and a second method of, at the receiver, collecting only information necessary for the second screen device and delivering only necessary information and data in XML.","First, the method of, at the receiver, delivering the trigger to the second screen device without change will be described.","This method may be finished by performing the \u201cAddUIListing\u201d action with respect to the received trigger. The RemoteUI Client Service may deliver this information to the trigger client and the trigger client may download and process a TPT as in the receiver. The receiver should deliver the media time trigger to the second screen device whenever the media time trigger is received using the DTVCC. The receiver may confirm \u201cappID\u201d, \u201ceventID\u201d and \u201cevent@destination\u201d and may not deliver the trigger to the second screen device if the second screen device does not need to receive the trigger.","Second, the method of, at the receiver, filtering and delivering the trigger information necessary for the second screen device will be described.","In this method, the receiver may process the TPT file and the trigger and generate and deliver data to be processed by the second screen device. This method may be performed even when the trigger client does not operate in the second screen service application and the XML file may be transmitted and processed via the \u201cProgressInput\u201d action. That is, the second screen service application does not process the overall TPT and process only data necessary for current or future processing, which is filtered by the receiver. This method is advantageous in that the \u201cEvent@Data\u201d field may also be delivered.",{"@attributes":{"id":"p-1098","num":"1097"},"figref":"FIG. 67"},{"@attributes":{"id":"p-1099","num":"1098"},"figref":"FIG. 67"},"One embodiment of unicast signaling for the RemoteUI client service may include sending event 1 information (s), returning an HTTP message (s), sending event 2 information (s), returning an HTTP message (s), sending event 3 information (s) and\/or returning an HTTP message (s).","Sending event 1 information (s) may include the receiver sending the received event information to the second screen. As described above, the receiver may process the TPT file and the trigger and generate and deliver data to be processed by the second screen device. In the second screen service application, the trigger client may not operate and the XML file may be received and processed via the \u201cProgressInput\u201d action.","Returning an HTTP message (s) may include sending the result of sending event 1 information (s). Similarly to sending a response1 (s), a response such as HTTP\/1.1 200 OK may be sent according to circumstance.","Sending event 2 information (s) may include sending information about the event similarly to sending event 1 information (s). As in TPT XML, data may be delivered to the TDO according to event. In this step, information about event 2 may be delivered.","Returning an HTTP message (s) may include sending the result of sending event 2 information (s). Similarly to sending a response1 (s), a response such as HTTP\/1.1 200 OK may be sent according to circumstance.","Similarly, sending event 3 information (s) may include sending information about event 3.","Returning an HTTP message (s) may include sending the result of sending event 3 information (s). Similarly to sending a response1 (s), a response such as HTTP\/1.1 200 OK may be sent according to circumstance.","In the above-described second method, the receiver may manage the lifecycle of the second screen application. The lifecycle of the second screen application may mean the process of parsing and processing the TPT and the AMT information of the second screen device.",{"@attributes":{"id":"p-1108","num":"1107"},"figref":"FIG. 68"},{"@attributes":{"id":"p-1109","num":"1108"},"figref":"FIG. 68"},"That is, if the receiver manages the lifecycle of the second screen application, the event information may be delivered to the RemoteUI client via the XML file having the data structure of  using the processInput action. Even when the receiver receives the live trigger, similarly, the live trigger may be processed and only information about an execution time and a TDO URL may be delivered to the second screen device.","In the table of , @appID, URL, Event, @eventID, @action and Data may be equal to the information about the trigger or AMT received by the receiver. However, \u201c@mediaTime\u201d, \u201c@startTime\u201d and \u201c@endTime\u201d should be specially processed by the receiver. According to \u201c@mediaTime\u201d, the information of \u201ctime=\u201d syntax (or \u201c@beginMT\u201d information of the AMT) of the trigger transmitted using the DTVCC may be processed to determine \u201c@startTime\u201d and \u201c@endTime\u201d again. Since the receiver and the second screen device may not use the same absolute time information (wall clock time), the second screen device may operate according to the media time of the content. That is, if it is assumed that the time information such as an execution start time and end time of the action are set between the receiver and the second screen device according to the actual NTP, a conversion operation may be performed by the receiver before transmission.","Transmission delay and media time estimation will be described.","As described above, since @startTime and @endTime are relatively created and transmitted based on a current mediaTime value when being transmitted from the receiver to the second screen device, time loss generated upon transmission may be the \u201cDate\u201d value of the HTTP header and the HTTP response. Using a difference in arrival time value, the second screen device may find a more accurate time value. Since the difference between the current media time and @mediaTime is a transmission delay time, the current media time may be obtained by the following equation.","current media time=transmission delay time (time value upon reception\u2014HTTP header \u201cDate\u201d value)+@mediaTime","Therefore, it is possible to estimate the current media time value of the current receiver.",{"@attributes":{"id":"p-1116","num":"1115"},"figref":"FIG. 69"},"The configuration between the receiver and the second screen device is shown. The receiver can be a Controlled Device (Server). A second Screen Device can be a Control Point (Client).","In the discovery step, the receiver may multicast a service list and join a network, and the second screen app may multicast a request for the service list and start up.","In the description step, the second screen app may request the service description of the receiver.","In the present invention, a new UPnP device and service may be defined in order to, via the second screen device, acquire an interactive service associated with AN broadcast content received via a TV set, that is, a receiver, based on UPnP.",{"@attributes":{"id":"p-1121","num":"1120"},"figref":"FIG. 70"},"A Receiver can support a Trigger service, a Two-Way Communication service, and an AppURL service. It may also support an HTTP Proxy Server service. Service types and service IDs are shown in .","The two-way communication service can allow second screen devices to determine whether there is a DO being executed by the primary device that is prepared to engage in two-way communication with applications in second screen devices.","A Trigger service, an AppURL service and an HTTP Proxy Server service will be described below.",{"@attributes":{"id":"p-1125","num":"1124"},"figref":"FIG. 71"},"The trigger delivery service may mean a service for, via the second screen device, acquiring the interactive service associated with the AN broadcast content received via the TV receiver based on UPnP.",{"@attributes":{"id":"p-1127","num":"1126"},"figref":"FIG. 71"},"Whenever the trigger is changed, the trigger or the expanded trigger should be transmitted from the receiver to the second screen device in real time.",{"@attributes":{"id":"p-1129","num":"1128"},"figref":"FIG. 72"},"The expanded trigger (expanded activation trigger) may be generated by combining the trigger acquired from the DTVCC stream or the ACR Server and the information in the TPT. The expanded trigger may be generated by combining the TDO ID and Event ID, Data ID and Activation time included in the trigger and TDO URL, TDO attributes, Event, Action, Diffusion and data in the TPT. The information in the TDO may be information about TDO and event associated with the information in the trigger.","Here, the expanded trigger may be referred to as an augmented trigger.",{"@attributes":{"id":"p-1132","num":"1131"},"figref":"FIG. 73"},"Specification of Trigger Service will be described.","The Trigger service can deliver Triggers. Triggers can be acquired by the TV set from (a) ACR process, (b) DTV CC service #6 of the channel currently being viewed, (c) Remote \u201clive trigger\u201d server or (d) Activation Messages Table (AMT). It can depend on the circumstances.","The Trigger Service can also deliver a special \u201cchannel change\u201d Trigger whenever the channel is changed. The channel change trigger will be described below. There can be basically four types of Triggers to be delivered, 1) Time Base Triggers for TDO interactive service model, 2) Activation Triggers for TDO interactive service model, 3) Triggers for Direct Execution interactive service model and 4) Special \u201cchannel change\u201d Triggers.","For maximum flexibility, it can be desirable to have the option of delivering all types of Triggers to second screen devices, and to deliver them as soon as they arrive at the Receiver.","However, for second screen applications that are designed to provide interaction in much the same way as receivers provide interaction, it can be desirable to omit the Time Base Triggers for the TDO interaction model and to deliver each Activation Trigger for the TDO interaction model at its activation time, This can save these second screen applications from the need to maintain time bases and calculate activation times. It can be also desirable to augment each Activation Trigger by combining information from the Trigger with information from the TPT about the TDO element and its Event child element referenced in the Trigger, thereby saving these second screen applications from the need to deal with the TPT.","Therefore, the Trigger service can offer two options for Trigger delivery. One of them can be a \u201cUnfiltered stream\u201d option that receiver delivers all Triggers (with no augmentation). And the other can be \u201cFiltered stream\u201d option that delivers only Augmented Activation Triggers for the TDO interaction model, All triggers for interaction models other than the TDO interaction model and Special channel change Triggers.","The target delivery time for each Augmented Activation Trigger for the TDO interaction model can be its activation time. The target delivery time for all other Triggers (including Activation Triggers delivered without augmentation in the unfiltered stream option) can be the time they are received by the Receiver. The target delivery time of each special channel change Trigger can be the time of the channel change.","The trigger delivery format of the trigger service may be divided into the delivery format for an Augmented Activation Trigger and the delivery format for all other Triggers.",{"@attributes":{"id":"p-1141","num":"1140"},"figref":"FIG. 73"},"The delivery format for an Augmented Activation Trigger may include @interactionModel, @appURL, and\/or @cookieSpace attributes and Capabilities and\/or Event element.","Event element may include @action, @destination, @diffusion and\/or @data attributes.","Semantics of the fields are as follows.","The value of the @interactionModel attribute can be the numerical code for the interaction model associated with the Trigger, using the same coding as for the cmdID field in the SDOPrivateData command in Service #6 of the DTVCC channel used to deliver the Trigger. In one embodiment of the present invention, the numerical code can be using the same coding as for the URI_type field in the URI_data( ) structure in the URLString command in service 6 of the DTV CC channel used to deliver the Trigger. The syntax of URI_data( ) will be described below.","The value of the @appURL attribute can be the value of first URL child element of the TPT TDO element that is identified by the event (\u201ce=\u201d) term in the Trigger.","The @cookieSpace attribute can be present whenever the TPT TDO element that is identified by the event (\u201ce=\u201d) term in the Trigger contains a @cookieSpace attribute, and it can have the same value as that attribute.","The Capabilities element can be present whenever the TPT TDO element that is identified by the event (\u201ce=\u201d) term in the Trigger contains a Capabilities element, and it can be identical to that element.","The Event element can represent the Event element identified by the event (\u201ce=\u201d) term in the Trigger. (Strictly speaking, the event term in the Trigger identifies a TDO element in the TPT and an Event child element of that TDO element. This is referred to here as the Event element identified by the event term in the Trigger.)","The value of the @action attribute can be the same as the value of the action attribute of the Event element identified by the event (\u201ce=\u201d) term in the Trigger.","The @destination can be present whenever the Event element that is identified by the event (\u201ce=\u201d) term in the Trigger contains a destination attribute, and it can have the same value as that attribute. In one embodiment of the present invention, the @destination attribute can be present whenever the TDO element that is identified by the \u201ce=\u201d term in the Trigger contains a destination attribute.","The @diffusion attribute can be present whenever the Event element that is identified by the event (\u201ce=\u201d) term in the Trigger contains a diffusion attribute, and it can have the same value as that attribute. In one embodiment of the present invention, the @diffusion attribute can be present whenever the TDO element that is identified by the \u201ce=\u201d term in the Trigger contains a diffusion attribute.","The @data attribute can be present whenever a Data child element of the Event element is identified by the (\u201ce=\u201d) term in the Trigger, and it can have the same value as that element.","As described above, the augmented trigger may be generated by combining the information in the TPT and the trigger acquired from the DTVCC stream or the ACR Server.","As described above, the expanded trigger may also be called an augmented trigger.",{"@attributes":{"id":"p-1156","num":"1155"},"figref":"FIG. 74"},"URI_data( ) of  may be URI_data( ) stated in the above detailed description of @interactionModel attributes of AugmentedTrigger.","URI_data( ) structure may include URI_type and\/or a plurality of URI_characters. In addition, URI_data( ) structure may include Reserved bits.","URI_type, which can be a 4-bit unsigned integer, can indicate the type of URI carried in the command. The meaning of URI_type can be as shown in . Receivers can be expected to disregard instances of the URIString command indicating an unrecognized type. When the URI is sent in two segments, the URI_type field can be the same in both segments.","URI_character can be an 8-bit ASCII character whose value is restricted to those allowed for Uniform Resource Identifiers (URIs). The character string formed by the sequence of URI_character values, after reassembly if the URI is sent in two segments, can be a valid URI.",{"@attributes":{"id":"p-1161","num":"1160"},"figref":"FIG. 75"},"The meaning of URI_type of  may be the meaning of URI_type stated in the above detailed description of URI_data( ) of the syntax of URI_data( ).","When URI_type is 0, URI_type may mean that URI_data( ) is associated with Interactive TV Trigger.","When URI_type is 1, URI_type may mean that URI_data( ) is associated with Service Usage Reporting Server (SURS) locator.","When URI_type is 2-15, a type of URI_data( ) is not determined and may be reserved for future use.",{"@attributes":{"id":"p-1166","num":"1165"},"figref":"FIG. 76"},"This may be an XML format of the trigger which is not augmented. The above-described special \u201cchannel change\u201d Trigger may also follow this format.","One embodiment of XML Schema Description for Triggers that are not augmented may include @interactionModel attribute and\/or @triggerString attributes.","Semantics of the fields are as follows.","The @interactionModel attribute cannot be present for a special \u201cchannel change\u201d trigger. For other Triggers, the interactionModel can be present, and its value can be the numerical code for the interaction model associated with the Trigger, using the same coding as for the cmdID field in the SDOPrivateData command in the DTVCC channel. In one embodiment of the present invention, the numerical code can be using the same coding as for the URI_type field in the URI_data( ) structure in the URLString command in service 6 of the DTV CC channel. The @interactionModel for a Trigger acquired from a live trigger server or derived from an AMT can be deemed to be the TDO model.","The value of @triggerString attribute can be the string representation of the Trigger. The string representation of the Trigger was described in the trigger syntax. However, special \u201cchannel change\u201d trigger may be different. The @triggerString attribute for a special \u201cchannel change\u201d trigger can have value \u201c**<major_num>.<minor_num>\u201d, where the <major_num> can be the original major channel number of the new channel (as it was broadcast by the TV station), and <minor_num> can be the original minor channel number of the new channel (as it was broadcast by the TV station). If the channel number is not known, then the <major_num> and <minor_num> values can both be \u201c0\u201d.",{"@attributes":{"id":"p-1172","num":"1171"},"figref":"FIG. 77"},"This may be another embodiment of the format of the above-described augmented trigger.","@cookieSpace, Capabilities, Event, @action, @destination, @diffusion and @data were described above.","@activationTime can be activation time, on media time scale.","@tdoURL may be equal to the above-described @appURL.",{"@attributes":{"id":"p-1177","num":"1176"},"figref":"FIG. 78"},"This may be another embodiment of the format of the above-described augmented trigger.","@activationTime, @tdoURL, @cookieSpace, Capabilities, Event, @action, @destination, @diffusion and @data were described above.","@availInternet and @availBroadcast can be from TPT. @availInternet and @availBroadcast were described above.",{"@attributes":{"id":"p-1181","num":"1180"},"figref":"FIG. 79"},"This may be another embodiment of the format of the above-described augmented trigger.","activationTime, @tdoURL, @cookieSpace, Capabilities, Event, @action, @destination, @diffusion and @data ware described above.","ContentItem element, @updatesAvail, @pollPeriod, @size, @availInternet, and @availBroadcast attributes may be equal to the elements and attributes of the TPT when generating the augmented trigger. ContentItem element, @updatesAvail, @pollPeriod, @size, @availInternet and @availBroadcast were described above.",{"@attributes":{"id":"p-1185","num":"1184"},"figref":"FIG. 80"},"This may be another embodiment of the format of the above-described augmented trigger.","@cookieSpace, @availInternet, @availBroadcast Capabilities, ContentItem, @updatesAvail, @pollPeriod, @size, @availInternet, @availBroadcast, Event, @action, @destination and @data were described above.","@appID, @ appType, @appName, @globalId, @ appVersion, @frequencyOfUse, @expireDate, @testTDO, URTL in the TDO element and the URL in the ContentItem element may be equal to the elements and attributes of the TPT when generating the augmented trigger. @appID, @appType, @appName, @globalId, @appVersion, @frequencyOfUse, @expireDate, @testTDO, the URL in the TDO element and the URL in the ContentItem element will be described below.",{"@attributes":{"id":"p-1189","num":"1188"},"figref":"FIG. 81"},"Here, there can be several approaches to support the Trigger service. The several approaches may include HTTP long polling based approach and UPnP eventing mechanism based approach.","Hereinafter, the HTTP long polling based approach will be described.","In the HTTP long polling based approach, the trigger service may have one state variable.","The value of the TrigServerURL state variable can be the URL to be used by a client to retrieve Triggers, without a protocol term.","Requests to retrieve Triggers can be made using HTTP requests or WebSocket requests. When an HTTP request is made (using the TrigServerURL with protocol term http:\/\/ prepended to it), the server can respond in HTTP long polling delivery mode. When a WebSocket request is made (using the TrigServerURL with protocol term \u201cws:\/\/\u201d prepended to it), the server can respond in WebSocket delivery mode.","If the request URL contains no query term, or if it contains the query term \u201c?level=unfilter\u201d, then the server can respond in unfiltered stream option. If the request URL contains the query term \u201c?level=filter\u201d, then the server can respond in filtered stream option.","When Triggers are delivered in unfiltered stream option, and when Triggers are delivered for interaction models other than the TDO model, the body of the response can have the form of an XML document conforming to the XML schema represented by .","When Activation triggers are delivered in filtered stream option, the body of the response can have the form of an XML document conforming to the XML schema represented by .",{"@attributes":{"id":"p-1198","num":"1197"},"figref":"FIG. 82"},"In HTTP long polling based approach, the trigger service can have a single Action, GetTrigServerURL Action. The GetTrigServerURL Action can be used by clients to get the value of the TrigServerURL.",{"@attributes":{"id":"p-1200","num":"1199"},"figref":"FIG. 83"},"The TrigServerURL output argument can be the current value of the TrigServerURL state variable.","According to the present embodiment, second screen application may acquire URL to be used by a client to retrieve Triggers using GetTrigServerURL Action.",{"@attributes":{"id":"p-1203","num":"1202"},"figref":"FIG. 84"},"The embodiment shown in  may be based on the UPnP eventing mechanism based approach.","Hereinafter, the UPnP eventing mechanism based approach will be described.","One embodiment of trigger service state variables may define the shown trigger service state variables. The Trigger service can have the state variables listed in .","The value of the LatestUnfilteredTrigger state variable can represent the Trigger in the unfiltered stream with the most recent target delivery time. The format of this state variable can be an XML document conforming to the schema described in .","The value of the LatestFilteredTrigger state variable can represent the Trigger in the filtered stream with the most recent target delivery time. When it is an Activation Trigger, it can be augmented by combining information in the Activation Trigger with information in the TPT to produce an XML document conforming to the XML schema represented by Table described in . When it is a Trigger with interaction model other than TDO, it can have the form of an XML document conforming to the schema described in . When it is a special channel change Trigger, the format can be \u201c**<major_num>.<minor_num>\u201d, as described before.","The value of the UnfilteredTriggerDeliveryTime state variable can be the delivery time of the Trigger in the unfiltered stream with the most recent target delivery time. The \u201cdateTime\u201d data type can be a number representing the number of milliseconds since 00:00:00 Jan. 1, 1970.","The value of the FilteredTriggerDeliveryTime state variable can be the delivery time of the Trigger in the filtered stream with the most recent target delivery time.",{"@attributes":{"id":"p-1211","num":"1210"},"figref":"FIG. 85"},"The embodiment shown in  may be based on the UPnP eventing mechanism based approach.","The actions may be defined such that the second screen device or the receiver arbitrarily reads the value of the trigger service state variable.","In, UPnP eventing mechanism based approach, the trigger service actions may define the GetLatestUnfilteredTrigger and GetLatestFilteredTrigger action.",{"@attributes":{"id":"p-1215","num":"1214"},"figref":"FIG. 86"},"The embodiment shown in  may be based on the UPnP eventing mechanism based approach.","The value of the LatestUnfilteredTrigger output argument can be the value of the LatestUnfilteredTrigger state variable.","The second screen application may obtain the value of the LatestUnfilteredTrigger state variable, that is, the trigger in the unfiltered stream with the most recent target delivery time, using the GetLatestUnfilteredTrigger Action.",{"@attributes":{"id":"p-1219","num":"1218"},"figref":"FIG. 87"},"The embodiment shown in  may be based on the UPnP eventing mechanism based approach.","The value of the LatestFilteredTrigger output argument can be the value of the LatestFilteredTrigger state variable.","The second screen application may obtain the value of the LatestFilteredTrigger state variable, that is, the Trigger in the filtered stream with the most recent target delivery time, using the GetLatestFilteredTrigger Action.",{"@attributes":{"id":"p-1223","num":"1222"},"figref":"FIG. 88"},"The embodiment of the UPnP eventing mechanism based approach may include Receiving Triggers (s), Changing the UnfilteredTriggerDeliveryTime (s), Delivering asynchronous notifications (s), Using GetLatestUnfilteredTrigger action (s), Responding with non-augmented trigger (s), Receiving Activation Trigger (s), Changing the FilteredTriggerDeliveryTime (s), Delivering asynchronous notifications (s), Using GetLatestFilteredTrigger action (s), and\/or Responding with augmented activation trigger (s).","In , a receiver may be aforementioned receiver. Second screen device #1 may be a second screen device for supporting \u201cunfiltered stream option\u201d. Second screen device #2 may be a second screen device for supporting \u201cfiltered stream option\u201d.","The Receiving Triggers (s) may be a step in which the receiver receives trigger through DTVCC channel, an ACR process, or a Broadcaster interactive TV (iTV) Server, as described above. In this case, the received trigger may be all non-augmented type of triggers.","The Changing the UnfilteredTriggerDeliveryTime (s) may be a step in which the aforementioned UnfilteredTriggerDeliveryTime state variable is changed.","The Delivering asynchronous notifications (s) may be performed based on the aforementioned \u201ceventing\u201d protocols. The Second Screen App can subscribe to the \u201ceventing\u201d feature of the Trigger service.","The Using GetLatestUnfilteredTrigger action (s) may be a step using the aforementioned GetLatestUnfilteredTrigger action such that the second screen application acquires trigger.","The Responding with non-augmented trigger (s) may be a step of transmitting non-augmented trigger in response to the GetLatestUnfilteredTrigger action. The second screen application may acquire appropriate trigger at appropriate time using the GetLatestUnfilteredTrigger action.","The Receiving Activation Trigger (s) may be a step in which the receiver receives activation trigger through a DTVCC channel, an ACR process, or a Broadcaster interactive TV (iTV) Server, as described above.","The Changing the FilteredTriggerDeliveryTime (s) may be a step in which the aforementioned FilteredTriggerDeliveryTime state variable is changed.","The Delivering asynchronous notifications (s) may be the same as aforementioned Delivering asynchronous notifications (s).","The Using GetLatestFilteredTrigger action (s) may be a step in which the second screen application uses the aforementioned GetLatestFilteredTrigger action in order to acquire the trigger.","The Responding with augmented activation trigger (s) may be a step of transmitting augmented activation trigger in response to the GetLatestFilteredTrigger action. The second screen application may acquire appropriate trigger at appropriate time using the GetLatestFilteredTrigger action.",{"@attributes":{"id":"p-1236","num":"1235"},"figref":"FIG. 89"},"The several approaches for supporting the aforementioned trigger service may include other embodiments in addition to the HTTP long polling based approach and the UPnP eventing mechanism based approach. Hereinafter the embodiments will be described with reference to .","In the present embodiment, the trigger service state variables may be the same as in .","The value of the CurrentTrigger state variable can depend on which of the following three situations is in effect. 1) There is no interactive adjunct data service associated with the programming currently being viewed on the primary screen. 2) There is an interactive adjunct data service associated with the programming currently being viewed on the primary screen, and it has the Direct Execution interaction model. 3) There is an interactive adjunct data service associated with the programming currently being viewed on the primary screen, and it has the TDO interaction model.","In case (1), the value of the CurrentTrigger state variable can be a null string.","In case (2), the value of the CurrentTrigger state variable can be the most recent Trigger that has been received by the TV set for the programming currently being viewed on the primary screen.","In case (3), the value of the CurrentTrigger state variable can be an augmented form of the most recently activated Activation Trigger among the Activation Triggers that have been received by the TV set for the programming currently being viewed on the primary screen. (i.e., an Activation Trigger can become the basis for the CurrentTrigger state variable when its activation time arrives, and it can remain the basis until another Activation Trigger reaches its activation time.) The augmented form of the Activation Trigger can be obtained by combining information in the Activation Trigger with information in the TPT. The augmented form may be equal to one of the above-described augmented trigger formats.","The definition of the CurrentTrigger state variable can imply that for the TDO interaction model Activation Triggers are delivered to UPnP clients at the Trigger activation times.","In another embodiment of the trigger service state variables, whenever the trigger is changed, in order to transmit the trigger or the expanded trigger from the receiver to the second screen device in real time, ATSCTrigger and ATSCExpandedTrigger may be defined as the state variable.","ATSCTrigger state variable can contain a reference, in the form of a URI, to the trigger received from DTVCC stream or ACR server. This variable can include a URL for TPT (TDO parameters table), TDO ID, Event ID, Data ID, media time, content ID, an activation time for the targeted event, and so on.","ATSCExpandedTrigger state variable can contain the metadata, in the form of an XML Fragment, associated with TDO for the second screen device. This metadata could have been extracted from both TPT and trigger received from DTVCC stream or ACR server. This variable may have the same XML schema as the embodiment of .","The changed value of the above-defined ATSCTrigger and ATSCExpandedTrigger may be acquired in real time when the receiver changes the state variable based on the Eventing mechanism of UPnP.",{"@attributes":{"id":"p-1248","num":"1247"},"figref":"FIG. 90"},"In another embodiment of the above-described trigger service state variables, in which the ATSCTrigger and ATSCExpandedTrigger are defined as the state variable, trigger service actions will be described.","Even in this embodiment, the action may be defined such that the second screen device or the receiver arbitrarily writes or reads the value of ATSCTrigger and ATSCExpandedTrigger.","SetTrigger( ) action may enable use of the value of ATSCTrigger. CurrentTrigger may be argument.","SetExpandedTrigger( ) action may enable use of the value of ATSCExpandedTrigger. CurrentTrigger may be augmented.","GetTrigger( ) action may enable reading of the value of ATSCTrigger. CurrentTrigger may be argument.","GetExpandedTrigger( ) may enable reading of the value of ATSCExpandedTrigger. CurrentTrigger may be argument.",{"@attributes":{"id":"p-1255","num":"1254"},"figref":"FIG. 91"},"How the second screen device operates according to action information included in the trigger or expanded activation trigger received from the second screen device via the trigger delivery service may be shown.","The trigger of the execution\/termination action may be acquired via the trigger delivery service.","The second screen device may acquire the trigger of the execution\/termination action via the trigger delivery service and deliver the URL of the target TDO and associated information from the acquired trigger to the DAE\/browser. The browser may perform the action included in the trigger, such as execution or termination.",{"@attributes":{"id":"p-1259","num":"1258"},"figref":"FIG. 92"},"How the second screen device operates according to action information included in the trigger or expanded activation trigger received from the second screen device via the trigger delivery service may be shown.","The second screen device may acquire the trigger of the trigger event action via the trigger delivery service and then extract information such as Data ID from the acquired trigger. Thereafter, the data may be delivered to the currently executed TDO using AJAX. The TDO may perform an appropriate operation according to the received data.","In another embodiment of the above-described trigger service state variables, in which ATSCTrigger and ATSCExpandedTrigger are defined as the state variable, the operational concept of the trigger delivery service will be described.","In this embodiment, in case of Direct Execution Model, if the content id, that is, \u201cc=\u201d, is included in the trigger received via the DTVCC stream or the ACR server, the receiver may set the received time base trigger value to the value of the ATSCTrigger state variable. When the time base trigger arrives at the receiver, the value of the state variable may be immediately changed or may be delivered to the second screen device via the SetTrigger action.","In the present embodiment, in case of TDO Model, if the content id, that is, \u201cc=\u201d, is not included in the trigger received via the DTVCC stream or the ACR server, the receiver receives the activation trigger and then extract and combine associated information from the TPT and the trigger information to generate the expanded trigger. Thereafter, at (or before) the activation time of the expanded trigger, the value of the ATSCExpandedTrigger state variable may be set or delivered to the second screen device via the SetExpandedTrigger action.",{"@attributes":{"id":"p-1265","num":"1264"},"figref":"FIG. 93"},"The two-way communications service can allow client devices to determine whether there is a DO executing in the primary device that is prepared to engage in two-way communications with applications in second screen devices.","The two-way communications service can allow client devices to receive two-way communications from a DO executing in the Receiver. To support it, there can be two different approaches.","Hereafter, The First approach to realize two-way communications service will be described.","First, when a client device signs up, it can provide the IP address and TCP port of a WebSocket server (typically on the client device). When the DO wants to communicate with the client device, it can establish a WebSocket connection to it, using the address and port it provided when it signed up.","In the first approach, the Two-Way Communications service can have the state variable shown in .","The ClientList state variable can be a list of the clients that have signed up for two-way communications. And the Name, IPAddress and Port can mean a name, IP address and TCP port for each client.",{"@attributes":{"id":"p-1272","num":"1271"},"figref":"FIG. 94"},"The ClientList can be in the form of an XML document conforming to the XML schema described by the table in .","The Name state variable can be the name of a client that is signed up for two-way communications","The IPAddress state variable can be the IP address of the WebSocket server for a client that is signed up for two-way communications.","The TCPPort state variable can be the TCP port of the WebSocket server for a client that is signed up for two-way communications.",{"@attributes":{"id":"p-1277","num":"1276"},"figref":"FIG. 95"},"In the first approach, the Two-Way Communications service can have two Actions, as described by Table in .","The SignUp Action can be used by a client to indicate that it is interested in engaging in two-way communications, and to provide a name and an IP address and port to use to establish a connection.","The SignOff Action can be used by a client to indicate that it is no longer interested in engaging in two-way communications.",{"@attributes":{"id":"p-1281","num":"1280"},"figref":"FIG. 96"},"The Name input argument can be a name associated with the client that is signing up. It can be the hostname of the device. It can be distinct from the Name of any other client that is already signed up.","The IPAddress input argument can be the IP address of the WebSocket server to be used by a DO when establishing a connection.","The TCPPort input argument can be the TCP port of the WebSocket server to be used by a DO when establishing a connection.",{"@attributes":{"id":"p-1285","num":"1284"},"figref":"FIG. 97"},"The Name input argument can be the name that the client provided when it signed up for the two-way communications service. Its purpose can be to identify the client that is now signing off.",{"@attributes":{"id":"p-1287","num":"1286"},"figref":"FIG. 98"},"Hereafter, The Second approach to realize two-way communications service will be described.","When there is such a DO executing in the primary device, an application in a second screen device can request a TCP\/IP connection, indicating that the application in the second screen device is also prepared to engage in two-way communication. The TCP\/IP address and port on the second screen device side of the connection can serve as a unique identifier of the second screen device. Bytes can be sent freely back and forth between the second screen device and the DO in the primary device via the TCP\/IP connection.","The Two-Way Communications service can have the two state variables shown in .","The ConnectionAddress state variable can contain the IP address and TCP port to which connection requests from second screen devices should be directed, in the format <address>:<port>.","The Status state variable can tell whether or not there is a DO executing that is prepared to engage in two-way communications with second screen devices, with \u201ctrue\u201d meaning that there is such a DO executing, and \u201cfalse\u201d meaning that no such DO is executing.","In one embodiment of the present invention, the data type of the Status state variable can be \u201cstring\u201d. In this embodiment, the possible values of the Status state variable can be \u201cYes\u201d and \u201cNo\u201d.","In the Second approach, the Two-Way Communications service may not have any Actions.",{"@attributes":{"id":"p-1295","num":"1294"},"figref":"FIG. 99"},"Hereafter, the APIs used by a DO in the primary device to send and receive messages will be described.","The following APIs can allow a DO executing in a primary device to engage in two-way communications with applications running in second screen devices, using the Two-Way Communications service.","The TV Receiver can set the UPnP \u201cStatus\u201d state variable for the Two-Way Communications service to \u201cfalse\u201d whenever a DO terminates, so that a new DO can proactively set it to \u201ctrue\u201d before communicating.","When a data type of the aforementioned \u201cStatus\u201d state variable is a string, the TV Receiver can set the UPnP state variable \u201cStatus\u201d to \u201cNo\u201d whenever a DO starts executing, so that a DO must proactively set it to \u201cYes\u201d before communicating.","The new property, on BytesReceived function, can be added to the NetworkInterface class.","onBytesReceived function, which is a callback function, can be called when bytes are received for a DO via the Two-Way Communications service. The two arguments can be defined, \u201caddress\u201d and \u201cbytes\u201d.","\u201caddress\u201d can be a string containing the IP address and UDP port of the sender of the received bytes, in the format <address>:<port>.","\u201cbytes\u201d can be a string which represents the received bytes. In some embodiments, UDP and\/or IP header may be excluded.",{"@attributes":{"id":"p-1304","num":"1303"},"figref":"FIG. 100"},"The new methods, setStatusYes( ), can be added to the NetworkInterface class.","setStatusYes( ) can set the value of the UPnP Boolean state variable \u201cStatus\u201d of the Two-Way Communications Service to \u201ctrue\u201d, indicating that the DO is prepared to engage in communications.","setStatusYes( ) may not have any arguments.",{"@attributes":{"id":"p-1308","num":"1307"},"figref":"FIG. 101"},"The new methods, setStatusNo( ), can be added to the NetworkInterface class.","setStatusNo( ) can set the value of the UPnP Boolean state variable \u201cStatus\u201d of the Two-Way Communications Service to \u201cfalse\u201d, indicating that the DO is not prepared to engage in communications.","setStatusNo( ) may not have any arguments.",{"@attributes":{"id":"p-1312","num":"1311"},"figref":"FIG. 102"},"When a data type of the aforementioned \u201cStatus\u201d state variable is a string, setStatus( ) can be added to the NetworkInterface class.","setStatus( ) can set the value of the UPnP state variable \u201cStatus\u201d of the Two-Way Communications Service.","setStatus( ) can have a State argument.","The state argument can be set to \u201cYes\u201d if a DO is capable of engaging in two-way communications with second screen devices, and \u201cNo\u201d if not.",{"@attributes":{"id":"p-1317","num":"1316"},"figref":"FIG. 103"},"The new methods, sendBytes( ), can be added to the NetworkInterface class.","sendBytes( ) can send bytes using the Two-Way Communications service.","sendBytes( ) can have two arguments, address and bytes.","\u201caddress\u201d argument can mean the destination TCP\/IP address and port for the bytes, in the format <address>:<port>.","\u201cbytes\u201d argument can mean the bytes to be sent.",{"@attributes":{"id":"p-1323","num":"1322"},"figref":"FIG. 104"},"The AppURL service can allow second screen devices to determine the base URL and the name of the second screen application associated with the currently executing DO.","The UPnP AppURL service can have two state variables, AppURL and AppName.","The value of the AppURL state variable can be the base URL of the second screen application associated with the currently executing DO. When there is no DO with associated second screen application executing on the first screen device, the value of the AppURL state variable can be the null string.","The value of the AppName state variable can be the name of the second screen application associated with the currently executing DO. When there is no DO with associated second screen application executing on the first screen device, the value of the AppName state variable can be the null string.",{"@attributes":{"id":"p-1328","num":"1327"},"figref":"FIG. 105"},"The AppURL service can have one Action, GetAppURL.",{"@attributes":{"id":"p-1330","num":"1329"},"figref":"FIG. 106"},"The GetAppURL Action can have two arguments, AppURL and AppName.","The AppURL output argument can be the current value of the AppURL state variable. And the AppName output argument can be the current value of the AppName state variable.","Accordingly, it is possible to obtain the current value of the AppURL state variable and the current value of the AppName state variable via the GetAppURL action.",{"@attributes":{"id":"p-1334","num":"1333"},"figref":"FIG. 107"},"A Receiver can support Proxy HTTP Server service. The proxy HTTP server service may mean a service for acquiring TDOs\/files via a TV receiver if the second screen device transmits the TDOs\/files via a broadcast network.","The diagram showing the operational concept of the proxy HTTP Server service may include a broadcasting system , an ACR server , a broadcaster ATSC 2.0 iTV server , an ATSC 2.0 receiver  and\/or second screen Devices .","The broadcasting system  may be equal to the broadcasting system .","The ACR server  may be equal to the ACR server .","The broadcaster ATSC 2.0 iTV server  may be equal to the broadcaster ATSC 2.0 iTV server .","The ATSC 2.0 receiver  may receive the trigger associated with the broadcast AN and the interactive service, acquire the interactive service using the trigger, and provide the interactive service on the screen. This may be equal to the above-described receiver. The proxy HTTP server service may enable the ATSC 2.0 receiver  to perform the function similar to that of the proxy server, in order to efficiently provide the file requested by the second screen device to the second screen device.","The second screen devices  may be equal to the second screen devices .","The proxy HTTP server service may enable the receiver to access the broadcast stream or the file over the Internet via the second screen device and enable the second screen device to access the content transmitted via the broadcast stream. If a plurality of second screen devices accesses the same file over the Internet, it is possible to minimize access of the second screen devices to the same file.",{"@attributes":{"id":"p-1343","num":"1342"},"figref":"FIG. 108"},"The UPnP Proxy Server service can provide an HTTP proxy server, to allow second screen devices to access files that are delivered to the TV receiver in the broadcast via FLUTE sessions, and to make the retrieval of files from Internet servers by second screen devices more efficient in cases when multiple second screen devices in a household are retrieving the same files simultaneously.","The state variable and action may be defined in order to achieve this.","The UPnP HTTP Proxy Server service can have a single state variable, ProxyServerURL.","The value of the ProxyServerURL state variable can be the URL of the HTTP Proxy Server\u2014i.e., the URL to which HTTP requests are to be directed in order to route the requests through the proxy server.",{"@attributes":{"id":"p-1348","num":"1347"},"figref":"FIG. 109"},"The UPnP Proxy Server service can have a single Action, GetProxyURL.",{"@attributes":{"id":"p-1350","num":"1349"},"figref":"FIG. 110"},"The GetProxyURL Action can have a single argument, ProxyURL.","The ProxyURL output argument can be the current value of the ProxyServerURL state variable.","Accordingly, it is possible to obtain the current value of the ProxyServerURL state variable via the GetProxyURL action.",{"@attributes":{"id":"p-1354","num":"1353"},"figref":"FIG. 111"},"In another embodiment of the UPnP HTTP Proxy Server service state variable, the UPnP HTTP Proxy Server service State Variable called ATSCProxySeverURL may be defined. In addition, in this embodiment, the action called GetProxyServerURL( ) may be defined.","ATSCProxySeverURL state variable can contain a reference, in the form of a URI, to the proxy server in receiver. The proxy server gets the HTTP request for a file from a second screen device and retrieves the file from FLUTE sessions in the broadcast stream or the Internet. Then, the proxy server sends the retrieved file to the second screen device as HTTP response.","GetProxyServerURL( ) may be an action enabling reading of the value of ProxySeverURL. ProxySeverURL may be included as an argument.","In another embodiment of the UPnP HTTP proxy server service state variable, UPnP HTTP proxy server service state variable called ATSCFileList may be defined. In addition, in this embodiment, the action called RequestFiles( ) may be defined.","The file included in the broadcast stream may be acquired only by the receiver capable of receiving broadcast content. Therefore, in order to enable the second screen device, which cannot receive the broadcast content, to access the file included in the broadcast content, necessary UPnP state variables and actions may be defined. That is, ATSCFileList which is a file list to be downloaded via a FLUTE session is set as the UPnP state variable or the second screen device may be enabled to acquire a specific file or a plurality of files via the RequestFiles( ) action requesting the files from the receiver.","The ATSCFileList state variable can contain the CSV list of requested files to the proxy server in receiver.","RequestFiles( ) may be an action requesting to download a specific file included in the broadcast stream over the Internet. In particular, in case of a file included in the broadcast stream, the requested file may be downloaded via FLUTE session.",{"@attributes":{"id":"p-1362","num":"1361"},"figref":"FIG. 112"},"Theory of operation will be described.","There can be two modes of operation: one where a triggered application (TDO) executes on the TV receiver, and the other where a non-triggered application (Packaged App) executes on the TV receiver.","In the case of the triggered application executing on the TV receiver, when the programming currently being viewed on a TV receiver has an associated interactive data service with second screen support, a user of a second screen device can activate an appropriate application on the device. This application can go through the UPnP discovery and description process to discover the Trigger service, Two-Way Communications service, and Proxy Server service on the TV receiver.","The second screen application can then subscribe to UPnP \u201ceventing\u201d for the Trigger service to get notifications of Triggers ready for delivery, and it can use the GetLatestUnfilteredTrigger or GetLatestFilteredTrigger Action to get the Triggers it is designed to use. The result of this is that the second screen application can obtain the appropriate Triggers at the appropriate times. The application can then act on these Triggers in whatever manner it is designed to use.","The second screen application can also subscribe to UPnP \u201ceventing\u201d for the Two-Way Communications service to get notification of the TCP\/IP address and port to use to request a connection for two-way communications, and notifications of when there is a DO executing in the primary device that is prepared to communicate. The application can then engage in two-way communications with any DO that supports such communications.","The actions caused by Triggers and\/or two-way communications can often require the second screen application to download files. These files might be available from HTTP servers on the Internet, or they might be available from a d session in the TV broadcast (or both).","If all the desired files are available via the Internet, and if the second screen device has good connectivity to the network, the application can simply retrieve the files directly.","If some or all of the desired files are available only via the TV broadcast, and if the Receiver offers an HTTP Proxy Server service, then the application can get the proxy server URL with the GetProxyURL Action and retrieve the desired files via the proxy server. The application could also choose to use the proxy server in other situations where it might be more convenient to retrieve the files that way rather than directly.","In the case of the non-triggered application executing on the TV receiver, Regardless of the programming currently being viewed, a user can activate a DO on the TV receiver which, among other things, makes available the name and location of a companion application to be launched on a second screen device through the AppURL service.","A control point on the second screen device can subscribe to UPnP \u201ceventing\u201d associated with the AppURL service to get notification of changes to the AppURL and AppName variables. The control point would then indicate to the user of the second screen device that an available service is pending. Subsequently, the user would view the AppName and select the service, resulting in the companion second screen application being launched on the second screen device.","Second screen applications may be associated with a DO executing on the ATSC 2.0 receiver, even when that DO is a broadcaster-provided Packaged App previously downloaded to the receiver whose life cycle is controlled by the consumer instead of by the broadcaster. In the absence of triggers to identify a companion second screen application, the receiver offers an AppURL service that allows a control point on the second screen device to use a GetAppURL action to access a published second screen application URL and launch it on the second screen device.","One embodiment of the second screen device architecture shows the second screen application and the second screen device interworking with the receiver.","One embodiment of the second screen device architecture may include a remote content server , a TV receiver  and\/or a second screen device .","The remote content server  may provide content. The content may be provided to the receiver  or the second screen device .","The TV receiver  may provide the UPnP trigger service and the UPnP proxy server service. This receiver may be equal to the above-described receiver.","The second screen device  may have a second screen application (ATSC 2.0 App) and the second screen application may have a UPnP Control Point (CP) module in the trigger handler. The UPnP Control Point (CP) module handles all UPnP communications between the Second Screen Application (ATSC 2.0 App) and the Trigger service and Proxy Server service on the TV Receiver (). It can manage the discovery process, obtain the proxy server URL, and subscribe to the Trigger service eventing.","Triggers that arrive from the UPnP Trigger service can be turned over to the Trigger Handler. If a Trigger indicates that a new Declarative Object (DO) is to be downloaded and executed in the DAE (Declarative Application Environment\u2014i.e., browser), the Trigger Handler can take care of that. If a Trigger indicates that the DO already executing in the browser should take some action, the Trigger Handler can pass the Trigger in to the DO. The user of the second screen device can interact with the DOs. The Trigger Handler can be invisible to the user.","The Second Screen App can perform the following functions as needed. 1) Use the UPnP discovery and description protocols to find the Trigger service and, if available, the Proxy Server service on the TV receiver. 2) Use the UPnP SUBSCRIBE protocol to subscribe to the Trigger service eventing. 3) Invoke the GetProxyURL Action of the Proxy Server service to get the URL of the HTTP proxy server (if available). 4) Receive Triggers delivered via the Trigger service events. 5) If a Direct Execution Trigger is received, and the DO identified in the Trigger is not already running in the DAE, start it running in the DAE (downloading if first if needed). 6) Pass each received Direct Execution Trigger in to the DO identified in the Trigger (after downloading and starting the DO if needed). 7) If a TDO Trigger is received, and if the Action attribute of the Trigger is anything other than \u201cTriggerEvent\u201d, perform the Action (e.g., prepare to run a TDO, run a TDO, terminate a TDO, etc.). 8) If a TDO Trigger is received, and if the Action attribute of the Trigger is \u201cTriggerEvent\u201d, pass the Trigger in to the TDO identified as the target of the Trigger. If the TDO is not already running in the DAE, discard the Trigger. 9) Download files (including TDOs) as needed, either via a direct Internet connection or via the Proxy Server service on the TV receiver.","Direct Execution Triggers and TDO Trigger can be acted on immediately when received unless they contain a \u201cspread\u201d or \u201cdiffusion\u201d attribute. When a Trigger contains a \u201cspread\u201d or \u201cdiffusion\u201d attribute, the action can be delayed for a random interval.",{"@attributes":{"id":"p-1382","num":"1381"},"figref":"FIG. 113"},"The diagram showing the simplified structure of the receiver may include an antenna (rcvr), a tuner (rcvr), an EPG (rcvr), a VSB or DVB Demodulator (rcvr), a channel manager (rcvr), an SI module (rcvr), a MPEG-2 TS system decoder (rcvr), a caption module (rcvr), a trigger module (rcvr), a web browser (rcvr), a UPnP framework (rcvr), a network protocol stack (rcvr), a network interface (rcvr), a UI module (rcvr), an audio decoder (rcvr), a video decoder (rcvr), speakers (rcvr), a display module (rcvr), a graphic processor (rcvr), a remote controller receiver (rcvr) and\/or a remote controller (rcvr).","Antenna (rcvr) may receive a broadcast signal according to a broadcast stream. Here, the antenna (rcvr) may be one generally used in the technical field.","Tuner (rcvr) may seek or tune to a channel of the receiver and may include a radio frequency amplifier, a local oscillator, a frequency conversion and input circuit, a seeker, etc. The Tuner (rcvr) may be one generally used in the technical field.","The EPG (rcvr) may be a broadcast program guide service for providing a TV program broadcast time, content, and actor information using an empty frequency of a TV broadcast or supplementary channel (Electronic program guide). The received EPG data is stored and the viewer manipulates the EPG using the remote controller to select and reserve a program, thereby performing pay per view program order, program search per subject or type, video recording, etc. The received EPG may also be delivered to the UI module.","VSB or DVB Demodulator (rcvr) may modulate a VSB signal or a DVB signal. VSB or DVB Demodulator (rcvr) may restore the modulated VSB or DVB (e.g., OFDM-modulated signal) to an original signal. The demodulation process of VSB or DVB Demodulator (rcvr) may be one generally used in the technical field.","The channel manager (rcvr) may perform channel management using the received EPG. The EPG processed by the SI module may be delivered. The channel manager may serve as a general channel manager.","The SI module (rcvr) may confirm program specific information if the broadcast stream is received via the MPEG-2 TS System Decoder (rcvr). Using the confirmed information, how many captions are present in the broadcast program and presence of the trigger in service #6 may be determined.","MPEG-2 TS System Decoder (rcvr) can decode the transport stream (TS) of the demodulated signal. The MPEG-2TS System Decoder rcvr may obtain and deliver a caption stream from the transport stream to the caption module rcvr. The MPEG-2TS System Decoder rcvr may send the decoded audio and video signal to the audio\/video decoder.","Caption Module (rcvr) may receive the caption stream. The caption module rcvr may monitor service #6 or other services and determine whether service #6 or services for transmitting the trigger is selected and sent to the trigger module rcvr or whether caption text is processed and displayed on a screen. Trigger data may be delivered to the trigger module rcvr. Other caption services may be subjected to caption text processing and sent to the graphic processor rcvr. The caption module (rcvr) delivers the trigger to the trigger module (rcvr) via the confirmed information if the trigger is included in the currently received digital caption.","Trigger Module (rcvr) may parse trigger, TPT and\/or AMT information and process the parsed data. The trigger module rcvr may access the network via the network protocol stack rcvr using the URI information value of the trigger. The URI information value may be the address of the HTTP server. The trigger module rcvr may analyze the TPT file content to obtain the TDO URL. In addition, the trigger module rcvr may parse the AMT to process data. Other information may be obtained through parsing. After the AMT message has been received, the TDO URL corresponding to the web browser is delivered according to a predetermined time and operation or the currently operating TDO may be stopped at a predetermined time. This corresponds to a TDO action and the trigger module rcvr may send a command to the web browser to operate. The operation of the trigger module rcvr related to the present invention will be described in detail below. The trigger module (rcvr) may directly or indirectly access the Internet server via the network protocol stack (rcvr). The trigger module (rcvr) may immediately interpret the trigger received via the DTVCC and download and process the TPT file from the Internet via the network interface (rcvr) as necessary. The TPT file may be immediately processed after downloading, thereby performing a necessary operation. At this time, if the trigger associated with the second screen and the associated event are present, as described above, communication with the second screen device may be performed using various methods. Such communication may be performed by the below-described UPnP Framework (rcvr).","Web Browser (rcvr) may receive the command from the trigger module rcvr, a browser key code from the UI module rcvr and a browser key code from the remote controller receiver rcvr and communicate with the network protocol stack rcvr.","The UPnP Framework (rcvr) may detect the second screen device and transmit the trigger or regenerate and transmit information necessary for the second screen device. As described above, when the trigger is received via the network interface (rcvr), if the trigger associated with the second screen and the associated event are present, the UPnP Framework (rcvr) may perform communication with the second screen device.","Network Protocol Stack (rcvr) may communicate with the trigger module rcvr and the web browser to access the server via the network interface rcvr.","Network Interface (rcvr) performs common connection of several other apparatuses or connection of a network computer and an external network. The network interface may be connected to the server to download a TDO, a TPT, an AMT, etc. Here, operation of the network interface rcvr may be operation of the network interface rcvr one generally used in the technical field. Operation of the network interface rcvr related to the present invention will be described in detail below.","UI Module (rcvr) may receive information input by a viewer using the remote controller rcvr through the remote controller receiver rcvr. If the received information is related to a service using the network, the browser key code may be delivered to the web browser. If the received information is related to currently displayed video, the signal may be delivered to the display module rcvr via the graphic processor rcvr.","Audio Decoder (rcvr) may decode the audio signal received from the MPEG-2TS System Decoder rcvr. Thereafter, the decoded audio signal may be sent to the speaker and output to the viewer. Here, the audio decoder rcvr may be one generally used in the technical field.","Video Decoder (rcvr) may decode the video signal received from the MPEG-2TS System Decoder rcvr. Thereafter, the decoded video signal may be sent to the display module rcvr to be output to the viewer. Here, the video decoder rcvr may be one generally used in the technical field.","Speakers (rcvr) may output the audio signal to the viewer. The speaker may be one generally used in the technical field.","Display Module (rcvr) may output the video signal to the viewer. The display module rcvr may be one generally used in the technical field.","Graphic Processor (rcvr), may perform graphic processing with respect to the caption text received from the caption module rcvr and the viewer input information received from the UI module rcvr. The processed information may be delivered to the display module rcvr. The graphic processor rcvr may be one generally used in the technical field.","Remote Controller Receiver (rcvr) may receive information from the remote controller rcvr. At this time, the key code may be delivered to the UI module rcvr and the browser key code may be delivered to the web browser.","Remote Controller (rcvr) delivers the signal input by the viewer to the remote controller receiver rcvr. The remote controller rcvr may receive viewer input for changing a virtual channel. In addition, the remote controller may receive information selected by the viewer with respect to the application. The remote controller rcvr may deliver the received information to the remote controller receiver rcvr. At this time, the information may be remotely delivered using infrared (IR) light at a distance out of a predetermined range.",{"@attributes":{"id":"p-1405","num":"1404"},"figref":"FIG. 114"},"One embodiment of the structure of the second screen device may include an IO subsystem , a file system , a network protocol subsystem  and basic modules .","The IO subsystem  may be connected with all devices which may be mounted in the second screen device for external connection. The IO subsystem  may be connected with a keypad, a display, a microphone, a speaker, a stereo jack, a motion sensor, a light sensor, a GPS and a camera. Each I\/O device may be controlled by a key module, a display control module, an audio control module, a sensor control module and\/or a camera control module. Each I\/O device is controlled by a device driver and each sensor or camera may access any program if a function is called by the IO subsystem  in the form of an SDK. In some cases, a function may be restricted such that access is possible only in a native application.","The file system  may read and write a file for an external SD card and may be connected to a USB to perform data communication. A device such as an SD card, a flash memory or a USB may be connected. This may be controlled by SD Interface, Flash Memory Control or USB BUS Control.","The network protocol subsystem  may perform communication via 3GPP, Wi-Fi and\/or Bluetooth.","The basic modules  may be included in the second device. A battery manager may manage the battery amount of the second screen device and a notification module may be used when a communication provider or a manufacturer provides a notification to the second screen device. In addition, a store module may be used to purchase applications for a second screen made using an open SDK provided by the second screen device. An application manager may manage an application installed using the store module and notify about application upgrade. In addition, a web module may be included such that the second screen device performs Internet access. Various functions of the second screen may be set according to personal preference and a user preference program may be used.","The basic modules  have various functions and may be programs installed in the second screen device. However, the modules denoted by dotted lines may be selectively software modules installed by the user","For example, the UPnP framework module may not be supported by the second screen device or may be installed in the second screen device. If the UPnP framework module is installed, a native application is also installed to easily perform a UPnP operation. However, in the structure of the receiver, the UPnP framework may enable the user to install a second screen service application or an application supporting the UPnP framework. It is possible to find a receiver capable of receiving a terrestrial wave via the UPnP framework module.",{"@attributes":{"id":"p-1413","num":"1412"},"figref":"FIG. 115"},"One embodiment of the second screen service Scenario will be described.","One embodiment of the second screen service scenario may include receiving a trigger (s), requesting a TPT (s), transmitting a TPT as a response (s), requesting a TDO (s), transmitting a TDO as a response (s), executing a TDO (s), sending a scanDeviceList message (s), calling a discovery function (s), executing a UPnP application (s), multicasting a searching message (s), notifying a UPnP Framework (s), returning a device list (s), returning a device handle (s), sending a scanServiceList message (s), calling a service list function (s), sending a GetServiceDescription message (s), sending an HTTP message (s), returning a service list (s), returning a list of service handle (s), sending a hnHandle message (s), calling a service list function (s), sending a GetDeviceProfile message (s), sending an HTTP message (s), returning a soap response (s), returning a soap response XML (s), parsing a soap response (s), sending a hnHandle message (s), calling a service List function (s), sending a InputUIListing message (s), sending an HTTP message (s), returning a soap response (s), returning TimeToLive (s), sending a hnHandle message (s), calling a service List function (s), sending a DisplayMessage (s), sending an HTTP message (s), returning Null (s), returning Null (s) and\/or executing a second screen application (s).","Receiving a trigger (s) may include receiving the trigger from the broadcaster using a DTVCC iTV message via a broadcast stream.","Requesting a TPT (s) may include parsing and interpreting the received trigger and requesting the TPT related to the broadcaster Internet server.","Transmitting a TPT as a response (s) may include transmitting the TPT as a response.","Requesting a TDO (s) may include requesting the TDO from the broadcaster Internet server if the related TDO needs to be downloaded.","Transmitting a TDO as a response (s) may include transmitting the requested TDO.","Executing a TDO (s) may include the trigger module executing the TDO.","Sending a scanDeviceList message (s) may include the executed DO (or TDO) sending a message for requesting device list scan.","Calling a discovery function (s) may include calling the discovery function of the UPnP framework for device discovery.","Executing a UPnP application (s) may include the second screen device executing a UPnP application for a second screen service launcher. This step is independent of the primary device and may be performed before executing a UPnP application (s).","Multicasting a searching message (s) may include the UPnP framework multicasting the searching message for searching for the second screen device in the home network.","Notifying a UPnP Framework (s) may include the second screen device, which receives the searching message, transmitting a notifying message to the primary device. Thus, it is possible to notify about presence of the second screen device.","Returning a device list (s) may include the UPnP framework returning the device list after device discovery.","Returning device handle (s) may include delivering the received device list to the DO.","Sending a scanServiceList message (s) may include the executed DO (or TDO) transmitting a message for requesting service list scan.","Calling a service list function (s) may include calling the service list function of the UPnP framework for service discovery.","Sending a GetServiceDescription message (s) may include requesting the service description of the second screen device from the second screen device.","Sending an HTTP message (s) may include sending the result of sending a GetServiceDescription message (s). As described above, a message such as HTTP\/1.1 200 OK (success) may be sent. The service description may be received in XML.","Returning a service list (s) may include returning the service list after the UPnP framework receives the service description.","Returning a list of service handle (s) may include returning the received service list.","Sending a hnHandle message (s) may include sending a message in order to obtain a device profile.","Calling a service list function (s) may include calling a service list function of the UPnP framework for service discovery.","Sending a GetDeviceProfile message (s) may include requesting the service description of the second screen device from the second screen device. Sending an HTTP message (s) may include sending the request result in sending a GetDeviceProfile message (s). As described above, a message such as HTTP\/1.1 200 OK (success) may be sent. A device profile may be received.","Returning a soap response (s) may include returning the received device profile.","Returning a soap response XML (s) may include returning the received device profile in XML.","Parsing a soap response (s) may include the DO parsing the received SOAP message.","Sending a hnHandle message (s) may include sending a message in order to notify the second screen device of the URL address of the second screen service.","Calling a service List function (s) may include calling the service list function of the UPnP framework.","Sending a InputUIListing message (s) may include notifying the second screen device of the URL address of the second screen service. The above-described AddUIListing action may be used. The second screen device may add the acquired URL to UIListing.","Sending an HTTP message (s) may include sending the request result in sending an InputUIListing message (s). As described above, a message such as HTTP\/1.1 200 OK (success) may be sent.","Returning a soap response (s) may include a returning a message indicating that the URL has been transmitted.","Returning TimeToLive (s) may include sending the request result in sending an InputUIListing message (s), similarly to sending an HTTP message (s).","Sending a hnHandle message (s) may include sending a message in order to deliver a display message to the second screen device.","Calling a service List function (s) may include calling the service list function of the UPnP framework.","Sending a DisplayMessage (s) may include transmitting the display message to the second screen device. The display message may include information such as message type. The above-described DispalyMessage action may be used. The second screen device may display the message on the second screen according to the display message.","Sending an HTTP message (s) may include sending the result of sending a DisplayMessage (s). As described above, a message such as HTTP\/1.1 200 OK (success) may be sent.","Returning null (s) may include returning null if HTTP\/1.1 200 OK is received.","Returning null (s) may include returning null to the DO if null is received as a response.","Executing a second screen application (s) may include the second screen device executing the second screen application.",{"@attributes":{"id":"p-1454","num":"1453"},"figref":"FIG. 116"},"The embodiment of the method of processing a digital service signal in the primary device may include executing a primary application (s), transmitting messages of interactive services (s), receiving a request for descriptions (s), transmitting the descriptions (s), and\/or providing the interactive services (s).","The executing a primary application (s) may be a step in which the primary device executes a primary application for the digital service signal. Here, the primary application can be a triggered application or a non-triggered application. Here, the primary device can be a TV receiver described above. Here, the primary application may refer to DO that can be executed by the TV receiver. Here, the primary application may be DO, TDO, NDO, or UDO.","In the transmitting messages of interactive services (s), the messages may refer to messages of interactive services for a secondary application associated with the primary application. Here, the aforementioned message may be transmitted to the second screen device (or application that is being executed by the second screen device) from the primary device. Here, the interactive services can include a first mode related to the triggered application or a second mode related to the non-triggered application. Here, the secondary application may be associated with the aforementioned primary application and application executed by the second screen device. The application may refer to DO, TDO, NDO, or UDO. Here, the triggered application may refer to TDO and the non-triggered application may refer to NDO.","The receiving a request for descriptions (s) may be a step in which the primary device receives description from the second screen device (or application being executed by the second screen device). Here, the description may refer to a description for identifying the aforementioned interactive service.","The transmitting the descriptions (s) may be a step in which the primary device transmits a requested description to the second screen device (or application being executed by the second screen device). Here, the description may include service type information and service id information of each of the interactive services described in the description. Here, the service id information can identify each of the interactive services. Here, the service type information can indicate a type of the each of the interactive services.","The providing the interactive services (s) may be a step in which the primary device provides interactive services to the second screen device (or application being executed by the second screen device). The interactive service may be provided by transmitting information for the interactive services.","In one embodiment of the present invention, information for the interactive services, described above, can be defined according to the each of the interactive services. And the information for the interactive services, described above, can be one of triggers, bytes and URL information. Here, when the aforementioned information for the interactive services corresponds to triggers, the primary device may provide trigger service. Here, when the aforementioned information for the interactive services corresponds to bytes, the primary device may provide the two-way communication service. Here, when the aforementioned information for the interactive services is URL information, the primary device may provide the AppURL service.","In another embodiment of the present invention, the information for the interactive services, described above, can be triggers. And at least one of the triggers can include channel change information having a value for indicating changed numbers of channels of the digital service signal. The present embodiment may correspond to a case in which the aforementioned trigger service transmits the aforementioned channel change trigger. At least one trigger including the channel change information may refer to the aforementioned channel change trigger. The channel change information may have a value indicating the changed channel number.","In another embodiment of the present invention, when the information for the interactive services, described above, are triggers, the method can further include: augmenting the triggers by combining with information in a TPT, wherein the TPT contains metadata about the triggered application; and transmitting the augmented triggers having an event indicator indicating an event identified in the triggers. Here, \u201cwhen the information for the interactive services are triggers\u201d may refer to a case in which the primary device provides the trigger service. The present embodiment may correspond to a case in which the aforementioned augmented trigger is generated and transmitted. The \u201caugmenting the triggers by combining with information in a TPT\u201d may be a step of combining information contained in TPT and trigger. Here, the event indicator may refer to an event element in the aforementioned AugmentedTrigger.","In another embodiment of the present invention, the information for the interactive services, described above, can be bytes. And the interactive services can include a status state variable indicating whether or not the application is executed and prepared to engage in communication with the secondary application. And the method can further include setting the status state variable. The present embodiment may refer to a case in which the primary device provides the two-way communication service. Here, status state variable may refer to Status state variable in the second approach of the aforementioned two-way communication service. Here, the \u201csetting the status state variable\u201d may refer to a case using the aforementioned setStatusYes( ), setStatusNo( ) or setStatus( ) API.","In another embodiment of the present invention, the primary application uses an API to provide interactive services. The present embodiment may refer to a case in which the primary device provides the two-way communication service. Here, the API may refer to sendBytes API among APIs of the aforementioned two-way communication service.","In another embodiment of the present invention, the API can include an address argument having information about an address and port for the bytes and a bytes argument. Here, the address argument may refer to address argument of sendBytes API. Here, the bytes argument may refer to bytes argument of sendBytes API.","In another embodiment of the present invention, the method further comprising: receiving a request for the messages of interactive services for the secondary application associated with the primary application, before the transmitting messages. Second screen device can send a request to primary device. The request is for the messages of interactive services for the secondary application associated with the primary application. Here, the messages may refer to the aforementioned discovery message. When the primary device receives the request for the messages, the primary device can transmit the messages to second screen device. The present embodiment may correspond to device discovery or service discovery.",{"@attributes":{"id":"p-1468","num":"1467"},"figref":"FIG. 117"},"The embodiment of the method of processing a digital service signal in the secondary application may include executing an application (s), receiving messages of interactive services (s), sending a request for descriptions (s), receiving the descriptions (s), subscribing to protocols for notifications (s), receiving the notifications (s), receiving information using the received notifications (s), and\/or downloading files (s).","The executing an application (s) may be a step in which the second screen device executes an application for the digital service signal. Here, the application may refer to DO, TDO, NDO, or UDO that can be executed by the second screen device.","In the receiving messages of interactive services (s), the messages may refer to messages of interactive services for the executed application. Here, the message may be transmitted to the second screen device from the primary device.","The sending a request for descriptions (s) may be a step in which the second screen device (or second screen application being executed by the second screen device) requests description to the primary device. Here, the descriptions can identify the interactive services.","The receiving the descriptions (s) may be a step in which the second screen device (or second screen application being executed by the second screen device) receives description requested by the primary device. Here, the descriptions can have service id information identifying each of the interactive services, and service type information indicating a type of the each of the interactive service.","The subscribing to protocols for notifications (s), the receiving the notifications (s), and the receiving information using the received notifications (s) may be included in a step in which the second screen device (or second screen application being executed by the second screen device) approaches at least one interactive service using the aforementioned description.","The subscribing to protocols for notifications (s) may be a step in which the second screen device (or second screen application being executed by the second screen device) subscribes to protocols for notification for at least one interactive service provided by the primary device, which may be the aforementioned step of subscribing to the \u201ceventing\u201d protocol.","The receiving the notifications (s) may be the aforementioned step of receiving notification for an interactive service from the primary device. The notification may be aforementioned asynchronous notification.","The receiving information using the received notifications (s) may be a step of receiving information about interactive service using the received notification.","The downloading files (s) may be a step of downloading files for the approach interactive service. The files may be aforementioned application.","In one embodiment of the present invention, the information for the interactive services, described above, can be defined according to the each of the interactive services. And the information for the interactive services, described above, can be one of triggers, bytes and URL information. Here, when the aforementioned information for the interactive services corresponds to triggers, the primary device may provide trigger service. Here, when the aforementioned information for the interactive services corresponds to bytes, the primary device may provide the two-way communication service. Here, when the aforementioned information for the interactive services is URL information, the primary device may provide the AppURL service.","In another embodiment of the present invention, when the information for the discovered interactive service are triggers, at least one of the triggers can include channel change information having a value for indicating changed numbers of channels of the digital service signal. The present embodiment may correspond to a case in which the aforementioned trigger service transmits the aforementioned channel change trigger. At least one trigger including the channel change information may refer to the aforementioned channel change trigger. The channel change information may have a value indicating the changed channel number.","In another embodiment of the present invention, when the information for the accessed interactive service, described above, can be bytes, the method further includes: determining whether the interactive services is prepared to start or not using the received notifications; and transmitting a request for a connection for transmitting the bytes using the received notifications. The present embodiment may correspond to a case in which the aforementioned two-way communication service is provided. In the present embodiment, notification may be for indicating whether DO being executed by the primary device is ready to communicate. In the present embodiment, the connection for transmitting the bytes can be a TCP\/IP connection. In addition, the present embodiment may correspond to an operation for requesting TCP\/IP connection to the primary device.","In another embodiment of the present invention, the method further comprising: sending a request for the messages of interactive services for the executed application, before the receiving messages. Second screen device can send a request to primary device. The request is for the messages of interactive services for the secondary application. Here, the messages may refer to the aforementioned discovery message. When the primary device receives the request for the messages, the primary device can transmit the messages to second screen device. The present embodiment may correspond to device discovery or service discovery.",{"@attributes":{"id":"p-1483","num":"1482"},"figref":"FIG. 118"},"The embodiment of the apparatus for processing a digital service signal as the primary device may include an executing module , a transmitting module , a receiving module , and\/or a providing module .","The executing module  can be configured to execute a primary application for the digital service signal. Here, the primary application can be a triggered application or a non-triggered application. Here, the primary device can be a TV receiver described above. Here, the primary application may refer to DO that can be executed by a TV receiver. Here, the primary application may be DO, TDO, NDO, or UDO.","The transmitting module  can be configured to transmit messages of interactive services for a secondary application associated with the primary application. And the transmitting module  can be configured to transmit descriptions identifying the interactive services. Here, the interactive services can include a first mode related to the triggered application or a second mode related to the non-triggered application. Here, the description can be transmitted according a request. The aforementioned message may be transmitted to the second screen device (or application being executed by the second screen device). Here, the secondary application may be application associated with the aforementioned primary application and application executed by the second screen device. The application may refer to DO, TDO, NDO, or UDO. Here, the triggered application may refer to TDO and the non-triggered application may refer to NDO.","The receiving module  can be configured to receive the request for the descriptions having service id information identifying each of the interactive services and service type information indicating a type of the each of the interactive services. Here, the description may include service type information and service id information of each of the interactive services described in the description.","Here, the transmitting module  and the receiving module  may be included in one module according to a designer's intention.","The providing module  can be configured to provide the interactive services by transmitting information for the interactive services. The providing module  may provide interactive services to the second screen device (or application being executed by the second screen device).","In one embodiment of the present invention, the information for the interactive services, described above, can be defined according to the each of the interactive services. And the information for the interactive services, described above, can be one of triggers, bytes and URL information. Here, when the aforementioned information for the interactive services corresponds to triggers, the primary device may provide the trigger service. Here, when the aforementioned information for the interactive services corresponds to bytes, the primary device may provide the two-way communication service. Here, when the aforementioned information for the interactive services is URL information, the primary device may provide the AppURL service.","In another embodiment of the present invention, the information for the interactive services, described above, can be triggers. And at least one of the triggers can include channel change information having a value for indicating changed numbers of channels of the digital service signal. The present embodiment may correspond to a case in which the aforementioned trigger service transmits the aforementioned channel change trigger. At least one trigger including the channel change information may refer to the aforementioned channel change trigger. The channel change information may have a value indicating the changed channel number.","In another embodiment of the present invention, when the information for the interactive services, described above, are triggers, the apparatus can further include an augmenting module. The augmenting module can be configured to augment the triggers by combining with information in a TPT. The TPT can contain metadata about the triggered application. The transmitting module, described above, can further transmit the augmented triggers having an event indicator indicating an event identified in the triggers. Here, \u201cwhen the information for the interactive services are triggers\u201d may refer to a case in which the primary device provides the trigger service. The present embodiment may correspond to a case in which the aforementioned augmented trigger is generated and transmitted. The augmenting module may combine information included in TPT and trigger. Here, the event indicator may refer to an event element in the aforementioned AugmentedTrigger.","In another embodiment of the present invention, the information for the interactive services, described above, can be bytes. And the interactive services can include a status state variable indicating whether or not the application is executed and prepared to engage in communication with the secondary application. And the method can further include setting the status state variable. The present embodiment may refer to a case in which the primary device provides the two-way communication service. Here, status state variable may refer to Status state variable in the second approach of the aforementioned two-way communication service. Here, the \u201csetting the status state variable\u201d may refer to a case using the aforementioned setStatusYes( ), setStatusNo( ) or setStatus( ) API.","In another embodiment of the present invention, the primary application uses an API to provide interactive services. The present embodiment may refer to a case in which the primary device provides the two-way communication service. Here, the API may refer to sendBytes API among APIs of the aforementioned two-way communication service.","In another embodiment of the present invention, the API can include an address argument having information about an address and port for the bytes and a bytes argument. Here, the address argument may refer to address argument of sendBytes API. Here, the bytes argument may refer to bytes argument of sendBytes API. In another embodiment of the present invention, the receiving module further configured to receive a request for the messages of interactive services for the secondary application associated with the primary application, before the transmitting module transmits the messages. Second screen device can send a request to primary device. The request is for the messages of interactive services for the secondary application associated with the primary application. Here, the messages may refer to the aforementioned discovery message. When the primary device (or the receiving module) receives the request for the messages, the primary device (or the transmitting module) can transmit the messages to second screen device. The present embodiment may correspond to device discovery or service discovery.",{"@attributes":{"id":"p-1496","num":"1495"},"figref":"FIG. 119"},"The apparatus for processing a digital service signal as the secondary application may include an executing module , a receiving module , a sending module , an accessing module , and\/or a downloading module .","The executing module  can be configured to execute an application for the digital service signal. Here, the application may refer to DO, TDO, NDO, or UDO that can be executed by the second screen device.","The receiving module  can be configured to receive messages of interactive services for the executed application and the descriptions. Here, the messages may be transmitted from the primary device. Here, the description may be requested by the primary device. Here, the descriptions can identify the interactive services.","The sending module  can be configured to send a request for descriptions identifying the interactive services. Here, the descriptions can have service id information identifying each of the interactive services, and service type information indicating a type of the each of the interactive service.","The accessing module  can be configured to access at least one interactive service using the descriptions. The accessing module  can further subscribe to protocols for notifications for the at least one interactive service, which corresponds to the aforementioned operation of subscribing to the \u201ceventing\u201d protocol. The accessing module  can further receive the notifications. The notification may be the aforementioned asynchronous notification. The accessing module  can further receive information for the at least one interactive service using the received notifications.","The downloading module  can be module configured to download files for the accessed interactive service. Here, the files may be aforementioned application.","In one embodiment of the present invention, the information for the interactive services, described above, can be defined according to the each of the interactive services. And the information for the interactive services, described above, can be one of triggers, bytes and URL information. Here, when the aforementioned information for the interactive services corresponds to triggers, the primary device may provide the trigger service. Here, when the aforementioned information for the interactive services corresponds to bytes, the primary device may provide the two-way communication service. Here, when the aforementioned information for the interactive services is URL information, the primary device may provide the AppURL service.","In another embodiment of the present invention, when the information for the discovered interactive service are triggers, at least one of the triggers can include channel change information having a value for indicating changed numbers of channels of the digital service signal. The present embodiment may correspond to a case in which the aforementioned trigger service transmits the aforementioned channel change trigger. At least one trigger including the channel change information may refer to the aforementioned channel change trigger. The channel change information may have a value indicating the changed channel number.","In another embodiment of the present invention, when the information for the accessed interactive service, described above, are bytes, the accessing module  can further determine whether the interactive services is prepared to start or not using the received notifications. And the accessing module  can further transmit a request for a connection for transmitting the bytes using the received notifications. The present embodiment may correspond to a case in which the aforementioned two-way communication service is provided. In the present embodiment, notification may be for indicating whether DO being executed by the primary device is ready to communicate. In the present embodiment, the connection for transmitting the bytes can be a TCP\/IP connection. In addition, the present embodiment may correspond to an operation for requesting TCP\/IP connection to the primary device.","In another embodiment of the present invention, the sending module further configured to send a request for the messages of interactive services for the executed application, before the receiving module receives the messages. Second screen device (or the sending module) can send a request to primary device. The request is for the messages of interactive services for the secondary application. Here, the messages may refer to the aforementioned discovery message. When the primary device receives the request for the messages, the primary device can transmit the messages to second screen device. The present embodiment may correspond to device discovery or service discovery.","The UPnP framework may be provided by connecting electronic apparatuses to a home network and serving functions according to electronic apparatuses. The present invention relates to extension of an existing UPnP RemoteUI Client Service and UPnP RemoteUI Server Client. Accordingly, it is possible to receive the second screen service while being compatible with existing UPnP apparatuses.","Although the description of the present invention is explained with reference to each of the accompanying drawings for clarity, it is possible to design new embodiment(s) by merging the embodiments shown in the accompanying drawings with each other. And, if a recording medium readable by a computer, in which programs for executing the embodiments mentioned in the foregoing description are recorded, is designed in necessity of those skilled in the art, it may belong to the scope of the appended claims and their equivalents.","An apparatus and method according to the present invention may be non-limited by the configurations and methods of the embodiments mentioned in the foregoing description. And, the embodiments mentioned in the foregoing description can be configured in a manner of being selectively combined with one another entirely or in part to enable various modifications.","In addition, a method according to the present invention can be implemented with processor-readable codes in a processor-readable recording medium provided to a network device. The processor-readable medium may include all kinds of recording devices capable of storing data readable by a processor. The processor-readable medium may include one of ROM, RAM, CD-ROM, magnetic tapes, floppy discs, optical data storage devices, and the like for example and also include such a carrier-wave type implementation as a transmission via Internet. Furthermore, as the processor-readable recording medium is distributed to a computer system connected via network, processor-readable codes can be saved and executed according to a distributive system.","It will be appreciated by those skilled in the art that various modifications and variations can be made in the present invention without departing from the spirit or scope of the inventions. Thus, it is intended that the present invention covers the modifications and variations of this invention provided they come within the scope of the appended claims and their equivalents.","Both apparatus and method inventions are mentioned in this specification and descriptions of both of the apparatus and method inventions may be complementarily applicable to each other.","According to the present invention, it is possible to provide supplementary information related to broadcast content using a conventional broadcast system.","According to the present invention, it is possible to detect a time at which supplementary information related to broadcast content needs to be displayed and provide the supplementary information to a user at an appropriate time.","According to the present invention, it is possible to provide supplementary information related to broadcast content to a second screen device.","It will be apparent to those skilled in the art that various modifications and variations can be made in the present invention without departing from the spirit or scope of the inventions. Thus, it is intended that the present invention covers the modifications and variations of this invention provided they come within the scope of the appended claims and their equivalents."],"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are included to provide a further understanding of the invention and are incorporated in and constitute a part of this application, illustrate embodiment(s) of the invention and together with the description serve to explain the principle of the invention. In the drawings:",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 32"},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 34"},{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 35"},{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 36"},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 37"},{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 38"},{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 39"},{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 40"},{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 41"},{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 42"},{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 43"},{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 44"},{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 45"},{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 46"},{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 47"},{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 48"},{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 49"},{"@attributes":{"id":"p-0086","num":"0085"},"figref":"FIG. 50"},{"@attributes":{"id":"p-0087","num":"0086"},"figref":"FIG. 51"},{"@attributes":{"id":"p-0088","num":"0087"},"figref":"FIG. 52"},{"@attributes":{"id":"p-0089","num":"0088"},"figref":"FIG. 53"},{"@attributes":{"id":"p-0090","num":"0089"},"figref":"FIG. 54"},{"@attributes":{"id":"p-0091","num":"0090"},"figref":"FIG. 55"},{"@attributes":{"id":"p-0092","num":"0091"},"figref":"FIG. 56"},{"@attributes":{"id":"p-0093","num":"0092"},"figref":"FIG. 57"},{"@attributes":{"id":"p-0094","num":"0093"},"figref":"FIG. 58"},{"@attributes":{"id":"p-0095","num":"0094"},"figref":"FIG. 59"},{"@attributes":{"id":"p-0096","num":"0095"},"figref":"FIG. 60"},{"@attributes":{"id":"p-0097","num":"0096"},"figref":"FIG. 61"},{"@attributes":{"id":"p-0098","num":"0097"},"figref":"FIG. 62"},{"@attributes":{"id":"p-0099","num":"0098"},"figref":"FIG. 63"},{"@attributes":{"id":"p-0100","num":"0099"},"figref":"FIG. 64"},{"@attributes":{"id":"p-0101","num":"0100"},"figref":"FIG. 65"},{"@attributes":{"id":"p-0102","num":"0101"},"figref":"FIG. 66"},{"@attributes":{"id":"p-0103","num":"0102"},"figref":"FIG. 67"},{"@attributes":{"id":"p-0104","num":"0103"},"figref":"FIG. 68"},{"@attributes":{"id":"p-0105","num":"0104"},"figref":"FIG. 69"},{"@attributes":{"id":"p-0106","num":"0105"},"figref":"FIG. 70"},{"@attributes":{"id":"p-0107","num":"0106"},"figref":"FIG. 71"},{"@attributes":{"id":"p-0108","num":"0107"},"figref":"FIG. 72"},{"@attributes":{"id":"p-0109","num":"0108"},"figref":"FIG. 73"},{"@attributes":{"id":"p-0110","num":"0109"},"figref":"FIG. 74"},{"@attributes":{"id":"p-0111","num":"0110"},"figref":"FIG. 75"},{"@attributes":{"id":"p-0112","num":"0111"},"figref":"FIG. 76"},{"@attributes":{"id":"p-0113","num":"0112"},"figref":"FIG. 77"},{"@attributes":{"id":"p-0114","num":"0113"},"figref":"FIG. 78"},{"@attributes":{"id":"p-0115","num":"0114"},"figref":"FIG. 79"},{"@attributes":{"id":"p-0116","num":"0115"},"figref":"FIG. 80"},{"@attributes":{"id":"p-0117","num":"0116"},"figref":"FIG. 81"},{"@attributes":{"id":"p-0118","num":"0117"},"figref":"FIG. 82"},{"@attributes":{"id":"p-0119","num":"0118"},"figref":"FIG. 83"},{"@attributes":{"id":"p-0120","num":"0119"},"figref":"FIG. 84"},{"@attributes":{"id":"p-0121","num":"0120"},"figref":"FIG. 85"},{"@attributes":{"id":"p-0122","num":"0121"},"figref":"FIG. 86"},{"@attributes":{"id":"p-0123","num":"0122"},"figref":"FIG. 87"},{"@attributes":{"id":"p-0124","num":"0123"},"figref":"FIG. 88"},{"@attributes":{"id":"p-0125","num":"0124"},"figref":"FIG. 89"},{"@attributes":{"id":"p-0126","num":"0125"},"figref":"FIG. 90"},{"@attributes":{"id":"p-0127","num":"0126"},"figref":"FIG. 91"},{"@attributes":{"id":"p-0128","num":"0127"},"figref":"FIG. 92"},{"@attributes":{"id":"p-0129","num":"0128"},"figref":"FIG. 93"},{"@attributes":{"id":"p-0130","num":"0129"},"figref":"FIG. 94"},{"@attributes":{"id":"p-0131","num":"0130"},"figref":"FIG. 95"},{"@attributes":{"id":"p-0132","num":"0131"},"figref":"FIG. 96"},{"@attributes":{"id":"p-0133","num":"0132"},"figref":"FIG. 97"},{"@attributes":{"id":"p-0134","num":"0133"},"figref":"FIG. 98"},{"@attributes":{"id":"p-0135","num":"0134"},"figref":"FIG. 99"},{"@attributes":{"id":"p-0136","num":"0135"},"figref":"FIG. 100"},{"@attributes":{"id":"p-0137","num":"0136"},"figref":"FIG. 101"},{"@attributes":{"id":"p-0138","num":"0137"},"figref":"FIG. 102"},{"@attributes":{"id":"p-0139","num":"0138"},"figref":"FIG. 103"},{"@attributes":{"id":"p-0140","num":"0139"},"figref":"FIG. 104"},{"@attributes":{"id":"p-0141","num":"0140"},"figref":"FIG. 105"},{"@attributes":{"id":"p-0142","num":"0141"},"figref":"FIG. 106"},{"@attributes":{"id":"p-0143","num":"0142"},"figref":"FIG. 107"},{"@attributes":{"id":"p-0144","num":"0143"},"figref":"FIG. 108"},{"@attributes":{"id":"p-0145","num":"0144"},"figref":"FIG. 109"},{"@attributes":{"id":"p-0146","num":"0145"},"figref":"FIG. 110"},{"@attributes":{"id":"p-0147","num":"0146"},"figref":"FIG. 111"},{"@attributes":{"id":"p-0148","num":"0147"},"figref":"FIG. 112"},{"@attributes":{"id":"p-0149","num":"0148"},"figref":"FIG. 113"},{"@attributes":{"id":"p-0150","num":"0149"},"figref":"FIG. 114"},{"@attributes":{"id":"p-0151","num":"0150"},"figref":"FIG. 115"},{"@attributes":{"id":"p-0152","num":"0151"},"figref":"FIG. 116"},{"@attributes":{"id":"p-0153","num":"0152"},"figref":"FIG. 117"},{"@attributes":{"id":"p-0154","num":"0153"},"figref":"FIG. 118"},{"@attributes":{"id":"p-0155","num":"0154"},"figref":"FIG. 119"}]},"DETDESC":[{},{}]}
