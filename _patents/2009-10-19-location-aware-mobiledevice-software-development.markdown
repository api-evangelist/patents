---
title: Location aware mobile-device software development
abstract: A development environment makes it easier to develop and use location aware software applications. Combining the currently separate and complex tasks of location information gathering, analysis, and display and making them integrated such that non-experts can build location services into their applications increases a developer's capability to write rich location-aware software applications. A higher level programming model allows a programmer to use location information as a logical entity rather than just raw location data, such as latitude and longitude. A location data store and map data store may be accessed by different location aware applications on the device. Instead of each location application relying on its own data store, applications may share their location related information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09128956&OS=09128956&RS=09128956
owner: Microsoft Technology Licensing, LLC
number: 09128956
owner_city: Redmond
owner_country: US
publication_date: 20091019
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["This application is a divisional of and claims priority to application Ser. No. 10\/998,081, filed Nov. 26, 2004, entitled LOCATION AWARE MOBILE-DEVICE SOFTWARE DEVELOPMENT.","In the past several years more and more applications utilizing location information have been developed. Some of these location applications include map programs, flight-tracker programs, and navigation programs. Many of these applications are being developed for mobile computing devices. For example, in-car navigation systems have been developed to help users navigate through a city. Some cellular phones also include GPS based navigation programs. It is very difficult, however, to develop these applications. Positioning systems typically only provide location data, such as latitude and longitude, and require the application to process and interpret the information.","Embodiments of the present invention are related to a system and method for making it easier to develop and use location aware software applications. Combining the currently separate and complex tasks of location information gathering, analysis, and display and making them integrated such that non-experts can build location and mapping services into their applications increases a developer's capability to write rich location-aware software applications.","According to one aspect, an application programming interface for building location aware applications is used. This higher level programming model is directed towards allowing a programmer to use location information as a logical entity rather than just raw location data, such as latitude and longitude. The location information is abstracted into areas of interest. The developer also does not need to concern themselves with building their own map rendering software and may use rendering engines developed by third parties.","According to another aspect of the invention, an event driven programming model is used in building the location aware applications. Events may be generated in response to the location of an item relative to an area of interest. For example, a programmer designates one routine to be executed when a device enters a first area of interest, and another routine to be executed when a device leaves a second area of interest.","According to yet another aspect of the invention, a location data store may be accessed by different location aware applications. Instead of each location application relying on its own data store, applications may share their location related information.","According to yet another aspect of the invention, shared maps may be accessed by different location aware applications. Instead of each location application relying on its own map store and map rending technology, applications may work with a shared repository of maps data and map rendering engines.","Generally, the present invention is directed at providing a method and system for making it easier to develop and use location aware software applications. Combining the currently separate and complex tasks of location information gathering, analysis, and display and making them integrated such that non-experts can build location services into their applications increases a developer's capability to write rich location-aware software applications","Illustrative Location Aware Development System",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3","b":["300","320","330","340","325","1","342","344","346"]},"Location manager  is configured to receive location information from on or off device location sources ((-N)) and abstract the location information into location events that are provided to location aware application . The location sources may be anything that provides location information about an item. For example, one location source may be a GPS receiver. Another location source may be a user input that indicates the position of an item. For example, a user may indicate through a user input on a device that they are at a certain location. The user may enter a location into their device using a keypad, touch screen, voice recognition, and the like. Other location sources may be simulated location sources. Instead of a developer having to be in the field to test application , they may use simulated location data. Another location source may be an RFID tag. Each location source may provide different resolutions of location data. For example, some location sources may be very accurate while other location sources may only be accurate to within a neighborhood, on a road, and the like.","A location source can correspond to a proximate or distant location source. A proximate source corresponds to location generating hardware, including, but not limited to a GPS receiver or to the mobile device itself which is getting its location from network information. A distant location source corresponds to location information either pushed or pulled from a remote networked source (e.g. such as a pushed SMS message arriving with the location of my friend's car, or location information returned (pulled) via a web-request). Both the proximate and distant location sources are treated as abstract logical entities. This makes the programming model similar for many different kinds of location information.","Once the location data is received, location manager  determines if any location event is triggered that relates to application . Instead of only being able to provide raw location data from the location sources to application , location manager  provides location events upon the occurrence of an item having some logical relationship with an area of interest, such as entering or leaving an area of interest.","Generally, an area of interest provides an abstraction of the location data (See  and related discussion). An area if interest can relate to any area and can be indoors or outdoors. For example, an indoor location could be used to show the location of a fixed asset (e.g. conference room) and\/or moveable asset (e.g. people, office equipment, inventory).","An outdoor area of interest could be a city block, an area around a building or some other landmark, or some other predefined area. An outdoor area of interest may also be a movable asset (e.g. a car or a person).","Instead of an application having to interpret the raw location data, application  registers for location events based on the relation of the item to areas of interest. Upon the occurrence of the predefined location event, location manager  notifies application . At that point, application  executes an event driven code routine that was developed to handle the location event.","Location aware application  responds to the generated location events. Upon the occurrence of a location event, location aware application  supplies a set of weighted criteria to MapManager . For example, the weighted criteria may include a suggested map resolution along with a set of objects that the applications would like displayed on the map they draw. The application may also supply objects that they want rendered on top of the existing map. In addition to the application responding to event driven rendering of maps, the application can also be self driven. For example, an application may have a timer that periodically \u201cpulls\u201d information and renders a new map. So in addition to \u201cpush\u201d event-driven responses, the application can also \u201cpull\u201d data and take action.","Map manager  abstracts the map information from the application such that it does not need to know details regarding how to handle maps or location information. Instead of the application having to include complex map rendering code, the application provides map manager  with the name or type of map it would like displayed. Map generators  are not tied to any single application, or rendering engine. For example, one rendering engine may be vector based, whereas another rendering engine may be bitmap based. Location aware application  is provided with an interface to interact with map generator .","Map Manager  provides a rich set of features to location aware application without application  having to know the details of how to implement the map code. For example, suppose application  wants to allow a user to point to an area on a map and then have that data translated to a latitude and longitude, or in the case of an indoor map into indoor coordinate systems. Map manager  provides that information to application . MapManager  acts as the broker between application  and the map-rendering technologies and supplies functionality to the application. Some of the functionality includes mapping X\/Y screen coordinates on the device to Lat\/Long\/Altitude map coordinates on the map. For example, a user may click on the screen that is currently displaying a map to input their location. In response to the user input, map manager maps the X\/Y screen location to the Lat\/Long\/Altitude map location. Similarly, map manager  maps Lat\/Long\/Altitude map data to X\/Y screen locations allowing the application to dynamically render on top of the currently displayed map. The altitude on some map renderings, such as a ski-area map, may significantly affect the X\/Y location. There are many ways of converting an X\/Y coordinate into a Lat\/Long\/Altitude coordinate. Generally, map manager receives the X\/Y screen coordinate, matches the coordinate to the map, and then, based on the scale of the map, its projection technology and map boundaries provides the Lat\/Long\/Altitude coordinate. The application does not need to understand how the maps themselves are being rendered or what \u201cprojection technology\u201d is being used. Many different map projection technologies are possible, including, but not limited to, classical map-projection techniques such as Mercator projections, Cylindrical projections, Polar projections, Grid projections and custom projection technologies (e.g. a ski-area map, a stadium seating map, etc). The application may seamlessly move between different projection techniques.","MapManager  also supplies high level events about the set of available maps to application . These events provide the application important information such as when there are several maps available that meet the criteria requested by the application. Application  is not confined to using a single map for display. For example, one application may use a street map for one period of time and then use a metro map (e.g. showing bus routes, subway tunnels, etc.) during another time. Map manager  ranks the maps according to their order of suitability. When there are no maps available that meet the criteria provided by application , but map manager  may locate maps that meet some of the criteria, then those maps may be provided.","MapManager  also allows for the dynamic provisioning of new maps onto the device. The maps may be downloaded to the device at any time. For example, a new map may be downloaded for a public transportation application when a new transit route is added. According to one embodiment, these maps are represented using two files, one binary and opaque to MapManager and one that it understands. According to one embodiment, the map is represented using an XML file. The map manager is able to read the XML file and obtain the information necessary to add the map to the on-device local map data store. Maps may also be added to the map store by the developer or through other sources.","The following is an exemplary XML representation.",{"@attributes":{"id":"p-0030","num":"0029"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2212 <MapData Version=\u201c1.01\u201d MapProjection=\u201cSimpleGrid\u201d"},{"entry":"MetersPerPixel=\u201c2.80253449893166\u201d MapInfoClass=\u201cnone\u201d"},{"entry":"CustomMapRenderer=\u201cnone\u201d>"},{"entry":"\u2003\u2212 <SimpleLatLongRectangle"},{"entry":"\u2003MapFileName=\u201cdevice_map_1_0.PNG\u201d>"},{"entry":"\u2003\u2003\u2003<MapCoordinate Position=\u201cNorthWestCorner\u201d"},{"entry":"\u2003\u2003\u2003Latitude=\u201c50.7867\u201d Longitude=\u201c6.07814549019608\u201d \/>"},{"entry":"\u2003\u2003\u2003<MapCoordinate Position=\u201cNortEastCorner\u201d"},{"entry":"\u2003\u2003\u2003Latitude=\u201c50.7867\u201d Longitude=\u201c6.09407106666667\u201d \/>"},{"entry":"\u2003\u2003\u2003<MapCoordinate Position=\u201cSouthWestCorner\u201d"},{"entry":"\u2003\u2003\u2003Latitude=\u201c50.7766295454545\u201d Longitude=\u201c6.07814726827094\u201d \/>"},{"entry":"\u2003\u2003\u2003<MapCoordinate Position=\u201cSouthEastCorner\u201d"},{"entry":"\u2003\u2003\u2003Latitude=\u201c50.7766295454545\u201d Longitude=\u201c6.09406985757576\u201d \/>"},{"entry":"\u2003\u2003<\/SimpleLatLongRectangle>"},{"entry":"\u2003<\/MapData>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"MapProjection refers to the technology that is used to display the map. In this particular example, the map projection type is a simple grid. MetersPerPixel refers to the average resolution of the map. MapInfoClass refers to whether there is a custom class that is needed to answer questions about this map. This field allows a developer to include a custom class within the programming environment that may be called when this map is displayed. Similarly, CustomnMRenderer refers to whether a custom rendering engine is needed to draw the map. The MapFileName field refers to the binary file name that contains information that the map-renderering engine that will be used to draw the map. The SimpleLatLongRectangle field identifies the map as a rectangle defined by latitude and longitude coordinates.","The following example illustrates some of the custom fields being utilized.",{"@attributes":{"id":"p-0033","num":"0032"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\u2212 <MapData Version=\u201c1.01\u201d MapProjection=\u201cSimpleGrid\u201d"},{"entry":"MetersPerPixel=\u201c2.80253449893166\u201d MapInfoClass=\u201cCustomMapInfo1\u201d"},{"entry":"CustomMapRenderer=\u201cCustomMapRender1\u201d>"},{"entry":"\u2003\u2003<CustomMapInfo1 MapFileName=\u201cdevice_map_1_0.PNG\u201d"},{"entry":"\u2003\u2003classId=\u201cCustomMapEngine.MapInfoParser\u201d \/>"},{"entry":"\u2003\u2003<CustomMapReder1 MapFileName=\u201cdevice_map_1_0.PNG\u201d"},{"entry":"\u2003\u2003classId=\u201cCustomMapEngine.MapRenderEngine\u201d \/>"},{"entry":"\u2003<\/MapData>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"MapManager  may have multiple maps available on the device in a map store () that may be used by application . Map manager  searches though the set of maps available on the device in map store  and looks for the best map to be used. After being selected, the best fit map is selected and rendered.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 4"},"Starting at state , geographical areas of interest are defined. The selection of the areas of interest may occur before or after the location aware application is deployed. Additionally, this information may be sent out to the devices at any time. An area of interest is a predefined region that relates to a map. The area of interest may be any size that is definable. For example, an area of interest may be the size a square meter or an entire country. The areas of interest are defined based on the needs of the location aware application. For example, suppose the location aware application being developed determines when a child leaves their school and returns home. In this particular example, areas of interest may be an area including the school and another area of interest including the child's home. Some areas of interest may be selected by the developer, while other areas of interest may be selected by a user. For example, many applications, such as the example described above, are configured after the application is provided to the user. In the above example, a parent may select the areas of interest.","State  shows the selection of maps and map servers. A developer may select between the maps available in the system or may create their own maps. According to one embodiment of the invention, the available maps are shared across location applications such that different location aware applications may use the same map. In this way, each location aware application does not need to develop their own maps. In most instances, the specifics of the map rendering is hidden from the developer of the location aware application. Should the developer desire to include their own rendering software they may incorporate their rendering software into the environment at state .","At state , the developer may also set up their preference for the rendering. For example, the developer may want to use a vector based rendering engine for one part of the application and a bitmap based system for another part of the application. The map engines may be provided by many different sources. Any developer who wants to build an engine may supply a map engine that conforms to the programming interface. Each map engine is plugged into the development system.","At state , the developer programs the event based location code that is executed in response to events associated with the areas of interest within their application. This event based code is dependent upon the type of location aware application being developed and may include many different types of data. For example, a program may perform an action when a user reaches a predetermined location. In the tracking the child example above, an example routine may be programmed to highlight the home or school based on the location of the child at that particular time. The developer may also place items onto the map in response to the events.","At state , the location aware application may be tested using real and\/or simulated location sources. The system provides a simulator of a location source such that an application may be tested before it is put to us in the field. Using a simulated data source allows a developers event based location code to be tested upon the occurrence of a location event. Another use of a simulated location-source data is to \u201cplay back\u201d previously recorded real-world location data. This is useful for application development, testing and debugging.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 5","FIG. 5"],"b":["1","2"]},"While the map illustrated in  shows a city map including streets, the map may be any type of map. For example, the map could be a ski map, a map of a forest, a park, a golf course, building floor plans, stadium seating maps and the like. As discussed above, when and area of interest is designated an event may be triggered based on something entering or leaving the area.","While not illustrated, an area of interest may be a certain type of location. For example, a location aware application may be interested in knowing when it is close to a coffee shop or a movie theater. In this particular example, each coffee shop or movie theater known by the system could be an area of interest. As more coffee shops become available, their location could be dynamically added to the application such that the application is aware of them. Other location aware applications may define an area of interest as a particular store, sporting arena, bus stop, office building, and the like.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 6","FIG. 3"]},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 7"},"Illustrative Operating Environment","With reference to , one exemplary system for implementing the invention includes a computing device, such as computing device . In a very basic configuration, computing device  typically includes at least one processing unit  and system memory . Depending on the exact configuration and type of computing device, system memory  may be volatile (such as RAM), non-volatile (such as ROM, flash memory, etc.) or some combination of the two. System memory  typically includes an operating system , one or more applications , and may include program data . In one embodiment, application  may include location aware programming interface  that is used in building location aware applications for mobile devices. This location aware programming interface can be integrated with map selection, management and rendering interfaces. This basic configuration is illustrated in  by those components within dashed line .","Computing device  may have additional features or functionality. For example, computing device  may also include additional data storage devices (removable and\/or non-removable) such as, for example, magnetic disks, optical disks, or tape. Such additional storage is illustrated in  by removable storage  and non-removable storage . Computer storage media may include volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data. System memory , removable storage  and non-removable storage  are all examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device  may also have input device(s)  such as keyboard, mouse, pen, voice input device, touch input device, etc. Output device(s)  such as a display, speakers, printer, etc. may also be included.","Computing device  may also contain communication connections  that allow the device to communicate with other computing devices , such as over a network. Communication connection  is one example of communication media. Communication media may typically be embodied by computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as a carrier wave or other transport mechanism, and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 2","FIG. 2"],"b":["200","200","260","262","228","232","262","200","264","262","260","232","228","228"]},"One or more application programs, such as location app(s)  are loaded into memory  and run on the operating system . One or more location aware applications () reside on mobile computing device  and are programmed to perform instructions relating to location based applications. The location aware application may reside in the hardware or software of the device. Mobile computing device  may also include volatile and non-volatile storage within memory . Memory  also includes location data store  that is used to store location based information and map store  that is used to map based information. Location store  is a global facility for storing location that may be used by all location aware applications () on the device. Map store  is also a global facility for storing map information that may be used by all location aware applications () on the device. According to one embodiment, the repository () is on-device cache of location and map information. There may be more than one location store on mobile device . For example, there may be a private and public location data store.","Mobile computing device  includes power supply , which may be implemented as one or more batteries. Power supply  might further include an external power source, such as an AC adapter or a powered docking cradle that supplements or recharges the batteries.","Mobile computing device  is shown with two types of optional external notification mechanisms: LED  and audio interface . These devices may be directly coupled to power supply  so that when activated, they remain on for a duration dictated by the notification mechanism even though processor  and other components might shut down to conserve battery power. Audio interface  is used to provide audible signals to and receive audible signals from the user. For example, audio interface  may be coupled to a speaker for providing audible output and to a microphone for receiving audible input, such as to facilitate a telephone conversation.","Mobile computing device  also includes communications connection(s), such as a wireless interface layer, that performs the function of transmitting and receiving communications. Communications connection  facilitates wireless connectivity between the mobile computing device  and the outside world. According to one embodiment, transmissions to and from communications connection  are conducted under control of the operating system .",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 8","FIG. 1","FIG. 2"],"b":["800","810","830","820"]},"Typically a user develops a location aware applications using a computing device, such as computing device . The location aware application, however, may be developed using a mobile device, such as mobile device . Location aware programming environment  is configured to provide a developer with a set of programming interfaces to develop a location aware application. Application  is configured to communicate with server . According to one embodiment, server  is configured to provide computing device  with location information from location store  and map information from map store . Server  or a mobile device may also be configured to simulate a location source while developing a location aware application. For example, the simulated location source can run on the mobile device and simulate the input of a GPS source and the like. The computing devices may communicate using any one of several client-server protocols.","Mobile device  includes location aware application  that has been developed using the location aware programming environment (). More than one location aware application may be included on device . Attached to mobile device  are N location sources ((-N)). These location sources, both on and off-device, as described above, provide location data to location application . Location store  includes location information that may be accessed by all of the location aware applications on device . Map store  includes map information that may be accessed by all of the location aware applications on device . For example, location store  and map store  may include maps, rendering engines, and any other information that may be shared across the applications.","Cellular\/pager network  is a network responsible for delivering messages to and receiving messages from wireless devices. The cellular\/pager network  may include both wireless and wired components. For example, cellular\/pager network may include a cellular tower that is linked to a wired telephone network. Typically, the cellular tower carries communication to and from cell phones, long-distance communication links, and the like. The wireless devices can also connect directly to WAN's, LANs, etc, using hardware such as Wi-Fi cards that are becoming increasingly available for mobile devices.","Gateway  routes messages between cellular\/pager network  and WAN\/LAN . For example, a computer user may send a message that is addressed to a cellular phone. Gateway  provides a means for transporting the message from the WAN\/LAN  to cellular\/pager network . Conversely, a user with a device connected to a cellular network may be browsing the Web. Gateway  allows hyperlink text protocol (HTTP) messages to be transferred between WAN\/LAN  and cellular\/pager network .","The above specification, examples and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention, the invention resides in the claims hereinafter appended."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIGS. 1 and 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
