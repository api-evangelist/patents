---
title: Server-side tracing of requests
abstract: One or more techniques and/or systems are provided for selective server-side tracing of user requests that match tracing criteria. For example, internal server processing data and/or a server-side perspective of web traffic data associated with a server processing a user request may be generated server-side as tracing data. The tracing data may be utilized in troubleshooting issues that may arise between a client machine and the server (e.g., error in uploading a photo to a website hosted by the server). Because a web-based resource (e.g., website) may be hosted by a large number of servers configured to process numerous user requests over time, an overwhelming amount of tracing data may be produced in the absence of weeding out requests for which tracing data is not needed. Thus, utilizing tracing criteria to selectively trace particular user requests promotes efficient troubleshooting.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09229994&OS=09229994&RS=09229994
owner: Microsoft Technology Licensing, LLC
number: 09229994
owner_city: Redmond
owner_country: US
publication_date: 20111031
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Today, large sets of servers may be configured to host various websites, web applications, and\/or web services. For example, a set of servers, such as a hundred servers, may be configured to process user requests from thousands of users consuming an email web service. If an issue arises with a user attempting to access the email web service, then limited troubleshooting may be performed server-side and\/or client-side. In one example, troubleshooting the issue client-side may call for the user to install tracing tools configured to trace network traffic between the client machine and a server processing user requests from the client machine, which may be burdensome to the user. In another example, tracing may be enabled server-side on all servers because it may be unknown which server may process users requests from the client machine, which may result in expensive tracing data generated for all user requests from all users. In another example, a small number of servers may be isolated from the set of servers, which may be a laborious process and\/or necessitate near-real-time coordination between a troubleshooting administrator and the user. The isolated set of servers may be dedicated to processing and\/or tracing user requests from the user in order to troubleshoot the issue. In this way, the tracing data may be utilized in troubleshooting and\/or debugging issues.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.","Among other things, one or more systems and\/or techniques for server-side tracing of user requests are disclosed herein. A user request, such as an HTTP request, may correspond to a request from a client machine for a web-based resource, such as a web page, a web application, a web server, data accessible from an internet source, etc. The user request may be processed by one or more servers configured to host the web-based resource (e.g., a server within a large set of servers, such as a server farm, may process the user request). An issue may arise during the processing of the user request (e.g., a user attempting to access a web page may receive a fatal error message). To enhance troubleshooting of the issue, it may be advantageous to enable server-side tracing for the particular user, while disabling server-side tracing for other user requests that are not experiencing issues.","Accordingly, server-side tracing as provided herein may be selective enabled for particular user requests based upon user requests matching tracing criteria. In particular, identifying information associated with a user request received by a server may be extracted (e.g., identifying information may be extracted from an HTTP header of an HTTP request). For example, an IP address, a user ID, user request data (e.g., a parameter within the user request such as a URL or portion thereof, a value of an HTTP header, a user agent value, information within a body of the user request, etc.), and\/or other identification associated with a source that originated the user request may be extracted. The identifying information may be compared with tracing criteria to determine whether the user request is to be traced. That is, if the identifying information matches the tracing criteria, then tracing may be enabled for the user request while the server processes the user request. For example, the server may log contents of messages received over the network from a client computer that issued the user request (e.g., a set of HTTP headers and request body) and\/or may log contents of messages sent from the server to the client computer (e.g., a set of HTTP response headers and\/or response body) to create tracing data. If the identifying information does not match the tracing criteria, then tracing may be disabled for the user request, which may mitigate the generation of extraneous\/noisy tracing data.","Tracing criteria may be created by a user, an administrator, and\/or an automated process. In one example, tracing criteria may be automatically enabled based upon detecting an issue associated with processing a user request (e.g., if an error message is returned to a user attempting to upload a photo to a social network website, then tracing criteria identifying the user may be created so that future user requests from the user may be traced). In another example, a user may enable tracing through a website user interface. In another example, an administrator, such as a help desk operator, may enable tracing for a user during a troubleshooting session with the user. In this way, user requests matching tracing criteria may be traced to generate tracing data, which may be used to troubleshoot\/debug issues.","To the accomplishment of the foregoing and related ends, the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects, advantages, and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.","The claimed subject matter is now described with reference to the drawings, wherein like reference numerals are generally used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident, however, that the claimed subject matter may be practiced without these specific details. In other instances, structures and devices are illustrated in block diagram form in order to facilitate describing the claimed subject matter.","Many users may experience issues when interacting with web-based resources, such as web pages, web services, and\/or web applications. When an issue arises between a user on a client machine and a set of servers hosting the web-based resource, troubleshooting may be performed. Troubleshooting the issue client-side may call for the user to install tracing tools on the client machine. The tracing tools may generate tracing data comprising a client-side perspective of web traffic data that may be analyzed by an administrator of the set of servers (e.g., or someone else) to resolve the issue. Troubleshooting the issue server-side may involve enabling tracing on all servers within the set of servers because the exact server upon which to enable tracing may be unknown (e.g., it may be unpredictable as to which server may process a given user request). Enabling tracing on all servers may result in expensive tracing data for all requests. Such tracing data may comprise a significant amount of noise (e.g., tracing data associated with users that are not participating in troubleshooting and\/or may not be experiencing issues). Attempts to isolate a set of servers for processing a particular user request may result in a laborious process that may involve near-real-time coordination between the user and the administrator.","Accordingly, one or more systems and\/or techniques for server-side tracing of user requests are provided herein. In one example, a set of servers (e.g., thousands of servers) may be configured to process user requests for a web-based resource, such as a web page. Tracing may generally be enabled for respective servers within the set of servers. However, instead of tracing data for all user requests, user requests may be selectively traced. That is, merely user requests matching tracing criteria may be traced, while user requests not matching tracing criteria may be processed without tracing. Tracing criteria may specify various criteria that may be met before a user request is traced, such as whether identifying information within the user request matches a user ID, an IP address, and\/or other identifying information. If the identifying information matches the tracing criteria, then tracing data, such as internal server processing data and\/or a server-side perspective of web traffic data may be generated (e.g., contents of messages received and\/or sent by the server may be logged to create tracing data). The tracing data may be published to a centralized output share and\/or may be made available for troubleshooting\/debugging. The tracing data may be aggregated with other published tracing data associated with the tracing criteria to create aggregated tracing data. In this way, the aggregated tracing data may be utilized for troubleshooting an issue associated with a user and\/or a client machine identified by the tracing criteria. It may be appreciated that zero or more tracing data may be aggregated. In one example, various tracing data may be aggregated together to create aggregated tracing data (e.g., an administrator and\/or tracing analysis tool may evaluate the aggregated tracing data). In another example, various tracing data may be published to a centralized output share, such as a log file, without being aggregated (e.g., an administrator and\/or trace analysis tool may individually evaluate the various non-aggregated tracing data). In another example, a statistics trace may be performed by a tracing component (e.g., the statistics trace may comprise aggregated statistics about user requests matching tracing criteria). For example, a tracing component may create a statistics trace comprising information associated with upload user requests (e.g., the tracing component may collect aggregated counts of user request outcomes, such as success, timeout, quota exceeded, access denied, etc., and may group such information under various identifying information such as by origin (e.g., browser, mobile phone, desktop, etc.)).","One embodiment of server-side tracing of user requests is illustrated by an exemplary method  in . At , the method starts. At , identifying information associated with a user request received by a server may be extracted. The user request may have been submitted by a client machine to the server, and may be associated with a web-based resource, such as a web page and\/or web service, hosted by the server (e.g., a user may submit an HTTP user request to a social network website to upload a photo). The identifying information may comprise an IP address of a client machine, a user ID, and\/or a variety of other identification data that may be associated with the user request. In one example, the server may extract the identifying information from the user request, and may provide the identifying information to a tracing component that may determine whether the user request is to be traced during server processing based upon comparing the identifying information with tracing criteria.","At , the identifying information may be compared with tracing criteria to determine whether the user request is to be traced. It may be appreciated that identifying information within user requests may be compared with tracing criteria in order to selectively determine which user requests to trace and which user request to not trace, which may mitigate the generation of irrelevant\/noisy tracing data that may not be pertinent to troubleshooting and\/or debugging particular user requests. The tracing criteria may comprise identification information, such as an IP address and\/or user ID (e.g., the tracing criteria may identify a user and\/or client computer that may be experiencing issues and\/or may be undergoing troubleshooting with regard to accessing a web-based resource hosted by the server). In one example, the tracing criteria may be created based upon a tracing request received from a client computer (e.g., a user may experience an issue accessing the web-based resource using a browser, and thus may enable tracing through a tracing user interface provided through the browser). In another example, the tracing criteria may be automatically created based upon detecting an issue associated with a user request received from a client computer. In another example, the tracing criteria may be created by an administrator attempting to troubleshoot an issue for the user.","At , if the identifying information matches the tracing criteria, then the user request may be traced during processing of the user request by the server to generate tracing data. The tracing data may comprise internal server processing data, such as server event data, server error messages, and\/or a variety of data associated with the server processing the user request. The tracing data may comprise a server-side perspective of web traffic data sent\/received by the server, such as an HTTP request, an HTTP response, an error message, data associated with a requested web-based resource, and\/or a variety of other information associated with web traffic data. If the identifying information does not match the tracing criteria, then the user request may be refrained from being traced, which may mitigate generating extraneous tracing data for users that may not be experiencing issues.","If tracing data is generated, then the tracing data may be published to a centralized output share (e.g., a central repository where various servers may upload tracing data). The tracing data may be aggregated with other tracing data (e.g., tracing data published to the centralized output share by other servers) associated with the tracing criteria to create aggregated tracing data. For example, tracing criteria may comprise user ID=Dan. A first user request processed by a first server may be traced to create first tracing data based upon the first user request being associated with the user ID=Dan. A second user request processed by a second server may be traced to create second tracing data based upon the second user request being associated with the user ID=Dan. The first tracing data and\/or the second tracing data may be uploaded to the centralized output share, and may be aggregated together to create aggregated tracing data.","The tracing data (e.g., tracing data and\/or aggregated tracing data) may be outputted in a format readable by a trace analysis tool. The trace analysis tool may be pre-configured to generate and\/or analyze tracing data in real-time (e.g., client-side tracing of real-time data generated at a client computer). The trace analysis tool may be utilized for analyzing the tracing data (e.g., the tracing data traced server-side) by formatting the tracing data as an emulation of real-time captured tracing data, which may be readable by the trace analysis tool. The formatted tracing data may be inputted into the trace analysis tool in real-time. In this way, trace analysis data may be generated, which may be used to troubleshoot an issue associated with the user request. At , the method ends.","One embodiment of server-side tracing of user requests is illustrated by an exemplary method  in . At , the method starts. At , first tracing data from a first tracing component on a first server may be received. The first tracing data may correspond to internal server processing data and\/or web traffic data, etc. associated with a first user request matching tracing criteria (e.g., the first user request may have comprised IP Address 198.168.66.77 identifying information that matched IP Address 198.168.66.77 tracing criteria, and thus tracing may have been enabled for the first user request). At , second tracing data from a second tracing component on a second server may be received. The second tracing data may correspond to internal server processing data and\/or web traffic data, etc. associated with a second user request matching the tracing criteria (e.g., the second user request may have comprised IP Address 198.168.66.77 identifying information that matched IP Address 198.168.66.77 tracing criteria, and thus tracing may have been enabled for the second user request).","At , the first tracing data and the second tracing data may be aggregated to create aggregated tracing data associated with the tracing criteria. The aggregated tracing data may be formatted as an emulation of real-time captured tracing data (e.g., the aggregated tracing data may be formatted, such that the formatted aggregated tracing data may appear to comprise real-time tracing data from a client machine from the viewpoint of a trace analysis tool consuming the formatted aggregated tracing data). The formatted aggregated tracing data may be inputted into a trace analysis tool in real time to create trace analysis data (e.g., a chart, statistics, raw tracing data, and\/or other troubleshooting\/debugging data associated with the first and second user requests). The trace analysis data may be provided within an email, a log file, a user interface accessible to an administrator of the first and\/or second server, and\/or a web user interface accessible to a client computer originating the first user request and\/or the second user request. In this way, the trace analysis data (e.g., derived from server-side tracing data) may be used to troubleshoot issues of a user and\/or a client computer originating the first and\/or second user request. At , the method ends.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 3","b":["300","314","314","314","314","304","302","308","306","312","310","302","306","310","314"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 4","b":["400","400","408","410","416","424","408","404","406","402","408","404","408","412","404","410","408","410","410","410","406"]},"If the identifying information extracted from the user request  matches the tracing criteria  (e.g., the tracing criteria specifies that user requests from user ID=Dan are to be traced), then the user request  may be traced during processing of the user request  by the server  to generate tracing data . If the identifying information does not match the tracing criteria , then the user request  may be processed by the server  without tracing (e.g., activities of the particular user are not problematic and thus no tracing is desired). In one example where tracing data is created, the tracing data  may be provided to the aggregation component  and\/or may be published to a centralized output share . The aggregation component  may be configured to aggregate the tracing data  with other tracing data  associated with the tracing criteria  (e.g., other tracing data that may have been published to the centralized output share  by the tracing component  on server  and\/or other tracing data that may have been published by other instances of the tracing component on other servers not illustrated). In this way, aggregated tracing data  may be created.","The formatting component  may be configured to format the tracing data  and\/or the aggregated tracing data . In one example, the formatting component  may output the tracing data  in a format readable by a tracing analysis tool  such as formatted tracing data . The format may comprise an emulation of real-time captured tracing data (e.g., the formatted tracing data  may be formatted so that it may appear to the tracing analysis tool  as though the formatted tracing data  is being collected in real-time at the client computer ). In another example, the formatting component  may output the aggregated tracing data  in the format readable by the tracing analysis tool  such as formatted aggregated tracing data . Trace analysis data  may be received from the trace analysis tool  based upon the tracing analysis tool  analyzing the formatted tracing data  and\/or the formatted aggregated tracing data . The trace analysis data  may comprise statistical data, graphs, raw data, and\/or a variety of other information associated with tracing data derived from user requests matching the tracing criteria . The trace analysis data  may be utilized in troubleshooting\/debugging issues arising between the client computer  and the server  (e.g., internal server processing failures and\/or network traffic failures that may have occurred during processing of the user request  by the server ).",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 5","b":["500","516","514","516","514","518","518","518","520","502","516","520"]},"In one example, the server  may receive a Dan user request  from Dan computer . The tracing component  may extract identifying information associated with the Dan user request . For example, the server  may notify the tracing component  that user ID=Dan identifying information is specified within an HTTP header of the Dan user request . The tracing component  may determine that the user ID=Dan identifying information matches (at least some of) the tracing criteria user ID=Dan . Based upon the match, the tracing component  may enable tracing for the Dan user request  while the server  processes the Dan user request . In this way, tracing data for the Dan user request  may be generated. The tracing data for the Dan user request  may be made available for troubleshooting issues arising from the Dan computer  attempting to access the social network website.","The server  may receive a Jim user request  from Jim computer . The tracing component  may extract identifying information from the Jim user request . For example, the server  may notify the tracing component  that IP Address=192.168.77.66 identifying information is specified within an HTTP header of the Jim user request . The tracing component  may determined that the IP Address=192.168.77.66 identifying information does not match tracing criteria provided by the tracing criteria component  (e.g., Jim computer  may not be experiencing issues and\/or may be not undergoing troubleshooting with regard to the social network website, and thus no tracing criteria may have been made for Jim computer ). Accordingly, the tracing component  may not enable tracing for the Jim user request  while the server  processes the Jim user request .","The server  may receive a Sam user request  from Sam computer . The tracing component  may extract identifying information from the Sam user request . For example, the server  may notify the tracing component  that User ID=Sam identifying information was specified within the Sam user request . The tracing component  may determine that the User ID=Sam identifying information does not match tracing criteria provided by the tracing criteria component  (e.g., the Sam computer  may not be experiencing issues and\/or may not be undergoing troubleshooting with regard to the social network website, and thus no tracing criteria may have been created for Sam computer ). Accordingly, the tracing component  may not enable tracing for the Sam user request  while the server  processes the Sam user request .",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 6","b":["600","602","604","602","604","606","612","618","602","602","602"]},"Instances of a tracing component associated with server (1) , server (2) , server (N) , etc. may be configured to enable tracing for user requests matching the first tracing criteria (user ID=Dan), the second tracing criteria (user ID=Bob), the third tracing criteria (user ID=Jack), and\/or other tracing criteria not illustrated. For example, a first tracing component on server (1)  may generate tracing data for Dan  while server (1)  processes a user request associated with User ID=Dan. The first tracing component on server (1)  may generate tracing data for Bob  while server (1)  processes a user request associated with User ID=Bob. A second tracing component on server (2)  may generate tracing data for Jack  while server (2)  processes a user request associated with User ID=Jack. The second tracing component on server (2)  may generate tracing data for Bob  while server (2)  processes a user request associated with User ID=Bob. A third tracing component on server (N)  may generate tracing data for Jack  while server (N)  processes a user request associated with User ID=Jack. The third tracing component on server (N)  may generate tracing data for Dan  while server (N)  processes a user request associated with User ID=Dan. The tracing components may publish tracing data to a centralized output share .","An aggregation component  may be configured to aggregate tracing data that is and\/or is to be published to the centralized output share . For example, the aggregation component  may aggregate the tracing data for Dan , the tracing data for Dan , and\/or other tracing data for Dan published to the centralized output share . The aggregation component  may aggregate the tracing data for Bob , the tracing data for Bob , and\/or other tracing data for Bob published to the centralized output share . The aggregation component  may aggregate the tracing data for Jack , the tracing data for Jack  and\/or other tracing data for Jack published to the centralized output share . In this way, the aggregation component  may create aggregated tracing data , which may be stored within the centralized output share .","Still another embodiment involves a computer-readable medium comprising processor-executable instructions configured to implement one or more of the techniques presented herein. An exemplary computer-readable medium that may be devised in these ways is illustrated in , wherein the implementation  comprises a computer-readable medium  (e.g., a CD-R, DVD-R, or a platter of a hard disk drive), on which is encoded computer-readable data . This computer-readable data  in turn comprises a set of computer instructions  configured to operate according to one or more of the principles set forth herein. In one such embodiment , the processor-executable computer instructions  may be configured to perform a method , such as at least some of the exemplary method  of  and\/or at least some of exemplary method  of , for example. In another such embodiment, the processor-executable instructions  may be configured to implement a system, such as at least some of the exemplary system  of , for example. Many such computer-readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as example forms of implementing the claims.","As used in this application, the terms \u201ccomponent,\u201d \u201cmodule,\u201d \u201csystem\u201d, \u201cinterface\u201d, and the like are generally intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a controller and the controller can be a component. One or more components may reside within a process and\/or thread of execution and a component may be localized on one computer and\/or distributed between two or more computers.","Furthermore, the claimed subject matter may be implemented as a method, apparatus, or article of manufacture using standard programming and\/or engineering techniques to produce software, firmware, hardware, or any combination thereof to control a computer to implement the disclosed subject matter. The term \u201carticle of manufacture\u201d as used herein is intended to encompass a computer program accessible from any computer-readable device, carrier, or media. Of course, those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 8","FIG. 8"]},"Although not required, embodiments are described in the general context of \u201ccomputer readable instructions\u201d being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media (discussed below). Computer readable instructions may be implemented as program modules, such as functions, objects, Application Programming Interfaces (APIs), data structures, and the like, that perform particular tasks or implement particular abstract data types. Typically, the functionality of the computer readable instructions may be combined or distributed as desired in various environments.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 8","FIG. 8"],"b":["810","812","812","816","818","818","814"]},"In other embodiments, device  may include additional features and\/or functionality. For example, device  may also include additional storage (e.g., removable and\/or non-removable) including, but not limited to, magnetic storage, optical storage, and the like. Such additional storage is illustrated in  by storage . In one embodiment, computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage  may also store other computer readable instructions to implement an operating system, an application program, and the like. Computer readable instructions may be loaded in memory  for execution by processing unit , for example.","The term \u201ccomputer readable media\u201d as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory  and storage  are examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, Digital Versatile Disks (DVDs) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .","Device  may also include communication connection(s)  that allows device  to communicate with other devices. Communication connection(s)  may include, but is not limited to, a modem, a Network Interface Card (NIC), an integrated network interface, a radio frequency transmitter\/receiver, an infrared port, a USB connection, or other interfaces for connecting computing device  to other computing devices. Communication connection(s)  may include a wired connection or a wireless connection. Communication connection(s)  may transmit and\/or receive communication media.","The term \u201ccomputer readable media\u201d may include communication media. Communication media typically embodies computer readable instructions or other data in a \u201cmodulated data signal\u201d such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.","Device  may include input device(s)  such as keyboard, mouse, pen, voice input device, touch input device, infrared cameras, video input devices, and\/or any other input device. Output device(s)  such as one or more displays, speakers, printers, and\/or any other output device may also be included in device . Input device(s)  and output device(s)  may be connected to device  via a wired connection, wireless connection, or any combination thereof. In one embodiment, an input device or an output device from another computing device may be used as input device(s)  or output device(s)  for computing device .","Components of computing device  may be connected by various interconnects, such as a bus. Such interconnects may include a Peripheral Component Interconnect (PCI), such as PCI Express, a Universal Serial Bus (USB), firewire (IEEE 1394), an optical bus structure, and the like. In another embodiment, components of computing device  may be interconnected by a network. For example, memory  may be comprised of multiple physical memory units located in different physical locations interconnected by a network.","Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example, a computing device  accessible via a network  may store computer readable instructions to implement one or more embodiments provided herein. Computing device  may access computing device  and download a part or all of the computer readable instructions for execution. Alternatively, computing device  may download pieces of the computer readable instructions, as needed, or some instructions may be executed at computing device  and some at computing device .","Various operations of embodiments are provided herein. In one embodiment, one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media, which if executed by a computing device, will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further, it will be understood that not all operations are necessarily present in each embodiment provided herein.","Moreover, the word \u201cexemplary\u201d is used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as \u201cexemplary\u201d is not necessarily to be construed as advantageous over other aspects or designs. Rather, use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application, the term \u201cor\u201d is intended to mean an inclusive \u201cor\u201d rather than an exclusive \u201cor\u201d. That is, unless specified otherwise, or clear from context, \u201cX employs A or B\u201d is intended to mean any of the natural inclusive permutations. That is, if X employs A; X employs B; or X employs both A and B, then \u201cX employs A or B\u201d is satisfied under any of the foregoing instances. In addition, the articles \u201ca\u201d and \u201can\u201d as used in this application and the appended claims may generally be construed to mean \u201cone or more\u201d unless specified otherwise or clear from context to be directed to a singular form. Also, at least one of A and B and\/or the like generally means A or B or both A and B.","Also, although the disclosure has been shown and described with respect to one or more implementations, equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components (e.g., elements, resources, etc.), the terms used to describe such components are intended to correspond, unless otherwise indicated, to any component which performs the specified function of the described component (e.g., that is functionally equivalent), even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition, while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations, such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore, to the extent that the terms \u201cincludes\u201d, \u201chaving\u201d, \u201chas\u201d, \u201cwith\u201d, or variants thereof are used in either the detailed description or the claims, such terms are intended to be inclusive in a manner similar to the term \u201ccomprising.\u201d"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
