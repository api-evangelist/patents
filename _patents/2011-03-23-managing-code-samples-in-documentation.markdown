---
title: Managing code samples in documentation
abstract: Documentation having code samples is managed. Documentation describing programming code for a software product is received. The documentation references a code sample having an associated test module for determining whether the code sample is valid. The code sample is tested by executing the associated test module to produce a test result indicating whether the code sample is valid. The documentation, code sample, and test result are stored. The documentation, code sample, and test result may be provided to a client adapted to display the code sample and test result to a user of the client. Invalid code samples in the documentation may be identified using the test modules and the invalid code samples may be replaced to make the code samples valid.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08694964&OS=08694964&RS=08694964
owner: Google Inc.
number: 08694964
owner_city: Mountain View
owner_country: US
publication_date: 20110323
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["1. Field of Art","The present invention generally relates to the field of software development and in particular to creating and managing documentation for software products.","2. Background of the Invention","Enterprises that develop software have an ongoing need to document the software code. The documentation is helpful to explain how or why the code was developed, and may assist in future attempts to improve or extend the code. The documentation typically includes electronic documentation of application programming interfaces (APIs) used in the code, and may also include code samples showing how the APIs are used. Ideally, the code samples in the documentation are functional, so that a developer reviewing the documentation can copy-and-paste the code sample from the documentation into development code.","However, it is difficult to create and maintain documentation containing working code samples. One problem is that people who write documentation often use a word processor, rather than a coding tool, to write the code samples. The word processor lacks development tools present in a coding tool and, as a result, the code samples in the documentation may contain typographical or other errors that make the samples non-functional. Sometimes, people writing documentation use the coding tools to write the code samples and then copy the samples from the tools to the documentation. However, subsequent edits to the documentation can still introduce errors into the code samples.","Bit rot is another reason why code samples in documentation are often non-functional. Generally, code samples in documentation remain static while real-world code evolves. As a result, the code samples in the documentation become stale (known as \u201cbit rot\u201d). For example, the dependencies of a code sample may change, rendering it inoperable.","The above and other issues are addressed by a computer-implemented method, non-transitory computer readable storage medium, and computer system for managing documentation having a code sample. An embodiment of the method comprises receiving documentation describing programming code for a software product. The documentation includes a code reference specifying a location of the code sample within a code repository. The code sample has an associated test module for determining whether the code sample is valid. The method further comprises testing the code sample by executing the associated test module using a computer processor to produce a test result indicating whether the code sample is valid and storing the documentation, code sample, and test result.","An embodiment of the medium stores executable computer program instructions for managing documentation having a code sample. The instructions receive documentation describing programming code for a software product. The documentation includes a code reference specifying a location of the code sample within a code repository. The code sample has an associated test module for determining whether the code sample is valid. The instructions further test the code sample using the associated test module to produce a test result indicating whether the code sample is valid and store the documentation, code sample, and test result.","An embodiment of the computer system for managing documentation having a code sample comprises at least one non-transitory computer-readable storage medium storing executable computer program instructions. The instructions comprise instructions for receiving documentation describing programming code for a software product. The documentation includes a code reference specifying a location of the code sample within a code repository. The code sample has an associated test module for determining whether the code sample is valid. The instructions further test the code sample using the associated test module to produce a test result indicating whether the code sample is valid and store the documentation, code sample, and test result. The computer system also comprises a processor for executing the computer program instructions.","An embodiment of a computer-implemented method of maintaining documentation describing programming code for a software product comprises storing the documentation in a documentation repository. The documentation references a plurality of code samples in a code repository having associated test modules for determining whether the code samples are invalid. The method further identifies invalid code samples referenced by the documentation by executing the associated test modules using a computer processor and replaces the references to identified invalid code samples with references to valid code samples in the code repository.","The Figures (FIGS.) and the following description describe certain embodiments by way of illustration only. One skilled in the art will readily recognize from the following description that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles described herein. Reference will now be made to several embodiments, examples of which are illustrated in the accompanying figures. It is noted that wherever practicable similar or like reference numbers may be used in the figures and may indicate similar or like functionality.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","100","110","112","114","116","118","116"]},"The network  represents the communication pathway between the documentation repository , test system , code repository , and client . In one embodiment, the network  uses standard communications technologies and\/or protocols and can include the Internet. Thus, the network  can include links using technologies such as Ethernet, 802.11, worldwide interoperability for microwave access (WiMAX), 2 G\/3 G\/4 G mobile communications protocols, digital subscriber line (DSL), asynchronous transfer mode (ATM), InfiniBand, PCI Express Advanced Switching, etc. Similarly, the networking protocols used on the network  can include multiprotocol label switching (MPLS), the transmission control protocol\/Internet protocol (TCP\/IP), the User Datagram Protocol (UDP), the hypertext transport protocol (HTTP), the simple mail transfer protocol (SMTP), the file transfer protocol (FTP), etc. The data exchanged over the network  can be represented using technologies and\/or formats including image data in binary form (e.g. Portable Network Graphics (PNG)), the hypertext markup language (HTML), the extensible markup language (XML), etc. In addition, all or some of links can be encrypted using conventional encryption technologies such as secure sockets layer (SSL), transport layer security (TLS), virtual private networks (VPNs), Internet Protocol security (IPsec), etc. In another embodiment, the entities on the network  can use custom and\/or dedicated data communications technologies instead of, or in addition to, the ones described above.","The documentation repository  is a computer that stores documentation  describing programming code for a software product made by the enterprise. For example, the document repository  can store documentation  describing a software product that the enterprise sells to end users, and\/or documentation describing an internal software product (e.g., a software tool) used within the enterprise. In one embodiment, the documentation repository  includes a web server that provides pages of documentation  to clients  in response to requests.","The documentation  describes how to use features of the software product, such as how to use an application programming interface (API) supported by the product. The documentation  is authored by a developer of the software product, a technical writer, and\/or another author. The documentation  identifies a code sample  that is described within the documentation. The code sample , for instance, can show a unit of code that correctly calls a method or function using an API described by the documentation. In addition, the documentation  references test results indicating whether the code sample is valid\u2014i.e., whether the code sample is functional in its current form. In one embodiment, the document repository  stores multiple units of documentation, and each unit of documentation can reference one or more different code samples  and test results.","The code repository  is a computer that stores code samples  so that the samples can be referenced by the documentation  in the documentation repository . The code repository  also provides the code samples  in response to requests for them. The code samples  are formed of text in one embodiment, and the code repository  can store the code samples using any of a variety of suitable techniques. For instance, the repository  can store the code samples  in text files having specified names and paths (i.e., fully qualified file names). A single text file can hold multiple code samples, with each code sample delimited within the file by an identifier such as a line number, tag, name of the code unit (e.g., method name), etc. The repository  can also store the code samples  using other techniques, such as within a relational database keyed by a unique identifier such as the name of the code unit. Thus, a requester can request a code sample  by providing the fully qualified file name and\/or an identifier of the code sample to the code repository . In one embodiment, the code repository  is a subset of a larger code repository that also stores production code used by the enterprise.","In one embodiment, the code repository  also stores test modules  for testing the code samples  referenced by the documentation . In general, a test module  is a program that tests the code in an associated code sample  to determine whether the sample is valid or invalid (i.e., functional or non-functional) and reports the result of the test. The test modules  can be created by the authors of the documentation  and\/or by other entities. In some embodiments the testing and reporting functions are distributed among multiple modules.","In one embodiment, a test module  is written in the same types of code as the code samples . The test module  can include source code stored within text files and\/or executable files that can be executed in their stored form. Depending upon the embodiment and code samples , a test module  can test multiple code samples  or test a single code sample. The test module  can likewise be a member of a collection of test modules that collectively form a testing framework for the code samples and\/or documented software product.","The test module  performs a unit test on a code sample . A unit is the smallest testable part of a software product, such as a function, procedure, or method. The specific types of testing performed by the test module  can vary in different embodiments and\/or depending upon the associated code sample .","The test system  is a computer that stores one or more test execution modules  (called \u201cexecution modules\u201d) for testing the code samples  using the test modules . An execution module  identifies a test module  in the code repository  and executes the test module to test the associated code sample . The execution module  can execute the test module  automatically according to predetermined conditions and\/or upon request.","In one embodiment, the execution module  performs continuous testing of the code sample  using the test module . At the start of a testing cycle, the execution module  synchronizes on the current state of the codebase for the software product (i.e., obtains the current set of code for the software product), and then executes the test module  to test the code sample  using the current codebase. Once the test is completed, the execution module  again synchronizes on the current state of the codebase and repeats the testing cycle. Any updates that occur to the codebase while testing is being performed are not tested until the previous test cycle ends and the testing synchronizes on the codebase having the new updates. Continuous testing is often used in environments where the test system  executes the execution module  on a single computer.","In another embodiment, the execution module  performs dependency testing of the code sample . Under this type of testing, when the codebase is updated the execution module  analyzes the update to identify any dependencies affected by it. The execution module  then determines whether the code sample  describes code dependent on the updated portion of the codebase (or directly involved in the update) and, if so, schedules and then tests the code sample  using the test module . The execution module  repeats this process for each codebase update. Dependency testing is often used in environments where the test system  executes multiple execution modules  on multiple computers because the scheduled tests can be distributed across the computers.","A test results module  on the test system  records the result of the test in association with the code sample . For instance, the test results module  can record the result in a relational database and\/or using another technique. A requester can access the test results module  and request the result of the test on the code sample . In response, the test results module  responds to the request with information indicating whether the code sample  is valid. The test results module  can also provide additional information, such as the type of testing that was performed on the code sample  and\/or reasons that the code sample was found invalid.","The client  is a computer used by a user viewing the documentation  in the documentation repository . The client includes a renderer module (\u201crenderer\u201d)  that displays the documentation  from the documentation repository , including the appropriate code samples  from the code repository  and the results of the testing from the test system . In one embodiment, the renderer  is a web browser that displays the documentation  on a monitor of the computer.","The renderer  obtains the documentation  from the documentation repository  at the request of the user. For example, the user can select a link on a web page provided by the web server associated with the document repository  that causes the repository to provide the documentation  to the renderer . In one embodiment, the renderer  then parses the documentation  to obtain the code samples  and associated test results from the code repository  and test system  and displays the code samples and test results within the documentation.","The renderer  can use a variety of different techniques to indicate whether the code sample is valid. For example, the renderer  can display an icon that graphically indicates whether the code sample is valid. The icon can also indicate other information, such as the type of testing performed on the code sample . The icon can include a hyperlink that the user can select to view the details of the execution module  that tested the code sample and why the code is valid or invalid. In another example, the renderer  can display the text and\/or the background of the text of the code sample  in a color that indicates whether the code is valid, such as displaying valid code in green and invalid code in red.","Thus, the user of the client  can view documentation describing a code unit, a code sample showing the code unit, and an assertion of whether the code sample is valid. If the code is valid, the user can, e.g., copy the code sample and paste it into development code. In addition, the test results  in the test system  can be used to identify invalid code samples  referenced by the documentation . A developer, technical writer, and\/or automated process can revise the invalid code samples  to make them valid, and thereby improve the quality of the documentation .",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 2","b":["200","112","114","116","118","202","204","204","250","255","206","213","250","218","213","208","210","214","216","255","200","206","202"]},"The storage device  includes one or more non-transitory computer-readable storage media such as a hard drive, compact disk read-only memory (CD-ROM), DVD, or a solid-state memory device. The memory  holds instructions and data used by the processor . The pointing device  is used in combination with the keyboard  to input data into the computer system . The graphics adapter  displays images and other information on the display device . In some embodiments, the display device  includes a touch screen capability for receiving user input and selections. The network adapter  couples the computer system  to the network . Some embodiments of the computer  have different and\/or other components than those shown in . For example, the repositories , ,  can be formed of multiple blade servers and lack a display device, keyboard, and other components while the client  can be a notebook or desktop computer, a tablet computer, or a mobile phone.","The computer  is adapted to execute computer program modules for providing functionality described herein. As used herein, the term \u201cmodule\u201d refers to computer program instructions and\/or other logic used to provide the specified functionality. Thus, a module can be implemented in hardware, firmware, and\/or software. In one embodiment, program modules formed of executable computer program instructions are stored on the storage device , loaded into the memory , and executed by the processor .",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 3","b":["120","112","120","120","120","118","120"]},"As shown in , the documentation  includes a code reference  and a test reference . The code reference  references the code sample  described by the documentation . In one embodiment, the code reference  includes a tag that specifies the location of the code sample  within the code repository  associated with the content of the particular page and\/or file of documentation . The code reference  specifies the fully-qualified path to the file containing the code sample  within the code repository . In addition, the code reference  can specify additional information that is used to identify and\/or obtain the code sample , such as the name of the code unit within the file at the code repository  and the location of the code within the file (e.g., the line numbers within the file that contain the associated code sample).","The test reference  references the test results associated with the code sample  described by the documentation. In one embodiment, the test reference  includes a tag that specifies the location of the test results within the test results module  of the test system . The test reference  can also specify additional information describing the test module , the code sample , or the documentation . For example, the test reference  can specify the name or another identifier of the code sample  that the test results module  uses to identify the appropriate test results.","In one embodiment, when the renderer  at the client  receives the documentation  from the documentation repository , the renderer  identifies the code  and test references  and uses the references to obtain the referenced content from the code repository  and test system . Thus, the renderer  can use the code reference  to get the code sample  from the code repository  and use the test reference  to get the test result from the test results module  of the test system . In another embodiment, the documentation repository  itself includes functionality for using the code  and\/or test  references to obtain the code sample  and test results from the code repository  and test system  and integrates the obtained content into the documentation . The document repository  then provides the integrated documentation  to the client .","The implementation of the code  and test  references can vary in different embodiments. For example, one or both of the references ,  can be implemented as HTML hyperlinks that are parsed and used by the renderer  to obtain the referenced code sample  and test results. Additionally, the references ,  can be implemented as executable code, such as JAVASCRIPT code, that is automatically executed by the client  when the rendering module  renders the page containing the documentation  to obtain the code sample  and test results. The executable code can display the code sample  within a frame of the documentation page along with the test results.","The references ,  can also be implemented as browser helper objects or other forms of plug-ins to the renderer . In this embodiment, the user of the client  obtains one or more plug-ins from the documentation repository  and\/or another source and installs it into the renderer . The references ,  include tags that activate the plug-in and cause the plug-in to execute and obtain the code sample  and test result.","The documentation  can further include the code sample  and test module  embedded directly within the documentation. In this embodiment, the code  and test  references effectively reference locations within the same document that includes the remainder of the documentation . Similarly, the test results  are embedded directly within the documentation  in some embodiments.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 4","FIG. 1"],"b":"120"},"The documentation repository  receives  documentation . The documentation  is created by a developer or technical writer for a software product and includes a code reference  and a test reference . For example, the documentation  can be a HTML file having a textual description of a feature of the software product, and hypertext links to a code sample  demonstrating proper use of the feature, and to test results in the test results module  of the test system  indicating whether the code sample is valid.","The test system  or another entity uses an execution module  to test  the code sample  using a test module . The types of test  and time of testing can vary in different embodiments. In one embodiment the execution module  performs continuous testing of the code sample  while in another embodiment the execution module performs dependency testing. The testing  determines whether the code sample  is valid or invalid and the execution module  records the result of the test in the test results module  of the test system .","The document repository  provides  the documentation to a client . For example, the documentation repository  can include a web server that provides the documentation in response to a request from a web browser or other renderer  at the client . The provided documentation  includes the code sample  and the results of the testing performed by the execution module . The document repository  can obtain the code sample  and\/or results and provide it to the client  within the documentation, or the client  can obtain the sample\/results from the code repository  and test system  when rendering the documentation. The documentation rendered at the client  indicates whether the code sample is valid by using text, an icon, color, or another technique.","Thus, the environment  described above allows developers of a software product to view documentation  including samples of code demonstrating how to use features of the product. In addition, the documentation  indicates whether the code samples are valid. Additionally, other environments can represent the documentation  using different techniques, such as by embedding the code sample  and\/or test module  directly into the documentation held by the documentation repository .",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 5","FIG. 1"]},"Code samples  stored within the code repository  are tested  to determine whether the code samples are valid. The test system  or another entity performs this testing  by using the execution modules  to execute the test modules  to test the code samples . The testing can test all or a selected subset of the code samples . The types of test  and time of testing can vary in different embodiments and can include continuous testing, dependency testing, and\/or on-demand testing.","The testing  identifies  invalid code samples. As the tests execute, individual code samples  are identified as valid or invalid and the execution module  records the result of the test in the test results module  of the test system . Thus, the test results  identify  the set of code samples that are invalid. The invalid code samples are revised  to make the code samples valid.","The revising  can be performed using manual and\/or automated processes. A developer or technical writer can review the test results  to identify the reason that a code sample  is invalid, and manually revise the code sample  to make it valid. Likewise, one or more automated processes can be configured to revise code samples that are invalid due to certain types of errors. The automated process can be configured to programmatically revise the code samples by replacing portions of the code samples with revised portions, rearranging and\/or changing parameters, and\/or making other changes. For example, if a set of code samples  are invalid because the name of a method called by the code samples changed, an automated process can update the code samples to use the new name of the method. In addition, the automated process can replace the references to invalid code samples in the documentation  with references to updated code samples in the code repository .","The above description is included to illustrate the operation of certain embodiments and is not meant to limit the scope of the invention. The scope of the invention is to be limited only by the following claims. From the above discussion, many variations will be apparent to one skilled in the relevant art that would yet be encompassed by the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
