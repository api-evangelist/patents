---
title: System and method for caching type information for un-typed web service requests
abstract: A system and method for caching type information for parts (e.g., parameters) of an operation passed in a web service request. When an untyped request (i.e., a request in which the data types of operation parts are omitted) is received at a web service server from a client, a cache is examined to determine if type information for the requested operation's parts exists. If not, a cache entry specific to that operation is created and populate with the necessary type information (e.g., from a WSDL document corresponding to the web service). The type information for the operation, and any global type information (i.e., for data types global to the web service), is merged for use in unmarshalling the untyped request. The operation is invoked, and any results are returned to the client.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07664826&OS=07664826&RS=07664826
owner: Oracle International Corporation
number: 07664826
owner_city: Redwood Shores
owner_country: US
publication_date: 20030501
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION","EXAMPLE 1","EXAMPLE 2"],"p":["This invention relates generally to the field of computer systems. More particularly, a system and method are provided for caching type information for matching with un-typed service requests.","Web services are applications that that can be published and invoked in a manner independent of language and transport protocol. Thus, they include loosely coupled, distributed applications that can be accessed from multiple types of platforms (e.g., Unix-based, Windows-based) using different programming languages (e.g., Java, C++). Among other characteristics, they operate independently of the underlying transport protocol (e.g., HTTP, SMTP), and support synchronous and asynchronous communications.","Web services are often considered the 3generation of distributed computing, because they provide greater interoperability and make greater use of standards than 2generation technologies such as CORBA (Common Object Request Broker Architecture), COM (Component Object Model) and other more-tightly coupled, less-interoperable applications.","With web services, a service offered by a web service provider is called by a web service requester or consumer via a SOAP (Simple Object Access Protocol) request. The SOAP request may include any number of parameters for input to an operation that is provided by the service and identified in the request. The parameters may be typed or un-typed, meaning that the data types of the parameters are or are not identified in the request. If typed, the web service provider can easily unmarshal the parameters and invoke the requested operation.","However, if the parameters are un-typed, the web service provider must lookup the data types before invoking the operation. Typically, the service refers to the WSDL (Web Services Description Language) document that describes the web service and its operations. This increases the turnaround time of the request and requires the WSDL to be parsed, which slows execution of the requested operation.","A system and method are provided for caching type information for parts (e.g., parameters) of an operation passed in a web service request. When an untyped request (i.e., a request in which the data types of operation parts are omitted) is received at a web service provider from a client, a cache is examined to determine if type information for the requested operation's parts exists. If not, a cache entry specific to that operation is created and populated with the necessary type information (e.g., from a WSDL document corresponding to the web service). The type information for the operation, and any relevant global type information (i.e., for data types global to the web service), is merged for use in unmarshalling the untyped request. The operation is invoked, and any results are returned to the client.","The following description is presented to enable any person skilled in the art to make and use the invention, and is provided in the context of particular applications of the invention and their requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art and the general principles defined herein may be applied to other embodiments and applications without departing from the scope of the present invention. Thus, the present invention is not intended to be limited to the embodiments shown, but is to be accorded the widest scope consistent with the principles and features disclosed herein.","The program environment in which a present embodiment of the invention is executed illustratively incorporates a general-purpose computer or a special purpose device such as a hand-held computer. Details of such devices (e.g., processor, memory, data storage, display) may be omitted for the sake of clarity.","It should also be understood that the techniques of the present invention may be implemented using a variety of technologies. For example, the methods described herein may be implemented in software executing on a computer system, or implemented in hardware utilizing either a combination of microprocessors or other specially designed application specific integrated circuits, programmable logic devices, or various combinations thereof In particular, the methods described herein may be implemented by a series of computer-executable instructions residing on a suitable computer-readable medium. Suitable computer-readable media may include volatile (e.g., RAM) and\/or non-volatile (e.g., ROM, disk) memory.","In one embodiment of the invention, a system and method are provided for caching type information for facilitating web service requests that contain one or more un-typed parameters (i.e., parameters not accompanied by information indicating the parameters' data types).","Web services allow computer systems within a connected (e.g., networked) environment to access functionality (e.g., applications, utilities, services) that may not be available locally on the systems. One goal of web services, which differentiates such applications from previous distributed computing technologies such as CORBA (Common Object Request Broker Architecture), EJB (Enterprise Java Bean), COM (Component Object Model), and so on, is their ability to accept requests generated in a variety of languages (e.g., Java, C++) on a variety of platforms (e.g., Unix, Microsoft Windows).","Generally, in distributed computing environments, a client makes a call to a remote server, the server processes the call and sends a response back to the client. Web services alter somewhat the manner in which the client-server model is employed.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1","b":["100","110"]},"Web service provider  may comprise virtually any platform and composition of computing equipment, and may be connected to other elements of the environment via the Internet or some other wide area or local area network. For each web service  offered by web service provider , the provider also generates a WSDL (Web Services Definition Language) document  describing the service and the format of operations offered by the service. Alternatively, a WSDL document may be provided by some entity other than web service provider . For example, an application developer may write their own WSDL document for a web service  and package the document with their implementation of the service.","Web service consumer  comprises a computer system or computing device operated by a business partner of provider , a user, or some other entity desiring access to a web service offered by the web service provider. The computer system or computing device is configured to access web service provider  via wired and\/or wireless communications. The consumer may learn of a web service (e.g., web service ) by performing a lookup on UDDI service , receiving a URL (Uniform Resource Locator) identifying provider , or in some other manner. Illustratively, a UDDI lookup for a specific web service or a type of web service may be performed by submitting an appropriate SOAP request to UDDI service .","Once the consumer identifies web service provider  as the provider of a desired service (e.g., by a URL returned by UDDI service ), the consumer retrieves the corresponding WSDL definition (e.g., document ) from the UDDI service, web service provider  or some other source. The WSDL document describes the operation semantics the consumer should use to invoke a desired web service operation.","Web service consumer  can then assemble a SOAP request containing the necessary information to invoke a desired operation. For example, consumer  may execute a tool or utility configured to generate suitable programming code from the WSDL. The generated code includes SOAP code for accessing the operation on web service provider . The request, including SOAP code generated from the WSDL, is passed to provider , which parses the request, invokes the operation and may return corresponding results to web service consumer .","In the computing environment of , various communication protocols and programming languages may be employed. For example, a network that interconnects provider , UDDI service  and consumer  may be TCP\/IP based, or may use other protocols.","The following sample SOAP code comprises a typed request for a sayHello operation offered by a web service. The request is considered typed because the SOAP envelope identifies the data types of each part (e.g., parameter) of the operation.",{"@attributes":{"id":"p-0023","num":"0022"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?xml version=\u20181.0\u2019 encoding=\u2018UTF-8\u2019?>"]},{"entry":[{},"<SOAP-ENV:Envelope"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"xmlns:SOAP-ENV=\u201chttp:\/\/schemas.xmlsoap.org\/soap\/envelope\/\u201d"},{"entry":"xmlns:xsi=\u201chttp:\/\/www.w3.org\/2001\/XMLSchema-instance\u201d"},{"entry":"xmlns:xsd=\u201chttp:\/\/www.w3.org\/2001\/XMLSchema\u201d>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<SOAP-ENV:Body>"]},{"entry":[{},"<ns1:sayHello xmlns:ns1=\u201curn:Hello\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"SOAP-ENV:encodingStyle=\u201chttp:\/\/schemas.xmlsoap.org\/soap\/encoding\/\u201d>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<param0 xsi:type=\u201cxsd:string\u201d>Scott<\/param0>"]},{"entry":[{},"<param1 xsi:type=\u201cxsd:int\u201d>27<\/param1>"]},{"entry":[{},"<\/ns1:sayHello>"]},{"entry":[{},"<\/SOAP-ENV:Body>"]},{"entry":[{},"<\/SOAP-ENV:Envelope>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Because type attributes indicating the data type of each part are included in the request, the receiver (e.g., web service provider  of ) can easily construct the necessary objects and execute the sayHello operation.","In contrast, the following untyped request does not explicitly identify the data types of the operation parts.",{"@attributes":{"id":"p-0026","num":"0025"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<?xml version=\u20181.0\u2019 encoding=\u2018UTF-8\u2019?>"]},{"entry":[{},"<SOAP-ENV Envelope"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"xmlns:SOAP-ENV=\u201chttp:\/\/schemas.xmlsoap.org\/soap\/envelope\/\u201d"},{"entry":"xmlns:xsi=\u201chttp:\/\/www.w3.org\/2001\/XMLSchema-instance\u201d"},{"entry":"xmlns:xsd=\u201chttp:\/\/www.w3.org\/2001\/XMLSchema\u201d>"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<SOAP-ENV:Body>"]},{"entry":[{},"<ns1:sayHello xmlns:ns1=\u201curn:Hello\u201d"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"SOAP-ENV:encodingStyle=\u201chttp:\/\/schemas.xmlsoap.org\/soap\/encoding\/\u201d>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<param0>Scott<\/param0>"]},{"entry":[{},"<param1>27<\/param1>"]},{"entry":[{},"<\/ns1:sayHello>"]},{"entry":[{},"<\/SOAP-ENV:Body>"]},{"entry":[{},"<\/SOAP-ENV:Envelope>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Because type information is not included in the SOAP code of Example 2, that information must be obtained elsewhere before the sayHello operation can be executed. For example, the type information may be retrieved from the WSDL that defines the web service offering the operation. A SOAP mapping registry may be created to associate the type information with the operation parameters. In traditional web services environments, this may need to be done every time the operation is invoked by a client.","Therefore, in one embodiment of the invention, a system and method are provided for creating a SOAP mapping registry once (e.g., the first time an operation is invoked) and then caching it for subsequent invocations of the same operation. Illustratively, multiple SOAP mapping registries may be cached, and may be differentiated by the name of the associated operation.","In this embodiment, two levels of caching are maintained. A global mapping registry is maintained to cache information for data types that may be used in multiple operations of the web service. The global mapping registry generally does not store information for data types that are local to a particular web service operation. The contents of the global mapping registry are available when any operation of the web service is invoked.","Also, local mapping registries are maintained for each operation, to store data type information specific to the operation's parts or parameters. Multiple local mapping registries may be stored in a cache table, and may be indexed by the operation name or other unique identifiers of the web service operations. Thus, each entry in the cache table constitutes a separate LMR. Illustratively, a local mapping registry is created upon the first invocation of the corresponding operation (e.g., not when the web service is initialized). Thus, the number of cache entries (LMRs) can be kept to a minimum.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 2"},"In state , a web service provider produces a web service. The web service may comprise any number of operations and may be deployed on any number of servers.","In state , the web service is registered with one or more UDDI services, and may be advertised or published in other ways to reach potential consumers of the web service. When the web service is registered with a UDDI service, a copy of the corresponding WSDL document (or other description) may be posted with the UDDI service.","In state , a consumer (e.g., a client computer system) learns of the service (e.g., through the UDDI service, in an electronic mail message, some other manner) and accesses the corresponding WSDL document (e.g., at the UDDI service, at the web service provider's site).","Using the WSDL, in state , the consumer generates code (e.g., Java programming code) for executing one or more methods offered by the web service. The generated code includes SOAP code for invoking an operation on a server operated by or for the web service provider. The SOAP code is used to marshal and send an untyped web service request to the provider.","In state , the SOAP request is received at the provider and the encapsulated operation is identified. The operation name may be verified by looking up the name in the WSDL document, a cache, or some other list of operations included in the web service.","In state , a cache table is examined to determine whether a global mapping registry and\/or a local mapping registry for the operation exist. If the global registry does not exist, then there is no global type information that needs to be considered when unmarshalling the SOAP request. If the local mapping registry for the operation exists, the method advances to state . Otherwise, the method continues at state .","In state , a new local mapping registry is created and added to the cache table for the operation.","In state , the new local registry is populated with type information from the web service description (e.g. WSDL) document that pertains to the requested operation.","In state , a merged registry, for use in unmarshalling the SOAP request, is created by taking the union of the global mapping registry (if non-null) and the operation's local mapping registry. Thus, the unmarshalling code will have the type information it needs, without the danger of local data type information for one operation's parts or parameters contaminating another operation's local data type information.","In state , the SOAP request is unmarshalled and code (e.g., Java code) is created to allow invocation of the operation. For example, the type information may be used to generate necessary programming objects, and a Java (or other programming language) method corresponding to the operation can then be invoked.","In state , a return SOAP envelope containing the results of the operations is generated and sent to the consumer.","The foregoing descriptions of embodiments of the invention have been presented for purposes of illustration and description only. They are not intended to be exhaustive or to limit the invention to the forms disclosed. Accordingly, the above disclosure is not intended to limit the invention; the scope of the invention is defined by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE FIGURES","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"}]},"DETDESC":[{},{}]}
