---
title: Stereo video for gaming
abstract: A real-time stereo video signal of a captured scene with a physical foreground object and a physical background is received. In real-time, a foreground/background separation algorithm is used on the real-time stereo video signal to identify pixels from the stereo video signal that represent the physical foreground object. A video sequence may be produced by rendering a 3D virtual reality based on the identified pixels of the physical foreground object.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09020239&OS=09020239&RS=09020239
owner: Microsoft Technology Licensing, LLC
number: 09020239
owner_city: Redmond
owner_country: US
publication_date: 20111128
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["RELATED APPLICATION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims priority to U.S. patent application Ser. No. 11\/272,950, filed on Nov. 14, 2005, entitled \u201cSTEREO VIDEO FOR GAMING\u201d, at least some of which may be incorporated herein.","Three dimensional (3D) graphics, in particular, simulated 3D realms or worlds, sometimes called 3D virtual reality, is a well known area of computer graphics, which typically involves rendering two dimensional images of 3D models and scenery in a 3D coordinate space. Most modern game consoles are designed specifically to be able to process 3D graphics in real-time, and many games for game consoles are based on a simulated 3D or virtual reality.","Game consoles are usually operated using game controllers, such as joysticks, button pads, and so on. For many players, significant time must be spent before a game control can be used proficiently. For lack of dexterity, many people do not regularly use a game console. Although game consoles have become powerful and can process a high level of control input from a user, it is difficult to provide a high level of control input using typical game controllers such as a touchpads, joysticks, mice, etc. Furthermore, game controllers are often not physically operated in a manner that meets a user's mental model or intuitive understanding of a game. In other words, a 3D game may involve causing an avatar to run, jump, hold different objects, shoot, duck, etc., perhaps simultaneously. However, a game controller can usually merely output one or a few input signals at one time, and hands are not efficient at simultaneously controlling different types of actions, such as simultaneously moving an avatar, picking up an object, aiming, and so on.","Game consoles have also been limited in the type of imagery that they display. Typically, the graphics displayed by a game console are generated internally by a game and\/or are provided in advance. For example, the images for animating a sprite may be part of a game's embedded content or program data.","The following summary is included only to introduce some concepts discussed in the Detailed Description below. This summary is not comprehensive and is not intended to delineate the scope of the claimed subject matter, which is set forth by the claims presented at the end.","A real-time stereo video signal of a captured scene with a physical foreground object and a physical background is received. In real-time, a foreground\/background separation algorithm is used on the real-time stereo video signal to identify pixels from the stereo video signal that represent the physical object. A video sequence may be produced by rendering a 3D virtual reality based on the identified pixels of the physical foreground object.","Many of the attendant features will be more readily appreciated by referring to the following detailed description considered in connection with the accompanying drawings.","Stereo cameras and algorithms for processing stereo video data have progressed to the point where it may be possible to reliably acquire certain image information about captured objects in real time. A number of publications may be consulted. For example, \u201cBi-layer segmentation of binocular stereo video\u201d (Vladimir Kolmogorov, Antonio Criminisi, Andrew Blake, Geoffrey Cross, Carsten Rother. 2005 San Diego, Calif., US Proc. IEEE Computer Vision and Pattern Recognition) discusses techniques for separating foreground objects from their background by fusing color\/contrast analysis with stereo pattern matching. Regarding basic stereo matching, see also Y. Ohta and T. Kanade, Stereo by intra- and inter-scan line search using dynamic programming, IEEE Trans. on PAMI, 7(2), 1985; I. J. Cox, S. L. Hingorani, and S. B. Rao, A maximum likelihood stereo algorithm, CVIU, 63(3):542-567, 1996; D. Scharstein and R. Szeliski, A taxonomy and evaluation of dense two-frame stereo correspondence algorithms, IJCV, 47(1-3), 2002. Regarding dealing with occlusion on object boundaries, see P. N. Belhumeur, A Bayesian-approach to binocular stereopsis, Int. J. Computer Vision, 19(3):237-260, August 1996; D. Geiger, B. Ladendorf, and A. Yuille, Occlusions and binocular stereo, Int. J. Computer Vision, 14:211-226, 1995; and A. Criminisi, J. Shotton, A. Blake, and P. H. S. Torr, Gaze manipulation for one to one teleconferencing, In Proc. ICCV, 2003.","Stereo video processing algorithms can, in real time, accurately and robustly separate objects in the foreground of a captured scene from the background of the scene. A stereo camera signal can be processed to obtain information such as the depth or distance of an object from the camera, the depth of pixels in an object's image, the identity of an object, an image of the object with the background cleanly removed regardless of the background's color or distance, the orientation of an object, and so on. In embodiments described below, information obtained by processing a stereo video signal is used by a game console or 3D graphics system.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 1","FIG. 1","FIGS. 7-10"],"b":["50","52","52","54","50","56","58","56","50","54","50","52","52","58","56","52"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2","b":["52","50","50","70","72","70","72","72","74","52","74","52","74"]},"The game console  receives the stereo video signal via an interface . In a preferred embodiment, the stereo video signal is then processed by a special device driver . The device driver  performs image processing on the stereo video signal to obtain information about the scene captured by the stereo video signal. Details of the special device driver  are discussed later. The device driver  is managed by an operating system  (which may be embedded in the game console ), and the device driver  is invoked and used by an application program or game .","The game  may use a 3D game engine . In a typical configuration, different games may share a common game engine . A game program typically includes the content (models, animations, sounds, textures or texture-generating procedures, and physics) and code that makes the game work, such as artificial intelligence, game and control logic, etc. Game engine  can be thought of as the software that is not specific to any particular game. A game engine typically performs functions such as rendering, storing models and scenes, lighting, shading, managing network connections, detecting collisions, and more. The game engine  generates frames for display.","The functionality of the device driver  may be accessed using a special application programming interface (API), with functions for performing high-level operations such as: return a list of objects separated from the background; return the 3D position or orientation of a particular separated object; return the identity of a particular separated object, perhaps among a supplied list of candidates; return the 3D geometry of a particular foreground\/background separated object (e.g. depths of pixels that correspond to the object); return an image of a select object, the image having the background effectively removed; and others. Although a device driver is a convenient type of component for encapsulating stereo processing functionality, a device driver is not required. Stereo processing can also be included as part of the operating system , or as part of the game or application , or even as a special hardware component of the game console . The game  obtains the high-level image processing output of the device driver  and uses it to help determine the behavior and\/or appearance of the game.","In a preferred embodiment, the stereo camera  is preferably an integrated device where the image capture devices  share common circuitry and housing. Shared processing circuitry  allows stereo video frames from the capture devices  to be easily paired and synchronized, and the shared housing gives a fixed geometric relation between the image capture devices , which reduces the computational complexity needed to analyze the stereo video signal. Nonetheless, a pair of independent cameras can also be used, each outputting a video signal and possibly with a connection to game console . In this case, some form of calibration and synchronization will usually be needed.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 3","FIG. 4"],"b":["52","100","102","52"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 5","FIG. 5","FIG. 5"],"b":["78","78","70","120","122","120","122","124","124","120","122","124"]},"The disparity map  is compared to at least a portion of the kernel image  to determine matching disparity values. A disparity-based kernel image is a model or template disparity map that is compared against the disparity map . The use of a kernel image is optional. A kernel image can be used to rapidly recover the approximate silhouette of an object. A more precise (e.g., but costly) alternative, discussed in the following paragraph, is to use optimization methods to define a binary mask of foreground vs. background points. The kernel image  can be an array of pixel values which represent the stereo disparity of an object to be located or searched for. More particularly, the kernel image  is an encoding of the silhouette of the object to be located as well as surface shape of the object to be located, e.g., the \u2018bumpiness\u2019 or depth of the object. In this manner, the kernel image  indicates the 3D surface shape of the object to be located from a point of view. The kernel image  can be, for example, a predetermined disparity map of a generic torso shape or any other shape or object. The kernel image  can be calculated in advance, or derived from a previous disparity map, or otherwise obtained. The kernel image  can be an approximation of the object that it represents, in other words, a rough model of the object. The disparity map  can also be used to determine the depth or distance of pixels relative to the stereo camera . An average of these distances (a distance to the object) can be used to scale the kernel image  before disparity map  is searched against the kernel image . As discussed below, color\/contrast information , possibly from a preceding disparity map or previous stereo video frames, can be used in separating the background.","In general, it should be noted that disparity alone can be a basis for foreground\/background separation, based on the assumption that points on a foreground object are more likely to have high disparity. Pixels of a foreground object can be separated based on their degree of disparity.","Foreground\/background separation can be performed by fusing a stereo-based segmentation algorithm with a color\/contrast based segmentation algorithm. Algorithms for automatically separating layers using color\/contrast or stereo alone are often prone to errors. By fusing color\/contrast analysis with stereo matching information, layers can be inferred accurately and efficiently. A Layered Dynamic Programming (LDP) algorithm can be used to solve stereo in an extended 6-state space that represents both foreground\/background layers and occluded regions. The resulting stereo-match likelihood is then fused with a contrast-sensitive color model that is learned on the fly, and stereo disparities are obtained by dynamic programming. A second algorithm, Layered Graph Cut (LGC), can be used to marginalize the stereo match likelihood over foreground and background hypotheses for fusion with a contrast-sensitive color model like the one used in LDP. Segmentation is then solved efficiently by a ternary graph cut. In sum, the device driver  uses one or more algorithms for fast and reliable foreground\/background segregation using stereo and\/or color\/contrast information, which produces a separated foreground object . For additional details, see \u201cBi-layer segmentation of binocular stereo video\u201d, by Vladimir Kolmogorov, Antonio Criminisi, Andrew Blake, Geoffrey Cross, Carsten Rother (US Proc. IEEE Computer Vision and Pattern Recognition, 2005).","The separation techniques discussed above have certain properties. For example, they are robust and fast enough for real time use. They generally do not generate artifacts, even when the color of an object at its edge is the same as part of the adjoining background. The techniques are able to extract a synthesized image of an object that is mostly free of artifacts; the background is cleanly removed. A silhouette can be recovered to pixel (or even subpixel) precision, so that when the recovered foreground is superimposed on a new background, color from the old background does not leak in.","Having separated stereo images of one or more objects in a scene, different types of information about objects in a scene can then be determined at . For example, different types of objects can be identified by using different kernel images . If an object has been separated from the background, that object can be identified by comparing it to different kernel images. Stereo-based depth information can also be obtained. A virtual or cyclopean image of the object can be computed from the left and right image using ordinary geometry-based techniques. The location of the separated object in the stereo-based image and\/or an input image may be indicated in any suitable manner. For example, the disparity data, pixel locations, or any other suitable indicator of the located object may be associated with the image as meta-data. The image with the located object may be used by the display manipulator module to perform some action or it may be sent to another application. Artifacts in the generated image can be corrected using a split-patch search algorithm, which may involve: restricting candidate patches to those lying on corresponding (left or right) epipolar lines; constraining a search region using tight, geometric depth bounds; and applying exemplar-based synthesis sparsely, where flagged by an inconsistency test. For further details, see \u201cThe SPS Algorithm: Patching Figural Continuity and Transparency by Split-Patch Search\u201d, by Antonio Criminisi, Andrew Blake, (US Proc. IEEE Computer Vision and Pattern Recognition, 2004). Border matting is an alternative method for correcting artifacts and obtaining pixel or subpixel precision. For details, see V Kolmogorov, A. Criminisi, A. Blake, G. Cross, C. Rother, Probabilistic fusion of stereo with color and contrast for bi-layer segmentation, June 2005, MSR-TR-2005-35.","It should be appreciated that stereo image analysis as discussed above can be repeatedly performed in real time on paired frames of the stereo video signal. This allows real time operations such as tracking the changing position of an object, providing accurate real time \u201ccut out\u201d video of an object as it moves and changes (e.g., video of an object with the background cleanly removed regardless of the nature of the background), and\/or providing a dynamic depth map of an object as it moves or changes in real time, for example.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 6","FIGS. 7-10"],"b":["150","152","154","154","156","158","160","162","160"]},{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 7","FIG. 7","FIG. 7","FIG. 7"],"b":["180","182","182","182","184","180","186","186","180","180","186","186","180","186","180","188"]},"It should be noted that boundary recovery to pixel precision (or better) can have allow not just determining the location of an object (e.g., \u201ca limb\u201d) but its precise outline, shape, and interior texture. Thus the entire shape and texture of the object can be reproduced elsewhere, and can be subjected to transformations of color or shape or texture along the way.","It will be appreciated that the example of  involves more than just the use of stereo-derived depth information to control an avatar. Stereo cameras are generally useful for obtaining raw depth or distance information about pixels. However, accurately identifying an object in association with its depth is a more complex and useful procedure. In other words, ordinary stereo analysis may provide depth of pixels, however, mere depth information may not accurately indicate which of those pixels correspond to particular objects. By using a kernel image, color\/contrast information, or other techniques for foreground\/background separation, depth information can be provided for particular objects, which can allow objects to be individually mapped to depth-sensitive actions or objects in a game or 3D virtual reality.","Although it is possible to continuously change a model to correspond to the continuously changing depth of a physical object, for performance reasons, some games have only a limited or predefined set of motions or animations for a model, whether the model is a model of a human figure, an automobile, a robot, an animal, etc. In other words, a model may have a set of predefined animations such as jumping, switching items, crouching, turning left, turning right, etc. In this case, gesture recognition may be used rather than a direct mapping between the shape or position of a model and the detected depth or position of an object.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 8","b":["200","200","200","202","202","204","206"]},"Gestures can be recognized in a number of ways. For example, an object's tracked path or motion can be compared against a set of predefined motion templates. A predefined motion template can include information, for example, such as a 3D volume (for the motion path) divided into ordered sub-volumes, which are respectively occupied by the object, in order, over a given range of time. If the tracked object is a handheld cylindrical object, the path of the cylindrical object could be compared to various specific motion templates, such as a side-to-side sweep motion template, an overhead downstroke motion template, a poke motion, etc. Whenever the continually updating recent motion path of the axe matches one of its motion templates, the template's gesture is identified at  as having occurred, and a corresponding command is issued. Simpler gesture recognition techniques can be used. For example, movements can be mapped to basic directions and in turn corresponding direction commands in a game. For 3D navigation, a real object can be detected to move up, down, left, right, forward, or backward, or combinations thereof (e.g., forward, up, and to the left), and a corresponding movement command may be issued in the game. In other words, stereo-based foreground\/background separation can be combined with depth information to generate three-dimensional direction commands.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 9","FIG. 9","FIG. 9"],"b":["230","232","234"]},"Because an image of the extracted object is going to be used in a 3D game or virtual reality, the extracted image  may be further prepared at  for 3D rendering. For example, the image  may be rescaled or re-dimensioned. The image  may be converted into a bump map or a displacement map. Other operations can be used. For example, the color of the image may be adjusted to match the 3D scene that it will appear in. Finally, in one embodiment, the image is mapped at  to a 3D model . This can involve texture mapping the color values of the pixels, or using the depths of the pixels to displace vertices of the model  (i.e., displacement mapping), or mapping a bump map of the image to the model . In one embodiment, the image's 3D depth values are not used and the color values of the pixels are mapped to the surface of the model . In another embodiment, only the depth values are mapped to the model . Furthermore, if a displacement or bump map is used, processing time may be too high for updating the model  in real time to match changes in the scene, and the mapping  may occur merely during an initialization stage. However, in a preferred embodiment the entire process is repeated in real time so that frames of the 3D game are rendered to match changes in the scene in real time as captured by the stereo camera. In either case, renderings  are based on images of an object obtained using stereo-based foreground\/background separation.","In another embodiment, the extracted image of the object is not mapped at  to a model. Techniques for stereo-based foreground\/background separation have advanced to the point where foreground images can be separated cleanly and efficiently, even if the background has a same color as the object in the foreground. Furthermore, the images can be separated and synthesized in such a manner that the images are significantly free of artifacts. In other words, an accurate profile of the object can be obtained; the background is accurately removed independent of the nature of the background. Extracted images usually have a quality comparable to images obtained using blue or green screen separation; the images are sharp and accurate representations of the object. Therefore, an image of an object can be displayed directly in a game or 3D virtual reality, either as a planar surface, or as a 3D surface, possibly with some modeled \u201cbacking\u201d to allow 3D non-frontal viewing.","In another embodiment, the extracted image is co-displayed with the 3D virtual reality, but is not incorporated into the 3D virtual reality. For example, if a number of players are participating in a same 3D virtual reality (each with a stereo camera), each player's \u201cheads up display\u201d (user interface) may include images or real time video of the head\/torso of respective participants. The general idea of using stereo techniques to extract foreground images cleanly separated from the background and immersing the images in a game can take other forms. For example, extracted images or video can be displayed as two-dimensional images, whether in a two-dimensional game or a three-dimensional game. As another example, extracted images could be displayed in a virtual monitor (within the game) or an instant-messenger type of application (within the game or as part of the game interface). A remote partner or combatant can be seen, in some form, within scenes in a game.","In another embodiment, a game is provided with artificial intelligence for recognizing facial gestures of stereo-extracted face images. This information can be incorporated into a game in any number of ways. Artificial-intelligence game characters can be programmed to respond according to a player's facial gesture, for example, responding positively to a smiling face, or responding negatively to a frowning or angry face.","Stereo-based foreground\/background separation is also useful for object recognition.  illustrates how stereo-based object recognition can be used for 3D gaming. As discussed above, the stereo video signal can be searched for kernel images of different types of objects, thus performing a form of object detection or recognition; if a kernel image is matched to a portion of a captured scene, the object associated with that kernel image is deemed to be present in the scene. Consider an example where there are three kernel images (not shown) to be searched for: a kernel image of a briefcase; a kernel image of a flashlight or cylindrical object; and a kernel image of an arm\/hand holding nothing. In this example, the game is a type where the player controls a 3D avatar, character, vehicle, etc. that is rendered and displayed. In a first physical scene  A, a real person is holding a briefcase. One or more pairs of stereo frames may be processed to recognize  the object (e.g., \u201ca briefcase\u201d).","In response to the recognition at , the game may cause the 3D character to \u201chold\u201d a corresponding virtual object such as a virtual briefcase. The holding of the object can simply be implemented as a change to the state of the character (e.g., a flag is set indicating that the virtual object is currently being held) without any corresponding change in what is displayed or rendered. Additionally or alternatively, the virtual holding can be implemented by causing the 3D character to be rendered to appear to hold a virtual object associated with the matched kernel image, as seen in rendered characters . Similarly, in scene  B, a flashlight is recognized at  and the game character is modified and\/or rendered accordingly. If the recognizing at  is handedness sensitive, then if the flashlight is in the same hand as the briefcase was, the character is made to stop holding the virtual briefcase, or if the flashlight is in the real person's other hand, then the character might be made to virtually hold both virtual objects. In scene  C, an empty arm\/hand is recognized and the game character is rendered accordingly. In this manner, a person with a set of real objects can control the objects virtually held by a game character by picking up any of the corresponding real objects. Real objects held in a hand can be recognized by using both the kernel image of the arm\/hand and the kernel images of the other objects to detect which object is currently in a hand of the person. As mentioned earlier, kernel disparity images can be obtained in advance (e.g., part of the content embedded in a particular game), or during a training process where an object is held in front of the stereo camera, or from disparity maps extracted from earlier processed scenes.","Other objects can be recognized. For example, clothes, hats, etc. worn by a real person can be recognized and similarly translated into the 3D virtual reality. Even large articles or props such as bicycles, furniture, etc. can be recognized with similar effect.","In general, it has been shown how game consoles and 3D virtual reality systems can benefit from a richer set of visual control information and the addition of real-time information, including video, of objects. Stereo video processing can be used to improve a game system, for example by providing more natural control, providing real-time images for importation or translation into a 3D virtual reality, and so on. Embodiments relating to immersing or displaying stereo-extracted images of foreground objects into 3D games or virtual realities can also be applied in 2D games, the broader idea being immersion into computer generated graphical environments.","In conclusion, those skilled in the art will realize that storage devices used to store program instructions can be distributed across a network. For example a remote computer may store an example of a process described as software. A local or terminal computer may access the remote computer and download a part or all of the software to run the program. Alternatively the local computer may download pieces of the software as needed, or distributively process by executing some software instructions at the local terminal and some at the remote computer (or computer network). Those skilled in the art will also realize that by utilizing conventional techniques known to those skilled in the art, all or a portion of the software instructions may be carried out by a dedicated circuit, such as a DSP, programmable logic array, or the like.","All of the embodiments and features discussed above can be realized in the form of information stored in volatile or non-volatile computer or device readable medium. This is deemed to include at least media such as CD-ROM, magnetic media, flash ROM, etc., storing machine executable instructions, or source code, or any other information that can be used to enable or configure computing devices to perform the various embodiments discussed above. This is also deemed to include at least volatile memory such as RAM storing information such as CPU instructions during execution of a program carrying out an embodiment, as well as non-volatile media storing information that allows a program or executable to be loaded and executed."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":["Like reference numerals are used to designate like parts in the accompanying Drawings.",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
