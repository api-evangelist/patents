---
title: Standard Gestures
abstract: Systems, methods and computer readable media are disclosed for grouping complementary sets of standard gestures into gesture libraries. The gestures may be complementary in that they are frequently used together in a context or in that their parameters are interrelated. Where a parameter of a gesture is set with a first value, all other parameters of the gesture and of other gestures in the gesture package that depend on the first value may be set with their own value which is determined using the first value.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08487938&OS=08487938&RS=08487938
owner: Microsoft Corporation
number: 08487938
owner_city: Redmond
owner_country: US
publication_date: 20090223
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["PRIORITY","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF ILLUSTRATIVE EMBODIMENTS","CONCLUSION"],"p":["The present application claims priority to provisional application 61\/148,884, titled \u201cStandard Gestures,\u201d filed Jan. 30, 2009, the contents of which are incorporated herein in its entirety.","Many computing applications such as computer games, multimedia applications, office applications or the like use controls to allow users to manipulate game characters or other aspects of an application. Typically such controls are input using, for example, controllers, remotes, keyboards, mice, or the like. Unfortunately, such controls can be difficult to learn, thus creating a barrier between a user and such games and applications. Furthermore, such controls may be different than actual game actions or other application actions for which the controls are used. For example, a game control that causes a game character to swing a baseball bat may not correspond to an actual motion of swinging the baseball bat.","Disclosed herein are systems and methods for receiving data reflecting skeletal movement of a user, and determining from that data whether the user has performed one or more gestures. Packages of standard gestures are disclosed from which application developers can incorporate gesture recognition into their applications.","In an exemplary embodiment, a gesture library comprises a plurality of gestures. Where these gestures are complementary with each other, they may be grouped into gesture packages. These gesture packages are then provided to applications for use by a gesture recognizer engine. An application may utilize one or more gesture packages.","The application may assign a value to a first parameter of a gesture, such as an arm velocity minimum threshold that must be reached for a football throw gesture to be recognized. The recognizer engine sets the first parameter with the value, and also sets the value of any other parameters of that gesture or any other gestures in the gesture package that are dependent upon the value of the first gesture. For instance, where the gesture package is a sports gesture package that includes the football throw gesture, the package may also include a curveball baseball throw gesture and a fastball baseball throw gesture that are interrelated with the football throw gesture. Where it has been determined that the curveball baseball throw gesture should have an arm velocity minimum threshold of 80% and the fastball baseball throw gesture should have an arm velocity minimum threshold of 90% of the football throw gesture, then those parameters may be set to 80% and 90% of the value, respectively.","It can be appreciated by one of skill in the art that one or more various aspects of the disclosure may include but are not limited to circuitry and\/or programming for effecting the herein-referenced aspects of the present disclosure; the circuitry and\/or programming can be virtually any combination of hardware, software, and\/or firmware configured to effect the herein-referenced aspects depending upon the design choices of the system designer.","The foregoing is a summary and thus contains, by necessity, simplifications, generalizations and omissions of detail. Those skilled in the art will appreciate that the summary is illustrative only and is not intended to be in any way limiting.","As will be described herein, a user may control an application executing on a computing environment such as a game console, a computer, or the like by performing one or more gestures. According to one embodiment, the gestures may be received by, for example, a capture device. For example, the capture device may capture a depth image of a scene. In one embodiment, the capture device may determine whether one or more targets or objects in the scene corresponds to a human target such as the user. To determine whether a target or object in the scene corresponds a human target, each of the targets may be flood filled and compared to a pattern of a human body model. Each target or object that matches the human body model may then be scanned to generate a skeletal model associated therewith. The skeletal model may then be provided to the computing environment such that the computing environment may track the skeletal model, render an avatar associated with the skeletal model, and may determine which controls to perform in an application executing on the computer environment based on, for example, gestures of the user that have been recognized from the skeletal model. A gesture recognizer engine, the architecture of which is described more fully below, is used to determine when a particular gesture has been made by the user.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIGS. 1A and 1B","b":["10","18","10","18"]},"As shown in , the target recognition, analysis, and tracking system  may include a computing environment . The computing environment  may be a computer, a gaming system or console, or the like. According to an example embodiment, the computing environment  may include hardware components and\/or software components such that the computing environment  may be used to execute applications such as gaming applications, non-gaming applications, or the like.","As shown in , the target recognition, analysis, and tracking system  may further include a capture device . The capture device  may be, for example, a camera that may be used to visually monitor one or more users, such as the user , such that gestures performed by the one or more users may be captured, analyzed, and tracked to perform one or more controls or actions within an application, as will be described in more detail below.","According to one embodiment, the target recognition, analysis, and tracking system  may be connected to an audiovisual device  such as a television, a monitor, a high-definition television (HDTV), or the like that may provide game or application visuals and\/or audio to a user such as the user . For example, the computing environment  may include a video adapter such as a graphics card and\/or an audio adapter such as a sound card that may provide audiovisual signals associated with the game application, non-game application, or the like. The audiovisual device  may receive the audiovisual signals from the computing environment  and may then output the game or application visuals and\/or audio associated with the audiovisual signals to the user . According to one embodiment, the audiovisual device  may be connected to the computing environment  via, for example, an S-Video cable, a coaxial cable, an HDMI cable, a DVI cable, a VGA cable, or the like.","As shown in , the target recognition, analysis, and tracking system  may be used to recognize, analyze, and\/or track a human target such as the user . For example, the user  may be tracked using the capture device  such that the movements of user  may be interpreted as controls that may be used to affect the application being executed by computer environment . Thus, according to one embodiment, the user  may move his or her body to control the application.","As shown in , in an example embodiment, the application executing on the computing environment  may be a boxing game that the user  may be playing. For example, the computing environment  may use the audiovisual device  to provide a visual representation of a boxing opponent  to the user . The computing environment  may also use the audiovisual device  to provide a visual representation of a player avatar  that the user  may control with his or her movements. For example, as shown in , the user  may throw a punch in physical space to cause the player avatar  to throw a punch in game space. Thus, according to an example embodiment, the computer environment  and the capture device  of the target recognition, analysis, and tracking system  may be used to recognize and analyze the punch of the user  in physical space such that the punch may be interpreted as a game control of the player avatar  in game space.","Other movements by the user  may also be interpreted as other controls or actions, such as controls to bob, weave, shuffle, block, jab, or throw a variety of different power punches. Furthermore, some movements may be interpreted as controls that may correspond to actions other than controlling the player avatar . For example, the player may use movements to end, pause, or save a game, select a level, view high scores, communicate with a friend, etc.","In example embodiments, the human target such as the user  may have an object. In such embodiments, the user of an electronic game may be holding the object such that the motions of the player and the object may be used to adjust and\/or control parameters of the game. For example, the motion of a player holding a racket may be tracked and utilized for controlling an on-screen racket in an electronic sports game. In another example embodiment, the motion of a player holding an object may be tracked and utilized for controlling an on-screen weapon in an electronic combat game.","According to other example embodiments, the target recognition, analysis, and tracking system  may further be used to interpret target movements as operating system and\/or application controls that are outside the realm of games. For example, virtually any controllable aspect of an operating system and\/or application may be controlled by movements of the target such as the user .",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 2","b":["20","10","20","20"]},"As shown in , the capture device  may include an image camera component . According to an example embodiment, the image camera component  may be a depth camera that may capture the depth image of a scene. The depth image may include a two-dimensional (2-D) pixel area of the captured scene where each pixel in the 2-D pixel area may represent a length in, for example, centimeters, millimeters, or the like of an object in the captured scene from the camera.","As shown in , according to an example embodiment, the image camera component  may include an IR light component , a three-dimensional (3-D) camera , and an RGB camera  that may be used to capture the depth image of a scene. For example, in time-of-flight analysis, the IR light component  of the capture device  may emit an infrared light onto the scene and may then use sensors (not shown) to detect the backscattered light from the surface of one or more targets and objects in the scene using, for example, the 3-D camera  and\/or the RGB camera . In some embodiments, pulsed infrared light may be used such that the time between an outgoing light pulse and a corresponding incoming light pulse may be measured and used to determine a physical distance from the capture device  to a particular location on the targets or objects in the scene. Additionally, in other example embodiments, the phase of the outgoing light wave may be compared to the phase of the incoming light wave to determine a phase shift. The phase shift may then be used to determine a physical distance from the capture device to a particular location on the targets or objects.","According to another example embodiment, time-of-flight analysis may be used to indirectly determine a physical distance from the capture device  to a particular location on the targets or objects by analyzing the intensity of the reflected beam of light over time via various techniques including, for example, shuttered light pulse imaging.","In another example embodiment, the capture device  may use a structured light to capture depth information. In such an analysis, patterned light (i.e., light displayed as a known pattern such as grid pattern or a stripe pattern) may be projected onto the scene via, for example, the IR light component . Upon striking the surface of one or more targets or objects in the scene, the pattern may become deformed in response. Such a deformation of the pattern may be captured by, for example, the 3-D camera  and\/or the RGB camera  and may then be analyzed to determine a physical distance from the capture device to a particular location on the targets or objects.","According to another embodiment, the capture device  may include two or more physically separated cameras that may view a scene from different angles, to obtain visual stereo data that may be resolved to generate depth information","The capture device  may further include a microphone . The microphone  may include a transducer or sensor that may receive and convert sound into an electrical signal. According to one embodiment, the microphone  may be used to reduce feedback between the capture device  and the computing environment  in the target recognition, analysis, and tracking system . Additionally, the microphone  may be used to receive audio signals that may also be provided by the user to control applications such as game applications, non-game applications, or the like that may be executed by the computing environment .","In an example embodiment, the capture device  may further include a processor  that may be in operative communication with the image camera component . The processor  may include a standardized processor, a specialized processor, a microprocessor, or the like that may execute instructions that may include instructions for receiving the depth image, determining whether a suitable target may be included in the depth image, converting the suitable target into a skeletal representation or model of the target, or any other suitable instruction.","The capture device  may further include a memory component  that may store the instructions that may be executed by the processor , images or frames of images captured by the 3-D camera or RGB camera, or any other suitable information, images, or the like. According to an example embodiment, the memory component  may include random access memory (RAM), read only memory (ROM), cache, Flash memory, a hard disk, or any other suitable storage component. As shown in , in one embodiment, the memory component  may be a separate component in communication with the image capture component  and the processor . According to another embodiment, the memory component  may be integrated into the processor  and\/or the image capture component .","As shown in , the capture device  may be in communication with the computing environment  via a communication link . The communication link  may be a wired connection including, for example, a USB connection, a Firewire connection, an Ethernet cable connection, or the like and\/or a wireless connection such as a wireless 802.11b, g, a, or n connection. According to one embodiment, the computing environment  may provide a clock to the capture device  that may be used to determine when to capture, for example, a scene via the communication link .","Additionally, the capture device  may provide the depth information and images captured by, for example, the 3-D camera  and\/or the RGB camera , and a skeletal model that may be generated by the capture device  to the computing environment  via the communication link . The computing environment  may then use the skeletal model, depth information, and captured images to, for example, recognize user gestures and in response control an application such as a game or word processor. For example, as shown, in , the computing environment  may include a gestures recognizer engine . The gestures recognizer engine  may include a collection of gesture filters, each comprising information concerning a gesture that may be performed by the skeletal model (as the user moves). The data captured by the cameras ,  and device  in the form of the skeletal model and movements associated with it may be compared to the gesture filters in the gesture recognizer engine  to identify when a user (as represented by the skeletal model) has performed one or more gestures. Those gestures may be associated with various controls of an application. Thus, the computing environment  may use the gesture recognizer engine  to interpret movements of the skeletal model and to control an application based on the movements.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 3A","FIGS. 1A-2","FIG. 3A"],"b":["12","100","100","101","102","104","106","102","104","101","102","104","106","100"]},"A graphics processing unit (GPU)  and a video encoder\/video codec (coder\/decoder)  form a video processing pipeline for high speed and high resolution graphics processing. Data is carried from the graphics processing unit  to the video encoder\/video codec  via a bus. The video processing pipeline outputs data to an A\/V (audio\/video) port  for transmission to a television or other display. A memory controller  is connected to the GPU  to facilitate processor access to various types of memory , such as, but not limited to, a RAM (Random Access Memory).","The multimedia console  includes an I\/O controller , a system management controller , an audio processing unit , a network interface controller , a first USB host controller , a second USB controller  and a front panel I\/O subassembly  that are preferably implemented on a module . The USB controllers  and  serve as hosts for peripheral controllers ()-(), a wireless adapter , and an external memory device  (e.g., flash memory, external CD\/DVD ROM drive, removable media, etc.). The network interface  and\/or wireless adapter  provide access to a network (e.g., the Internet, home network, etc.) and may be any of a wide variety of various wired or wireless adapter components including an Ethernet card, a modem, a Bluetooth module, a cable modem, and the like.","System memory  is provided to store application data that is loaded during the boot process. A media drive  is provided and may comprise a DVD\/CD drive, hard drive, or other removable media drive, etc. The media drive  may be internal or external to the multimedia console . Application data may be accessed via the media drive  for execution, playback, etc. by the multimedia console . The media drive  is connected to the I\/O controller  via a bus, such as a Serial ATA bus or other high speed connection (e.g., IEEE 1394).","The system management controller  provides a variety of service functions related to assuring availability of the multimedia console . The audio processing unit  and an audio codec  form a corresponding audio processing pipeline with high fidelity and stereo processing. Audio data is carried between the audio processing unit  and the audio codec  via a communication link. The audio processing pipeline outputs data to the A\/V port  for reproduction by an external audio player or device having audio capabilities.","The front panel I\/O subassembly  supports the functionality of the power button  and the eject button , as well as any LEDs (light emitting diodes) or other indicators exposed on the outer surface of the multimedia console . A system power supply module  provides power to the components of the multimedia console . A fan  cools the circuitry within the multimedia console .","The CPU , GPU , memory controller , and various other components within the multimedia console  are interconnected via one or more buses, including serial and parallel buses, a memory bus, a peripheral bus, and a processor or local bus using any of a variety of bus architectures. By way of example, such architectures can include a Peripheral Component Interconnects (PCI) bus, PCI-Express bus, etc.","When the multimedia console  is powered ON, application data may be loaded from the system memory  into memory  and\/or caches ,  and executed on the CPU . The application may present a graphical user interface that provides a consistent user experience when navigating to different media types available on the multimedia console . In operation, applications and\/or other media contained within the media drive  may be launched or played from the media drive  to provide additional functionalities to the multimedia console .","The multimedia console  may be operated as a standalone system by simply connecting the system to a television or other display. In this standalone mode, the multimedia console  allows one or more users to interact with the system, watch movies, or listen to music. However, with the integration of broadband connectivity made available through the network interface  or the wireless adapter , the multimedia console  may further be operated as a participant in a larger network community.","When the multimedia console  is powered ON, a set amount of hardware resources are reserved for system use by the multimedia console operating system. These resources may include a reservation of memory (e.g., 16 MB), CPU and GPU cycles (e.g., 5%), networking bandwidth (e.g., 8 kbs), etc. Because these resources are reserved at system boot time, the reserved resources do not exist from the application's view.","In particular, the memory reservation preferably is large enough to contain the launch kernel, concurrent system applications and drivers. The CPU reservation is preferably constant such that if the reserved CPU usage is not used by the system applications, an idle thread will consume any unused cycles.","With regard to the GPU reservation, lightweight messages generated by the system applications (e.g., popups) are displayed by using a GPU interrupt to schedule code to render popup into an overlay. The amount of memory required for an overlay depends on the overlay area size and the overlay preferably scales with screen resolution. Where a full user interface is used by the concurrent system application, it is preferable to use a resolution independent of application resolution. A scaler may be used to set this resolution such that the need to change frequency and cause a TV resynch is eliminated.","After the multimedia console  boots and system resources are reserved, concurrent system applications execute to provide system functionalities. The system functionalities are encapsulated in a set of system applications that execute within the reserved system resources described above. The operating system kernel identifies threads that are system application threads versus gaming application threads. The system applications are preferably scheduled to run on the CPU  at predetermined times and intervals in order to provide a consistent system resource view to the application. The scheduling is to minimize cache disruption for the gaming application running on the console.","When a concurrent system application requires audio, audio processing is scheduled asynchronously to the gaming application due to time sensitivity. A multimedia console application manager (described below) controls the gaming application audio level (e.g., mute, attenuate) when system applications are active.","Input devices (e.g., controllers () and ()) are shared by gaming applications and system applications. The input devices are not reserved resources, but are to be switched between system applications and the gaming application such that each will have a focus of the device. The application manager preferably controls the switching of input stream, without knowledge the gaming application's knowledge and a driver maintains state information regarding focus switches. The cameras ,  and capture device  may define additional input devices for the console .",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 3B","FIGS. 1A-2"],"b":["220","12","220","220","220"]},"In , the computing environment  comprises a computer , which typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, removable and non-removable media. The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable, volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk  such as a CD ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in , provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies. A user may enter commands and information into the computer  through input devices such as a keyboard  and pointing device , commonly referred to as a mouse, trackball or touch pad. Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus, but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). The cameras ,  and capture device  may define additional input devices for the console . A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . In addition to the monitor, computers may also include other peripheral output devices such as speakers  and printer , which may be connected through a output peripheral interface .","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on memory device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 4A","b":["20","302","304","306","308","310","312","314","316","318","320","322","324","326","328","330"]},"Through moving his body, a user may create gestures. A gesture comprises a motion or pose by a user that may be captured as image data and parsed for meaning. A gesture may be dynamic, comprising a motion, such as mimicking throwing a ball. A gesture may be a static pose, such as holding one's crossed forearms  in front of his torso . A gesture may also incorporate props, such as by swinging a mock sword. A gesture may comprise more than one body part, such as clapping the hands  together, or a subtler motion, such as pursing one's lips.","Gestures may be used for input in a general computing context. For instance, various motions of the hands  or other body parts may correspond to common system wide tasks such as navigate up or down in a hierarchical list, open a file, close a file, and save a file. Gestures may also be used in a video-game-specific context, depending on the game. For instance, with a driving game, various motions of the hands  and feet  may correspond to steering a vehicle in a direction, shifting gears, accelerating, and breaking.","A user may generate a gesture that corresponds to walking or running, by walking or running in place himself. The user may alternately lift and drop each leg - to mimic walking without moving. The system may parse this gesture by analyzing each hip  and each thigh . A step may be recognized when one hip-thigh angle (as measured relative to a vertical line, wherein a standing leg has a hip-thigh angle of 0\u00b0, and a forward horizontally extended leg has a hip-thigh angle of 90\u00b0) exceeds a certain threshold relative to the other thigh. A walk or run may be recognized after some number of consecutive steps by alternating legs. The time between the two most recent steps may be thought of as a period. After some number of periods where that threshold angle is not met, the system may determine that the walk or running gesture has ceased.","Given a \u201cwalk or run\u201d gesture, an application may set values for application-determined parameters associated with this gesture. These parameters may include the above threshold angle, the number of steps required to initiate a walk or run gesture, a number of periods where no step occurs to end the gesture, and a threshold period that determines whether the gesture is a walk or a run. A fast period may correspond to a run, as the user will be moving his legs quickly, and a slower period may correspond to a walk.","A gesture may be associated with a set of default parameters at first that the application may override with its own parameters. In this scenario, an application is not forced to provide parameters, but may instead use a set of default parameters that allow the gesture to be recognized in the absence of application-defined parameters.","There are a variety of outputs that may be associated with the gesture. There may be a baseline \u201cyes or no\u201d as to whether a gesture is occurring. There also may be a confidence level, which corresponds to the likelihood that the user's tracked movement corresponds to the gesture. This could be a linear scale that ranges over floating point numbers between 0 and 1, inclusive. Wherein an application receiving this gesture information cannot accept false-positives as input, it may use only those recognized gestures that have a high confidence level, such as at least 0.95. Where an application must recognize every instance of the gesture, even at the cost of false-positives, it may use gestures that have at least a much lower confidence level, such as those merely greater than 0.2. The gesture may have an output for the time between the two most recent steps, and where only a first step has been registered, this may be set to a reserved value, such as \u22121 (since the time between any two steps must be positive). The gesture may also have an output for the highest thigh angle reached during the most recent step.","Another exemplary gesture is a \u201cheel lift jump.\u201d In this, a user may create the gesture by raising his heels off the ground, but keeping his toes planted. Alternatively, the user may jump into the air where his feet  leave the ground entirely. The system may parse the skeleton for this gesture by analyzing the angle relation of the shoulders , hips  and knees  to see if they are in a position of alignment equal to standing up straight. Then these points and upper  and lower  spine points may be monitored for any upward acceleration. A sufficient combination of acceleration may trigger a jump gesture.","Given this \u201cheel lift jump\u201d gesture, an application may set values for application-determined parameters associated with this gesture. The parameters may include the above acceleration threshold, which determines how fast some combination of the user's shoulders , hips  and knees  must move upward to trigger the gesture, as well as a maximum angle of alignment between the shoulders , hips  and knees  at which a jump may still be triggered.","The outputs may comprise a confidence level, as well as the user's body angle at the time of the jump.","Setting parameters for a gesture based on the particulars of the application that will receive the gesture is important in accurately identifying gestures. Properly identifying gestures and the intent of a user greatly helps in creating a positive user experience. Where a gesture recognizer system is too sensitive, and even a slight forward motion of the hand  is interpreted as a throw, the user may become frustrated because gestures are being recognized where he has no intent to make a gesture, and thus, he lacks control over the system. Where a gesture recognizer system is not sensitive enough, the system may not recognize conscious attempts by the user to make a throwing gesture, frustrating him in a similar manner. At either end of the sensitivity spectrum, the user becomes frustrated because he cannot properly provide input to the system.","Another parameter to a gesture may be a distance moved. Where a user's gestures control the actions of an avatar in a virtual environment, that avatar may be arm's length from a ball. If the user wishes to interact with the ball and grab it, this may require the user to extend his arm - to full length while making the grab gesture. In this situation, a similar grab gesture where the user only partially extends his arm - may not achieve the result of interacting with the ball.","A gesture or a portion thereof may have as a parameter a volume of space in which it must occur. This volume of space may typically be expressed in relation to the body where a gesture comprises body movement. For instance, a football throwing gesture for a right-handed user may be recognized only in the volume of space no lower than the right shoulder , and on the same side of the head  as the throwing arm -. It may not be necessary to define all bounds of a volume, such as with this throwing gesture, where an outer bound away from the body is left undefined, and the volume extends out indefinitely, or to the edge of scene that is being monitored.",{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIG. 4B","FIG. 2"],"b":["190","190","418","418","426","428","426","428","426","426","428","428","426"]},"Filters may be modular or interchangeable. In an embodiment, a filter has a number of inputs, each of those inputs having a type, and a number of outputs, each of those outputs having a type. In this situation, a first filter may be replaced with a second filter that has the same number and types of inputs and outputs as the first filter without altering any other aspect of the recognizer engine architecture. For instance, there may be a first filter for driving that takes as input skeletal data and outputs a confidence that the gesture associated with the filter is occurring and an angle of steering. Where one wishes to substitute this first driving filter with a second driving filter\u2014perhaps because the second driving filter is more efficient and requires fewer processing resources\u2014one may do so by simply replacing the first filter with the second filter so long as the second filter has those same inputs and outputs\u2014one input of skeletal data type, and two outputs of confidence type and angle type.","A filter need not have a parameter. For instance, a \u201cuser height\u201d filter that returns the user's height may not allow for any parameters that may be tuned. An alternate \u201cuser height\u201d filter may have tunable parameters\u2014such as to whether to account for a user's footwear, hairstyle, headwear and posture in determining the user's height.","Inputs to a filter may comprise things such as joint data about a user's joint position, like angles formed by the bones that meet at the joint, RGB color data from the scene, and the rate of change of an aspect of the user. Outputs from a filter may comprise things such as the confidence that a given gesture is being made, the speed at which a gesture motion is made, and a time at which a gesture motion is made.","A context may be a cultural context, and it may be an environmental context. A cultural context refers to the culture of a user using a system. Different cultures may use similar gestures to impart markedly different meanings. For instance, an American user who wishes to tell another user to \u201clook\u201d or \u201cuse his eyes\u201d may put his index finger on his head close to the distal side of his eye. However, to an Italian user, this gesture may be interpreted as a reference to the mafia.","Similarly, there may be different contexts among different environments of a single application. Take a first-person shooter game that involves operating a motor vehicle. While the user is on foot, making a first with the fingers towards the ground and extending the first in front and away from the body may represent a punching gesture. While the user is in the driving context, that same motion may represent a \u201cgear shifting\u201d gesture. There may also be one or more menu environments, where the user can save his game, select among his character's equipment or perform similar actions that do not comprise direct game-play. In that environment, this same gesture may have a third meaning, such as to select something or to advance to another screen.","The gesture recognizer engine  may have a base recognizer engine  that provides functionality to a gesture filter . In an embodiment, the functionality that the recognizer engine  implements includes an input-over-time archive that tracks recognized gestures and other input, a Hidden Markov Model implementation (where the modeled system is assumed to be a Markov process\u2014one where a present state encapsulates any past state information necessary to determine a future state, so no other past state information must be maintained for this purpose\u2014with unknown parameters, and hidden parameters are determined from the observable data), as well as other functionality required to solve particular instances of gesture recognition.","Filters  are loaded and implemented on top of the base recognizer engine  and can utilize services provided by the engine  to all filters . In an embodiment, the base recognizer engine  processes received data to determine whether it meets the requirements of any filter . Since these provided services, such as parsing the input, are provided once by the base recognizer engine  rather than by each filter , such a service need only be processed once in a period of time as opposed to once per filter  for that period, so the processing required to determine gestures is reduced.","An application may use the filters  provided by the recognizer engine , or it may provide its own filter , which plugs in to the base recognizer engine . In an embodiment, all filters  have a common interface to enable this plug-in characteristic. Further, all filters  may utilize parameters , so a single gesture tool as described below may be used to debug and tune the entire filter system .","These parameters  may be tuned for an application or a context of an application by a gesture tool . In an embodiment, the gesture tool  comprises a plurality of sliders , each slider  corresponding to a parameter , as well as a pectoral representation of a body . As a parameter  is adjusted with a corresponding slider , the body  may demonstrate both actions that would be recognized as the gesture with those parameters  and actions that would not be recognized as the gesture with those parameters , identified as such. This visualization of the parameters  of gestures provides an effective means to both debug and fine tune a gesture.",{"@attributes":{"id":"p-0086","num":"0085"},"figref":"FIG. 5","b":["418","418"]},{"@attributes":{"id":"p-0087","num":"0086"},"figref":"FIG. 5A","b":["418","502","418","502","504","506","504","508","40","510"]},{"@attributes":{"id":"p-0088","num":"0087"},"figref":["FIG. 5B","FIG. 5A"],"b":["418","502","508","512","504","502","514","512","504","514","516","418"]},"There exist other embodiments for stacking gestures. It an embodiment, position data  is passed directly to all filters of the stacked gesture, rather than through IFilter , and a component of the recognizer engine determines how each filter interoperates. For example, with a jump filter and a throw filter, each may be recognized independently when no other user action is occurring, but this component would recognize that a jump and some user input that may be a throw are occurring simultaneously based on the respective output from each filter. This component may then interpret the throw filter less rigorously (for instance, by expanding the acceptable range of values to satisfy a parameter), and based on that the \u201csome input that may be a throw\u201d may be recognized as a throw.",{"@attributes":{"id":"p-0090","num":"0089"},"figref":["FIG. 6","FIG. 6A","FIG. 6E"],"b":["602","402","402","602"]},"In , the user  begins with his arms  down at his sides. He then raises them up and above his shoulders as depicted in  and then further up, to the approximate level of his head, as depicted in . From there, he lowers his arms  to shoulder level, as depicted in , and then again raises them up, to the approximate level of his head, as depicted in . Where a system captures these positions by the user  without any intervening position that may signal that the gesture is cancelled, or another gesture is being made, it may recognize the fair catch gesture as having been made by the user .",{"@attributes":{"id":"p-0092","num":"0091"},"figref":["FIG. 7","FIG. 6"]},"In , the user's shoulders , are above his elbows , which in turn are above his hands . The shoulders , elbows  and hands  are then at a uniform level in . The system then detects in  that the hands  are above the elbows, which are above the shoulders . In , the user has returned to the position of , where the shoulders , elbows  and hands  are at a uniform level. In the final position of the gesture, shown in , the user returns to the position of , where the hands  are above the elbows, which are above the shoulders .","While the depth camera  captures a series of still images, such that in any one image the user appears to be stationary, the user is moving in the course of performing this gesture (as opposed to a stationary gesture, as discussed supra). The system is able to take this series of poses in each still image, and from that determine the moving gesture that the user is making.","In performing the gesture, a user is unlikely to be able to create an angle as formed by his right shoulder , right elbow and right hand of, for example, between 140\u00b0 and 145\u00b0. So, the application using the filter  for the fair catch gesture  may tune the associated parameters  to best serve the specifics of the application. For instance, the positions in  may be recognized any time the user has his hands  above his shoulders , without regard to elbow  position. A set of parameters that are stricter may require that the hands  be above the head  and that the elbows  be both above the shoulders  and between the head  and the hands . Additionally, the parameters  for a fair catch gesture  may require that the user move from the position of  through the position of  within a specified period of time, such as 1.5 seconds, and if the user takes more than 1.5 seconds to move through these positions, it will not be recognized as the fair catch .",{"@attributes":{"id":"p-0096","num":"0095"},"figref":"FIG. 8","b":["806","802","804","802","806","806","806","804"],"i":["a ","b"]},"A genre package  may include those gestures that are commonly used within a genre. For instance, a first-person shooter (FPS) genre package may have gesture filters for shooting a weapon , throwing a projectile , punching , opening a door , crouching , jumping , running , and turning . This FPS genre package may be thought of as providing a generic FPS genre package \u2014one with gesture filter parameters tuned or set so that they will likely work acceptably with a large number of FPS applications.","A genre package is not limited to groups of complementary gesture filters that work for known genres or applications. A genre package may comprise gesture filters that comprise a subset of those filters used by an application or genre, or filters that are complementary, though an appropriate genre for them has yet to be identified.","An application may then tune those generic genre packages to meet the particulars of that application. The application may tune a generic genre package by setting values for parameters of filters in the genre package. For instance, the creators of Game A may decide that their game functions best when a demonstrative movement is required to register the opening a door gesture filter , because otherwise it is too similar to the punching gesture filter . However, the creators of Game B may decide that this is not a concern, and require only a more modest movement to register the opening a door gesture filter B.","In the embodiment where a genre package comprises machine-readable instructions, a genre package may be provided as those instructions in source code form, or in a form reflecting some amount of compilation of those instructions.",{"@attributes":{"id":"p-0101","num":"0100"},"figref":"FIG. 9"},"Operation  depicts providing a package comprising a plurality of filters, each filter comprising information about a gesture and at least one parameter, each filter being complementary with at least one other filter in the package. The package may represent gesture filters for a particular genre. For example, genre packages for video games may include genres such as first-person shooter, action, driving, and sports.","As used herein, and in at least one embodiment, \u201cproviding a package\u201d may refer to allowing access to a programming language library file that corresponds to the filters in the package or allowing access to an application programming interface (API) to an application. The developer of the application may load the library file and then make method calls as appropriate. For instance, with a sports package there may be a corresponding sports package library file.","When included in the application, the application may then make calls that use the sports package according to the given API. Such API calls may include returning the value of a parameter for a filter, setting the value of a parameter for a filter, and correlating identification of a filter with triggering some part of the application, such as causing a user controlled tennis player to swing a tennis racket when the user makes the appropriate tennis racket swing gesture.","As described above, a gesture may comprise a wide variety of things. It may, for instance, be any of a crouch, a jump, a lean, an arm throw, a toss, a swing, a dodge, a kick, and a block. Likewise, a gesture may correspond to navigation of a user interface. For instance, a user may hold his hand with the fingers pointing up and the palm facing the 3D camera. He may then close his fingers towards the palm to make a first, and this could be a gesture that indicates that the focused window in a window-based user-interface computing environment should be closed.","As gestures may be used to indicate anything from that an avatar in an application should throw a punch to that a window in an application should be closed, a wide variety of applications, from video games to text editors may utilize gestures.","Complementary gesture filters\u2014either complementary as in those that are commonly used together, or complementary as in a change in a parameter of one will change a parameter of another\u2014may be grouped together into genre packages that are likely to be used by an application in that genre. These packages may be available or identified to an application, which may select at least one. The application may tune, or modify, the parameter(s) of a filter in a selected package to best fit the unique aspects of the application. When that parameter is tuned, a second, complementary parameter (in the inter-dependent sense) of either the filter or a second filter may also be tuned such that the parameters remain complementary.","The application-determined parameter may vary based on the context the application is in. To that end, an application may assign a plurality of values to an application-determined parameter for a filter, each value corresponding to a different context. As discussed supra, this context may be a cultural context or an environmental context.","Operation  depicts receiving an indication of assigning a value to a parameter of a first filter. An application-determined parameter may comprise any of a wide variety of characteristics of a filter, such as a body part, a volume of space, a velocity, a direction of movement, an angle, and a place where a movement occurs.","In an embodiment, the value of the application-determined parameter is determined by an end user of the application through making a gesture. For instance, an application may allow the user to train it, so that the user is able to specify what motions he believes a gesture should comprise. This may be beneficial to allow a user without good control over his motor skills to be able to link what motions he can make with a corresponding gesture. If this were not available, the user may become frustrated because he is unable to make his body move in the manner required by the application to produce the gesture.","In an embodiment where there exist complementary filters\u2014a plurality of filters that have inter-related parameters\u2014receiving from the application a value for an application-determined parameter of the first filter may include both setting the application-determined parameter of the first filter with the value, and setting a complementary application-determined parameter of a second, complementary filter based on the value of the parameter of the first filter. For example, one may decide that a user who throws a football in a certain manner is likely to also throw a baseball in a certain manner. So, where it is determined that a certain application-determined parameter of one filter, such as a velocity parameter on a filter for a football throw gesture, should be set in a particular manner, other complementary application-determined parameters, such as the velocity parameter on a baseball throw gesture, may be set based on how that first application-determined parameter is set.","This need not be the same value for a given application-determined parameter, or even the same type of application-determined parameter across filters. For instance, it could be that when a football throw must be made with a forward arm velocity of X m\/s, then a football catch must be made with the hands at least distance Y m away from the torso.","The value may be a threshold, such as arm velocity is greater than X. It may be an absolute, such as arm velocity equals X. There may be a fault tolerance, such as arm velocity equals within Y of X. It may also comprise a range, such as arm velocity is greater than or equal to X, but less than Z.","Operation  depicts assigning the value to the parameter of the first filter. Where an association between parameters and their values is stored in a database, this may comprise storing the value in the database along with an association with the parameter.","Operation  depicts assigning a second value to a second parameter of a second filter, the second value determined using the value assigned to the parameter of the first filter. As discussed above, the second value may relate to the first value in a variety of ways. Where the two parameters involve something substantially similar such as a threshold jump height, the second value may be equal to the first value. The second value and the first value may have a variety of other relationships, such as a proportional relationship, an inversely proportional relationship, a linear relationship, an exponential relationship, and a function that takes the value as an input.","In an embodiment where filters may inherit characteristics from each other, such as in an object-oriented implementation, the second filter may comprise a child of the first filter, with the first filter likewise being a parent to the second filter. Take for example, a \u201chand slap\u201d filter. This filter may serve as a parent to variations on hand slaps, such as the \u201chigh five,\u201d the \u201chigh ten\u201d and the \u201clow five.\u201d Where the \u201chand slap\u201d has a \u201chand movement distance threshold\u201d parameter, when the value to that parameter is set, the \u201chand movement distance threshold\u201d parameter for all child filters may be set with that same value.","Likewise, the complementary nature of two parameters may be due to one filter being stacked to be incorporated into another filter. One filter may be a steering filter, and that is stacked with other filters such as gear shift, accelerate and decelerate to create a driving filter. As the \u201cminimum steering angle threshold\u201d parameter of the steering filter is modified, the corresponding \u201cminimum steering angle threshold\u201d parameter of the driving filter may also be modified.","Operation  depicts the optional operation of receiving data comprising an image of a person, and when parsing filters to determine if the data matches a particular filter (and thus indicates a particular gesture), parsing the data for each filter in a selected package before parsing the data for a filter not in the package. Where an application selects a filter package for use, such as by including a library file for that filter package, it likely does so because those filters are to be frequently used by a user of the application. Further, filters in a filter package may be used in close succession, such as with run, jump, strafe, crouch and discharge firearm filters in a first-person shooter package. To this end, where a filter package has been identified as being used by an application, a system processing filters, such as the base filter engine described above, can likely reduce the processing resources required to process image data corresponding to user input by first processing the data for those filters comprising the selected filter package.","Operation  depicts the optional operation of receiving an indication of assigning a third value to the second parameter, and assigning the third value to the second parameter. A relationship between two parameters need not be bilateral. It may be that a change in the value affects the second value, but that a change in the second value does not affect the first value.","Operation  depicts the optional operation of assigning a fourth value to the parameter, the fourth value determined using the third value. It may also be that the relationship between the two parameters are bilateral. In this embodiment, a change in a value of the second parameter results in changing a value of the first parameter, as determined using the new value of the second parameter.","Operation  depicts the optional operation of receiving data comprising an image of a person; determining that the data matches the first filter of the package; and parsing the data for each other filter in the package that can be indicated by the user simultaneously with the first filter before parsing the data for a filter that cannot be indicated by the user simultaneously with the filter. In an embodiment, filters in a filter package may be used simultaneously, such as a simultaneous run filter and discharge firearm filter in a first-person shooter package. To this end, where a filter package has been identified as being used by an application, a system processing filters, such as the base recognizer engine discussed above, can likely reduce the processing resources required to process image data corresponding to user input by first processing the data for those filters comprising the filter package.","While the present disclosure has been described in connection with the preferred aspects, as illustrated in the various figures, it is understood that other similar aspects may be used or modifications and additions may be made to the described aspects for performing the same function of the present disclosure without deviating there from. Therefore, the present disclosure should not be limited to any single aspect, but rather construed in breadth and scope in accordance with the appended claims. For example, the various procedures described herein may be implemented with hardware or software, or a combination of both. Thus, the methods and apparatus of the disclosed embodiments, or certain aspects or portions thereof, may take the form of program code (i.e., instructions) embodied in tangible media, such as floppy diskettes, CD-ROMs, hard drives, or any other machine-readable storage medium. When the program code is loaded into and executed by a machine, such as a computer, the machine becomes an apparatus configured for practicing the disclosed embodiments. In addition to the specific implementations explicitly set forth herein, other aspects and implementations will be apparent to those skilled in the art from consideration of the specification disclosed herein. It is intended that the specification and illustrated implementations be considered as examples only."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The systems, methods, and computer readable media for gesture packages of complementary gestures in accordance with this specification are further described with reference to the accompanying drawings in which:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIGS. 1A and 1B"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 4A","FIG. 2"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 4B","FIG. 2"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 5A and 5B"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIGS. 6A","b":["6","6","6","6","502"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIGS. 7A","FIGS. 6A-E"],"b":["7","7","7","7"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
