---
title: Method for computing IO redistribution routing
abstract: A method of determining signal routing in an integrated circuit includes providing first coordinates of an input/output cell and second coordinates of an input/output pad to a parametric routing module. The parametric routing module receives at least one wire path parameter. The parametric routing module uses the at least one connection path parameter to determine a physical dimension of a wire path between the first coordinates and the second coordinates.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08627256&OS=08627256&RS=08627256
owner: LSI Corporation
number: 08627256
owner_city: Milpitas
owner_country: US
publication_date: 20110425
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["COPYRIGHT NOTICE","REFERENCE TO A COMPUTER PROGRAM","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all copyright rights whatsoever.","A computer program listing appendix is filed herewith submitted on a single compact disc and a copy of the compact disk. The compact disk, and its duplicate copy, includes a single Adobe Acrobat file entitled \u201cAppendix A.txt\u201d, created on Mar. 9, 2011, which is about 27,179 bytes in, size. The file and the duplicate copy are identical. The file includes portions of illustrative computer code implementing one embodiment of the disclosure. The contents of this file are incorporated herein by reference. The contents of Appendix A are protected by copyright, subject to the copyright notice above, \u00a9LSI Corporation, unpublished work.","This application is directed, in general, to systems and methods for electronic design automation.","An integrated circuit (IC) typically includes numerous connections between electrical components. These connections are often designed with the assistance of an electronic design automation (EDA) tool. The EDA tool typically includes software instructions operating on an engineering workstation to provide visualization of the IC design. A design engineer manipulates modular design cells from a cell library to build up a design database. An autorouter within the EDA tool determines the connection paths between the design cells. When the design layout is complete, the layout data are used in a pattern generation (PG) step that generates pattern data suitable to produce a set of pattern masks used in photolithographic steps of an IC manufacturing process.","Among the connections made on the IC are input\/output redistribution connections formed between IO cells and corresponding wirebond pads and\/or bump pads, collectively referred to as IO pads. The redistribution connections are typically formed in a redistribution layer. Signal routing within the redistribution layer is often constrained by factors including the congestion of the connection and the mapping of IO signals to the IO pads. In many cases these constraints cause the routing of the IO connections to be deficient in some way, such as being is undesirably circuitous. In some cases the autorouter may even fail to find a path between an IO cell and its corresponding IO pad.","Such cases may require manual intervention by a design engineer, consuming valuable engineering resources and increasing the design cost. Improved methods of forming connections within the redistribution layer are needed to reduce these costs.","One aspect provides a method of determining interconnect routing in an integrated circuit. The method includes providing first coordinates of an input\/output cell and second coordinates of an input\/output pad to a parametric routing module. The parametric routing module receives at least one wire path parameter. The parametric routing module uses the at least one path parameter to determine a physical dimension of an interconnect between the first coordinates and the second coordinates.","Another aspect provides an integrated circuit input\/output signal routing system. The signal routing system includes a functional design module and a parametric routing module. The parametric routing module is configured to receive from the functional design module first coordinates of an input\/output cell, second coordinates of an input\/output pad, and at least one wire path parameter. The parametric routing module is further configured to use the at least one path parameter to determine a physical dimension of an interconnect between the input\/output cell and the input\/output pad.","Another aspect provides a computer program product. The computer program product includes a non-transitory computer readable medium having a series of operating instructions embodied therein. The series of operating instructions is adapted to be executed to implement a method of determining signal routing in an integrated circuit. The method includes providing first coordinates of an input\/output cell and second coordinates of an input\/output pad to a parametric routing module. At least one wire path parameter is provided to the parametric routing module. The parametric routing module uses the at least one path parameter to determine a physical dimension of an interconnect between the first coordinates and the second coordinates.","Yet another aspect provides a computer program product. The computer program product includes a non-transitory computer readable medium having a series of operating instructions embodied therein. The series of operating instructions is adapted to be executed to implement a method of determining signal routing in an integrated circuit. The method includes receiving first coordinates of an input\/output cell and second coordinates of an input\/output pad into a parametric routing module. The parametric routing module receives at least one wire path parameter. The at least one path parameter is used to determine a physical dimension of an interconnect between the first coordinates and the second coordinates.","Embodiments of methods and systems described herein provide an innovative technique to determine the redistribution routing that substantially reduces manual intervention. Embodiments described herein provide methods and systems for computing a redistribution route based upon layout-specific and\/or technology-specific parameters. Complex routes from IO cells to IO pads can be sequentially developed by adding additional routing to previously defined route descriptions through an inheritance mechanism. Moreover, the route of a desired IO path may be adjusted by overriding globally defined variables with locally defined variables.","In various embodiments a user selects from a library of route types and assigns the route type as a property to a particular IO cell and\/or pad in the design. These route types may refer to a description of the routes in a text file format that includes a layer, a width, a net name and at least two points. The route may include parameter values based upon the actual layout or user defined values. A physical path is created based on the route description to be included in the layout.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1","b":["110","110","120","130","120","110","120","140","140","120","110","130","110"]},"The IC  may be represented as a database of geometrical elements and associated route designators. For example, all the geometrical elements of an interconnect (also referred to herein as a wire) between two electrical components of the IC  may be logically associated by a route name to support design and error checking of the IC  design.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 2A","b":["210","220","230","210","220","240","210","220","210","220","230","240","240"]},"Points P, Pand Pare respectively associated with the IO region , the IO cell , and the IO pad , e.g. at the geometrical centers thereof. Pmay be regarded as the origin of the local frame of reference of the IO region . The wire path  is a single segment between Pand P.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2B","b":["210","250","250","250","240","220","230","240","250","240","250"],"sub":["4","1 ","3","2 ","3","3 ","0","3 ","0"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 2C","b":["210","250","240","250","240","240","210"],"sub":["2 ","3 ","3 ","2 ","4","1 ","6","6 ","1 ","4","5"]},"Conventional EDA tools sometimes fail to adequately autoroute a wire path between the IO cell  and the IO pad . For instance, sometimes a conventional EDA tool fails to provide an efficient wire path when an obstruction such as the reference object  is present. Methods and systems of the disclosure provide a designer with the ability to specify one or more wire path templates that may be specifically rendered using one or more wire path parameters, referred to herein briefly as path parameters. The path parameters may be determined by the designer based on desired properties of the rendered interconnect, such as length, width, or resistance. A parametric routing tool  described below may render the wire path based on the provided parameters. The resulting interconnects in many cases require less manual review and adjustment prior to generating a mask set for IC fabrication.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 3","b":["300","110","300","310","320","330","340","350","300","110"]},"In the functional design layout step , the functional circuitry  may be rendered in a design database using a functional design module  described further below. In the IO pad layout step , the locations of the IO pads  relative to the global coordinate space of the IC  are determined. In this step properties of the wire path  between each of the IO cells  and one or more of the IO pads  may be determined. For example, a template of the wire path  may be selected, and parameters appropriate to that template may be specified. Various aspects of the wire path parameters are described in detail below.","In the parameter routing step  the locations are determined of physical segments of an interconnect formed along the wire path . The wire path  and characteristics of the rendered interconnect, such as segment lengths and path width, may be determined by employing the parameters determined in the layout step . The wire path  is determined by program instructions in a parametric routing module , as described further below. The parametric routing step produces a list of geometrical elements that complete the electrical connection between the IO cell  and the IO pad  in a manner consistent with the supplied parameter(s).","In the database merge step  the geometrical elements are merged with the functional circuitry database. The combined database may be used in the tapeout step  to fabricate one or more masks of the mask set associated with the IC .",{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 4","b":["330","410"]},"In a step  a path description file is defined. The path description file may include a description of physical aspects of a wire path in terms of one or more parameters names. The path description file is described in additional detail below.","In a step  the parametric routing module  is invoked. The parametric routing module  may substitute parameter values specified in the IO pad layout step  for the one or more parameter names. Thus, for example, a wire path segment width may be defined in terms of a resistance parameter value. The width may be calculated based on the resistance using well-known relationships. A wire path segment may then be determined using the calculated width. This aspect is discussed in further detail below.","In a step  the parametric routing module  provides the geometrical definition of the wire path  to the functional design module . The parametric routing step  may be repeated for each IO region  for which parametric routing is desired.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 5","b":["500","500","140","130","500","500","500","500","510","520","500","510","520"]},"The functional design module  executes instructions to design the functional circuitry . The functional design module  receives design cells from a cell library  and provides interconnections between the design cells. The functional design module  derives cell tags from the cell library  that identify the IO cells  and the IO pads , e.g. using an appropriately configured application programming interface (API). The functional design module  receives data from and provides data to a net list  that describes the interconnections between the design cells. The description may include, e.g. name tags that uniquely identify each signal net that connects two or more ports of a number of design cells. Among the signals nets are those that include connections between each IO cell  and one or more of the IO pads . Thus the logical association between the IO cells  and the IO pads  may be determined.","The functional design module  also receives data from an IO pad property list . The property list  includes parameters that describe aspects of the route taken by each wire path . Such parameters may include without limitation the name of the template of the wire path , the length and width of one or more segments of the wire path , the spacing of one or more segments from a routing obstruction, or a resistance of the wire path . The property list  may be created by a design engineer using any appropriate template or text editor, e.g. Microsoft Excel\u2122.","The functional design module  invokes the parametric routing module , e.g. by another API call. The API call includes identification of a path description file  such as by file name or pointer. The path description file  may include one or more variables defined for local use by the parametric routing module . The path description file  includes a number of metal definitions or \u201cmetalDef\u201d lines that specify the characteristics of a named template for the wire path . The parametric routing module  uses the parameters provided by the property list  to determine the specific characteristics of the wire path template using the metalDef lines of the path description file . The parametric routing module  then returns the geometric elements of the wire paths  to the functional design module  to be integrated with the database of geometrical elements that describe the functional circuitry .","The above-described apparatuses and methods may be embodied in or performed by various digital data processors or computers, wherein the computers are programmed or store executable programs of sequences of software instructions to perform one or more of the steps of the methods e.g., steps of the methods or processes of , , and\/or . The software instructions of such programs may represent algorithms and be encoded in machine-executable form on conventional digital data storage media, e.g., magnetic or optical disks, random-access memory (RAM), magnetic hard disks, flash memories, and\/or read-only memory (ROM), to enable various types of digital data processors or computers to perform one, multiple or all of the steps of one or more of the above-described methods. Accordingly, computer storage products with a computer-readable medium that have program code thereon for performing various computer-implemented operations that embody the tools or carry out the steps of the methods set forth herein may be employed. The media and program code may be specially designed and constructed for the purposes of the disclosure, or they may be of the kind well known and available to those having skill in the computer software arts. An apparatus, such as an EDA tool, may be designed to include the necessary circuitry or series of operating instructions to perform each step of the disclosed methods.","Turning to , illustrated is a block diagram of one embodiment of the path description file  that may be used in various embodiments to specify characteristics of the wire path . In the illustrated embodiment the path description file  includes a variable definition block  and a path definition block .","Table 1 below illustrates one embodiment of a variable definition block . This embodiment includes nine variable definitions. Each variable definition begins with a keyword, e.g. \u201cwireVal\u201d, that may signal a parsing routine of the parametric routing module  that the contents of the line following the keyword describes a variable definition. A variable may be equated with a direct value. For example, a first variable definition line defines a variable pitch as equal to 180.0, e.g. 180 \u03bcm. A variable may also be defined indirectly, e.g. in terms of another variable. For example, a second variable definition line defines a variable hpitch as one half the value of pitch. In some cases a variable specifies a value of a metal level in an IC design, e.g. topLayer is a metal level . A variable gWidth may define a maximum width of the wire path  before a gap is added to the wire path , e.g. to reduce dishing from chemical-mechanical polishing. A variable gGap may define a width of the gap, when present. The examples of variables provided by Table 1 are not exhaustive. Those skilled in the pertinent art will appreciate that other variables may be useful in determining the characteristics of the wire path .",{"@attributes":{"id":"p-0047","num":"0046"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"char"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"wireVal pitch","180.0"]},{"entry":[{},"wireVal hpitch","$pitch\/2"]},{"entry":[{},"wireVal bSize","102.1"]},{"entry":[{},"wireVal hbSize","0.5 * $bSize"]},{"entry":[{},"wireVal topLayer","74"]},{"entry":[{},"wireVal subLayer","37"]},{"entry":[{},"wireVal nxtLayer","36"]},{"entry":[{},"wireVal gWidth","18.0"]},{"entry":[{},"wireVal gGap","8.0"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The path definition block  may include a number of path definitions, illustratively path definitions , , . Table 2 below includes several illustrative path definitions, including examples using a keyword metalDef and an example using a keyword routeLike.",{"@attributes":{"id":"p-0049","num":"0048"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"metalDef WXF $topLayer {{$gwidth **}} {{xy} {xy} ... {xy}}"},{"entry":"metalDef WXF $topLayer {{$gwidth **}} {{xy} {* y} {x*}}"},{"entry":"routeLike WXE WXF"},{"entry":"metalDef WXF $topLayer {{$gwidth *} {$gGap gap} \\"},{"entry":"\u2003{$gWidth *}} {{\u2212$gOffsetb 0.0} {\u22121.0*$pitch+0.5*$gWidth 0.0}}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 7","b":["630","630","710","720","730","740","720","730","740"]},"The template name field  may include any convenient name for associating a particular wire path template with an IO pad designated to use that template. For example, in the first line of Table 2 the template name is \u201cWXF\u201d. The layer field  specifies the layer of the defined segment of the wire is $topLayer, e.g.  as specified in Table 1. This layer number corresponds to a particular layer of the design database of the IC . For example, layer  may designate a top-level metal layer. The layer can be given in a conditional form, e.g. $hLayer:$vLayer, wherein the layer number is dependent on whether the segment of the path is horizontal or vertical.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 8A","b":["730","730","810","820","830","810"]},"The subfield  includes a width, e.g. $gwidth in Table 2. Referring to Table 1, $gwidth is specified as 18.0 \u03bcm. Following the width is a net name, e.g. net_. In various cases, the net name may be the input\/output of the IO cells port, or may be a power or ground supply name. An optional flag may replace the net name for special purposes or overriding default operation of the parametric routing module .","For example, in Table 2 \u201c*\u201d or \u201c**\u201d may follow the composition field value. These flags may direct the parametric routing module  to perform certain actions related to routing the wire path . In one example, a \u201c*\u201d flag may direct the parametric routing module  to assign the signal name associated with the IO pad  to the net name of the wire path  segments defined by the metalDef line.","In another example, a \u201c**\u201d flag may direct the parametric routing module  to assign the signal name of the path to the net name, and may additionally prevent subsequent operations from occurring on the path. For instance this flag may be used to prevent the parametric routing module  from tapping into the wire path , e.g. for power or ground, when doing so would cause layout congestion, or when a power or ground wire path is intended for shielding.","The subfield , if present, includes a width value width_, and a flag \u201cgap\u201d that designates the current portion of the segment is a gap between parallel metal lines. The subfield  includes a width value width_ and a net name net_. Typically net_ will be the same as net_. In some cases net_\u2260net_, such as when the adjacent parallel metal line is a different power polarity such as when forming a shield. The two metal portions defined by the subfields ,  operate as a single composite segment between the IO pad  and the IO cell .  illustrates a composite segment that includes two metal portions and a gap therebetween that results from the composition illustrated in .","Returning to  the centerline points field  may include one or more coordinates, e.g. x-y coordinate pairs, that specify the centerline of the wire path . In some cases a wire path only include a single straight segment between the pad  and the IO cell . In other cases multiple segments are specified.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 9","FIG. 2B"],"b":["740","240","910","920","920","930","240","240"],"sub":["1 ","2","2 ","3"]},"As mentioned previously Table 2 includes a keyword routeLike. The routeLike keyword implements a mechanism referred to herein as \u201cinheritance\u201d. The routeLike keyword is followed by two template names, WXE and WXF. The routeLike keyword directs the parametric routing module  to create a new segment having the first following template name, e.g. WXE, thus overwriting any previous template definition named WXE. The new segment inherits the characteristics of the segment having the second following template name, e.g. WXF, up to the point of the routeLike keyword. Thus, WXE is defined including all the segments of the two metalDef lines preceding the routeLike line. After the template name WXE is defined, it may be used independently of the WXF template name. Additional segments may be added to the WXF template name via a third metalDef line without affecting the WXE template name.","A keyword inHerit may support \u201cmultiple inheritance\u201d. In this case, characteristics of a template definition may be added to a previously defined template definition without overwriting the previously defined definition. Continuing the previous example, after defining characteristics of the template definition WXE, characteristics of another template definition WXG may be added to WXE by a definition line \u201cinHerit WXE WXG\u201d.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIGS. 10-12","FIG. 10A"],"b":["1010","1010","1020","10","1020","1020","10201","1020","1020"],"i":["t","b","r"]},"A single instance of the IO region  is illustrated in . The parametric routing module  may rotate the frame of reference of the IO regions ,  and so that paths definitions may be specified in terms of a common frame of reference, e.g. that of the IO region . The IO region  includes an IO path  including three segments. A first segment is between points Pand P, a second segment is between points Pand P, and a third segment is between points Pand P. The point Pmay be selected as the IO region  origin for convenience.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 11A","b":["1020","1110","1120","1110","1120","520","520"],"sub":["1 ","4","1 ","4 ","1 ","4 ","1 ","4 ","1","2","1 ","2 ","1 ","4","1 ","2 ","3","3 ","4 ","4","2 ","3 ","1 ","2 ","1 ","2"]},"As a nonlimiting example, Dmay be about 100 \u03bcm. In the absence of any obstructions, a Dmay be about equal to D. In some cases Dmay computed dynamically to be 0.5*D, so that Dis automatically updated when Pand\/or Pchanges. In other cases the distance Dand\/or the distance Dmay be specified by a global variable, e.g. by the property list . Thus, the configuration of  may be a default configuration of the path  when the IO pad  and the IO cell  are arranged as illustrated.","In some cases, it may be desirable to customize the IO path  in some specific instances of the IO region . An entry may be placed in the property list  to specify a local value of a variable, e.g. offset, that determines D. The local value may be associated with the signal name of the IO path  for the customized instance of the IO region . Thus, when the parametric routing module  determines the geometry of the path  for the customized instance, it may render a configuration of the IO path  as illustrated in , in which Dand Dhave a customized value. In various embodiments Dis determined as a function of Dso only one parameter need be specified to result in the desired configuration. Thus, e.g. D=D\u2212offset.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 12","FIG. 12"],"b":["500","1210","1220","1030","1210","1120","1220"],"sub":["4","1 ","5 "]},"In the illustrated case, the relevant concern from a design perspective may be the distance between metal features of the manufactured IC. Thus an offset gapmay represent a minimum desired distance between the IO pad  and the IO path  segment between the points Pand P. The value of gapmay be expressed as a global or local variable value. The positions of centerline points Pand Pmay be expressed in a metalDef line of the path description file  in terms of rv, R, gap, and a width Wof the IO path . The parametric routing module  may then compute the positions of the geometric elements of the IO path  to maintain the desired distance between the IO pad  and the P-Psegment. Those skilled in the pertinent art will appreciate that the principles illustrated by this example may be applied to various configurations of the IO path  and other types of obstructions.","Optionally the calling program may be configured to maintain a list of parametric routes whose positions are dependent on the location of a reference object such as the IO pad . When the location of the reference object changes, such as by manual repositioning by an operator, the calling program may update all the parametric routes associated with that reference object such that relevant design constraints are maintained.","In some embodiments the parametric routing tool  is configured to present a graphical representation of the computed wire path  to a user. If not satisfied with the resulting path, the user may dynamically change the value of one or more parameter values to produce a desired routing. The parameter entry may be by graphic user interface (GUI) using well-known techniques.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIGS. 13A and 13B","b":["1300","520","1300","500","1300","1300"]},"In a step  the method  is invoked, e.g. by an API call from the functional design module  to the parametric routing module . The parametric routing module  may receive via the API call coordinates of various features of an IO region, e.g. the center point Pof the IO cell , the center point Pof the IO pad  and the center point Pof the reference object , and a pointer to a global array of route description variable names.","In a step  the parametric routing module  maps the received coordinates to a local coordinate system of an invariant frame of reference of the IO region. The mapping may, e.g. adjust the coordinates of the various features taking into account rotation of the IO region from a side location of the IC . The mapping may also include a step  in which the coordinates of the IO region features are translated such that the center of the IO cell  is the origin of the IO region. In other words, the locations of the features other than the IO cell  are determined relative to the center of the IO cell .","In a step  the parametric routing module  determines the horizontal (x) and vertical (y) directions of the pad  relative to the IO cell . For example, if the IO pad  is below and to the left of the IO cell  within the local coordinate system of the IO region, then the relative direction of the IO pad  to the IO cell  may be expressed as (\u22121,\u22121). This determination may be used for computational convenience in some of the steps that follow.","In a decisional step  the parametric routing module  tests to see if each of the IO pads  of the IC  has been mapped to an IO cell . If not then the method  returns to the step . When all the IO pads  have been mapped, the method  advances to a step .","In the step  the parametric routing module  reads the path description file . Each line of the path description file may be stored, e.g. in an array, for later parsing. The path description file  includes one or more path descriptions, and may include one or variable names that define values used by the path descriptions.","In a step  the parametric routing module  unpacks the route description variable names within the global array of variable names. For example, the route description variable names may be read into a local array that may be indexed using a local indexing variable.","In a step  the parametric routing module  overrides any route descriptions variable names contained by the global array that are associated with a path description in the path description file.","In a step  the parametric routing module  begins parsing a path definition line of the path description file. The first field of the path definition line may include one of several keywords, e.g. metalDef, that signals a program instruction implementing the method  that the path definition line has been encountered.","Referring to , in steps , , ,  the parametric routing module  parses the first path description. In the step  the path variable name is recovered. In the step  the description of the width of the wire path  is recovered and the width is calculated. In the step  the centerline points are decoded and stored. In the step  the first segment of the wire path  is determined.","In a decisional step  the parametric routing module  determines if an additional centerline point is provided by the path description. If additional points are specified, the method  advances to a step  in which the additional point is concatenated to the wire path . Control returns to the step , where the parametric routing module  again determines if an additional centerline point remains to be added.","When no additional centerline points remain, the parametric routing module  advances to a step . In the step  wire path  length is compared to a maximum allowed length. If the wire path  length exceeds the maximum allowed length the method  advances to an error state  and the parametric routing tool  may notify the user of the error condition for correction.","If the length of the wire path  does not exceed the allowed maximum, the parametric routing module  executes a step  in which it determines whether the wire path  includes a repeating pattern across its width. A repeating pattern may include, e.g. a combination of metal segments and spaces (slots) such as to reduce dishing from CMP.","In a step  the parametric routing module  determines the total width of the wire path , including any spaces. In a step  all the geometrical components of the wire path  are determined, including all aspects of length, width and any spaces.","In a decisional step  the parametric routing module  determines if additional path definitions remain to be processed. If so the parametric routing module  reads the next path definition and the method  returns to the step . If no additional path definitions remain, then the method returns control to the functional routing module  via a step  to the calling EDA instructions.","Those skilled in the art to which this application relates will appreciate that other and further additions, deletions, substitutions and modifications may be made to the described embodiments."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION","p":["Reference is now made to the following descriptions taken in conjunction with the accompanying drawings, in which:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 2A-2C"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 6","FIG. 1"]},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIGS. 7","FIG. 6"],"b":["8","8","9"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIGS. 10A and 10B","FIG. 5"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIGS. 11A","FIG. 5"],"b":["11","12"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIGS. 13A and 13B"}]},"DETDESC":[{},{}]}
