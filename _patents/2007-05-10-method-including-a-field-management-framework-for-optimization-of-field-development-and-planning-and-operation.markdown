---
title: Method including a field management framework for optimization of field development and planning and operation
abstract: A method of performing Field Management is disclosed, a Field Management system including a portable Field Management (FM) framework being initially decoupled from any simulators, one or more adaptors operatively connected to the FM framework, and one or more open interfaces associated, respectively, with the one or more adaptors, the open interfaces each having interface characteristics, the method comprising: modifying one or more of the simulators such that the simulators adhere to the interface characteristics of the open interfaces of the one or more adaptors which are operatively connected to the FM framework; subsequently coupling the one or more modified simulators to the one or more open interfaces of the one or more adaptors of the FM framework in response to the modifying step; and performing the Field Management on the condition that the one or more modified simulators are coupled to the one or more open interfaces of the one or more adaptors of the FM framework. The FM framework is also flexible in that it allows control over how the FM Framework logic is executed in order to accommodate real field situations that require such control.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08620715&OS=08620715&RS=08620715
owner: Schlumberger Technology Corporation
number: 08620715
owner_city: Houston
owner_country: US
publication_date: 20070510
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DESCRIPTION","DETAILED DESCRIPTION","Example 1","Example 2","EXAMPLE APPLICATIONS","Example I","Surface Facility Network Coupling","Example II","Field Case","Example III","Demonstration of Extensibility","REFERENCES"],"p":["This is a Utility Application of: (1) prior pending Provisional Application Ser. No. 60\/812,682 filed Jun. 10, 2006, and (2) prior pending Provisional Application Ser. No. 60\/817,158 filed Jun. 28, 2006","The subject matter disclosed in this specification relates to a method for reservoir Field Management, including a corresponding system and program storage device and computer program, adapted for integrated optimization of reservoir field development, planning, and operation. The method for Field Management further includes a Field Management Framework (hereinafter referred to as an \u2018FM Framework\u2019) that is portable, flexible, and extensible, the FM Framework adapted to be completely decoupled from surface and subsurface simulators and further adapted to be subsequently coupled to the surface and subsurface simulators via an FM Interface of an adaptor of the FM Framework for performing Field Management (FM) functions.","Traditionally, the Field Management (FM) functionality has been distributed among subsurface reservoir simulator(s), surface facility network simulator(s), and the \u2018controller\u2019 that couples the reservoir simulators to the network simulators. Furthermore, traditional Field Management tools lack the flexibility and extensibility needed to handle different oil field production strategies. This specification discloses a portable, flexible, and extensible Field Management (FM) Framework that is completely decoupled from and can be subsequently coupled to the surface facility network simulators and the subsurface reservoir simulators via an interface of an adaptor of the FM Framework. The FM Framework provides an innovative approach for portability, extensibility, and flexibility thereby enabling unlimited horizons for advanced Field Management (FM) users.","One aspect of the present invention involves a method of Field Management in a Field Management system, comprising: (a) checking if execution of a Field Management (FM) strategy is needed; and (b) executing the Field Management strategy.","Another aspect of the present invention involves a method of performing Field Management, a Field Management system including a portable Field Management framework initially decoupled from any simulators, one or more adaptors operatively connected to the Field Management framework, and one or more open interfaces associated, respectively, with the one or more adaptors, the open interfaces each having interface characteristics, the method comprising: modifying one or more of the simulators such that the simulators adhere to the interface characteristics of the open interfaces of the one or more adaptors which are operatively connected to the Field Management framework; subsequently coupling the one or more modified simulators to the one or more open interfaces of the one or more adaptors of the Field Management framework in response to the modifying step; and performing the Field Management on the condition that the one or more modified simulators are coupled to the one or more open interfaces of the one or more adaptors of the Field Management framework.","Another aspect of the present invention involves a program storage device readable by a machine, tangibly embodying a set of instructions executable by the machine, to perform method steps for performing Field Management, a Field Management system including a portable Field Management framework initially decoupled from any simulators, one or more adaptors operatively connected to the Field Management framework, and one or more open interfaces associated, respectively, with the one or more adaptors, the open interfaces each having interface characteristics, the method comprising: modifying one or more of the simulators such that the simulators adhere to the interface characteristics of the open interfaces of the one or more adaptors which are operatively connected to the Field Management framework; subsequently coupling the one or more modified simulators to the one or more open interfaces of the one or more adaptors of the Field Management framework in response to the modifying step; and performing the Field Management on the condition that the one or more modified simulators are coupled to the one or more open interfaces of the one or more adaptors of the Field Management framework.","Another aspect of the present invention involves a computer program adapted to be executed by a processor, the computer program, when executed by the processor, conducting a process for performing Field Management, a Field Management system including a portable Field Management framework initially decoupled from any simulators, one or more adaptors operatively connected to the Field Management framework, and one or more open interfaces associated, respectively, with the one or more adaptors, the open interfaces each having interface characteristics, the process comprising: modifying one or more of the simulators such that the simulators adhere to the interface characteristics of the open interfaces of the one or more adaptors which are operatively connected to the Field Management framework; subsequently coupling the one or more modified simulators to the one or more open interfaces of the one or more adaptors of the Field Management framework in response to the modifying step; and performing the Field Management on the condition that the one or more modified simulators are coupled to the one or more open interfaces of the one or more adaptors of the Field Management framework.","Another aspect of the present invention involves a program storage device readable by a machine, tangibly embodying a set of instructions executable by the machine, to perform method steps of Field Management in a Field Management system, the method steps comprising: (a) checking if execution of a Field Management (FM) strategy is needed; and (b) executing the Field Management strategy.","Further scope of applicability will become apparent from the detailed description presented hereinafter. It should be understood, however, that the detailed description and the specific examples set forth below are given by way of illustration only, since various changes and modifications within the spirit and scope of the \u2018FM Framework\u2019, as described and claimed in this specification, will become obvious to one skilled in the art from a reading of the following detailed description.","Field Management (FM) is a simulation workflow through which predictive scenarios are carried out in order to assist in reservoir field development plans, surface facility design and de-bottlenecking, uncertainty and sensitivity analysis, and instantaneous or lifetime revenue optimization from a hydrocarbon reservoir\/field. The function of \u2018Field Management\u2019 has been distributed among reservoir simulators and a controller that couples the reservoir simulators to surface facility network simulators. As a consequence of the relative isolation of these different simulators, the \u2018Field Management\u2019 plans and scenarios are generally tightly integrated to the specific simulators used in the workflow. However, the \u2018Field Management\u2019 function is independent of the brand of the simulators, the details of the physics being modeled, and the mathematical approaches used in these simulators. As a result, an independent and unified \u2018FM Framework\u2019 is needed, and that independent and unified \u2018FM Framework\u2019 is disclosed in this specification. The \u2018FM Framework\u2019 disclosed in this specification is completely decoupled from surface facility network simulators and subsurface reservoir simulators. However, the \u2018FM Framework\u2019 includes one or more adaptors, each adaptor having a corresponding \u2018open interface\u2019. As a result, one or more of the surface or subsurface simulators, and one or more external Field Management algorithms, can be operatively coupled to the \u2018FM Framework\u2019 via the \u2018open interface\u2019 of an adaptor of the \u2018FM Framework\u2019 for the purpose of performing Field Management functions. In this specification, the Field Management (FM) function is performed by the \u2018FM Framework\u2019.","Referring to , a workstation, personal computer, or other computer system  is illustrated which is adapted for storing the FM Framework, the adaptors of the FM Framework, the subsurface reservoir simulators, and the surface facility network simulators, wherein the simulators are adapted to be coupled to the FM Framework via the open interface of the adaptors of the FM Framework. The computer system  of  includes a Processor operatively connected to a system bus , a memory or other program storage device operatively connected to the system bus , and a recorder or display device operatively connected to the system bus . The computer system  is responsive to a set of \u2018input data\u2019  which will be discussed in greater detail later in this specification. The memory or other program storage device stores the FM Framework  adapted for practicing the Field Management (FM) function, the adaptors  and  of the FM Framework , the subsurface reservoir simulator(s) , and the surface facility network simulator(s) , wherein the simulators  and  are adapted to be coupled to the FM Framework  via the open interfaces  and  of the adaptors  and  of the FM Framework . The \u2018FM Framework\u2019  including its adaptors  and  and their respective open interfaces  an  and the simulators  and  (hereinafter termed \u2018software\u2019), which are stored in the memory of , can be initially stored on a Hard Disk or CD-Rom, where the Hard Disk or CD-Rom is also a \u2018program storage device\u2019. The CD-Rom can be inserted into the computer system , and the above referenced \u2018software\u2019 can be loaded from the CD-Rom and into the memory\/program storage device of the computer system  of . The Processor will execute the \u2018software\u2019 (including the simulators  and  and the FM Framework  of ) that is stored in memory of  in response to the \u2018input data\u2019 ; and, responsive thereto, the Processor will generate an \u2018output display\u2019 that is recorded or displayed on the Recorder or Display device of . The \u2018output display\u2019, which is recorded or displayed on the Recorder or Display device of , is used by experienced geophysicists to predict the existence of oil and\/or gas and\/or other hydrocarbons that may reside in an Earth formation, similar to the Earth formation of . That oil and\/or gas or other hydrocarbons may be extracted from the Earth formation using the drilling rig illustrated in . The computer system  of  may be a personal computer (PC), a workstation, a microprocessor, or a mainframe. Examples of possible workstations include a Silicon Graphics Indigo  workstation or a Sun SPARC workstation or a Sun ULTRA workstation or a Sun BLADE workstation. The memory or program storage device (including the above referenced Hard Disk or CD-Rom) is a \u2018computer readable medium\u2019 or a \u2018program storage device\u2019 which is readable by a machine, such as the processor . The processor may be, for example, a microprocessor, microcontroller, or a mainframe or workstation processor. The memory or program storage device , which stores the above referenced \u201csoftware\u201d, may be, for example, a hard disk, ROM, CD-ROM, DRAM, or other RAM, flash memory, magnetic storage, optical storage, registers, or other volatile and\/or non-volatile memory.","The method steps of \u2018Field Management (FM)\u2019 that are practiced by the \u2018FM Framework\u2019  of  include or involve: (1) \u2018Strategy\u2019 which involves encapsulating a list of instructions and an optional balancing action; one might construct several strategies to be executed at different times of a simulation run; only one strategy is active at one time, (2) \u2018Instruction\u2019 which ties a list of actions to a triggering-criterion; \u2018Actions\u2019 are executed in the attempt to meet the instruction's success-criterion (i.e. desired well\/group\/field operating condition), and (3) \u2018Action\u2019 which encapsulates commands resulting in modifications of one or more \u2018flow-entities\u2019. There are two categories of \u2018Actions\u2019: (3a) a \u2018Topology Modifying Action\u2019 which modifies the state of \u2018flow-entities\u2019 (e.g. open a well, close a completion interval) or changes \u2018boundary conditions\u2019 (e.g. add a new flow rate constraint to a well), and (3b) \u2018Balancing Action\u2019 which allocates \u2018rates\u2019 (e.g. by optimization, surface-network balancing, or heuristic group control) to existing \u2018flow-entities\u2019 without modifying any of the flow-entities' states.","Referring to , a \u2018Field Management\u2019 method or function, which is practiced by the \u2018FM Framework\u2019  of , includes the step of: executing, at a prescribed frequency, a \u2018Field Management Strategy\u2019. The method steps associated with the aforementioned \u2018Field Management Strategy\u2019 are illustrated in . As a result,  illustrates the method steps associated with a \u2018Field Management Strategy\u2019 which is associated with a \u2018Field Management function\u2019 which is further associated with the aforementioned \u2018FM Framework\u2019  of .","In , the steps associated with a \u2018Field Management (FM) Strategy\u2019 corresponding to a method for \u2018Field Management\u2019 associated with the \u2018FM Framework\u2019  of  comprise: determining a frequency of execution of the FM Strategy and checking if execution of a Field Management (FM) strategy is needed, step  in . If execution of the FM strategy is needed in response to the checking step, checking if there is any balancing action in the strategy. If there is a balancing action, execute the balancing action, step  in . Then, determine if there is any instruction in the FM strategy's list of instructions, step  of . If there is an instruction in the FM strategy's list of instructions, determine if a triggering criterion of the instruction is met, step  of . If the triggering criterion of the instruction is met, determine if a success criterion of the instruction is met, step  of . If the success criterion of the instruction is not met, determine if there are any actions in the instruction's list of actions, step  of . If there are actions in the instruction's list of actions, executing the actions, step  of , a Field Management Strategy being executed when the actions are executed. In response to the step of executing the actions, determine if the actions modified a topology in a predetermined manner such that balancing (i.e., executing the balancing action) is required, step  of . If the balancing is required, execute a balancing action, step  of .","The \u2018FM Framework\u2019  of  exhibits the following properties:","The \u2018FM Framework\u2019  is \u2018Portable\u2019;","The \u2018FM Framework\u2019  is \u2018Flexible\u2019; and","The \u2018FM Framework\u2019  is \u2018Extensible\u2019.","Each of these properties of \u2018Portability\u2019 and \u2018Flexibility\u2019 and \u2018Extensibility\u2019, which are associated with the \u2018FM Framework\u2019  of , will be discussed in the following paragraphs with reference to  of the drawings.","The Portability of the FM Framework ","The \u2018Portability\u2019 of the \u2018FM Framework\u2019  can be explained as follows. The \u2018FM Framework\u2019  has a clearly defined interface for simulators (surface and subsurface) and external FM algorithms. Any black-box simulator may become part of the Field Management (FM) system by simply adhering to the FM adaptor interface. The FM adaptor interface helps decouple mathematical modeling details from reservoir engineering concepts. This means that the Field Management (FM) strategies remain unchanged when the details of the underlying mathematical model changes.","Refer to , , , and . In connection with , the \u2018FM framework\u2019  of  is shown in greater detail in . In , the open interface , , , of the adaptors , , , , that are used to interface different surface network simulators , and subsurface reservoir simulators -to the FM Framework , is illustrated in . In connection with , the published structure details of the open interface , associated with the adaptors , of the \u2018FMReservoirMgr\u2019 node of the FM Framework  of  are illustrated in . In connection with , the published structure details of the open interface , associated with the adaptors , of the \u2018NetworkMgr\u2019 node of the FM Framework  of  are illustrated in . In connection with , the  illustrates the concept that the underlying representation of a completion interval might change from one reservoir simulation model to another, but the definition\/concept of the completion interval remains the same.","In , referring initially to , the \u2018FM Framework\u2019  of  further includes an \u2018FMReservoirMgr\u2019 node , a \u2018NetworkMgr\u2019 node , and a \u2018FieldManagement\u2019 node operatively connected to the \u2018FMReservoirMgr\u2019 node and the \u2018NetworkMgr\u2019 node . The \u2018FieldManagement\u2019 node is adapted for practicing the previously discussed steps of  which represent a \u2018Field Management Strategy\u2019 corresponding to a method for \u2018Field Management\u2019 associated with the \u2018FM Framework\u2019  of . The \u2018Field Management (FM) Framework\u2019  of  is completely decoupled from surface facility network simulators , and subsurface reservoir simulators , . However, in , the \u2018FM Framework\u2019  has a clearly defined \u2018open interface\u2019 , , , for simulators , , , and any other external Field Management (FM) algorithms. The \u2018open interface\u2019 and in  represents an interface for the reservoir simulators and and the \u2018open interface\u2019 and in  represents an interface for the network simulators and . In , any black-box simulator or algorithm , , , may become a part of the \u2018FM Framework\u2019  system by simply adhering to the \u2018open interface\u2019 , , , of the adaptors , , , associated with the FM Framework .","In , the \u2018FM Framework\u2019  includes \u2018adaptors\u2019 , , , and an \u2018open interface\u2019 , , , associated with the \u2018adaptors\u2019 wherein other simulators, such as reservoir simulators , and\/or a network simulators , , can operatively attach to the \u2018FM Framework\u2019  via the \u2018open interface\u2019 , , , of the adaptors , , , . As shown in , the \u2018adaptors\u2019 -, -within the \u2018FM framework\u2019  are designed to hide the specific details of the reservoir\/network simulators , , , so that the \u2018FM Framework\u2019  can communicate with these reservoir\/network simulators , , , in a generic way. The defined Field Management \u2018open interface\u2019 , , , in  allows \u2018plug-and-play\u2019 architecture for different reservoir\/network simulators , , , with different brands, capabilities, and mathematical formulations. This is achieved by publishing only the \u2018engineering concepts\u2019 associated with the \u2018open interface\u2019 , , , of  of the \u2018adaptors\u2019 , , , ","In , the published \u2018engineering concepts\u2019 associated with the \u2018open interface\u2019 , , , of the adaptors , , , are illustrated in detail.","In , a set of published \u2018interface characteristics\u2019 or \u2018engineering concepts\u2019  associated specifically with the open interface , with the adaptors , of the \u2018FMReservoirMgr\u2019 node of the FM Framework  of  are illustrated. The reservoir simulators , of  can interface directly with the \u2018FM Framework\u2019  by adhering to the published \u2018interface characteristics\u2019  of  associated with the open interface , of the adaptors , of the \u2018FMReservoirMgr\u2019 node of the FM Framework  of .","In , a set of published \u2018interface characteristics\u2019 or \u2018engineering concepts\u2019  associated with the open interface , with the adaptors , of the \u2018NetworkMgr\u2019 node of the FM Framework  of  are illustrated. The network simulators , of  can interface directly with the \u2018FM Framework\u2019  by adhering to the published \u2018interface characteristics\u2019  of  associated with the open interface , of the adaptors , of the \u2018NetworkMgr\u2019 node of the FM Framework  of .","The FM \u2018open interface\u2019 , , , , as shown in , enables more than just \u2018plug-and-play\u2019 architecture. The FM \u2018open interface\u2019 , , , in  helps to decouple \u2018mathematical concepts\u2019 from \u2018reservoir engineering concepts\u2019 thereby allowing the engineer to think only in terms of what matters most for the FM strategy, that is, what is \u2018real\u2019 (for example, wells, completion intervals, fluid streams, etc, are \u2018real\u2019) rather than \u2018simulation tools\u2019 including \u2018finite-difference grids\u2019 and \u2018well-segments\u2019 (which are used to represent what is real). For example, refer to  wherein the underlying representation of a completion interval might change from one reservoir simulation model to another, but the definition\/concept of the completion interval remains the same.","Referring to , an illustration of the \u2018Portability\u2019 of the FM Framework is shown in the steps , , and  of . The term \u2018Portability\u2019 here refers to the ability of any reservoir simulator  or network simulator  to interface with the FM Framework  via the \u2018open interface\u2019  and  of the adaptors  and  (as shown in ). In , assume that a company X has its own reservoir simulator, and they want to use the \u2018FM Framework\u2019  (in ) to build their field production strategies, step  in . The \u2018FM Framework\u2019  of  has a very well defined \u2018open interface\u2019  and  to the reservoir (and network) simulators  (and ), step  in . As a result, the engineers from company X can, using the \u2018published information\u2019 pertaining to the \u2018open interface\u2019  and  of  (i.e., the aforementioned \u2018engineering concepts\u2019 of the \u2018open interface\u2019), build an adaptor (on their own) and take full advantage of the \u2018FM Framework\u2019  of , step  of .","Flexibility of the FM Framework ","The \u2018Flexibility\u2019 of the \u2018FM Framework\u2019  can be explained, as follows. The \u2018FM Framework\u2019  enables the user to control the settings of Field Management (FM) strategies allowing for a flexible system that handles conventional cases as well as complicated use cases. That is, the \u2018FM Framework\u2019  allows control over how the \u2018FM Framework\u2019 logic is executed, in order to accommodate real field situations that require such control. The \u2018FM Framework\u2019  flexibility is demonstrated through control of the frequency at which the balancing action is executed, a use by the \u2018FM framework\u2019  of a set of expressions, and a use by the \u2018FM framework\u2019  of dynamic lists of flow entities.","Referring to , , , and , the \u2018FM Framework\u2019  of  is built upon a \u2018tree structure\u2019 of \u2018nodes\u2019, the \u2018tree structure\u2019 of \u2018nodes\u2019 associated with the \u2018FM Framework\u2019  being shown in , , , and  (to be discussed later in this specification). Part of each of the \u2018nodes\u2019 of the \u2018FM Framework\u2019  of  is \u2018auto-generated\u2019 (for example, the \u2018managers\u2019 are \u2018auto-generated\u2019, such as the \u2018ExpressionMgr\u2019, the \u2018EntityListMgr\u2019, etc), and another part of each of the nodes of the \u2018FM Framework\u2019  of  is a \u2018created node\u2019 that are case dependent. Under these \u2018managers\u2019 (including the StrategyMgr), nodes can be created (e.g. a strategy under the \u2018StrategyMgr\u2019, an action under the \u2018ActionMgr\u2019, etc).","In , the \u2018FM Framework\u2019  includes a \u2018plurality of nodes\u2019, where the \u2018plurality of nodes\u2019 comprise the \u2018FieldManagement\u2019 node of  (which is adapted for practicing the previously discussed steps of  which represent a \u2018Field Management Strategy\u2019 corresponding to a method for \u2018Field Management\u2019 associated with the \u2018FM Framework\u2019  of ), the \u2018FMTimeStepSolution\u2019 node , the \u2018ProcedureMgr\u2019 node , the \u2018StrategyMgr\u2019 node of , the \u2018FMReservoirMgr\u2019 node of , the \u2018NetworkMgr\u2019 node of , the \u2018FluidSystem\u2019 node of , the \u2018GroupMgr\u2019 node , and the \u2018ReservoirRegionMgr\u2019 node ","In , the building blocks of the \u2018FM Framework\u2019  is illustrated,  illustrating a more detailed construction of the \u2018StrategyMgr\u2019 node of . In , the \u2018StrategyMgr\u2019 node is operatively connected to a \u2018BuildingBlocks\u2019 node , a \u2018Strategy1\u2019 node , and a \u2018Strategy2\u2019 node . The \u2018BuildingBlocks\u2019 node  is operatively connected to the following additional nodes: the \u2018ExpressioMgr\u2019 node , the \u2018BalancingMgr\u2019 node , the \u2018EntityListMgr\u2019 node , the \u2018InstructionMgr\u2019 node , the \u2018ActionMgr\u2019 node , and the \u2018ResourceMgr\u2019 node .","In , an \u2018overall view of the PVT related part (i.e., the fluid system) of the \u2018FM Framework\u2019 \u2019 is illustrated,  illustrating a first more detailed construction of the \u2018FluidSystem\u2019 node of . In , the \u2018FluidSystem\u2019 node is operatively connected to the following nodes: the \u2018FluidMgr\u2019 node , the \u2018SeparatorMgr\u2019 node , the \u2018FluidStreamSourceMgr\u2019 node , the \u2018FluidStreamMgr\u2019 , the \u2018CompositionalDelumperMgr\u2019 node , and the \u2018BlackOilDelumperMgr\u2019 node .","In , the structure details of the fluid streams functionality of the \u2018FM Framework\u2019  is illustrated,  illustrating, in more detail, a \u2018further plurality of additional nodes\u2019 which are operatively connected to the \u2018FluidStreamSourceMgr\u2019 node  and the \u2018FluidStreamMgr\u2019 node  as shown in . In , the \u2018further plurality of additional nodes\u2019 which are operatively connected to the \u2018FluidStreamSourceMgr\u2019 node  include: the \u2018ImportedStream1\u2019 node , the \u2018ImportedStream2\u2019 node , and the \u2018InternalStream1\u2019 node . In , the \u2018further plurality of additional nodes\u2019 which are operatively connected to the \u2018FluidStreamMgr\u2019 node  include: \u2018FluidStream1\u2019 node  and the \u2018FluidStream2\u2019 node . In , the \u2018further plurality of additional nodes\u2019 which are operatively connected to the \u2018FluidStream1\u2019 node  include: the \u2018Ingredient1\u2019 node  and the \u2018Ingredient2\u2019 node . In , the \u2018further plurality of additional nodes\u2019 which are operatively connected to the \u2018FluidStream2\u2019 node  include: the \u2018Ingredient1\u2019 node  and the \u2018Ingredient2\u2019 nodes .","Referring to , , and , the \u2018Flexibility\u2019 of the \u2018FM Framework\u2019  of  is provided at several levels of the FM Framework :\n\n","In , , and , illustrations of the \u2018Flexibility\u2019 of the \u2018FM Framework\u2019  of  are shown in steps  through  of , , and .","In , an illustration of the \u2018Flexibility\u2019 of the \u2018FM Framework\u2019  of  reflects the frequency at which a balancing action is executed. Referring back to the steps of  representing a \u2018Field Management Strategy\u2019 corresponding to a method for \u2018Field Management\u2019 associated with the \u2018FM Framework\u2019 , in , the following steps represent the \u2018Flexibility\u2019 of the \u2018FM Framework\u2019  in terms of the frequency at which a balancing action is executed: (1) One of the strategy's instructions consists on choking back wells to reduce the fluid flow velocity in all wells' tubing to keep it below the erosional velocity, step  of , (2) Choking back the well takes place incrementally so that a well is not choked back more than needed, step  of , (3) Choking back one or more than one well, impacts the fluid flow in the surface facility network, step  of , (4) Solving the surface facility network model is basically needed after every single incremental choking in any well, which might be prohibitively expensive in terms of CPU time, step ; in , and (5) Depending on the speed\/accuracy requirements, the \u2018FM framework\u2019  provides the engineer the options to balance the surface facility network (balancing action) at any of the following levels: (5a) After every single incremental choking back of any well at every reservoir simulator's Newton iteration, (5b) After choking back the well to have its velocity below the limit given the current flow conditions of the well at every reservoir simulator's Newton iteration, (5c) After choking back all wells to have them obey the erosional velocity limit at every reservoir simulator's Newton iteration, (5d) Just at the beginning of every time step, and (5e) Just every two months, or any number of days, step  of .","In , an illustration of the \u2018Flexibility\u2019 of the \u2018FM Framework\u2019  of  reflects the use of Expressions. Therefore, in , the following steps represent the \u2018Flexibility\u2019 of the \u2018FM Framework\u2019  in terms of its use of Expressions: (1) When building a strategy for predicting a field future production, the engineer uses the Expressions of the \u2018FM Framework\u2019  of  for: (1a) Ordering of entities in building dynamic flow-entity lists, (1b) Selection-criteria for building dynamic list of entities, (1c) Triggering and success-criteria for instructions, (1d) Constraints\/objectives for balancing actions, and (1e) Customized Field Management (FM), step  of ; (2) When building an expression, the engineer can use any property (e.g. production oil rate, reservoir volume gas injection rate, bottom hole pressure, etc.) and any appropriate flow entity status (open, closed, shut, etc.) combined to any appropriate flow entity (well, well list, completions, etc), step  of ; and (3) Expressions can be as complex as necessary and appropriate (linear, non-linear, etc); Expressions can be nested to use more sophisticated expressions, step  of .","In , an illustration of the \u2018Flexibility\u2019 of the \u2018FM Framework\u2019  of  reflects its use of Flow Entities. Therefore, in , the following steps represent the \u2018Flexibility\u2019 of the \u2018FM Framework\u2019  in terms of its use of Flow Entities: (1) The engineer wants to build a strategy in which he\/she has a field water production limit to obey; He\/she decides that the optimal scenario consists on performing the following every time the water production limit is hit: (1a) Select the group of wells that is producing above a predefined water cut, (1b) Select the well in that group that is producing most water, (1c) Select the completion from that well that is producing most water, and (1d) Shut the selected completion, step  of ; (2) The engineer builds a dynamic list of groups to which only groups with water cut higher the predefined limit belong (membership to the list gets updated every time the list is used); The list, when updated, results on selecting the group that has the highest water cut among all groups that belong to the list, step  of ; (3) The engineer builds a dynamic list of wells that, when updated, results on the well with the highest water production rate among all the production wells that belong to the selected group, step  of ; and (4) The engineer builds a dynamic list of well completions that, when updated, results on the completion with the highest water production rate among all the completions of the selected well, step  of .","Extensibility of the FM Framework ","The \u2018Extensibility\u2019 of the \u2018FM Framework\u2019  can be explained, as follows. Custom variables, custom actions, and custom strategies enable the construction of \u2018extensions\u2019 to the \u2018FM Framework\u2019 . These \u2018extensions\u2019 enable almost every conceivable use case to be handled by the \u2018FM Framework\u2019 . These \u2018extensions\u2019 may be made at run-time on the user's platform, without the need for a development cycle and additional software or hardware, other than that provide through the Field Management (FM) system. These \u2018extensions\u2019 may then be saved and reused for application to multiple cases.","Referring to , , and , the \u2018Extensibility\u2019 of the \u2018FM Framework\u2019  of  is provided at several levels of the FM Framework :\n\n","These extensibility points enable users to incorporate customized workflows at run-time without having to go through any lengthy development cycle, and without needing access to, and have an intricate understanding of, the underlying software and hardware.","In , , and , illustrations of the \u2018Extensibility\u2019 of the \u2018FM Framework\u2019  of  are shown in steps  through  of , , and .","In , an illustration of the \u2018Extensiblity\u2019 of the \u2018FM Framework\u2019  of  reflects the use of Custom Variables. Therefore, in , the following steps represent the \u2018Extensibility\u2019 of the \u2018FM Framework\u2019  in terms of its use Custom Variables: (1) The engineer wants to build a simulation model to predict future production from a hydrocarbon reservoir, step  of ; (2) He\/she decides to build one or more strategies using either the FM provided strategy framework or his\/her own custom strategy (or strategies), step  of ; (3) In the process of building the strategy (or strategies), the engineer decides to build one or more actions to be incorporated into instructions, step  of ; and (4) In the process of building the different instructions, expressions are needed at different levels; Expressions can be built using provided properties (and flow entities); If provided ingredients are not enough to accommodate very special requirements, custom variables can be used to accommodate the engineer's plans; Custom variables can be used in combination with all existing ingredients in the FM framework, step  of .","In , an illustration of the \u2018Extensibility\u2019 of the \u2018FM Framework\u2019  of  reflects the use of Custom Actions. Therefore, in , the following steps represent the \u2018Extensibility\u2019 of the \u2018FM Framework\u2019  in terms of its use Custom Actions: (1) The engineer wants to build a simulation model to predict future production from a hydrocarbon reservoir, step  of ; (2) She\/he decides to build one or more strategies using either the FM provided strategy framework or his\/her own custom strategy (or strategies); step  of ; (3) Can all what he\/she has in mind in terms of setting\/removing\/modifying constraints or applying modifications on flow entities be implemented through the provided set of actions (?), step  of ; (4) If yes, select among the provided actions, step  of ; and (5) If no, build as many custom actions as needed to be incorporated in the strategy's (or strategies) set of instructions; These custom actions can always be combined with provided actions to build these instructions, step  of .","In , an illustration of the \u2018Extensibility\u2019 of the \u2018FM Framework\u2019  of  reflects the use of Custom Strategies. Therefore, in , the following steps represent the \u2018Extensibility\u2019 of the \u2018FM Framework\u2019  in terms of its use Custom Strategies: (1) The engineers wants to build a simulation model to predict future production from a hydrocarbon reservoir, step  of ; (2) Is the FM strategy as illustrated in  flexible enough to accommodate what he\/she has in mind (?), step  of ; (3) If yes, build the strategy using the strategy ingredients provided by the FM framework , step  of ; and (4) If no, build a custom strategy that circumvent the provided FM framework; Strategy ingredients as provided by the FM framework  can be still used (instructions, actions, expressions, flow entities, variables, . . . ), step  of .","The \u2018FM Framework\u2019  of  disclosed in this specification is intended for an audience of Field Management (FM) units in oil companies and service companies. The \u2018FM Framework\u2019 disclosed herein is involved in the following workflows:","1. Field development plans","2. Surface facility design.","3. Surface facility de-bottlenecking.","4. Uncertainty analysis.","5. Sensitivity analysis.","6. Instantaneous revenue optimization from the hydrocarbon field.","7. Lifetime revenue optimization from the hydrocarbon field.","Field management (FM) is the simulation workflow through which predictive scenarios are carried out to assist in field development plans, surface facility design\/de-bottlenecking, uncertainty\/sensitivity analysis, and instantaneous\/lifetime revenue optimization from a hydrocarbon field. This involves, among others, the usage of reservoir simulators (, of ), surface-network simulators (, of ), process-modeling simulators, and economics packages.","This specification discloses a comprehensive, portable, flexible and extensible FM framework which is completely decoupled from surface and subsurface simulators. The framework has a clearly defined interface for simulators and external FM algorithms. Any black-box simulator or algorithm may become a part of the system by simply adhering to the FM interface, as discussed in this specification.","The FM framework capabilities discussed in this specification are demonstrated on several examples involving diversified production strategies and multiple surface\/subsurface simulators. One real field case that requires advanced\/complicated development logic is also presented.","As noted earlier, Field management (FM) is the simulation workflow through which predictive scenarios are carried out to assist in field development plans, surface facility design\/de-bottlenecking, uncertainty\/sensitivity analysis and instantaneous\/lifetime revenue optimization from a hydrocarbon field.","Traditionally, the FM functionality has been distributed among the reservoir simulator(s), the network simulator(s) and the \u201ccontroller\u201d that couples reservoir simulators to surface facility network simulators.The reservoir simulator provides embedded management tools for its subordinate wells. In the case of multiple reservoirs and surface facility networks, the controller manages the boundary-conditions exchange needed to couple different models and potentially tops-up with some global management tools that account for the coupling of the different models. The different models involved in the coupled scheme might have substantially different FM capabilities and approaches. Potential overlap and conflict might arise between the local single reservoir management tools and the global FM tools.","As a consequence of the relative isolation of the different simulators, the resulting FM plans\/scenarios are generally suboptimal and tightly integrated to the specific simulators used in the workflow.","Furthermore, since the FM functionality is basically independent of the simulators' brand, the details of the physics being modeled, and the mathematical approaches utilized in these simulators, the usage of independent and unified FM framework provides a new horizon of powerful tools enabling the emerging smart field workflows.","This specification presents a comprehensive set of tools, algorithms and frameworks (referred to with FM or FM framework in the following parts of this specification), enabling a management of the functionality required by most conventional fields.","Extensibility and flexibility of Field Management (FM) also allow(s) workflows and logic that are difficult\/impossible to implement within the prescribed set of functionality traditionally provided in reservoir\/FM tools. This specification presents an innovative approach for extensibility and flexibility providing many previously unavailable possibilities for advanced FM users.","The following parts of this specification are presented in the following sequence:\n\n","Referring to , Field Management (FM) comprises executing, at a prescribed frequency (i.e. solution method), a strategy; as depicted in . The terminology used in this section is fully described in following sections. Here, we illustrate the overall picture of the FM framework  presented in this specification.","The concepts in Field Management (FM) are:\n\n","Referring to , the FM framework\/functionality is built upon a tree structure (of nodes).  shows the high level part of this structure. The nodes in the tree-structure are fully described in the following sections.","Referring to , one main node in  is the \u2018strategy manager\u2019 as illustrated in .  shows an \u201cauto-generated\u201d part of nodes (the managers, e.g. ExpressionMgr, EntityListMgr, etc), and created nodes (that are case dependent). Under these managers (including the StrategyMgr), nodes can be created (e.g. a strategy under the StrategyMgr, an action under the ActionMgr, etc).","Solution Method (Frequency)","Two types of solution methods are available (see Refs.  to  identified below for full details):\n\n","However, the gained computational speed in the case of periodic solution is, generally, at the expense of accuracy. This is especially true in the case of:\n\n","In the following, we present the different building-blocks involved in an FM strategy. More basic building-blocks are presented first.","Flow-Entities and Flow-Entity Lists","The FM logic is built upon flow-entities. The following are examples of available flow-entities:\n\n","Some of the above flow-entities encapsulate other entities; in other words, they contain a lists of other entities:",{"@attributes":{"id":"p-0103","num":"0148"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"Entity","Is a flow-entity list of"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Well","Completion intervals"]},{"entry":[{},"Group","Wells, groups"]},{"entry":[{},"Static flow-","Unrestricted (any of the above"]},{"entry":[{},"entity list","flow-entities)"]},{"entry":[{},"Dynamic flow-","Unrestricted (any of the above"]},{"entry":[{},"entity list","flow-entities)"]},{"entry":[{},"Well manager","Wells (all the wells in one"]},{"entry":[{},{},"reservoir model)"]},{"entry":[{},"Reservoir","Reservoirs"]},{"entry":[{},"manager"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Flow-entities are one of the building-blocks of an expression as described later on in this specification.","Most of the actions within the FM framework act on flow-entity lists as detailed in this specification to meet an instruction's success-criterion. There are three main types of flow-entity lists:","Groups","A group is a collection of wells and\/or groups. Group hierarchies may also be built, representing real hierarchies in the field (e.g. representing manifolds) or virtual hierarchies (e.g. best performing wells). Groups may be overlapping, i.e., one well\/group may be under multiple groups. Group level injection stream hierarchies may also be associated with groups.","Static Flow-Entity Lists","Members of these lists do not change in time, unless explicitly modified. Static flow-entity lists may contain any type of flow-entities, including other static flow-entity lists.","Dynamic Flow-Entity Lists","Membership and order of dynamic flow-entity lists are reevaluated whenever the list is used. This means that the members of a dynamic list might change over time as field conditions change. Example of dynamic flow-entity lists:\n\n","Dynamic flow-entity lists may also be nested within each other; in other words, one dynamic list may provide the initial list of another dynamic list. There are no limits to the level of nesting. Nested dynamic lists enable the construction of lists such as:\n\n","Expressions may be used across FM for several purposes:\n\n","All properties (e.g. production oil rate, reservoir volume gas injection rate, bottom hole pressure, etc.) may be used to create numerical or logical expressions. States may also be used to create logical expressions. Examples of states that might be used in building expressions:\n\n","There are also several functions that may be used in expressions (sum, mean, harmonic mean, skewness, standard deviation, etc.). These functions will be executed at the point where the expression is evaluated. This allows flexible expressions that may be used to construct useful dynamic lists such as the list of wells that produce below the field average, or in expressions used as triggering-criteria.","Expressions are categorized into assigned and logical expressions:","Assigned Expressions","These are expressions that are tied to one or more flow-entities. Assigned expressions can be numerical (when evaluated, results in a real number) or logical (when evaluated, results in a Boolean). Assigned expressions may be combined with other assigned expressions to form nested expressions. The following are some usage examples of assigned logical expressions:\n\n","Free expressions are not assigned to a flow-entity. They must be assigned to a flow-entity before they may be evaluated. These can be numerical or logical. The following are some usage examples of free expressions:\n\n","Actions are the FM components that encapsulate a logic that generates one or more primitive commands that modify the system. Actions are divided into two main categories:\n\n","It is also possible to encapsulate an instruction in an action, hence enabling composite actions with their own triggering\/success-criteria and nested instructions. Modifying existing instructions is also enabled through a specific instruction-modifying action. It is also possible to extend the list of available actions at run-time by way of custom actions as discussed later in this specification.","Instruction","The instruction attempts to fix a success-criterion by applying a list of actions. Fixing the success-criterion means making it evaluate to True.","The success-criterion is a logical expression assigned to one or more flow-entities. Most of the time the criterion that triggers an instruction is what is being fixed. For instance, if the trigger criterion is the field water rate is greater or equal to 5000, the instruction is deemed successful when the applied actions bring the field water rate below 5000. In other words, the success-criterion corresponding to a triggering-criterion is most often the logical negation of the triggering-criterion. However, this is not always the case; one might want to have a success-criterion independent of the triggering-criterion. For instance, instead of working over wells in the field to obey the water rate limit of 5000 STB\/D, one might want to bring it down to 4000 STB\/D so that the water rate will not exceed 5000 STB\/D in the next time-step, requiring yet another workover (such frequent workovers may not be practical). Furthermore, the success-criterion might contain conditions that do not necessarily exist in the trigger criterion. If no trigger criterion is specified, then the instruction will be executed unconditionally.","The actions in the action list are executed in the order they are defined. The instruction will cease executing actions as soon as the success-criterion of the instruction evaluates to True. Note that the check for success is done with a prescribed frequency (after every single topology-modifying command, for instance).","Every instruction has a balancing action that may or may not be the same as the strategy's balancing action. Here again, the instruction's balancing action is executed with a prescribed frequency. Ideally, the balancing action should be executed after every topology modifying command. However, that might be computationally very expensive (e.g. in the case of network balancing). A compromise would be to balance after every action in the instruction's list of actions, or after the last executed action (where the success-criterion of the instruction is met).","One may, optionally, set instructions to be executed a second time within the strategy's instruction list, in case later instructions have disturbed the instruction's success-criterion. One may also set an instruction to be executed a single time; in which case it will be removed from the strategy's list of instruction once executed (e.g. a re-tube action instruction may be allowed only once).","Executing the instruction's list of actions might fail to meet the instruction's success-criterion. In such a case, one may set an instruction to be reverted, so that all actions are undone. Undoing actions is carried out as follows:\n\n","Balancing is an important concept in FM. It consists of allocating well flow rates so that limits\/targets that are specified on wells or lists of wells (e.g. groups) are obeyed\/met. Balancing does not involve opening\/closing wells and\/or completion intervals; it, rather, adjusts well flow rates. In practice, results of a balancing could be implemented by adjusting the wells choke settings, and without installing any additional equipment.","Examples of Balancing Actions:\n\n","A field-wide balancing action may be applied at the FM strategy level. This causes all instructions in the strategy to use this balancing action. The balancing action is executed once at the beginning of the strategy execution loop and, potentially, after every topology modifying action as discussed above.","Strategy","Strategy is the focal point of the FM framework. A strategy encapsulates a list of instructions and an optional field-wide balancing action. The instructions are executed in the order they are specified.","The general approach in FM is that, the desired field operating targets and limits (on the whole field, sets of wells, reservoir regions, completion intervals, etc) are honored by a combination of a field balancing action and topology modifying actions.","Balancing actions work within the potentials of the wells. When these potentials are not within the desired ranges, balancing actions may not be able to honor some of the targets. Also when there are targets and limits, there may come a point where the reservoir\/well properties become unfavourable (e.g. wells with high WCT) such that the target and limit cannot be satisfied simultaneously. In these cases, topology-modifying actions could be used to increase field\/well potentials (e.g. drill new wells) and\/or reduce unfavourable reservoir\/well properties (e.g. workover high WCT).","In short the general approach presented by the FM framework is:\n\n","This makes practical sense in most cases; why resort to drastic (and expensive) measures (like drilling wells) when we are able to operate within the desired targets and limits with the current hardware (i.e. topology) installed in the field? When the current hardware fails to honor all the desired targets and limits (i.e. the balancing action fails to honor some of the targets\/limits), we resort to topology modifying actions (in the form of instructions that have topology modifying actions in their action lists).","Here is a simple demonstration of the proposed general approach. Suppose we would like to operate the field with the following target and limits:\n\n","We could set up a balancing action that would provide us the well-by-well allocation that honors all these desired field operating conditions. However there might come a point in simulation time, when the model is no longer able to deliver 20000 STB\/D of oil with the existing wells. In this case we would need to drill new wells; we could easily set up an instruction to do this.","Similarly, even when there are enough wells in the model to deliver the oil target, there might not be a well-by-well allocation that produced 20000 STB\/D of oil and less than 12500 STB\/D of water at the same time. This might easily happen if all the wells in the model have high WCT, perhaps due to aquifer encroachment or injection water breaking through. To fix this situation, one could easily set up an instruction to shut wells with high WCT, or alternatively, workover the completion intervals with high WCT.","Procedures","Procedures provide a simple way of defining simple FM operations. They automatically set up expressions, dynamic flow-entity lists, actions and instructions requiring minimal user-provided information and relying on reasonable defaults. Procedures are very much like wizards found in some applications; in this case the procedures are tailored for FM. The user may choose to override the default settings of a procedure or modify what has been set up.","Procedures provide high level FM workflows. Constraint handling procedures are one instance. Some example applications of constraint handling procedures are:\n\n","The procedure's role is to modify the system in order to obey a well or a group constraint. This can be achieved through several methods including:\n\n","The procedure's main product is an instruction for which the success-criterion corresponds to the constraint being obeyed.","Fluid System","Referring to ,  illustrates an overall view of PVT related part (fluid system) of the FM Framework , that is, the FM framework for PVT related functionality. In , a fluid-models manager and separators manager provide the fundamentals of the PVT calculations and fluid needs. Any fluid requirement in FM (e.g. gas injection\/re-injection, fuel, sale, etc.) needs to be provided through fluid stream sources that are ingredients to build fluid streams. Furthermore, the FM framework provides the capability of converting fluid streams from coupled models with different fluid descriptions into a unified set of components.","Fluid Stream Sources","Fluid stream sources are defined independently of their usage. Fluid stream sources might be:\n\n","Fluid stream sources are used for two main purposes:\n\n","Fluid streams manage the fluid requirements in FM. Examples of fluid requirements: fuel gas, sale gas, and gas injection\/re-injection.","Referring to , this  illustrates the structure details of the fluid streams functionality of the FM Framework . In , a fluid stream consists of one or more fluid stream ingredients. It has a target rate that may or may not be met according to the ingredients' availability as depicted in . A fluid stream ingredient uses a fluid stream source (as shown in ). It has a target rate\/fraction from a predefined fluid stream. One or more fluid stream ingredients might use the same fluid stream source. For instance, both fuel gas and re-injected gas streams might consist of ingredients sharing the same fluid stream source (e.g. the gas from the second separator-stage at the FIELD group).","Fluid streams have priorities. In the case of multiple fluid streams with limited fluid availability from their corresponding fluid stream sources, the higher priority streams will be served first.","Given the set of fluid stream sources, the calculated properties of the fluid stream are:\n\n","Inject 100 MMscf\/D of gas in group G. Use the following fluid stream ingredients in the prescribed order to make up the stream's target rate. Some of the ingredients may not be needed to make up the rate.\n\n","Inject 100 MMscf\/D of gas in group G. The gas is provided from the following fluid stream ingredients:\n\n","FM might be set to use any prescribed fluid description. The reservoir and network models might be using different fluid descriptions. An \u2018on the fly\u2019 lumping\/delumping functionality converts, when needed, a fluid stream from one model to another (e.g. delumping a blackoil stream from a reservoir model to the FM set of 11 components and pseudo-components). Details of lumping\/delumping in the context of FM with multiple reservoirs coupled to surface facility networks are discussed in Ref  below.","Adaptors","Referring to , , and , referring initially to , adaptors (, , , ) within the FM Framework  are layers to hide the specific details of reservoir\/network simulators so that FM communicates with these simulators in a generic way. The defined FM interface allows plug-and-play architecture for different reservoir\/network simulators with different brands, capabilities and mathematical formulations. This is achieved by publishing only the \u2018engineering concepts\u2019 associated with the FM interface (, , , ); see  for the published \u2018engineering concepts\u2019 associated with the FM interface (, , , ).","The FM interface enables more than just plug-and-play architecture. It helps decouple mathematical concepts from reservoir engineering concepts, allowing the engineer to think only in terms of what matters most for the FM strategy, in other words, what is real (e.g. wells, completion intervals, fluid streams, etc) rather than simulation tools used to represent what is real (e.g. finite-difference grids, well-segments, etc).","Reservoir Simulator Adaptors","Referring to , a reservoir simulator adaptor to the FM framework is an interface that hides all the simulation details of wells or completion intervals and exposes only engineering-relevant concepts of these entities. A tree structure of a reservoir simulator's adaptor is presented in .","A reservoir engineer that uses the reservoir simulation model (\u201cusing\u201d as opposed to \u201cconstructing\u201d the model) to carry out predictive scenarios might not be interested in the underlying mathematical details. For instance the number of cells in the finite-difference model is irrelevant from the FM point of view. Similarly, the details of grid-cell to well-node connections concern only the constructor of the model and not the user. The user of the model is concerned only with the engineering concepts (e.g. completion intervals).","Decoupling mathematical- and implementation-specific details from purely engineering concepts has numerous advantages. Consider the implementation specific concept of grid-cell to well-node connections for a finite-difference reservoir simulator and the engineering concept of completion intervals. A completion interval is defined (universally) by the following information:\n\n","In the case of a finite-difference based reservoir simulator with a specific well-model, the reservoir simulator is coupled to the well-model through grid-cell to well-node connections. These mathematical details of how a well-node is connected to a grid-cell are irrelevant for a reservoir engineer who wants to use the reservoir simulation model to investigate the following:\n\n","In the FM framework , the reservoir engineer implements his\/her FM intentions (FM strategy) through the FM interface that is purely based on engineering concepts. Changes to the reservoir simulation model might occur in time, for instance as new data comes in or when new computational power becomes available:\n\n","Referring to , the definition of a completion interval however, remains the same as illustrated in ; therefore the reservoir engineer's implementation of the FM strategy remains exactly the same. This is true even for more radical changes to the simulation model such as:\n\n","The same principle applies to the other concepts presented in the FM framework, such as wells and fluid streams.","In summary:\n\n","Referring to , similar to a reservoir simulator adaptor, a surface-network model adaptor provides an interface that is independent of the specifics of the network simulator. This enables the usage\/control of different surface-network models (e.g. of different brands) with the same FM strategy. A tree structure of a surface-network simulator's adaptor is presented in .","Multiple Simulators","FM can control multiple reservoir\/surface simulators in a session. These simulators may have the same or different brands, they may run on the same or different machines, and they may operate on the same or different operating systems (OS). Despite this heterogeneity in the simulator brands, OS, etc., the system looks like an integrated system to the reservoir engineer. The software logistics that make this possible are hidden away in the adaptors, enabling the reservoir engineer to focus on what is most important for her\/his task.","The presentation of an integrated system enables the reservoir engineer to define the FM strategy that encompasses multiple models. For instance one could easily construct an optimization problem that allocates rates across several reservoir models, or a workover process that utilizes the same rig across completion intervals in wells defined in different simulators.","Customized FM","The FM framework may be customized through several FM extensibility features:\n\n","These extensibility points are implemented in the form of a free-form python script. Python is an interpreted programming language created by Guido van Rossum in 1990. Python is fully dynamically typed and uses automatic memory management. It also has strong object-oriented capabilities. Python is developed as an open source project, managed by the non-profit Python Software Foundation, and is available for free.","The python scripts used within the FM framework extensibility points have access to all the python language functionality and the standard libraries that comes with python. Naturally, the basic language functionality of arithmetics, conditionals, loops, functions, classes and modules are available. The standard python libraries provide further functionality encompassing a wide range of topics, from simple file  to complicated remoting frameworks, mathematical toolboxes, etc. In addition an FM toolbox that provides reservoir-engineering specific algorithms and tools is made available. The custom python script also has access to all the entities that are defined in all the coupled models (wells, groups, surface-network nodes, etc).","These extensibility points pave the way for all kinds of real-case and research implementations; the possibilities are endless. These extensibility points are discussed below with some potential example applications.","Custom Variables","Custom variables enable the definition of:\n\n","Once created, the custom variables may be used in expressions that, in turn, may be used as success-criteria, objectives, constraints, etc. The following are examples of the usage of custom variables:\n\n","Custom actions are another extensibility point of the FM framework. They might be potentially used for the implementation of complex and customized FM processes that cannot be implemented with the provided actions in the FM framework. Similarly to the other extensibility points, custom actions are implemented in the form of a free-form python script. The following are examples of the usage of custom actions:\n\n","The custom strategy is another level of the extensibility features of the FM framework. The custom strategy can be used when an advanced user wishes to circumvent the provided FM framework altogether and implement their own FM logic by way of free-form python scripts. The following are examples of the usage of custom strategies:\n\n","FM provides the capability of interaction with the simulator in real-time. In other words, once the model has initialized and is ready to time-step, the reservoir engineer may query rates and pressures form the wells and completion intervals, change states of flow-entities, construct groups, etc., all in real simulation time. The reservoir engineer may also construct optimization or heuristic group control allocation problems, even complete FM strategies, and see their effects at once. The reservoir engineer may also instruct the simulators to time-step to a target time, and then resume the dynamic interaction.","The basic means of dynamically interacting with simulators in FM is through the python interpreter. The python interpreter provides an environment that is very similar to that of MATLAB. A MATLAB-like environment with calculation and plotting capabilities, coupled with live, queriable reservoir simulators opens the door for many new potential applications. Some potential usages of dynamic interaction with the simulators are:\n\n","In the following sections we present three examples (including a field case) illustrating some of the capabilities of the FM framework presented in this paper. These examples are run using three reservoir simulator brands:\n\n","This example serves as a validation of the current framework. The results obtained with the presented FM framework are compared to previously published results.In Ref. 2, part of the FM logic is incorporated in the reservoir simulator and the other part in a \u201ccontroller\u201d. In the current paper, the entire FM logic is unified in the FM framework.","Referring to , a black oil reservoir model is coupled to a network model at the tubing head (see ). Three wells are initially open: PA, PB, and PC (one well from each platform). The remaining wells are placed in a drilling queue to be opened as needed, in a prescribed order, to keep the overall oil production rate above 10,000 STB\/D.","The following actions are constructed:\n\n","This is implemented using a topology modifying action.\n\n","The instructions incorporating A (I) gets triggered whenever the field production rate falls below the prescribed target. The instructions incorporating A (I) and A (I) have no triggering-criteria. All flow-entities meeting the selection-criteria of corresponding dynamic flow-entity lists get processed. Whenever one of these three instructions is executed, Action A gets applied since any of the modifications done by these actions require, in principal, the network to be balanced. The balancing action A is incorporated in a separate instruction (I).","The set of instructions is executed in the following order at the beginning of each time step: I, I, I and then I. The time step is restricted to a maximum of 30 days.","Referring to , , , and , details of this example's results are provided in Ref. 2. Here, we briefly describe the results for completeness.  presents the field oil rate vs. time. Whenever the oil rate falls below the prescribed target, a new well is brought up to production. As shown in this figure, only three wells are open at the beginning. These three wells get shut at the end of the third production year because of their WCT hitting the economic limit applied using action A. Wells have, initially, higher potential than what is shown in this figure. However, the initial EVR of these wells' risers is higher than the prescribed tolerance. Therefore, the choke diameter at the well tubing head is dynamically decremented (0.25 inch each decrement) to decrease the flow rate through these pipes in order to bring the erosional velocity ratio within tolerance.  depicts the well head choke diameter for different wells. The resulting erosional velocity ratio vs. production time for these wells is shown in .  shows the field's reservoir volume production rate as well as the reservoir volume water injection rate as applied by the heuristic group control action A.","This field-case has the following desired operating conditions:\n\n","Referring, to , the desired operating conditions are illustrated in . Note that most of these constraints are related to each other. In other words, changing the well rates to meet one of these operating conditions, affects one or more of the rest of the operating criteria. For instance, if we changed gas injection rate of an injector well in Block B to meet the 100% voidage replacement constraint within that block, we would also be changing the gas re-injection percentage of the field.","The currently operational reservoir model utilizes the conventional if-then logic of conditions and actions in the effort to bring the operating conditions of the model to the desired state. The conventional logic has 15 sequential steps:\n\n","The ad-hoc constants a and b used in this sequential logic were determined by several sensitivity runs made to find out the magnitudes of reservoir volumes producible from and injectable into the reservoir. It is not easy to come up with the values of these constants that result in the best allocation for the field. In addition, this sequential approach is not suitable for handling the inter-dependencies of the constraints. These 15 steps lead to a suboptimal solution and not all constraints are met.","Alternatively, this problem may be posed as an optimization problem. Problem setup becomes much easier and we no longer need the sensitivity runs and the ad-hoc constants, making the simulation workflow much more straightforward. The desired field operating conditions are met by employing a field-allocation optimization algorithm based on Mixed Integer Programming. The optimization problem is defined by the following objective and constraints:\n\n","The allocation resulting from this optimization system satisfies all these constraints hence results in the desired operating strategy.","Referring to , the 95% gas re-injection constraint cannot be met with the conventional\/sequential logic, while it is honoured perfectly with the optimizer as can be seen in . The 95% re-injection constraint cannot be honoured by the conventional logic because the sequential approach is not able to accurately capture and evaluate the dependencies of the operating constraints imposed by the reservoir engineer.","The sequential logic results in a gas re-injection percentage of about 111%. This means that 11% more gas is injected than is being produced. However, in reality, there is no source of external gas, hence the results of the sequential logic does not reflect the actual situation in the field. Moreover, since the model injects more gas than is actually available, the rates and the pressures in the prediction diverge from reality as the simulation progresses. The optimized allocation has none of these restrictions.","This example demonstrates the extensibility of the FM framework. A user-input prediction of oil prices in the future will be used as a weighing factor of oil production rate within the objective of an optimization problem that is set up to maximize the cash-flow obtained from the field at a given time.","An optimization problem is set up as follows:\n\n","All the functionality, except the means to define a customized oil price prediction, is available in the Field Management framework. To add this extra functionality, the reservoir engineer sets up f(t) in the form of a time versus oil price table and creates a custom variable in the form of a function that returns the value of the oil price and takes the simulation time as the argument. The engineer then uses this custom variable within the objective expression. This setup will basically result in an optimization problem with a changing objective (based on f(t)) being solved at every time step. All of this is done at run-time on the user's platform, without the need for the vendor to add this additional functionality through a lengthy development cycle.","Referring to , the case is a simple synthetic case with four producers and one water injector. At every timestep, the optimizer finds the optimal allocation that maximizes the cash-flow, and also honors the operating constraints. The resulting rates profile is given in . The oil price predictions used and the optimized cash-flow are given in .","Therefore, a \u2018Field Management framework\u2019  of  is presented with the following features:\n\n","Refer now to . These  illustrate the ultimate purpose of the above referenced \u2018method for Field Management\u2019 (including the Field Management Framework  illustrated in  that is adapted to be coupled to and decoupled from the reservoir and network simulators via the open interface of the adaptors of the FM Framework for integrated optimization of reservoir field development and planning and operation); that is, to extract oil and\/or gas from an Earth formation.  illustrates the characteristics of the Earth formation, and  illustrates a drilling rig that can be used for extracting the oil and\/or gas from the Earth formation of .","In , a first horizon (H)  and a second horizon (H)  are intersected by the \u2018fault surface\u2019 . Now that the \u2018fault surface\u2019  has been defined, it is necessary to interpret a well log output record and the reduced seismic data output record to define the precise location of the \u2018underground deposits of hydrocarbon\u2019 in an Earth formation. For example, in , the \u2018fault surface\u2019  cuts through the first horizon  and the second horizon  in the Earth formation. A line  represents a separation between oil  and water , the oil  and water  existing on one side of the \u2018fault surface\u2019 . Rock and porous material exists on the other side of the \u2018fault surface\u2019 . The \u2018fault surface\u2019  intersects the horizons (H)  and (H)  at two places, a first intersection  and a second intersection . From , it is evident that oil  usually exists near the intersections  and  between the \u2018fault surface\u2019  and the horizons (H)  and (H) . In order to extract the oil  from the Earth formation, it is necessary to drill near the first intersection  at point .","Referring to , recalling from  that it would be necessary to drill near the first intersection  at point  in order to extract the oil  from the Earth formation, a drilling rig can be placed on the Earth's surface directly above the point  of  for the purpose of extracting the oil  from the Earth formation.","In , an example of that drilling rig  is illustrated. The drilling rig  is situated above a \u2018particular location\u2019 in the Earth formation (that is, above the point  in the Earth's formation of ) where the oil and\/or gas is potentially located. In , one embodiment of the drilling rig  includes a surface system , a downhole system , and a surface control unit . In the illustrated embodiment, a borehole  is formed by rotary drilling in a manner that is well known. Those of ordinary skill in the art given the benefit of this disclosure will appreciate, however, that the present invention also finds application in drilling applications other than conventional rotary drilling (e.g., mud-motor based directional drilling), and is not limited to land-based rigs. The downhole system  includes a drill string  suspended within the borehole  with a drill bit  at its lower end. The surface system  includes the land-based platform and derrick assembly  positioned over the borehole  penetrating a subsurface formation . The assembly  includes a rotary table , kelly , hook , and rotary swivel . The drill string  is rotated by the rotary table , energized by means not shown, which engages the kelly  at the upper end of the drill string. The drill string  is suspended from a hook , attached to a traveling block (also not shown), through the kelly  and a rotary swivel  which permits rotation of the drill string relative to the hook. The surface system further includes drilling fluid or mud  stored in a pit  formed at the well site. A pump  delivers the drilling fluid  to the interior of the drill string  via a port in the swivel , inducing the drilling fluid to flow downwardly through the drill string  as indicated by the directional arrow . The drilling fluid exits the drill string  via ports in the drill bit , and then circulates upwardly through the region between the outside of the drill string and the wall of the borehole, called the annulus, as indicated by the directional arrows . In this manner, the drilling fluid lubricates the drill bit  and carries formation cuttings up to the surface as it is returned to the pit  for recirculation. The drill string  further includes a bottom hole assembly (BHA), generally referred to as , near the drill bit  (in other words, within several drill collar lengths from the drill bit). The bottom hole assembly includes capabilities for measuring, processing, and storing information, as well as communicating with the surface. The BHA  further includes drill collars , , and  for performing various other measurement functions. Drill collar  of BHA  includes an apparatus  for determining and communicating one or more properties of the formation  surrounding borehole , such as formation resistivity (or conductivity), natural radiation, density (gamma ray or neutron), and pore pressure. Drill collar  houses a measurement-while-drilling (MWD) tool. The MWD tool further includes an apparatus for generating electrical power to the downhole system. While a mud pulse system is depicted with a generator powered by the flow of the drilling fluid  that flows through the drill string  and the MWD drill collar , other power and\/or battery systems may be employed. Sensors are located about the wellsite to collect data, preferably in real time, concerning the operation of the wellsite, as well as conditions at the wellsite. For example, monitors, such as cameras , may be provided to provide pictures of the operation. Surface sensors or gauges  are disposed about the surface systems to provide information about the surface unit, such as standpipe pressure, hookload, depth, surface torque, rotary rpm, among others. Downhole sensors or gauges  are disposed about the drilling tool and\/or wellbore to provide information about downhole conditions, such as wellbore pressure, weight on bit, torque on bit, direction, inclination, collar rpm, tool temperature, annular temperature and toolface, among others. The information collected by the sensors and cameras is conveyed to the surface system, the downhole system and\/or the surface control unit. The MWD tool  includes a communication subassembly  that communicates with the surface system. The communication subassembly  is adapted to send signals to and receive signals from the surface using mud pulse telemetry. The communication subassembly may include, for example, a transmitter that generates a signal, such as an acoustic or electromagnetic signal, which is representative of the measured drilling parameters. The generated signal is received at the surface by transducers, represented by reference numeral , that convert the received acoustical signals to electronic signals for further processing, storage, encryption and use according to conventional methods and systems. Communication between the downhole and surface systems is depicted as being mud pulse telemetry, such as the one described in U.S. Pat. No. 5,517,464, assigned to the assignee of the present invention. It will be appreciated by one of skill in the art that a variety of telemetry systems may be employed, such as wired drill pipe, electromagnetic or other known telemetry systems.","Refer now to . Recall from  that \u2018input data\u2019  is provided to the computer system  and that the processor executes the \u2018software\u2019 stored in the memory in response to that \u2018input data\u2019 . The details of the \u2018input data\u2019  of  that is provided to the computer system  will be discussed below with reference to  of the drawings.  illustrate a method for generating a well log output record. , , and  illustrate a method for generating a reduced seismic data output record.  illustrates how the well log output record and the reduced seismic data output record collectively represent the \u2018input data\u2019  that is input to the computer system  of .","In , a well logging truck  lowers a logging tool  into the wellbore  and the logging tool  stimulates and energizes the Earth formation . In response, sensors in the logging tool  receive signals from the formation , and, in response thereto, other signals representative of well log data  propagate uphole from the logging tool  to a well logging truck computer . A well log output record  is generated by the well logging truck computer  which displays the well log data .","In , a more detailed construction of the well logging truck computer  is illustrated. A bus receives the well log data  and, responsive thereto, the well log output record  is generated by the processor , the well log output record  displaying and\/or recording the well log data . The well log output record  is input to the interpretation workstation of .","In , an apparatus and associated method for performing a three dimensional (3D) seismic operation at a location on the earth's surface near the wellbore of  is illustrated.","In , an explosive or acoustic energy source  situated below the surface of the earth  detonates and generates a plurality of sound or acoustic vibrations  which propagate downwardly and reflect off a horizon layer  within the Earth formation . The horizon layer  could be a top layer of rock or sand or shale. When the sound vibrations reflect off the horizon layer , the sound vibrations  will propagate upwardly and will be received in a plurality of receivers  called geophones  situated at the surface of the earth. The plurality of geophones  will each generate an electrical signal in response to the receipt of a sound vibration therein and a plurality of electrical signals will be generated from the geophones , the plurality of signals (referred to as \u2018received seismic data \u2019) being received in a recording truck . The plurality of electrical signals from the geophones  (that is, the \u2018received seismic data\u2019 ) represent a set of characteristics of the earth formation including the horizons  located within the earth below the geophones . The recording truck  contains a computer  which will receive and store the plurality of signals received from the geophones . A seismic output record  will be generated from the computer  in the recording truck  which will include and\/or display and\/or store the plurality of electrical signals that are representative of the characteristics of the earth formation including the horizons  located within the earth below the geophones .","In , a more detailed construction of the recording truck computer  is illustrated. The recording truck computer  of  includes a processor  and a memory  connected to a system bus. The electrical signals, received from the geophones  during the 3D seismic operation and referred to as the \u2018received seismic data\u2019 , would be received into the recording truck computer  via the \u201cReceived Seismic Data\u201d block  in  and would be stored in the memory  of the recording truck computer . When desired, a seismic output record  is generated by the recording truck computer , the seismic output record  being adapted for recording and displaying \u201ca plurality of seismic data\u201d representing the \u2018received seismic data\u2019 traces or sets of electrical signals received by the recording truck computer  from the geophones .","In , a simplified diagram of a mainframe computer  is illustrated which uses a stored \u201cdata reduction software\u201d to perform a \u201cdata reduction\u201d operation on the \u201cplurality of seismic data\u201d included in the seismic output record  of . The mainframe computer  produces a \u201creduced seismic data output record\u201d  in  which is adapted for recording and displaying information that represents \u201creduced\u201d versions of the \u201cplurality of seismic data\u201d included in the seismic output record  of . The mainframe computer  of  includes a mainframe processor  connected to a system bus and a memory  also connected to the system bus which stores a \u201cdata reduction software\u201d therein. The seismic output record  of , which includes the \u201cplurality of seismic data\u201d, is connected to the system bus of the mainframe computer  of . As a result, the \u201cplurality of seismic data\u201d, included in the seismic output record  of , is now being input to the mainframe processor  of . The processor  of the mainframe computer  in  executes the \u201cdata reduction software\u201d stored in the memory  of the mainframe computer. The \u201cdata reduction software\u201d, which is stored in the memory  of the mainframe computer  of , can be found in a book entitled \u201cSeismic Velocity Analysis and the Convolutional Model\u201d, by Enders A. Robinson, the disclosure of which is incorporated by reference into this specification. When the \u201cdata reduction software\u201d in memory  is executed, the mainframe processor  will perform a \u201cdata reduction\u201d operation on the \u201cplurality of seismic data\u201d that is included in the seismic output record  of . When the \u201cdata reduction operation\u201d is complete, the mainframe processor  will generate a \u201creduced seismic data output record\u201d  which will record and is adapted for displaying information representing a \u201creduced version\u201d of the \u201cplurality of seismic data\u201d included in the seismic output record  of , and including a set of characteristics pertaining to the earth formation located near the wellbore of , the characteristics including the location and structure of the horizons  of .","In , the well log output record  of  and the reduced seismic data output record  of  collectively and in-combination represent the \u2018input data\u2019  of  that is input to the computer system  of .","A functional description of the operation of the \u2018FM Framework\u2019  of  will be set forth in the following paragraphs with reference to  of the drawings.","As noted earlier, \u2018Field management (FM)\u2019 is a simulation workflow involving the generation of \u2018predictive scenarios\u2019 in order to assist in field development plans, surface facility design\/de-bottlenecking, uncertainty\/sensitivity analysis, and instantaneous or lifetime revenue optimization from a hydrocarbon field. The generation of these \u2018predictive scenarios\u2019 during the FM simulation workflow involve, among others, the usage of reservoir simulators (, of ), surface-network simulators (, of ), process-modeling simulators, and economics packages. The computer system  of  will generate these \u2018predictive scenarios\u2019 by executing the \u2018FM simulation workflow\u2019 software (including the \u2018FM Framework\u2019 ) that is stored in the memory of the computer system  of  in response to the \u2018input data\u2019 . The \u2018input data\u2019  is shown in , the \u2018input data\u2019  being generated as shown in . The \u2018Recorder or Display Device\u2019 of the computer system of  will record or display these \u2018predictive scenarios\u2019. When these \u2018predictive scenarios\u2019 are generated by the computer system  of , a drilling rig, similar to the drilling rig  shown in FIG. , can attempt to extract the oil and\/or gas and\/or other hydrocarbons from the Earth formation. An example of the Earth formation is shown in .","The function of \u2018Field Management\u2019 has been distributed among reservoir simulators and a controller that couples the reservoir simulators to surface facility network simulators.","In this specification, an independent and unified \u2018FM Framework\u2019  of  is disclosed which is completely decoupled from surface facility network simulators , and subsurface reservoir simulators , , as shown in . The \u2018FM Framework\u2019  of  represents the \u2018FM simulation workflow\u2019 software that is stored in the memory of the computer system  of .","However, even though the \u2018FM Framework\u2019  of  is completely decoupled from surface facility network simulators , and subsurface reservoir simulators , , the \u2018FM Framework\u2019  is \u2018Portable\u2019, and, as a result, the surface facility network simulators , and the subsurface reservoir simulators , can be subsequently re-coupled to the \u2018FM Framework\u2019 . The \u2018FM Framework\u2019  is \u2018Portable\u2019 because it has a clearly defined \u2018adaptor interface\u2019 for simulators (surface and subsurface) and external FM algorithms. Any black-box simulator may become part of the Field Management (FM) system by simply adhering to the FM \u2018adaptor interface\u2019. The FM \u2018adaptor interface\u2019 helps decouple mathematical modeling details from reservoir engineering concepts. This means that the Field Management (FM) strategies remain unchanged when the details of the underlying mathematical model changes. In particular, the \u2018FM Framework\u2019  of  is \u2018Portable\u2019 because the \u2018FM Framework\u2019  includes one or more adaptors , , , , each adaptor having a corresponding \u2018open interface\u2019 , , , . As a result, one or more of the surface or subsurface simulators , , , of  (and one or more external Field Management algorithms) can be operatively coupled to the \u2018FM Framework\u2019  via the \u2018open interface\u2019 , , , of an adaptor , , , of the \u2018FM Framework\u2019  for the purpose of performing Field Management functions. The simulators , of  can be operatively coupled to the \u2018FM Framework\u2019  by adhering to the published \u2018interface characteristics\u2019  of  associated with the open interface , of the adaptors , of the \u2018FMReservoirMgr\u2019 node of the FM Framework  of . The simulators , of  can be operatively coupled to the \u2018FM Framework\u2019  by adhering to the published \u2018interface characteristics\u2019  of  associated with the open interface , of the adaptors , of the \u2018NetworkMgr\u2019 node of the FM Framework  of .","When the one or more of the surface and\/or subsurface simulators , , , of  (and\/or the one or more external Field Management algorithms) are operatively coupled to the \u2018FM Framework\u2019  of  via the \u2018open interface\u2019 , , , of the adaptors , , , of the \u2018FM Framework\u2019  (in the manner described above) for the purpose of performing Field Management functions, the following steps of , representing a \u2018Field Management Strategy\u2019 associated with a \u2018method for Field Management\u2019, can be practiced by the \u2018FM Framework\u2019  of : checking if execution of a Field Management (FM) strategy is needed, step  in . If execution of the FM strategy is needed in response to the checking step, checking if there is any balancing action in the strategy. If there is a balancing action, execute the balancing action, step  in . Then, determine if there is an instruction in the FM strategy's list of instructions, step  of . If there is an instruction in the FM strategy's list of instructions, determine if a triggering criterion of the instruction is met, step  of . If the triggering criterion of the instruction is met, determine if a success criterion of the instruction is met, step  of . If the success criterion of the instruction is not met, determine if there are any actions in the instruction's list of actions, step  of . If there are actions in the instruction's list of actions, executing the actions, step  of , a Field Management Strategy being executed when the actions are executed. In response to the step of executing the actions, determine if the actions modified a topology in a predetermined manner such that balancing (i.e., executing the balancing action) is required, step  of . If the balancing is required, perform a balancing action, step  of .","In addition to \u2018Portability\u2019, the \u2018FM Framework\u2019  of  is also \u2018Flexible\u2019. The \u2018FM Framework\u2019  is \u2018Flexible\u2019 because it enables the user to control the settings of Field Management (FM) strategies allowing for a flexible system that handles conventional cases as well as complicated use cases. That is, the \u2018FM Framework\u2019  allows control over how the \u2018FM Framework\u2019 logic is executed, in order to accommodate real field situations that require such control. The \u2018FM Framework\u2019  flexibility is demonstrated through control of the frequency at which the balancing action is executed, a use by the \u2018FM framework\u2019  of a set of expressions, and a use by the \u2018FM framework\u2019  of dynamic lists of flow entities. The \u2018Flexibility\u2019 of the \u2018FM Framework\u2019  is illustrated by the following examples.","In , an illustration of the \u2018Flexibility\u2019 of the \u2018FM Framework\u2019  of  reflects the frequency at which a balancing action is executed by the \u2018FM Framework\u2019 . Referring back to the steps of  representing a \u2018Field Management Strategy\u2019 corresponding to a method for \u2018Field Management\u2019 associated with the \u2018FM Framework\u2019 , in , the following steps represent the \u2018Flexibility\u2019 of the \u2018FM Framework\u2019  in terms of the frequency at which a balancing action is executed: (1) One of the strategy's instructions consists on choking back wells to reduce the fluid flow velocity in all wells' tubing to keep it below the erosional velocity, step  of , (2) Choking back the well takes place incrementally so that a well is not choked back more than needed, step  of , (3) Choking back one or more than one well impacts the fluid flow in the surface facility network, step  of , (4) Solving the surface facility network model is basically needed after every single incremental choking in any well, which might be prohibitively expensive in terms of CPU time, step  in , and (5) Depending on the speed\/accuracy requirements, the \u2018FM framework\u2019  provides the engineer the options to balance the surface facility network (balancing action) at any of the following levels: (5a) After every single incremental choking back of any well at every reservoir simulator's Newton iteration, (5b) After choking back the well to have its velocity below the limit given the current flow conditions of the well at every reservoir simulator's Newton iteration, (5c) After choking back all wells to have them obey the erosional velocity limit at every reservoir simulator's Newton iteration, () Just at the beginning of every time step, and (5e) Just every two months, or any number of days, step  of .","In , an illustration of the \u2018Flexibility\u2019 of the \u2018FM Framework\u2019  of  reflects its use of Expressions. Therefore, in , the following steps represent the \u2018Flexibility\u2019 of the \u2018FM Framework\u2019  in terms of its use of Expressions: (1) When building a strategy for predicting a field future production, the engineer uses the Expressions of the \u2018FM Framework\u2019  of  for: (1a) Ordering of entities in building dynamic flow-entity lists, (1b) Selection-criteria for building dynamic list of entities, (1c) Triggering and success-criteria for instructions, (1d) Constraints\/objectives for balancing actions, and (1e) Customized Field Management (FM), step  of ; (2) When building an expression, the engineer can use any property (e.g. production oil rate, reservoir volume gas injection rate, bottom hole pressure, etc.) and any appropriate flow entity status (open, closed, shut, etc.) combined to any appropriate flow entity (well, well list, completions, etc), step  of ; and (3) Expressions can be as complex as necessary and appropriate (linear, non-linear, etc); Expressions can be nested to use more sophisticated expressions, step  of .","In , an illustration of the \u2018Flexibility\u2019 of the \u2018FM Framework\u2019  of  reflects its use of Flow Entities. Therefore, in , the following steps represent the \u2018Flexibility\u2019 of the \u2018FM Framework\u2019  in terms of its use of Flow Entities: (1) The engineer wants to build a strategy in which he\/she has a field water production limit to obey; He\/she decides that the optimal scenario consists on performing the following every time the water production limit is hit: (1a) Select the group of wells that is producing above a predefined water cut, (1b) Select the well in that group that is producing most water, (1c) Select the completion from that well that is producing most water, and (1d) Shut the selected completion, step  of ; (2) The engineer builds a dynamic list of groups to which only groups with water cut higher the predefined limit belong (membership to the list gets updated every time the list is used); The list, when updated, results on selecting the group that has the highest water cut among all groups that belong to the list, step  of ; (3) The engineer builds a dynamic list of wells that, when updated, results on the well with the highest water production rate among all the production wells that belong to the selected group, step  of ; and (4) The engineer builds a dynamic list of well completions that, when updated, results on the completion with the highest water production rate among all the completions of the selected well, step  of .","In addition to \u2018Portability\u2019 and \u2018Flexiblity\u2019, the \u2018FM Framework\u2019  of  is also \u2018Extensible\u2019. The \u2018FM Framework\u2019  is \u2018Extensible\u2019 because of its use of custom variables, custom actions, and custom strategies. Custom variables, custom actions, and custom strategies enable the construction of \u2018extensions\u2019 to the \u2018FM Framework\u2019 . These \u2018extensions\u2019 enable almost every conceivable use case to be handled by the \u2018FM Framework\u2019 . These \u2018extensions\u2019 may be made at run-time on the user's platform, without the need for a development cycle and additional software or hardware, other than that provide through the Field Management (FM) system. These \u2018extensions\u2019 may then be saved and reused for application to multiple cases. The \u2018Extensibility\u2019 of the \u2018FM Framework\u2019  is illustrated by the following examples.","In , an illustration of the \u2018Extensiblity\u2019 of the \u2018FM Framework\u2019  of  reflects its use of Custom Variables. Therefore, in , the following steps represent the \u2018Extensibility\u2019 of the \u2018FM Framework\u2019  in terms of its use Custom Variables: (1) The engineer wants to build a simulation model to predict future production from a hydrocarbon reservoir, step  of ; (2) He\/she decides to build one or more strategies using either the FM provided strategy framework or his\/her own custom strategy (or strategies), step  of ; (3) In the process of building the strategy (or strategies), the engineer decides to build one or more actions to be incorporated into instructions, step  of ; and (4) In the process of building the different instructions, expressions are needed at different levels; Expressions can be built using provided properties (and flow entities); If provided ingredients are not enough to accommodate very special requirements, custom variables can be used to accommodate the engineer's plans; Custom variables can be used in combination with all existing ingredients in the FM framework, step  of .","In , an illustration of the \u2018Extensibility\u2019 of the \u2018FM Framework\u2019  of  reflects its use of Custom Actions. Therefore, in , the following steps represent the \u2018Extensibility\u2019 of the \u2018FM Framework\u2019  in terms of its use Custom Actions: (1) The engineer wants to build a simulation model to predict future production from a hydrocarbon reservoir, step  of ; (2) She\/he decides to build one or more strategies using either the FM provided strategy framework or his\/her own custom strategy (or strategies); step  of ; (3) Can all what he\/she has in mind in terms of setting\/removing\/modifying constraints or applying modifications on flow entities be implemented through the provided set of actions (?), step  of ; (4) If yes, select among the provided actions, step  of ; and (5) If no, build as many custom actions as needed to be incorporated in the strategy's (or strategies) set of instructions; These custom actions can always be combined with provided actions to build these instructions, step  of .","In , an illustration of the \u2018Extensibility\u2019 of the \u2018FM Framework\u2019 12 of  reflects its use of Custom Strategies. Therefore, in , the following steps represent the \u2018Extensibility\u2019 of the \u2018FM Framework\u2019 12 in terms of its use Custom Strategies: (1) The engineers wants to build a simulation model to predict future production from a hydrocarbon reservoir, step  of ; (2) Is the FM strategy as illustrated in  flexible enough to accommodate what he\/she has in mind (?), step  of ; (3) If yes, build the strategy using the strategy ingredients provided by the FM framework , step  of ; and (4) If no, build a custom strategy that circumvent the provided FM framework; Strategy ingredients as provided by the FM framework  can be still used (instructions, actions, expressions, flow entities, variables, . . . ), step  of .","Nomenclature","EVR=Erosional velocity ratio","FM=Field Management","GOR=Gas-to-oil ratio","WCT=Water-to-liquid ratio","The following \u2018references (1) through (7)\u2019 are incorporated by reference into the specification of this application:\n\n",{"@attributes":{"id":"p-0220","num":"0433"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"SI Metric Conversion Factors"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u00b0 F.","(\u00b0 F. + 459.67)\/1.8 = K"]},{"entry":[{},"Mscf \u00d7 3.048*","E+02 = m"]},{"entry":[{},"MMscf \u00d7 3.048*","E+05 = m"]},{"entry":[{},"STB \u00d7 1.589","E\u221201 = m"]},{"entry":[{},"873"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"*Conversion factor is exact"]}]}}]}}},"The above description of the \u2018FM Framework\u2019 being thus described, it will be obvious that the same may be varied in many ways. Such variations are not to be regarded as a departure from the spirit and scope of the claimed method or system or program storage device or computer program, and all such modifications as would be obvious to one skilled in the art are intended to be included within the scope of the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A full understanding will be obtained from the detailed description presented hereinbelow, and the accompanying drawings which are given by way of illustration only and are not intended to be limitative to any extent, and wherein:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 2","FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":["FIG. 14","FIG. 10"]},{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 15","FIG. 14","FIG. 15"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 17","FIG. 14","FIG. 17"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIGS. 27 and 28","FIGS. 1 through 26","FIG. 27","FIG. 28","FIG. 27"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIGS. 29 and 30"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIGS. 31","b":["32","33"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 34","FIG. 1"],"b":["25","10"]}]},"DETDESC":[{},{}]}
