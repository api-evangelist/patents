---
title: Information management method, and computer for providing information
abstract: When an online storage service is used to expand a storage capacity of a file server, an amount of communication in synchronization processing and an amount of data retained on the online storage service are reduced to save an amount of charge. In a kernel module provided with a storage area on the online storage service, files are divided into block files and managed, and blocks overlapping with an already registered and saved block file group are not uploaded, but only configuration information of the files is changed. A mechanism is adopted, in which DBs for managing meta information and elimination of duplication are divided and managed, and only updated sections are appropriately uploaded.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09015131&OS=09015131&RS=09015131
owner: Hitachi Solutions, Ltd.
number: 09015131
owner_city: Tokyo
owner_country: JP
publication_date: 20110826
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND ART","CITATION LIST","Patent Literature","SUMMARY OF INVENTION","Technical Problem","Solution to Problem","Advantageous Effects of Invention","DESCRIPTION OF EMBODIMENTS","CONCLUSION","REFERENCE SIGNS LIST"],"p":["The present invention relates to an information management method and a computer for providing information, and for example, relates to an information providing server using an online storage service.","Due to the prosperity of cloud computing, it is predicted that transition from possession of IT to use of IT will be progressed in companies. Under the circumstances, there are more vendors that provide storage services through the Internet. Representative examples of the online storage services include Amazon S3 and Windows (registered trademark) Azure Storage. In general, Web interfaces, such as REST and SOAP, are used to access the online storage services, and fees are charged according to the amount of use of resources. Although problems of security and compliance remain, there is a large advantage in terms of cost. Therefore, it is expected that the use will significantly expand.","In the use of such external online storage services, there is a problem that the amount of charge increases with an increase in the amount of saved data. Since the data is transferred through a WAN, the transfer efficiency is not excellent, and there is a problem that it takes time to save a large amount of data. Furthermore, the fees are charged not only for an amount of storage, but also for an amount of transfer. Therefore, compression of saved and transferred data is an important technique.","Algorithms, such as GZIP and LZH, are typical for systems of data compression in storage. However, in recent years, a system for integrating duplicated data to eliminate a degree of data duplication to realize compression is proposed. For example, an invention of Patent Literature 1 proposes a system in storing a plurality of OS images in a SAN storage, wherein duplication of a common section of the OS images is eliminated to realize a reduction in the storage capacity. In the patent, the storage is divided into a common LU and an individual LU. OS and AP data common to the hosts is stored in the common LU, and host individual data is stored in the individual LU. In this way, duplication is eliminated for the OS and AP data that would be duplicated in conventional techniques, and a reduction in the storage capacity is realized.",{"@attributes":{"id":"p-0006","num":"0000"},"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":"Patent Literature 1: JP Patent Publication (Kokai) No. 2009-230661A"}},"However, Patent Literature 1 adopts a system of internally eliminating duplication in the storage. The amount of communication cannot be reduced, and application to the use of general existing online storage services is difficult. Although there is access over WAN in the online storage services, the amount of data transfer on the network is not reduced. Therefore, there is a problem that the system does not lead to an improvement of performance.","The present invention has been made in view of the circumstances, and the present invention provides a technique for realizing both a reduction in an amount of saved data on a storage service side and a reduction of an amount of data transfer from an information providing server to the storage service side in a cloud environment.","To solve the problem, the present invention proposes a mechanism of using a duplication elimination technique to realize the reductions in the amount of saved data and the amount of transfer in a system of mounting a logical storage area defined in an online storage service on a specific folder to transparently use the online storage service. To realize an improvement in the performance in a cloud environment, write data is cached in advance by a local cache function, and the data is stored in the online storage service while executing a duplication elimination process based on an asynchronous delayed uploading process. A mechanism is provided, in which databases for management are divided and managed, and only updated sections are appropriately uploaded to the online storage service. Since the compression efficiency in the elimination of duplication varies depending on the data type, whether the elimination of duplication can be applied is managed according to the data type. Based on the mechanisms, an efficient online storage service utilization system with a saved amount of charge is realized.","More specifically, a computer for providing information according to the present invention includes: a configuration block database for managing information of a plurality of configuration blocks obtained by dividing each of a plurality of files; a file configuration database for managing configuration information of the plurality of configuration blocks of the plurality of files; and a meta information database for managing meta information including a directory configuration of each of the plurality of files. Each of the configuration block database, the file configuration database, and the meta information database includes a plurality of divided databases formed by dividing stored information. In the computer for providing information, duplication in the plurality of configuration blocks stored in the configuration block database is eliminated to generate a duplication-eliminated configuration block group. Information of a degree of duplication indicating a degree of each of the plurality of configuration blocks being commonly used in other files is managed. The duplication-eliminated configuration block group, the configuration information of the plurality of configuration blocks, and the meta information are uploaded to the online storage service.","According to the present invention, both the reduction in the amount of saved data on the storage service side and the reduction in the amount of data transfer from the information providing server to the storage service side can be realized in the cloud environment.","Other problems, configurations, and advantageous effects will become apparent from the following description of embodiments and the attached drawings.","The present invention relates to a system of dividing files to eliminate data duplication, saving data in an external storage service to save an amount of charge for an amount of storage, and reducing an amount of data transferred through a WAN to improve transfer efficiency while reducing an amount of charge for data transfer.","Hereinafter, an embodiment of the present invention will be described with reference to the attached drawings. However, the present embodiment is just an example for realizing the present invention, and it should be noted that the present embodiment does not limit the technical scope of the present invention. Common components in the drawings are designated with the same reference numerals.","Although a DB will be expressed as a \u201ctable\u201d to describe information in the DB in the following description, the information may not always be expressed by a data structure of a table, and the information may be expressed by data structures, such as a list and a queue, or in other ways. Therefore, a \u201ctable\u201d, a \u201clist\u201d, a \u201cDB\u201d, a \u201cqueue\u201d, and the like can be called \u201cinformation\u201d to indicate independence of the data structure.","Expressions, such as \u201cidentification information\u201d, \u201cidentifier\u201d, \u201ctitle\u201d, \u201cname\u201d, \u201cappellation\u201d and \u201cID\u201d, can be used to describe the content of the information, and the expressions can replace each other.","In the following description, a \u201cmodule\u201d is handled as a subject. However, functions of the module can also be realized by a program. In this case, the program can be executed by a processor to execute a defined process using a memory and a communication port (communication control apparatus). Therefore, the processor may be handled as a subject in the description.","<Configuration of System>",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 1","b":["103","101","105"]},"The user terminal  can be connected to the file server  through a LAN , and the file server  can be connected to the online storage service  through a WAN . The file server  is only described as a representative server that provides information, and the arrangement is not limited to this. Therefore, the file server can be reread as an information providing server such as a Web server.","The online storage service  discloses and provides a Web interface for accessing storage, and the storage can be accessed through the WAN . Although the file server  is illustrated as an example, the file server  can generally be any server, such as a Web server and an operational server, in which there is a need for storing data in the online storage service .","A CIFS\/NFS service  and a capacity expansion module  operate in the file server . A secondary storage device  stores a configuration block DB group , a meta information DB group , a file configuration DB group , and a cache block file . Although not illustrated, the file server  includes a CPU (MPU) and a memory for operating various programs.","The CIFS\/NFS service  is a service for operating a local file according to a request and returning requested data when there is an access from a user terminal through a CIFS\/NFS protocol and is a section that provides basic functions of the file server.","The capacity expansion module  mounts a designated storage area of the online storage service  on a designated local folder on the file server  to process a file operation request for the folder, reads file data in the storage area on the online storage service , and executes data synchronization processing from the file server  to the storage area. This module allows using the storage area on the online storage service  to seamlessly expand the storage capacity on the file server .","A file written in the folder mounted with the storage area on the online storage service  is saved as cache data in the secondary storage device  in a first time and is divided in an upload process by the capacity expansion module . A duplication elimination process is applied to the file, and the file is uploaded to the storage area on the online storage service . In file reading, data in the local cache block file  is returned if there is the data. If the data does not exist, a corresponding configuration block file is downloaded from the online storage service . For the simplification, although a block length to be divided is assumed to be a fixed length in the discussion except for a block at the tail end of the file, the invention is not limited to this, and the same discussion applies to the variable length.","The configuration block DBs (group)  are divided DBs (group) (see ) for managing configuration block files that form the files after the duplication elimination process. The meta information DBs (group)  are divided DBs (see ) storing meta information of the files. The file configuration DBs (group)  are divided DBs (see ) for managing which configuration block files form the files. The divided DBs denote DBs formed by dividing a DB into a plurality of DBs (see ). The reason that each DB is handled as divided DBs is to improve the transfer efficiency of data by uploading only an updated section when DB information is to be uploaded to the online storage service through the WAN. To manage updated divided DBs, a divided DB management table is held for each divided DB group in the capacity expansion module.","Meanwhile, the storage area of the online storage service  stores a configuration block file group , a meta information DB file group , a configuration block DB file group , and a file configuration DB file group . The configuration block file group  is a set of configuration block files after the elimination of duplication. The meta information DB file group  is a DB file group of the meta information DB group  on the file server . Similarly, the configuration block DB file group  is a DB file group of the configuration block DB group . The file configuration DB file group  is a DB file group of the file configuration DB group .","If Amazon S3 is assumed as an example of the online storage service , the storage area is equivalent to a \u201cbucket\u201d. A kernel module (for example, a FUSE-based file system module) that mounts the bucket on a specific directory can be considered as a specific example of implementation of the capacity expansion module . Although the implementation is assumed in the following description, this does not limit the present invention.","<Meta Information DB>",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 2","b":["109","109","109"]},"For example, the table includes, as constituent attributes, a file\/directory ID , a parent directory ID , a file\/directory name , and Stat information .","The file\/directory ID  includes unique IDs for identifying the files and the directories. The parent directory ID  denotes the file\/directory ID  of parent directories of the files or directories of the file\/directory ID  in a directory structure constructed in the mounted folder. The file\/directory name  indicates name information of the files and directories designated by the file\/directory ID . The Stat information  stores data of Stat structures, such as update date and time, size, and mode.","<Configuration Block DB>",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 3","b":["108","108","301","302","303"]},"The configuration block file ID  includes identification IDs of configuration block files to be saved in the online storage service after the duplication elimination process. The hash value  includes hash values of the configuration block files, and values calculated by hash algorithms, such as MD5 and SHA256, are stored. The reference count  indicates the numbers of references when there are files including the configuration block files as constituent elements. When the reference count  is 0, it indicates that the configuration block file is no longer a constituent element of any file, and the entry is deleted from the configuration block DB .","<File Configuration DB>",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 4","b":["110","110","401","402"]},"The configuration list pointer  stores pointers pointing a configuration list . The configuration list  stores a configuration block file ID  in list structures. Individual files include sets of configuration block files, and the table manages the configuration information. More specifically, the list of the configuration block file ID  in the configuration list  indicates, sequentially from the top, permutation of the configuration block files forming the files of the file\/directory ID . From the table, for example, it can be recognized that the files indicated by file\/directory ID=00 . . . 01 include configuration block files of b00, b01, . . . .","<Process of Accessing Divided DBs>",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 5","FIG. 5"],"b":["108","109","110","103"]},"In , a divided DB query module  is a module in the capacity expansion module  and is a module that issues a query for a divided DB. To search a file by a key value, the divided DB query module  calculates a hash value of the key value to query a divided DB management table . The divided DB query module  acquires a divided DB identification number indicating the divided DB that stores the file and issues a query to the corresponding divided DB.","In a case of a query for updating a divided DB, the divided DB query module  turns on a Dirty flag in a corresponding entry in the divided DB management table and manages the updated divided DB after periodical synchronization processing.","<Divided DB Management Table>",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 6","b":["505","601","602","603","505","108","109","110"]},"The divided DB identification number  includes IDs provided to the individual divided DBs. The hash value  for classifying storage location includes hash values for calculating the hash values when key values of search are provided to indicate which divided DB stores the data. The Dirty flag  includes flags indicating whether the corresponding divided DBs are updated after process of synchronization with the online storage service, and the Dirty flag  is used to determine whether to upload the divided DBs in the next synchronization processing.","<File Open Process>",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 7"},"When an OPEN request is issued for a file in a mount folder, the capacity expansion module  receives the OPEN request (step ) and checks whether the cache block file of the OPEN-requested file exists in the secondary storage device  (step ).","If the cache block file exists in the secondary storage device , the capacity expansion module  opens the folder storing the cache block file group and returns the file identifier to an upper level (step ).","If the cache block file does not exist in the secondary storage device , the capacity expansion module  generates a folder for storing the cache block file group on the secondary storage device  and returns the file identifier to the upper level (step ).","<File Read Process>",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 8"},"When a READ request is issued for a file in a mount folder, the capacity expansion module  receives the READ request (step ) and determines which block file of the READ-requested file is requested based on an offset and a size to check whether the corresponding cache block file exists in the secondary storage device (step ).","If the cache block exists in the secondary storage device , the capacity expansion module  reads necessary data from the cache block file group and packs the data into a READ buffer to return the READ buffer to the request source (step ).","If the cache block does not exist in the secondary storage device , the capacity expansion module  searches the file configuration DB based on the offset value and the size that are arguments of the READ request and acquires the configuration block file ID to be downloaded (step ). The capacity expansion module  solves and downloads a storage location URI on the online storage service  from the acquired configuration block file ID to save the data in the cache (step ) and further reads necessary data from the saved cache block file group  and packs the data into a READ buffer to return the READ buffer to the request source (step ).","<File Write Process>",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 9"},"When a WRITE request is issued to a file in a mount folder, the capacity expansion module  receives the WRITE request (step ) and determines which block file of the WRITE-requested file is requested based on an offset and a size to check whether the corresponding cache block file exists in the secondary storage device (step ).","If the cache block file exists in the secondary storage device, the capacity expansion module  overwrites the corresponding cache block file group with data and returns the size information to the request source (step ).","If the cache block file does not exist in the secondary storage device, the capacity expansion module  newly writes a cache block file group and returns the size information to the request source (step ). The capacity expansion module  sets a block corresponding to the written section as well as the Dirty flag of the updated divided DB group and records that there is an update (step ).","<File Delete Process>",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 10"},"When a deletion request is issued for a file\/directory in a mount folder, the capacity expansion module  receives the deletion request (step ) and deletes the entry of the file or the directory to be deleted from the meta information DB group (step ).","Subsequently, the capacity expansion module  registers the file\/directory ID to be deleted in a deletion file\/directory list (not shown) managed by the capacity expansion module (step ). The deletion target is registered in the list here, and the actual deletion is performed at predetermined timing. Therefore, the data is not immediately deleted, but the data is registered in the list to acknowledge that the file is to be erased at the predetermined timing.","If the cache block file group of the files to be deleted is locally saved, the capacity expansion module  further deletes the files (step ). The duplication elimination process is not applied to the cached data. The deletion of the cached data is not a process executed in conjunction with the process executed in steps  and . Therefore, the deletion can be performed at any timing after the reception of the deletion request.","<Data Upload Process>",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 11","b":"107"},"In the thread, the capacity expansion module  individually applies a duplication elimination process to the updated cache block file group to check whether the cache block file is included in the already registered configuration block file group (step ). Details of the duplication elimination process will be described later in . As can be recognized from , the Dirty flag is ON when the process of step  is finished in the case of file update. This is because the Dirty flag is set to ON in step .","The capacity expansion module  executes the duplication elimination process and sequentially uploads the newly registered cache block file group without duplication to the online storage service  (step ).","The capacity expansion module  refers to the deletion file\/directory list and the file configuration DB group  to reduce the reference counts of the configuration block DB group  by one for the configuration block files that form the deleted files, deletes the corresponding entries in the file configuration DB group , and turns on the Dirty flags of the corresponding divided DBs (step ).","The capacity expansion module  deletes the entries, in which the reference counts of the configuration block DB group  have become 0, and deletes the corresponding configuration block files from the online storage service  (step ).","Subsequently, the capacity expansion module  refers to the divided DB management tables  () regarding the divided DBs and uploads the divided DB files with Dirty flags (step ).","The capacity expansion module  finishes the upload process thread when the upload is completed and finishes the data synchronization processing between the file server and the online storage service.","<Duplication Elimination Process>",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 12"},"When a cache block file to be checked is provided, the capacity expansion module  first acquires the hash value of the cache block file (step ).","The capacity expansion module  then searches the configuration block DB group  to check whether there is a block with the same hash value in the DB group (step ).","If there is no file as a result of the verification of the existence of the file with the same hash value (No in step ), the capacity expansion module  newly adds and registers an entry in the configuration block DB (step ) and turns on the Dirty flag on the divided DB management table  corresponding to the updated divided DB in the configuration block DB group  (step ).","On the other hand, if there is a file with the same hash value (Yes in step ), the capacity expansion module  increases the reference count of the entry with the same hash value in the configuration block DB group  by one (step ) and updates the configuration block file ID in the configuration list corresponding to the cache block file of the file configuration DB group  (step ). The capacity expansion module  turns on the Dirty flag on the divided DB management table  corresponding to the divided DB of the updated configuration block DB group  and the file configuration DB group  (step ).","According to the configuration, data is compressed by elimination of duplication in the file server  on the local side when the data is saved on the online storage service . In this way, the amount of data retained in the online storage service  and the amount of communication can be reduced, and the amount of charge can be saved. The synchronization processing and the download processing can be speeded up by reducing the amount of communication. The synchronization processing can be speeded up by implementing the mechanism of dividing the DBs, such as the meta information DBs and the configuration block DBs, to manage the updated sections to upload only the updated sections to the online storage service.","In the present embodiment, each of the configuration block DB, the file configuration DB, and the meta information DB includes a plurality of divided databases formed by dividing the stored information into a plurality of databases. The duplication in the plurality of configuration blocks stored in the configuration block DB is eliminated to generate the duplication-eliminated configuration block group. In the configuration block DB, the information of the degree of duplication (reference count) indicating the degree of each of the plurality of configuration blocks being commonly used in other files is managed. The duplication-eliminated configuration block group, the configuration information of the plurality of configuration blocks, and the meta information are uploaded to the online storage service. In this way, the data can be saved in the online storage service, with the duplication of the data being eliminated. Therefore, the amount of charge for the used capacity and the amount of communication can be saved.","Furthermore, in the present embodiment, whether the added or updated configuration block overlaps with the plurality of configuration blocks in the configuration block DB is determined. The information of the degree of duplication (reference count value) is updated (reference count value is incremented) for the duplicated configuration block. The information of the divided DB in the configuration DB storing the updated configuration block is uploaded to the online storage service. In this way, only the divided DB as an updated section is uploaded to the online storage service. Therefore, the amount of communication between the file server (information providing server) and the online storage service can be reduced, and the transfer speed can be increased.","When data of a configuration block is updated in the configuration block DB, change occurrence information (Dirty flag) indicative of an occurrence of a change in the divided DB, to which the updated configuration block belongs, is managed. More specifically, the Dirty flag is provided to the information for managing the divided DB. Only the divided DB, to which the updated configuration block belongs, is uploaded to the online storage service according to the change occurrence information. The same applies when a configuration block is newly added, and if it is determined that there is no other duplicated configuration blocks in the configuration block DB regarding the added configuration block, the change occurrence information (Dirty flag) indicative of occurrence of a change in the divided DB, to which the added configuration block belongs, is provided to the information for managing the divided DB. Only the divided DB, to which the added configuration block belongs, is uploaded to the online storage service according to the change occurrence information. In this way, even if the information on the database is updated or information is newly added, not all information on the database is uploaded to the online storage service, but only the divided DB including the updated information is uploaded. Therefore, the synchronization processing of the update data can be executed while reducing the amount of communication in the upload.","The information of the degree of duplication (reference count value) includes a count value indicating the number of times the configuration block is referenced in other files. When a deletion request of the configuration block is issued, the reference count value is reduced in response to the deletion request. If there is a configuration block in which the count value has become 0, the change occurrence information (Dirty flag) indicative of deletion of the configuration block in the divided DB, to which the configuration block with the count value 0 belongs, is provided to the information for managing the divided DB. The divided DB, to which the deleted configuration block belongs, is uploaded to the online storage service according to the change occurrence information.","If a file read request is issued from the user terminal, the configuration block corresponding to the target file of the file read request is specified based on the file configuration DB. The information storage location on the online storage service is specified (storage location URL is solved) for the specified configuration block. The target configuration block is downloaded from the online storage service and cached in the computer for providing information to form read data to provide the read data to the user terminal. In this way, the performance in data download during READ can be improved while reducing the communication data between the online storage service and the file server.","The present invention is not limited to the embodiment, and in an execution phase, the constituent elements can be modified without departing from the concept of the present invention to embody the present invention. Appropriate combinations of a plurality of constituent elements disclosed in the embodiment can form various inventions. For example, some of the constituent elements illustrated in the embodiment may be deleted. Constituent elements across different embodiments may also be appropriately combined.","Part or all of the configurations, functions, processing units, processing sections, and the like illustrated in the embodiment may be realized by hardware, such as by designing an integrated circuit. A processor may interpret and execute programs for realizing the functions to realize the configurations, functions, and the like by software. The programs for realizing the functions and the like as well as information, such as tables and files, can be stored in a recording or storage device, such as a memory, a hard disk, and an SSD (Solid State Drive), or in a recording or storage medium, such as an IC card, an SD card, and a DVD.","In the embodiment, control lines and information lines considered necessary for the description are illustrated, and all control lines and information lines in a product are not necessarily illustrated. All components may be connected to each other.",{"@attributes":{"id":"p-0089","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":[{"@attributes":{"id":"ul0002-0001","num":"0088"},"b":"101"},{"@attributes":{"id":"ul0002-0002","num":"0089"},"b":"102"},{"@attributes":{"id":"ul0002-0003","num":"0090"},"b":"103"},{"@attributes":{"id":"ul0002-0004","num":"0091"},"b":"104"},{"@attributes":{"id":"ul0002-0005","num":"0092"},"b":"105"},{"@attributes":{"id":"ul0002-0006","num":"0093"},"b":"106"},{"@attributes":{"id":"ul0002-0007","num":"0094"},"b":"107"},{"@attributes":{"id":"ul0002-0008","num":"0095"},"b":"108"},{"@attributes":{"id":"ul0002-0009","num":"0096"},"b":"109"},{"@attributes":{"id":"ul0002-0010","num":"0097"},"b":"110"},{"@attributes":{"id":"ul0002-0011","num":"0098"},"b":"111"},{"@attributes":{"id":"ul0002-0012","num":"0099"},"b":"112"},{"@attributes":{"id":"ul0002-0013","num":"0100"},"b":"113"},{"@attributes":{"id":"ul0002-0014","num":"0101"},"b":"114"},{"@attributes":{"id":"ul0002-0015","num":"0102"},"b":"115"},{"@attributes":{"id":"ul0002-0016","num":"0103"},"b":"116"},{"@attributes":{"id":"ul0002-0017","num":"0104"},"b":"117"},{"@attributes":{"id":"ul0002-0018","num":"0105"},"b":"201"},{"@attributes":{"id":"ul0002-0019","num":"0106"},"b":"202"},{"@attributes":{"id":"ul0002-0020","num":"0107"},"b":"203"},{"@attributes":{"id":"ul0002-0021","num":"0108"},"b":"204"},{"@attributes":{"id":"ul0002-0022","num":"0109"},"b":"301"},{"@attributes":{"id":"ul0002-0023","num":"0110"},"b":"302"},{"@attributes":{"id":"ul0002-0024","num":"0111"},"b":"303"},{"@attributes":{"id":"ul0002-0025","num":"0112"},"b":"401"},{"@attributes":{"id":"ul0002-0026","num":"0113"},"b":"402"},{"@attributes":{"id":"ul0002-0027","num":"0114"},"b":"403"},{"@attributes":{"id":"ul0002-0028","num":"0115"},"b":"404"},{"@attributes":{"id":"ul0002-0029","num":"0116"},"b":"501"},{"@attributes":{"id":"ul0002-0030","num":"0117"},"b":"502"},{"@attributes":{"id":"ul0002-0031","num":"0118"},"b":"505"},{"@attributes":{"id":"ul0002-0032","num":"0119"},"b":"601"},{"@attributes":{"id":"ul0002-0033","num":"0120"},"b":"602"},{"@attributes":{"id":"ul0002-0034","num":"0121"},"b":"603"}]}}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
