---
title: Emulation interface system
abstract: An integrated circuit with multiple circuit cores each of which have integrated emulated circuits, and an emulation interface module, such that the integrated circuit has an on-chip debugging system. As cores other than a processor core have integrated emulation circuits, debugging of programs and operations of systems-on-a-chip becomes viable.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07058855&OS=07058855&RS=07058855
owner: Infineon Technologies AG
number: 07058855
owner_city: Munich
owner_country: DE
publication_date: 20020724
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present invention relates to the testing and debugging of integrated circuits, and more particularly, the use of on-chip-debugging circuitry in ASICs such as systems-on-a-chip.","Continuing progress in the field of semiconductor technology, and especially, semiconductor fabrication, allows more and more circuitry to be placed on a single integrated circuit. This enables an increasing number of functions to be placed on a single integrated circuit. Therefore, a set of functions which formerly would be distributed across multiple integrated circuits mounted on a printed circuit board (PCB), may now be aggregated on a single integrated circuit. Such an integrated circuit is often called a \u201cSystem on a Chip\u201d (SOC). The rapid development and commercialization of such SOCs yields new problems for the SOC programmer, system design engineer, or the system integration engineer. One such problem is the design validation and debugging of programs, either in firmware or in software, which are to run on the SOC.","Often, an SOC includes the functions of an integrated circuit called an \u201cembedded processor.\u201d In the past, embedded processors were more likely to be found as separate integrated circuits on PCBs. Embedded processors are microprocessors often used for controlling apparatuses and performing other tasks for which a more expensive general purpose CPU was not appropriate. Continuing progress in the field of semiconductor technology has blurred the lines between embedded processors and general purpose processors. The use of embedded processors has raised similar program testing and debugging issues as those now presented with respect to SOCs. A variety of tools have been developed to efficiently debug programs on embedded processors. One such tool is the logic analyzer, which is a general purpose tool that, when attached to an embedded processor main bus and various other pins, can provide passive data collection regarding the performance of software on an embedded processor. A pin, in this context, is a connection wire off an integrated circuit. Another tool is an in-circuit-emulator, a processor-specific tool which emulates the function of the target processor while allowing access to information about the performance of the program run on the emulated processor. Moreover, the in-circuit-emulator may change the type and kind of information to which it provides access. In addition, the in-circuit-emulator would allow the state of the embedded processor to be changed (for example, register values could be specifically and independently altered). In each case, these various tools generate data regarding the execution of a program on a processor.","Another approach to debugging embedded processors is to integrate or embed emulation circuits in the processor (called \u201con-chip-emulation\u201d). This approach has become more common as embedded processors have achieved progressively higher processing speeds and register widths, thus increasing the needed output bandwidth. This type of emulation may be referred to as an On-Chip-Debug System, hereinafter \u201cOCDS.\u201d An OCDS consists of circuits to monitor the state of an embedded processor, to configure the state of an embedded processor, and to communicate with an external debug tool. The external debug tool is often connected to a host computer running debugging software, and acts as a translator between the OCDS and a host computer such as a PC.","It is noted that the \u201cstate\u201d of a microprocessor is its condition given in terms of the contents of its registers, internal flags, local memory, etc. Similarly, the state of a register or other memory is its condition including the value stored within it.","A variety of protocols and standards have been established concerning embedded processors that establish parameters for OCDSs. The Joint Test Action Group standard, referred to as \u201cJTAG\u201d, is the IEEE standard for boundary scans (IEEE 1149.1). Among other things, it establishes the parameters for testing a series of input\/output registers through a set of dedicated testing pins. JTAG is the standard interface for sending commands and performing data exchange with embedded processors. JTAG is relatively simple but comparatively slow interface, exchanging about 10 MBits\/s at 10 MHz of information. It is often used even in the context of other interfaces to set up test conditions, send control commands and the like.","Another interface standard for OCDSs is the Nexus 5001 Standard for a Global Embedded Processor Debug Interface (IEEE-ISTO 5001). This interface standard is capable of a much higher bandwidth, the bandwidth necessary to deal with so-called \u201ctrace information\u201d (see below) which can be output at a high rate, e.g. 100\u2013200 MHz. Nexus 5001 has a number of different versions that call for different levels of control and access of the target processor. The simplest case of the Nexus 5110 standard can be implemented using a JTAG interface. The higher bandwidth of the Nexus 5001 standard is often implemented just to read out data from an embedded processor, but the bandwidth may be applied bi-directionally.","Other standards exist for implementing an OCDS in an embedded processor. Some manufactures of embedded processors create and maintain a proprietary standard for their processors. An example of a company doing so is ARM\u00ae.","Among the capabilities that an OCDS of an embedded processor should have to debug a program is the ability to collect trace information. Trace information includes program trace information such as time stamps and branch messages. The external debug tool and\/or the host computer can use this program trace information to reconstruct the program flow. Another type of trace information that should be collected by the OCDS is data trace information. Data trace information is a list of reads and writes (values and locations) to memory performed by the embedded processor.","The OCDS may also have the capability of monitoring for specified events in the target processor. Such events include breakpoints and watchpoints. Break points or watchpoints are specified conditions for which the OCDS monitors the embedded processor. If a specified condition occurs (e.g., the value of specified register equals a specification) then either the operation of the embedded processor is halted (a breakpoint) or a note that the condition occurred is made (watchpoint). The OCDS should collect such event information. Preferably, the OCDS may also change the type or amount of trace information gathered as a result of a watchpoint. Further capabilities of an OCDS may include the ability to test and, potentially, alter the value in each individual register of the embedded processor, as well as other memory locations within the embedded processor.","In the past, an embedded processor may have been one of many integrated circuits on a PCB. While the debugging techniques discussed above may be applied to the embedded processor (as a separate integrated circuit), the other integrated circuits of the PCB have not heretofore had OCDS capabilities. Rather, other tests were performed on the PCB board to check the functioning of the other integrated circuits and to obtain debugging information from the other integrated circuits. These tests were necessary so the PCB as a whole could undergo testing and debugging. Note that testing usually occurs during the design phase of a project, while debugging occurs during the implementation phase. All of these tests for debugging multiple chips on a PCB face the same problem-extracting information from chips which usually have no dedicated provision for exporting or outputting state information. Often a test used for debugging a PCB connects and monitors the many lines connecting each chip of the PCB. This allows the input and output signals to the chip to be monitored. As the number of chips increases, the number of lines connecting chips to the rest of the PCB increases proportionately. Therefore, the output of information off the PCB needed to monitor and debug the PCB can also increase as needed, making such debug testing of PCBs practical.","As noted before, the variety of functions performed by multiple integrated circuits on a PCB are now being integrated onto an SOC. One of these functions is that of an embedded processor. A function on an SOC can be described as being performed by a functional unit or core of circuitry. Thus, the functions of an embedded processor may be performed by a processor core. This processor core of circuitry on an SOC will often have a fewer number of pins dedicated for its use than when the equivalent function was performed by a processor as a separate integrated circuit. Increasing the number of pins increases the manufacturing expense. Therefore, fewer pins are available for testing purposes, and on-chip debugging systems become even more important. Thus, an SOC using a processor core will dedicate valuable chip area to on-chip debugging systems. Such on-chip debugging systems, designed in accordance with standards such as NEXUS 5001 will use a set number of pins for testing. Implementation of such an on-chip debugging system for a processing core in an SOC will prevent the activity of a program within the processing core from being hidden and allow the programmer to perform design validation, testing and debugging.","However, an SOC having a processor core will include other circuit cores When the functions of such other circuit cores were performed by separate integrated circuits on a PCB, the passive data collection of the PCB tests noted above were adequate for debugging purposes. However, like the processor core, the other circuit cores will usually have proportionately less pins available than when their equivalent function was performed as a separate integrated circuit, due to the increasing expense of such pins in cost and chip area. As such, process activity in these other circuit cores will be \u201chidden\u201d from (e.g. will be less accessible to) the SOC designer or programmer, as less pins, or lines or other points will be available for monitoring. Rather, information that would have passed between the integrated circuits on a PCB will now remain within the integrated circuit of an SOC and thus be unavailable for detection by a programmer by the previously described methods.","Accordingly, there is a need in the art for a new apparatus and\/or method for validating and debugging an SOC efficiently.","In accordance with one or more aspects of the present invention, an integrated circuit is provided which includes at least one processor core. The integrated circuit also includes at least one processor emulator circuit which is coupled to the at least one processor core and operable to provide information indicative of process activity associated with the at least one processor core. The integrated circuit also includes at least one other core. The integrated circuit also includes an at least one other emulator circuit which is coupled to the at least one other core and operable to provide information indicative of process activity associated with the at least one other core. The integrated circuit also includes an emulation interface circuit coupled to the at least one processor emulator circuit and the at least one other emulator circuit. The emulator circuit is operable to receive the respective information indicative of the process activity associated with the at least one processor core and the at least one other core.","In another aspect of the present invention, the above integrated circuit includes a common reference clock signal. The processor emulator data signals include timing information from the common reference clock signal. The other emulator data signals include timing information from the common clock signal.","In accordance with a further aspect of the present invention, a system for debugging integrated circuits is provided. The system includes a debug tool and a target integrated circuit. The integrated circuit includes at least one processor core. The integrated circuit also includes at least one processor emulator circuit which is coupled to the at least one processor core and operable to provide information indicative of process activity associated with the at least one processor core. The integrated circuit also includes at least one other core. The integrated circuit also includes an at least one other emulator circuit which is coupled to the at least one other core and operable to provide information indicative of process activity associated with the at least one other core. The integrated circuit also includes an emulation interface circuit coupled to the at least one processor emulator circuit, the at least one other emulator circuit, and the debug tool. The emulation interface circuit is operable to receive the respective information indicative of the process activity associated with the at least one processor core and the at least one other core, and output the respective information to the debug tool.","In accordance with a further aspect of the present invention, an enhanced circuit core on an integrated circuit is provided. The enhanced circuit core includes a non-processor core and an emulator circuit. The emulator circuit is coupled to the non-processor core, and is operable to produce non-processor core data signals containing information indicative of process activity associated with the non-processor core.","In accordance with a further aspect of the present invention, a debug tool is provided. The debug tool includes a receiving circuit operable to receive emulation interface circuit data signals including information indicative of process activity in at least one processor core and information indicative of process activity in at least one other core. The debug tool also includes a translation circuit operable to change the emulation interface circuit data signals into host readable data signals. The debug tool further includes a transmitting circuit operable to transmit the host readable data signals.","In accordance with a further aspect of the present invention, an emulation interface circuit on an integrated circuit is provided. The emulation interface circuit includes a first circuit operable to receive information indicative of operative activity associated with the at least one processor core on the integrated circuit. The emulation interface circuit also includes a second circuit operable to receive information indicative of operative activity associated with the at least one other core on the integrated circuit.","In accordance with one further aspect of the present invention, a method of debugging a program operating on an integrated circuit is provided. The method includes detecting information indicative of process activity in a processor core with a processor emulator circuit. The method also includes detecting information indicative of process activity in the other core with the other emulator circuit. The method also includes providing the information indicative of process activity in a processor core to an emulation interface circuit. The method also includes providing the information indicative of process activity in the other core to the emulation interface circuit.","Referring now to the drawings, wherein like numerals indicate like elements, there is shown in  a block diagram of integrated circuit . Preferably, the integrated circuit  is an SOC, for example, an application specific integrated circuit (ASIC). Integrated circuit  preferably includes a plurality of cores of circuitry (e.g., circuit cores , , and\/or others not shown). Some of the types of cores available to an SOC designer are discussed in more detail below. The circuit cores are preferably selected and coupled together using \u201cglue logic\u201d to create the SOC. Such circuit cores as employed by ASICs and other SOCs may also be referred to as functional units, system level macro components, macro functions, function blocks, macro cells, function cells, system level building blocks or any other like terms. Each of these terms refers to a separate group of circuits with a dedicated function or functions.","Preferably, the integrated circuit  includes a processor core , at least one other core , and an emulator interface circuit . The processor core  preferably includes (or is associated with) an emulator circuit , which is operable to provide access to the operation of processor core  (e.g., access to process activity that otherwise would not be monitorable). Emulator circuit  provides data signals on emulator data channel  regarding the state or operation of processor core . Alternatively, information about data flow can be passed from emulation interface circuit  to emulation circuit  over control channel .","Preferably, the emulator circuit  may provide access to the processor core , and thus provide different types and amounts of data over data channel  to emulation interface circuit . Emulation interface circuit  is preferably operable to cause the emulator circuit  to change the type of amount of process activity being monitored in processor core , and thus the type and amount of data being passed over data channel  to emulation interface circuit . By way of example, the emulation interface circuit  may cause emulator circuit  to monitor and pass a great deal more information or less information about the processes within the processor core .","The emulator circuit  is also preferably operable to alter the state (or condition) and operation of the processor core  according to control signals received over emulator control channel . Preferably, emulator interface circuit  provides the emulation control signals over emulator control channel  and receives the data signals indicating the state or condition of the emulator circuit .","Although the specific content of the data signals provided by the emulator circuit  is in large part dependent on the specific type of processor core  employed, in accordance with the invention, it is preferred that the data signals contain information suitable for testing, design validation, debugging, etc. For example, the emulator circuit  might provide program trace and data trace information from the processor core  to the emulator interface circuit . Emulator circuit  may also provide data signals containing information regarding one or more registers within the processor core , preferably information directed to testing, design validation, debugging, etc. For example, emulator circuit  may provide data signals containing the state of one or more registers within the processor core . This information provided by the data signals from emulation circuit  may be considered to give some or all of the state of the processor core .","The emulator circuit  is preferably responsive to the control signals received over emulator control channel  from the emulation interface circuit . Again, the specific content of the control signals is likely to be dependent on the type of processor core  employed. However, the control signals received by emulator circuit  over emulator control channel  may cause changes in both the emulator circuit  and processor core . In a preferred embodiment, the control signals may cause the emulator circuit  to monitor processor core  for specified events such as watchpoints or breakpoints, or to change the amount or type of trace information gathered. If emulator circuit  is able to receive such control signals, emulation data signals received by the emulation interface circuit  over emulator data channel  may include information regarding such specified events as breakpoints and watchpoints.","In another embodiment, the control signals may cause emulator circuit  to change the state of circuits in processor core . In another embodiment, the control signals may cause emulator circuit  to change the state of registers within processor core . Additionally, the control signals may cause emulator circuit  to change the state of the memory locations in the processor core. If emulator circuit  is able to receive such control signals, emulation data signals received by the emulation interface circuit  over emulator data channel  would include information regarding the state of such memory locations.","Other core  preferably includes (or is associated with) an emulator circuit , which is operable to provide access to the operation of the other core . Other core  is not a processor core. Emulator circuit  preferably provides access to the circuits and functions within the other core  to facilitate testing, design validation, debugging, etc. To that end, the emulator circuit  preferably provides data signals on emulator data channel  to the emulation interface circuit . The specific content of the data signals provided by emulator circuit  will vary depending on the specific type of other core  employed. The range of variation is very large to the large number of possible other cores . For example, if other core  is primarily analog circuitry, then emulation circuit  might provide information regarding when the voltage of a specific point exceeds a programmed level. If the other core  is primarily digital logic circuitry, it may be considered a finite state machine and information regarding the state of the other core may be provided by the emulator circuit . The information, regardless of the type of other core , is preferably for testing, design validation, debugging, etc.","The emulator circuit  is preferably responsive to the control signals received over emulator control channel  from the emulation interface circuit . The specific content of the control signals is likely to be dependent on the type of other core  employed. However, the control signals received by emulator circuit  over emulator control channel  may cause changes in both the emulator circuit  and other core . In a preferred embodiment, the control signals may cause the emulator circuit  to monitor other core  for specified events such as watchpoints or breakpoints, or to change the amount and kind of trace information collected. If emulator circuit  is able to receive such control signals, emulation data signals received by the emulation interface circuit  over emulator data channel  may include information regarding such specified events as breakpoints and watchpoints as well as such trace information.","Control signals provided by emulation circuit  may also cause emulator circuit  to cause a change in operations of other core . By way of example, such changes in operation may include altering the states (or values) in registers in other core . Emulator circuit  may also provide state information or condition information about itself to emulation interface circuit .","Processor core  and other core  are likely to have different commands due to different architectures. If the set of commands are similar enough, or, in other words, the two processors can be modeled as similar enough state machines, then the commands and interpretations controls can reside primarily in the emulation interface circuit . This is desirable as it saves chip real estate. However, in the more general scope where the state machine models of the two processors  and  are very different, the majority of the information and logic needed to command and interpret signals to and from other core  will be in emulator circuit .","The testing, design verification, debugging, etc. activities are preferably influenced by circuits outside the integrated circuit . To that end, the emulator interface circuit  preferably includes a port  through which input\/output (I\/O) information passes to\/from outside the integrated circuit . The I\/O information preferably causes emulator interface circuit  to send the control signals to both emulator circuit  and emulator circuit . Similarly, the data signals from both emulator circuit  and emulator circuit  are preferably provided from the emulation interface circuit  through port  as part of the I\/O information. As noted above, the amount of processing performed by emulation interface circuit  depends on emulator circuits  and . However, the emulation interface circuit  will at least compress information, send and receive messages and select what data to transmit.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 1A","b":["100","100","100","120","120","130","130","110","130","110","130"]},"The term \u201ctime ordering\u201d as used within this specification shall refer to the ordering of pieces of information according to a time stamp associated with each piece. Such time ordering allows information to flow out of the SOC  in any time order, and if all the pieces of information been synchronized by time stamping at the appropriate moment with a reference clock, to be reordered outside the SOC. Thus, the use of a reference clock to time stamp any piece of information for debugging before outputting from the SOC allows the designer to not have to dedicate chip real estate to circuitry for keeping the pieces of information ordered within the SOC, and does not have to account for the increased bandwidth that would be required to move and output the internally time ordered information.","Advantageously, the emulator circuits ,  and the emulator interface circuit  permit an SOC designer or programmer to test, evaluate, and\/or debug the processor core  and\/or the other core  using the emulation interface circuit . Thus, among other things, additional testing capability of other core  is obtained without requiring additional interface circuitry. Indeed, as the emulation interface circuit  would be employed for the emulator circuit  in any case, integrated circuit real estate and fabrication expense are reduced. Further, the use of a single interface circuit  for both processor core  and other core  allows a single port  to be used for both processor core  and other core . Thus, advantageously, the number of pins needed to be dedicated to testing an SOC need not be increased with the number of other cores available.","It is noted that the number of cores available to a designer (for example, that may be listed in ASIC library) for designing an SOC are considerable. Examples include, processor cores, such as the well known ARM (Advanced Risk Machine) processor cores, memory cores, such as RAM memory cores (including the many different varieties of RAM), ROM memory cores, FLASH memory cores, PROM cores, including EPROM and EEPROM cores, and other memory cores. Other cores available in ASIC libraries include digital signal processor cores. These come in many different varieties. Other types of core that are available in ASIC libraries are multimedia cores, which facilitate the coding or decoding of specific formats of media. Examples of multimedia cores include JPEG cores, motion JPEG cores, MPEG decoding cores, MP3 cores, and other media cores. Still other cores available in ASIC libraries are cores that provide for networking. Such cores provide for ETHERNET networking, TCP\/IP networking and\/or any other common networking interface protocol. As SOCs may use analog circuitry (rather than digital logic), analog cores are also readily available in ASIC libraries to perform any of the many functions for which they have an advantage over digital logic cores.","Such SOCs are \u201cmixed-signal\u201d SOCs, containing both analog and digital signals. Often cores themselves will be mixed-signal cores. For example, monitoring the output of an analog circuit will require an Analog-to-Digital Converter (ADC). Alternatively, using a digital signal to control an analog circuit will require a Digital-to-Analog Converter.","Any of the above-noted cores can be provided with circuits for On-Chip-Emulation to allow On-Chip-Debugging-Systems. Thus, an emulation circuit can be employed to perform testing, design validation, and debugging of programs and\/or circuit functions in any of these cores. The ability to collect and control the information from the processor core  and the at least one other core  through the common emulation interface circuit  in accordance with the invention greatly simplifies the debugging and design validation process for the entire SOC and, by extension, an entire PCB on which the SOC may be mounted.","One skilled in the art will appreciate the above described embodiment may be extended to multiple processor cores and multiple other cores. Advantageously, the emulation interface circuit can continue to be shared by the multiple emulator circuits associated with the more than one processor core and the more than one other core.","In another embodiment, a reference clock signal is provided to emulator circuit  and emulator circuit . Preferably, emulator circuit  and emulator circuit  are operable to include timing information from the reference clock signal into the data signal from processor core  and the data signal from other core , respectively. By way of example, emulator circuit  may be operable to include associated timing information with program trace information, data trace information and event information within the data signals from processor core . Similarly, emulator circuit  may be operable to associate timing information with program trace information, data trace information and event information within the data signals from other core . The association of timing information with the respective data signals may be referred to as \u201ctime stamping,\u201d as it assigns a given time to certain pieces of data. Such time stamping by a reference clock signal synchronizes the many different pieces of data from data signals from the processor core  and data signals from other core , such that they may later be time ordered.","In a preferred embodiment, the reference clock signal is the signal provided by either the clock of the processor core  or the clock of the other core . In a more preferred embodiment, the reference clock signal is the signal of the fastest of the core clocks. In another embodiment, a reference clock on the SOC independent of the core clocks provides the reference clock signal.","In another embodiment, debug tool  may include a circuit operable for time ordering the respective time stamped data signals. Preferably, the debug tool  may include a circuit operable for time ordering the program trace information, data trace information and event information from emulator circuit  derived from the operation of processor core , and the program trace information, data trace information and event information from emulator circuit  to derive from the operation of other core .","In yet another embodiment, the host computer, such as a PC, may provide circuitry and\/or software operable to time order the respective time stamped data signals. In yet another embodiment, emulation interface circuit  preferably includes circuits operable to time order the respective time stamped data signals. The data signals provided over emulator data channel  would include associated timing information, and the data signals provided over data channel  would include associated timing information. The software time ordering function would order the respective data signals by time and transmit such time ordered information through port  to debug tool .","An alternative embodiment of the present invention is shown as part of a system in .  is a simplified block diagram of a hard disk system . This hard disk system includes head disk assembly  and power motion IC  which are operatively coupled to a hard disk controller integrated circuit (HDD IC) . HDD IC  is operable to control a hard disk. HDD IC  will allow read and write access to the information available to head disk assembly .","Preferably, HDD IC  includes a processor core , a read\/write channel , a disk controller , and an emulation interface module . The processor core  provides the functions of a microprocessor. Processor core  is shown operatively coupled to program and variable memory . Preferably, program and variable memory  contains the program to be run on processor core , and the variables generated and altered by the program in processor core . Alternatively, processor core  can be considered to contain this memory as an integral part. Processor core  is also operatively coupled to power and motion control IC  through bus . Power and Motion control IC  provides processor core  with specialized control information. Processor core  includes (or is associated with) emulator circuit . Preferably, emulator circuit  is similar in operation to emulator circuit  previously described.","Disk controller  is a circuit core operable to provide control signals to control a head disk assembly such as head disk assembly . Preferably, disk controller  is operatively coupled to buffer memory . Preferably, buffer memory  provides buffer space for data flowing through disk controller . Disk controller  includes (or is associated with) emulator circuit . Preferably, emulator circuit  is similar in operation to emulator circuit  previously described.","Read\/write channel  is a circuit core operable to provide input\/output communications capabilities. Real\/write channel  is shown operatively coupled to head disk assembly . Preferably, read\/write channel  includes (or is associated with) emulator circuit . Emulator circuit  is preferably similar to emulator circuit  previously described. Preferably, processor core , read\/write channel , and disk controller  are operatively coupled to bus .","One example of normal operation of such hard disk system  has a program executing on the processor core . The program is preferably stored in the memory . The variables created and manipulated by the program are also preferably stored in the memory . The program causes the processor core  to operate the hard disk system . The processor core  is operable to provide control signals to disk controller  over bus . These control signals, can cause, among other things, disk controller  to operate head disk assembly  to cause the reading and writing of data. There are a number of combinations of core utilization which may assist disk controller  in generating signals. However, a designer will often attempt to minimize any load on the processor core, which may further complicate design issues beyond the fundamental issue of a lack of any centralized controlling logic circuitry. In one embodiment, the processor core  may request and receive information from the power and motion control IC . Such information is operable to assist the processor core  in generating control signals to be provided to disk controller . Preferably, the control signals provided by disk controller  to operate head disk assembly  are transmitted through power and motion control IC  or read and write channel . Preferably, read\/write channel  provides these control signals from disk controller  to head disk assembly . Preferably, read\/write channel  receives data from head disk assembly . Read\/write channel  transmits this data to disk controller  over data bus (not shown). Preferably, this data may be buffered in buffer memory . Preferably, this buffered data may be outputted from the integrated circuit  by a communications channel not shown.","The program described above enables the input and output of data from the head disk assembly . Such a program may have activity on processor core , disk controller  and read\/write channel . HDD IC  has an emulation interface module  to allow for on-chip emulation. Preferably, the emulator circuit  provides data signals on emulator data channel  regarding the operation of the processor core . Emulator circuit  is preferably operable to alter the state (or condition) and operation of the processor core  according to control signals received over emulator control channel . Preferably, emulator interface circuit  provided the emulation control signals over emulator control channel  and receives the emulation data signals over emulator data channel .","Although the specific content of the data signals provided by emulator circuit  is in large part dependent on the specific type of processor core  employed, and in accordance with the invention, it is preferred that the data signals contain information suitable for testing, design validation, debugging, etc. For example, the data signals provided on data channel  are similar to the data signals provided on emulator data channel . Likewise, the control signals provided by emulation interface circuit  over emulation control channel  are similar to the control signals provided over emulator control channel .","Emulator circuit  preferably provides access to the circuits and their functions within disk controller  to facilitate testing, design, validation, debugging, etc. To that end, emulator circuit  preferably provides data signals on emulator data channel  to emulation interface circuit . The specific content of the data signals provided by emulator circuit  will depend in large part on the specific type of disk controller  employed. Similarly, emulator circuit  provides access to the circuits and functions within read\/write channel  to facilitate testing, design, validation, debugging, etc. To that end, emulator circuit  provides data signals on emulator data channel  to the emulation interface circuit . Again, the specific content of the data signals provided by emulator circuit  will depend in large part on the specific type of read\/write channel  employed.","For example, both disk controller  and read\/write channel  will often include a mixture of analog circuitry and digital circuitry, the later being describable as a finite state machine. Thus, emulator circuit  and emulator circuit  may be able to monitor analog circuitry, for example, for threshold variables, and then pass to emulation interface circuit  the information. Further, emulator circuit  and emulator circuit  may be able to monitor for states and pass information regarding those states to the emulation interface circuit .","The testing, design, validation, debugging, etc. activities are preferably influenced by circuits outside the HDD IC . To that end, the emulator interface circuit  preferably includes a port  through which input\/output (I\/O) information passes to\/from outside the integrated circuit . The I\/O information preferably causes emulator interface circuit  to send the control signals to emulator circuits ,  and . Similarly, the data signals from emulator circuits ,  and  are preferably provided from the emulation interface circuit  through port  as part of the I\/O information. Port  would be connected to a debug tool similar to debug tool .","HDD IC  is an example of an SOC. Formerly, the processor core , the read\/write channel  and the disk controller  would each be independent integrated circuits on a PCB. When the various circuit cores are integrated on a single integrated circuit , the design validation, testing and debugging of the program running on the processor core  and across the rest of the circuit cores becomes much more difficult. Process activity on disk controller  and read\/write channel  would likely be hidden from the programmer. Advantageously, in the present embodiment of the invention, the emulation interface module  may receive testing and debug data signals from emulation circuits  and  of read\/write channel  and disk controller , respectively, and also configure the same emulation circuits  and . This access to information and control renders debugging a program on an SOC much easier. Further, advantageously, the port  is a single point of access from a debug tool to the above mentioned information and control.","Although the invention herein has been described with reference to particular embodiments, it is to be understood that these embodiments are merely illustrative of the principles and applications of the present invention. It is therefore to be understood that numerous modifications may be made to the illustrative embodiments and that other arrangements may be devised without departing from the spirit and scope of the present invention as defined by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 2"}]},"DETDESC":[{},{}]}
