---
title: Operating system sandbox
abstract: An operating system sandbox may include an operating system isolation module configured to restrict an operating system from transmitting machine-readable data and/or machine-readable instructions to an application, based on at least one predefined rule corresponding to abnormal operating system behavior.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09262628&OS=09262628&RS=09262628
owner: Empire Technology Development LLC
number: 09262628
owner_city: Wilmington
owner_country: US
publication_date: 20090911
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["The present disclosure is directed to operating system sandbox systems and methods and, more particularly, to operating system sandboxes configured to isolate an operating system from an application.","In the following detailed description, reference is made to the accompanying drawings, which form a part hereof. In the drawings, similar symbols typically identify similar components, unless context dictates otherwise. The illustrative embodiments described in the detailed description, drawings, and claims are not meant to be limiting. Other embodiments may be utilized, and other changes may be made, without departing from the spirit or scope of the subject matter presented here. It will be readily understood that the aspects of the present disclosure, as generally described herein, and illustrated in the Figures, may be arranged, substituted, combined, and designed in a wide variety of different configurations, all of which are explicitly contemplated and make part of this disclosure.","This disclosure is drawn, inter alia, to methods and systems related to an operating system sandbox for isolating an operating system from harming an application and\/or data associated with the application. An example embodiment generally relates to an operating system sandbox architecture and a method for implementing the operating system sandbox.","Generally, a sandbox may create an isolated operating environment in which applications, operating systems and\/or code may be executed or installed without permanently modifying a computer system. An isolated virtual environment may allow for controlled execution and\/or testing of untrusted applications, operating systems and\/or code.","The present disclosure contemplates that a sandbox may be a security mechanism for isolating applications, code and\/or data from other applications, code and\/or data for security reasons, among others. Such mechanisms may be implemented as applets, virtualized system environments, virtual machines and other similar mechanisms. The present disclosure further contemplates that a sandbox may be utilized to execute untested code or untrusted applications from unverified third-parties, suppliers and\/or untrusted users. In such cases, a sandbox may provide a highly-controlled set of limited resources for applications, code and\/or data to be executed and\/or processed in, such as temporary storage on a hard disk or memory. Many, if not all, interactions between an operating system and an application may be heavily restricted or disallowed.","The present disclosure contemplates that an operating system may be vulnerable and may be corrupted and\/or harmed due to a virus, worm, code exploit or other similar attack. Further, a corrupted operating system may be harmful to applications and\/or data associated with the operating system. The present disclosure contemplates that a sandbox that isolates the operating system may be effective in protecting the applications and\/or data from being harmed. The present disclosure also contemplates that an operating system sandbox may operate as if an operating system is potentially dangerous to the applications and\/or data in communication with the operating system.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 1","FIG. 1"],"b":["10","12","14","16","10","16","12","14","16","10","12","14"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 2","FIG. 2"],"b":["10","12","14","16","18","10","16","12","14","16","18","12","10","18","10","12","14"]},"A VM may generally be described as an isolated virtualization or reproduction of a real machine (such as a computer system, for example). VMs may include system VMs, process VMs, other similar VMs and\/or a combination thereof. A system VM (such as MICROSOFT\u00ae Virtual PC, for example) may provide a complete system platform configured to support the execution of an operating system. A process VM (such as a Java Virtual Machine, for example) may provide a platform configured to support the execution of an application. In one example, a process VM may support a single process. VMs may be implemented as software being executed on a computer system, where the VMs may be limited to the resources provided by the VM.","In some examples, the operating system sandbox may exist as part of a hypervisor process that may provide the VM to the operating system. Calls to operating system functions (including application programming interface (API) calls and interrupts, for example) may be intercepted by a virtualization layer within the hypervisor. An application-provided return pointer may be stored for subsequent use. Data structures may then be established in hypervisor-allocated memory space to store initial system and\/or application status. Hardware monitors may be initialized to measure specific operating system activity during the operating system call. Alternatively, the status of hardware monitors may be read and\/or stored in hypervisor-allocated memory space to be compared with post-operating system-call values. The operating system sandbox layer may (based on the type and\/or nature of the operating system call) protect portions of the application address space to prevent operating system access. In some examples, the operating system may be permitted complete access to the application memory space. In some embodiment, hypervisor memory protection mechanisms may be configured such that any access to application memory space may be intercepted and tested before the access is granted. Control may then be passed to the operating system at an entry point associated with the operating system function, thus providing its own return pointer to the sandbox.","When the operating system returns control to the sandbox, the sandbox may perform any one of numerous operational tests. These tests may include checking return parameters, checking operating system data structures, checking application data structures, checking hardware monitors or other similar tests. If the tests are acceptable, control may be returned to the application using the previously stored return pointer.","Since, in some examples, the trusted hypervisor intervenes in all protected communications between the operating system and the operating system, the hypervisor may potentially detect any irregularities or anomalous behaviors. This may protect application data from many types of operating system infections or malware.","Multiple VMs may operate on the same physical machine where the physical machine's resources may be shared among two or more VMs. For example, one VM operating on a physical machine may execute an operating system sandbox, while another VM operating on the same physical machine may execute an application. In one physical machine architecture, two (or more) VMs may communicate via a hypervisor and\/or VM monitor. In another physical machine architecture, two (or more) VMs may be in direct communication via shared memory. In such an architecture, the operating systems executing in the VMs may be enlightened (e.g. aware of the fact they are not running on physical hardware).",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 3","FIG. 3"],"b":["10","12","14","16","20","22","10","16","12","14","16","20","22","12","20","10","22","10","12","14"]},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 4","FIG. 4"],"b":["24","24","26","28","30","32","24","34","10","12","14","10","34","10","12","14"]},"In an example embodiment, the operating system isolation module  may be configured to protect an application  from being harmed by isolating the operating system  from the application . In one example, such protection may include indicating that the operating system  is operating in an abnormal manner. In another example, protection may include shutting down or terminating the operating system  and\/or the application . In this example, the operating system , the operating system isolation module  and\/or the application  may be implemented in one or more VMs or in one or more physical resources. Other examples may protect the application  by any number of predetermined operations to perform upon detection of abnormal operating system behavior.","In one example, the operating system isolation module  may receive data, commands and\/or instructions from the operating system  without the operating system  having knowledge that it transmitted data, commands and\/or instructions to an operating system isolation module . In other words, the operating system  may have no knowledge of the operating system isolation module's  existence.","The operating system  may attempt to provide data to the application . Such data may include the time, the identification of network ports, and\/or port usage, for example. By implementing the operating system sandbox architecture, the operating system sandbox  may detect abnormal operating system behavior. Such abnormal behavior may include unusually high data flux or repeated input\/output thread usage at a high rate, for example.","The operating system sandbox  may also monitor a variety of indicators of abnormal operating system behavior, which may be defined in one or more rule databases. In one example, a rule database may include predefined rules related to operating system behavior, where the predefined rules include assertions, system calls, signatures of known attackers, patterns of known attackers, anomalies, rates and\/or temporal shifts, among others.","In one example, a predefined rule may be associated with assertions and\/or system calls. The operating system sandbox  may monitor system calls that are transmitted to the operating system  and the information returned to the operating system sandbox . The operating system sandbox  may analyze the returned information for certain semantic assertions that may and\/or must be true. For example, a fork system call may be expected to return two processes. One process may be expected to be returned with an original process identification (PID), while another process may be expected to be returned with a new PID. In this example, any returned information that is different from such expectations may signal a potential problem. In another example, a list of assertions may be generated based on different operating system  documentation. For example, one set of assertions may be generated based on a Microsoft\u00ae Windows operating system and another set of assertions may be generated based on an Apple\u00ae\/Unix operation system.","In one example, a predefined rule may be associated with signatures, patterns and\/or profiles associated with known attackers or malicious code. In one embodiment, the operating system sandbox  may monitor memory for known attack signatures or patterns. Such monitoring may include scanning the memory continuously and\/or at a predetermined time interval. The operating system sandbox  may analyze the signatures, patterns and\/or profiles if they are associated with known attack methods. If certain signatures, patterns and\/or profiles are detected, the operating system  may be compromised and trying to harm the application by triggering a stack overflow or some other known application vulnerability, for example.","In one example, a predefined rule may be associated with anomalous data. In one embodiment, the operating system sandbox  may monitor for anomalous data, such as too much network traffic or traffic to a suspicious port, for example. In one example, the operating system sandbox  may check memory protection. For example, one rule may provide that no application other than a predefined application  and the operating system  may be to read and\/or access the application data  stored in memory. In another example, a predefined rule may be associated with data rates and temporal shifts of data.","In another embodiment, the operating system sandbox  (including the rule database ) may be programmable and updateable on-the-fly. Further, the operating system sandbox  may utilize a cooperative attack detection across multiple machines or VMs. For example, operating system sandbox  may share anomalous data with other predefined trusted applications to generate an improved sense of emerging attack patterns.",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 5","b":["36","38","40","42"]},"Processing begins at operation , which may include processing at least one predefined rule stored in at least one rule database, each predefined rule corresponding to abnormal operating system behavior.","Processing flows from operation  to operation . Operation  may include monitoring the operating system for abnormal operating system behavior associated with the at least one rule.","Continuing from operation  to operation , operation  may include restricting, by the operating system sandbox, transmissions of machine-readable data and\/or machine-readable instructions from the operating system.","Proceeding to operation , operation  may include performing at least one predetermined operation based, at least in part, on a detection of abnormal operating system behavior pursuant to the at least one predefined rule.","In an example embodiment, a storage medium (having computer-readable instructions) may be configured to implement the method of .","In another example embodiment, the monitoring operation may include monitoring operating system calls transmitted to the operating system from the operating system sandbox, receiving returned information from the operating system in response to the operating system calls, and analyzing the returned information based, at least in part, on the rule.","In one embodiment, the monitoring operation may include monitoring a memory device for a signature and\/or pattern of a known attacker or malicious code, and analyzing the signature and\/or pattern based, at least in part, on the rule.","In another embodiment, the monitoring operation may include monitoring data being transmitted to and from the operating system and analyzing the data based, at least in part, on the rule.","With reference to , depicted is a block diagram illustrating an example computing device  that is arranged for operating system sandbox implementations arranged in accordance with at least some embodiments of the present disclosure. In a very basic configuration , computing device  typically includes one or more processors  and system memory . A memory bus  may be used for communicating between the processor  and the system memory .","Depending on the desired configuration, processor  may be of any type including but not limited to a microprocessor (\u03bcP), a microcontroller (\u03bcC), a digital signal processor (DSP), or any combination thereof. Processor  may include one more levels of caching, such as a level one cache  and a level two cache , a processor core , and registers . The processor core  may include an arithmetic logic unit (ALU), a floating point unit (FPU), a digital signal processing core (DSP Core), or any combination thereof. A memory controller  may also be used with the processor , or in some implementations the memory controller  may be an internal part of the processor .","Depending on the desired configuration, the system memory  may be of any type including but not limited to volatile memory (such as RAM), non-volatile memory (such as ROM, flash memory, etc.) or any combination thereof. System memory  may include an operating system , one or more applications , application and\/or user data , an operating system sandbox algorithm  and operating system sandbox data . Operating system sandbox algorithm  may be implemented to efficiently isolate the operating system  from the application  and application\/user data . Operating system sandbox data  may include data obtained from monitoring the operating system  and detecting abnormal operating system  behavior. In some embodiments, operating system sandbox algorithm  may be arranged to operate with operating system sandbox data  to effectuate the isolation of the operating system  from the application  and application\/user data . This described basic configuration is illustrated in  by those components within dashed line .","Computing device  may have additional features or functionality, and additional interfaces to facilitate communications between the basic configuration  and any required devices and interfaces. For example, a bus\/interface controller  may be used to facilitate communications between the basic configuration  and one or more data storage devices  via a storage interface bus . The data storage devices  may be removable storage devices , non-removable storage devices , or a combination thereof. Examples of removable storage and non-removable storage devices include magnetic disk devices such as flexible disk drives and hard-disk drives (HDD), optical disk drives such as compact disk (CD) drives or digital versatile disk (DVD) drives, solid state drives (SSD), and tape drives to name a few. Example computer storage media may include volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data.","System memory , removable storage  and non-removable storage  are all examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which may be used to store the desired information and which may be accessed by computing device . Any such computer storage media may be part of computing device .","Computing device  may also include an interface bus  for facilitating communication from various interface devices (e.g., output interfaces, peripheral interfaces, and communication interfaces) to the basic configuration  via the bus\/interface controller . Example output devices  include a graphics processing unit  and an audio processing unit , which may be configured to communicate to various external devices such as a display or speakers via one or more A\/V ports . Example peripheral interfaces  include a serial interface controller  or a parallel interface controller , which may be configured to communicate with external devices such as input devices (e.g., keyboard, mouse, pen, voice input device, touch input device, etc.) or other peripheral devices (e.g., printer, scanner, etc.) via one or more I\/O ports . An example communication device  includes a network controller , which may be arranged to facilitate communications with one or more other computing devices  over a network communication via one or more communication ports . The communication connection is one example of a communication media. Communication media may typically be embodied by computer readable instructions, data structures, program modules, or other data in a modulated data signal, such as a carrier wave or other transport mechanism, and includes any information delivery media. A \u201cmodulated data signal\u201d may be a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media may include wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, radio frequency (RF), infrared (IR) and other wireless media. The term computer readable media as used herein may include both storage media and communication media.","Computing device  may be implemented as a portion of a small-form factor portable (or mobile) electronic device such as a cell phone, a personal data assistant (PDA), a personal media player device, a wireless web-watch device, a personal headset device, an application specific device, or a hybrid device that include any of the above functions. Computing device  may also be implemented as a personal computer including both laptop computer and non-laptop computer configurations.","The herein described subject matter sometimes illustrates different components contained within, or connected with, different other components. It is to be understood that such depicted architectures are merely examples, and that in fact many other architectures may be implemented which achieve the same functionality. In a conceptual sense, any arrangement of components to achieve the same functionality is effectively \u201cassociated\u201d such that the desired functionality is achieved. Hence, any two components herein combined to achieve a particular functionality may be seen as \u201cassociated with\u201d each other such that the desired functionality is achieved, irrespective of architectures or intermedial components. Likewise, any two components so associated may also be viewed as being \u201coperably connected\u201d, or \u201coperably coupled\u201d, to each other to achieve the desired functionality, and any two components capable of being so associated may also be viewed as being \u201coperably couplable\u201d, to each other to achieve the desired functionality. Specific examples of operably couplable include but are not limited to physically mateable and\/or physically interacting components and\/or wirelessly interactable and\/or wirelessly interacting components and\/or logically interacting and\/or logically interactable components.","With respect to the use of substantially any plural and\/or singular terms herein, those having skill in the art may translate from the plural to the singular and\/or from the singular to the plural as is appropriate to the context and\/or application. The various singular\/plural permutations may be expressly set forth herein for sake of clarity.","It will be understood by those within the art that, in general, terms used herein, and especially in the appended claims (e.g., bodies of the appended claims) are generally intended as \u201copen\u201d terms (e.g., the term \u201cincluding\u201d should be interpreted as \u201cincluding but not limited to,\u201d the term \u201chaving\u201d should be interpreted as \u201chaving at least,\u201d the term \u201cincludes\u201d should be interpreted as \u201cincludes but is not limited to,\u201d etc.). It will be further understood by those within the art that if a specific number of an introduced claim recitation is intended, such an intent will be explicitly recited in the claim, and in the absence of such recitation no such intent is present. For example, as an aid to understanding, the following appended claims may contain usage of the introductory phrases \u201cat least one\u201d and \u201cone or more\u201d to introduce claim recitations. However, the use of such phrases should not be construed to imply that the introduction of a claim recitation by the indefinite articles \u201ca\u201d or \u201can\u201d limits any particular claim containing such introduced claim recitation to inventions containing only one such recitation, even when the same claim includes the introductory phrases \u201cone or more\u201d or \u201cat least one\u201d and indefinite articles such as \u201ca\u201d or \u201can\u201d (e.g., \u201ca\u201d and\/or \u201can\u201d should typically be interpreted to mean \u201cat least one\u201d or \u201cone or more\u201d); the same holds true for the use of definite articles used to introduce claim recitations. In addition, even if a specific number of an introduced claim recitation is explicitly recited, those skilled in the art will recognize that such recitation should typically be interpreted to mean at least the recited number (e.g., the bare recitation of \u201ctwo recitations,\u201d without other modifiers, typically means at least two recitations, or two or more recitations). Furthermore, in those instances where a convention analogous to \u201cat least one of A, B, and C, etc.\u201d is used, in general such a construction is intended in the sense one having skill in the art would understand the convention (e.g., \u201ca system having at least one of A, B, and C\u201d would include but not be limited to systems that have A alone, B alone, C alone, A and B together, A and C together, B and C together, and\/or A, B, and C together, etc.). In those instances where a convention analogous to \u201cat least one of A, B, or C, etc.\u201d is used, in general such a construction is intended in the sense one having skill in the art would understand the convention (e.g., \u201ca system having at least one of A, B, or C\u201d would include but not be limited to systems that have A alone, B alone, C alone, A and B together, A and C together, B and C together, and\/or A, B, and C together, etc.). It will be further understood by those within the art that virtually any disjunctive word and\/or phrase presenting two or more alternative terms, whether in the description, claims, or drawings, should be understood to contemplate the possibilities of including one of the terms, either of the terms, or both terms. For example, the phrase \u201cA or B\u201d will be understood to include the possibilities of \u201cA\u201d or \u201cB\u201d or \u201cA and B.\u201d","While various aspects and embodiments have been disclosed herein, other aspects and embodiments will be apparent to those skilled in the art. The various aspects and embodiments disclosed herein are for purposes of illustration and are not intended to be limiting, with the true scope and spirit being indicated by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":["The foregoing and other features of the present disclosure will become more fully apparent from the following description and appended claims, taken in conjunction with the accompanying drawings. Understanding that these drawings depict only several embodiments in accordance with the disclosure and, therefore, are not to be considered limiting of its scope, the disclosure will be described with additional specificity and detail through use of the accompanying drawings.","In the drawings:",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
