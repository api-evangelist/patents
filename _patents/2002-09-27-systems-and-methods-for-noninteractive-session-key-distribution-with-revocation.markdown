---
title: Systems and methods for non-interactive session key distribution with revocation
abstract: Systems and methods that allow the formation and distribution of session keys amongst a dynamic group of users communicating over an unreliable, or lossy, network. The systems and methods according to this invention allow an intermediate session key contained in an intermediate key distribution broadcast to be determined by receiving a preceding key distribution broadcast that precedes the intermediate key distribution broadcast, the preceding key distribution broadcast including a first portion of the intermediate session key; receiving a subsequent key distribution broadcast that follows the intermediate key distribution broadcast, the subsequent key distribution broadcast including a second portion of the intermediate session key that is distinct from the first portion; and combining at least the first portion of the intermediate session key contained within the preceding key distribution broadcast and the second portion of the intermediate session key contained within the subsequent key distribution broadcast to obtain the intermediate session key.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07400732&OS=07400732&RS=07400732
owner: Xerox Corporation
number: 07400732
owner_city: Stamford
owner_country: US
publication_date: 20020927
---

{"@attributes":{"id":"description"},"GOVINT":[{},{}],"p":["This invention was made with Government support under Grant N66001-00-1-8921 awarded by the Space and Naval Warfare Systems Center, San Diego, Calif. The Government has certain rights in this invention.","1. Field of Invention","This invention generally relates to the field of secure information communication.","2. Description of Related Art","A group of users can generally communicate securely over a public channel when they all share a common key, such as, for example a session key, which is used to encrypt messages and other communications. Because the group of users may change over time, for example, because some existing users leave the group and\/or because some new users join the group, it is desirable to change the encryption communication common key periodically.","Conventional techniques and methods for secure communication have generally been provided for distributing an encryption communication common key over a reliable channel or network.","Often, changing the encryption communication common key must be performed using an unreliable, or lossy, network. However, in an unreliable network, a key distribution broadcast for a particular session might never reach a user in the group. Requiring that each such user contact the group manager to request a re-transmission of the key would contribute to the traffic on a network that might already be heavily burdened. Furthermore, when the user group size is large, such re-transmissions could potentially overwhelm the group manager. Moreover, in some high security communication environments, such as, for example, military applications, it can be important that users avoid sending all but essential messages, lest they make themselves vulnerable by revealing their location.","This invention provides systems and methods that enable secure information communication over unreliable communication networks.","This invention separately provides systems and methods that provide for non-interactive distribution of one or more unique communication encryption keys.","This invention separately provides systems and methods that allow a user to recover one or more lost encryption communication group keys without requesting additional transmissions from a group manager.","This invention separately provides systems and methods that provide for the revocation of group communication participation privileges for one or more group members.","In various exemplary embodiments, the systems and methods according to this invention allow a member of a communication group who has not received an intermediate key distribution broadcast to determine the intermediate session key. In such exemplary embodiments, the systems and methods according to this invention determine the intermediate session key by combining a preceding key distribution broadcast that precedes the intermediate key distribution broadcast with a subsequent key distribution broadcast that follows the intermediate key distribution broadcast using one or more self-healing key distribution techniques according to this invention.","In various exemplary embodiments, the systems and methods according to this invention allow a group manager managing the communication group to distribute to one or more members of the group a set of distinct keys as part of one or more of key distribution broadcasts, where the set of distinct keys is constructed based a session revocation capability that revokes an access to one or more of the broadcast sessions for one or more members of the group.","In various exemplary embodiments, the systems and methods according to this invention employ one or more self-healing session key distribution techniques that use one or more polynomial-based secret sharing techniques to encode a preceding key distribution broadcast and to encode a subsequent key distribution broadcast to allow a user receiving the preceding and subsequent key distribution broadcasts to determine an intermediate key, usable to decrypt a received encrypted intermediate broadcast session that was distributed between the preceding and subsequent key distribution broadcasts.","These and other features and advantages of this invention are described in, or are apparent from, the following detailed description of various exemplary embodiments of the systems and methods according to this invention.","The systems and methods of this invention allow the formation and distribution of group keys amongst a dynamic group of users communicating over an unreliable, or lossy, network.","The key distribution techniques discussed in various embodiments of systems and methods of this invention have been based on the self-healing key distribution and revocation systems and techniques disclosed in J. Staddon at al., \u201cSelf-Healing Key Distribution with Revocation,\u201d IEEE Symposium on Security and Privacy 2002, May 2002, Oakland, Calif., pp. 241-257, which is incorporated herein by reference in its entirety. The key distribution techniques are labeled \u201cself-healing\u201d because users are capable of recovering lost group keys on their own, that is, without requesting additional transmissions from the distributor of the keys, such as, for example, a group manager.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","110","120","120","110","160","110","130","130","200","110","160"],"sub":["1","n","1","n","0 ","1","n","1","n"]},"The public channel or non-secure network  includes, but is not limited to, for example, local area networks, wide area networks, storage area networks, intranets, extranets, the Internet, or any other type of distributed network, each of which can include wired and\/or wireless portions.","The access devices  and  can each be any known or later developed device that provides access to a user to the communications network . In various exemplary embodiments, various ones of the access devices  and  can each be implemented using a desktop computer, a laptop computer, a handheld computer, a personal digital assistant, a cellular phone, a web appliance and\/or any other device that provides a suitable level of connectivity and processing power to allow the communications over the communication network to be received and, if necessary, to be processed, encrypted or the like and\/or to allow communications to be processed, encrypted or the like, if necessary, and to be provided to the communications network .","As shown in , the group manager connects to the public channel or non-secure network  via one of the communication links . The communication links  can be any known or later developed device or system for connecting the access devices  and  and the selfhealing key distribution system  to the network , including a connection over public switched telephone network, a direct cable connection, a connection over a wide area network, a local area network and\/or a storage area network, a connection over an intranet and\/or an extranet, a connection over the Internet, or a connection over any other distributed processing network or system. In general, the links  can be different from each other and each link  can be any known or later developed connection system or structure usable to connect the access devices  or  or the self-healing key distribution system  to the network .","To enable secure multicast communication between the group members\/users U-U, over the public channel or non-secure communication network , the group manager Uissues to each group user a personal key S-S. The personal key Sis generally issued to a group user Uwhen the group user Ujoins the group for the first time.","Periodically, the group manager Udistributes of a new key K, called a session key, to group users prior to or during a session m. All messages exchanged within the group during a fixed interval of time and\/or during the specific session m, are communicated securely through encryption under a particular session key K.","Generally, prior to the start of each session m, the group manager Utransmits at least one key distribution broadcast Bwhich includes that session's key, K, as well as other information, to the group. Because group membership is dynamic, that is, because new users may be periodically added to the group and\/or existing users may be periodically removed from the group, each key distribution broadcast B targets only the group members current for that key distribution broadcast B.","In various exemplary embodiments, the self-healing key distribution system  allows one or more group members\/users U-U, who, due to network failures or other communication interruptions, do not receive a particular session key Kvia the key distribution broadcast B, to recover the session key Bon their own. To be able to recover the key Kthrough self-healing key reconstruction techniques discussed in detail below, a user Umust generally be a member both before and after the session mfor which a particular key Kis to be used.","In various exemplary embodiments, from each key distribution broadcast B, a user Urecovers the current session key K and shares of each of a number y of previous session keys, and a number z of future session keys, respectively. Hence, in each key distribution broadcast B, a user learns the actual session key Kfor that key distribution broadcast B, and shares of the actual session keys Kto Kand Kto Kfor each of the y preceding sessions and of subsequent sessions, respectively. The share of the current session key Kthat is received in each preceding key distribution broadcast Bto Bis complementary to the share of the current session key Kthat is received in each key distribution Bto B. Hence, a user who is a member in both any one of the preceding y sessions and any one of the subsequent z sessions will be able to reconstruct the current session key Keven if the current key distribution broadcast Bis not received.","In various exemplary embodiments, the self-healing key distribution techniques which the self-healing key distribution system  uses to construct the shares of the z future session keys K and y previous session keys K for a current key distribution broadcast B are based on secret sharing techniques that bind the ability of users to recover from key distribution broadcast losses to the user's membership status, as discussed by A. Shamir, \u201cHow to Share a Secret\u201d, in Communications of the ACM, 22, 1979, pp. 612-613, which is incorporated herein by reference in its entirety.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 2","FIG. 2"],"sub":["j ","j ","j "],"b":"300"},"For example, to reconstruct the session key Kin a non-interactive manner, from a preceding key distribution broadcast, for example the last key distribution broadcast B, the user U recovers a share K\u2032of a preceding key K, the session key K, for that preceding key distribution broadcast Band shares K\u2033, K\u2033 and K\u2033 for subsequent session keys K, Kand K. From a subsequent broadcast, for example next the key distribution broadcast B, the user U recovers the same share K\u2032of the preceding session key K, a share K\u2032 of the preceding session key Kand a share K\u2032of the missing session key Kof the session key for the missed key distribution broadcast B, the session key Kfor the subsequent key distribution Band the same share K\u2033 of the subsequent key K. As a result of the information received in preceding broadcast Band subsequent broadcast Bthe user U now has shares K\u2032 and K\u2033 of the missed session key Kthat, when appropriately combined, form the session key K, and thus can recover the missing session key K, according to various embodiments of this invention, even though the key distribution broadcast Bwas not received. In various exemplary embodiments, the shares K\u2032 and K\u2033 are distinct. In some exemplary embodiments, the distinct shares K\u2032 and K\u2033 are complimentary.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 2"},"A group member recovers the lost session key Kby combining information from any key distribution broadcast Bpreceding the lost broadcast Bthat contains a share K\u2032 of the lost session key Kwith information from any key distribution broadcast Bfollowing the lost Bbroadcast that contains a share K\u2033 of the lost session key Kbased on the self-healing key distribution technique. In other words, in order to recover a lost session key K, the user must have received key distribution broadcasts for any two sessions which \u201csandwich\u201d the session corresponding to the lost key distribution broadcast and that contain the shares K\u2032 and K\u2033.","In various exemplary embodiments, to reconstruct, recover and\/or determine a lost session key K, the user member employs one or more self-healing key reconstruction techniques to combine the information from an appropriate key distribution broadcast Bpreceding the lost broadcast Bwith information from an appropriate key distribution broadcast Bfollowing the lost Bbroadcast.","In various exemplary embodiments, when self-healing key distribution is implemented for a sequence of m sessions where m\u2266y+1 and y=z, it is possible to miss all but the first and last key distribution broadcasts Band B, and still be able to recover all the session keys.","In various exemplary embodiments, the self-healing key distribution system  enables distribution of session keys in a manner that is resistant to key distribution broadcast loss.","Basing session key recovery on the possession of sandwiching key distribution broadcasts Band Ballows the use of a flat, rather than hierarchical, key management system. In such a system, each personal key S, where a personal key Sis the collection of secrets that allows users to decrypt broadcast messages, is known to exactly one user, thus enabling traceability. Further, lost broadcasts are constructed in a stateless manner.","The cost of these benefits is an increase in communication overhead. However, because the keying information is naturally decoupled from the content in the session key setting, the overhead is incurred on the smaller payload, i.e., the session keys. On the content, a low-overhead reliability mechanism, such as for example, forward error correction, can be used.","As discussed in detail below, in various exemplary embodiments, the self-healing key distribution techniques provide key distribution broadcast self-healing as well as the ability to revoke users from, and add users to, the group, while being resistant to collusion attacks. If a key distribution mechanism cannot be broken by any coalition of up to t users, that system is resistant to coalitions of size t.","The self-healing property requires that an appropriate pair of proceeding and subsequent key distribution broadcasts be sufficient to recover the lost key. With this self-healing requirement, it is possible to communicate with all group members through short broadcasts even though the underlying set of personal keys is flat rather than hierarchical, i.e., that each key is stored by at most one user. This has the advantage of permitting traceability of keys and\/or broadcasts. In addition, the flat key structure does not penalize members for being off-line for a period of time.","It should be appreciated that the keying information is decoupled from the content or message. Pairing the two makes sense if the group manager is the only sender. However, in the multi-sender setting considered for self-healing key distribution systems and methods according to this invention, doing so would require passing all messages through the group manager first, as appending the necessary keying information in a secure way requires knowledge of the various users' personal keys.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":["FIG. 3","FIG. 3"],"b":["100","105","110"]},"In step S, the user attempts to recover the subsequent intermediate key distribution broadcast. Then, in step S, a determination is made whether the user has missed the intermediate key broadcast. If the user member missed the intermediate key distribution broadcast, operation continues to step S. Otherwise, because that intermediate key distribution broadcast was received, operation returns to step S.","In step S, the user receives a subsequent key distribution broadcast which occurs some time after the intermediate broadcast that the user member missed. Next, in step S, the intermediate session key for the encrypted intermediate broadcast is determined by combining the share K\u2032 of the missed session K received with the received preceding key distribution broadcast and the share K\u2033 of the missed session key K received with the received subsequent key distribution broadcast. Then, in step S, the user employs the recovered intermediate key K reconstructed in step S to decrypt the corresponding intermediate session m. Operation then returns to step S. Operation of the method thus continues until all of the key distribution broadcasts have been sent to the user.","In various exemplary embodiments, the one or more self-healing session key distribution techniques is based on one or more polynomial-based secret sharing techniques discussed above and summarized as shown in Eq. 1 below:\n\n()+(), . . . ,()+(), ()+()+(), . . . , ()+())}.\u2003\u2003(1)\n",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 4","FIG. 4"],"b":["200","205","210","215"]},"In step S, a session key corresponding to the particular session key index is selected. Next, in Step S, portions of up to y preceding session keys (if any) are selected. Then, in Step S, portions of up to z subsequent session keys (if any) are selected. Operation then continues to step S.","In step S, the current session key and up to y shares of previous session keys and up to z shares of subsequent session keys are combined to form the i-th key distribution broadcast. Then, in step S, the i-th key distribution broadcast is distributed. Next, in step S, a determination is made whether the last key distribution broadcast has been sent. If so, operation continues to step S where operation of the method stops. If not, operation continues to step S where the session index is incremented by 1. Operation then returns to step S.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 5","FIG. 5"],"b":["300","305","310","315"]},"In step S, a session key corresponding to the particular session key index is selected. Next, in Step S, portions of up to y preceding session keys (if any) are selected. Then, in Step S, portions of up to z subsequent session keys (if any) are selected. Operation then continues to step S.","In step S, the current session key and up to y shares of previous session keys and up to z shares of subsequent session keys are combined to form the i-th key distribution broadcast. Then, in step S, the i-th key distribution broadcast is distributed. Next, in step S, a determination is made whether the last key distribution broadcast has been sent. If so, operation continues to step S where operation of the method stops. If not, operation continues to step S where the session index is incremented by 1. Operation then continues to step S.","In step S, a determination is made whether the last key has been generated. If so, operation returns to step S where the operation of the method is repeated. If, not, operation continues to step S where another session key is generated. Next, at step S, the new session key generated is split into two distinct portions representing key shares of that particular session key. Operation then returns to step S where the operation of the method is repeated until last key is generated and the last session key is sent to the group users.","In various exemplary embodiments, to achieve the goal of providing secure communication for large groups, a broadcast-based approach to key distribution is taken. In a key distribution scheme, a group manager seeks to establish a new unique key with each user over a broadcast channel. In a session key distribution scheme, a group manager seeks to establish a common key (the session key) with everyone in the group at or before the beginning of each session, where a session is simply a fixed interval of time. In each setting, the ability to revoke users, and thus prevent them from learning new keys, is important.","Generally, a scheme is considered to have a t-revocation capability if it is possible to prevent t users at a time from learning the new session key. When distributing session keys, the self-healing property is considered, which states that a member in three sequential, although not necessarily consecutive, sessions can recover the session key corresponding to the intermediate session by using information recovered from the first and last of the three broadcasts. All of the processing techniques presented herein are resistant to coalitions of t users. That is, any t colluding users, whether revoked or not, are unable to recover information they are not entitled to access.","A definition of an unconditionally secure model of session key distribution is presented first below. Many of the definitions and results presented herein make use of information theory concepts, such as, for example, the entropy function, H(.), which is well known in the art.","A setting in which there is a group manager Uand n users U, . . . ,Uis considered. All operations take place in a finite field, F, where q is a prime number that is larger than n. Each user, U, stores a personal key, SF, where Smay be a subset of elements of F. We use k to denote a single key (i.e., an element of F). We allow for the possibility that individual keys may be related.","As part of the first definition, key independence, {ki}Fis a set of t-wise independent keys, if for every subset of t distinct indices {i, . . . ,i}, H(k)=H(k). We denote the number of sessions by m, and the set of users who are revoked in session j, and thus unable to recover that session's key, by R. If U\u2209R, we say Uis a member (or, an active user). The session keys {K, . . . ,K}, are generated independently at random. For j \u2208{1, . . . ,m}, the session key, K, is sent to the group members through a broadcast, B, from the group manager. For any non-revoked user U, the jth session key, K, is determined by Band S. The set of revoked users, R, will be clear from context.","Because in a session key distribution scheme a user potentially learns from B, information about session keys other than K, it is helpful to introduce a variable zto represent all the information Ulearns through knowledge of both Band S. More precisely: H(z|B,S)=0 but H(z|B,)=H(z)=H(z|S). For example, if Uis a group member, then zwill include Kand possibly information on other session keys, whereas if Uis revoked then zcontains no information on Kand may in fact be the empty set.","It is appreciated that it is important to prepare for all types of collusion attacks when designing key distribution schemes. If the scheme is such that sensitive information is embedded in users' personal keys, a coalition of users may be unwilling to share their personal keys and consequently can only attack session keys. Such a coalition could consist of \u03b1 revoked users who collude with t-\u03b1 new group members to recover session keys for sessions in which none of the colluding users were members. Security against such a collusion attack motivates the definition of self-healing in the second definition.","The second definition, Session Key Distribution definition, is presented next.","First, let, i \u2208{1, . . . ,n} and j \u2208{1, . . . ,m}.","D is a session key distribution scheme if the following are true:","(a) For any member U, Kis determined by z, which in turn is determined by Band S(H(K|z)=0 and H(z|B, S)=0).","(b) For any set B{U, . . . ,U}, |B|\u2266t, and U\u2209B, the users in B cannot determine anything about S(H(S|{S}, B, . . . , B)=H(S))","(c) What members U, . . . ,Ulearn from Bcan't be determined from the broadcasts or personal keys alone (H(z|B, . . . B)=H(z)=H (z|S, . . . ,S)).","D has t-revocation capability if given any set R{U, . . . ,U} where |R|\u2266t, the group manager can generate a broadcast B, such that for all U\u2209R, Ucan recover K(H(K|B,S)=0), but the revoked users cannot (H(K|B,{S}=H(K)).","D is self-healing if the following are true for any 1\u2266j\u2266j\u2266j\u2266m:","(a) For any Uwho is a member in session's jand j, Kis determined by the set,. {zz}(H(K|z, z)=0)","(b) For any disjoint subsets B, C\u2282{U, . . . U} where |BUC|\u2266t, the set {z}U {z}, contains no information on Kj (H(Kj|{z}U {z})=H(K)).","In various exemplary embodiments, the self-healing key distribution technique uses secret sharing as discussed by A. Shamir, How to Share a Secret, in Communications of the ACM, 22, 1979, pp. 612-613, which is incorporated herein by reference in its entirety, and presented above.","In order to provide resistance to collusion attacks, in the self-healing key distribution schemes that are based on this mechanism, the shares , , ,  (shown in ) recovered by different users are different. The collusion resistance of a key distribution scheme is correlated with the degree of dependence between the shares recovered by the users in each period ,  (as shown in ). Any desired level of coalition resistance can be accomplished by using polynomials of sufficiently high degree to determine the values of the shares.","As part of determining a self-healing session key distribution technique or scheme without revocation capability (Construction ), the following are provided below.","First, let t be a positive integer. The group manager chooses 2 m polynomials in F[x], each of degree t, h, . . . ,h, p, . . . ,p, and m session keys, K, . . . ,K\u2208F, all at random. For each j \u2208{1, . . . ,m}, define a polynomial in F[x], q(x)=K-p(x). For i \u2208{1, . . . ,n}, user Ustores the personal key S={i,h(i), . . . ,h(i)}F.","Next, in session j \u2208{1, . . . ,m}, the broadcast is:\n\n()+p()()()()()()()()}.\u2003\u2003(2)\n","The Session Key and Shares Recovery in Session j is described next below. For all i \u2208{1, . . . ,n}, Urecovers Kfrom broadcast Bby evaluating hj(x)+Kat i and subtracting h(i) (the latter is part of S). Similarly, Urecovers session key shares {p(i), . . . ,p(i), q(i), . . . ,q(i)}. Self-healing is then possible because in session j<j, Urecovers share q(i) in session j>j, Urecovers share p(i), and p(i)+q(i)=K.","Adding a user to this scheme during session j\u2032 is straight-forward, provided the underlying field is sufficiently large. First, the group manager sends a new member a unique identity, i \u2208F, and the corresponding points on the polynomials {hj(i)}j\u2208{j\u2033, . . . ,m}. However, Construction  has no revocation capability. The sections below provide a description of how Construction  may be combined with Construction  to achieve self-healing key distribution with revocation.","First, a technique for distributing one set of distinct, but related, keys to a select subset of users over a broadcast channel is presented in detail below. This technique allows the addition of revocation capability to the self-healing technique.","It will be appreciated that the ability to distribute distinct keys to subset of users is important to self-healing key distribution. The reason is that although the main objective is the distribution of common keys, for example, session keys, this distribution is done reliably by also distributing shares of keys, and these shares must be distinct to ensure collusion resistance. One exemplary embodiment of such a technique is based on the Naor-Pinkas unconditionally secure method for establishing a common key over a broadcast channel, as discussed by M. Naor and B. Pinkas, Efficient Trace and Revoke Schemes, in Proceedings of Financial Cryptography 2000, Lecture Notes in Computer Science (2001) 1962, pp. 1-20, which is incorporated herein by reference in its entirety.","The keys distributed in the revocation technique mechanism are each a point on a polynomial. The size of the broadcast grows with the square of the degree of collusion resistance desired, not with the total number of users.",{"@attributes":{"id":"p-0089","num":"0088"},"figref":["FIG. 6","FIG. 6"],"sub":["i ","i "]},"A key distribution scheme with t-revocation capability and without self-healing is described below as Construction .","first, as part of the setup stage, let t be a positive integer. Let N \u2208F, be an element that is not equal to any user's index. The group manager chooses at random from F[x,y] a polynomial, s(x,y)=a+ax+ay+ . . . +axy. For i=1, . . . ,n, user Ustores the personal key, (N,i,s(i,i)).","As part of the broadcast stage, the group manager chooses at random a polynomial of degree t in Fq[x], f(x). Let W{1, . . . ,n}, |W|=t, consist of the indices of the users that should not be allowed to recover a new key from the broadcast. The broadcast consists of the following polynomials:\n\n{()+()}():\u2003\u2003(3)\n","As part of the key recovery stage, A user Us such that i\u2209W, can evaluate each polynomial s(w,x) at x=i to get t points on the polynomial s(x,i). Coupling these with his personal key s(i,i), Uhas t+1 points on s(x,i) and so is able to recover that polynomial and evaluate it at x=N to recover s (N,i). Umay then evaluate (f(x)+s(N,x)) at x=i, subtract off s(N,i) and recover a new individual key, f(i).","Because the revocation technique is of independent interest, we demonstrate its security before it is combined with the self-healing mechanism by assuming that Construction  is an unconditionally secure key distribution scheme with t-revocation capability as described below.","Note that the keys distributed in Construction , {f(1), . . . ,f(n)} are (t+1)-wise independent because f(x) is of degree t. The size of the broadcast, B, in Construction  is O(tlog q). The Naor-Pinkas scheme, which is an unconditionally secure method of distributing a common key, has broadcast size O(tlog q), so moving from the distribution of a single key to the distribution of a set of (t+1)-wise independent keys has multiplied the broadcast length by t.","By combining the techniques of Construction  with Construction , a session key distribution scheme that has t-revocation capability and is self-healing is constructed as described below.","The unconditionally secure self-healing session key distribution, Construction , is set up as discussed below.","first, let t be a positive integer, and let N be an element of Fthat is not equal to any user index. The group manager chooses m polynomials p(x), . . . ,p(x) in F[X], each of degree t, and m session keys K, . . . ,K\u2208F, all at random, and defines a polynomial, q(x)=K-p(x), for each j=1, . . . ,m. for each j \u2208{1, . . . ,m}, the group manager chooses m polynomials in F[x,y] at random, s, . . . ,s, where for i=1, . . . ,m, s(x,y)=",{"@attributes":{"id":"p-0099","num":"0098"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msubsup":{"mi":"a","mrow":[{"mn":["0","0"],"mo":","},{"mi":["i","j"],"mo":","}]},"mo":["+","+","+","+"],"mrow":[{"msubsup":{"mi":"a","mrow":[{"mn":["1","0"],"mo":","},{"mi":["i","j"],"mo":","}]},"mo":"\u2062","mi":"x"},{"msubsup":{"mi":"a","mrow":[{"mn":["0","1"],"mo":","},{"mi":["i","j"],"mo":","}]},"mo":"\u2062","mi":"y"},{"msubsup":{"mi":"a","mrow":[{"mi":["t","t"],"mo":","},{"mi":["i","j"],"mo":","}]},"mo":["\u2062","\u2062"],"msup":[{"mi":["x","t"]},{"mi":["y","t"]}]}],"mi":"\u2026"}}},"br":{},"sub":["i ","i","1,1","m,1","1,2","m,2","1,m","m,m"]},"The broadcast is then computed by letting A, R{U, . . . ,U,}, |R|\u2266t, enote the active users and revoking users in session j, respectively. The group manager chooses W={w, w, . . . ,w}Fsuch that the indices of the users in R are contained in W, none of the indices of the users in A are contained in W and N\u2209W. The broadcast in period j \u2208{1, . . . ,m},is \u03b2\u222a\u03b2where:\n\n\u03b2\u2032()+()}\n\n\u222a{K()}\n\n\u222a{q()()}\n\n\u03b2()}\n","The session key and shares recovery in session j are determined as follows:","For all i \u2208{1, . . . ,n}, Uis able to recover the polynomial s(x,i) using {s(w,x)}by evaluating the polynomials at x=i and interpolating based on the points (i,s(i,i)) and {w,s(w,i))}by evaluating s(x,i) at x=N, and subtracting this value from (K+s(N,x))|.","Additionally, Ucan interpolate to determine {s(x,i)}, . . . ,m and thereby recover shares {p(i)}and {q(i)}in a similar manner.","Adding users to the group proceeds as in Construction . Provided the underlying field is sufficiently large, the group manager adds a new member in session j\u2032 by simply giving the user a unique identity, i \u2208F, and personal keys corresponding to the current and future sessions {s(i,i)}(keys corresponding to past sessions are unnecessary).","The broadcast size in the above construction is O((mt+tm)log q). Because Construction  is both a key distribution scheme with t-revocation capability and a self-healing session key distribution scheme, a lower bound on broadcast size follows from the expression |B|\u2267max{tlog q, mtlog q}.","In various exemplary embodiments, the communication overhead can be reduced from O((mt+mt)log q) to O((t+mt)log q), while adding a moderate amount of additional computation at the user's end. In various exemplary embodiments, the self-healing key distribution system  uses the communication broadcast size reduction circuit, routine or application  to perform this operation.","The principle behind the reduction is to decrease the size of \u03b2in Construction  by broadcasting a smaller set of polynomials, {s(w,x))}, and making public a pseudorandom permutation a, with which each user can efficiently generate the necessary remaining polynomials, {s(w,x))}. The fact that \u03c3s output is pseudorandom is useful, because it ensures that with high probability, the entire collection of polynomials will appear random, and hence, indistinguishable from the collection generated entirely at randomly in Construction . It will be appreciated that the choice of pseudorandom \u03c3 is enabling but not absolutely necessary.","Because the smaller set of polynomials from which the others are defined can only be specified once the set of revoked users, and hence the set W, is known, we also need to modify the scheme to ensure that the personal keys allocated to users in the set-up phase don't introduce conflicts.","Before stating the construction, some new notation is introduced to make the presentation simpler. For any polynomial in F[x], f(x)=a+a+ . . . +ax, and any permutation of F, \u03c3, let \u03c3(f(x))=\u03c3(a)+\u03c3(a)x + . . . +\u03c3(a)x.","In various exemplary embodiments according to the methods and systems of this invention, an unconditionally secure self-healing session key distribution variant of Construction  in which overhead is reduced, may be determined as discussed below.","Let t be a positive integer, and let N be an element of Fsuch that N \u2209{, . . . ,n}. The group manager chooses the session keys K, . . . ,K\u2208F, and the t-degree polynomials p(x), . . . p(x) \u2208F[x] all at random. Note that this determines the polynomials, q(x), . . . ,q(x) as in Construction . In addition, for each r, j \u2208{1, . . . ,m}, the group manager defines h(x) to be a randomly chosen polynomial of degree 2 t in F[x]. For i=1, . . . ,m, Ustores the personal key {N, i, h(i)}. Finally, for j=1, . . . ,m, the group manager chooses a bivariate polynomial of degree t in each variable, s(x,y) \u2208F[x,y] at random, and a pseudorandom permutation of F, \u03c3. The permutation \u03c3 is made public.","To determine a broadcast session, let A, R{U, . . . ,U}, |R|\u2266t\u22121, denote the set of active members and the set of revoked users, respectively, in session j. The group manager chooses WFsuch that |W|=t, the indices of the users in R are in W, the indices of users in A are not, and N \u2208W. Let W={w, . . . ,w}. For j\u2032=1 , . . . ,m the group manager chooses {s(x,y)}j\u2032 to be bivariate polynomials in F[x,y] of degree t in each variable, such that for all j\u2032=1, . . . ,m and i\u22121, . . . ,t, s(w,x)=\u03c3(s(w,x)) The broadcast in period j \u2208{1, . . . ,m}, is \u03b2U\u03b2where:",{"@attributes":{"id":"p-0113","num":"0112"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mtable":{"mtr":[{"mtd":{"mrow":{"msubsup":{"mi":["B","j"],"mn":"1"},"mo":["=","\u2062"],"mi":{},"msub":{"mrow":[{"mo":["{","}"],"mrow":{"mrow":[{"msub":{"mi":"p","msup":{"mi":["j","\u2032"]}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},{"msub":{"mi":"s","mrow":{"msup":{"mi":["j","\u2032"]},"mo":",","mi":"j"}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["N","x"],"mo":","}}}],"mo":"+"}},{"mrow":[{"msup":{"mi":["j","\u2032"]},"mo":"=","mn":"1"},{"mi":"j","mo":"-","mn":"1"}],"mo":[",","\u2062","\u2062",","],"mstyle":[{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}],"mi":"\u2026"}]}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mrow":{"mi":"U","mo":"\u2062","mrow":{"mo":["{","}"],"mrow":{"msub":{"mi":["K","j"]},"mo":"+","mrow":{"msub":{"mi":"s","mrow":{"mi":["j","j"],"mo":","}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["N","x"],"mo":","}}}}}}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mrow":{"mi":"U","mo":"\u2062","msub":{"mrow":[{"mo":["{","}"],"mrow":{"mrow":[{"msub":{"mi":"q","mrow":{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mo":"\u2062","mrow":{"msup":{"mo":"\u2009","mi":"\u2032"},"mo":"\u2062","mi":"j"}}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},{"msub":{"mi":"s","mrow":{"msup":{"mi":["j","\u2032"]},"mo":",","mi":"j"}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["N","x"],"mo":","}}}],"mo":"+"}},{"mrow":{"msup":{"mi":["j","\u2032"]},"mo":"=","mrow":{"mi":"j","mo":"+","mn":"1"}},"mo":[",","\u2062","\u2062",","],"mstyle":[{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}],"mi":["\u2026","m"]}]}}}}}]}}},{"mtd":{"mtable":{"mtr":[{"mtd":{"mrow":{"msubsup":{"mi":["B","j"],"mn":"2"},"mo":["=","\u2062"],"mi":{},"msub":{"mrow":[{"mo":["{","}"],"mrow":{"mrow":[{"msub":{"mi":"h","mrow":{"msup":{"mi":["j","\u2032"]},"mo":",","mi":"j"}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},{"msub":{"mi":"s","mrow":{"msup":{"mi":["j","\u2032"]},"mo":",","mi":"j"}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","x"],"mo":","}}}],"mo":"+"}},{"mrow":{"msup":{"mi":["j","\u2032"]},"mo":"=","mn":"1"},"mo":[",","\u2062","\u2062",","],"mstyle":[{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}],"mi":["\u2026","m"]}]}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mrow":{"mi":"U","mo":"\u2062","msub":{"mrow":[{"mo":["{","}"],"mrow":{"msub":{"mi":["w","i"]},"mo":",","mrow":{"msub":{"mi":"s","mrow":{"mi":["m","j"],"mo":","}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["w","i"]},"mo":",","mi":"x"}}}}},{"mrow":[{"mi":"i","mo":"=","mn":"1"},{"mo":[".","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"mo":",","mi":"t"}}],"mo":[",","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}]}}}}}]}}}]}}}},"Next, for the session key and shares recovery in session j, the following substeps are performed. First, Urecovers s(i,i) for j\u2032=1, . . . ,m by evaluating {h(x)+s(x,x)} at x=i and subtracting h(i). Then, each user applies the publicly known pseudorandom permutation \u03c3 to recover {s(w,x), . . . , s(w,x)},}, using the fact that s(wi,x)=\u03c3(s(w,x)). Recovery of the session keys and the key shares then proceeds as in Construction .","Adding users in Construction  is as straight forward. Provided the underlying field is sufficiently large, the group manager adds a user in session j by giving the users a unique identifier, i \u2208F, and the keys {h(i,i)}.","To see that the choice of a pseudorandom permutation facilitates the construction, but is not essential, consider algebraic attacks in which a user Uwho legitimately learns q(i) (for example) and then, when revoked in session j, uses this knowledge to recover s(N,i) and then exploits an algebraic relationship between=s(x,y) and s(x,y) to learn session key, K. The algebraic relationship is represented as s(N,i)=s(N,i), then K=K+s(N,x)|\u2212s(N,i).","Using a pseudorandom permutation ensures that with high probability the resulting s(x,y) polynomials chosen by the group manager, will be sufficiently different and the construction will not be vulnerable to such attacks. Although it is possible to accomplish this without a pseudorandom permutation, it is not possible for all permutations. Consider the extreme case of the identity permutation. If \u03c3 is the identity permutation, then it is possible for the group manager to choose s(x,y)=s(x,y) for j\u2032,j \u2208{1, . . . ,m}. The resulting construction is vulnerable to exactly the kind of attack just described above. At the other end of the spectrum, it is also possible to use a truly random permutation to reduce overhead. However, since this potentially places a heavy computational burden on each user, this approach is less desirable.","After a set of m sessions has expired in Constructions  and , some rekeying of the users may be necessary before distributing new session keys. One reason for rekeying is because the state of the system has changed as a result of the broadcasts. For example, in each construction, portions of the personal keys of the revoked users are made public. One solution to this problem is to distribute a new set of secret keys to each user, and proceed as before. Another solution is to use a technique that originated in as discussed by P. Feldman, A practical Scheme for Non-Interactive Secret Sharing, in Proc. 28th IEEE Symposium on Foundations of Computer Science, 1987, pp. 427-437, which is incorporated herein by reference in its entirety, and is used in as discussed by M. Naor and B. Pinkas, Efficient Trace and Revoke Schemes, in Proceedings of Financial Cryptography 2000, Lecture Notes in Computer Science (2001) 1962, pp. 1-20, which is incorporated herein by reference in its entirety, which can be described as Shamir secret sharing in the exponent of a generator g, of a cyclic group, G. Moving operations to the exponent allows each user to evolve their secret keys from one set of m sessions to the next, thus making the scheme long-lived, meaning the scheme can continue without any unicasts from the group manager.","In various exemplary embodiments, this is accomplished through the broadcast of random values at the end of a set of m sessions, by the group manager using the secret key lifetime extension circuit, routine or application  in the self-healing key distribution system . Each user (revoked or not) is able to use the random values to calculate their own new personal key. This results in significant bandwidth savings over the simple approach of sending each user a new personal key via unicast, because if each user stores r keys, then r random values must be sent, in contrast to rn unicasts in the naive approach. The savings are reduced by a constant factor, however, because the former approach requires a larger underlying group size, for example approximately 160 bits, in order to ensure that the Decision Diffie-Hellman problem, a well known mathematical expression, is hard.","This technique, known as Construction , is applicable to both Constructions  and . However, the technique is demonstrated below for Construction  only, because the extension is somewhat simpler and all of the important underlying ideas are illustrated.","Construction  is secure provided that the Decision Diffie-Hellman (DDH) assumption is hard. We state the assumption here, referring to the discussion by D. Boneh, The Decision Diffie-Hellman Problem, in Proceedings of the Third Algorithmic Number Theory Symposium, Lecture Notes in Computer Science 1423, pp. 48-63, 1998, which is incorporated herein by reference in its entirety, for a more precise and detailed discussion and to the discussion by M. Naor and B. Pinkas, Efficient Trace and Revoke Schemes, in Proceedings of Financial Cryptography 2000, Lecture Notes in Computer Science (2001) 1962, pp. 1-20, which is incorporated herein by reference in its entirety.","DDH is defined for any cyclic group G and generator g. The DDH assumption is that it is difficult to distinguish between the distributions of (g,g,g) and (g,g,g), where a,b, and c are chosen randomly in {1, . . . , |G|}. DDH is believed to be intractable in groups of large prime order.","Before beginning the construction it is helpful to introduce some additional notation. Given f(x)=a+a+ . . . +ax\u2208G[x], let g=(g, . . . ,g).","Construction , which is the Long-lived variant of Construction , is defined as follows:","To determine the set-up for the otth set of m sessions, the group manager randomly chooses integers",{"@attributes":{"id":"p-0126","num":"0125"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msubsup":{"mi":["v","\u03b1"],"mrow":{"mn":["1","1"],"mo":","}},"mo":[",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"msubsup":[{"mi":["v","\u03b1"],"mrow":{"mi":["m","m"],"mo":","}},{"mi":["Z","q"],"mo":"*"}],"mo":"\u2208"}}}},"br":{}},{"@attributes":{"id":"p-0127","num":"0126"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msup":{"mi":"g","msubsup":{"mi":["v","\u03b1"],"mrow":{"mn":["1","1"],"mo":","}}},"mo":[",","\u2062",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"msup":{"mi":"g","msubsup":{"mi":["v","\u03b1"],"mrow":{"mi":["m","m"],"mo":","}}},"mo":"."}}}},"br":{},"sub":["i ","1\u2032,1\u2208{1, . . . ,m}","1","m","p ","1","m","p","1","m","p"],"sup":["v",{"sub2":"j\u2032,"},{"sup2":"\u03b1"},{"sub2":"j"},{"sup2":"s"},{"sub2":"j\u2032,j"},{"sup2":"(1,1)"},"\u03b1","\u03b1","\u03b1","\u03b1","\u03b1","\u03b1"],"b":"3"},"To broadcast in session of the (xth set of m sessions, let A, R  {U1, . . . ,U}, |R|\u2266t, denote the active users and the revoked users, respectively. The group manager chooses Wzsuch that |W|=t, the indices of the revoked users are contained in W and the indices of the active users are not, and N\u2209W. The broadcast period j \u2208 {1, . . . ,m}, is \u03b2U\u03b2where:",{"@attributes":{"id":"p-0129","num":"0128"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mtable":{"mtr":[{"mtd":{"mrow":{"msubsup":{"mi":["B","j"],"mn":"1"},"mo":["=","\u2062"],"mi":{},"msub":{"mrow":[{"mo":["{","}"],"msup":{"mi":"g","mrow":{"mrow":[{"msub":{"mi":"p","msup":{"mi":["j","\u2032"]}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},{"msubsup":{"mi":["v","\u03b1"],"mrow":{"msup":{"mi":["j","\u2032"]},"mo":",","mi":"j"}},"mo":"\u2062","mrow":{"msub":{"mi":"s","mrow":{"msup":{"mi":["j","\u2032"]},"mo":",","mi":"j"}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["N","x"],"mo":","}}}}],"mo":"+"}}},{"mrow":[{"msup":{"mi":["j","\u2032"]},"mo":"=","mn":"1"},{"mi":"j","mo":"-","mn":"1"}],"mo":[",","\u2062","\u2062",","],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}],"mi":"\u2026"}]}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mrow":{"mi":"U","mo":"\u2062","mrow":{"mo":["{","}"],"msup":{"mi":"g","mrow":{"msubsup":{"mi":["K","j","\u03b1"]},"mo":"+","mrow":{"msubsup":{"mi":["v","\u03b1"],"mrow":{"mi":["j","j"],"mo":","}},"mo":"\u2062","mrow":{"msub":{"mi":"s","mrow":{"mi":["j","j"],"mo":","}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["N","x"],"mo":","}}}}}}}}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mrow":{"mi":"U","mo":"\u2062","msub":{"mrow":[{"mo":["{","}"],"msup":{"mi":"g","mrow":{"mrow":[{"msub":{"mi":"q","msup":{"mi":["j","\u2032"]}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},{"msubsup":{"mi":["v","\u03b1"],"mrow":{"msup":{"mi":["j","\u2032"]},"mo":",","mi":"j"}},"mo":"\u2062","mrow":{"msub":{"mi":"s","mrow":{"msup":{"mi":["j","\u2032"]},"mo":",","mi":"j"}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["N","x"],"mo":","}}}}],"mo":"+"}}},{"mrow":{"msup":{"mi":["j","\u2032"]},"mo":"=","mrow":{"mi":"j","mo":"+","mn":"1"}},"mo":[",",","],"mstyle":{"mspace":{"@attributes":{"width":"1.1em","height":"1.1ex"}}},"mi":"m"}]}}}}}]}}},{"mtd":{"mrow":{"msubsup":{"mi":["B","j"],"mn":"2"},"mo":"=","msub":{"mrow":[{"mo":["{","}"],"mrow":{"mi":"w","mo":",","msup":{"mi":"g","mrow":{"msubsup":{"mi":["v","\u03b1"],"mrow":{"msup":{"mi":["j","\u2032"]},"mo":",","mi":"j"}},"mo":"\u2062","mrow":{"msub":{"mi":"s","mrow":{"msup":{"mi":["j","\u2032"]},"mo":",","mi":"j"}},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["w","x"],"mo":","}}}}}}},{"mrow":[{"mi":["w","W"],"mo":"\u2208"},{"msup":{"mi":["j","\u2032"]},"mo":"\u2208","mrow":{"mo":["{","}"],"mrow":{"mn":"1","mo":[",","\u2062","\u2062",","],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}],"mi":["\u2026","m"]}}}],"mo":","}]}}}}]}}}},"The session key and shares recovery is shown as follows. Urecovers {g}using {g}and {g}. This enables Uto recover the jth session key g and the shares, {g}and {g}.","It will be appreciated that 2t+1 users can pool their personal keys and reconstruct {s(x,x)}, and then these users are able to retrieve session keys for the lifetime of the scheme. Hence, even with this long-lived self-healing scheme, occasionally \u201cre-starting\u201d the scheme by securely sending each user a fresh personal key, is desirable.","The techniques described herein are based in part of experimental data from experimentation performed on secure group communication for large, dynamic groups. In such a large group, for example 10000 or more members, membership may change frequently, and possibly every few seconds. The self-healing session key distribution techniques presented herein are well-suited for this setting because the system parameters affecting broadcast size are either independent of the number of members, as is the case for m, the number of sessions, and the key size, log q, whose value is determined by the necessary cryptographic strength, which is typically much larger than the group size, or grow much more slowly (as does the collusion resistance, t. The actual session length may vary according to the key size used and the rate of change in group membership. In practice, the actual session length may be in the range of a few seconds to a minute.","It will be appreciated that that q, should at least 2, for example a 64-bit number. This ensures that the broadcast session keys K, . . . ,Kare also 64 bits long. It is anticipated, these session keys will be used in a symmetric cipher such as, for example, advanced encryption standard (AES), for which a 64-bit key currently provides reasonable security for a short-lived session key.","The maximum key distribution broadcast size in an IPv4-based network is 64 KB.  show possible values for m and t, given this constraint for exemplary embodiments described as Constructions  and , respectively. It will be appreciated that larger broadcasts are less likely to reach their destinations. If it is assumed key distribution broadcasts are lost independently at random at a rate of 1%, and consider a key distribution broadcast made out of 45 such key distribution broadcasts or fragments, then there is a 36% chance that one fragment, and hence the broadcast as a whole, will not reach its destination. It will be appreciated that most IP stacks will break large UDP key distribution broadcasts down to 1500-byte Ethernet-key distribution broadcast-sized fragments. If the loss rate reaches 5%, a fairly high value, then the probability that the 64 KB broadcast goes through is only 10%. In other words, recipients will see only every tenth broadcast. Choosing m to be between 10 and 20 solves this problem as users will, in fact, very likely be able to recover missed session keys through self-healing.","As shown in , fixing m to be between 10 and 20 provides values for t between 15 and 20 for Construction , and even larger values for Construction . The dynamic nature of the group supports providing only a moderate degree of collusion resistance. Because the group is dynamic, collusions formed in a pervious session may not be as useful in the current one (e.g., if a member is now revoked, and hence, does not have useful information on the current session key), so a certain amount of new collusion may be necessary in each session. The difficulty in forming useful collusions within a short time period reduces the needed degree of collusion resistance. Therefore, the above mentioned values for t and m should be adequate for most applications.","If the high likelihood of broadcast loss and the associated high latency for key recovery, for example it may take a few sessions until the key of a lost broadcast is learned, associated with Construction  is unacceptable for a given application, there are two straightforward solutions. First, the application can use Construction  and\/or use smaller values for t and m. This will decrease the size of the broadcast substantially, and lower the probability of broadcast loss, in which case a small number of sessions m is sufficient. Second, an implementation in which the group manager broadcasts the m\u22121 shares for previous and future keys, and the current session key, independently, can be used (i.e., the group manager performs the fragmentation). With such an implementation, m smaller broadcasts are used to send the same information as is currently done in one broadcast. Every single one of the smaller broadcasts are used to send the same information as is currently done in one broadcast. Every single one of the smaller broadcasts has a higher probability of reaching its target, and the receivers can still use the subset of shares they receive to self-heal on some of the missed broadcasts.","Because the processes discussed above are defined over a fixed period of m sessions, the session keys corresponding to sessions late in the sequence may be more vulnerable to key distribution broadcast loss because there is less opportunity to form a \u201csandwich\u201d of received key distribution broadcasts. This may also be true of session keys corresponding to the beginning sessions (although, if unicasts are already being used to distribute personal keys, it might make sense to send the first key distribution via unicast as well). By making m a bit larger, we can ensure that with high probability each user will either receive, or be able to recover via self-healing, most of the session keys. However, there is still the issue of distributing new personal keys to each in member in order to deploy the self-healing key distribution for a new round of m sessions.","Self-healing key distribution provides reliable multicast session key distribution in a manner that is stateless and conducive to traceability. A reasonable degree of resistance to both adversarial coalitions and network key distribution broadcast loss can be achieved with overhead of just a single UDP key distribution broadcast per session. In addition, members who experience key distribution broadcast loss can recover missed session keys efficiently upon receipt of a single additional key distribution broadcast. This cuts back on network traffic, decreases the load on the group manager, and reduces the risk of user exposure through traffic analysis.","Self-healing key distribution may be useful in high-security operations, such as the military, where it is necessary to change session keys frequently and to be able to revoke users quickly. Self-healing key distribution works well here because the length of time over which a user must buffer encrypted messages is short, and revocation can be accomplished quickly with the broadcast of a single key distribution broadcast. In addition, the self-healing approach may be useful in commercial content distribution applications in which the content, is highly sensitive. For example, during mergers and acquisitions extensive negotiations involving many representatives from both sides may take place. Frequent session key changes may be necessary and the ability to revoke low-ranking parties during certain exchanges is desirable.","For applications such as those described above, the systems and methods of this invention use polynomial-based secret sharing techniques to achieve non-interactive resistance to key distribution broadcast loss through small broadcasts. In particular, in various exemplary embodiments, there is provided an unconditionally secure construction with broadcast overhead that is on the order of (tm) log q bits, where log q is the session key size, t is the collusion resistance, and m denotes the number of sessions over which self-healing is possible, which is closely correlated with anticipated packet loss.","Further, the systems and methods of this invention allow the possibility of achieving broadcasts of size O((t+mt) log q) bits, by shifting a moderate amount of computation to the user's end. Each of these constructions provides for fast self-healing (the core operation is simple polynomial interpolation) over a fixed set of m sessions and is resistant to collusion.","The use of modular exponentiation-based secret sharing technique as discussed by P. Feldman, A practical Scheme for Non-Interactive Secret Sharing, in Proc. 28th IEEE Symposium on Foundations of Computer Science, 1987, pp. 427-437, which is incorporated herein by reference in its entirety, is used to extend the lifetime of these constructions by allowing users to evolve their personal keys from a base set to an appropriate set of keys for the current set of sessions. In all of these constructions, recovery from loss is possible with no delay on the user's part-after several key distribution packets are lost, a single received key distribution packet is sufficient to recover all the missed session keys. The constructions are stateless; group members are not penalized for being off-line for a period of time. This property is important in wireless applications in which members can quickly become off-line by moving out of broadcast range. In addition, all of the personal keys in the system are traceable. A consequence of the traceability and collusion resistance is that the only way to break the system in a long-term sense without risk of identification, is to form a coalition of more than t users.","Further, it will be appreciated that when implementing a self-healing key distribution scheme, the core issue is parameter choice\/selection that is both appropriate for the intended application and compatible with existing network protocols. As discussed above, the trade-offs between the system parameters that exist while staying within IP packet size constraints are considered. Even if parameters are such that packet fragmentation is required, for example the size constraints are not met, the fragments can be formed in such a way that each fragment is useful to a member whether or not any other fragments are received. As a result, a member may still be able to use the received packets to self-heal or recover session keys directly, even when the packets are fragments of the actual key distribution broadcasts.",{"@attributes":{"id":"p-0144","num":"0143"},"figref":["FIG. 9","FIG. 8"],"b":["200","200","170","175","200","170","175","200","210","171","176","160","200","220","230","240","250","260","270","292"]},"In various exemplary embodiments, the self-healing key distribution system  may optionally include a communication broadcast size reduction circuit, routine or application  and a secret key lifetime extension circuit, routine or application , which are interconnected over one or more data and\/or control buses and\/or application programming interfaces . The memory  includes one or more of a self-healing key distribution and\/or reconstruction with revocation model .","The controller  controls the operation of the other components of the self-healing key distribution system . The controller  also controls the flow of data between components of the self-healing key distribution system  as needed. The memory  can store information coming into or going out of the self-healing key distribution system , may store any necessary programs and\/or data implementing the functions of the self-healing key distribution system , and\/or may store data and\/or user-specific key broadcast information at various stages of processing.","The memory  includes any machine-readable medium and can be implemented using appropriate combination of alterable, volatile or non-volatile memory or non-alterable, or fixed, memory. The alterable memory, whether volatile or non-volatile, can be implemented using any one or more of static or dynamic RAM, a floppy disk and disk drive, a writable or re-rewriteable optical disk and disk drive, a hard drive, flash memory or the like. Similarly, the non-alterable or fixed memory can be implemented using any one or more of ROM, PROM, EPROM, EEPROM, an optical ROM disk, such as a CD-ROM or DVD-ROM disk, and disk drive or the like.","In various exemplary embodiments, the self-healing key distribution model  which the self-healing key distribution system  uses to construct\/recover a lost key for a missing broadcast is based on secret sharing techniques discussed above to bind the ability of users to recover from key distribution broadcast loss to the user's membership status.","To enable secure multicast communication between the group members\/users U-Uover the public channel or non-secure communication network, the group manager Uissues to each group user a personal key S-S. In various exemplary embodiments, the group manager Uemploys one or more personal key distribution circuits, routines or applications  to issue a personal key to each group user U-U.","Periodically, the group manager issues a session key to group members. In various exemplary embodiments, the group manager employs one or more circuits, routines or applications, including for example the session key distribution circuit, routine or application  to distribute key distribution broadcasts to the user member.","In various exemplary embodiments, to allow the reconstruction of a lost key using one or more of the self-healing techniques discussed above, the group manager provides encoded key information using one or more circuits, routines or applications, including for example the self-healing key distribution circuit, routine or application .","To reconstruct\/recover\/determine a lost key distribution broadcast, the user member employs the self-healing key distribution\/reconstruction circuit, routine or application  to combine the information from any key distribution broadcast preceding the lost key distribution broadcast with information from any key distribution broadcast following the lost key distribution broadcast based on a self-healing key distribution technique.","In various exemplary embodiments, to reduce the size of the broadcast, the user member employs the communication broadcast size reduction circuit, routine or application  using one or more broadcast size reduction techniques discussed above.","In various exemplary embodiments, to extend the life of the secret key provided, the user member employs the secret key lifetime extension circuit, routine or application  using one or more secret key lifetime extension techniques discussed above.","It will be appreciated by those skilled in the art that in any application of self-healing key distribution the expected number of consecutive sessions in which key distribution broadcasts are lost must be less than the number of sessions in-between any two intervals of membership for a particular user. This is generally the case. For example, in group conferencing over the Internet, a burst of loss amongst the key distribution broadcasts is likely to only cover an interval of time on the order of seconds, however the length of time during which a user may be revoked (to allow for discussion of sensitive information, for example) will be at least on the order of several minutes. The self-healing approach to reliable key distribution is applicable for such applications because it is unlikely that a user will abuse self-healing by leaving and rejoining the group within a short time period.","While this invention has been described in conjunction with the exemplary embodiments outlined above, it is evident that many alternatives, modifications and variations will be apparent to those skilled in the art. Accordingly, the exemplary embodiments of the invention, as set forth above, are intended to be illustrative, not limiting. Various changes may be made without departing from the spirit and scope of the invention."],"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various exemplary embodiments of the systems and methods of this invention described in detail below, with reference to the attached drawing figures, in which:",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7","b":"3"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 8","b":"4"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
