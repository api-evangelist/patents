---
title: Method, system, and storage medium for implementing intelligent team management services
abstract: A method, system, and storage medium for implementing intelligent team management services. The method includes associating selected individuals with a datastore. The datastore houses content designated as key information and the selected individuals are designated as an entity. The method also includes creating a distribution list in a messaging application. The distribution list includes the selected individuals. The method further includes providing the selected individuals with access to the datastore.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08190642&OS=08190642&RS=08190642
owner: International Business Machines Corporation
number: 08190642
owner_city: Armonk
owner_country: US
publication_date: 20041118
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"p":["Embodiments of the invention relate generally to data processing and communications services, and more particularly, to a method, system, and storage medium for implementing intelligent team management services.","Various organizational capabilities are provided by software products on the market. For example, file management features are typically included with word processing applications, and group classifications are provided by email and personal information management applications. Group classifications refer to designated selections of individuals to which, e.g., a communication may be directed via the email application. These features are often very helpful to application users that desire assistance in the management of organizational activities.","Additional organizational functionality is desirable, however, for application users who manage a variety of data that needs to be provided to individuals or groups of individuals. For example, it would be desirable to associate information or content items with selected individuals or groups such that up-to-date content is always available to the appropriate individuals, even when a targeted group of individuals changes over time.","Exemplary embodiments relate to a method, system, and storage medium for implementing intelligent team management services. The method includes associating selected individuals with a datastore. The datastore houses content designated as key information and the selected individuals are designated as an entity. The method also includes creating a distribution list in a messaging application. The distribution list includes the selected individuals. The method further includes providing the selected individuals with access to the datastore.","The system includes a host system in communication with at least one client system and storage device over a network. The system also includes a messaging application executing on the host system and an intelligent team management application executing on at least one of the host system and the client system. The intelligent team management application associates selected individuals with a datastore in the storage device. The datastore houses content designated as key information and the selected individuals are designated as an entity. The intelligent team management application also creates a distribution list in the messaging application. The distribution list includes the selected individuals. The intelligent team management application also provides the selected individuals with access to the datastore via the client system.","The storage medium is encoded with machine-readable program code for implementing intelligent team management services. The program code includes instructions for causing a processor to implement a method. The method includes associating selected individuals with a datastore. The datastore houses content designated as key information and the selected individuals are designated as an entity. The method also includes creating a distribution list in a messaging application. The distribution list includes the selected individuals. The method further includes providing the selected individuals with access to the datastore.","Other systems, methods, and\/or computer program products according to exemplary embodiments will be or become apparent to one with skill in the art upon review of the following drawings and detailed description. It is intended that all such additional systems, methods, and\/or computer program products be included within this description, be within the scope of the present invention, and be protected by the accompanying claims.","In accordance with exemplary embodiments, a method, system, and storage medium for implementing intelligent team management services are provided. The intelligent team management system provides the ability to manage data associated with groups or teams, as well as handle the provisioning of the data to selected teams and team members. The intelligent team management system enables authorized individuals to associate data to selected individuals or team (also referred to herein as an entity) such that new members will receive, and\/or have access to, designated information (e.g., documents, links, calendar events, training materials, etc.) that is considered relevant to the team. This designated information is referred to herein as key content items. Further, the intelligent team management system enables authorized individuals to determine the manner in which the designated information is added to, and maintained within, a group or team repository.","A team refers to any grouping of individuals for a specified purpose and which is determined to possess one or more common interests. A team owner refers to an individual that is responsible for establishing and maintaining a team and related team information. A team member refers to an individual assigned to a team, other than the team owner.","Turning now to , a block diagram of a system upon which the intelligent team management system may be implemented in exemplary embodiments will now be described. The intelligent team management system of  includes a host system  in communication with two \u2018owner\u2019 client systems A and B and five \u2018member\u2019 client systems A-E via a network . Host system  may be implemented using one or more servers operating in response to a computer program stored in a storage medium accessible by the server. The host system  may operate as a network server (e.g., a web server ) to communicate with client systems A-B and A-E and perhaps external entities outside of network . The host system  may handle sending and receiving information to and from owner client systems A-B and member client systems A-E and may perform associated tasks.","The host system  may also operate as an application server. The host system  executes one or more computer programs to provide intelligent team management services. These one or more computer programs are referred to collectively herein as an intelligent team management application . In exemplary embodiments, host system  executes a messaging application  (e.g., an email\/personal information management (PIM) application), a web application , and a word processing application . In alternative embodiments, the intelligent team management application  may be built in or incorporated into one or more systems\/applications executing on host system . For example, the email\/PIM application  may provide the intelligent team management system functions, or alternatively, the network operating system of host system  may include the functionality of the intelligent team management system. If the intelligent team management application  is implemented separately from other applications, it may include an application programming interface (API) for communicating with one or more of the applications (e.g., email\/PIM application , web server , word processing application , etc.) executing on host system .","Processing of intelligent team management activities may be shared by the owner client systems A-B (and authorized member client systems A-E) and the host system  by providing an application (e.g., java applet) to the client systems A-B, A-E. Alternatively, client systems A-B, A-E may include stand-alone software applications for performing a portion or all of the processing described herein. As previously described, it is understood that separate servers may be utilized to implement the network server functions and the application server functions of host system . Alternatively, the network server and the application server may be implemented by a single server executing computer programs to perform the requisite functions described with respect to host system .","Owner client systems A-B and member client systems A-E may be coupled to host system  via network . Each of client systems A-B and A-E may be implemented using a general-purpose computer executing a computer program for carrying out some of the processes described herein. The client systems A-B and A-E may be personal computers (e.g., a lap top, a personal digital assistant) or host attached terminals.","For purposes of illustration, client systems A-B are operated by supervisors or management personnel (also referred to herein as \u2018team\u2019 owners) and client systems A-E are operated by members of a team that is lead by a team owner. As shown in , client system A is operated by a team owner whose team comprises member client systems A-D. This team is represented as team  in the system of . Sub-teams, or teams within a team (a subset of a team), may also be implemented as shown in the intelligent team management system of . For example, within team  is a sub-team  comprising owner client system A and member client systems A-C.","In exemplary embodiments, the intelligent team management system shown in  includes a storage device . Storage device  is in communication with host system  and may be implemented using a variety of devices for storing electronic information. It is understood that the storage device  may be implemented using memory contained in the host system  or it may be a separate physical device. The storage device  is logically addressable as a consolidated data source across a distributed environment that includes network . Information stored in the storage device  may be retrieved and manipulated via the host system  and authorized users of clients systems A-B and client systems A-E. The storage device  houses one or more team datastores, access control lists, and other information desired by the enterprise of host system . A team datastore refers to storage space allocated by the intelligent team management system to a team. The datastore houses key content items accessible to the team's members as will be described further herein. In an exemplary embodiment, the host system  operates as a database server and coordinates access to application data including data stored on storage device .","Network  may be any type of known network including, but not limited to, a wide area network (WAN), a local area network (LAN), a global network (e.g. Internet), a virtual private network (VPN), and an intranet. The network  may be implemented using a wireless network or any kind of physical network implementation known in the art. Client systems A-B and\/or client systems A-E may be coupled to the host system  through multiple networks (e.g., intranet and Internet) so that not all client systems are coupled to the host system  through the same network. One or more of the client systems and the host system  may be connected to the network  in a wireless fashion. In one embodiment, the network is an intranet and one or more client systems execute a user interface application (e.g. a web browser) to contact the host system  through the network  while another client system is directly connected to the host system .","As indicated above, the intelligent team management system may be implemented via a separate application  or may be built into one or more existing applications (e.g., email\/PIM application , word processing application , operating system, a combination of the above). If the intelligent team management system is implemented via a separate application , it may include a user interface for guiding a user through its processes. The flow diagram of  describes a process for creating a team whereby the intelligent team management system provides a separate application  that interfaces with email\/PIM application .  depicts a user interface screen  and main menu of the intelligent team management application  that corresponds to the process recited in the flow diagram of .  depicts a user interface screen  for creating a team via the email\/PIM application , whereby the intelligent team management application  is built into to the email\/PIM application . The intelligent team management system provides the ability for authorized individuals (e.g., team owners) to create teams and sub-teams as will now be described with reference to .","The process described in the flow diagram of  begins at step  whereby a team owner desires to create a new team using the intelligent team management application . Upon initiating the intelligent team management application  via, e.g., owner client system A, a user interface screen  () and main menu is presented to the team owner at step . Alternatively, if the intelligent team management application  is built into the email\/PIM application , the team owner may access this option via, e.g., the Contacts option  from the team owner's inbox shown in the user interface screen  of .","As can be seen from the user interface screen  (), three menu options are available to the team owner: TEAM\/SUB-TEAM option , CONTENT ITEM option , and TEAM MEMBERS option . To create a new team, the team owner selects the TEAM\/SUB-TEAM option . A sub-window  is presented with further options within the TEAM\/SUB-TEAM option , namely, CREATE , VIEW , and EDIT . The team owner selects the CREATE option . The process flow of  proceeds to step , whereby the intelligent team management application  prompts the team owner to enter general information for the team (e.g., team name or identification). As shown in , a box  for entering a team name is provided.","The intelligent team management system application  then prompts the team owner to enter default access control levels (e.g., box ) for the team created at step . The default access control levels will prescribe the nature of access to materials and information for members of the team once the members have been specified. For example, access control may allow \u2018read\u2019 access to information in the team datastore but not \u2018write\u2019 access.","At step , the intelligent team management application  queries the team owner to see whether a sub-team is needed for this new team. This step may be useful when the team owner determines that some team members will need greater access to information in the team's datastore than other team members. If the team owner responds affirmatively, the intelligent team management application  prompts the team owner to enter information relating to the sub-team to be created at step  (e.g., sub-team name or identification). Alternatively, the user interface  of  provides a box  for providing the name of the sub-team. Again, the team owner is prompted to establish access control levels for the sub-team at step  (e.g., box ).","Once the team\/sub-team has been created, it is determined whether the team owner is finished at step . If not, the process returns to step  (if the team owner wishes to create another team) or step  (if the team owner wishes to create another sub-team). Otherwise, if the team owner is finished, or alternatively, if upon setting the access levels for the team (step ), the team owner does not wish to create a sub-team, the information entered by the team owner is provided to the email\/PIM application at step  for processing. The processing includes establishing a distribution list of team members such that group messaging may be implemented. Alternatively, if the intelligent team management application  is incorporated into the email\/PIM application , the email\/PIM application  already possesses the team\/sub-team information; thus, no transfer of information is required. The intelligent team management application  then creates a datastore in storage device  for the newly created team\/sub-team at step  and the process ends at step . This datastore is accessible only to the designated team members via the access control settings.","A team owner or other authorized individual (e.g., via delegation to a team member), may add, edit, or remove members from a team via the intelligent team management system. These changes in membership are carried through to the corresponding team datastore such that access to team information (e.g., key content items) may be affected in accordance with the nature of the membership change. For example, if a new member is added to a team, the new member is provided with access to information in the team's datastore or links to information specified in the team's key content item index. The membership functions may be implemented via the intelligent team management application  in a manner similar to that described in  above with respect to the team creation processes.  is a flow diagram of a process for adding a member to a team or sub-team utilizing the intelligent management system.  is a user interface screen illustrating a sample email window  of a team owner's inbox for managing team membership. While the process described below is directed to the addition of a new member to a team, it will be understood that other membership activities may be implemented via the intelligent team management system as well (e.g., edit membership, view membership, delete a member, etc.).","The process is initiated at step  whereby a team owner accesses the intelligent team management application  via, e.g., owner client system A of , and the user interface screen  of  is presented to the team owner along with a menu of options at step . The team owner selects the TEAM MEMBERS option  on the main menu of . Alternatively, if the intelligent team management system is built into the email\/PIM application , the team owner accesses the email\/PIM application  and the user interface screen  of  is presented. The team owner selects the Contacts option . The window  is then presented to the team owner. If the intelligent team management application  is a separate program, the intelligent team management application  may present a window similar to that shown in window .","The team owner may view the current list of team members by selecting option . The team owner adds new members by selecting option  at step . A sub-window  is presented. The team owner may select names from his\/her contacts folder (e.g., option ) or may select names from host system's global address list (e.g., option ). Upon selecting one of options  or , the corresponding list of names are presented in box . The team owner browses through the list of names in box , selects a desired name from the list, and the name is automatically copied to box . Alternatively, the team owner may simply enter the individual's name to be added in box  and the intelligent team management system copies the name to box .","The team owner then enters the access levels authorized for this new team member at step . This step may be performed in a manner similar to that described in  for setting access levels for a team. Although access levels have been previously set for a team\/sub-team as described in , the team owner may customize the access permissions for each individual in step  if desired. At step , if it is determined that a team datastore has not yet been created for the team, this may be performed in step . The team member information is then provided to the email\/PIM application  (if the intelligent team management system is separately executed from the email\/PIM application ) at step .","The team owner is then prompted to specify whether the newly added team member is to be immediately notified of the key content information provided in the team datastore at step . This may be accomplished by selecting the checkbox  in . If the team owner indicates that key content information should be provided to the new team member, the intelligent team management system notifies the new member via, e.g., email notification and attachment or link to the team datastore at step . A sample key content item index is shown in .","At step , it is determined whether the team owner is finished. For example, the team owner may wish to add the new team member to one or more existing sub-teams of the team. If the team owner is not finished, the process returns to step . Otherwise, the process ends at step . Examples of a team and sub-team are shown in , whereby client systems A and A-D belong to team , and team  further comprises a sub-team  that includes client systems A and A-C.","In accordance with exemplary embodiments, key content items are managed by the intelligent team management system as described herein. The intelligent team management system includes an intelligent agent for providing search and analysis capabilities relating to content items. For example, the intelligent team management system may provide the intelligence to identify key terms within a document and determine whether there is a correlation to similar terms provided within a team datastore. Likewise, once a source of a content item is determined (e.g., team owner) by the intelligent team management system, the intelligent team management system may provide the ability to determine the members corresponding to the source of the item and, in association with key terms, determine the likelihood of whether a content item is material to a particular team. Armed with this information, the intelligent team management system may then suggest to a team owner that the content item be qualified as a key content item. Of course, it will be appreciated that other types of analysis and criteria may be utilized by the intelligent team management system.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 7","b":["700","702","704","700","706"]},"A team owner or authorized individual may create key content items for a team (and existing content items may be associated with, or designated as, a key content item) as described in the flow diagram of . In accordance with exemplary embodiments, a team owner begins the process of creating a key content item by initiating the intelligent team management system application  via, e.g., owner client system A at step . The main menu (user interface screen  of ) is presented to the team owner at step . The team owner selects the CONTENT ITEM option . Alternatively, the intelligent team management system may be built into one or more other applications (e.g., , , operating system, etc.). For purposes of illustration, the content items shown in  and A-B are generated from the intelligent team management system which is built into email\/PIM application .","The team owner creates a content item at step . The content item may be a document, report, meeting, appointment, or other similar item. The intelligent team management system searches storage device  to determine whether this content item is associated with an existing team at step . If a team exists that is associated with the content item, the intelligent team management system then prompts the team owner to specify whether the content item is a key content item at step . A sample user interface screen B including this query is shown in . Alternatively, as described above, the intelligent team management system may determine through analysis, that this item may be a key content item and suggest to the team owner that it be designated as such.","If the content item is determined not to be a key content item, the intelligent team management system queries the team owner to determine whether all team members should be notified of the content item at step . This query is shown in the user interface screen B of . A content item, for example, that is not a key item but may involve a timely matter, may be immediately distributed to the team if desired. If, on the other hand, the content item is a key content item, the intelligent team management system stores the content item as a key content item in the respective datastore at step  and the process continues to step  where a notification query is presented to the team owner as described above.","If the team owner has indicated a desire to notify the team members of the key content item, the intelligent team management system application  sends a notification of the new content item to the team members at step . The intelligent team management system application  then creates a team datastore for the content item at step . The content item is then sent to the email\/PIM application  (if needed) at step  and the process ends at step .","Alternatively, returning back to step , if the content item is not associated with a team or, if at step  no notification is desired, the process ends at step  as the content item may simply be stored as a non-team-related item in a separate storage space.","As described above with respect to , the intelligent team management system of the present invention may reside on a stand-alone computer system which may have access to the Internet, or may reside on a computer system which is part of the network through which there is Internet access. With a connection to a network and\/or the Internet, there are several different ways in which the process software used to implement the systems and methods of the intelligent team management system may be integrated with the network, and deployed using a local network, a remote network, an e-mail system, and\/or a virtual private network. The following descriptions review the various ways of accomplishing these activities.","Integration of Intelligent Team Management System Software. To implement the intelligent team management systems and methods of the present invention, process software, which is composed of the software as described above and related components including any needed data structures, is written and then if desired, integrated into a client, server, and network environment. This integration is accomplished by taking those steps needed to enable the process software to coexist with other application, operating system and network operating system software and then installing the process software on the clients and servers in the environment where the process software will function. An overview of this integration activity will now be provided, followed by a more detailed description of the same with reference to the flowcharts of .","The first step in the integration activity is to identify any software on the clients and servers where the process software will be deployed that are required by the process software or that need to work in conjunction with the process software. This includes the network operating system, which is the software that enhances a basic operating system by adding networking features.","Next, the software applications and version numbers are identified and compared to the list of software applications and version numbers that have been tested to work with the process software. Those software applications that are missing or that do not match the correct version are upgraded with the correct version numbers. Program instructions that pass parameters from the process software to the software applications will be checked to ensure the parameter lists match the parameter lists required by the process software. Conversely, parameters passed by the software applications to the process software will be checked to ensure the parameters match the parameters required by the process software. The client and server operating systems including the network operating systems are identified and compared to the list of operating systems, version numbers, and network software that have been tested to work with the process software. Those operating systems, version numbers, and network software that do not match the list of tested operating systems and version numbers are then upgraded on the clients and servers to the required level.","After ensuring that the software resident on the computer systems where the process software is to be deployed is at the correct version level(s), that is, has been tested to work with the process software, the integration is completed. This is done by installing the process software on the clients and servers. Armed with the foregoing overview of the integration activity, the following detailed description of the same should be readily understood.","Referring to , step  begins the integration of the process software for implementing the search and reference systems and methods of the present invention. It is determined whether there are any process software programs that will execute on a server or servers at step . If this is not the case, then integration proceeds to determine if the process software will execute on clients at step . If there are process software programs that will execute on a server(s), then the server addresses are identified at step . The servers are checked to see if they contain software that includes the operating system (OS), applications, and network operating systems (NOS), together with their version numbers, that have been tested with the process software at step . The servers are also checked to determine if there is any missing software that is required by the process software as part of the activity at step . A determination is made whether the version numbers match the version numbers of OS, applications and NOS that have been tested with the process software at step . If all of the versions match, and there is no missing required software, the integration continues at step . If one or more of the version numbers do not match, then the unmatched versions are updated on the server or servers with the correct versions at step . Additionally, if there is missing required software, then it is updated on the server or servers at step . The server integration is completed by installing the process software at step .","Step , which follows either step ,  or , determines if there are any programs of the process software that will execute on the clients. If no process software programs execute on the clients, the integration proceeds to step  and exits. If there are process software programs that will execute on clients, the client addresses are identified at step .","At step , the clients are checked to see if they contain software that includes the operating system (OS), applications, and network operating systems (NOS) software, together with their version numbers, that have been tested with the process software. The clients are also checked at step  to determine if there is any missing software that is required by the process software.","At step , a determination is made if the version numbers match the version numbers of OS, applications and NOS that have been tested with the process software. If all of the versions match, and there is no missing required software, then the integration proceeds to step  and exits.","If one or more of the version numbers do not match, then the unmatched versions are updated on the clients with the correct versions at step . In addition, if there is missing required software, then it is updated on the clients as part of step . The client integration is completed by installing the process software on the clients at step . The integration proceeds to step  and exits.","Deployment of Intelligent Team Management System Software. It should be well understood that the process software for implementing the intelligent team management system of the present invention may be deployed by manually loading the process software directly into the client, server, and proxy computers from a suitable storage medium such as a CD, DVD, etc. It is useful to provide an overview of still other ways in which the process software may also be automatically or semi-automatically deployed into one or more computer systems. The process software may be deployed by sending or loading the process software to a central server or a group of central servers. From there, the process software may then be downloaded into the client computers that will execute the process software. Alternatively, the process software may be sent directly to the client system via e-mail. The process software is then either detached to a directory or loaded into a directory by a button on the e-mail that executes a program that detaches the process software attached to the e-mail into a directory. Another alternative is to send the process software directly to a directory on the hard drive of a client computer. Also, when there are proxy servers, the automatic or self-automatic deployment process will select the proxy server code, determine on which computers to place the proxy servers' code, transmit the proxy server code, and then install the proxy server code on the proxy computer. The process software will be transmitted to the proxy server and then stored on the proxy server. Armed with this overview of the possible deployment processes, the following detailed description of the same with reference to , where the deployment processes are illustrated, will be more easily understood.","Step  begins the deployment of the process software. It is determined whether there are any programs that will reside on a server or servers when the process software is executed at step . If the answer is \u201cyes\u201d, then the servers that will contain the executables are identified, as indicated in step  in . The process software for the server or servers is transferred directly to the servers' storage via FTP or some other protocol or by copying though the use of a shared file system at step . The process software is then installed on the servers as indicated at step .","Next, as shown in step  in , a determination is made on whether the process software is to be deployed by having users access the process software on a server or servers. If the users are to access the process software on servers, then the server addresses that will store the process software are identified at step .","Next, as shown at step , a determination is made if a proxy server is to be built to store the process software. A proxy server is a server that sits between a client application, such as a Web browser, and a real server. It intercepts all requests to the real server to see if it can fulfill the requests itself. If not, it forwards the request to the real server. The two primary benefits of a proxy server are to improve performance and to filter requests. If a proxy server is required, then the proxy server is installed as indicated at step . Next, the process software for implementing the present invention is sent to the servers, as indicated in step  either via a protocol such as FTP or it is copied directly from the source files to the server files via file sharing. Another way of sending the process software to the servers is to send a transaction to the servers that contained the process software and have the server process the transaction. In this manner, the process software may be received by and copied into the server's file system. Once the process software is stored at the servers, the users via their client computers, then access the process software on the servers and copy it into to the file systems of their client computers at step . Another alternative is to have the servers automatically copy the process software to each client and then run the installation program for the process software at each client computer. Either way, the user computer executes or causes to be executed the program that installs the process software on the client computer at step , then the process exits at step .","Continuing now at step  in , a determination is made as to whether the process software is to be deployed by sending the process software to users via e-mail. If the answer is yes, then, as indicated at step , the set of users where the process software will be deployed are identified together with the addresses of the user client computers. The process software is sent via e-mail in step  (shown in ) to each of the users' client computers. Then, as indicated in step , the users receive the e-mail, and then detach the process software from the e-mail to a directory on their client computers at step . The user then executes the program that installs the process software on his client computer at step , and then exits the process at step .","Continuing at step  (see bottom of ), a determination is made on whether the process software will be sent directly to user directories on their client computers. If so, the user directories are identified at step . Then, the process software is transferred directly to the identified directory on the user's client computer, as indicated in step . This can be done in several ways such as, but not limited to, sharing of the file system directories and then copying them from the sender's file system to the recipient user's file system or, alternatively, using a transfer protocol such as File Transfer Protocol (FTP). Next, the users access the directories on their client file systems, as indicated in step , in preparation for installing the process software. Finally, the user executes the program that installs the process software on his client computer at step  and then exits the process at step .","Use of Virtual Private Networks for Intelligent Team Management System Software. The process software may be deployed, accessed and executed through the use of a virtual private network (VPN). A VPN is any combination of technologies that can be used to secure a connection through an otherwise unsecured or untrusted network. VPNs are used to improve security and can often also reduce operational costs. The VPN makes use of a public network, usually the Internet, to connect remote sites or users together. Instead of using a dedicated, real-world connection such as a leased line, the VPN uses \u201cvirtual\u201d connections routed through the Internet from the company's private network to the remote site or employee(s). Access to the software via a VPN can be provided as a service by specifically constructing the VPN for purposes of delivery or execution of the process software (i.e., the software resides elsewhere). In such an instance, the lifetime of the VPN is often limited to a given period of time or to a given number of deployments based on an amount paid.","The process software may be deployed, accessed, and executed through either a remote-access VPN or a site-to-site VPN. When using a remote-access VPN, the process software is typically deployed, accessed, and executed via the secure, encrypted connections between a company's private network and remote users through a third-party service provider. The enterprise service provider (ESP) sets up and\/or authorizes access to a network access server (NAS) and provides the remote users with desktop client software for their computers. The telecommuters can then dial a phone number (often a toll-free number) or attach directly via a cable, DSL, or wireless modem to reach the NAS and use their VPN client software to access the corporate network and to access, download, and execute the process software.","When using a site-to-site VPN, the process software is typically deployed, accessed and executed through the use of dedicated equipment and large-scale encryption. These tools are often used to connect multiple fixed sites of a larger company over a public network such as the Internet.","The process software is transported over the VPN via a process called tunneling. Tunneling is process involving the placing of an entire packet within another packet and sending it over a network. The protocol of the outer packet is understood by the network and by both points, called tunnel interfaces, where the packet enters and exits the network. Tunneling generally encapsulates the private network data and protocol information within the public network transmissions so that the private network protocol information appears to the public network simply as unintelligible data. Armed with the foregoing overview of virtual private networks and how they operate and how they may be used to transport the process software, the following more detailed description of same with reference to the flowcharts of  should be more readily understood.","Step  in  begins the virtual private network (VPN) process. A determination is made at step  to see if a VPN for remote access is required. If it is not required, then flow proceeds to step . If it is required, then flow proceeds to step  where a determination is made as to whether a remote access VPN exists that is available for use.","If a remote access VPN does exist, then flow proceeds to step  in . Otherwise flow proceeds to step  (see top of ), where a third party provider that will provide the secure, encrypted connections between the company's private network and the company's remote users is identified. Next, as indicated in step , the company's remote users are identified. Then, at step , the identified third party provider then sets up a network access server (NAS). The NAS allows the remote users to dial a phone number (typically a toll free number) or attach directly via a cable, DSL, wireless or other modem to access, download and install the desktop client software for the remote-access VPN as indicated at step .","Returning to step  in , after the remote access VPN has been built or if it been previously installed, the remote users can then access the process software by dialing into the NAS or attaching directly via a cable, DSL, or other modem into the NAS. This step  allows entry into the corporate network, as indicated at step , where the process software may be accessed. The process software is transported to the remote user's desktop computer over the network via tunneling. During tunneling, see step , the process software is divided into packets and each packet, including the data and protocol for that packet, is placed within another packet. When the process software arrives at the remote user's desktop computer, it is removed from the packets, reconstituted, and then may be executed on the remote users desktop, as indicated at step .","Returning now to step  in , a determination is made to see if a VPN for site-to-site access is required. If it is not required, then the process exits at step . If it is required, flow proceeds to step  (see top of ) to determine if the site-to-site VPN exists. If it does exist, then flow proceeds to step . If it does not exist, then as indicated at step , dedicated equipment required to establish a site-to-site VPN is installed. Then the large-scale encryption is built into the VPN at step .","After the site-to-site VPN has been built or if it had been previously established, the users access the process software via the VPN as indicated in step . Next, the process software is transported to the site users over the network via tunneling as indicated in step . As previously explained, the process software is divided into packets and each packet including the data and protocol is placed within another packet, as indicated in step . When the process software arrives at the remote user's desktop, it is removed from the packets, reconstituted, and is executed on the site users desktop at step . The process then proceeds to step  and exits.","On Demand Computing for Intelligent Team Management System Software. The process software for implementing the intelligent team management system of the present invention may be shared; that is, it may be used to simultaneously serve multiple customers in a flexible, automated fashion. It is process software that is easily standardized, requiring little customization, and it is scalable, thus providing capacity on demand in a pay-as-you-go model known as \u201con demand\u201d computing. An overview of on demand computing as applied to the intelligent team management system software will now be provided, followed by a more detailed description of same made with reference to the flowcharts of .","The process software for implementing the present invention can be stored on a shared file system accessible from one or more servers. The process software may be executed via transactions that contain data and server processing requests that use measurable CPU units on the accessed server. CPU units are units of time such as minutes, seconds, and hours on the central processor of the server. Additionally, the accessed server may make requests of other servers that require CPU units. CPU units are an example that represents but one measurement of use. Other measurements of use include, but are not limited to, network bandwidth, memory usage, storage usage, packet transfers, complete transactions, etc.","When multiple customers use the same process software application, their transactions are differentiated by the parameters included in the transactions that identify the unique customer and the type of service for that customer. All of the CPU units and other measurements of use that are used for the services for each customer are recorded. When the number of transactions to any one server reaches a number that begins to affect the performance of that server, other servers are accessed to increase the capacity and to share the workload. Likewise, when other measurements of use such as network bandwidth, memory usage, storage usage, etc., approach a capacity so as to affect performance, additional network bandwidth, memory usage, storage etc. are added as needed to share the workload.","The measurements of use used for each service and customer are sent to a collecting server that sums the measurements of use for each customer for each service that was processed anywhere in the network of servers that provide the shared execution of the process software. The summed measurements of use units are periodically multiplied by unit costs and the resulting total process software application service costs are alternatively sent to the customer and or indicated on a web site accessed by the customer who then remits payment to the service provider.","In another embodiment, the service provider requests payment directly from a customer account at a banking or financial institution. In yet another embodiment, if the service provider is also a customer of the customer that uses the process software application, the payment owed to the service provider is reconciled to the payment owed by the service provider to minimize the transfer of payments. Aimed with the foregoing overview, the detailed description of the on demand computing with respect to the process software, and the following detailed description of same with reference to  where the on demand processes are illustrated, will be more easily understood.","Step  begins the On Demand process. A transaction is created that contains the unique customer identification, the requested service type and any service parameters that further specify the type of service as indicated in step . The transaction is then sent to the main server as shown in step . In an On Demand environment, the main server may initially be the only server. Then, as capacity is consumed, other servers are added to the On Demand environment.","The server central processing unit (CPU) capacities in the On Demand environment are queried at step . The CPU requirement of the transaction is estimated, then the servers' available CPU capacity in the On Demand environment are compared to the transaction CPU requirement to see if there is sufficient CPU available capacity in any server to process the transaction as indicated in step . If there is not sufficient server CPU available capacity, then additional server CPU capacity is allocated to process the transaction as indicated in step . If there was already sufficient available CPU capacity, the transaction is sent to a selected server at step .","Before executing the transaction, a check is made of the remaining On Demand environment to determine if the environment has sufficient available capacity for processing the transaction as indicated at step . This environment capacity consists of elements such as, but not limited to, network bandwidth, processor memory, storage, etc. If there is insufficient available capacity, then capacity will be added to the On Demand environment as indicated in step . Next the required software to process the transaction is accessed, loaded into memory, and the transaction is executed as indicated in step .","The usage measurements are recorded as indicated in step . The usage measurements consist of the portions of those functions in the On Demand environment that are used to process the transaction. The usage of functions such as, but not limited to, network bandwidth, processor memory, storage and CPU cycles are what is recorded. The usage measurements are summed, multiplied by unit costs, and then recorded as a charge to the requesting customer as indicated in step .","If the customer has requested that the On Demand costs be posted to a web site as indicated in step , then they are posted to a web site at step . If the customer has requested that the On Demand costs be sent via e-mail to a customer address as indicated in step , then they are sent to the customer via e-mail as indicated in step . If the customer has requested that the On Demand costs be paid directly from a customer account at step , then payment is received directly from the customer account at step . The On Demand process proceeds to step  and then exits.","As indicated above, the intelligent team management system provides the ability to manage data associated with groups or teams, as well as handle the provisioning of the data to selected teams or team members. The intelligent team management system enables authorized individuals to associate data to the team such that new members will receive designated information (e.g., documents, links, calendar events, training materials, etc.) that is considered relevant to their team. Further, the intelligent team management system enables authorized individuals to determine the manner in which the designated information is added to, and maintained within, a group or team repository.","As described above, the embodiments of the invention may be embodied in the form of computer implemented processes and apparatuses for practicing those processes. Embodiments of the invention may also be embodied in the form of computer program code containing instructions embodied in tangible media, such as floppy diskettes, CD-ROMs, hard drives, or any other computer readable storage medium, wherein, when the computer program code is loaded into and executed by a computer, the computer becomes an apparatus for practicing the invention. An embodiment of the present invention can also be embodied in the form of computer program code, for example, whether stored in a storage medium, loaded into and\/or executed by a computer, or transmitted over some transmission medium, such as over electrical wiring or cabling, through fiber optics, or via electromagnetic radiation, wherein, when the computer program code is loaded into and executed by a computer, the computer becomes an apparatus for practicing the invention. When implemented on a general-purpose microprocessor, the computer program code segments configure the microprocessor to create specific logic circuits.","While the invention has been described with reference to exemplary embodiments, it will be understood by those skilled in the art that various changes may be made and equivalents may be substituted for elements thereof without departing from the scope of the invention. In addition, many modifications may be made to adapt a particular situation or material to the teachings of the invention without departing from the essential scope thereof. Therefore, it is intended that the invention not be limited to the particular embodiment disclosed as the best mode contemplated for carrying out this invention, but that the invention will include all embodiments falling within the scope of the appended claims. Moreover, the use of the terms first, second, etc. do not denote any order or importance, but rather the terms first, second, etc. are used to distinguish one element from another."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Referring now to the drawings wherein like elements are numbered alike in the several FIGURES:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 9A"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 9B"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIGS. 10A and 10B"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIGS. 11A and 11B"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIGS. 12A and 12B"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIGS. 13A through 13C"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIGS. 14A and 14B"}]},"DETDESC":[{},{}]}
