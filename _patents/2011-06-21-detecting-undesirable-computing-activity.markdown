---
title: Detecting undesirable computing activity
abstract: Instances executing within a programmable execution service (“PES”) that are engaged in undesirable computing activity can be identified by comparing activity performed by instances executing within the PES to data describing known undesirable computing activity. Once compromised instances have been identified, other previously unknown undesirable computing activity performed by the compromised instances can be identified by determining whether activity is performed by the compromised instances significantly more often than other instances executing within the PES. New undesirable computing activity discovered using this process could then be utilized to discover other compromised instances.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08938803&OS=08938803&RS=08938803
owner: Amazon Technologies, Inc.
number: 08938803
owner_city: Seattle
owner_country: US
publication_date: 20110621
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["A programmable execution service (\u201cPES\u201d) provides computing resources for executing applications on a permanent or an as-needed basis. The computing resources provided by a PES may include various types of resources, such as data processing resources, data storage resources, data communication resources, and the like. Each type of computing resource may be general-purpose or may be available in a number of specific configurations. For example, data processing resources may be available as virtual machine instances (\u201cinstances\u201d). The instances may be configured to execute applications, including World Wide Web (\u201cWeb\u201d) servers, application servers, media servers, database servers, and the like. Data storage resources may include file storage devices, block storage devices, and the like. The resources provided by a PES can typically be purchased by a customer of the PES and utilized according to various financial models.","Instances executing within a PES may be compromised in various ways. For instance, a malicious attacker might gain control over one or more instances executing within a PES by exploiting vulnerabilities within an operating system or application programs executing on the instances. Once the attacker has gained control over the instances, the attacker might configure the instances to engage in various types of undesirable computing activity. For example, the instances might be programmed to send unsolicited bulk electronic mail messages (\u201cUBE\u201d or \u201cSPAM\u201d), to perform distributed denial of service (\u201cDDOS\u201d) attacks, to host undesirable World Wide Web (\u201cWeb\u201d) sites or other content, or to perform other types of undesirable computing activity. It can be difficult to detect instances executing in a PES that are performing this type of undesirable computing activity.","It is with respect to these and other considerations that the disclosure made herein is presented.","The following detailed description is directed to technologies for detecting undesirable computing activity. Utilizing the technologies described herein, instances executing within a PES that are performing undesirable computing activity (referred to herein as \u201ccompromised instances\u201d) can be identified by comparing computing activity performed by instances executing within the PES to various types of known undesirable computing activity.","Once compromised instances have been identified, previously unknown types of undesirable computing activity can be identified by determining whether certain computing activity is performed by the compromised instances significantly more often than the other instances executing within the PES. For instance, if compromised instances perform certain computing activity a statistically significant number of times more often than the other instances executing within the PES, this activity may be deemed undesirable computing activity. New undesirable computing activity discovered during this process can then be utilized to discover other compromised instances.","It should be appreciated that as few as one occurrence of undesirable computing activity might be considered significant. For instance, a compromised instance might perform only a single DNS lookup operation that has never been performed by other non-compromised instances. In this example, the single DNS lookup operation performed by the compromised instance might be considered significant.","According to one aspect disclosed herein, a PES platform is configured to provide instances of computing resources for executing an application. For example, the PES platform might provide virtual machine instances (\u201cinstances\u201d) for executing an application, such as an e-commerce application or another type of distributed application. Software components that implement the application are deployed to the virtual machine instances provided by the PES platform.","As discussed above, despite strong security measures implemented at the PES, it is possible for instances executing within the PES to become compromised. For instance, a malicious attacker might gain control over one or more instances executing within a PES by exploiting vulnerabilities within an operating system or application programs executing on the instances. In other cases, an attacker might utilize a fraudulently obtained credit card to purchase instances. Instances executing within the PES might also be compromised in other ways. It should be appreciated that the embodiments disclosed herein are not dependent upon the manner in which an instance is compromised.","Once an attacker has compromised one or more instances executing within the PES, the attacker may configure the instances to perform various types of undesirable computing activity. In order to combat this type of behavior, the PES platform disclosed herein is configured with functionality for detecting undesirable computing activity performed by instances executing within the PES.","As utilized herein, the term undesirable computing activity refers to activity performed by an instance within a PES or computing system that is deemed undesirable by the owner or operator of the instance, the PES, or the computing system. Undesirable computing activity might also include computing activity that is malicious, harmful to other computing systems, or unlawful. Examples of undesirable computing activity include, but are not limited to, sending UBE, performing DDOS attacks, hosting undesirable or offensive content or Web sites, cracking Completely Automated Public Turing test to tell Computers and Humans Apart (\u201cCAPTCHA\u201d) codes, and performing functionality for allowing other instances or computers to engage in undesirable activity. It should be appreciated that there are many other types of undesirable computing activity that might be performed by instances executing within a PES and detected using the mechanisms disclosed herein.","As mentioned above, instances performing undesirable computing activity are referred to herein as \u201ccompromised instances.\u201d In general, instances, computers, and other types of computing systems described herein might be referred to as being compromised if the instances, computers, or other types of computing systems are performing undesirable computing activity.","According to one aspect disclosed herein, compromised instances are detected by comparing computing activity performed by instances executing within the PES to data describing known undesirable computing activity. For instance, in one embodiment, a log of activity performed by instances executing in the PES, such as DNS lookup operations, is created. The contents of the log are then compared to a database that identifies known undesirable computing activity, such as known undesirable domains, to identify instances as being compromised. In this example, an instance may be deemed to be compromised if it performs DNS lookup operations for one or more domains that are known to be undesirable.","Once compromised instances have been identified in the manner described above, a countermeasure or other type of activity might be performed in order to prevent further undesirable computing activity by the compromised instances. For example, communication to and from the compromised instances to undesirable domains might be restricted, all communication to and from the compromised instances may be restricted, the compromised instances may be terminated, monitoring of the instance might be increased, and\/or a customer of the PES associated with the compromised instances might be notified. These actions might also be performed in combination.","In other embodiments, no countermeasure is taken with respect to a probably compromised instance. In these embodiments, a record might be made of the suspicious activity and\/or additional monitoring of the instance might be performed. If the instance engages in additional suspicious activity in the future, then a countermeasure or other types of corrective action might be taken. Other types of countermeasures and activities might be performed in response to identifying one or more compromised instances within a PES.","Once compromised instances have been identified within the PES, other types of previously unknown undesirable computing activity might be discovered by monitoring the activity of the compromised instances and comparing the activity of the compromised instances to activity performed by other instances executing within the PES. For example, in one embodiment, new undesirable activity, such as DNS lookup operations for previously unknown undesirable domains, may be identified by logging the DNS lookup operations performed by the compromised instances. A statistical analysis can then be performed to identify activity that is performed by the compromised instances a significantly greater number of times than by the other instances executing within the PES. For instance, it might be determined that certain compromised instances perform DNS lookup operations for a particular domain a statistically significant number of times more frequently than other instances executing within the PES. In this case, the looked-up domain may be identified as an undesirable domain and added to a DNS block list database that identifies undesirable domains. In this way, the newly identified undesirable computing activity (i.e. the new undesirable domain) may be utilized to detect additional compromised instances.","It should be appreciated that although the examples given above have been described in the context of DNS lookup operations, other types of computing activity might be monitored, logged, and analyzed in order to identify undesirable computing activity. For instance, contacting undesirable network addresses and sending or receiving undesirable network messages might also be indicators of undesirable computing activity. These activities might also be correlated with other types of data in order to identify undesirable computing activity, such as the relative or absolute time at which the activity is performed, the frequency at which the activity is performed, and other factors.","It should also be appreciated that although the embodiments disclosed herein are described primarily in the context of instances executing within a PES, the embodiments described herein might also be utilized to detect undesirable computing activity on computing systems not executing virtual machine instances. Additional details regarding the various processes described above for identifying undesirable computing activity, and others, will be presented below with regard to .","It should be appreciated that the subject matter presented herein may be implemented as a computer process, a computer-controlled apparatus, a computing system, or an article of manufacture, such as a computer-readable storage medium. While the subject matter described herein is presented in the general context of program modules that execute on one or more computing devices, those skilled in the art will recognize that other implementations may be performed in combination with other types of program modules. Generally, program modules include routines, programs, components, data structures, and other types of structures that perform particular tasks or implement particular abstract data types.","Those skilled in the art will also appreciate that the subject matter described herein may be practiced on or in conjunction with other computer system configurations beyond those described herein, including multiprocessor systems, microprocessor-based or programmable consumer electronics, minicomputers, mainframe computers, handheld computers, personal digital assistants, e-readers, cellular telephone devices, special-purposed hardware devices, network appliances, and the like. The embodiments described herein may also be practiced in distributed computing environments, where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","In the following detailed description, references are made to the accompanying drawings that form a part hereof, and that show, by way of illustration, specific embodiments or examples. The drawings herein are not drawn to scale. Like numerals represent like elements throughout the several figures.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 1","FIG. 1"],"b":["100","108"]},"As discussed briefly above, the PES platform  can provide computing resources for executing an application on a permanent or an as-needed basis. The computing resources provided by the PES platform  may include various types of resources, such as data processing resources, data storage resources, data communication resources, and the like. Each type of computing resource may be general-purpose or may be available in a number of specific configurations. For example, data processing resources may be available as virtual machine instances (\u201cinstances\u201d). The instances may be configured to execute applications, including Web servers, application servers, media servers, database servers, and the like. Data storage resources may include file storage devices, block storage devices, and the like.","Each type or configuration of computing resource may be available in different sizes, such as large resources, consisting of many processors, large amounts of memory, and\/or large storage capacity, and small resources consisting of fewer processors, smaller amounts of memory, and\/or smaller storage capacity. Customers may choose to allocate a number of small processing resources as Web servers and\/or one large processing resource as a database server, for example.","The computing resources provided by the PES platform  are enabled by one or more data centers A-N (which may be referred herein singularly as \u201ca data center \u201d or in the plural as \u201cthe data centers \u201d). The data centers  are facilities utilized to house and operate computer systems and associated components. The data centers  typically include redundant and backup power, communications, cooling, and security systems. The data centers  might also be located in geographically disparate locations. One illustrative configuration for a data center  that implements the concepts and technologies disclosed herein for detecting undesirable computing activity will be described below with regard to .","The customers and other consumers of the PES platform  may access the computing resources provided by the data centers  over a wide-area network (\u201cWAN\u201d) . Although a WAN is illustrated in , it should be appreciated that a local-area network (\u201cLAN\u201d), the Internet, or any other networking topology known in the art that connects the data centers  to remote consumers may be utilized. It should also be appreciated that combinations of such networks might also be utilized.","The customer computing system  is a computer utilized by a customer or other consumer of the PES platform . For instance, the customer computing system  may be a server computer, a desktop or laptop personal computer, a tablet computer, a wireless telephone, a personal digital assistant (\u201cPDA\u201d), an e-reader, a game console, a set-top box, or any other computing device capable of accessing the PES platform .","The customer computing system  may be utilized to configure aspects of the computing resources provided by the PES platform . In this regard, the PES platform  might provide a Web interface through which aspects of its operation may be configured. For instances, a Web browser application program executing on the customer computing system  might be utilized to access the Web interface and configure the operation of the PES platform . Alternatively, a stand-alone application program executing on the customer computing system  might access an application programming interface (\u201cAPI\u201d) exposed by the PES platform  for performing the configuration operations. Other mechanisms for configuring the operation of the PES platform , including deploying updates to an application, might also be utilized.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 2","FIG. 2"],"b":["102","108","102","202","202","202","202","202","202","206","206"]},"In one embodiment, the instances A-N (which may be referred herein singularly as \u201can instance \u201d or in the plural as \u201cthe instances \u201d) are virtual machine instances. As known in the art, a virtual machine instance is an instance of a software implementation of a machine (i.e. a computer) that executes programs like a physical machine. In the example of virtual machine instances, each of the servers  may be configured to execute an instance manager  capable of executing the instances. The instance manager  might be a hypervisor or another type of program configured to enable the execution of multiple instances  on a single server , for example. As discussed above, each of the instances  may be configured to execute all or a portion of an application.","It should be appreciated that although the embodiments disclosed herein are described primarily in the context of virtual machine instances, other types of instances can be utilized with the concepts and technologies disclosed herein. For example, the technologies disclosed herein might be utilized with instances of storage resources, processing resources, data communications resources, and with other types of resources. As also discussed above, the embodiments disclosed herein might also be utilized with computing systems that do not utilize virtual machine instances.","The data center  shown in  also includes a server computer  reserved for executing software components for managing the operation of the data center , the server computers , and the instances . In particular, the server computer  might execute a management component . As discussed above, a customer of the PES platform  might utilize the customer computing system  to access the management component  to configure various aspects of the operation of PES platform  and the instances  purchased by the customer. For example, the customer may purchase instances and make changes to the configuration of the instances. The customer might also specify settings regarding how the purchased instances are to be scaled in response to demand.","In the example data center  shown in , an appropriate LAN  is utilized to interconnect the server computers A-N and the server computer . The LAN  is also connected to the WAN  illustrated in . It should be appreciated that the network topology illustrated in  has been greatly simplified and that many more networks and networking devices may be utilized to interconnect the various computing systems disclosed herein. Appropriate load balancing devices or software modules might also be utilized for balancing a load between each of the data centers A-N, between each of the server computers A-N in each data center , and between instances  purchased by each customer of the PES platform . These network topologies and devices should be apparent to those skilled in the art.","It should be appreciated that the data center  described in  is merely illustrative and that other implementations might be utilized. Additionally, it should be appreciated that the functionality disclosed herein might be implemented in software, hardware, or a combination of software and hardware. Other implementations should be apparent to those skilled in the art.","As illustrated in , the server computer  is also configured in one embodiment to execute a logging component  and a security component . The logging component  is configured to log various aspects of computing activity performed by the instances . For example, the logging component  might log DNS lookup operations (which might also be referred to herein as \u201cDNS queries\u201d) performed by the instances  and incoming and outgoing network traffic to and from the instances . Although the logging component  is illustrated in  as executing on the server computer , it should be appreciated that all or a portion of the logging component  might be executed on the server computers  or other computer systems.","The security component  is configured to provide the functionality disclosed herein for detecting undesirable computing activity. As will be described in greater detail below, the security component  might utilize logs created by the logging component  to perform this functionality. The security component  might also utilize other databases and information not shown in  to perform the functionality disclosed herein. The security component  might also be executed completely, or in part, on the server computers  or on other computer systems. Additional details regarding the operation of the security component  will be provided below with regard to .",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 3","FIG. 3","FIG. 3"],"b":["214","310","206","206","302","302","304","306"]},"In order to identify the undesirable computing activity  performed by the instance A, the logging component  logs all or a portion of the activity  performed by the instance A to an activity log . For instance, as discussed briefly above, the logging component  might log DNS lookup operations performed by the instance A, incoming and outgoing network traffic to and from the instance A, and potentially other types of computing activity performed by the instance A. Data describing the activity  is stored in the activity log . It should be appreciated that although the terms \u201clogging\u201d and \u201clog\u201d have been utilized herein, many types of mechanisms and technologies known to those skilled in the art might be utilized to create and store a record of the activity of an instance. The terms \u201clogging\u201d and \u201clog\u201d are meant to encompass these other mechanisms.","As also described briefly above, the security component  is configured in one embodiment to utilize the data stored in the activity log  and the data stored in the database  of known undesirable activity to identify the undesirable activity  performed by the instance A. For instance, the security component  may compare activity identified in the activity log  to activity identified in the database  of known undesirable activity to identify the undesirable activity  performed by the instance A.","As an example, the activity log  might comprise a log of DNS lookup operations performed by the instance A in one embodiment. In this embodiment, the database of known undesirable activity  might comprise a DNS block list that identifies domains associated with undesirable computing activity. In this example, the security component  might determine that the instance A has performed DNS lookup operations for domains identified in the database . In response thereto, the security component  may deem this activity to be undesirable and consider the instance A to be a compromised instance. Details regarding one embodiment disclosed herein for utilizing DNS lookup operations to identify compromised instances, and to identify new undesirable domains will be described below with reference to .","It should be appreciated that other mechanisms might also be utilized to identify an instance as being compromised. For instance, an indication might be received from a customer or another user that an instance has been compromised. In another embodiment, an \u201cabuse report\u201d or other type of report might be generated by a service within the PES or another component in response to activity performed by an instance or in response to a customer complaint. These indications might be utilized in order to conclude that an instance is a compromised instance. Other mechanisms might also be utilized.","Once an instance, such as the instance A, has been identified as a compromised instance, the security component  may cause one or more countermeasures  to be taken with respect to the compromised instance. For instance, as discussed above, the security component  might cause communication to and from the compromised instance to an undesirable domain to be restricted, may cause all communication to and from the compromised instance to be restricted, may terminate the compromised instance, or may notify a customer associated with the compromised instance, such as by sending an electronic mail message to a customer e-mail address associated with the instance indicating that the instance has been compromised. In order to terminate an instance, an appropriate instruction might be sent to an instance manager , which can halt the execution of the instance and persist the halted instance to storage. The security component  might take other types of countermeasures  or perform other types of activities with respect to a compromised instance .","Based on the description of  provided above, it should be appreciated that the security component  can identify undesirable activity  utilizing a database  of known undesirable activity. If, however, the undesirable activity  performed by the instance A is not identified in the database  of known undesirable activity, the security component  will be unable to identify the undesirable activity  utilizing the mechanism shown in . , described below, illustrate one mechanism through which the security component  can identify new undesirable activity not identified in the database  of known undesirable activity.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 4","FIG. 4","FIG. 3"],"b":["206","206","206","214","404","310","212","302","206","206","206","212","302","206","206","108","308"]},"In one embodiment, for instance, the logging component  logs all DNS lookup operations performed by all instances A-N executing within the PES platform  and stores data describing this activity in the activity log . Additional details regarding one embodiment for identifying new undesirable activity  utilizing DNS lookup operations will be provided below with respect to .","In order to detect the new undesirable activity , the security component  is configured to perform a statistical analysis  on the activity A and B logged by the logging component . In particular, the statistical analysis  is configured to identify activity A that is performed by the compromised instances D, G, and R significantly more frequently than by all of the instances A-N executing within the PES platform . In this regard, various thresholds may be set to specify the amount of activity A performed by the compromised instances D, G, and R must be greater than the activity B performed by all of the instances A-N for the activity A to be considered new undesirable activity .","If the security component  identifies new undesirable activity  in the manner described above, the security component  is further configured to add the new undesirable activity  to the database  of known undesirable activity. The mechanism described above with regard to  might then be repeated in order to identify new compromised instances executing within the PES platform . It should be appreciated that this process may be continually iterated in order to identify new undesirable activity  and to identify new compromised instances within the PES platform . Additional details regarding this process will be provided below with respect to .","It should be appreciated that, as discussed above, the types of activity monitored by the logging component  and analyzed by the security component  may comprise virtually any type of computing activity performed by the instances A-N. For instance, this activity might include DNS lookup operations, accessing certain undesirable network addresses, or sending or receiving network messages containing undesirable data. Other types of activity might also be monitored, logged, and analyzed in the manner described above to identify new instances of such undesirable activity.","Turning now to , additional details will be provided regarding one illustrative process disclosed herein for identifying undesirable computing activity. It should be appreciated that the logical operations described herein with respect to  and the other FIGURES are implemented () as a sequence of computer implemented acts or one or more program modules running on one or more computing systems and\/or () as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance and other requirements of the computing system. Accordingly, the logical operations described herein are referred to variously as operations, structural devices, acts, or modules. These operations, structural devices, acts, and modules may be implemented in software, in firmware, in special purpose digital logic, and any combination thereof. It should also be appreciated that more or fewer operations may be performed than shown in the figures and described herein. These operations may also be performed in parallel, or in a different order than those described herein.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 5","b":["500","500","214","500","204","202","202","500"]},"The routine  begins at operation , where the logging component  logs the activity of at least a portion of the instances A-N executing within the PES . The routine  then proceeds to operation  where the security component  identifies compromised instances, such as the instances D, G, and R shown in , using the database  of known undesirable activity. One mechanism for performing this process was described above with regard to . As discussed above, when one or more compromised instances have been identified, the security component  may perform a countermeasure  or take other corrective or remedial action with respect to the identified compromised instances. This occurs at operation .","From operation , the routine  proceeds to operation  where the security component  identifies new undesirable activity  by performing the statistical analysis . As discussed above, the statistical analysis  compares the activity A performed by the compromised instances D, G, and R to activity B performed by the other instances A-N executing within the PES . Through this analysis, the security component  can determine whether the activity A performed by the compromised instances was performed significantly more often than the activity B performed by the other instances A-N. If activity A performed by the compromised instances D, G, or R was performed statistically more often than the activity B performed by the other instances A-N, then the activity A may be designated as new undesirable activity .","From operation , the routine  proceeds to operation  where the security component  stores the new undesirable activity  in the database  of known undesirable activity. In this manner, the identified new undesirable activity  may be utilized to identify other compromised instances utilizing the mechanism described above with reference to . The routine  then proceeds from operation  to operation  where the above-described process may continue to identify new undesirable activity  and compromised instances.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 6","FIG. 6","FIGS. 3-5","FIG. 6"],"b":["602","206","602","606","602","604","604","608","610","606","604","610","206","602"]},"The logging component  makes an entry in a DNS query log  for the DNS query  performed by the instance A. In order to determine whether the instance  is a compromised instance, the security component  compares the contents of the DNS query log  to data stored in a DNS block list . As known to those skilled in the art, the DNS block list  (which might also be referred to as a \u201cDNS black list\u201d) is a list of domains that may be associated with undesirable computing activity and, therefore, should be blocked.","If the domain name  identified in the DNS query  is identified in the DNS block list , the security component  may conclude that the instance A is a compromised instance. In response thereto, the security component  may implement a countermeasure  with regard to the instance A. As discussed above, the countermeasure  may include restricting communication to the identified domain, restricting communication to and from the instance A, terminating the instance A, notifying a customer associated with the instance A, or performing other types of corrective or remedial actions.","Based on the description of  provided above, it should be appreciated that the mechanism described therein can be utilized to identify compromised instances by logging DNS queries  and comparing the contents of the logged DNS queries to data contained in the DNS block list . If an instance performs a DNS query  for a domain name  that is not identified in the DNS block list , however, the mechanism shown in  will not identify the instance as a compromised instance. The mechanism illustrated in  provides functionality for identifying compromised instances based on DNS queries that include domain names that are not identified in the DNS block list .",{"@attributes":{"id":"p-0067","num":"0066"},"figref":["FIG. 7","FIG. 7"],"b":["206","206","206","212","602","206","206","206","602","206","206","108","612"]},"In this example, the security component  performs a statistical analysis  on the contents of the DNS query log  to identify undesirable domains not identified in the DNS block list . In particular, the statistical analysis  analyzes the DNS query log  to identify domains for which DNS queries A were performed by the compromised instances D, G, and R a significantly greater number of times than by the instances A-N executing in the PES platform .","Any domains queried significantly more frequently by the compromised instances D, G, and R than by the other instances A-N may be identified as new undesirable domains  and stored in the DNS block list . Additionally, the domains might also be flagged for further investigation to determine if the domains are actually undesirable or associated with undesirable computing activity in some manner. In this manner, the routine illustrated above and described with regard to  may be repeated to identify additional compromised instances utilizing the new undesirable domain  discovered utilizing the process shown in . The routine  described below illustrates this process in greater detail.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 8","b":["800","800","802","212","602","206","206","108","206","206","206","212","602","612","802","800","804"]},"At operation , the security component  compares the DNS queries  identified in the DNS query log  to the contents of the DNS block list . If any of the instances A-N query domains that are identified in the DNS block list , the security component  identifies the instances as being compromised instances. For example, in the embodiment shown in , the instances D, G, and R have been identified as compromised instances utilizing this mechanism.","From operation , the routine  proceeds to operation  where the security component  performs a countermeasure  with regard to the compromised instances D, G, and R. The various types of countermeasures and other types of corrective action that may be taken with respect to identified compromised instances have been described above. From operation , the routine  proceeds to operation .","At operation , the security component  performs a statistical analysis  on the contents of the DNS query log . In particular, as mentioned above, the statistical analysis  identifies DNS queries A performed significantly more often by compromised instances D, G, R than by the other instances A-N executing in the PES platform . The domains identified in the DNS queries A performed more frequently by the compromised instances D, G, and R may be identified as new undesirable domains and added to the DNS block list  at operation . The new undesirable domains  may then be utilized to identify additional compromised instances utilizing the mechanism described above with reference to . In this regard, the routine  proceeds from operation  to operation , described above, where additional undesirable domains may be identified in a similar manner.","It should be appreciated that while the embodiments described above were presented in the context of utilizing DNS queries to identify compromised instances and new undesirable domains, other types of activity performed by instances and executing in the PES platform  might also be utilized. For instance, as described briefly above, contact with undesirable network addresses or sending or receiving undesirable network messages might also be utilized to in a manner similar as to that described above to identify compromised instances and to discover previously unknown undesirable computing activity. In order to identify undesirable network messages, the messages might be processed in order to identify data patterns that are indicative of undesirable behavior. Other mechanisms might also be utilized.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 9","FIG. 9"],"b":["900","102","102","202","202","104"]},"The computer  includes a baseboard, or \u201cmotherboard,\u201d which is a printed circuit board to which a multitude of components or devices may be connected by way of a system bus or other electrical communication paths. In one illustrative embodiment, one or more central processing units (\u201cCPUs\u201d)  operate in conjunction with a chipset . The CPUs  are standard programmable processors that perform arithmetic and logical operations necessary for the operation of the computer .","The CPUs  perform the necessary operations by transitioning from one discrete, physical state to the next through the manipulation of switching elements that differentiate between and change these states. Switching elements may generally include electronic circuits that maintain one of two binary states, such as flip-flops, and electronic circuits that provide an output state based on the logical combination of the states of one or more other switching elements, such as logic gates. These basic switching elements may be combined to create more complex logic circuits, including registers, adders-subtractors, arithmetic logic units, floating-point units, and the like.","The chipset  provides an interface between the CPUs  and the remainder of the components and devices on the baseboard, such as a computer-readable storage media. For example, the chipset  may provide an interface to a computer-readable storage medium such as random access memory (\u201cRAM\u201d) , used as the main memory in the computer . The chipset  may further provide an interface to a computer-readable storage medium such as a read-only memory (\u201cROM\u201d)  or non-volatile RAM (\u201cNVRAM\u201d) for storing basic routines that that help to startup the computer  and to transfer information between the various components and devices. The ROM  or NVRAM may also store other software components necessary for the operation of the computer  in accordance with the embodiments described herein.","The computer  may operate in a networked environment using logical connections to remote computing devices and computer systems through the network . The chipset  may include functionality for providing network connectivity through a network interface controller (\u201cNIC\u201d) , such as a gigabit Ethernet adapter. The NIC  is capable of connecting the computer  to other computing devices over the network . It should be appreciated that multiple NICs  may be present in the computer , connecting the computer to other types of networks and remote computer systems.","The computer  may be connected to a mass storage device  that provides non-volatile storage for the computer. The mass storage device  may store system programs, application programs, other program modules, and data, which have been described in greater detail herein. The mass storage device  may be connected to the computer  through a storage controller  connected to the chipset . The mass storage device  may consist of one or more physical storage units. The storage controller  may interface with the physical storage units through a serial attached SCSI (\u201cSAS\u201d) interface, a serial advanced technology attachment (\u201cSATA\u201d) interface, a fiber channel (\u201cFC\u201d) interface, or other type of interface for physically connecting and transferring data between computers and physical storage units.","The computer  may store data on the mass storage device  by transforming the physical state of the physical storage units to reflect the information being stored. The specific transformation of physical state may depend on various factors, in different implementations of this description. Examples of such factors may include, but are not limited to, the technology used to implement the physical storage units, whether the mass storage device  is characterized as primary or secondary storage, and the like.","For example, the computer  may store information to the mass storage device  by issuing instructions through the storage controller  to alter the magnetic characteristics of a particular location within a magnetic disk drive unit, the reflective or refractive characteristics of a particular location in an optical storage unit, or the electrical characteristics of a particular capacitor, transistor, or other discrete component in a solid-state storage unit. Other transformations of physical media are possible without departing from the scope and spirit of the present description, with the foregoing examples provided only to facilitate this description. The computer  may further read information from the mass storage device  by detecting the physical states or characteristics of one or more particular locations within the physical storage units.","In addition to the mass storage device  described above, the computer  may have access to other computer-readable storage media to store and retrieve information, such as program modules, data structures, or other data. It should be appreciated by those skilled in the art that computer-readable storage media can be any available article of manufacture that provides for the storage of non-transitory data and that may be accessed by the computer .","By way of example, and not limitation, computer-readable storage media may include volatile and non-volatile, removable and non-removable media implemented in any method or technology. Computer-readable storage media includes, but is not limited to, RAM, ROM, erasable programmable ROM (\u201cEPROM\u201d), electrically-erasable programmable ROM (\u201cEEPROM\u201d), flash memory or other solid-state memory technology, compact disc ROM (\u201cCD-ROM\u201d), digital versatile disk (\u201cDVD\u201d), high definition DVD (\u201cHD-DVD\u201d), BLU-RAY, or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium that can be used to store the desired information in a non-transitory fashion.","The mass storage device  may store an operating system  utilized to control the operation of the computer . According to one embodiment, the operating system comprises the LINUX operating system. According to another embodiment, the operating system comprises the WINDOWS\u00ae SERVER operating system from MICROSOFT Corporation. According to further embodiments, the operating system may comprise the UNIX or SOLARIS operating systems. It should be appreciated that other operating systems may also be utilized. The mass storage device  may store other system or application programs and data utilized by the computer , such as the software components described above.","In one embodiment, the mass storage device  or other computer-readable storage media is encoded with computer-executable instructions which, when loaded into the computer , transforms the computer from a general-purpose computing system into a special-purpose computer capable of implementing the embodiments described herein. These computer-executable instructions transform the computer  by specifying how the CPUs  transition between states, as described above. According to one embodiment, the computer  has access to computer-readable storage media storing computer-executable instructions which, when executed by the computer , perform the routines  and , described above with regard to , respectively.","The computer  may also include an input\/output controller  for receiving and processing input from a number of input devices, such as a keyboard, a mouse, a touchpad, a touch screen, an electronic stylus, or other type of input device. Similarly, the input\/output controller  may provide output to a display, such as a computer monitor, a flat-panel display, a digital projector, a printer, a plotter, or other type of output device. It will be appreciated that the computer  may not include all of the components shown in , may include other components that are not explicitly shown in , or may utilize an architecture completely different than that shown in .","Based on the foregoing, it should be appreciated that technologies for detecting undesirable computing activity have been presented herein. Although the subject matter presented herein has been described in language specific to computer structural features, methodological acts, and computer readable media, it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features, acts, or media described herein. Rather, the specific features, acts, and mediums are disclosed as example forms of implementing the claims.","The subject matter described above is provided by way of illustration only and should not be construed as limiting. Furthermore, the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure. Various modifications and changes may be made to the subject matter described herein without following the example embodiments and applications illustrated and described, and without departing from the true spirit and scope of the present invention, which is set forth in the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
