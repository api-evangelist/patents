---
title: Preemptive and/or reduced-intrusion malware scanning
abstract: One embodiment relates to a computer-implemented method of preemptively scanning targets for malicious codes. Input qualities regarding said targets are received. A first computer-implemented procedure is applied to generate a measure of priority for scanning of said targets. Targets are selected for preemptive scanning using said measure of priority. In addition, resource utilization inputs may be received, and a second computer-implemented procedure may be applied to determine a system resource usage level using the resource utilization inputs. In that case, the malware scanning may be performed opportunistically based on the system resource usage level. Other embodiments, aspects and features may also be disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09141794&OS=09141794&RS=09141794
owner: Trend Micro Incorporated
number: 09141794
owner_city: Tokyo
owner_country: JP
publication_date: 20090310
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION","CONCLUSION"],"p":["1. Technical Field","The present invention relates generally to computer security, and more particularly, but not exclusively, to methods and apparatus for scanning computer data for malicious contents.","2. Description of the Background Art","Computer viruses, worms, Trojans, rootkits, and spyware are examples of malicious codes that have plagued computer systems throughout the world. Although there are technical differences between each type of malicious code, malicious codes are also collectively referred to as malware or \u201cviruses.\u201d Malware scanning or \u201cantivirus\u201d products for protecting computers against malicious codes are commercially available. Experienced computer users have installed some form of antivirus in their computers.","A typical malware scanning product includes a scan engine and a pattern file. The pattern file comprises patterns for identifying known malicious codes. To check a file for malicious code, the scan engine opens the file and compares its content to patterns in the pattern file. The pattern file needs to be updated to address newly discovered malicious codes. As the number of known malicious codes increases, so does the size of the pattern file. The larger the pattern file, the more memory and processing resources are consumed to perform malicious code scanning.","One embodiment relates to a computer-implemented method of preemptively scanning targets for malicious codes. Input qualities regarding said targets are received. A first computer-implemented procedure is applied to generate a measure of priority for scanning of said targets. Targets are selected for preemptive scanning using said measure of priority.","In another embodiment, resource utilization inputs are also received, and a second computer-implemented procedure may be applied to determine a system resource usage level using the resource utilization inputs. In this case, the malware scanning may be performed opportunistically based on the system resource usage level.","Another embodiment relates to an apparatus configured to scan targets for malicious code. Data storage is configured to store computer-readable code and data, and a processor is configured to execute computer-readable code and to access said data storage. A scheduling engine is configured to receive input qualities regarding said targets and apply a first computer-implemented procedure to generate a measure of priority for scanning of said targets. In addition, a scan manager is configured to select targets for preemptive scanning using said measure of priority.","In another embodiment, the apparatus also includes a resource monitor which is configured to receive resource utilization inputs. The resource monitor is further configured to apply a second computer-implemented procedure to determine a system resource usage level using the resource utilization input. In this case, the scan manager may be further configured to opportunistically schedule malware scanning based on the system resource usage level.","These and other features of the present invention will be readily apparent to persons of ordinary skill in the art upon reading the entirety of this disclosure, which includes the accompanying drawings and claims.","The use of the same reference label in different drawings indicates the same or like components.","Disadvantages and Problems of Conventional Malware Scanning","Malware scanning products generally scan targets to determine whether they contain malware (including computer viruses, worms, and so on) or lead to malicious sites. As used herein, a \u201ctarget\u201d for malware scanning may be a file or universal resource locator (URL). A target may be scanned locally by the host computer system or remotely by way of an in-the-cloud look-up or scan.","In existing malware scanning products, targets are generally scanned either when they are created or modified, or when they are opened. Applicants believe that this conventional method of scanning has the following disadvantages and problems.","First, the conventional method of scanning requires an increasingly large amount of resources of a computer system. When the targets are scanned, the scanning process typically uses a significant amount of CPU and memory resources. The amount of system resources required for malware scanning is increasing with the increasing size of files and disk storage systems. This disadvantageously reduces the amount available to other applications and frequently results in noticeably slower performance of those other applications.","Second, the conventional method of scanning results in inefficient repetitive scanning. For example, the conventional method scans a file each time it is accessed. Hence, when a file is accessed multiple times, it is scanned multiple times, even if the file is unmodified between scans and there are no intervening updates to the security software.","Third, malware scanning may have latencies due to the need to access network resources. For example, a security product may perform an in-the-cloud look-up of a knowledge base to determine a reputation of a specific target. Such a look-up typically slows down the scanning process due to network latencies. As a result, performance is further impacted from the point of view of a user.","Fourth, the intrusive nature of malware scanning often results in incomplete scans. This is because a user often prefers not to complete a scan (whether manual, on-demand, or scheduled) because the system is practically unusable during the scan. As a result of incomplete scans, the system becomes more vulnerable to malware attacks.","Reduced-Intrusion Malware Scanning","One embodiment of the present invention provides a method and apparatus for preemptive scheduling of targets for malware scanning. The scheduling of targets for scanning is done in a preemptive way based on a set of qualities for the targets. The set of qualities may include one or more properties of the target which provide predictive value as to how soon the target would conventionally need to be scanned, for example, due to the target being accessed. Another embodiment of the present invention provides a method and apparatus for opportunistic malware scanning. The opportunistic malware scanning is performed based upon monitoring of system resource usage. In another embodiment of the present invention, the opportunistic malware scanning may be combined with the preemptive scheduling of targets for malware scanning.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 1","b":["102","104","102","104","102","104"]},"The input qualities  may include one or more of the following: the frequency at which a target has been accessed; the last time at which the target's content was modified; the frequency at which the target's content has been modified; an estimation of the likelihood of the target carrying malware (this may be based on file type, for example); an estimation of time and\/or CPU resource and\/or disk space required to fetch and scan data for the target; a percentage scan completion if a target has been partially scanned; and age of the target's content (for example, based on time-to-live or TTL data).","In addition, the input qualities  may include source information and\/or information about past scan results for a target. The source information may indicate, for example, that the target was downloaded from an electronic mail message, from a USB device, from a web browser, or by a particular application. The information about past scan results may comprise, for example, an approval rating based on past scan results for the target.","The input qualities  may also include other target-related characteristics. These characteristics may include, for example, the file name, file type, file size, file path, and file creation time (for those targets that are files).","The input qualities  may further include select target-related events which are tracked by the scheduling engine . Such events may comprise, for example, file access events, product updates, and completed scan results. File access events include the use and\/or modification of a file. The scheduling engine  may track the time of the access, whether the access used and\/or modified the file, and which application performed the access. The tracking data  may be stored and used by the scheduling engine . The monitored events may include, for example, the following system activities: (a) process-related activities, including creating a process, opening a process and terminating a process (cleanup); (b) file-related activities, including creating a file for reading, opening a file for reading, deleting a file (cleanup), creating a file for writing, opening a file for writing, and closing a file; (c) registry-related activities, including creating a registry key or value, setting a registry key or value, and deleting a registry key or value (cleanup); and (d) application programming interface (API) related activities, including calling into an API.","The weights may be used to rank the scan targets. For example, a lower weight may indicate a higher priority target for scanning (i.e. a higher urgency for scanning the target). In that case, a target with a lower weight would rank higher in priority than a target with a higher weight. (In an alternate implementation, a higher weight may indicate a lower priority target for scanning. In that case, a target with a higher weight would rank higher in priority than a target with a lower weight.)","A prioritized target table  may be output and\/or updated by the scheduling engine . The following is a table indicating example information that may be included in the prioritized target table .",{"@attributes":{"id":"p-0037","num":"0036"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},"Target","Weight","Estimated Scan Time"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"105pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FileR.exe ","10","150"]},{"entry":[{},"FileB.vbs","11","1000"]},{"entry":[{},"FileM.exe","14","25"]},{"entry":[{},"FileA.zip","18","5"]},{"entry":[{},"File2.exe","27","10"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}]}},"br":{}},"Of course, other embodiments of the prioritized target table  may include fields that vary from the specific fields shown in Table 1. For example, the size of the target may be included instead of the estimated scan time. As another example, in one embodiment, the table may include the weight (priority) field, but not the estimated scan time field. In other embodiments, other additional fields may be included in the table.","The prioritized target table  may be used to preemptively select or schedule scan targets by a scan manager . For example, the scan manager  may be configured to simply select or schedule targets in the order indicated by weight (priority) field in the prioritized target table . A malware scan engine  performs the scans on the targets.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 2","FIG. 1"],"b":["200","200","100"]},"The input qualities  are received  by the scheduling engine . The scheduling engine  applies a computer-implemented procedure  to rate targets for preemptive malware scanning. Based on the ratings of the targets, the prioritized target table  is generated and\/or updated . The prioritized target table  may be used by the scan manager  to select or schedule  targets for preemptive scanning by the malware scan module .","Advantageously, the preemptive scheduling technique described above enables targets that are more likely to be malware to be scanned before targets that are less likely to be malware. This makes it more likely that malware will be detected earlier by the scanner.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 3","b":["300","305","302","306","308"]},"In order to perform the monitoring, the resource monitor  receives resource utilization inputs . The resource utilization inputs  may include, for example, CPU usage, memory usage, and disk input\/output usage. In addition, the resource utilization inputs  may include network bandwidth usage. While the resource monitor  is shown as part of the scan manager  in , a module external to the scan manager  may also be used.","In one embodiment, when the resource monitor  detects a low-level of resource usage by the computer system, the malware scanning module  may be allowed to perform its scanning of targets  in a normal manner. However, when the resource monitor  detects a high-level of resource usage by the computer system, the scan manager  may be configured to pause the malware scanning of targets during this period of high resource usage. In one implementation, a high-level of resource usage may be indicated when a set usage limit for one or more system resources (for example, the CPU, memory, or disk storage, or network bandwidth for in-the-cloud look-ups) is exceeded.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 4","FIG. 3"],"b":["400","400","300"]},"The resource utilization inputs  are received  by the resource monitor . The resource monitor  applies a computer-implemented procedure  to determine a resource usage level (or resource usage levels). The resource usage level(s) may be used  by the scan manager  to control the malware scan module  so as to opportunistically scan targets during periods of lower resource usage.","The opportunistic technique described above enables the malware scanning module  to avoid taking up scarce system resources during periods of high resource usage. This advantageously reduces or minimizes intrusion or interference with other processes which a user may be actively running.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 5","FIG. 5","FIG. 1","FIG. 3"],"b":["500","500","100","300"]},"As shown in , a scheduling engine  is configured to receive input qualities  regarding targets for malware scanning. In one embodiment, the scheduling engine  may utilize an external module or application for collecting, or for assisting in collecting, the input qualities . The scheduling engine  is further configured to determine weights (or scores) for the scan targets based on the input qualities . The input qualities  may include various target-related data and characteristics and may further include select target-related events which are tracked by the scheduling engine . The tracking data  may be stored and used by the scheduling engine . A prioritized target table  may be output and\/or updated by the scheduling engine . For example, as shown above in Table 1, the prioritized target table  may include the weight for a target, where a lower weight indicates a higher priority for scanning, and the estimated scan time for a target. Of course, other embodiments of the prioritized target table  may include fields that vary from the specific fields shown in Table 1.","As further shown in , a resource monitor  of a scan manager  monitors usage of the system resources. The monitoring is performed so as to determine opportunistic times for a malware scan module  to perform malware scanning of targets with minimal or reduced impact to the computer user's experience. In order to perform the monitoring, the resource monitor  receives and processes resource utilization inputs . The resource utilization inputs  may include, for example, CPU usage, memory usage, disk input\/output usage, and\/or network bandwidth usage. While the resource monitor  is shown as part of the scan manager  in , a module external to the scan manager  may also be used.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIG. 6","FIG. 5"],"b":["600","600","500"]},"The input qualities  are received  by the scheduling engine . The scheduling engine  applies a computer-implemented procedure  to prioritize targets. Based on the ratings of the targets, the prioritized target table  is generated and\/or updated .","In addition, resource utilization inputs  are received  by a resource monitor  of a scan engine . The resource monitor  applies a computer-implemented procedure  to determine a system resource usage level (or levels) using the resource utilization inputs .","The resource usage level(s) and the prioritized target table are used  by the scan manager  so that malware scanning is performed in a preemptive and opportunistic manner. For example, consider the following cases.","In a first case, the resource monitor  may detect that usage of resources by the computer system indicates a low-level of usage. In this case, the scan manager  may select as a next target to be scanned the highest priority target from the prioritized target table . For example, consider the prioritized target table  given in Table 1. In this example, the scan manager  selects FileR.exe as the next target to be scanned because FileR.exe is the highest priority target indicated by the table. When the scan of FileR.exe is completed, it is removed from the table, and the highest priority target remaining in the table is selected as the next target. And so on. In this case, malware scanning is advantageously performed in a preemptive manner in order of priority, rather than in a non-prioritized order.","In a second case, the resource monitor  may detect that usage of resources by the computer system indicates a high-level of usage. For example, a set usage limit for one or more system resources (for example, the CPU, memory, or disk storage, or network bandwidth for in-the-cloud look-ups) is being exceeded by the computer system. In this case, the scan manager  may be configured to pause the malware scanning of targets during this period of high resource usage. This advantageously enables the malware scanning to be performed while reducing or minimizing intrusion or interference with other applications which a user may be actively running.","In a third case, the resource monitor  may detect an intermediate level of resource usage by the computer system. In this case, the scan manager  may select as a next target to be scanned the highest priority target under a threshold estimated scan time from the prioritized target table . For example, consider the prioritized target table  given in Table 1 and assume a threshold for the estimated scan time of fifty milliseconds. In this example, the scan manager  selects FileM.exe as the next target to be scanned because FileM.exe is the highest priority target with an estimated scan time under the threshold. FileR.exe and Fileb.vbs have higher priorities, but they have estimated scan times over the threshold. When the scan of FileM.exe is completed, it is removed from the table, and the highest priority target remaining in the table with estimated scan time under the threshold is selected as the next target. And so on. In this case, scanning of rapidly-scanned (usually small size) targets is performed in a prioritized order while avoiding undue intrusion or interference with other applications which a user may be actively running.","Advantageously, the above-described technique enables targets that are more likely to be malware to be scanned before targets that are less likely to be malware. Furthermore, this technique enables the performance of malware scanning in a manner which avoids taking up scarce system resources during periods of high resource usage.","Example Computer Apparatus and Network System","Referring now to , there is shown a schematic diagram of a computer  in accordance with an embodiment of the present invention. The computer  may be employed as a client computer  or security server computer  (see ), for example. The computer  may have less or more components to meet the needs of a particular application. The computer  may include a processor , such as those from the Intel Corporation or Advanced Micro Devices, for example. The computer  may have one or more buses  coupling its various components. The computer  may include one or more user input devices  (e.g., keyboard, mouse), one or more data storage devices  (e.g., hard drive, optical disk, USB memory), a display monitor  (e.g., LCD, flat panel monitor, CRT), a computer network interface  (e.g., network adapter, modem), and a main memory  (e.g., RAM). The computer network interface  may be coupled to a computer network , which in this example includes the Internet.","In the example of , the main memory  includes software modules . The software modules  may comprise computer-readable program code (i.e., software) components of a client computer  or security server computer , for example. The software modules  may be loaded from the data storage device  to the main memory  for execution by the processor .",{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 8","b":["800","800","801"]},"In the example of , the system  includes one or more client computers  and one or more security server computers . Preferably, one security server computer  provides remote scanning services to two or more client computers . The client computers  and a security server computer  may communicate over a computer network, such as the Internet.","While specific embodiments of the present invention have been provided, it is to be understood that these embodiments are for illustration purposes and not limiting. Many additional embodiments will be apparent to persons of ordinary skill in the art reading this disclosure.","In the present disclosure, numerous specific details are provided, such as examples of apparatus, components, and methods, to provide a thorough understanding of embodiments of the invention. Persons of ordinary skill in the art will recognize, however, that the invention can be practiced without one or more of the specific details. In other instances, well-known details are not shown or described to avoid obscuring aspects of the invention.","Being computer-related, it can be appreciated that some components disclosed herein may be implemented in hardware, software, or a combination of hardware and software (e.g., firmware). Software components may be in the form of computer-readable program code stored in a computer-readable storage medium, such as memory, mass storage device, or removable storage device. For example, a computer-readable storage medium may comprise computer-readable program code for performing the function of a particular component. Likewise, computer memory may be configured to include one or more components, which may be executed by a processor. Software components may be implemented in logic circuits, for example. Components may be implemented separately in multiple modules or together in a single module."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
