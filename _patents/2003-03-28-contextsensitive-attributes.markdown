---
title: Context-sensitive attributes
abstract: A mechanism to enable context-sensitive attributes which comprise an attribute value and a context value defining the applicability of the attribute value in a computer application. The mechanism is adapted to manipulate the context-sensitive attributes, for example to facilitate creation of attribute values with associated context values, retrieve attribute values associated with a specific context value and search based on attribute values within a context value.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07299448&OS=07299448&RS=07299448
owner: International Business Machines Corporation
number: 07299448
owner_city: Armonk
owner_country: US
publication_date: 20030328
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["The invention relates to data attributes and more particularly to attribute values associated with a context value.","A particular attribute value for a data attribute may only be applicable (i.e. true) in a certain situation. Applications that share use of the attribute need to know about the situation when the attribute value is true in order to make proper use of the attribute. For example, the value of a telephone number attribute \u201ctelephoneNumber\u201d for a person may only be applicable during a particular time of day or may represent a home, business, mobile, facsimile or other telephone number.","Data attributes are often shared among multiple applications, such as in business applications for conducting electronic commerce (e-commerce, whereby transactions for a variety of goods and services are conducted electronically) or electronic business (e-business, whereby business processes\u2014e.g., shipping, procurement, staffing, etc.\u2014are transformed so as to be conducted electronically). A situation under which an attribute value is applicable may be specific to a particular application. Consider an attribute \u201cpreferredDessert\u201d representing a person's preferred dessert of \u201cice cream\u201d. For an application that manages data about dessert preferences in various restaurants, it may be desirable for that application to associate a restaurant with the preferredDessert attribute value \u201cice cream\u201d to indicate that the person likes that dessert in the particular restaurant. A further application may track dessert preferences under different seasons and associate the preferredDessert attribute value \u201cice cream\u201d with the season \u201csummer\u201d. Consider further a purchasing application that may gather cost or quantity information from a variety of supplier sources. Pricing information may be represented in a supplier's preferred currency (erg. $, , and \u00a5) or quantity of a particular supply in a variety of units of measure (e.g. ton and tonne, lb and kg). A sales or an inventory application may wish to represent the same attributes in different currency or measure units.","A typical solution to relate an attribute value such as \u201cice cream\u201d with further information such as the preferred season for eating ice cream or the preferred restaurant for purchasing ice cream is to create an attribute for each of the different situations or contexts. That is, a typical solution is to create the attributes \u201cpreferredDessert_Spring\u201d, \u201cpreferredDessert_Summer\u201d, etc. to represent the seasonal dessert preferences.","A drawback associated with using different attributes for the different contexts is that such contexts must typically be anticipated in advance and must remain constant. In the example above, the seasons are known and are constant. But often, contexts change or are not known in advance and as such using different pre-defined attributes is not ideal or even feasible. If dessert preferences need to be tracked according to restaurant name, for example, the names may not be known in advance and may change. Using multiple different attributes may also be cumbersome when there are many contexts.","In a data sharing environment where data are shared among many applications, some contexts are only meaningful to a single application. A proliferation of attributes for a context having narrow usage is wasteful of resources.","A solution to some or all of these shortcomings is therefore desired.","In accordance with an aspect of the invention, there is provided a mechanism for enabling context-sensitive attributes which comprise an attribute value and a context value defining the applicability of the attribute value. The data system comprises a first mechanism for defining a context-sensitive attribute and a second mechanism to manipulate the context-sensitive attributes, for example, to facilitate creation of an attribute value with an associated context value, retrieve an attribute value associated with a specific context value and search based on an attribute value within a context value. The mechanism may permit a sharing of the attribute values and associated context values among a plurality of applications sharing the context-sensitive attributes. In accordance with another aspect of the invention, there is provided a computer program product for enabling such a mechanism. In accordance with yet a further aspect there is a method of providing a context-sensitive attribute for use by an application. The method comprises storing an attribute value; storing a context value associated with the attribute value for defining the applicability of the attribute value; and providing a mechanism for manipulating the attribute value and the context value. In accordance with a further aspect, there is provided an attribute manager for enabling the use of an attribute by an application, said attribute manager comprising a mechanism for use by said application for manipulating a context-sensitive attribute comprising an attribute value and a context value associated with the attribute value for defining the applicability of the attribute value.","Since multiple attributes do not need to be defined for the different context values, the invention allows context values that are unknown until runtime to be used and allows the context values to be changed providing flexibility. If many context values exist, a proliferation of attributes may be avoided supporting enhanced scalability.","An embodiment of the invention, computer system , is illustrated in . Computer system , which is illustrated for exemplary purposes as a computing device, is adapted to communicate with other computing devices (not shown) using network . As will be appreciated by those of ordinary skill in the art, network  may be embodied using conventional networking technologies and may include one or more of the following: local networks, wide area networks, intranets, the Internet, and the like.","Through the description herein, an embodiment of the invention is illustrated with aspects of the invention embodied solely on computer system . As will be appreciated by those of ordinary skill in the art, aspects of the invention may be distributed among one or more networked computing devices which interact with computer system , using one or more networks such as, for example network . However, for ease of understanding, aspects of the invention have been embodied in a single computing device\u2014computer system .","Computing device  typically includes a processing system  which is enabled to communicate with the network , various input devices , and output devices . Input devices , (a keyboard and a mouse are shown) may also include a scanner, an imaging system (e.g., a camera, etc.), or the like. Similarly, output devices  (only a display is illustrated) may also include printers and the like. Additionally, combination input\/output (I\/O) devices may also be in communication with processing system . Examples of conventional I\/O devices (not shown in ) include removable recordable media (e.g., floppy disk drives, tape drives, CD-ROM drives, DVD-RW drives, etc.), touch screen displays, and the like.","Exemplary processing system  is illustrated in greater detail in . As illustrated, processing system  includes a number of components: a plurality of central processing units (CPUs) A, B, . . . , collectively ; memory ; network interface (I\/F) ; and input-output (I\/O) interface . Communication between various components of the processing system  may be facilitated via a suitable communications bus  as required.","Each CPU  is a processing unit, such as an Intel Pentium\u2122, IBM PowerPC\u2122, Sun Microsystems UltraSparc\u2122 processor, or the like, suitable for the operations described herein. As will be appreciated by those of ordinary skill in the art, other embodiments of processing system  could use alternative CPUs and may include embodiments in which one CPU is employed (not shown). CPUs  may include various support circuits to enable communication between CPUs  and the other components of processing system .","Memory  includes both volatile memory  and persistent memory  for the storage of: operational instructions for execution by CPUs ; data registers; application and thread storage; and the like. Memory  preferably includes a combination of random access memory (RAM), read only memory (ROM), and persistent memory such as that provided by a hard disk drive.","Network I\/F  enables communication between other computing devices (not shown) and other network computing devices via network . Network I\/F  may be embodied in one or more conventional communication devices. Examples of a conventional communication device include: an Ethernet card; a token ring card; a modem, or the like. Network I\/F  may also enable the retrieval or transmission of instructions for execution by CPUs , from or to a remote storage media or device via network .","I\/O interface  enables communication between processing system  and the various I\/O devices  and . I\/O interface  may include, for example a video card for interfacing with an external display such as output device . Additionally, I\/O interface  may enable communication between processing system  and a removable media device . Removable media  may comprise a conventional diskette or other removable memory devices such as Zip\u2122 drives, flash cards, CD-ROMs, static memory devices, and the like. Removable media  may be used to provide instructions for execution by CPUs  or as a removable data storage device.","The computer instructions\/applications and related data stored in memory  and executed by CPUs  (thus adapting the operation of computer system  as described herein) are illustrated in functional block form in . As will be appreciated by those of ordinary skill in the art, the discrimination between aspects of the applications illustrated as functional blocks in , is somewhat arbitrary in that the various operations attributed to a particular application as described herein may, in an alternative embodiment, be subsumed by another application.","As illustrated for exemplary purposes only, memory  stores applications and data for enabling the operation of system  to provide support for context-sensitive attributes in accordance with the invention to a plurality of business applications. In this exemplary configuration, memory  therefore stores an operating system (OS) , a communication suite , an application server , business applications , and (collectively ) which use context-sensitive attributes , and (collectively ), and an attribute manager  having an attribute repository  for storing and managing such attributes .","OS  is an operating system suitable for operation with selected CPUs  and the operations described herein. Multi-tasking, multi-threaded OSes such as, for example IBM AIX\u2122, Microsoft Windows, Linux, or the like, are expected to be preferred in many embodiments. Communication suite  provides, through interaction with OS  and network I\/F  () suitable communication protocols to enable communication with other networked computing devices via network  (). Communication suite  may include one or more of such protocols such as TCP\/IP, Ethernet, token ring and the like.","Application server  is a conventional application server that hosts or provides services to business applications  which applications incorporate aspects of the present invention. Unlike conventional business applications, business applications  are adapted to use context-sensitive attributes  in accordance with a feature of the invention. That is, business applications  are adapted via a mechanism to enable context-sensitive attributes, the mechanism facilitating use of attribute manager  to store to and retrieve from repository  attribute values associated with a context value and, preferably, search using an attribute value associated with a context value. However, it will be apparent to those of ordinary skill in the art that for business applications that have not been adapted to use context-sensitive attributes , attribute manager  may be configured to facilitate such use via either a null context value or a specific application context value as described further herein below. The operation of business applications  and their interaction with attribute manager  is better understood with reference to  described below.","Attribute manager  provides a common mechanism for defining and manipulating attributes  regardless of where and how attributes are stored. For example, in an embodiment, attributes  may be arranged as member data or profiles for storing to repository . Examples of a member are a person, an organization, an organizational unit, or a group of members. Other entities may be similarly represented such as a country, a locality or a container, etc. Each member may have a member profile describing its characteristics and differentiating one member from another within the business applications .","In accordance with a feature of the invention, these attributes may be context-sensitive though they need not be. Hence, attribute manager  may provide a set of services to act upon and manage profiles of attributes stored to repository  including services such as create, read, update, remove, and search members in the repository . These services also support managing groups, including assigning members to and unassigning members from groups and querying group membership.","Repository  may comprise a database repository using, for example, DB2\u2122 Enterprise Edition from International Business Machine Corporation or Oracle\u2122 Enterprise Edition from Oracle Corporation with a database schema defined by attribute manager . As such attribute manager  includes a database repository adapter (not shown) to interact with such a database repository.","In accordance with an optional feature, attribute manager  facilitates a programmatic way to define new attributes  in repository . New attributes  may be defined in other manners as will be understood by persons skilled in the art such as via configuration files or deployment descriptors (both not shown) for repository  in addition or in the alternative to a programmatic manner.","Context-sensitive attributes  may be further understood with reference to  which illustrates exemplary context-sensitive attributes , namely favoriteFood  and preferredCurrency  for a member, each of context-sensitive attributes  comprising at least one context value  and respective at least one attribute value  with which each of the at least one context value  may be associated. A context value  may comprise a null context value (e.g. ). The example of  illustrates that, with reference to favoriteFood , under all circumstances as represented by the null context value, peanut butter sandwich, orange, papaya, and coffee are a particular member's favorite foods. Whereas, tofu, black beans, and lentils are the member's favorite foods in the VegetarianCusine store. Likewise, a Big Double and fries are favorite foods in the BurgerJoint store.","Since attribute manager  allows multiple applications to share attribute information, different applications may specify different context values for values of the same attribute. In an embodiment, attribute manager  does not provide a mechanism to support conveying the context values specified by one application to another application. As such, the syntax of the context value is defined in accordance with a convention to provide convenient handling for repository  and consistency between applications using context-sensitive attributes , especially those sharing attribute values with associated context values. In an embodiment of the invention, the convention provides that the context value is represented by a string of the form \u201cxxx.yyy.zzz\u201d where \u201cxxx.yyy\u201d is a string value that identifies an application that originates the context value and \u201czzz\u201d is a string value which is application specific, providing the context value. For example, in a Java\u2122 based embodiment, the application identifier portion may be composed according to the Java package name of the application. The application identifying portion (\u201cxxx.yyy\u201d) may be \u201ccom.ibm.Websphere.Commerce\u201d for Websphere Commerce from International Business Machine Corporation. The application specific portion may be arbitrarily selected, such as \u201cstore.BurgerJoint\u201d yielding the string: \u201ccom.ibm.Websphere.Commerce.store.BurgerJoint\u201d. Context value  () is represented in an alternative embodiment of a form of a context string.","It is noted that in the present embodiment, a null context value (i.e. no context) is represented by a null string to provide a convention when working with the interface as described further below. Alternatives to a null string will be apparent to those skilled in the art.","The schema of the supporting repository  is adapted to store attribute values and associated context values, for example, as a database table, such as is logically represented in , where each row stores one or more attribute values and, optionally, an associated context value.","In accordance with an embodiment of the invention, attribute manager  provides an application programming interface (API) for use, for example, by business applications  for creating, storing, retrieving and otherwise manipulating context-sensitive attributes  and context values.  illustrate Java based methods which provide an exemplary interface Attribute  for attributes and an interface ContextAttribute  for context-sensitive attributes . Methods to support the specification of context values as strings in accordance with the convention are not shown but will be readily apparent to those skilled in the art.","It can be seen from  that there are methods for getting or retrieving attribute values and context values, either individually or multiply, for setting attribute values and context values and for adding and otherwise using the objects.","Note that since the interfaces Attribute  and ContextSensitive  are implemented by a data object, the methods on the interfaces affect the values of the attribute data object. For instance, invoking a setvalues(contextString, attributevalues) method will set the values associated with a particular context value in the attribute data object. When the data object is passed to attribute manager , the data object will be processed to update the attribute values for the attribute stored in the repository . This means there may be other attribute values associated with other context values for the same attribute and those values may not be affected by that setValues( ) method call on the attribute data object.","The following is an example of the retrieval of context values and their associated attribute values which may be performed by business applications  and attribute manager  using the API ,  of FIGS A and B with reference to exemplary context-sensitive attribute favoriteFood . The getvalues( ) method on the Attribute interface returns a list of values which have no context value associated. When getvalues( ) is called to return the member's favorite foods, the following values will be returned: peanut butter sandwich, orange, papaya, coffee.","The getValues(String context) method on the ContextAttribute interface returns a list of values which are associated with the specified context value string. Therefore, getValues(\u201ccom.ibm.websphere.commerce.store. VegetarianCuisine\u201d) would return tofu, blackbeans, lentils. Likewise, getValues(\u201ccom.ibm.websphere.commerce.store. BurgerJoint\u201d) would return Big Double and fries.","The getAllValues( ) method on the ContextAttribute interface returns all attribute values regardless of the context value. In the Map of the attribute values returned, the context value strings are used as keys of the Map. The string \u201ccom.ibm.attribute.manager\u201d is synonymous with a null context value (or no context). It is a convention that when attribute manager  returns attribute values using a Map, values that have no context value will be associated with this key convention.","Numerous modifications to the embodiments described will be apparent to those of ordinary skill in the art which will not depart from the scope of the invention. For example, while the embodiments of the attribute manager described refer to a repository database for persistent storage of the attribute values and associated context values, such need not be included to receive the benefits of context-sensitive attributes .","An additional usage of the invention is to exploit the context even without the knowledge of the application requesting the attribute value. For example through one application, a person may provide values for an attribute telephoneNumber to indicate how the person can be reached during different time periods of the day. Another application that has no knowledge of the different time periods may just query the value of the attribute at any given time. A system responsible for returning the attribute value may determine the current time, for example, by obtaining the system time and return to the application the most suitable telephone number depending on the time of day of the application's request.","Context-sensitive attributes  of the present invention facilitate hierarchical contexts and default context values as well. Considering again the dessert preference example, a member's favorite dessert may be ice cream, in general, but in Italian restaurants it is gelato and in French restaurants it is cr\u00e8me brul\u00e9. In the member's favorite local Italian restaurant, it is lemon cake. Extending the units of measure preference example discussed earlier, a member's preferred unit of measure might be pounds in general, kilograms in a coffee buying application, tonnes in a steel buying application and carats in a diamond buying application, unless the diamonds are of an industrial grade, in which case the preferred units are grams.","The embodiments of the invention described above are intended to be exemplary only. The scope of the invention is therefore intended to be limited solely by the scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Further features and advantages of the present invention will become apparent from the following detailed description, taken in combination with the appended drawings, in which:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 5A and 5B"},"It will be noted that throughout the appended drawings, like features are identified by like reference numerals."]},"DETDESC":[{},{}]}
