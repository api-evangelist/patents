---
title: Space efficient software package management
abstract: A space management tool can consolidate the duplicate files in the software packages while maintaining the file structure of the software packages. The space management tool can search the software packages to identify duplicate files and consolidate the duplicate files without altering the file structure of the software packages. In particular, the space management tool can consolidate the storage space utilized by the software packages by removing duplicate files in the software packages and replacing the removed files with a reference to the remaining file.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08806477&OS=08806477&RS=08806477
owner: Red Hat, Inc.
number: 08806477
owner_city: Raleigh
owner_country: US
publication_date: 20091030
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","DESCRIPTION OF THE RELATED ART","DETAILED DESCRIPTION OF EMBODIMENTS"],"p":["This invention relates generally to computer software installation and management for a computing system.","Today, a person using a computing system has a variety of avenues for obtaining software and installing the software on the computing system, such as purchasing physical media and downloading the software over a network. When downloading the software over a network, the person can acquire and install the software using a software package management system. The software package management system typically consists of a software repository which stores and maintains various software packages. The software packages typically consist of software stored in an archive format that includes data for installing the software.","Often, each software repository stores and maintains software packages with overlapping content. For example, a software repository may maintain software packages that include various distributions of the same software, which may contain the same files. Typically, the software repository maintains a separate copy of each software package even if the package contains overlapping content. As such, the software repository requires significant storage space in order to maintain the software packages.","For simplicity and illustrative purposes, the principles of the present teachings are described by referring mainly to exemplary embodiments thereof. However, one of ordinary skill in the art would readily recognize that the same principles are equally applicable to, and can be implemented in, all types of information and systems, and that any such variations do not depart from the true spirit and scope of the present teachings. Moreover, in the following detailed description, references are made to the accompanying figures, which illustrate specific embodiments. Electrical, mechanical, logical and structural changes may be made to the embodiments without departing from the spirit and scope of the present teachings. The following detailed description is, therefore, not to be taken in a limiting sense and the scope of the present teachings is defined by the appended claims and their equivalents.","Embodiments of the present teachings relate to systems and methods for managing software packages. More particularly, the present teachings relate to systems and methods for efficiently maintaining multiple software packages with overlapping content.","According to embodiments, a software repository can maintain multiple software packages. In order to efficiently maintain the multiple software packages and conserve space, the software repository can utilize a space management tool. The space management tool can be configured to consolidate the duplicate files in the software packages while maintaining the file structure of the software packages. To achieve this, the space management tool can be configured to search the software packages to identify duplicate files and consolidate the duplicate files without altering the file structure of the software packages. In particular, the space management tool can be configured to consolidate the storage space utilized by the software packages by removing duplicate files in the software packages and replacing the removed files with a reference to the remaining file. The space management tool can be configured to utilize references such as hard links and symbolic links to replace the removed duplicate files.","By utilizing the space management tool, a software repository can maintain multiple software packages with overlapping content while reducing the storage space required by the software packages. Additionally, the software repository can reduce the storage space required by the software packages without altering the file structure of the software packages.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 1","FIG. 1"],"b":["100","100"]},"In embodiments, as illustrated in , the software package delivery and management system  can be designed to allow a computing system  to communicate with a software repository , via one or more networks , in order to obtain one or more software packages . The software repository  can be implemented as any type of open-source or proprietary software repository, which can store the software packages  and provide the software packages to computing systems, such as the computing system , requesting the software packages via the one or more networks . For example, the software repository  can be implemented as a Yellowdog Updater, Modified (Yum) repository, Debian\u2122 repository, or any other type of conventional software repository.","In embodiments, as described herein, the software packages , can include one or more software programs that are packaged together as a set of files in a format that allows a package manager or package installer to install the software programs, contained in the software packages , on a computing system. The software packages  can be stored in one or more computer readable storage media and devices  (CD, DVD, hard drive, portable storage memory, etc.).","In embodiments, the software programs included in the software packages  can be any type of software programs such as operating systems (OS), application programs, and the like. The software packages  can also include metadata that describes the software package, such as the name of the software package, the software programs included in the package, version of the software package, description of the purpose of the software package, etc. The software packages  can also include metadata that aids in the installation of the software programs contained in the software packages , such as checksums and a list of dependencies of the software package. The list of dependencies can describe the relationship of the software programs contained in the software packages  and any other software programs, file, software libraries, etc. required by the software packages .","In embodiments, the software repository  can store the files of the software packages  in any type of open-source or proprietary format depending on the type of the software repository . For example, the files of the software packages  can be in conventional formats such as RPM format for a Yum repository, .deb format for a Debian\u2122 repository, or other conventional formats.","In embodiments, the software repository  can be supported by any type of computing system capable of storing the software packages , capable of communicating with the one or more networks , and capable of running an operating system and a repository application for cooperating with a package manager or package installer in order to deliver the software packages . For example, the software repository  can be supported by conventional computing systems or other devices such as such as servers, personal computers, laptop computers, network-enabled media devices, networked stations, etc. As such, the computing system supporting the software repository  can include conventional hardware such as processors, memory, computer readable storage media and devices (CD, DVD, hard drive, portable storage memory, etc.), network devices, and the like.","In embodiments, the one or more networks  can be or include the Internet, or other public or private networks. The one or more or more networks  can be or include wired, wireless, optical, and other network connections. One skilled in the art will realize that the one or more networks  can be any type of network, utilizing any type of communication protocol, to connect computing systems.","In embodiments, the computing system  can be any type of conventional computing system or other device such as such as servers, personal computers, laptop computers, network-enabled media devices, networked stations, etc. As such, the computing system  can include conventional hardware such as processors, memory, computer readable storage media and devices (CD, DVD, hard drive, portable storage memory, etc.), network devices, and the like.","In embodiments, the computing system  can be configured to include a package manager . The package manager  can be configured to cooperate with the software repository  to perform various actions associated with the software packages . For example, the package manager  can be configured to retrieve one or more of the software packages  and configured to install the software packages on the computing system  Likewise, the package manager  can be configured to retrieve updates to software packages , already installed on the computing system , and install the updates on the computing system .","In embodiments, the package manager  can be any application program that is capable of executing on the computing system  to perform the actions related to the software repository . For example, the package manager  can be any type of conventional open-source or proprietary package manager such as Yum package manager, Debian\u2122 package manager, and the like. The package manager  can be stored on computer readable storage devices or media (CD, DVD, hard drive, portable storage memory, etc.) of the computing system  and executed by the computing system .","In embodiments, the software packages  maintained by the software repository  can include overlapping content. As such, the software packages  can include duplicate files for the same software programs. For example, software package \u201cA\u201d can be a particular distribution of the operating system (OS) Fedora.\u2122., such as Fedora , and can include all the files for the complete installation of Fedora . Additionally, software package \u201cB\u201d can be a compilation of updates to update previous distributions of Fedora to Fedora  and can include only the files necessary to update Fedora. The software repository  can store the files of the software packages  in separate and distinct locations in the computer readable storage medium .","In embodiments, in order to conserve storage space of the computer readable storage medium , the software repository  can be configured to utilize the space management tool . The space management tool  can be configured to consolidate the duplicate files in the software packages  while maintaining the file structure of the software packages . To achieve this, the space management tool  can be configured to search the software packages  to identify duplicate files and consolidate the duplicate files without altering the file structure of the software packages . In particular, the space management tool  can be configured to consolidate the storage space utilized by the software packages  by removing duplicate files in the software packages  and replacing the removed files with a reference to the remaining file.","In embodiments, the space management tool  can be implemented as an application program that is capable of executing on the software repository  to perform the processes as described above. Likewise, the space management tool  can be implemented as a portion of any of the program supporting the software repository  (e.g. repository application, OS, and the like). In either case, the space management tool  can be stored on computer readable storage devices or media  (CD, DVD, hard drive, portable storage memory, etc.) of the software repository  and executed by the software repository .",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 2","FIG. 2"],"b":["104","114","104"]},"In embodiments, as described above, the software repository  can maintain multiple software packages  such as a software package \u201cA\u201d  and software package \u201cB\u201d . As illustrated, the software packages  maintained by the software repository  can include overlapping content. The software packages  can include overlapping content for a variety of reasons. For example, the software repository  can be the main repository for the software package \u201cA\u201d  and, additionally, can be a mirror repository for the software package \u201cB\u201d . Additionally, the software package \u201cA\u201d  and the software package \u201cB\u201d  can contain overlapping content because the software packages  contain a set or sub-set of the same software programs. As such, the software packages  can include duplicate files for the same software programs. For example, software package \u201cA\u201d  can be a particular distribution of the OS Fedora, such as Fedora , and can include the files \u201cspreadsheet\u20145.3.0.rpm\u201d, \u201cdrawingprogram\u201410.0.4.rpm\u201d, and other files for the complete installation of Fedora . Additionally, software package \u201cB\u201d can be a compilation of updates to update previous distributions of Fedora to Fedora  and can include the file \u201cspreadsheet\u20145.3.0.rpm\u201d and other files to update Fedora.","In embodiments, as illustrated, the files for the software packages  can be stored at separate locations in the file system of the computer readable storage medium . For example, the files for the software package \u201cA\u201d  can be stored at a location , such as \u201c\/var\/content\/fedora\u201d. Likewise, the files for the software package \u201cB\u201d  can be stored at a separate and distinct location , such as \u201c\/var\/content\/fedora\u2014updates\u201d. As such, separate storage space in the computer readable medium  can be required to store both the software package \u201cA\u201d  and the software package \u201cB\u201d .","In embodiments, in order to conserve storage space of the computer readable storage medium , the software repository  can be configured to utilize to space management tool . The space management tool  can be configured to consolidate the duplicate files in the software packages  while maintaining the file structure of the software packages . To achieve this, the space management tool  can be configured to search the software packages  to identify duplicate files and consolidate the duplicate files without altering the file structure of the software packages .","In embodiments, the space management tool  can be configured to search the software packages  to identify duplicate files in the software packages. In particular, the space management tool  can be configured to search the storage locations of the software packages  to identify the files with the same or identical file name. For example, if software repository  contains the software package \u201cA\u201d  and the software package \u201cB\u201d , the space management tool  can search the storage locations \u201c\/var\/content\/fedora\u201d  and \u201c\/var\/content\/fedora\u2014updates\u201d  to identify the duplicate files \u201cspreadsheet\u20145.3.0.rpm\u201d.","In embodiments, once the duplicate files are located, the space management tool  can be configured to consolidate the duplicate files. To achieve this, the space management tool  can be configured to remove some of the duplicate files. To remove the duplicate files, the space management tool  can be configured to delete the duplicate files. For example, as illustrated, if the space management tool  identifies two duplicate files \u201cspreadsheet\u20145.3.0.rpm\u201d, the space management tool  can delete one of the two duplicate files. Likewise, if the space management tool  locates more than two duplicate files, the space management tool  can be configured to remove one or more of the duplicate files while leaving at least one duplicate file.","In embodiments, once some of the duplicate files are removed, the space management tool  can be configured to replace the removed duplicate files with a reference to the remaining duplicate file. The reference can be configured as a file which points to the storage location of the remaining duplicate file, has the same name as the removed duplicate files, and is stored at the same location as the removed duplicate files. As such, the software package with the removed duplicate file would maintain the same file structure and could be utilized in installations without altering the software package. The space management tool  can be configured to create the reference and to store the reference in the storage location of the removed duplicate file. For example, if the space management tool  identifies two duplicate files \u201cspreadsheet\u20145.3.0.rpm\u201d and removes the duplicate file stored at location , the space management tool  can store at location  a reference to the \u201cspreadsheet\u20145.3.0.rpm\u201d file stored at location .","In embodiments, the space management tool  can be configured to utilize any type of reference to replace duplicate files and reference the location of the remaining duplicate file. For instance, the space management tool  can be configured to utilize hard links that are supported by distributions of the Unix.\u2122. OS or Linux.\u2122. OS. A hard link is an additional file name referencing an existing file in the file system. When a hard link is created, the OS makes no distinction between the name that was originally assigned to a file when it was first created and any hard links that are subsequently created to that file, i.e. the hard links are multiple names for the same file. To achieve this, the original file name and any hard links all point to the same inode. An inode is a data structure that stores all the information about a file (e.g., its size, its access permissions, when it was created and where it is located on the system) except the files name and its actual data.","In embodiments, likewise, the space management tool  can be configured to utilize symbolic links or soft links, supported by distributions of the Unix\u2122 OS or Linux\u2122 OS, as the reference for the removed duplicate files. A symbolic link is a file that contains a reference to another file or directory in the form of an absolute or relative path and that affects pathname resolution. A symbolic link can be configured to include a text string that is interpreted and followed by the OS as a path to another file or directory. A symbolic link can be utilized to reference files stored in directories of the same file system as well as to files on different file systems, on different partitions of a computer readable storage medium, and\/or on different computer readable storage media. While hard links and symbolic links have been described above, one skilled in the art will realize that the space management tool  can utilize any type of reference to replace removed duplicate files.","In embodiments, in order to perform the space management as described above, the space management tool  can be configured to include the necessary commands, logic, instructions, and interfaces to search the computer readable storage medium  to identify duplicate files and to remove and replace duplicate files with a reference to the remaining duplicate files. For instance, the space management tool  can be configured to include an application programming interface (API) to communicate with the OS of the software repository  in order to search the file system of the computer readable storage medium  and to remove and replace duplicate files with a reference to the remaining duplicate file.","In embodiments, the space management tool  can be configured to maintain a record . The record  can be configured to contain a record of the storage locations of the software packages , such as \u201c\/var\/content\/fedora\u201d and \u201c\/var\/content\/fedora\u2014updates\u201d. Likewise, the record  can be configured to contain a record of the files stored in the locations. As such, the space management tool  can be configured to utilize the record  to identify the storage locations of the software packages  and the files stored in the storage locations.","In embodiments, the space management tool  can be configured to perform the space management processes described above upon the occurrence of any number of events. For example, the space management tool  can be configured to perform the processes on demand. For instance, the space management tool  can be configured to include the necessary logic, commands, instructions, and interfaces to generate command line interfaces and\/or graphical user interfaces (GUIs) that allow a user of the software repository  to initiate the space management processes. Additionally, the space management tool  can be configured to automatically perform the space management processes. For example, the space management tool  can be configured to perform the space management processes upon the occurrence of certain conditions such as when new software packages are added to the software repository . Accordingly, the space management tool  can be configured to include the necessary logic, commands, instructions, and interfaces to generate command line interfaces and\/or GUIs that allow a user of the software repository  to select the conditions upon which the space management tool  can automatically perform the space management processes.","In embodiments, as described above, the software packages  can be stored on a single partition of the computer readable storage medium . Likewise, the software packages  can be stored on different partitions of a computer readable storage medium and\/or on different computer readable media. As such, the space management tool  can be configured to perform the space management processes described above for duplicate files stored on different partitions and\/or different computer readable media. For instance, the space management tool  can be configured to utilize a reference that points at different file systems of different partitions and\/or different computer readable media, such as symbolic links.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 3","b":["104","104","302","304","306","306","302","110","306","114","302","310","106"]},"Processor  also communicates with the space management tool  to execute control logic and allow performance of the space management processes as described above and below. Other configurations of the software repository , associated network connections, and other hardware and software resources are possible.","While  illustrates the software repository  as a standalone system including a combination of hardware and software, the software repository  can include multiple systems operating in cooperation. The space management tool  can be implemented as a software application or program capable of being executed by the software repository , as illustrated, or other conventional computer platforms. Likewise, the space management tool  can also be implemented as a software module or program module capable of being incorporated in other software applications and programs, such as repository application or operating system . In any example, the space management tool  can be implemented in any type of conventional proprietary or open-source computer language. When implemented as a software application or program code, the space management tool  can be stored in a computer readable storage medium, such as medium , accessible by the software repository . Likewise, during execution, a copy of the space management tool  can be stored in the memory .",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 4","b":["402","404","114","114","114","114"]},"In , the space management tool  can identify duplicate files in the software packages . For example, the space management tool  can search the storage locations of the software packages  for files with the same or identical file names.","In , the space management tool  can remove one or more of the duplicate files in the software packages . For example, the space management tool  can delete one or more of the duplicate files. For instance, if the space management tool  identifies two duplicate files, the space management tool  can delete one of the two duplicate files. Likewise, if the space management tool  locates more than two duplicate files, the space management tool  can remove one or more of the duplicate files while leaving at least one duplicate file.","In , the space management tool  can replace the removed duplicate files with a reference to the location of the remaining file in the software packages . The reference can be configured as a file which points to the storage location of the remaining file, has the same name as the removed duplicate files, and is stored at the same location as the removed duplicate files. As such, the software package with the removed duplicate file would maintain the same file structure and could be utilized in installations without altering the software package. The space management tool  can create the reference and store the reference in the storage location of the removed duplicate file.","In , the process can end, but the process can return to any point and repeat.","Certain embodiments may be performed as a computer application or program. The computer program may exist in a variety of forms both active and inactive. For example, the computer program can exist as software program(s) comprised of program instructions in source code, object code, executable code or other formats; firmware program(s); or hardware description language (HDL) files. Any of the above can be embodied on a computer readable medium, which include computer readable storage devices and media, and signals, in compressed or uncompressed form. Exemplary computer readable storage devices and media include conventional computer system RAM (random access memory), ROM (read-only memory), EPROM (erasable, programmable ROM), EEPROM (electrically erasable, programmable ROM), and magnetic or optical disks or tapes. Exemplary computer readable signals, whether modulated using a carrier or not, are signals that a computer system hosting or running the present teachings can be configured to access, including signals downloaded through the Internet or other networks. Concrete examples of the foregoing include distribution of executable software program(s) of the computer program on a CD-ROM or via Internet download. In a sense, the Internet itself, as an abstract entity, is a computer readable medium. The same is true of computer networks in general.","While the teachings have been described with reference to the exemplary embodiments thereof, those skilled in the art will be able to make various modifications to the described embodiments without departing from the true spirit and scope. The terms and descriptions used herein are set forth by way of illustration only and are not meant as limitations. In particular, although the method has been described by examples, the steps of the method may be performed in a different order than illustrated or simultaneously. Furthermore, to the extent that the terms \u201cincluding\u201d, \u201cincludes\u201d, \u201chaving\u201d, \u201chas\u201d, \u201cwith\u201d, or variants thereof are used in either the detailed description and the claims, such terms are intended to be inclusive in a manner similar to the term \u201ccomprising.\u201d As used herein, the term \u201cone or more of\u201d with respect to a listing of items such as, for example, A and B, means A alone, B alone, or A and B. Those skilled in the art will recognize that these and other variations are possible within the spirit and scope as defined in the following claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various features of the embodiments can be more fully appreciated, as the same become better understood with reference to the following detailed description of the embodiments when considered in connection with the accompanying figures, in which:",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
