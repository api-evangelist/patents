---
title: Localized viewing of file system names
abstract: The elements of a file system contain information that provides language-specific views of the file system. An indicator in each element enables a quick determination to be made whether that element is localized. These indicators can take the form of a key-value pair in a properties list, a special file in the element, such as an empty file, or a special extension on the name of the file. If the element is localized, the localization information can be stored as part of the element, or in a central location for use with multiple different elements. A library of APIs associated with the file system performs methods to determine whether a requested file system element is localized, and to retrieve the localized name in that case.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08244712&OS=08244712&RS=08244712
owner: Apple Inc.
number: 08244712
owner_city: Cupertino
owner_country: US
publication_date: 20030318
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present invention is directed to operating systems for computers, and more particularly to the localization of elements stored in a computer's file system, to enable different users to view the elements in a language of their choice.","Many popular computer programs are designed to be used in a variety of different countries. When a program is to be used in a given country, it is desirable for the user to be able to interact with the program by means of the user's native language. Thus, for example, an American user would expect to see interface components such as menu commands, dialogue boxes and warnings presented in the English language, whereas a French user would prefer to have these same components appear in the French language. One manner in which this objective can be accomplished is to develop a separate version of the program in each language. However, this approach presents an unnecessary duplication of development effort, and is prone to error, since each different version of the program needs to be tested and debugged.","To avoid the need for multiple versions of a program in different languages, the concept of internationalization has been incorporated into program development. An internationalized program is based upon a core block of executable code that is independent of language, and that supports localization of language-related features. Localization is the adaptation of a software product for use in multiple regions of the world. Localization of software can include translating user-interface text, resizing text-related graphical elements, and modifying images and sound to conform to local conventions.","The present invention is particularly concerned with the localization of computer operating systems. Popular operating systems, such as the Mac OS\u00ae developed by Apple Computer, Inc. and Microsoft Windows\u00ae developed by Microsoft Corporation, support localization to varying degrees. For example, during the initial installation of an operating system, the user is typically provided with the opportunity to designate the language in which textual components of the user interface will appear. The user may also have the opportunity to select other regional settings, which may determine the formatting for currency, date and time, and the like. After installation, the user may also be able to switch among different preferred languages.","In the past, when the user selected a language other than the default language in which the program was developed, certain elements of the user interface, such as menu bars and warning labels, would change to the selected language. However, file system elements, such as folder names and directory names, were not supported by this change. This limitation was due to the fact that elements of the file system, such as files and folders, are stored in their original language at the file system layer of the operating system. There are a number of different ways in which a user can access this layer to view files stored in the file system. One way is by means of a desktop manager, such as the Finder in the Mac OS, or a browser, such as Explorer in the Microsoft Windows operating system. Another way to look at files is by means of an \u201cOpen\u201d panel that is typically provided within the context of an application program. A third way to look at files is through a \u201cFind\u201d or \u201cSearch\u201d utility. As a further complicating factor, the same files stored on a central server may be simultaneously viewed by different users who have designated respectively different preferred languages. These various concerns made it difficult to support localization of file system elements in a manner that can accommodate all of the various ways to look at files. Consequently, the traditional approach has been to have a different file system for each language to be supported. As noted above, such duplication is undesirable for a number of reasons.","Accordingly, it is an objective of the present invention to provide localized views of file systems that enable multiple simultaneous localizations of a file to take place and that minimizes the impact on performance of the computer operating system. It is further desirable to provide these features in a manner which readily facilitates the ability of program developers to localize their products in a manner supported by the operating system.","In accordance with the present invention, the elements of a file system contain information that provides language-specific views of the file system. In one embodiment of the invention, this result is achieved by incorporating an indicator in each element that enables a quick determination to be made whether that element is localized. In accordance with disclosed embodiments of the invention, these indicators can take the form of a key-value pair in a properties list, a special file in the element, such as an empty file, or a special extension on the name of the file. If the element is localized, the localization information can be stored as part of the element, or in a central location for use with multiple different elements. A library of APIs associated with the file system performs methods to determine whether a requested file system element is localized, and to retrieve the localized name in that case.","Among the advantages provided by the invention is the fact that, since all of the functionality for localizing file system names resides within the file system itself, existing applications do not need to be revised to take advantage of this functionality. Furthermore, the actual names of the files themselves are not changed; only the user's view of those names is affected. As a result, the techniques of the present invention can be applied to any type of file system to provide localization capabilities.","In a further embodiment of the invention, files containing localization information can be renamed in accordance with the localized name of an element, to enable quick searching of elements based on their localized names.","Further features of the invention, and the advantages provided thereby, are described hereinafter with reference to exemplary embodiments and to the accompanying figures.","To facilitate an understanding of the present invention, it is described hereinafter with reference to its implementation in an operating system for personal computers. Further in this regard, specific references are occasionally made to structures and formats associated with the Mac OS, to provide the reader with specific examples of the concepts which underlie the invention. It will be appreciated, however, that the invention is not limited to these illustrative examples. Rather, the principles upon which the invention is based can be applied to a variety of different types of computer operating systems, as will be apparent to those of skill in the art.","An exemplary computer system, of the type in which the present invention can be implemented, is illustrated in block diagram form in . The exemplary computer system includes a computer  having a variety of external peripheral devices  connected thereto. The computer  includes at least one central processing unit  and associated memory. This memory generally includes a main memory which is typically implemented in the form of random access memory , a static memory that can comprise a read-only memory , and a permanent storage device, such as a magnetic or optical disk . The CPU  communicates with each of these forms of memory through an internal bus . The peripheral devices  include a data entry device such as a keyboard , and a pointing or cursor control device , such as a mouse, trackball, pen or the like. One or more display devices , such as a CRT monitor or an LCD screen, provides a visual display of information, including the various components of a graphical user interface. Hard copies of desired information can be provided through a printer , or similar such device. A network connection  provides the computer with access to one or more servers, which may function as gateways, file storage systems, messaging systems, and the like. Each of these external peripheral devices  communicates with the CPU  by means of one or more input\/output ports  on the computer.","The CPU  executes software programs that are retrieved from the permanent storage device  or remotely accessible storage devices, and loaded into its working memory . The principle software components that are involved in the implementation of the present invention are depicted in the block diagram of . The computer's operating system  performs basic low-level functions and interacts with the hardware components of the computer system. As illustrated in , the operating system includes a file system  that is responsible for managing the reading and writing of data on storage devices  that are mounted on the computer system, such as the permanent memory  and\/or remote file servers. The file system is also responsible for the logical organization of the files stored on the devices , and the presentation of information regarding those files to the user. Another component of the operating system  is a display manager , which controls the information that is presented to the monitor  for display to the user.","In addition to the operating system, one or more application programs  are executed by the CPU , to enable the user to perform various tasks, such as word processing, drawing, Internet browsing, and the like. Included among the application programs is a desktop manager , which controls the presentation of information on the desktop, or primary window, of the user interface. For example, the desktop manager controls the display of folders, files and icons on the desktop, and the opening of their contents into windows. An example of such a desktop manager is the Finder component of the Mac OS. Each of the application programs  interact with a windows manager  that also forms part of the operating system . The windows manager controls the location and appearance of various user interface elements, as well as the contents of windows. This information is presented to the display manager , for presentation on the monitor .","The application programs  interact with the file system  to obtain information about files, folders, directories, and the like, that are stored in the storage devices. For example, if a user enters an \u201cOpen\u201d command in one of the applications or , the application communicates with the file system  to obtain a list of files and folders that are available to be opened. This list is then presented to the user within a window associated with the application program. The desktop manager communicates with the file system  to obtain information regarding files and folders that the user has indicated should be displayed on the desktop. Based upon this information, the desktop manager controls the manner in which icons and labels pertaining to those files and folders are displayed, via the windows manager  and the display manager .","In addition to applications, other types of software may interact with the file system  to access or otherwise obtain information about elements stored on the storage devices . For instance, some types of plug-in programs may need to access the files on the storage devices . In addition, utility programs such as a search tool, which may be part of the operating system or provided by a third party, obtain information about files stored on the storage devices, via the file system .","Each file and folder that is stored on the storage devices  has a number of attributes associated with it. Two of these attributes include an icon that is to be used to represent the file or folder, and a name that is to be displayed. The icon may be explicitly specified as one of the attributes stored with the file, or it may be derived from other information regarding the file, such as an extension. Typically, the name of the file is explicitly stored as one of its attributes. These items of information, i.e., the name and icon to be displayed, are derived from the attribute data by means of a set of application programming interfaces (APIs) contained in a library  associated with the file system. In essence, the library retrieves attribute data stored with each file in the storage devices , and presents the appropriate corresponding information, such as the name or icon identification, to the application program  or other software that requested information regarding the file.","The present invention provides localization of the names that are displayed for elements stored within the file system, namely files and folders (or directories). This functionality is accomplished through APIs contained within the library . In accordance with the invention, different types of elements support localization in different ways, to provide various efficiencies. In one implementation of the invention, file system elements are divided into three different types, for purposes of localization. These three types comprise bundles, special folders, and arbitrary folders and files.","A bundle is a directory in the file system that stores executable code and\/or software resources related to the code. In essence, a bundle directory comprises a collection of a set of resources in a discrete package. The resources can include items such as images, sounds and localized character strings that are used by the software. Bundles are typically used for applications, frameworks and other types of loadable packages, such as plug-ins.","An exemplary bundle for an application may have the following layout:",{"@attributes":{"id":"p-0026","num":"0025"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Bundle1.app\/"]},{"entry":[{},"\u2003Contents\/"]},{"entry":[{},"\u2003\u2003\u2003App1 (executable code)"]},{"entry":[{},"\u2003\u2003\u2003Helper Tool"]},{"entry":[{},"\u2003\u2003\u2003Info.plist (contains \u201cBundleDisplayName\u201d=\u201cBundle1\u201d)"]},{"entry":[{},"\u2003\u2003\u2003Resources\/"]},{"entry":[{},"\u2003\u2003\u2003\u2003Bundle1.icns"]},{"entry":[{},"\u2003\u2003\u2003\u2003Image1.tiff"]},{"entry":[{},"\u2003\u2003\u2003\u2003Image2.tiff"]},{"entry":[{},"\u2003\u2003\u2003\u2003Sounds\/"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"Typically, a bundle directory is displayed to users as a single file, to avoid unwarranted tampering with the bundle's contents. If desired, however, the directory structure of certain types of bundles, such as frameworks, need not be hidden. Whether a bundle is displayed as a file or a folder can be determined by means of an attribute that is set in the bundle directory and stored in the information properties list.","For purposes of localization, multiple sets of resources can be contained within a bundle, with each set corresponding to a particular language, locale and\/or platform. To illustrate the manner in which different types of elements of a file system are localized in accordance with the present invention, an example will be described hereinafter in which an element is localized for each of the English and French languages. The default, or non-localized, name for the element will be designated as \u201cHello\u201d. The English localized name is \u201cHi\u201d and the French localized name is \u201cBonjour\u201d. An application bundle, according to this example, would have the following format:",{"@attributes":{"id":"p-0029","num":"0028"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Hello.app\/"]},{"entry":[{},"\u2003Contents\/"]},{"entry":[{},"\u2003\u2003\u2003App1"]},{"entry":[{},"\u2003\u2003\u2003Helper Tool"]},{"entry":[{},"\u2003\u2003\u2003Info.plist (contains \u201cBundleDisplayName\u201d = \u201cHello\u201d)"]},{"entry":[{},"\u2003\u2003\u2003Resources\/"]},{"entry":[{},"\u2003\u2003\u2003Image1.tiff"]},{"entry":[{},"\u2003\u2003\u2003\u2003en.lproj\/"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003Image2.tiff"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003InfoPlist.strings (contains \u201cBundleDisplayName\u201d = \u201cHi\u201d)"]},{"entry":[{},"\u2003\u2003\u2003\u2003fr.lproj\/"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003Image2.tiff"]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003InfoPlist.strings (contains \u201cBundleDisplayName\u201d ="]},{"entry":[{},"\u2003\u2003\u2003\u2003\u2003\u201cBonjour\u201d)"]},{"entry":[{},"\u2003\u2003\u2003Sounds\/"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In the bundle, the Info.plist file contains a key-value pair (among others) that identifies the non-localized, or default, name to be displayed for the bundle. The Resources directory contains two subdirectories that respectively pertain to English language localization (en.lproj) and French language localization (fr.lproj). In this particular example, Image 1 is language-independent, and therefore is located outside of these two subdirectories. However, Image 2 is assumed to contain text. Therefore, different versions of this image are respectively placed in the two subdirectories. In addition, each directory contains a localized resource file named \u201cInfoPlist.strings\u201d that is associated with the information properties list file Info.plist. The InfoPlist.strings resource file in each subdirectory contains the localized name of the bundle for its associated language, among other key-value pairs.","In operation, when the \u201cHello\u201d bundle is to be displayed, one of the APIs in the library  examines the resources in the bundle to determine whether it contains a subdirectory for the user's preferred language. If so, the API examines the InfoPlist. strings file in that subdirectory to determine whether it contains a \u201cBundleDisplayName\u201d key. If so, the value associated with that key is provided to the requesting application or utility, to be displayed as the name for the bundle. If the bundle does not contain a subdirectory associated with the preferred language, or if the subdirectory exists but it does not contain a \u201cBundleDisplayName\u201d key, the API retrieves the default name from the Info.Plist file, and provides it to the requesting application.","In an alternative embodiment of the invention, the determination whether to display a localized name can be made more efficient by including another key-value pair in the Info.plist file which indicates whether the bundle has a localized display name. For example, the key might be named \u201cLocalized\u201d. If the bundle does not have any localization resources, the value of this key can be set to false. If, however, localization information is contained among the resources, the value of this key can be set to true. In this embodiment, the API first checks the value of this key in the Info.plist. If it is false, the API need look no further, and simply provide the default name for the bundle.","The foregoing example has been provided with reference to application bundles. It will be appreciated that the same approach can be employed for any other type of file system element in which attribute data and resources are contained within that element. The APIs in the library  that deal with localization can be published so that developers can include the appropriate resources to support localization in desired languages. Thus, whenever a developer creates a new application, plug-in, or other similar type of loadable code that lends itself to packaging in a bundle, the developer can include all of the appropriate localization information with the bundle. If support for additional languages is desirable, a subdirectory of data appropriate to that language can be easily added to the resources for the bundle at any time. Thus, for example, if a third party later develops Japanese-language support for the application, a Japanese language project folder can be copied into the Resources directory of the bundle.","Another category of file system elements to be localized comprises pre-established folders. Basically, this category is made up of folders that are provided with the basic operating system. For example, the Mac OS includes a number of pre-defined folders such as \u201cSystem,\u201d \u201cLibrary,\u201d \u201cApplications,\u201d \u201cDocuments,\u201d \u201cPictures,\u201d etc. In one implementation of the invention, separate language project subdirectories can be incorporated in each of these pre-defined folders, in the same manner as described previously with respect to bundles. However, in such a case, much of the same information may be replicated in each folder. In accordance with another embodiment of the invention, therefore, all of the localization information is collected in a central location, where it is accessed whenever any of the pre-established folders is to be displayed. In this case, each of the pre-established folders contains a single hidden file to indicate that the folder is localized. The following example illustrates this implementation:",{"@attributes":{"id":"p-0035","num":"0034"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Pictures\/"]},{"entry":[{},"\u2003.localized"]},{"entry":[{},"\/System\/Library\/Services\/FolderLocalizations\/"]},{"entry":[{},"\u2003en.lproj\/"]},{"entry":[{},"\u2003\u2003\u2003FolderLocalization.strings (contains \u201cSystem\u201d=\u201c...\u201d;"]},{"entry":[{},"\u2003\u2003\u2003\u201cPictures\u201d=\u201c...\u201d, etc.)"]},{"entry":[{},"\u2003fr.lproj\/"]},{"entry":[{},"\u2003\u2003\u2003FolderLocalization.strings (contains \u201cSystem\u201d=\u201c...\u201d;"]},{"entry":[{},"\u2003\u2003\u2003\u201cPictures\u201d=\u201c...\u201d, etc.)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In this example, the \u201cPictures\u201d folder contains an empty file named \u201c.localized\u201d. This file is preferably a hidden file, so that it is not displayed to the user. The presence of this file provides an indication that the \u201cPictures\u201d folder has localization information associated with it. This localization information is stored at a central location, which in this example is identified by the path \u201c\/System\/Library\/Services\/FolderLocalizations\/\u201d. Within this directory are contained two subdirectories respectively associated with the English and French languages. Each subdirectory contains a strings file of the localized names for the special folders.","This approach enables a quick first-pass test to be conducted to determine if a particular folder name is localized. An API in the library  first checks the folder of interest, to see if it contains the \u201c.localized\u201d file. If not, there is no localization, and the normal process is carried out for displaying the folder's name. If the \u201c.localized\u201d file is present, the API then checks the \u201cFolder Localizations\u201d directory to see if a subdirectory associated with the user's preferred language is present. If so, the API checks that subdirectory's strings file, to see if it contains a key that matches the name of the folder, e.g. \u201cPictures\u201d. If such a key is found, the value associated with that key is the localized name for the folder. This value is retrieved from the strings file in the subdirectory and provided to the requesting application as the name of the folder.","Of course, the localized name can be stored within the contents of the special folder itself, rather than a central location, if desired. For instance, instead of being an empty file, the \u201clocalized\u201d file could contain the localized names of the folder.","Arbitrary folders that might be added at any time by the developer of the operating system, or third parties, represent another category of file system elements that can be localized. These folders may not have the same format as a bundle, and therefore may not include the resources that are used for localization in the examples described above. In this case, a pre-defined extension can be used to indicate that a folder name should be localized when it is displayed. The following example illustrates one manner in which an arbitrary folder can be localized according to this aspect of the invention:",{"@attributes":{"id":"p-0040","num":"0039"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Hello.localized\/"]},{"entry":[{},"\u2003localized\/"]},{"entry":[{},"\u2003\u2003\u2003en.strings (contains \u201cHello\u201d = \u201cHi\u201d)"]},{"entry":[{},"\u2003\u2003\u2003fr.strings (contains \u201cHello\u201d = \u201cBonjour\u201d)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In this example, the \u201cHello\u201d folder is given the extension \u201clocalized\u201d to indicate that the folder's name should be localized upon display. Preferably, this extension is hidden from the user's view. In addition, the folder contains a hidden directory named \u201c.localized\u201d. This directory contains string files that respectively pertain to the different languages being supported.","In operation, an appropriate API in the library  determines whether a folder to be displayed includes the \u201c.localized\u201d extension. If so, the API then checks for the existence of a string file pertaining to the user's preferred language. If the file exists, it is examined to determine whether it contains a key that matches the name of the folder. If it does, the localized name appearing as the value for that key is substituted for the default folder name, and provided to the requesting application, for display to the user.","This same approach can be used for individual files, as well as folders. In this case, the file is given the hidden extension \u201c.localized\u201d, and a hidden file is associated with the principal file. This hidden file contains the localization information for the principal file, i.e. the strings for each supported language.","Many operating systems permit the user to change the names of files and folders. When this occurs, it is logical to assume that the user would prefer to see the file or folder displayed with the new name that has been given to it by the user, even if there is a localized name available for the user's preferred language. To accommodate this behavior, the localized name of an arbitrary folder is displayed only if the actual file name (as stored in the file system) matches a key in the appropriate strings file.","To illustrate, in the foregoing example, the actual folder name is \u201cHello\u201d. In this case, if the user's preferred language is English, that folder will be displayed with the name \u201cHi\u201d, and if French is the preferred language the folder will appear with the name \u201cBonjour.\u201d To personalize the display, the user may change the name of the folder, for example to \u201cHowdy.\u201d In this case, the format of the folder would appear as follows:",{"@attributes":{"id":"p-0046","num":"0045"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Howdy.localized\/"]},{"entry":[{},"\u2003.localized\/"]},{"entry":[{},"\u2003\u2003\u2003en.strings (contains \u201cHello\u201d = \u201cHi\u201d)"]},{"entry":[{},"\u2003\u2003\u2003fr.strings (contains \u201cHello\u201d = \u201cBonjour\u201d)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"This same behavior can be exhibited by the other categories of elements described in the previous examples. For instance, in the case of bundles, a localized name is retrieved and displayed only if the actual name of the bundle matches the BundleDisplayName entry in the Info.plist file. In the case of special folders, if the user changes the original name of the folder, there would be no corresponding key for the changed name in the central directory. For instance, if the user changed the name of a file from \u201cPictures\u201d to \u201cPhotos\u201d, there is no key in the central directory having the name \u201cPhotos\u201d that would cause a language-based change in the view, and hence the displayed name of the file would remain \u201cPhotos\u201d.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 3","b":["50","52","54","56"]},"If, at step , the element is determined to be a bundle, an API in the library  checks at step  whether the value for the \u201cLocalized\u201d key in Info.plist is \u201cTrue.\u201d If not, or if the key is not present, the non-localized name is sent at step . If the key is present and has a value of \u201cTrue,\u201d a check is made at step  to determine whether the value for the key \u201cBundleDisplayName\u201d in the Info.plist is the same as the actual name of the bundle. If it is not, this provides an indication that the user has changed the name, and in this case the non-localized name designated by the user is sent, at step . If the actual name is the same as the key value, a determination is made at step  whether a localization directory for the user's preferred language is contained within the Resources directory for the bundle. If not, the non-localized name is sent at step . If the localization directory for the language of interest is found, a check is made at step  whether a key for the bundle display name is present in that directory, e.g. in an InfoPlist.strings file. If so, the value for that key is retrieved from the file at step  and sent to the requesting application as the localized name for the file system element.","If the file system element is determined to be one of the pre-established folders at step , a determination is made at step  whether that folder contains a \u201c.localized\u201d file, indicating that it has localization information associated with it. If not, the non-localized name is sent to the requesting application at step . If a \u201c.localized\u201d file is found in the folder, a check is made at step  whether the central directory of localization information exists. If so, this directory is checked at step  to determine whether a key exists for the name of the folder, e.g. \u201cSystem\u201d, within a file for the preferred language. If so, the value for that key is retrieved and sent as the localized name, at step .","If a \u201c.localized\u201d extension is detected on the file system element at step , a determination is made at step  whether that element has a localization file for the user's preferred language. If not, the non-localized name is sent at step . If the file exists, a determination is made at step  whether the file contains a name key that corresponds to the actual name of the element. If such a key is found, the value for that key is retrieved and sent as the localized name, at step . If there is no key that matches the name of the element, e.g. the user has changed its name, the non-localized actual name is sent at step .","From the foregoing, it can be seen that the present invention provides a mechanism by which a quick assessment can be made whether a file system element employs localization. Once the type of file system element has been determined, e.g. bundle, pre-established folder or arbitrary file\/folder, the library  only needs to check one item of information associated with the element, at step ,  or , to make this assessment. If localization is not employed, the non-localized name is quickly sent, in the normal manner. Thus, the number of file accesses are reduced when displaying multiple files and folders. If localization is employed, the APIs in the library access the appropriate resource associated with the user's preferred language to retrieve and send the localized name.","As a particular advantage of the present invention, multiple users can view the same file system elements simultaneously, and each is presented with a localized name in that user's preferred language. Referring to , a shared storage device , such as a network drive, may contain, among other elements, an application bundle , a pre-defined folder  for audio files, and an arbitrary folder . Each of these elements has localized names for both the English and French languages. For the application bundle  and the arbitrary folder , the localized names are present within the contents of the element itself, as described previously. In the case of the pre-defined folder , the localized name is stored in a separate directory .","Different users can view the elements stored in the storage device  at their respective personal computers ,  and . The user at computer  may have set her preferred language as English, whereas the user at computer  may have set his preferred language as French. The user at computer  may have designated a third language for which there is no localization of file system elements, e.g. Japanese. Based upon each of these settings, the file systems  of the respective personal computers, and more particularly the APIs associated with the file systems, identify and present the appropriate localized name for each element at the computers  and . In the case of computer , since there are no localized names in the Japanese language, the default names for the folders are displayed. These results are independent of the particular mechanism that is employed to access the folders, e.g. a browser, an \u201cOpen\u201d command from an application, a utility such as a Search tool, etc.","As a further optional feature of the invention, the localization resources can be renamed to optimize search functions. More particularly, it is desirable to be able to locate files and folders based upon their localized names, as well as their default or actual names. If the search engine has to look inside each file or folder to find the localized name, e.g. \u201cBonjour\u201d, its performance could be slowed. To reduce such a possibility, and take advantage of the fast catalog search capability of many file systems, the localized name of a localized element is included as a filename for localized resources of the element. For example, in the case of a bundle, the InfoPlist.strings files can be renamed, as follows:",{"@attributes":{"id":"p-0056","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Hello.app\/"},{"entry":"\u2003\u2003Contents\/"},{"entry":"\u2003\u2003\u2003Info.plist (contains \u201cBundleDisplayName\u201d = \u201cHello\u201d)"},{"entry":"Resources\/"},{"entry":"\u2003\u2003en.lproj\/"},{"entry":"\u2003\u2003\u2003Hi.InfoPlist.strings (contains \u201cBundleDisplayName\u201d = \u201cHi\u201d)"},{"entry":"\u2003\u2003fr.lproj\/"},{"entry":"\u2003\u2003\u2003Bonjour.InfoPlist.strings (contains \u201cBundleDisplayName\u201d ="},{"entry":"\u2003\u2003\u2003\u201cBonjour\u201d)"},{"entry":"\u2003\u2003For an arbitrary folder, the renaming produces the following result:"},{"entry":"Hello.localized\/"},{"entry":"\u2003\u2003.localized\/"},{"entry":"\u2003\u2003\u2003Hi.en.strings (contains \u201cHello\u201d = \u201cHi\u201d)"},{"entry":"\u2003\u2003\u2003Bonjour.fr.strings (contains \u201cHello\u201d = \u201cBonjour\u201d)"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Since the file system elements contain files whose names correspond to the localized names, they will be found quickly by the search engine. The search engine then only has to check whether a located file is associated with a localized file system element, and display the root folder or file for that element. Thus, even if the user only enters a partial filename in a search string, the search engine will be able to find all localized files whose names include that partial name.","The renaming of the files to accomplish this result can be carried out as part of a post-processing step during the production of any file system elements that are localized. For example, it can be achieved by extracting the localized string from a strings file and renaming the file. With this approach, the localization processes themselves do not require any modification.","In summary, it can be seen that the present invention enables the names of file system elements, including bundles, folders (or directories) and files, to be localized, so that users can view the elements with names in a preferred language of choice. Furthermore, since the methods for determining localization reside in the file system at the user's location, multiple simultaneous localizations of the same element in different respective languages are possible. The impact on performance is minimal, since it is possible to determine if a file system element has a localized name without the need to look inside the element. In addition, developers of applications and third-party products can also localize those products, for a consistent user experience.","It will be appreciated by those of ordinary skill in the art that the present invention can be embodied in other specific forms without departing from the spirit or essential characteristics thereof. The presently disclosed embodiments are therefore considered in all respects to be illustrative, and not restrictive. The scope of the invention is indicated by the appended claims, rather than the foregoing description, and all changes that come within the meaning and range of equivalence thereof are intended to be embraced therein."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
