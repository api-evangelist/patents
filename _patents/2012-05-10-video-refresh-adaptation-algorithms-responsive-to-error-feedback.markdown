---
title: Video refresh adaptation algorithms responsive to error feedback
abstract: In general, this disclosure relates to techniques for adaptively determining a rate for intra-coding segments (e.g., macro-blocks) of video data within a sequence of video units (e.g., frames) in response to the receipt of error feedback that is provided by a video decoder. One example method includes receiving feedback from a video decoder that indicates an error associated with coded video data, and, upon receipt of the feedback, determining a rate for intra-coding a specified number of segments of video data for each video unit within a sequence of video units, wherein an intra-coding of segments of video data within one video unit is independent of a coding of segments of video data within other video units within the sequence.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09479800&OS=09479800&RS=09479800
owner: QUALCOMM Incorporated
number: 09479800
owner_city: San Diego
owner_country: US
publication_date: 20120510
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application is a divisional application of U.S. patent application Ser. No. 12\/349,386, filed Jan. 6, 2009, which claims the benefit of U.S. Provisional Application No. 61\/043,005, filed on Apr. 7, 2008, the entire contents of both of which are incorporated herein by reference.","This disclosure relates to encoding and\/or decoding of video data.","Video coding and compression techniques may achieve efficient compression by reducing both temporal redundancies between video frames in a frame sequence and also spatial redundancies within a video frame. Examples of video coding and compression techniques are described by the ITU-T H.261, H.263, Motion Picture Experts Group (MPEG) 1, MPEG2, and MPEG4 standards, as well as the ITU-T H.264 standard and its counterpart, ISO\/IEC MPEG-4, Part 10, i.e., Advanced Video Coding (AVC).","An intra-coded frame is self-contained and reduces spatial redundancies within a video frame. An inter-coded frame, however, is predicted via motion compensation from other coded frames (e.g., previously coded frames) to reduce temporal redundancies. Inter-coding may achieve high compression efficiency. However, the inter-dependency between frames makes the coded bit-stream for inter-coded frames more susceptible to propagating channel errors. Errors introduced in the compressed bit-stream may result in errors in the video frames reconstructed by a video decoder.","Intra-coding may help minimize the possibility of propagating channel errors, because the coding of video data in these frames is independent of the coding of video data in previous or subsequent frames. However, intra-coded frames may comprise many times more coded data than inter-coded frames, and may therefore cause transmission bandwidth issues. As a result, there may be a degradation of quality on the decoded video output side, particularly when decoding is performed by real-time, or streaming, video applications. Thus, in some cases, video coding techniques may only intra-code individual segments (e.g., macro-blocks) of data within individual frames, rather than intra-coding all of the frame data.","Any given macro-block within an inter-coded frame (i.e., Predicted frame (P-frame) or Bi-directionally predicted frame (B-frame)) may be intra-coded as an intra macro-block. Similar to intra-coded frames, an intra-coded macro-block is coded independently of data from another (e.g., previously) coded frame. The method of forcing macro-blocks to be intra-coded may be referred to as encoder intra-refresh.","In general, this disclosure relates to techniques for adaptively determining a rate for refreshing segments (e.g., macro-blocks) of video data within a sequence of video units (e.g., frames) in response to the receipt of error feedback provided by a video decoder. This error feedback may comprise packet loss feedback, indicating that the video decoder failed to receive packets within one or more frames of a frame sequence.","In some cases, the error feedback comprises a Picture Loss Indication (PLI) message and\/or a General Negative Acknowledgment (GNACK) message that is sent by the video decoder. A PLI message indicates a loss of an undefined amount of coded video data belonging to one or more pictures, while a GNACK message may identify specific packets of coded video data that have been lost.","An error feedback algorithm may be implemented to set a macro-block intra-refresh rate by the video encoder based upon the error feedback that is received from the video decoder. The video encoder may then use this intra-refresh rate to intra-code one or more macro-blocks in each frame of a frame sequence.","In one aspect, a method comprises receiving feedback from a video decoder that indicates an error associated with coded video data, and, upon receipt of the feedback, determining a rate for intra-coding a specified number of segments of video data for each video unit within a sequence of video units, wherein an intra-coding of segments of video data within one video unit is independent of a coding of segments of video data within other video units within the sequence.","In one aspect, a computer-readable medium contains instructions for causing one or more processors to receive feedback from a video decoder that indicates an error associated with coded video data, and, upon receipt of the feedback, to determine a rate for intra-coding a specified number of segments of video data for each video unit within a sequence of video units, wherein an intra-coding of segments of video data within one video unit is independent of a coding of segments of video data within other video units within the sequence.","In one aspect, a device comprises a storage device and one or more processors coupled to the storage device and configured to receive feedback from a video decoder that indicates an error associated with coded video data, and, upon receipt of the feedback, to determine a rate for intra-coding a specified number of segments of video data for each video unit within a sequence of video units, wherein an intra-coding of segments of video data within one video unit is independent of a coding of segments of video data within other video units within the sequence.","In one aspect, a method comprises detecting, by a video decoder, at least one error associated with coded video data sent from a video encoder, determining a round-trip travel time for data communication between the video decoder and the video encoder, determining a last-sent time at which the video decoder last sent the video encoder a feedback message indicating a previous error that was detected by the video decoder, comparing a current time to a sum of the last-sent time and the round-trip travel time, and, based upon the comparing, determining whether to send the video encoder a second feedback message indicating the at least one error detected by the video decoder.","In one aspect, a device comprises a storage device and one or more processors coupled to the storage device. The one or more processors are configured to detect at least one error associated with coded video data sent from a video encoder, determine a round-trip travel time for data communication between the device and the video encoder, determine a last-sent time at which the device last sent the video encoder a feedback message indicating a previous error that was detected by the device, and compare a current time to a sum of the last-sent time and the round-trip travel time. Based upon the comparison, the one or more processors are further configured to determine whether to send the video encoder a second feedback message indicating the at least one error detected by the device.","The techniques described in this disclosure may be implemented in hardware, software, firmware, or any combination thereof. If implemented in software, the software may be executed in a processor, which may refer to one or more processors, such as a microprocessor, application specific integrated circuit (ASIC), field programmable gate array (FPGA), or digital signal processor (DSP), or other equivalent integrated or discrete logic circuitry. Software comprising instructions to execute the techniques may be initially stored in a computer-readable medium and loaded and executed by a processor.","Accordingly, this disclosure also contemplates computer-readable media comprising instructions to cause a processor to perform any of a variety of techniques as described in this disclosure. In some cases, the computer-readable medium may form part of a computer program product, which may be sold to manufacturers and\/or used in a device. The computer program product may include the computer-readable medium, and in some cases, may also include packaging materials.","The details of one or more aspects are set forth in the accompanying drawings and the description below. Other features, objects, and advantages will be apparent from the description and drawings, and from the claims.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 1","b":["2","20","16","2","20","2","20","2","20","16","16"]},"For purpose of illustration and description only, device  is referred to as a video encoder, and device  is referred to as a video decoder. In the description below, various techniques provides details on exchanges of information between a device that performs encoding (e.g., compression) and a device that performs decoding (e.g., decompression), and thus device  (video encoder) and device  (video decoder) are shown as being communicatively coupled via network . It should be understood, however, that, in certain aspects, device  and\/or device  may perform encoding and\/or decoding operations. However, it is assumed in the subsequent description, for illustration purposes only, that device  performs at least video encoding operations, and is therefore referred to as a video encoder, while device  performs at least video decoding operations, and is therefore referred to as video decoder.","In some cases, video encoder  and video decoder  may each be capable of executing various applications, such as graphics applications, video applications, and\/or other multi-media applications. For example, video encoder  and video decoder  may be used for graphics applications, video game applications, video playback applications, digital camera applications, instant messaging applications, video teleconferencing applications, mobile applications, or video streaming applications.","Video encoder  and video decoder  may each be capable of processing a variety of different data types and formats. For example, they may be able to process still image data, moving image (video) data, or other multi-media data. As will be described in more detail below, video encoder  is capable, during an intra-refresh procedure, of intra-coding one or more segments (e.g., blocks or macro-blocks) or video data within one or more video units, such as video frames, within a sequence of video units to help reduce spatial redundancies within the sequence. Intra-coded segments are segments that are coded independently of video data from a previously or subsequently coded video unit.","Any given macro-block within an individual frame may be intra-coded as an intra macro-block. Similar to intra-coded frames, an intra-coded macro-block is coded independently of data from another (e.g., previously) coded frame. The method of forcing macro-blocks to be intra-coded may be referred to as encoder intra-refresh. The rate at which macro-blocks are intra-coded may be referred to as an intra-refresh rate. There may be various reasons for intra-refreshing macro-blocks, such as, for example, inverse discrete cosine transform (IDCT) mismatch control by video decoder , and error resilience.","To control IDCT mismatch, such as within the context of the H.261 and H.263 block-based video coding standards, each macro-block location in an image may be intra-coded at least once every pre-determined number of times that coefficients are transmitted for that macro-block. The intra-refresh of macro-blocks may limit the extent of error propagation due to DCT\/IDCT mismatch.","To improve error resilience, selected macro-blocks may be intra-coded to limit error propagation resulting from using corrupt macro-blocks that have been incorrectly reconstructed or concealed due to channel errors. These corrupt macro-blocks may, upon decoding, be visually objectionable. Furthermore, correctly decoded macro-blocks from subsequent frames that refer back to a corrupt macro-block for temporal prediction may also be visually objectionable. These types of artifacts may be more objectionable than the DCT\/IDCT mismatch errors. As such, they may drive an intra-refresh strategy when communicating data over error-prone channels.","Based upon error (packet loss) feedback  that is received from video decoder , video encoder  is capable of dynamically adjusting the rate of intra-refresh for intra-coded blocks. In such fashion, video encoder  is able to optimize the quality of, and reduce the number of errors in, video data transmission to video decoder , yet also manage the transmission bandwidth by controlling the number of intra-coded blocks that are sent to video decoder  over time. In some aspects, feedback  may include indications regarding any number of different types of packet errors associated with coded video data, including indications of packet loss. For purposes of illustration only, it will be assumed in the following description that feedback  relates to packet loss feedback.","Video encoder  includes a storage medium , a display device , and one or more processors . Storage medium  may include any permanent or volatile memory that is capable of storing instructions and\/or data, such as, for example, synchronous dynamic random access memory (SDRAM), read-only memory (ROM), non-volatile random access memory (NVRAM), embedded dynamic random access memory (eDRAM), static random access memory (SRAM), or flash memory. Display device  may be any device capable of displaying video data for display purposes, such as an LCD (liquid crystal display), plasma display device, or other television (TV) display device. Processors  may include one or more processors, such as a control processor, a video processor, a graphics processor, and\/or a display processor, such as is shown in the example of . Display device  and processors  are each capable of reading from and writing to storage medium . For example, processors  may execute instructions from one or more functional modules that are stored in storage medium . These modules may comprise downloadable modules that are downloaded dynamically, over the air, into storage medium . In one aspect, one or more of these modules may comprise binary instructions that are generated or compiled from application programming interface (API) instructions created by an application developer.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 1","FIG. 1"],"b":["4","4","6","8","10","6","6","8","10","18","20","6"]},"Although the example of  shows intra-encoder , predictive encoder , and rate adaptation module  as modules stored within storage medium  and executable by processors , these modules may, in other cases, be implemented within hardware (such as within the hardware of processors ). Processors  may, in some cases, include one or more types of processors, such as a general purpose microprocessor and\/or other types of processors, such as shown in the example of .","Over time, video encoder  sends coded video data to video decoder  for decoding and display. If video decoder  determines that it has lost one or more packets of video data (such as by tracking packet sequence numbers), it may send an indication that it has lost coded video data to video encoder . In , this indication comprises packet loss feedback . In some cases, packet loss feedback  may include Real-Time Control Protocol (RTCP) data or messages. For example, packet loss feedback  may include one or more General Negative Acknowledgment (GNACK) messages that each may identify one or more packets, such as packets that have been lost. Packet loss feedback  may include one or more Picture Loss Indication (PLI) messages, which generally indicate the loss of an undefined amount of coded video data belonging to one or more pictures. In some cases, packet loss feedback  may include one or more Real-Time Transport Protocol (RTP) messages, such as receiver report messages, that may also provide information regarding packet loss.","In the example of , video decoder  includes a storage medium , a display device , and one or more processors . Similar to storage medium , storage medium  may include any permanent or volatile memory that is capable of storing instructions and\/or data, such as, for example, synchronous dynamic random access memory (SDRAM), read-only memory (ROM), non-volatile random access memory (NVRAM), embedded dynamic random access memory (eDRAM), static random access memory (SRAM), or flash memory. Similar to display device , display device  may be any device capable of displaying video data for display purposes, such as an LCD (liquid crystal display), plasma display device, or other television (TV) display device. Processors  may include one or more processors, such as a control processor, a video processor, a graphics processor, and\/or a display processor. Display device  and processors  are each capable of reading from and writing to storage medium .","As shown in , storage medium  may include instructions for two functional modules: an intra-decoder  and a predictive (inter) decoder . Intra-decoder  is capable of decoding and display intra-coded segments (e.g., blocks) of video data contained within one or more video units (e.g., frames) that are sent across network  by video encoder . Predictive decoder  is capable of decoding and displaying inter-coded segments that are sent by video encoder . Processors  may execute these modules  and  to display video data on display device . Although the example of  shows intra-decoder  and predictive decoder  as modules stored within storage medium  and executable by processors , these modules may, in other cases, be implemented within hardware (such as within the hardware of processors ). Processors  may, in some cases, include one or more types of processors, such as a general purpose microprocessor and\/or other types of processors, such as shown in the example of .","In some cases, video decoder  is further capable of performing encoding operations. In these cases, video decoder  may include modules similar to intra-encoder , predictive encoder , and rate adaptation module . In some cases, video encoder  is further capable of performing decoding operations, such as when receiving coded video data from device  (which may perform both decoding and encoding operations). In these cases, video encoder  may include modules similar to intra-decoder  and predictive decoder .",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 2","FIG. 1","FIG. 2","FIG. 2"],"b":["50","2","20","2","50","14","20","50","30","14","30"]},"Processors  may comprise multiple programmable processors. As shown in , these may include a control, or general-purpose, processor , a video processor , a graphics processor , and a display processor . Control processor  may be capable of controlling video processor , graphics processor , and\/or display processor . In one aspect, processors  may include other forms of multi-media processors.","Video processor  may be utilized during video encoding and\/or decoding operations, and may implement various coding algorithms. For example, video processor  may implement, in some cases, H.261, H.263, Motion Picture Experts Group (MPEG) 1, MPEG2, and\/or MPEG 4 video coding standards, as well as the H.264 standard and its counterpart, ISO\/IEC MPEG-4, Part 10, i.e., Advanced Video Coding (AVC). Video processor  may also implement one or more discrete cosine transform (DCT) or inverse discrete cosine transform (IDCT) operations when encoding or decoding video data.","Graphics processor  may be a dedicated graphics rendering device utilized to render, manipulate, and display computerized graphics. Graphics processor  may implement various complex graphics-related algorithms. For example, the complex algorithms may correspond to representations of two-dimensional or three-dimensional computerized graphics. Graphics processor  may implement a number of so-called \u201cprimitive\u201d graphics operations, such as forming points, lines, and triangles or other polygon surfaces, to create complex, three-dimensional images on a display, such as display device  or  (). Display processor  manages the display of pixel data on the display device. Display device  may perform various operations on the pixel data, such as rotation and\/or scaling operations.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIGS. 3A-3F"},"In the example of , it is assumed that an example frame sequence includes six frames that follow one another consecutively in a temporal sequence. (Of course, in other cases or examples, a frame sequence may include many more than six frames.) Each frame may include an array of blocks arranged at different positions. Each of  shows one of these six frames for purposes of illustration. Video encoder  () is capable of coding (e.g., intra-coding and\/or inter-coding) blocks of the video data within each frame and sending the frame to video decoder  for decoding and display. Video encoder  may use its predictive encoder  to inter-code one or more blocks of video data within any given frame, and may use its intra-encoder  to intra-code one or more blocks of video data within any given frame. Video encoder  may use its rate adaptation module  to adjust the rate of intra-coding (i.e., intra-refresh rate) of blocks, or the number of intra-coded blocks in each frame.","In , each of the temporally consecutive frames includes six intra-coded blocks .  also depict blocks that are not yet intra-coded , and also previously intra-coded blocks . Any blocks that are not intra-coded within a given frame may, in some cases, be inter-coded. However, as can be seen in the six-frame sequence of , if no blocks are intra-coded twice (because each block may be unique, as is the case in this example), then all of the blocks will be intra-coded once in the six-frame sequence. It should be noted that, in this example, the same number of blocks (six) are intra-coded in each frame, but this is not necessary. The blocks that are not intra-coded in each frame may be inter-coded, and may reference one or more frames where a corresponding best-matching block is intra-coded or inter-coded.","Because, in , only six blocks are intra-coded in each frame of the sequence, it takes six frames to complete the intra-coding of each block at all positions in the entire frame. However, there may be interdependency between frames, given that other blocks are inter-coded, meaning that coded bit streams may be susceptible to propagating channel errors, which may result in errors within the video frames decoded by video decoder . Increasing the number of intra-coded blocks in each transmitted frame may reduce errors and error propagation caused by channel errors. However, increasing the number of intra-coded blocks in each frame may also increase transmission bandwidth, given that more bits may be used for intra-coding than for inter-coding.","Thus, rate adaptation module  of video encoder  may dynamically determine, or adjust, the rate of intra-coding that is performed by intra-encoder . For example, rate adaptation module  may determine the number of intra-coded blocks for each frame in the sequence, and thus may increase or decrease this number in an attempt to balance the bandwidth and error reduction parameters. As previously described, rate adaptation module  may determine the intra-refresh rate based, in some cases, upon packet loss feedback  that is received from video decoder . For example, if video decoder  indicates that there is a significant amount, or increase, in packet losses or errors, rate adaptation module  may determine to increase the intra-refresh rate to help reduce the possibility of further propagating errors. This will be described in more detail below.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 4","FIG. 1","FIG. 4","FIGS. 5-8","FIG. 4"],"b":["2","18","2"]},"Video encoder  may receive feedback  from video decoder  that indicates an error (e.g., loss of data) associated with coded video data, such as coded video data that may have been previously sent by video encoder  to video decoder  (). Upon receipt of feedback , video encoder  may determine a rate for intra-coding a specified number of segments (e.g., blocks) of video data for each video unit within a sequence of video units (e.g., frames), wherein an intra-coding of segments of video data within one video unit is independent of a coding of segments of video data within other video units within the sequence (). Video encoder  may repeat the acts of processing received feedback  and determining a rate for intra-coding for multiple video units and\/or sequences of video units.","In some cases, feedback  that is sent from video decoder  indicates a loss of at least a portion of the coded video data by video decoder . Each segment of video data may comprise one or more blocks of video data, and each video unit within the sequence of video units may comprise one or more frames or slices of video data. An intra-coding of blocks of video data within one frame may be independent of a coding of blocks of video data within other frames within the sequence.","Feedback  may, in one aspect, comprise at least one of a picture loss indication (PLI) and a general negative acknowledgment (GNACK). Feedback  may comprise feedback indicating a number of lost packets containing coded video data, each lost packet having been previously sent to, but not received by, video decoder  by video encoder . In some cases, determining the rate for intra-coding may be based, at least in part, on a target correction time for correcting errors across one or more video units within the sequence, as will be described in further detail below.","When feedback  includes a GNACK that indicates a number of lost packets, determining the rate for intra-coding may be based, at least in part, on the number of lost packets. In some cases, video encoder  may also receive a report from video decoder  indicating a second number of lost packets. For example, this report may be one of a series of RTCP Receiver Reports periodically sent by video decoder  to video encoder . As will be described in further detail below, video encoder  may, in one aspect, calculate a packet error rate based upon at least one of the number of lost packets indicated by the GNACK and the second number of lost packets indicated by the report, wherein determining the rate for intra-coding is based, at least in part, on the packet error rate. For example, video encoder  may calculate a packet error rate based upon which of the GNACK or report indicates a higher volume of lost packets. Determining the rate of intra-coding may be further based, at least in part, on an estimated number of packets contained within each video unit within the sequence of video units.","If error feedback  includes a GNACK message, the GNACK may identify each lost packet, and video encoder  may calculate an elapsed time based upon a difference between a current time and a time at which one of the identified lost packets was previously sent to video decoder , as is described in further detail below in reference to . Video encoder  may determine the rate of intra-coding based, at least in part, on this elapsed time. In some cases, each lost packet identified by the GNACK has an associated sequence number. Sequence numbers may be initially assigned to packets, in ascending order, when the packets are sent from video encoder  to video decoder . Video decoder  may keep track of which packets it has received, and also the corresponding sequence numbers of these packets. Thus, the GNACK sent by video decoder  may identify the sequence numbers of any lost packets (or sequence number ranges for lost packets), assuming the sequence numbers are in ascending order.","Upon receipt of a GNACK that identifies lost packets by sequence number, video encoder  may calculate the elapsed time. Video encoder  may determine which lost packet identified by the GNACK has a sequence number that is greater than a sequence number of a first packet of a prior sequence of video units having intra-coded segments that was previously sent by video encoder  to video decoder . Video encoder  may then calculate the elapsed time based upon a difference between the current time, as maintained by video encoder , and a time at which the determined lost packet was previously sent to video decoder  from video encoder , as is described in more detail with reference to . Video encoder  may make such a calculation of the elapsed time by keeping track of when each packet, as identified by sequence number, was sent to video decoder .","As described above, video encoder  may repeat the receiving of feedback  and the determining of the rate for intra-coding for each video unit in multiple sequences of video units. In some cases, video encoder  may determine whether to repeat the processing of received feedback  and the determining of the rate for intra-coding in multiple sequences of video units based upon whether a detected amount of motion across different video units within one sequence of video units exceeds a motion threshold, as is described in further detail below. In one aspect, the motion threshold is an adjustable parameter that may, in some cases, be set to a higher threshold value by video encoder  when video encoder  uses a higher rate of intra-coding segments of video data.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 5","FIG. 5","FIG. 5","FIG. 1"],"b":["2","18","20"]},"In various scenarios, video encoder  (and, more particularly, rate adaptation module ) may determine a macro-block intra-refresh rate based upon received packet loss feedback, and may use various criteria or factors to calculate the intra-refresh rate. For example, as will be described in further detail, video encoder  may use a target correction time, a probability of uncorrected errors, a number of errors detected, an amount of motion, and\/or a limited duration of user-perceived error when calculating an intra-refresh rate.","Various parameters are described with reference to  and subsequent flow diagrams. Some of these parameters are defined below:","Target_Correction_Time (in seconds): maximum amount of time after detection of an error by video encoder , such as a packet loss, for which the video encoder  has to correct the error.","Current_Frame_Rate (in frames per second): the current number of frames per second used by video encoder . If the video encoder  varies this parameter with changes in the target_enc_rate (target encode rate) parameter, then the rate adaptation module  may estimate this from delivery of frames from the video encoder . In some cases, the video encoder  may indicate the value of Current_Frame_Rate to the rate adaptation module .","Max_Intra_MB_% (0-100%): maximum allowable percentage of intra-coded macro-blocks. This parameter may be used to limit degradation in video quality since the frame size may be fixed according to data and frame rate.","Intra_Repeat (integer): number of times a full macro-block intra-refreshed sequence (across a sequence of frames) is to be performed across the entire image when a packet loss is detected.","Intra_MB_%_No_Loss (0-100%): percentage of intra-coded (refreshed) macro-blocks when there is no detected packet loss.","Intra_MB_% (0-100%): the percentage of intra-coded (refreshed) macro-blocks that the video encoder  is to insert per frame (or slice).","Num_Intra_Frames (integer): the number of frames that the video encoder  has intra-coded (refreshed) macro-blocks.","In addition, various formulas and calculations that are shown below include Max and Min operations. It is assumed that a Max operation selects the maximum value of two or more possible values within a set, and that a Min operation selects the minimum value of two or more possible values within a set.","The method shown in  repeatedly checks to determine whether video encoder  has received RTCP feedback from video decoder  (). Upon receipt of such feedback, video encoder determines whether the feedback indicates a loss of one or more packets that were transmitted by video encoder  to video decoder  (). For example, packet loss feedback  () sent by video decoder  to video encoder  may indicate such a loss of one or more packets of coded video data sent by video encoder.","If video encoder  has not received any packet loss indication, it may use rate adaptation module  to determine, or set, an intra-refresh rate, or percentage, for the macro-blocks (Intra_MB_%) equal to Intra_MB_%_No_Loss, which may comprise an adjustable parameter (). In some cases, video encoder  may automatically set or adjust Intra_MB_%_No_Loss. In some cases, a user may set or adjust this parameter, such as to increase or decrease the number of intra-coded macro-blocks in each frame.","If, however, video encoder  has received a packet loss indication, such as packet loss feedback , it may determine whether it has received a GNACK or a PLI (). A GNACK may indicate one or more specific packets that were lost, or that had errors. The Intra_refresh routine begins upon receipt of a packet loss indication ().","Initially, rate adaptation module  of video encoder  may set () Intra_MB_% equal to\n\nMin{Max_Intra_MB_%,100%\/(Target_Correction_Time\u00d7Current_Frame_Rate)}.\n\nMax_Intra_MB_% and Target_Correction_Time are each adjustable parameters that may have initial, predefined values that are optimized for the particular application or operations that are performed by video encoder . These parameters may also have different values for different applications (e.g., video telephony, video streaming, gaming) that are executed by video encoder . Rate adaptation module  uses the values of each of these parameters when determining the value of Intra_MB_%.\n","In some cases, rate adaptation module  may implement one or more optional enhancement functions, such as are shown in , to obtain a modified value of Intra_MB_% (), as will be described in more detail below. Rate adaption module  requests video encoder  to start an intra-refresh procedure for a sequence of video frames using Intra_MB_% as the intra-refresh rate for macro-blocks in each frame, such as by executing intra-encoder  and predictive encoder  (). Video encoder  also may initialize the value of Num_Intra_frames to zero. Input is then provided by video encoder  that the intra-refresh procedure has started. Video encoder  also indicates when each video frame boundary has been reached (). This may be part of the same indication that is used to set a timestamp and\/or market bit in RTP. When a video frame boundary has been reached, rate adaptation module  increments Num_Intra_Frames () which is a parameter that keeps track of the number of video frames that include intra-coded macro-blocks using the current value of Intra_MB_%.","At each frame boundary, rate adaptation module  determines () whether\n\nNum_Intra_Frames>=Ceil[100%\/Intra_MB_%].\n\nIf Num_Intra_Frames is less than this ceiling (or maximum threshold), then video encoder  checks to determine whether it has received another packet loss indication from video decoder  (). If not, video encoder  again checks for a video frame boundary (). If, however, video encoder  has received another packet loss indication from video decoder , such as packet loss feedback , video encoder  may determine whether it has received a GNACK or a PLI (). In this case, video encoder  then continues with the Intra_refresh routine ().\n","If Num_Intra_Frames is greater than or equal to this ceiling, video encoder  has sent a full sequence of video frames to video decoder  using the current value of Intra_MB_% for each frame within this sequence (whereby an indicated number of macro-blocks in each frame have been intra-coded). Rate adaptation module  then performs the Repeat_Intra routine shown in  (). In this routine, rate adaptation module  determines whether the number of times that video encoder  has intra-refreshed an entire sequence of video frames (Intra-refreshed) is greater than, or equal to, the value of Intra_Repeat (which is another adjustable parameter that may have an initial value of two) (). The value of Intra_Repeat may be adjusted to account for possible motion associated with one or more macro-blocks within an intra-refreshed frame sequence. Such motion may potentially result in errors that can be corrected by repeating the intra-refresh sequence for a video sequence one or more times.","Rate adaptation module  returns to a no-loss-detected operation, and sets Intra_MB_%=Intra_MB_%_No_Loss, when the number of times that a complete intra-refresh sequence has been performed (Intra-refreshed) is greater than, or equal to, the value of Intra_Repeat. If, however, Intra-refreshed is less than the value of Intra_Repeat, then rate adaptation module  increments the value of Intra-refreshed () and again performs the Intra_refresh routine () for a subsequent sequence of video frames, as is shown in .",{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIG. 6","FIG. 1","FIG. 5","FIG. 5","FIG. 5","FIG. 6"],"b":["2","122","2"]},"By performing the method shown in , video encoder  may limit the probability of having uncorrected errors after one intra-refresh sequence of intra-coded macro-blocks within the frame sequence. Rate adaptation module  may determine a modified value of Intra_MB_% based, at least in part, on an estimate of an RTP packet loss rate during the intra-refresh sequence, and may make use of the fraction_lost parameter that is included within an RTCP Receiver Report that is provided by video decoder , indicating the fraction of packets that have been lost by video decoder  since the last Receiver Report was sent.","In addition, rate adaptation module  may be able to increase the value of Intra_MB_% when it has detected a larger number of errors (e.g., packet losses) from video decoder . By doing so, video encoder  may be able to more quickly correct errors that may be seen by the user of video decoder  (as displayed on display device ).","Various parameters are described with reference to  and subsequent flow diagrams. Some of these parameters are defined below:","Target_Err_Pr (0-1): target probability that there will still be an error in the image after a single intra-refresh sequence (i.e., sequence of video frames). In the example of , this parameter is set higher than an expected PER (packet error rate) times the number of packets per frame.","\u03b1 (0-1): IIR (infinite impulse response) filter update factor for estimating avg_norm_ppf (average normalized packets per frame). Video encoder  may start with a value of 0.1.","\u03b2 (0-10): tuning factor for determining Intra_MB_%. Video encoder  may start with a value of 1.0.","PER (0-1): packet error rate, which may be set equal to the fraction_lost parameter from the most recent RTCP Receiver Report received from video decoder .","avg_norm_ppf (real number): average \u2018normalized\u2019 packets per frame, which may be normalized to a target encode rate of 50 kbps (kilobits per second) and 10 fps (frames per second).","inst_ppf (integer): packets per frame in current frame","est_ppf (real number): estimated number of packets per future frame","Target_enc_rate (bits per second): current value of target_encode_rate set by rate adaptation module .","As is shown in , video encoder  may calculate, or estimate, the value of avg_norm_ppf () when calculating a modified value of Intra_MB_% (). Once a packet has been prepared and is ready for transmission by video encoder  (), video encoder  may increment inst_ppf, which is number of packets per frame in the current frame (). In some cases, inst_ppf indicates the number of RTP packets in the frame. inst_ppf is further incremented for each packet within the frame until a final packet indicates the end of the frame (). At this point, video encoder  is able to calculate () an updated value of avg_norm_ppf as follows:\n\navg_norm_ppf=(1\u2212\u03b1)\u00d7avg_norm_ppf+(\u03b1\u00d7inst_ppf)\u00d7(50 kbps\/target_encode_rate)\u00d7(Current_Frame_Rate\/10 fps),\n\nwherein it may be assumed, in this particular example, that the target encode rate is normalized with respect to a predefined value of 50 kbps, and that the current frame rate is normalized with respect to a predefined value of 10 fps. These predefined values are used in certain example scenarios only, and may have various different values in different configurations. The value of inst_ppf can then be reset to zero for the next frame (). As shown, the value of avg_norm_ppf is based upon the values of inst_ppf, target_encode_rate, and Current_Frame_Rate (which is the frame rate of the current frame). As shown in , this value of avg_norm_ppf may then be used to calculate a value of est_ppf.\n","In one aspect, the value of est_ppf (estimated packets per frame) may be calculated as follows:\n\nest_ppf=avg_norm_ppf\u00d7(target_enc_rate\/50 kbps)\u00d7(10 fps\/Current_Frame_Rate),\n\nwhere, in this example, the target encode rate is normalized with respect to a predefined value of 50 kbps, and that the current frame rate is normalized with respect to a predefined value of 10 fps (). The predefined values may be optimized, and may have different values in various different configurations. The target encode rate (target_enc_rate) may be provided as one input parameter to the equation, and the value of Intra_MB_% from the base algorithm shown in  may be provided as another (). In one aspect, the target encode rate, target_enc_rate, may comprise an adjustable parameter that may be tuned based upon, for example, the type of application that is being executed by video encoder . In one aspect, the target encode rate may be tuned based upon a dynamic rate adaptation algorithm, where video encoder  adapts its rate to network conditions.\n","Rate adaptation module  of video encoder  may set the value of PER (packet error rate) equal to the value of fraction_lost that is contained within an RTCP Receiver Report sent by video decoder , which, as described above, indicates the fraction of packets that have been lost by video decoder  since the last Receiver Report was sent (). Rate adaptation module  may then calculate an updated value of Target_Err_Pr, which is the target probability that there will still be an error in the image after a single intra-refresh sequence, as follows ():\n\nTarget_Err_Pr=Max{Target_Err_Pr, est_ppf\u00d7PER}.\n","After making this calculation, rate adaptation module  is capable of calculating an updated, or modified, value of Intra_MB_% based upon an initial value of Intra_MB_% as determined by the method, or base algorithm, shown in . This initial value of Intra_MB_% as determined by the method of  is indicated as Intra_MB_% from Base algo (such as in , where the base algorithm is the one shown in ). The updated value of Intra_MB_% may be calculated () as follows:\n\nMin{Max_Intra_MB_%,Max{\u03b2\u00d7100%\u00d7log(1\u2212PER)\u00d7est_ppf\/log(1\u2212Target_Err_pr), Intra_MB_% from Base Algorithm}}.\n","This updated value of Intra_MB_% may then be used by the base algorithm shown in , when rate adaptation module  intra-codes macro-blocks within frames of a sequence according to this updated value of Intra_MB_% ().","The method shown in  calculates an updated value of Intra_MB_% to help video encoder  limit the probability of having uncorrected errors after one intra-refresh sequence of intra-coded macro-blocks within the frame sequence. As a result, the updated, or modified, value of Intra_MB_% will typically be an increased value, such that intra-refreshing of macro-blocks occurs more quickly, and in fewer frames within a sequence. In obtaining the values and using the calculations shown in , it may, in some cases, be assumed that every slice of a frame (where one slice may contain one or more macro-blocks) contains at least one intra-coded macro-block.","Using this assumption, it may further be assumed that any packet loss during an entire intra-refreshed frame sequence (have intra-coded macro-blocks refreshed at a rate of Intra_MB_%) may cause errors in some macro-blocks because certain intra-coded macro-blocks may be lost. These assumptions may comprise a conservative assumption about how quickly to intra-refresh a frame sequence. Assuming that the probability of packet errors is distributed throughout the frame sequence, all packets throughout the sequence may have an equal probability of causing uncorrected errors. Thus, the probability of there being no error after one intra-refreshed frame sequence may be equal to (1\u2212PER), where P is the number of packets in the entire frame sequence. Therefore, the total number of packets in an intra-refresh sequence may be limited to less than\n\nlog(1\u2212Target_Err_Pr)\/log(1\u2212PER).\n","The number of packets in an intra-refreshed (IR) frame sequence may then be calculated as\n\n# frames in IR sequence\u00d7avg # packets per frame during IR sequence, where # frames in IR sequence=100%\/Intra_MB_%.\n","As a result, the estimated average number of packets per frame during an IR sequence may be calculated as\n\nest_ppf=Avg_norm_ppf\u00d7(target_enc_rate\/50 kbps)\u00d7(10 fps\/Current_Frame_Rate).\n","Combining these results provides the following formula with respect to the modified value of Intra_MB_% that is determined by the method shown in :\n\nlog(1\u2212Target_Err_Pr)\/log(1\u2212PER)>=(100%\/Intra_MB_%)\u00d7est_ppf.\n",{"@attributes":{"id":"p-0102","num":"0101"},"figref":["FIG. 7","FIG. 1","FIG. 6","FIG. 7"],"b":["10","2","20","10"]},"As shown in , rate adaptation module  is capable of calculating a value of a parameter GNACK_PER based on the number of packets indicated in a received GNACK message (). The GNACK is sent from video decoder . Video decoder  may determine the number of packets within one or more frames have errors (e.g., have been lost), and may indicate this number within the GNACK. In addition, within the GNACK, video decoder  may identify the specific packets, by sequence number, that have errors. In one aspect, these packet sequence numbers are initially determined by video encoder  when the packets are first sent to video decoder  via network .","Upon receipt of the GNACK, rate adaptation module  may compare the value of GNACK_PER with the value of fraction_lost that was included within the prior RTCP Receiver Report sent from video decoder  (). If GNACK_PER is greater than, or equal to, fraction_lost, then rate adaptation module  sets the value of PER equal to GNACK_PER (). If, however, GNACK_PER is less than fraction_lost, then rate adaptation module  sets the value of PER equal to the value of fraction_lost from the last Receiver Report ().","Thus, as can be seen from the method of , rate adaptation module  selects a value of the packet error rate, PER, as the greater of GNACK_PER and fraction_lost. By selecting the greater of these two values, rate adaptation module  uses a higher value of PER when calculating the modified intra-refresh rate, Intra-MB_%, within the method of . In this aspect, rate adaptation module  increases Intra-MB_% when a higher volume of packet errors are indicated, such as by the fraction_lost parameter or by a GNACK message.",{"@attributes":{"id":"p-0106","num":"0105"},"figref":["FIG. 8","FIG. 1","FIG. 8"],"b":["10","2","20","2","20","10","2"]},"Rate adaptation module  may maintain a mapping of RTP packet sequence numbers to points in time, or timestamps, at which point the packets were sent from video encoder  (). For example, video encoder  may send a first packet having a first sequence number at a first point in time (e.g., 100 ms), and may send a second packet having a second sequence number at a second point in time (e.g., 110 ms). Rate adaptation module  may keep a mapping of the sequence numbers-to-timestamps for each of these two packets, as well as any other packets that are sent from video encoder  to video decoder .","When video encoder  receives a GNACK from video decoder , indicating that one or more packets have an error (e.g., have been lost), video encoder  is capable of determining the sequence numbers of each of the packets identified within the GNACK. For example, if the GNACK indicates that four different packets have errors, video encoder  is capable of determining the RTP sequence numbers of each of these four packets. These sequence numbers may be associated with these four packets, and included within the GNACK. (As described previously, these RTP sequence numbers are the sequence numbers originally assigned to the packets when they were first sent by video encoder  to video decoder . In one aspect, the sequence numbers are assigned by video encoder  in ascending order for packets that are sequentially sent to video decoder .)","Upon determination of the sequence numbers of the packets identified by the received GNACK, video encoder  may the determine () the earliest, or smallest, sequence number for an identified packet (RTP_SN) that is greater than the sequence number of the first packet of the last intra-refreshed frame sequence containing intra-coded macro-blocks (RTP_SN_Last_IR_Sequence), or\n\nRTP_SN>RTP_SN_Last_IR_Sequence.\n","Video encoder  uses its mapping information to determine the timestamp for the packet identified within the GNACK having this earliest sequence number of RTP_SN. This timestamp corresponds to the point in time at which video encoder  originally sent this packet having sequence number RTP_SN to video decoder . This timestamp is therefore based upon the clock maintained by video encoder . Video encoder  compares this timestamp (TS_of_earliest_GNACK_RTP_SN) to the current time (current_time), as indicated by the clock of video encoder , and calculates () a value of the difference (Time_elapsed) as follows:\n\nTime_elapsed=Current_Time\u2212TS_of_earliest_GNACK_RTP_SN.\n","The value of the Time_elapsed parameter indicates the period of time that has elapsed since the packet having sequence number RTP_SN has been sent by video encoder . Rate adaptation module  can then modify the value of Intra_MB_% (used for intra-coding macro-blocks in subsequent intra-refreshed sequences) based upon this elapsed time period. Because RTP_SN is the earliest, or smallest, sequence number for an identified packet in the GNACK that is greater than the sequence number of the first packet of the last intra-refreshed frame sequence containing intra-coded macro-blocks, rate adaption module  attempts to modify the value of Intra_MB_% to try and correct older errors (which occurred longer ago) more quickly. Typically, rate adaption module  will increase the value of Intra_MB_% in these cases, and then use this modified value within the method shown in  (in the Intra_refresh routine).","In one aspect, rate adaptation module  may calculate () the modified value of Intra_MB_% as follows:\n\nSet Intra_MB_%=Min{Max_Intra_MB_%,100%\/[(Target_Correction_Time\u2212Time_elapsed)\u00d7Current_Frame_Rate]}.\n\nAs with certain of the formulas or calculations described previously, rate adaptation module  may bound the value of Intra_MB_% by Max_Intra_MB_% in certain cases. The value of Max_Intra_MB_% may be configured or adjusted by video encoder  or by a user, based upon the type of application executed by, or environment provided, by video encoder . In the case above, rate adaptation module  also may determine the modified value of Intra_MB_% based, at least in part, upon a difference between Target_Correction_Time and Time_elapsed. The Target_Correction_Time parameter, as described previously, indicates the maximum amount of time after detection of an error by video encoder , such as a packet loss, for which the video encoder  has to correct the error. In this case, this maximum correction time becomes a targeted maximum amount of time that a receiver sees a propagation of the error. The value of Target_Correction_Time may be configured or changed for purposed of optimization.\n","In some aspects, video encoder  may implement another enhancement for determining a modified value of Intra_MB_% that may be used within the Intra_refresh routine shown in . In these aspects, rate adaptation module  may attempt to measure an amount of motion over a past video frame sequence during which Intra_MB_% was used upon detection of one or more packet errors. As described previously in reference to , rate adaptation module  may potentially repeat an intra-refresh sequence for a frame sequence one or more times, according to the value of an adjustable parameter Intra_repeat. The value of this parameter may be adjusted based upon detected motion, which may be a function of motion vectors over the frames within a frame sequence.","Rate adaptation module  may compare the amount of detected motion to a motion threshold value, which may comprise a value that is configured or adjusted by a user or by video encoder . For example, if a higher value of Intra_MB_% is being currently used, video encoder  may use a higher threshold value, given that intra-refreshing is occurring at a higher rate. The threshold may apply to motion statistics for an overall frame, or sequence, but may also apply to motion for specific macro-blocks, as well.","If the amount of detected motion is less than this threshold, then rate adaptation module  may modify the value of Intra_MB_% to be set equal to the no-loss value (as used in ), according to:\n\nIntra_MB_%=Intra_MB_%_No_Loss.\n","However, if the amount of motion exceeds this threshold, rate adaptation module  may repeat the intra-refresh procedure of an entire video frame sequence, and\/or may increase the value of Intra_repeat, such that an additional refresh can be performed. The repeating of the intra-refresh sequence may help correct any errors that may be caused by excessive motion within one or more frames.",{"@attributes":{"id":"p-0117","num":"0116"},"figref":["FIG. 9","FIG. 1"],"b":["20","2","20","18","2","24","26","18"]},"However, there may be certain disadvantages to sending too many PLI messages, for example, to video encoder  over time. For example, video decoder  may send a first PLI to video encoder , which may trigger rate adaptation module  of video encoder  to begin an intra-refresh sequence, or to increase the rate of intra-encoding macro-blocks within a frame sequence by increasing the value of Intra_MB_%. If the video decoder , shortly thereafter, sends another PLI to video encoder  before receiving any of the newly refreshed macro-blocks, video encoder  may again, but potentially unnecessarily, increase the value of Intra_MB_%, assuming that there are new, or additional, errors perceived by video decoder . In these types of scenarios, PLI messages from video decoder  may cross paths with intra-refreshed macro-blocks that are sent by video encoder  to correct previously indicated errors. Thus, in some cases, it may be more beneficial for video decoder  to perform certain checks before sending repeated PLI messages to video encoder  over a short period of time.","According to the method of , video decoder  may wait for decoder output from intra-decoder  and\/or predictive decoder  (). Video decoder  may then determine whether any decoding errors were detected by intra-decoder  and\/or predictive decoder  (). In some cases, video decoder  may detect certain errors that are not detected by the RTP layer, such as through analysis of the bit stream of the coded video data. If a decoding error is detected, such as an error in one of the received, coded packets, or even the loss of one or more packets, video decoder  may determine the current time (current_time) according to its clock.","Video decoder  may also determine, or lookup, a value for RTT, which is the value of the round-trip travel time for data communication between video decoder  and video encoder . In some cases, the value of RTT may be initially set, or configured, within video decoder  as a default value. Video decoder , however, is capable of dynamically adjusting, or updating, the value of RTT over time based upon real-time calculations for data communication between video decoder  and video encoder . For example, video decoder  may be able to use information contained within one or more RTCP Receiver and\/or Sender Reports in order to measure, or estimate, the value of RTT. In one aspect, video decoder  may measure or estimate the value of RTT based upon at least one pair of messages that are exchanged between the video decoder  and video encoder .","In the example of , video decoder  may check to determine () whether the following condition is satisfied:\n\ncurrent_time>RTT+Time_Last_Sent_PLI,\n\nwhere is Time_Last_Sent_PLI equal to the time (according to the clock of video decoder ) that video decoder  last sent a PLI to video encoder . If the current time is, in fact, greater than the RTT plus Time_Last_Sent_PLI, then video decoder  may send another PLI message to video encoder , and also set the value of Time_Last_Sent_PLI to the current time, according to the clock of video decoder  ().\n","If, however, the current time is less than, or equal to, RTT plus Time_Last_Sent_PLI, then video decoder  will suppress sending another PLI message to video encoder . In these scenarios, video decoder  determines that it has previously sent a PLI within one round-trip travel time, and does not need to send another PLI. Video decoder  assumes, in these scenarios, that video encoder  will begin a new intra-refresh sequence, or may even adjust the value of Intra_MB_%, in response to receiving a prior PLI sent by video decoder , and that video decoder  will, at the very earliest, begin receiving packets (and macro-blocks) within this refreshed sequence within one round-trip travel time after having sent the prior PLI. Thus, if video decoder  identifies any errors within this one round-trip travel time window, it assumes that such errors may be corrected by the intra-refresh sequence that is initiated by video encoder  upon receipt of the prior PLI, and that it does not need to send another PLI within this time window. Video decoder  may continue to perform the method shown in  for all coded packets received from video encoder .",{"@attributes":{"id":"p-0123","num":"0122"},"figref":["FIG. 10","FIG. 1","FIG. 10","FIG. 9"],"b":["20","2","20","2","20"]},"Thus, as is shown in , video decoder  may wait for decoding output (), and determine whether processing has reached a frame boundary (or whether a new frame has been detected) (). If so, video decoder  may reset the value of a variable called Number_of_packets_lost to zero. As described below, video decoder  uses the value of this variable in determining whether to send a GNACK or a PLI upon detection of packet errors. When a new frame has been detected, video decoder  may reset the value of this variable to zero.","Video decoder  may identify that a particular packet sent by video encoder  has been lost, and may then increment the Number_of_packets_lost variable (). Video decoder  may then compare the value of Number_of_packets_lost to a packet loss threshold value. This threshold value may comprise an adjustable parameter that may be configured, or tuned, by a user or by video decoder . In some instances, the value of this threshold value may depend on the type of device (e.g., type of device for video decoder  and\/or video encoder ), and\/or the type of application that is executed (e.g., video telephony application, game application).","In one aspect, video decoder  may determine () whether the following condition is satisfied:\n\nNumber_of_packets_lost>=%_Packet_Loss_Threshold)\u00d7avg_ppf,\n\nwhere avg_ppf is equal to the average number of packets per frame received by video decoder . Video decoder  is capable of estimating the value of avg_ppf by continuously determining the number of packets in each frame received by video encoder . If there have been a high number of packets lost since last sending a PLI, such that the number of packets lost exceeds the threshold value (which may, as shown above, also be based on avg_ppf), video decoder  may send another PLI message to video encoder  to initiate a full intra-refresh sequence (). Video decoder  may also reset the value of Number_of_packets_lost to zero. In one aspect, prior to sending the PLI, video decoder  may also perform the method shown in  to determine whether a prior PLI has already been sent within one round-trip time window, and may refrain from sending another PLI when such is the case, as was previously described.\n","If, however, video decoder  determines that the number of packets lost since transmission of the last PLI does not exceed the threshold, video decoder  may send a GNACK, rather than a PLI, to video encoder  (). The GNACK may identify specific packets that have errors (or that were lost). Video encoder  may then, in some cases, use the sequence numbers associated with the packets identified in the GNACK to perform an enhanced method of updating the intra-refresh rate, such as the method shown in .","In view of the description above and the methods shown in , a video decoder, such as video decoder , may, in one aspect, detect at least one error associated with coded video data sent from a video encoder, such as video encoder . Video decoder  may determine a round-trip travel time for data communication between video decoder  and video encoder , determine a last-sent time at which video decoder  last sent video encoder  a feedback message indicating a previous error that was detected by video decoder , and compare a current time to a sum of the last-sent time and the round-trip travel time. Based upon the comparing, video decoder  may determine whether to send video encoder  a second feedback message indicating the at least one error detected by video decoder .","In some cases, video decoder  may send the second feedback message if the current time exceeds the sum of the last-sent time and the round-trip travel time, and may set the last-sent time equal to the current time. Determining the round-trip travel time may include measuring or estimating the round-trip travel time based upon at least one message that is exchanged between video decoder  and video encoder . In some cases, video decoder  may receive the coded video data from video encoder , and may detect the at least one error at least by detecting at least one decoding error upon decoding of the coded video data by the video decoder.","In one aspect, video decoder  may detect the at least one error at least by detecting a packet loss. Upon detecting the packet loss, video decoder  may increment a count of lost packets, compare the count of lost packets to a threshold, and send the second feedback message to video encoder  if the count of lost packets exceeds the threshold and if the current time exceeds the sum of the last-sent time and the round-trip travel time. If the count of lost packets does not exceed the threshold, video decoder  may send another type of feedback message indicating the packet loss to video encoder .","In some cases, upon sending the second feedback message to video encoder , video decoder  may set the count of lost packets equal to zero. The threshold may be based, at least in part, upon a packet loss threshold and an average number of packets per frame.","The techniques described in this disclosure may be implemented within one or more of a general purpose microprocessor, digital signal processor (DSP), application specific integrated circuit (ASIC), field programmable gate array (FPGA), or other equivalent logic devices. Accordingly, the terms \u201cprocessor\u201d or \u201ccontroller,\u201d as used herein, may refer to any one or more of the foregoing structures or any other structure suitable for implementation of the techniques described herein.","The various components illustrated herein may be realized by any suitable combination of hardware, software, firmware, or any combination thereof. In the figures, various components are depicted as separate units or modules. However, all or several of the various components described with reference to these figures may be integrated into combined units or modules within common hardware and\/or software. Accordingly, the representation of features as components, units or modules is intended to highlight particular functional features for ease of illustration, and does not necessarily require realization of such features by separate hardware or software components. In some cases, various units may be implemented as programmable processes performed by one or more processors.","Any features described herein as modules, devices, or components may be implemented together in an integrated logic device or separately as discrete but interoperable logic devices. In various aspects, such components may be formed at least in part as one or more integrated circuit devices, which may be referred to collectively as an integrated circuit device, such as an integrated circuit chip or chipset. Such circuitry may be provided in a single integrated circuit chip device or in multiple, interoperable integrated circuit chip devices, and may be used in any of a variety of image, display, audio, or other multi-media applications and devices. In some aspects, for example, such components may form part of a mobile device, such as a wireless communication device handset.","If implemented in software, the techniques may be realized at least in part by a computer-readable data storage medium comprising code with instructions that, when executed by one or more processors, performs one or more of the methods described above. The computer-readable medium may form part of a computer program product, which may include packaging materials. The computer-readable medium may comprise random access memory (RAM) such as synchronous dynamic random access memory (SDRAM), read-only memory (ROM), non-volatile random access memory (NVRAM), electrically erasable programmable read-only memory (EEPROM), embedded dynamic random access memory (eDRAM), static random access memory (SRAM), flash memory, magnetic or optical data storage media.","The techniques additionally, or alternatively, may be realized at least in part by a computer-readable communication medium that carries or communicates code in the form of instructions or data structures and that can be accessed, read, and\/or executed by one or more processors. Any connection may be properly termed a computer-readable medium. For example, if the software is transmitted from a website, server, or other remote source using a coaxial cable, fiber optic cable, twisted pair, digital subscriber line (DSL), or wireless technologies such as infrared, radio, and microwave, then the coaxial cable, fiber optic cable, twisted pair, DSL, or wireless technologies such as infrared, radio, and microwave are included in the definition of medium. Combinations of the above should also be included within the scope of computer-readable media. Any software that is utilized may be executed by one or more processors, such as one or more DSP's, general purpose microprocessors, ASIC's, FPGA's, or other equivalent integrated or discrete logic circuitry.","Various aspects have been described in this disclosure. These and other aspects are within the scope of the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIGS. 3A-3F"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
