---
title: Image-forming system with a graphical user interface having an interconnection architecture
abstract: An image-forming system with a graphic user interface having an interconnection architecture where software applications share one or more plug-in packages. One of the software applications may be used as a plug-in.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07652779&OS=07652779&RS=07652779
owner: Eastman Kodak Company
number: 07652779
owner_city: Rochester
owner_country: US
publication_date: 20020905
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This application claims the benefit of the filing date Provisional Application Serial No. 60\/317,697 entitled \u201cI-FSGUIHAVING AN IA\u201d filed on Sep. 5, 2001.","This invention generally relates to image-forming systems having a graphic user interface. More particularly, this invention relates to image-forming machines and methods using a graphic user interface with an interconnection architecture where a software application implements a functionality and provides a plug-in interface with another software application.","An image-forming system transfers images from original documents onto paper or other medium to create a finished product such as a booklet, a folded brochure, or a tabbed notebook. The original documents may be in hard copy (paper or other medium) or in electronic form (floppy disk, compact disc, and the like) or may be transmitted over a network such as the Internet. A \u201cprint job\u201d is the combination of original documents with instructions for producing the finished product.","Many image-forming systems have a graphic user interface (GUI) for visually representing and controlling the transfer of images for a print job. The GUI permits the creation and manipulation of relationships and associations among various components of the image-forming machine and the print job. These relationships and associations may be displayed using a hierarchical approach like a tree structure or file folder structure or using some alternate form of visual indication.","The GUI typically uses multiple software applications for implementing the various functionalities in the image-forming machine. These software applications communicate and otherwise interact with each other to provide the relationships and associations among various components of the image-forming machine and the print job. The more a software product is used, the more potential new features are exposed. Traditional software packages generally are difficult to extend. Usually, only the software company that developed the product may make changes to the software application. A new functionality desired by a customer may not fit in with the software company's goals and strategies and thus may never be implemented by the software company.","Several software products offer \u201cplug-in\u201d interfaces to permit the addition of new functionality, which may be added by a party other than the creator of the software product. A plug-in interface permits new functionality to be implemented in a separate plug-in package. The \u201cplug-in\u201d package includes additional software that interacts with the original software application through the plug-in interface. A software product supporting a plug-in interface may have multiple plug-in software packages depending upon the number of available functionalities.","Many image-forming systems have one software application that provides an image-forming management functionality and another software application that provides a document or imaging viewing functionality. Ideally, these two applications will be interconnected in some way. One methodology commonly used for such inter-process communication is the Common Object Request Broker Architecture (CORBA). The use of an external inter-process communication package or interface (such as CORBA) increases the cost, the complexity of installation, and the maintenance of an image-forming system. When inter-connected software applications operate in separate process spaces, synchronization issues may arise (similar to those found in multi-threaded applications). Additional measures typically are implemented to avoid competitive conditions and event collisions between the software applications. These additional measures usually complicate the image-forming system.","Both of these software applications could however, include plug-in interfaces for addition of new functionality. The image-forming system could then be composed such that it would eliminate the aforementioned problems associated with extensibility, communications and synchronization.","The invention provides an image-forming system having a graphic user interface with interconnection architecture where software applications implement functionalities and provide plug-in interfaces. The software applications share one or more plug-in packages connected to the plug-in interface. One of the software applications may itself be a plug-in to other applications.","In one aspect, the image-forming system has a graphic user interface with an interconnection architecture having an image-forming management functionality and a document viewing functionality. The interconnection architecture has a first software application to implement the image-forming management functionality and a second software application to implement the document viewing functionality. The first software application uses a plug-in interface with the second software application to share one or more plug-in packages with the second software application.","In another aspect, the image-forming system has a graphic user interface with an interconnection architecture having an image viewing functionality and an image-forming management functionality. The interconnection architecture has a first software application and a second software application. The first software application implements the image-viewing functionality. The second software application implements the image-forming management functionality. The first software application provides a plug-in interface used by the second software application. The first and second software applications share one or more plug-in packages in essentially the same process space. The plug-in packages include the second software application.","In a further aspect, the image-forming system has a graphical user interface with an interconnection architecture. The image-forming system also has a first software application, a second software application, and one or more plug-in packages. The first software application has a first plug-in interface. The second software application has a second plug-in interface. The one or more plug-in packages are connected to the first and second plug-in interfaces. The first and second software applications share the one or more plug-in packages in essentially the same process space.","Other systems, methods, features, and advantages of the invention will be or will become apparent to one skilled in the art upon examination of the following figures and detailed description. All such additional systems, methods, features, and advantages are intended to be included within this description, within the scope of the invention, and protected by the accompanying claims.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1","b":["100","110","100"]},"The image-forming machine  may be an electrophotographic device such as one of the Digimaster\u00ae digital printers manufactured by Heidelberg Digital L.L.C. located in Rochester, N.Y. The image-forming machine  also may be another electrophotographic machine, a photocopy machine, a printing device, or the like. In addition to the GUI , the image-forming machine  has a feeder , a marking engine , a finisher , and a printer use interface . The image-forming machine  may have other equipment. The feeder , the marking engine , the finisher , and the printer user interface  may be separate or integrated components. The printer user interface  may be a display unit with push buttons (not shown) or other activation means for inputting control parameters to the image-forming machine .","The feeder  provides the printing or copying sheets to the printing engine . The sheets may be one or a combination of paper, transparencies, and other medium. The sheets may be configured with pre-punched holes, tabs, and the like. In one aspect, the marking engine  includes a photoconductor (not shown), one or more chargers (not shown), an exposure machine (not shown), a toning station (not shown), and a fuser station (not shown). In operation, the photoconductor is selectively charged and optically exposed to form an electrostatic latent image on the surface. Toner is deposited onto the photoconductor surface. The toner is charged, thus adhering to the photoconductor surface in areas corresponding to the electrostatic latent image. The toner image is transferred onto the sheet. In the fuser station, the sheet is heated causing the toner to fix or adhere to the paper or other medium. The sheet exits the marking engine  and enters the finisher , which may discharge the sheet as is or may perform one or more finishing operations such as stapling, folding, and inserting an inserted sheet.","In one aspect, the GUI  is a separate component such as a dedicated desktop or other personal computer operatively connected to the image-forming machine . The GUI  also may be integrated with the printer user interface  or other components of the image-forming machine . The GUI  is operatively connected to a logic control unit (not shown) in the image-forming machine . Operatively connected includes transmission or communication means such as electrical, radio, network, and the like. The GUI and the logic control unit also may be integrated into the same component. The logic control unit is connected to control the feeder , the marking engine , the finisher , and the printer user interface . The GUI  comprises a display screen (not shown) and an interfacing means such as a touch screen (not shown), a keyboard (not shown), a mouse (not shown), a track ball (not shown), or a combination thereof. The GUI  also may include tear-off menus, floating buttons, dialog boxes, alternate keyboard command and mouse shortcuts, and other alternative user interfaces.","The GUI  provides visual interaction with the image-forming machine  using one or more applications that implement one or more functionalities such as a document or image viewing functionality and an image-forming management functionality. In one aspect, document and image-forming management functionalities are implemented via a plug-in architecture. A plug-in architecture allows enhancements and updates to be incorporated in a simpler and more efficient manner and without requiring recompilation of all of the program codes that implement the functionalities. Other architectures may be used.","The document or image viewing functionality provides a viewing window for viewing electronic images of the original documents in a print job by providing the ability to view each page. In one aspect, an Adobe Acrobats\u00ae, Version 5.0 software application, manufactured by Adobe Systems, Inc. located in San Jose, Calif., implements the document or image viewing functionality on the image-forming machine . The documents are formatted in Portable Document Format (PDF) which is a universal electronic document file format that preserves all the fonts, formatting, graphics, and color of any source document, regardless of the application and platform used to create it. PDF files are compact and can be shared, viewed, navigated, and printed exactly as intended. It also has a plug-in interface architecture that lets one incorporate the image-forming management functionality. Other document or image viewing software applications may be used. The image-forming management functionality integrates applications that implement, control, or manage the image-forming machine . The image-forming management functionality is a graphical user interface that visually represents objects (documents, tickets, other entities, operations, and the like) with elements such as icons, tree structures, pull-down menus, pop-up menus, tool buttons, slide controls, and the like which are well known in the art. A user may interact with the image-forming management functionality using various interaction means such as the touch screen, the mouse, the track ball, and the keyboard. Such interaction with the visual representations results in manipulation of the underlying objects. While the image-forming management functionality may have an object-oriented appearance, the implementation of the functionality may be by an object oriented programming language or a non-object oriented programming language. In one aspect, the image-forming management functionality is implemented by an ImageSmart\u00ae Document Mastering SmartBoard\u2122 software application used with Digimaster\u00ae digital printers manufactured by Heidelberg Digital L.L.C. located in Rochester, N.Y. Other image-forming management software applications may be used.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2","b":["250","252","254","252","256","262","264","266","268","262","264","266","268","252","262","264","266","268","254","258","270","272","270","272","252","270","272","262","268","270","272","260"]},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 3","b":["350","352","354","352","356","354","358","370","372","374","356","358","364","366","358","364","366","370","372","370","372","374","356","358"]},"The Adobe Acrobat\u00ae or other software application  provides one functionality and essentially acts as a stand alone application. The ImageSmart\u00ae or another software application  provides an additional functionality and essentially becomes a \u201cplug-in\u201d for the Adobe Acrobat\u00ae. Accordingly, the document or image viewing functionality, the image-forming management functionality, and subordinate plug-in packages run essentially in the same process space, thus reducing or eliminating the need for complex synchronization schemes. The ImageSmart\u00ae or other application also supports its own plug-in interface. Subordinate plug-in packages may be shared between the Acrobat and ImageSmart application using both plug-in interfaces, such as the image-forming management API  and the Acrobat application programming interface . Alternatively, some plug-ins may only support the image-forming management API .",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 4","b":["450","452","454","452","456","454","458","456","458","470","472","474","464","466","464","466","470","472","464","466","470","472"]},"Various embodiments of the invention have been described and illustrated. However, the description and illustrations are by way of example only. Other embodiments and implementations are possible within the scope of this invention and will be apparent to those of ordinary skill in the art. Therefore, the invention is not limited to the specific details, representative embodiments, and illustrated examples in this description. Accordingly, the invention is not to be restricted except in light as necessitated by the accompanying claims and their equivalents."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":["The invention may be better understood with reference to the following figures and detailed description. The components in the figures are not necessarily to scale, emphasis being placed upon illustrating the principles of the invention. Moreover, like reference numerals in the figures designate corresponding parts throughout the different views.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
