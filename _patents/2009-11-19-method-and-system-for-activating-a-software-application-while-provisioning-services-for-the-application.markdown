---
title: Method and system for activating a software application while provisioning services for the application
abstract: Methods and systems for activating a software application while provisioning a web service to operate with the software application are described. Consistent with some embodiments, a product activation procedure is performed during a workflow to provision a web service to operate with a software application. By activating the software application during the web service provisioning workflow, an end-user can establish ownership of a proper license for the software application without having to input any license information, such as a serial number or product key, associated with the end-user's license.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09299075&OS=09299075&RS=09299075
owner: ADOBE SYSTEMS INCORPORATED
number: 09299075
owner_city: San Jose
owner_country: US
publication_date: 20091119
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["The present disclosure generally relates to End User Licensing Agreements (EULA's) and software activation techniques. More specifically, the present disclosure relates to computer-based methods and systems for activating a software application while provisioning a service (e.g., a web service) for use with the software application.","To protect against unauthorized copying and use of software applications, many software vendors utilize some form of product activation procedure. In general, product activation (sometimes referred to as software activation) involves a procedure for verifying the authenticity of a software product, and ensuring that the software product is used within the scope of its end-user license agreement (EULA). In a typical product activation procedure, when an installed software application is executed for the first time, the software application performs a license verification procedure to determine whether it has been properly licensed and activated. If not, a user is typically prompted to enter some product activation information that is associated with a license, such as a serial number or product key. The product activation information, which is often referred to as license information (e.g., serial number or product key), is communicated along with a machine signature that identifies the machine on which the software has been installed to a backend license server. The backend license server verifies that the received license information corresponds with license information stored at the license server, and then generates a record in a license database to indicate that the software application has been installed and activated on the particular machine identified by the machine signature. Requiring an end-user to input license information in order to activate a software application is an inconvenience to the end-user. Entering a long alphanumeric string is both time consuming and prone to user error, often resulting in frustration for the end-user.","Methods and systems for activating a software application while provisioning a service, such as a web service, for use with the software application are described. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the various aspects of different embodiments of the present invention. It will be evident, however, to one skilled in the art, that the present invention may be practiced without these specific details.","As used herein, the term \u201cweb service\u201d (sometimes referred to as \u201cwebservice\u201d) is a service, software system, application, module or component designed to support interoperable machine-to-machine interaction over a network. A web service has an interface described in a machine-processable format (e.g., Web Services Description Language WSDL). Other applications and\/or systems interact with a web service in a manner prescribed by its description using messages (e.g., Simple Object Access Protocol (SOAP) messages), typically conveyed using the Hypertext Transfer Protocol (HTTP) with an eXtensible Markup Language (XML) serialization in conjunction with other web-related standards. Web services are frequently just Internet Application Programming Interfaces (API) that can be accessed over a network, such as the Internet, and executed on a remote system hosting the requested services.","According to some embodiments of the invention, a product activation procedure is performed during a workflow to provision a service, such as a web service, to operate with a software application. By activating the software application during the web service provisioning workflow, an end-user can establish ownership of a proper license for the software application without having to input any license information, such as a serial number or product key, associated with the end-user's license. Moreover, by combining the product activation and web service provisioning operations into a single workflow, the amount of time required to properly configure and set-up the software application is significantly reduced.","In some embodiments, the product activation procedure enables a user to activate the software application without requiring the end-user to enter any license information, such as a long serial number or product key, at the computer on which the software application is installed. This is made possible in a number of different scenarios. For instance, after executing a software application for the first time and during the web service provisioning process, an end-user may be prompted to purchase a license if the end-user does not already own a license to use the software application. The purchase may be facilitated by the end-user submitting various information, including payment information and end-user authentication information (e.g., username and password), via one or more web-based forms. After purchasing the license, at the backend license server the license information (e.g., serial number or product key) can be automatically linked or associated with the end-user's authentication information and the machine signature on which the software application is installed. In contrast to many conventional product activation processes, which send the license information to the end-user via email, the end-user will not be prompted to enter the license information because it is associated with the end-user and stored at the backend license server when purchased during the web service provisioning operation.","In another scenario, if the end-user has previously purchased a license for the software application, for example, at the time the software application was initially downloaded from the software developer's server, the license information associated with the license can be identified during the web service provisioning operation without prompting the end-user to enter the license information. For example, when the end-user enters end-user authentication information (e.g., a username and password) to authenticate with the remote server during the web service provisioning process, the username and password can be forwarded to a backend license server and used by the license server to establish that the end-user has previously purchased a license for the desktop application. After verifying the license information at the license server, the license status of the software application is communicated to the software application where it can be stored locally, and used to locally verify the license status of the software application during subsequent invocations of the software application.","In yet another scenario, a user may be re-installing a previously installed software application, for example, after having upgraded or re-installed an operating system. Because the software application had previously been installed on the computer, the license server already has recorded the license information and associated the license information with the end-user's authentication information and the machine signature for the particular computer on which the software application is being re-installed. Accordingly, during the web service provisioning operation, when the user provides user authentication information (e.g., username and password), the backend license server can verify that the license had previously been properly validated, and that the software application had previously been activated. Accordingly, during the web service provisioning process, the license status of the software application can be updated at the computer on which the software application is installed, without requiring the end-user to re-enter the license information at the computer system on which the software application is installed. Other aspects of the inventive subject matter will become readily apparent from the description of the figures that follow.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 1","FIG. 1"],"b":["10","12","12","14","16","18","12","20","22","24","12","12","20","22","14","18","20"]},"In some embodiments of the invention, when the application  has not yet been activated and is executed for the first time, the application  will prompt the end-user to provision the web service  on the remote server . Provisioning the web service  involves, at a minimum, prompting the end-user to provide existing authentication information (e.g., username and password), or to generate new end-user authentication information. Depending upon the specific nature of the desktop software application  and the web service , a variety of other configuration settings may be requested from the end-user, or automatically gathered by analyzing various aspects of the computer system  and network to which the computer system  is connected. In some embodiments, the web service  may provide a network-based storage and collaboration service, allowing files to be commonly accessed by a group of end-users using certain software applications. In other embodiments, the web service  may provide some other specific data processing function.","In any case, once the end-user has provided his or her authentication information, a web service provisioning call  is communicated by the service provisioning module  to the web service  at the remote server . In some embodiments, the web service provisioning call  includes, among other items of information, the end-user-entered authentication information, a machine signature identifying the machine on which the desktop software application has been installed, and product information such as a product identifier to identify the desktop software application for which the web service  is being provisioned. When the web service  receives the web service provisioning call , the web service  processes the web service provisioning call  by first ensuring that the desktop software application  is, or can be, licensed and activated. Accordingly, some or all of the information included in the web service provisioning call  received at the web service  is communicated to a license manager module  on a backend license server . The license server  uses the received information to determine whether the end-user has previously purchased a license for the desktop application . If an existing license for the software application  identified by the product identifier is already associated with the machine signature identifying the computer system  on which the software application  is installed, the license information for the software application  is simply communicated to the computer system  on which the software application is installed. This may be the case, for example, when the software application  has been reinstalled after performing an operating system upgrade, or some other software or system upgrade. Alternatively, the backend license server  may have a record indicating one or more licenses for the software application  are available to the end-user, but not yet associated with the particular machine signature. This may be the case, for example, when multiple licenses are purchased for several individual computers. In this scenario, license information is generated and linked to the machine signature and end-user authentication information before being stored in the license database , and communicated back to the software application  at the computer system. In some embodiments, the license information (e.g., serial number or product key) for the desktop software application  is communicated back to the web service , which communicates or forwards the information to the desktop software application  where it is stored in a license database (not shown).","If no existing license information for the desktop application  can be found in the license database  of the license server , the end-user may be prompted to purchase a license for the desktop application . Accordingly, the end-user will be prompted to enter payment information for the purchase of the license for the software application . After processing the transaction, the license information associated with the license will automatically be generated and stored at the license server , and the license information will be communicated back to the desktop software application  where it can be stored in a license database (not shown).","Once the software application  has received valid license information for the software application, a license validation process is performed to activate the software application, or certain licensed features of the software application. During the activation process, the license information for the software application is communicated to the license server and validated. The license server updates the license information associated with the machine signature and end-user authentication information to reflect the activated status. Upon successful validation of the license information, a response message is communicated back to the software application  to indicate that the software application  has successfully been activated. Accordingly, the software application  updates its license status in a license database, and unlocks any license-dependent features. Moreover, any additional processing operations required to provision the web service are then completed. In some embodiments, the request to activate the software application may be communicated in a provisioning call  via the service provisioning module. Alternatively, in some embodiments, the activation request may be communicated automatically and transparent to the end-user in a separate license call via the license module .",{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 2","FIG. 2"],"b":["30","32","34"]},"At method operation , the end-user-supplied authentication information is communicated in a web service provisioning call to a web service executing at a remote server. In addition to the authentication information, the web service provisioning call may also include a machine signature that uniquely identifies the machine or computer system on which the software application is installed, and a product identifier that identifies the software application for which the web service is being provisioned for use.","The web service provisioning call is received at the web service and processed. Certain information included in the web service provisioning call is forwarded to the backend license server. Accordingly, at method operation , the backend license server uses the received end-user authentication information, machine signature and product identifier to determine whether an existing license has been granted to the end-user for the software application executing on the machine identified by the machine signature. For example, the authentication information, machine signature and product identifier may be used in a database lookup operation to identify an existing record indicating an existing license for the software application is already linked to the machine signature for the particular end-user. If an existing license for the software application is already linked to the machine signature, then at method operation , the existing license information is communicated to the software application. In some instances, the license information may be encrypted before being sent to the computer system on which the software application is installed and executing.","If at method operation  no existing license information can be found for the particular machine signature, then at method operation  the license server determines whether an available license for the software application exists. For example, the license server may perform a database lookup operation against the license database to determine whether a record exists for the end-user (based on the provided authentication information, or other personal information provided by the end-user) and indicates one or more previously purchased licenses are available for the software application. If so, the machine signature is linked to the license information and stored in the license database, and then the license information is communicated to the software application on the computer. However, if no licenses for the software application are available, then at method operation  the user may be presented with an option to obtain (e.g., purchase) a license to use the software application. Accordingly, at method operation , the end-user may provide payment information via a user interface facilitated by the software application, which is then communicated to the backend license server. At method operation , the backend license server receives the payment information, processes the payment, and generates the license information for the machine signature of the machine on which the software application is installed. At method operation , the license information is communicated to the software application executing at the computer system, where, at method operation  the license information is processed (e.g., decrypted) and stored in a license status database.","Next, at method operation , the software application determines whether or not it has been activated. For example, the software application may analyze a license status database to determine whether a record exists that indicates the software application has had its license information validated by a backend license server, and is therefore activated. If not, the software application communicates an activation request to the backend license server at method operation . The activation request includes at a minimum, the license information. In some embodiments, because the backend license server already has associated the license information with the end-user and machine signature, no other information is required in the activation request. Alternatively, in some embodiments, the end-user authentication information and machine signature for the computer may be communicated with the activation request. In some embodiments, the activation request is communicated directly to the license server via a license module, while in other embodiments, the activation request is encapsulated within a web service provisioning call and communicated by a service provisioning module to a web service. When received at the web service, the activation request is then forwarded to the license server.","At method operation , the backend license server receives and processes the activation request, for example, by verifying the received license information against license information stored in a license database. At method operation , the backend license server communicates the activation outcome to the software application. At method operation , the software application determines whether the activation request was successfully processed, and if so, stores the activation information at method operation  in a license status database. For example, the software application may update the license status of the software application in the license status database to reflect the successful activation of the software application. Finally, at method operation  the licensed features of the software application, which are dependent upon the software application being activated, are unlocked and made available for use by the end-user.","It will be appreciated by those skilled in the art that the various method operations may be modified in some manner without departing from the overall spirit and scope of the inventive subject matter. In particular, one or more method operations may be performed in an order different from what is illustrated in , or in some cases omitted, without departing from the scope and spirit of the inventive subject matter. Furthermore, the various operations of example methods described herein may be performed, at least partially, by one or more processors that are temporarily configured (e.g., by software) or permanently configured to perform the relevant operations. Whether temporarily or permanently configured, such processors may constitute processor-implemented modules that operate to perform one or more operations or functions. Accordingly, the modules referred to herein may, in some example embodiments, comprise processor-implemented modules.","Similarly, the methods described herein may be at least partially processor-implemented. For example, at least some of the operations of a method may be performed by one or more processors or processor-implemented modules. The performance of certain of the operations may be distributed among the one or more processors, not only residing within a single machine, but deployed across a number of machines. In some example embodiments, the processor or processors may be located in a single location (e.g., within a home environment, an office environment or at a server farm), while in other embodiments the processors may be distributed across a number of locations.","The one or more processors may also operate to support performance of the relevant operations in a \u201ccloud computing\u201d environment or as a service, for example, such as in the context of \u201csoftware as a service\u201d (SaaS). For example, at least some of the operations may be performed by a group of computers (as examples of machines including processors), these operations being accessible via a network (e.g., the Internet) and via one or more appropriate interfaces (e.g., Application Program Interfaces (APIs).)",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3"},"The example computer system  includes a processor  (e.g., a central processing unit (CPU), a graphics processing unit (GPU) or both), a main memory  and a static memory , which communicate with each other via a bus . The computer system  may further include a display unit , an alphanumeric input device  (e.g., a keyboard), and a user interface (UI) navigation device  (e.g., a mouse). In one embodiment, the display, input device and cursor control device are a touch screen display. The computer system  may additionally include a storage device (e.g., drive unit ), a signal generation device  (e.g., a speaker), a network interface device , and one or more sensors , such as a global positioning system sensor, compass, accelerometer, or other sensor.","The drive unit  includes a machine-readable medium  on which is stored one or more sets of instructions and data structures (e.g., software ) embodying or utilized by any one or more of the methodologies or functions described herein. The software  may also reside, completely or at least partially, within the main memory  and\/or within the processor  during execution thereof by the computer system , the main memory  and the processor  also constituting machine-readable media.","While the machine-readable medium  is illustrated in an example embodiment to be a single medium, the term \u201cmachine-readable medium\u201d may include a single medium or multiple media (e.g., a centralized or distributed database, and\/or associated caches and servers) that store the one or more instructions. The term \u201cmachine-readable medium\u201d shall also be taken to include any tangible medium that is capable of storing, encoding or carrying instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present invention, or that is capable of storing, encoding or carrying data structures utilized by or associated with such instructions. The term \u201cmachine-readable medium\u201d shall accordingly be taken to include, but not be limited to, solid-state memories, and optical and magnetic media. Specific examples of machine-readable media include non-volatile memory, including by way of example semiconductor memory devices, e.g., EPROM, EEPROM, and flash memory devices; magnetic disks such as internal hard disks and removable disks; magneto-optical disks; and CD-ROM and DVD-ROM disks.","The software  may further be transmitted or received over a communications network  using a transmission medium via the network interface device  utilizing any one of a number of well-known transfer protocols (e.g., HTTP). Examples of communication networks include a local area network (\u201cLAN\u201d), a wide area network (\u201cWAN\u201d), the Internet, mobile telephone networks, Plain Old Telephone (POTS) networks, and wireless data networks (e.g., Wi-Fi\u00ae and WiMax\u00ae networks). The term \u201ctransmission medium\u201d shall be taken to include any intangible medium that is capable of storing, encoding or carrying instructions for execution by the machine, and includes digital or analog communications signals or other intangible medium to facilitate communication of such software.","Although an embodiment has been described with reference to specific example embodiments, it will be evident that various modifications and changes may be made to these embodiments without departing from the broader spirit and scope of the invention. Accordingly, the specification and drawings are to be regarded in an illustrative rather than a restrictive sense. The accompanying drawings that form a part hereof, show by way of illustration, and not of limitation, specific embodiments in which the subject matter may be practiced. The embodiments illustrated are described in sufficient detail to enable those skilled in the art to practice the teachings disclosed herein. Other embodiments may be utilized and derived therefrom, such that structural and logical substitutions and changes may be made without departing from the scope of this disclosure. This Detailed Description, therefore, is not to be taken in a limiting sense, and the scope of various embodiments is defined only by the included claims, along with the full range of equivalents to which such claims are entitled."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":["Some embodiments are illustrated by way of example and not limitation in the figures of the accompanying drawings, in which:",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
