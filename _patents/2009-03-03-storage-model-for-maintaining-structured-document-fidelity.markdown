---
title: Storage model for maintaining structured document fidelity
abstract: Architecture that introduces storage of an extra (skeleton) property of a document as well as default document properties on a server. In a specific messaging implementation, a MIME skeleton property is stamped on an arriving MIME messages. An incoming MIME message is shredded and all content that is currently saved to MAPI properties continues to be saved. The remaining message content that is not saved to the MAPI properties is stored in the skeleton property. The skeleton property includes all body part headers and any body part content that was not saved as a property on the item by the server. On retrieval of this message by a MIME client, the MIME message is regenerated in full fidelity by using the default set of properties in combination with the skeleton (or extra) property and the stored body content.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08412784&OS=08412784&RS=08412784
owner: Microsoft Corporation
number: 08412784
owner_city: Redmond
owner_country: US
publication_date: 20090303
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Content conversion logic for incoming MIME (multi-purpose Internet mail extensions) messages involves shredding the message and saving select body parts in various MAPI (messaging application programming interface) properties. The \u201cbest\u201d body of the message is promoted to the appropriate property and attachments are saved in the attachment table. Body parts that are not supported by MAPI clients are discarded, along with alternative representations of the \u201cbest\u201d body in a multipart\/alternative block. This process works well for certain MAPI clients for which the current content conversion logic is optimized. However, this creates significant issues for IMAP (Internet message access protocol) and POP (post office protocol) clients which need email in the store to be converted back to MIME before these clients can consume the message.","Converting a message from MIME to MAPI and back to MIME creates two problems for these standards-based clients, that impact performance and message fidelity. With respect to performance, conversion from MAPI to MIME is an expensive process and needs to be carried out each time a standards based client requests information on an email message. Even if only top level headers are requested, the full MAPI-to-MIME conversion takes place. This severely impedes IMAP client performance. With respect to message fidelity, due to the lossy nature of the current content conversion logic, the MIME message the client sees is not the same as the original MIME message that was received by the server. This can result in unpredictable behavior for certain IMAP clients which expect any saved content to be returned exactly as it was stored.","The following presents a simplified summary in order to provide a basic understanding of some novel embodiments described herein. This summary is not an extensive overview, and it is not intended to identify key\/critical elements or to delineate the scope thereof. Its sole purpose is to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.","The disclosed architecture addresses the problem of improving the fidelity of structured documents (such as messages) stored in and transmitted through (e.g., e-mail) servers that support many different kinds of client applications, while minimizing the impact of storing the additional data to maintain fidelity during any reconstruction for a consuming client or other type of receiving entity.","The architecture involves the storing of an extra property of a document, as well as the default set of document properties on a server. The extra property, also referred to as the skeleton property, includes all body part headers and any data that was previously discarded by the server when saving the document to the datastore. On retrieval of the document, the skeleton property is used in conjunction with the default set of stored properties to build a full fidelity representation of the original document.","In the context of messages, and in particular, a MIME message, the problem of incomplete message reconstruction is solved by the introduction of the MIME skeleton property. When a MIME message is saved to a mailbox that is accessed by a MIME client (a \u201cMIME optimized\u201d mailbox), the MIME skeleton property is stamped on the message. This property includes all body part headers and any body part content that was not saved as a property on the item by message server. On retrieval of this message by a MIME client, the MIME message is generated by using a property for the top level MIME headers in conjunction with the MIME skeleton and the stored body content, to produce a full fidelity representation of the MIME message. The architecture further includes one or more algorithms that govern what data is stored in the skeleton property and determine when the skeleton property is invalidated.","To the accomplishment of the foregoing and related ends, certain illustrative aspects are described herein in connection with the following description and the annexed drawings. These aspects are indicative of the various ways in which the principles disclosed herein can be practiced and all aspects and equivalents thereof are intended to be within the scope of the claimed subject matter. Other advantages and novel features will become apparent from the following detailed description when considered in conjunction with the drawings.","A significant portion of Internet e-mail is transmitted in MIME (multi-purpose Internet mail extensions) format. The MIME format defines messages as having single part content types and multipart types. The IMAP (Internet message access protocol) protocol allows access to separately retrieve individual MIME parts and portions of either individual parts or the entire message. For example, clients can retrieve the text portion of a message without retrieving attached files. Moreover, content is allowed to be streamed as it is being fetched.","In some message server systems, when a MIME message was saved to the store, for MIME-based clients and some parts of the message are decoded and stored in database tables and rows for retrieval from a database such as MAPI (messaging application programming interface). This is an inefficient use of storage, since the bulk of users utilize non-MIME clients which did not require data stored in the MIME stream.","In a later server version only the portions of the MIME message that are used by native (non-MIME) clients were stored. However, this approach created problems for MIME clients because the MIME message that was produced by the server from the limited set of properties that were stored, was significantly different from the original MIME message coming in. Parameters on header body parts were lost, body part content was generated that did not accurately represent the original body, and performance suffered because of the expensive nature of generating MIME from message properties.","In a broad application, the architecture involves the storing of an extra property of a document, as well as the default set of document properties on a server. The extra property, also referred to as the skeleton property, includes all body part headers and any data that was previously discarded by the server when saving the document to the datastore. On retrieval of the document, the skeleton property is used in conjunction with the default set of stored properties to build a full fidelity representation of the original document. Note that although described in the context of messaging, it is to be understood that the architecture and extra property described herein applies generally to a document, of which a message is one example.","In a more specific implementation to messages, the disclosed architecture introduces the MIME extra (or skeleton) property, which is stamped on an arriving MIME message. An incoming MIME message is shredded (parsed) and all content that is currently saved to MAPI properties continues to be saved. The remaining message content that is not saved to the MAPI properties is stored in the skeleton property. The skeleton property includes all body part headers and any body part content that was not saved as a property on the item by the server. On retrieval of this message by a MIME client, the MIME message is regenerated in full fidelity by using the default set of properties in combination with the skeleton (or extra) property and the stored body content.","Reference is now made to the drawings, wherein like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding thereof. It may be evident, however, that the novel embodiments can be practiced without these specific details. In other instances, well known structures and devices are shown in block diagram form in order to facilitate a description thereof. The intention is to cover all modifications, equivalents, and alternatives falling within the spirit and scope of the claimed subject matter.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1","b":["100","100","102","104","106","108","110","110","112","102","108","116","114","110","106","104","110"]},"The message  can be a MIME message deconstructed by the deconstruction component  as a MAPI item with the set of properties and a MIME extra property.","The extra property  stores body part headers and data not stored in the set of properties . The extra property  includes top level message headers, body part headers, and body part content not saved as MAPI properties. The storage component  also facilitates the storage of message headers to corresponding new properties.","As illustrated, the deconstruction component , storage component  and reconstruction component  are part of a messaging system , such as a messaging server that processes e-mail messages, for example. The datastore  can be a mailbox store associated with the messaging system  to provide efficient storage and retrieval of the message parts and content in the set of properties  and the extra property .","In a broader implementation, the messaging system  is a document system via which a document (e.g., the message ) is deconstructed and reconstructed based on the set of properties  and extra property  stored in the datastore .",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 2","FIG. 1"],"b":["200","200","100","200","202","200","200"]},"The system  further comprises a validation component  for discarding the extra property when conversion of the parts of the message  after deconstruction cannot be performed. The validation component  can further be employed for modifying the extra property  based on a change to the message  (e.g., an IMAP message) made by a messaging client (e.g., IMAP). Note that the system  is not restricted to IMAP clients. Still further, the validation component  can be configured to leave the extra property  unchanged based on a change to the message (a MAPI message) made by an IMAP client.","Put another way, the system  includes the storage component  for storing the set of properties  and the extra property  in association with the received message  as part of deconstruction of the message , the property component  for determining data to be stored in the extra property , and the reconstruction component  for reconstructing the message  to full fidelity using the extra property  and the set of properties  when retrieving the message .","The system  can further comprise the validation component  for discarding the extra property  when conversion of parts of the message  cannot be performed. The message  can be a MIME message deconstructed as a MAPI item with the set of properties  and a MIME extra property. For a MIME message the extra property  includes top level message headers, body part headers, and body part content not saved as MAPI properties. The validation component  modifies the extra property , deletes the extra property , or leaves the extra property  unchanged based on a change to the message  made by a messaging client (e.g., IMAP), where the message is a MAPI message. The validation component  can also modify or delete the extra property based on changes made to the message by a non-MIME client. In other words, any change made by any client is processed for validation.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 3","b":["300","302","304","302","306","308","310","312","306","312","312","316","310","318"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 4","FIG. 1","FIG. 3"],"b":["400","108","306","400","402","402"]},"Scanning is then performed through the subsequent content to look for breaks (e.g., Mixed, Alternative, etc.). A second content part  begins with the MIXED break, and includes internal nesting. The second content part  includes a new Content-Type that is Multipart\/Alternative and has a subsection. The subsection itself has multiple parts and there are alternative versions of the same thing, followed by the boundary tag again that describes the breaks (Alternative) that follow.","When inside the nesting, the scan searches for Alternative breaks. A first Alternative defines a Content-Type of Text\/Plain, which means it is a single part and the part is a plain text representation.","The parts that are tagged describe the character set (charset) the content is in. The next line, Alternative Body Representations, is essentially what the end user sees if the mail client only supports or only understands plain text.","Scanning to the next part, another Alternative break includes Content-Type: Text\/Enriched, a more robust alternative representation of the body. The character set indicates US-ASCII. The bold tag and other tags are attributes or elements that basically describe how a client that supports enriched text renders the map.","The next section of the second content part  is another Alternative break that is a Content-Type: Text\/HTML. Scanning to this point, it can be decided that text\/HTML is the richest alternative representation of this part of the message body. Look inside a third content part , there is a paragraph (P) tag, a body (Body) tag, an Alternative Body Representations, the part that is saved to PR_HTML. More generally, the third content part  can be saved as the \u201cbest\u201d body of the message.","At this point, it can be determined that the other parts of the message, a fourth content part , a fifth content part , and a sixth content part , are not desired to be reconstructed at a later time. Accordingly, the fourth content part , the fifth content part , and the sixth content part  are added to the MIME extra property. A tag is then added in the MIME extra property that indicates this alternative body part, or it is understood that an empty alternative body part that includes Text\/HTML indicates to go to the \u201cbest\u201d body and pull the HTML part out and insert it, if the client ever requests MIME in the future.","To complete this example mapping  a next MIXED break found in the fourth content part  (following the \u201cbest\u201d body part ) indicates that all of the body parts are done such as the message body presented as the content to the message. This MIXED break indicates that there is another break and an attachment that follows. The content in the fourth content part  includes content types (Image\/GIF), the file name, a content id, and a content transfer encoding which describes how the attachment has been coded. An attachment  associated with the fourth content part  is stored in an attachment table on the item, as well as the content id for this content. Similarly, the content in the fifth content part  includes content types (Image\/GIF), the file name, a content id, and a content transfer encoding which describes how the associated attachment has been coded. An attachment  associated with the fifth content part  is stored in an attachment table on the item, as well as the content id for this content. The second content part , fourth content part , fifth content part , and a sixth content part  are then stored in the MIME extra property.","The existence of the MIME extra property on items in the store significantly improves retrieval times of these messages by MIME clients and also significantly reduces processor cycles on the CAS server .","However, given the additional storage cost associated with saving the MIME extra property, it may not be prudent to stamp the property on messages delivered to all mailboxes. Instead, this property is only stamped on delivery of MIME messages to mailboxes of users that actually use MIME clients.","In order to limit the set of mailboxes on which the MIME extra property is stamped, a way of identifying mailboxes that are accessed by MIME clients is by stamping an optimize property (e.g., MIMEOptimized) on the user object (e.g., a network services component).","There can be three settings for the optimize property\u2014default, on, and off. In the default mode, a MIME extra property is stamped on items saved to the mailbox if a MIME client has accessed the mailbox in a specified period of time (e.g., thirty days). As the name denotes, the default mode is enabled by default.","An administrator can override the default mode by explicitly turning MIME optimization on or off for a mailbox. If a mailbox has been explicitly configured as MIME optimized by the administrator, all MIME messages saved to the mailbox will have the MIME extra property stamped on them irrespective of whether or not the mailbox has ever been accessed by a MIME client. If MIME optimization is turned off, MIME extra properties are never stamped on items saved to the mailbox.","Server object consumers will have a property (e.g., isMIMEClient) set to true on mailbox session creation in order for the server object to determine that a MIME client is logging into the mailbox. Each time a MIME client logs into the mailbox, a last time the client accessed the mailbox property (e.g., LastMIMEClientAccessTime) on the mailbox is updated with the time of session creation. This property is used in default mode to determine whether an extra property is to be stamped on messages being saved to the mailbox. On mailbox creation, the value of the LastMIMEClientAccessTime property is set to a date and time minimum.","As a brief summary, inbound e-mail is processed to generate the new MIME extra property, where the generation can be controlled by an optional switch. Typically, modifying the item saved in the store results in the MIME extra property being removed. Outbound messages can cause generation of the MIME extra property when converting from MAPI to MIME and this property does not already exist. Only if the switch is added and the setting specifies that the feature is turned off, will the MIME extra property not be generated.","If the extra property exists, then this property is used to generate the outbound MIME. Other MAPI properties will be used only to fill content missing from the extra property.","When an IMAP client requests the message from the server, the original message is generated by combining the contents of the extra property with stored body part content. This can be accomplished by reading the skeleton and writing the outbound MIME by combining the contents of the extra property with the saved body parts and attachments.","With respect to the process for MIME round-tripping, on the inbound side, the MIME message is shredded to MAPI properties. The MIME extra property is saved in a new property on the message. The extra property can include all top level message headers, all body part headers, and all body part content that is not already saved in MAPI properties. If there are attachments without a content-ID property, an X-header can be added to each attachment body part in MIME extra property that is missing this field. Additionally, a unique value is generated and saved in the MIME extra property and in the PR_ATTACH_CONTENT_ID property corresponding to the attachment.","On the outbound side, the contents of MIME extra property are combined with the saved \u201cbest\u201d body and the message attachments, if any. The PR_ATTACH_CONTENT_ID value and the content-ID in MIME extra property to determine the appropriate location of each attachment in the outbound message. The attachment content is encoded using the Content-Transfer-Encoding value specified in the headers for the attachment in MIME extra property. If the specified Content-Transfer-Encoding is not supported by the server, a default base- encoding can be utilized for the attachment content and the value of Content-Transfer-Encoding in MIME extra property and in the outbound message is modified to reflect this change.","With respect to modifications to the MIME extra property, if a MAPI message is modified in any way by a non-MIME client, the MIME extra property is deleted, modified, or be left unchanged depending on the changes made to the message. Changes to the following MAPI message properties that leave the MIME extra property unchanged include a read\/unread flag, reminders on messages, and categories. Changes to the following MAPI properties can result in modifications to the MIME extra property include follow-up flags, categories, and importance. Follow-up flags are stored in a property which maps to an X-Message-Flag header in MIME. If this X-header already exists in the MIME extra property then its value can be updated when generating the message outbound. If the header does not exist in the MIME extra property and a flag has been set, then the X-Message-Flag header can be added to the top-level headers of the outbound MIME message.","If a categories flag has been set to false, then the category information is included in a keywords header of the message, using the same logic as described above for follow-up flags.","An importance property maps directly to an Importance MIME header. When generating MIME outbound the importance header can be included and set to the value from the MAPI property.","Changes to any other MAPI properties that affect the MIME structure or content of a message should result in modification of the MIME extra property.","With respect to improving performance, requests for partial MIME (in an IMAP case, for example) message retrieval can be modified to use just a part of the MIME extra property that is requested. If the MIME extra property is not present, fallback can be to the existing logic.","Another improvement includes adding a subset of commonly requested headers to the message view table, so that an IMAP client can retrieve these on each message without having to bind to the item.","Yet another optimization is related to storage. If there are body parts in MIME extra property that can be accurately regenerated from those saved in MAPI properties, those parts can also be removed from MIME extra property. Essentially MIME extra property then includes all the headers of the original message and body part content that is either not saved to MAPI properties or cannot be regenerated from a body part saved in MAPI properties. Examples of such body part data are types such as \u2018text\/xml\u2019, \u2018application\/foobar\u2019, etc., in a multipart\/alternative block.","Included herein is a set of flow charts representative of exemplary methodologies for performing novel aspects of the disclosed architecture. While, for purposes of simplicity of explanation, the one or more methodologies shown herein, for example, in the form of a flow chart or flow diagram, are shown and described as a series of acts, it is to be understood and appreciated that the methodologies are not limited by the order of acts, as some acts may, in accordance therewith, occur in a different order and\/or concurrently with other acts from that shown and described herein. For example, those skilled in the art will understand and appreciate that a methodology could alternatively be represented as a series of interrelated states or events, such as in a state diagram. Moreover, not all acts illustrated in a methodology may be required for a novel implementation.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 5","b":["500","502","504"]},{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 6","FIG. 5"],"b":["600","602","604","606"]},"As used in this application, the terms \u201ccomponent\u201d and \u201csystem\u201d are intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a component can be, but is not limited to being, a process running on a processor, a processor, a hard disk drive, multiple storage drives (of optical and\/or magnetic storage medium), an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a server and the server can be a component. One or more components can reside within a process and\/or thread of execution, and a component can be localized on one computer and\/or distributed between two or more computers. The word \u201cexemplary\u201d may be used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as \u201cexemplary\u201d is not necessarily to be construed as preferred or advantageous over other aspects or designs.","Referring now to , there is illustrated a block diagram of a computing system  operable to execute full fidelity message processing in accordance with the disclosed architecture. In order to provide additional context for various aspects thereof,  and the following discussion are intended to provide a brief, general description of the suitable computing system  in which the various aspects can be implemented. While the description above is in the general context of computer-executable instructions that can run on one or more computers, those skilled in the art will recognize that a novel embodiment also can be implemented in combination with other program modules and\/or as a combination of hardware and software.","The computing system  for implementing various aspects includes the computer  having processing unit(s) , a system memory , and a system bus . The processing unit(s)  can be any of various commercially available processors such as single-processor, multi-processor, single-core units and multi-core units. Moreover, those skilled in the art will appreciate that the novel methods can be practiced with other computer system configurations, including minicomputers, mainframe computers, as well as personal computers (e.g., desktop, laptop, etc.), hand-held computing devices, microprocessor-based or programmable consumer electronics, and the like, each of which can be operatively coupled to one or more associated devices.","The system memory  can include volatile (VOL) memory  (e.g., random access memory (RAM)) and non-volatile memory (NON-VOL)  (e.g., ROM, EPROM, EEPROM, etc.). A basic input\/output system (BIOS) can be stored in the non-volatile memory , and includes the basic routines that facilitate the communication of data and signals between components within the computer , such as during startup. The volatile memory  can also include a high-speed RAM such as static RAM for caching data.","The system bus  provides an interface for system components including, but not limited to, the memory subsystem  to the processing unit(s) . The system bus  can be any of several types of bus structure that can further interconnect to a memory bus (with or without a memory controller), and a peripheral bus (e.g., PCI, PCIe, AGP, LPC, etc.), using any of a variety of commercially available bus architectures.","The computer  further includes storage subsystem(s)  and storage interface(s)  for interfacing the storage subsystem(s)  to the system bus  and other desired computer components. The storage subsystem(s)  can include one or more of a hard disk drive (HDD), a magnetic floppy disk drive (FDD), and\/or optical disk storage drive (e.g., a CD-ROM drive DVD drive), for example. The storage interface(s)  can include interface technologies such as EIDE, ATA, SATA, and IEEE 1394, for example.","One or more programs and data can be stored in the memory subsystem , a removable memory subsystem  (e.g., flash drive form factor technology), and\/or the storage subsystem(s)  (e.g., optical, magnetic, solid state), including an operating system , one or more application programs , other program modules , and program data . Where the computer  is a message server, the one or more application programs , other program modules , and program data  can include the system  of , the system  of , the processes associated with , the parsing and storage associated with the example mapping of , and the methods illustrated in , for example.","Generally, programs include routines, methods, data structures, other software components, etc., that perform particular tasks or implement particular abstract data types. All or portions of the operating system , applications , modules , and\/or data  can also be cached in memory such as the volatile memory , for example. It is to be appreciated that the disclosed architecture can be implemented with various commercially available operating systems or combinations of operating systems (e.g., as virtual machines).","The storage subsystem(s)  and memory subsystems ( and ) serve as computer readable media for volatile and non-volatile storage of data, data structures, computer-executable instructions, and so forth. Computer readable media can be any available media that can be accessed by the computer  and includes volatile and non-volatile media, removable and non-removable media. For the computer , the media accommodate the storage of data in any suitable digital format. It should be appreciated by those skilled in the art that other types of computer readable media can be employed such as zip drives, magnetic tape, flash memory cards, cartridges, and the like, for storing computer executable instructions for performing the novel methods of the disclosed architecture.","A user can interact with the computer , programs, and data using external user input devices  such as a keyboard and a mouse. Other external user input devices  can include a microphone, an IR (infrared) remote control, a joystick, a game pad, camera recognition systems, a stylus pen, touch screen, gesture systems (e.g., eye movement, head movement, etc.), and\/or the like. The user can interact with the computer , programs, and data using onboard user input devices  such a touchpad, microphone, keyboard, etc., where the computer  is a portable computer, for example. These and other input devices are connected to the processing unit(s)  through input\/output (I\/O) device interface(s)  via the system bus , but can be connected by other interfaces such as a parallel port, IEEE 1394 serial port, a game port, a USB port, an IR interface, etc. The I\/O device interface(s)  also facilitate the use of output peripherals  such as printers, audio devices, camera devices, and so on, such as a sound card and\/or onboard audio processing capability.","One or more graphics interface(s)  (also commonly referred to as a graphics processing unit (GPU)) provide graphics and video signals between the computer  and external display(s)  (e.g., LCD, plasma) and\/or onboard displays  (e.g., for portable computer). The graphics interface(s)  can also be manufactured as part of the computer system board.","The computer  can operate in a networked environment (e.g., IP) using logical connections via a wired\/wireless communications subsystem  to one or more networks and\/or other computers. The other computers can include workstations, servers, routers, personal computers, microprocessor-based entertainment appliance, a peer device or other common network node, and typically include many or all of the elements described relative to the computer . The logical connections can include wired\/wireless connectivity to a local area network (LAN), a wide area network (WAN), hotspot, and so on. LAN and WAN networking environments are commonplace in offices and companies and facilitate enterprise-wide computer networks, such as intranets, all of which may connect to a global communications network such as the Internet.","When used in a networking environment the computer  connects to the network via a wired\/wireless communication subsystem  (e.g., a network interface adapter, onboard transceiver subsystem, etc.) to communicate with wired\/wireless networks, wired\/wireless printers, wired\/wireless input devices , and so on. The computer  can include a modem or has other means for establishing communications over the network. In a networked environment, programs and data relative to the computer  can be stored in the remote memory\/storage device, as is associated with a distributed system. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers can be used.","The computer  is operable to communicate with wired\/wireless devices or entities using the radio technologies such as the IEEE 802.xx family of standards, such as wireless devices operatively disposed in wireless communication (e.g., IEEE 802.11 over-the-air modulation techniques) with, for example, a printer, scanner, desktop and\/or portable computer, personal digital assistant (PDA), communications satellite, any piece of equipment or location associated with a wirelessly detectable tag (e.g., a kiosk, news stand, restroom), and telephone. This includes at least Wi-Fi (or Wireless Fidelity) for hotspots, WiMax, and Bluetooth\u2122 wireless technologies. Thus, the communications can be a predefined structure as with a conventional network or simply an ad hoc communication between at least two devices. Wi-Fi networks use radio technologies called IEEE 802.11x (a, b, g, etc.) to provide secure, reliable, fast wireless connectivity. A Wi-Fi network can be used to connect computers to each other, to the Internet, and to wire networks (which use IEEE 802.3-related media and functions).","Referring now to , there is illustrated a schematic block diagram of a computing environment  for full fidelity message processing. The environment  includes one or more client(s) . The client(s)  can be hardware and\/or software (e.g., threads, processes, computing devices). The client(s)  can house cookie(s) and\/or associated contextual information, for example.","The environment  also includes one or more server(s) . The server(s)  can also be hardware and\/or software (e.g., threads, processes, computing devices). The servers  can house threads to perform transformations by employing the architecture, for example. One possible communication between a client  and a server  can be in the form of a data packet adapted to be transmitted between two or more computer processes. The data packet may include a cookie and\/or associated contextual information, for example. The environment  includes a communication framework  (e.g., a global communication network such as the Internet) that can be employed to facilitate communications between the client(s)  and the server(s) .","Communications can be facilitated via a wire (including optical fiber) and\/or wireless technology. The client(s)  are operatively connected to one or more client data store(s)  that can be employed to store information local to the client(s)  (e.g., cookie(s) and\/or associated contextual information). Similarly, the server(s)  are operatively connected to one or more server data store(s)  that can be employed to store information local to the servers .","What has been described above includes examples of the disclosed architecture. It is, of course, not possible to describe every conceivable combination of components and\/or methodologies, but one of ordinary skill in the art may recognize that many further combinations and permutations are possible. Accordingly, the novel architecture is intended to embrace all such alterations, modifications and variations that fall within the spirit and scope of the appended claims. Furthermore, to the extent that the term \u201cincludes\u201d is used in either the detailed description or the claims, such term is intended to be inclusive in a manner similar to the term \u201ccomprising\u201d as \u201ccomprising\u201d is interpreted when employed as a transitional word in a claim."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
