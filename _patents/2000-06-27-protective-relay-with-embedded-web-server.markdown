---
title: Protective relay with embedded web server
abstract: A protective relay having an embedded web server to allow communication with a remote device having a standard web browser package. The relay can receive and transmit HTML files according to the HTTP protocol over a communications network. The relay can receive commands from the remote device, and can generate and return requested data to the remote device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07085938&OS=07085938&RS=07085938
owner: General Electric Company
number: 07085938
owner_city: Schenectady
owner_country: US
publication_date: 20000627
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["REFERENCE TO MICROFICHE APPENDIX","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application has a microfiche appendix of a computer program listing. The appendix consists of one (1) sheet of microfiche containing 53 frames.","The present invention generally relates to devices and systems for providing protective control to power networks. More particularly, the present invention relates to the remote control of protective relays and remote display of power system data.","Protective relaying devices are widely known and used for providing protective control of power systems. Such protective relays incorporate a digital microprocessor for providing protective control of power distribution systems. There are known digital protective relays which have communications capabilities. A microprocessor-based protective relaying device having communications capability is disclosed, for example, in U.S. Pat. No. 5,982,585. However, the communications capabilities are typically relatively limited, and might include, for example, an application layer protocol such as Modbus RTU or ASCII for communication over a Universal Asynchronous Receiver Transmitter (UART) data link layer with an RS485, RS232 or other fiber optic physical layer interface. Typically, digital protective relays having a communications capability support only one application layer communications protocol, even where the relay includes multiple communications ports.","U.S. Pat. No. 5,680,324 discloses a communications processor for electric power substations. The communications processor includes an electronic network system with seventeen individual communications ports, four quadrature UART devices, each of which serves four of the ports, and a microprocessor which processes and controls the flow of data under the control of stored control programs, command settings, and command logic. Relays, meters, or other intelligent electronic devices are connected to some of the ports, and remote terminal units, local computers, or a modem are connected to master ports. The communication processor has a capability of communicating with the various port devices through an ASCII communication format. The processor is capable of supporting simultaneous communication with multiple devices and users. However, the processor is a centralized communication device, which is separate and distinct from the protective relays, meters, and other port devices. Accordingly, the >324 patent does not focus on the communications capabilities of the relays or other port devices.","Digital protective relays incorporating communications capabilities require a human machine interface (HMI) which allows a user to perform configuration and control tasks, and which retrieves and displays to the user information stored within the relay. Conventionally, the HMI interface is implemented in product-specific software, and manufacturers of relays may have more than a dozen different HMI software packages to communicate with various types of relays.","To further enhance the utility of a digital protective relay, and to provide more comprehensive protective control of power distribution systems, it would be desirable to improve the communications capabilities of digital protective relays. More particularly, it would be desirable for a protective relay to include a Human Machine Interface which incorporates a common \u201coff-the-shelf\u201d software package which is not product-specific. Known protective relays do not sufficiently address these needs.","The present invention overcomes the problems noted above, and achieves additional advantages, by providing for a protective relaying device with embedded web server technology to allow the device to be remotely controlled and\/or monitored by any remote device having a standard web browser software package. According to exemplary embodiments described herein, a protective relay for providing protective control to a power system includes a microprocessor, first and second connections to communications network (e.g., the Internet) and the power system, respectively, and a communications server configured to receive relay configuration commands from a remote computer over the communications network in a network format, and to provide power system data and relay status data to the remote computer over the communications network in the network format.","The present invention advantageously allows a human machine interface to be generated remotely using standard browser packages, and avoids the need for device-specific software.","Referring now to , a conventional arrangement of a protective relaying intelligent electronic device (IED)  in communication with a remote client computer  is shown. The device  includes functional modules  stored as executable software programs which provide various protective relaying functions as are known in the art. A database  exchanges device data, including relay settings and actual power system values with the functional modules . A file system server  is provided in the device , and exchanges data with the database . A communications protocol server  is provided in the device ; the server  is configured to exchange data with the file system server  in a protocol dependent file data format based on the device protocol for the specific type of remote client computer . The server  is further configured to exchange data with the remote client computer  using a device-dependent protocol dependent upon the type of remote client computer . Client computer  executes a device-specific Human Machine Interface (HMI) software package, of which many are known, to allow a user to interface with the client computer and remotely monitor and control the device .","Referring now to , an arrangement according to an embodiment of the present invention is shown. The device of  includes functional modules  stored as executable software programs which provide various protective relaying functions.  shows a microprocessor  associated with the protective relaying device. The microprocessor may perform operations as described below. In this embodiment, a hypertext markup language (HTML) server  is provided in addition to, or in place of, file system server . Further, a hypertext transfer protocol server  is provided in addition to, or in place of, communications protocol server . The HTML server  is positioned and configured to exchange communication signals with the database , and is positioned and configured to exchange communication signals (such as HTML files or data, which may include java applets, graphics, or text) with the HTTP protocol server . The HTTP protocol server  communicates with a remote client computer  which operates according to a web browser software. The web browser software can be any suitable internet browser program including the well-known Internet Explorer browser available from Microsoft corporation or the well-known Netscape Navigator browser available from Netscape corporation. Such browsers are not device-specific; that is, they will run on any of a wide variety of remote computer devices, unlike the conventional arrangement of , where a device-specific communication program is required.","Referring now to , a diagram showing numerous communication possibilities that can be implemented based on the arrangement of FIG. . In , a plurality of remote computer devices  located at a user location physically remote from a power system are connected by a local area network (LAN) . Each computer  includes a standard web browser software package; thus, each computer  can connect to, and communicate over, a computer network such as the Internet, via either a router  designed for connected LAN devices to the Internet, or via modem device  and public switched telephone network . Some distance from the remote user location is a remote substation  which includes a second router  and a second local area network (LAN) , which are separate and independent from the router  and LAN  associated with the remote user location. The LAN  of the remote substation  connects a plurality of protective relaying devices  in communication with one another. Each protective relaying device includes web server software substantially as shown and described with respect to FIG. . Further, the LAN  of the remote substation  can also be directly connected to a substation computer  equipped with web browser software.","In the diagram of , it will be appreciated that by providing web browser software in the protective relaying devices , each device can be individually monitored, configured, and controlled remotely by any of a number of devices over any of a number of communication links. For example, one or more individual devices  can be monitored and\/or controlled by a remote computer  connected to a LAN  which is independent of the substation LAN  via router . One or more individual devices  can be monitored and\/or controlled by a remote computer  via a modem  and telephone network . One or more individual devices  can also be monitored and\/or controlled by a substation computer  connected to the LAN  of the substation . It will further be appreciated that numerous other communication links are possible to link a remote control device to a protective relaying device. For example, wireless communication techniques can also be used to remotely monitor and\/or control one or more of the protective relaying devices ; further, one or more protective relays associated with different substations can be remotely controlled and\/or monitored in parallel from the same or different remote computers. Other possibilities can be envisioned and implemented by those of ordinary skill in the art.","Referring now to , a diagram showing a protocol \u201cstack\u201d or communications profile of a protective relaying device according to an embodiment of the present invention is shown. Such a protocol stack can be implemented by suitably programming a microprocessor associated with the protective relaying device. The protocol stack is a layered arrangement of communication protocols. In the example of , a hypertext transfer protocol (HTTP) server  is of the C++ class; that is, operating according to software code written in C++ language. It has been found that the C++ code integrates well with the other software code in certain protective relays. The use of C++ code allows data to be generated dynamically rather than requiring the storing of previously-generated files for later transmission by the server . The server  is provided as part of the protective relaying device. The protocol stack provided to server  includes a sockets application programming interface , such as the well-known secure sockets layer (SSL) as a next layer of communication protocol. The protocol stack of  further includes a transmission control protocol (TCP) layer  which allows for error detection and recovery; as is well-known in the art, the TCP protocol provides a reliable stream delivery and virtual connection service to applications through the use of sequenced acknowledgment with retransmission of packets when necessary. The protocol stack of  further includes an Internet Protocol (IP) layer  which allows packets of data to be assembled and disassembled in the protective relaying device. This protocol stack (consisting of layers , , and ) can support communications necessary to achieve the monitoring and control techniques of  via an ethernet device driver . Further, the server  can achieve the monitoring and control techniques of  via an RS-232 device driver  if the protocol stack of layers , , and  is supplemented by a point-to-point protocol (PPP) layer . As is known in the art, the Point-to-Point Protocol (PPP) originally developed as an encapsulation protocol for transporting IP traffic over point-to-point links. PPP also established a standard for the assignment and management of IP addresses, asynchronous (start\/stop) and bit-oriented synchronous encapsulation, network protocol multiplexing, link configuration, link quality testing, error detection, and option negotiation for such capabilities as network-layer address negotiation and data-compression negotiation. PPP supports these functions by providing an extensible Link Control Protocol (LCP) and a family of Network Control Protocols (NCPs) to negotiate optional configuration parameters and facilities. PPP supports other protocols in addition to IP. It will of course be appreciated that the protocol stack of  can be modified in a variety of ways to support communications between the server  and remote devices using other protocols or data formats.","Referring now to , a data flow diagram illustrative of data flow through an exemplary HTTP server in a protective relay is shown. Such a data flow can be implemented by suitably programming a microprocessor associated with the protective relaying device. In this example, the relay server  receives one or more \u201cGET\u201d commands from a web browser program running on a remote client computer over a physical communication link (such as of the types shown and described with respect to FIG. ). The relay server  transmits the files generated in response to the \u201cGET\u201d commands. Each http connection is given a \u201cFile User\u201d object, which manages the process of obtaining data from a \u201cFile Source\u201d class, such as C++ file source class  (which generates HTML or other data when requested via an HTTP \u201cGET\u201d command) or static data file source class  (which provides static data such as graphics and Java applet class files stored in memory  in response to the \u201cGET\u201d commands). The \u201cFile Source\u201d base class provides a \u201cfind\u201d function, which the http server  uses to locate the file source object associated with a filename provided in the one or more \u201cGET\u201d commands.","In the example of , file source \u201carguments\u201d accept arguments in addition to the file name. These arguments can specify which particular data should be included in the generated web page. For example, if a user at a remote client computer desires to have a summary memory map displayed, a GET command would specify \u201cmemoryMap.htm\u201d. To display a detailed map for a particular module, the GET command would specify \u201cmemoryMap.htm?xxx\u201d, where \u201cxxx\u201d identifies a particular module. The C++ class associated with the \u201cmemoryMap.htm\u201d filename uses the xxx parameter to determine what data to provide.","In a typical scenario, the web browser running on the remote client computer GETs an html page using an embedded Java applet command. The browser than gets the applet class file and runs it. The running applet periodically (e.g., several times per second) retrieves a dynamically generated HTML page from the http server. The Java code formats the received data and displays it graphically in the web browser using the display of the remote client computer.","Referring now to a source code listing for an exemplary software program implementing the present invention is provided. The source code is Copyright, 2000, General Electric Company.","While the foregoing description includes numerous details, it is to be understood that these are provided for purposes of illustration and explanation only, and that these are not limitations of the invention. The examples described above can be widely varied by one of ordinary skill in the art without departing from the spirit and the scope of the invention, as defined by the following claims and their legal equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The features and advantages of the present invention can be understood more completely by reading the following Detailed Description of presently-preferred embodiments of the present invention in conjunction with the accompanying drawings, in which like reference indicators are used to designate like elements, and in which:",{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
