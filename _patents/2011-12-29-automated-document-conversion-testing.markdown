---
title: Automated document conversion testing
abstract: Embodiments of the invention provide a system for automated document conversion testing. For each page in the received documents, the system first converts the page into a source image. The system then converts the document page into a set of markup language page elements and generates a rendered image of the markup language page elements displayed in a web browser on a target software platform. Next, the system determines a correlation factor between the source image and the rendered image. The correlation factor indicates a page fidelity between the original document and its markup language transformation. If the correlation factor exceeds a threshold established for a minimum page fidelity requirement, the markup language conversion is validated.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09069732&OS=09069732&RS=09069732
owner: Chegg, Inc.
number: 09069732
owner_city: Santa Clara
owner_country: US
publication_date: 20111229
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF THE EMBODIMENTS"],"p":["This application is related to U.S. patent application Ser. No. 13\/253,011, which is incorporated by reference in its entirety.","1. Field of the Invention","This disclosure relates to a publishing platform for aggregating, managing, and delivering electronic content to connected consumer electronic devices.","2. Description of the Related Art","The education publishing industry faces a number of significant challenges to effectively delivering media and services through an online delivery network. These challenges center around four discrete phases:\n\n","Effectively enabling and managing each of the above four phases has not yet been accomplished by the education publishing industry. Accordingly, this has inhibited the growth of delivering media and services through an online delivery network.","Embodiments of the invention provide a system for automated document conversion testing. For each page in the received documents, the system first converts the page into a source image. The system then converts the document page into a set of markup language page elements and generates a rendered image of the markup language page elements displayed in a web browser on a target software platform. Next, the system determines a correlation factor between the source image and the rendered image. The correlation factor indicates a page fidelity between the original document and its markup language transformation. If the correlation factor exceeds a threshold established for a minimum page fidelity requirement, the markup language conversion is validated.","In various embodiments, the document page comprises elements, such as an image, a graph, a table, a formula, and a body of texts. The system converts these elements into markup language page elements together with location and composition information to preserve page fidelity. The markup language elements may be in HTML5 format.","In various embodiments, the system determines the correlation factor as a number between 0 indicating no correlation and 100 indicating a perfect match. The threshold corresponds to a minimum requirement of the page fidelity depending on the type and layout of the document page.","In various embodiments, responsive to the correlation factor being lower than the threshold, the system further analyzes and corrects the markup language page elements, and regenerates the rendered image for further correlation testing.","In various embodiments, the system generates rendered images from the set of markup language page elements displayed in a plurality of browser and platform combinations, determines a correlation factor between the source image and each of the rendered images, and validates the markup language conversion in response to the correlation factors exceeding the threshold.","One skilled in the art will readily recognize from the following discussion that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles of the invention described herein.","The successful and rapid growing adoption of electronic books and web based publishing services is sometimes limited by the available digital content to offer. Publishers have to separately create digital versions of their content besides printed copies to support the new digital offerings. This separate process may introduce increased costs, digital format issues, and production delays that negatively affect the availability of the digital books at content and service providers. Given the average number of pages contained in a book or document, the large and increasing volume of books and documents to process, and the ever evolving and expanding list of consumer devices and software platforms capable of receiving digital content, manual conversion and visual testing in the traditional publishing solutions becomes more and more impractical. Therefore it is highly desirable to have an automated system for converting and testing extremely large volume of contents across permutations of multiple target devices and platforms.","In addition, despite the advance in digital conversion technologies and on-going standardization efforts in the creation and deployment of the electronic books, such as ePub standard and development toolkits, the converted digital content sometimes differs considerably from its original printed equivalent in at least one aspect: page fidelity. Page fidelity refers to the page structure of the original document, including the pagination of the original printed document, the number of columns and arrangement of paragraphs, the placement and appearance of graphics, titles and captions, and the fonts used. Page fidelity is usually not an issue for trade books given their relatively simple text structure and page layout. However, for some other categories of books (e.g., textbooks, education, travel, art, and cooking books), whose images, graphs, tables, maps, proprietary fonts, and multi-columns of text are assembled into complex sets of customized publications, maintaining page fidelity may be highly desired but quite challenging when converting into ePub format or modern markup language web pages.","Embodiments of the invention provide a system referred to as a \u201cdocument conversion testing system\u201d or \u201cpublishing system.\u201d The system transforms printed documents into, for example, markup language documents (e.g., in HTML5 web format) with enhanced metadata suited for distribution to a wide variety of computing devices. The system aims to preserve page fidelity, regardless of the original format of the source content provided by the content provider, and regardless of the complexity of the layout of the original document. To achieve the page fidelity perseverance, the system automatically analyzes and quantifies the differences in page fidelity between a printed document (e.g., a PDF file) and its markup language transformation (e.g., HTML5 web pages). Document pages that fail the page fidelity tests are flagged and examined. This publishing system is a part of an overall content distribution platform, an example of which is illustrated in . The content distribution platform not only facilitates aggregation, management, and distribution of digital education content, but also provides an integrated solution for digital publishing and online education services.","Platform Overview",{"@attributes":{"id":"p-0021","num":"0024"},"figref":"FIG. 1","b":"102"},"As shown in , the digital reading environment comprises a content source , a content distribution platform , a network , and one or more clients . The content source  includes digital and printed content automatically gathered and aggregated from a large number of publishers, categories, and partners. Examples of content include textbooks, trade books, magazines, newspapers, user-generated content, web content, and advertising content.","The content distribution platform  aggregates, validates, transforms, packages, and monetizes the content collected by the content source  into a number of business services, prior to distribution to the clients  over the network . The platform comprises five systems: an ingestion system , a publishing system , a distribution system , a back-office system , and an eCommerce system .","The ingestion system  first gathers information on the type, file formats, and file manifest of the content. The ingestion system then checks files' integrity and conformity to standards, such as PDF, ePUB2, ePUB3, XML, HTML, and other formats. Content files that fail the integrity and conformity checks are flagged for further testing and repairing. Each content file that passes the checks is assigned a unique identifier and stored in a database for access by the publishing system .","The publishing system  converts ingested documents into markup language documents, for example, an HTML5 web page with enhanced metadata, which is well-suited to distribution across a wide variety of computing devices connected to the content distribution platform  via the network . Due to the original format of the source content and the complexity of the layout of the original document, the converted markup language documents are tested by the publishing system  to determine whether the conversion preserves the page fidelity compared to the original printed document. The page fidelity includes the original page structure, such as the pagination of the original printed document, the number of columns and arrangement of paragraphs, the placement and appearance of graphics, titles and captions, and the fonts used. Only converted documents that meet a minimum requirement of page fidelity are approved for distribution. More details of the publishing system  are described with reference to  below.","The distribution system  packages the content for delivery and uploads the content to content distribution networks. Then, the distribution system  makes the content available to end-users based on the content's digital rights management policies.","The back-office system  handles tasks dedicated to running business within the content distribution platform, such as accounting, human resource, and project management. The back-office system  also manages the interactions with customers, clients, and sales.","The eCommerce system  manages the online processes of marketing, selling, servicing and receiving payments for digital products and services. Hence the eCommerce system  is closely interfaced to the publishing system , distribution system , as well as the back-office system .","The network  facilitates content and service distribution and communications between various components of the system environment. Contents are packaged and distributed across the network  for client consumption. The overall quality of service received by the clients is also monitored and reported back to the content distribution platform  over the network . The network  is typically a content delivery network (CDN) built on the Internet, but may include any network, including but not limited to a LAN, a MAN, a WAN, a mobile wired or wireless network, a private network, or a virtual private network.","The clients  access the content from web browsers on computing devices connected to the network . The computing devices include a personal computer, such as a desktop, laptop, or tablet computer, a personal digital assistant, a mobile or smart phone, or a television \u201cset-top box\u201d using a client web application. The educational content are transformed by the content distribution platform  and delivered to the clients  across the network . As the clients enjoy the consistent reading experiences and high-quality services, the web browsers on the clients' devices regularly communicate with the content distribution platform  for updating reading content and connected services. In addition, user data on the clients' experience with the service and quality of the network connections are also collected and uploaded to the content distribution platform  through network .","In contrast to existing digital publishing services, such as AMAZON KINDLE\u00ae, the disclosed content distribution platform does not require users to purchase a specific client device or download a specific application from the service provider to access the content. Rather, any HTML5 compatible browser on a user's computing device may receive, from the content distribution platform , structureless HTML5 page elements to construct pages of a document on the browser, along with a host of document specific metadata to enhance the user's reading experience with the document, such as thumbnail navigation and an interactive table of contents. The HTML5 pages of the document also supports a number of reading activities, such as creating highlights, taking notes, and accessing a dictionary. Annotations, such as highlights, drawings, notes, comments, and other personalized data created by the user can be displayed as an overlay on the original content, stored and archived in the user account, synchronized across all registered devices of the user, and optionally shared among the user's friends, classmates, campus, or other groups, as part of an education social platform. It is noted that although embodiments of the invention are described herein with reference to HTML5, other markup languages with suitable characteristics may also be used in place of HTML5.","Automated Conversion Testing","Embodiments of the invention provide a system (and a method and a computer readable storage medium) for automated document conversion testing. This automated testing system is referred to as the publishing system  in . The system  receives ingested documents for conversion from the ingestion system . For each page in the received documents, the system  first converts the page into a source image. The system  then converts the document page into a set of markup language page elements and generates a rendered image of the markup language page elements displayed in a web browser on a target software platform. Next, the system  analyzes the source image, as well as the rendered image of the markup language page elements. Based on the analysis results, the system automatically determines a correlation factor between the original document and the converted content. The correlation factor indicates the page fidelity quality between the printed document and its markup language transformation. If the correlation factor does not meet a threshold established for a minimum page fidelity, the page is flagged and its associated digital conversion is examined. Otherwise, the converted markup language page elements are validated.",{"@attributes":{"id":"p-0033","num":"0036"},"figref":"FIG. 2","b":["130","210","220","240","260"]},"The image conversion module  converts the ingested document page  into a source image . The conversion module  can take the input page  from a digital document in PDF, ePUB, and other formats, and output the image  in BMP, TIFF, and other image formats. The source image  thus generated is identical to the original document page  since there are no changes in content layout during the conversion. This source image conversion can be performed in a batch process asynchronous to other processes in the system , for example, converting all the pages in a textbook to a set of source images in one batch.","To remove the need for specific reader applications and\/or end-user devices, the markup language conversion module  converts the ingested document page  into a set of markup language page elements . After receiving the document page , the markup language conversion module  dissects the page into elements of information, such as various regions of texts and images, which are converted into markup language page elements. In the meantime, the markup language conversion module  also creates a set of structure metadata associated with the location and composition of the elements of information. The list of the structure metadata can include, for example, sizes and types of images, locations, captions, number and size of columns, paragraphs, type of layout, embedded references, partial and full content indexing, border size, blank pages, and many other structure metadata, which identifies all the elements on a printed page. Thus, the page  is transformed into the downloadable markup language page elements  with associated structure metadata regardless of the original source content format. In addition, the markup language conversion module  can also extract basic metadata from the document. For example, basic metadata common to all the pages in a textbook may include ISBN number, author, title, publisher name, release date, short description, among other book specific data.","The markup language to image conversion module  generates a rendered image  for any browser and platform combinations from the markup language page elements . Because the markup language page may be displayed on a variety of web browsers on different consumer devices across multiple platforms, potential compatibility issues can be introduced by the markup language conversion. Therefore, the markup language to image conversion module  automatically generates a rendered image of the markup language page elements  displayed on each and every browser and platform combination across multiple consumer devices. As a result, each rendered image is an accurate representation of the rendering of the markup language page elements  by a respective web browser environment. These rendered images can then be compared to the source image for page fidelity testing.","The markup language to image conversion module  supports a matrix of web browsers, browser engines, operating systems, and client devices. The web browsers include INTERNET EXPLORER\u00ae, FIREFOX\u00ae, GOOGLE CHROME\u00ae, SAFARI\u00ae, and O\u00ae Opera Browser. These browsers are built upon various browser layout engines (e.g., WEBKIT\u00ae, Gecko, Trident, and PRESTO\u00ae) on top of different platforms, such as desktop operating systems (e.g., MICROSOFT WINDOWS\u00ae, MAC OS\u00ae, and LINUX\u00ae) and mobile operating systems (e.g., IOS\u00ae and ANDROID\u00ae). Consumer devices comprise desktops, laptops, eReaders, smart phones, and tablets, as shown in .","Page fidelity of the original document can be compromised due to complex layout or target web browser conformity issues during markup language conversion and rendering. The correlation engine  analyzes both the source image  and the rendered image  for a specific web browser on a target software platform, and establishes a correlation factor to quantify the differences in page fidelity between the original document page and its markup language transformation.","The correlation engine  may adopt various analysis techniques for comparing the rendered image to the sourced image. The selection of a particular technique for correlation analysis may depend on the complexity of the pages. In one embodiment, a simple text comparison algorithm can be used for book pages with only texts. In another embodiment, for example, a statistical method similar to a face recognition algorithm in video or image processing can be utilized to document layouts that include not only texts but also graphics and images.","In other embodiments, more complicated approaches can be applied to check page layout fidelities. Instead of treating an individual page as a whole, the page is dissected into a collection of basic elements following rules to identify different parts. Each individual page may be analyzed to determine regions of characters, blank spaces, and images. To further determine whether a region corresponds to a heading, subheading, body text, caption, or other identifiable parts, the font size, the relative position of the region or objects, and the presence and\/or absence of entries in the table of contents or index, are all taken into considerations in categorizing regions. For example, a text region adjacent to an image with relatively few words that matches the text in the figures' list is most likely a caption of the image. When individual pages are processed into multiple regions, the correlation engine can be designed around a customized analysis, for example, a PCA-LCA analysis that combines the principal components analysis (PCA) and linear discriminant analysis (LDA) algorithm.","After the correlation analysis between the source image and rendered image is performed, the correlation engine  establishes a correlation factor C between the source image and rendered image is determined . The correlation factor C can be a score between 0 and 100, where 0 means no correlation at all and 100 means a perfect match. In case of the PCA-LCA analysis, the correlation factor C can be defined as a weighted sum of fidelity quality of all the corresponding regions in a pair of source and rendered pages.",{"@attributes":{"id":"p-0042","num":"0045"},"figref":["FIG. 3","FIG. 3"],"b":["260","260","301","310","302","320","303","330","301","310","302","320","322","330","332","303","322","332"]},"Referring again to , the correlation engine  is configured with a minimum requirement on the page fidelity in terms of a threshold or a predefined value of the correlation factor to determine whether the markup language conversion of the document page  passes the page fidelity test. Converted pages with correlation factors higher than the threshold, such as a validated document page , are deemed ready for distribution and stored in the repository database; whereas pages with correlation factors lower than the threshold are flagged and subjected to further examination, for example by a human quality assurance (QA) operator  who monitors the conversion and validating process. A failed page with a correlation factor value slightly lower than the threshold may still be validated by the quality assurance operator  from his or her perspective. On the other hand, the markup language elements of a failed page may need to be analyzed, corrected, and eventually resubmitted to the markup language conversion module  for correlation and validation, which include regenerating the rendered image for further correlation testing.","The threshold correlation factor can vary depending on the category of the documents and complexity of the page layout of the particular documents. For example, if the threshold of correlation factor is set at 90 for the pages in , the rendered image  passes the check, and rendered image  may also be validated if the unmatched region  does not affect users' experience with the page. Rendered image , on the other hand, is flagged and subjected to further examination.","Similar to the image conversion module , the markup language conversion module , the markup language to image conversion module , and the correlation engine  can all schedule their respective conversion or testing tasks in batch processes asynchronous to other processes in the system , as long as the inputs are provided.","In a summary, the document conversion testing system  automates the tasks of converting large volumes of source content, rendering an even larger number of the converted markup language web pages on a variety of target web browsers and target platforms, and comparing the rendered markup language web pages to the original pages without manual intervention. For example, a single textbook typically contains several hundred pages, which have to be converted and compared against thousands of rendered converted markup language pages for page fidelity test. Therefore, this automation process is critical for the success of the digital content delivery and online education services in order to increase the volume of digital content offerings and to facilitate broad content deployment.",{"@attributes":{"id":"p-0047","num":"0050"},"figref":["FIG. 4","FIG. 2","FIG. 2"],"b":["130","402","130","201","404","210"]},"In another separate example process, the document page is converted  into a set of markup language page elements. For example, the markup language conversion module  transforms the document page  into a set of markup language page elements , as described above with reference to . The markup language page elements are then used to generate  rendered images from a displayed markup language page in multiple browser and platform combinations, in an effort to keep the page structure and layout of the original book page. For example, the markup language to image conversion module  renders an image  from the markup language page elements  in a browser on a target platform, as described above with reference to .","After both processes are finished, correlation factor between the source image and each of rendered images are determined . For example, the correlation engine , as described above with reference to , adopts various analysis techniques (e.g., a text comparison and image recognition algorithm or the PCA-LPA algorithm), and establishes a correlation factor to quantify the differences in page fidelity between the original document page and its markup language transformation.","Subsequently, it is decided whether the correlation factor exceeds  a threshold corresponding to a minimum requirement on the page fidelity. If the correlation factor is below the threshold, the markup language page elements are examined  and returned for generating  a rendered image. Otherwise, the conversions and testing are repeated starting from receiving  the next available page, given that the current page is not  the last page. When the last page has been treated, the method ends.","Additional Configuration Considerations","The present invention has been described in particular detail with respect to several possible embodiments. Those of skill in the art will appreciate that the invention may be practiced in other embodiments. The particular naming of the components, capitalization of terms, the attributes, data structures, or any other programming or structural aspect is not mandatory or significant, and the mechanisms that implement the invention or its features may have different names, formats, or protocols. Further, the system may be implemented via a combination of hardware and software, as described, or entirely in hardware elements. Also, the particular division of functionality between the various system components described herein is merely exemplary, and not mandatory; functions performed by a single system component may instead be performed by multiple components, and functions performed by multiple components may instead performed by a single component.","Some portions of above description present the features of the present invention in terms of algorithms and symbolic representations of operations on information. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. These operations, while described functionally or logically, are understood to be implemented by computer programs. Furthermore, it has also proven convenient at times, to refer to these arrangements of operations as modules or by functional names, without loss of generality.","Unless specifically stated otherwise as apparent from the above discussion, it is appreciated that throughout the description, discussions utilizing terms such as \u201cdetermining\u201d or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system memories or registers or other such information storage, transmission or display devices.","Certain aspects of the present invention include process steps and instructions described herein in the form of an algorithm. It should be noted that the process steps and instructions of the present invention could be embodied in software, firmware or hardware, and when embodied in software, could be downloaded to reside on and be operated from different platforms used by real time network operating systems.","The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored on a computer readable medium that can be accessed by the computer and run by a computer processor. Such a computer program may be stored in a computer readable storage medium, such as, but is not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus. Furthermore, the computers referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.","In addition, the present invention is not limited to any particular programming language. It is appreciated that a variety of programming languages may be used to implement the teachings of the present invention as described herein, and any references to specific languages, such as HTML5, are provided for enablement and best mode of the present invention.","The present invention is well suited to a wide variety of computer network systems over numerous topologies. Within this field, the configuration and management of large networks comprise storage devices and computers that are communicatively coupled to dissimilar computers and storage devices over a network, such as the Internet.","Finally, it should be noted that the language used in the specification has been principally selected for readability and instructional purposes, and may not have been selected to delineate or circumscribe the inventive subject matter. Accordingly, the disclosure of the present invention is intended to be illustrative, but not limiting, of the scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0013","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0017"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0019"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
