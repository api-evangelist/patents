---
title: Method and system for associating a process on a multi-user device with a host address unique to a user session associated with the process
abstract: A method and system for associating a process on a multi-user device with a host address unique to a user session associated with the process begins by allocating a unique host address for the user session and assigning it to a network adapter. Requests that may bind network resources are intercepted, and relevant bind request parameters are manipulated to specify the host address associated with the user session. The original target of the request is invoked with potentially modified parameters.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07590743&OS=07590743&RS=07590743
owner: Softricity, Inc.
number: 07590743
owner_city: Redmond
owner_country: US
publication_date: 20041218
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FEDERALLY SPONSORED RESEARCH","SEQUENCE LISTING OR PROGRAM","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims the benefit of PPA Ser. No. 60\/531,883, filed on Dec. 23, 2003 by the present inventor.","Not applicable.","Not applicable.","This invention relates, in general, to multi-user operating system environments, and, more particularly, to a system and method for associating a process on a multi-user device with a host address unique to a user session associated with the process.","A multi-user device allows for multiple users to use the same computer at the same time and\/or different times. A multi-user device might include, for example, a workstation that implements multiple user accounts such as Linux, Unix, Windows 2000 and Windows XP, among others, as well as remote access technologies such as Microsoft Windows Terminal Services, Citrix MetaFrame Services and the like. In addition to workstation, remote access, and home computer type devices, multi-user devices might also include a variety of appliances such as cash registers, office equipment, set top boxes, home automation controls, and the like in which multiple people or software processes may use the machine at the same time or at different times.","Multi-user operating systems generally run application programs in the context of a particular user session. A user session is associated with a person. Each user session emulates a single user workstation environment, providing an operating environment similar to that for which most application programs are designed. When multiple user sessions exist on the same multi-user device, it is normally possible for more than one copy of a given application program to be active at the same time.","In multi-user operating systems, a network adapter is a global system resource used to represent a network interface card (NIC) installed on the device. Host addresses are associated with network adapters. Because network adapters are global system resources, they are equally visible to applications running in each user session of a multi-user device. So despite being run in an emulated environment, applications running in one user session of a multi-user device use the same host addresses as applications running in every other user session of the device.","Various application programs designed for single-user devices require exclusive ownership of network resources called ports, which are associated with a host address. Examples include network server, collaboration, peer-to-peer applications, and the like. Many applications request exclusive access to a particular port of every host address assigned to the device, which effectively prevents multiple instances of the application from running even if multiple host addresses are associated with the device. While this may be acceptable on a single-user device, it prevents more than one person from running the application at any given time on a multi-user device.","Various network management tasks would benefit from being able to associate particular network activities and events with specific users. Examples include access control, auditing, bandwidth management, network blocking, network filtering, usage policy management, troubleshooting, quality of service management, prioritization of service, and the like. However, network communication packets are associated only with a host address. In the case of single user devices (e.g., workstations), knowing a host address is often sufficient to correlate network traffic with a user session, since only one user session may be active on a single user device at a time. In multi-user environments, however, the problem of associating a particular user session with network traffic is much more difficult, because the traffic could be associated with any of the user sessions running on the multi-user device.","Some existing applications implementing network management tasks were not designed to operate in an environment that includes multi-user devices, and incorrectly assume that each user session in the environment is associated with a unique host address. These applications may exhibit unreliable behavior, including data corruption, security breaches, and other problems, when deployed in multi-user environments.","Hence, there remains a need for a method and system that assigns a unique host address to each user session in a multi-user environment.","Accordingly, several objects and advantages of my invention are:\n\n","Further objects and advantages of my invention will become apparent from a consideration of the drawings and ensuing description.","Briefly stated, this invention relates to a system and method for associating a process on a multi-user device with a host address unique to a user session associated with the process. The host address associated with the process is used in all network communication packets sent to or from the process.","In a particular implementation, a host address for a user session is allocated and assigned to a network adapter on a multi-user device. A request by a process running in the user session that may bind network resources is subsequently intercepted, and the host address for the user session is assigned to a bind request. The original target of the request is then invoked with a potentially modified request.","This invention causes all network traffic sent to or from processes in a user session to use a host address unique to the user session, which solves many existing compatibility problems experienced in multi-user environments.","In brief overview and referring to , a multi-user computer system on which the invention may be practiced includes a multi-user operating system  which maintains a plurality of user sessions , each of which is associated with a potentially different person. Each user session  logically contains a plurality of processes , each process  representing a running instance of an application program. The multi-user computer system  is connected to a network  by means of a network adapter  controlled by the operating system . The network adapter  is a global system resource, and is not contained by any user session .","Referring to , and in brief overview, a method for associating a process on a multi-user device with a host address unique to a user session associated with the process, begins by allocating a host address for a user session (step ) and assigning it to a network adapter (step ). A request by a process executing in the user session that may bind a network resource is intercepted (step ). The intercepted request is modified such that the host address associated with it, if any, is replaced with the host address associated with the user session (step ). Finally, the original target of the request is invoked with the modified request (step ).","In greater detail, a unique host address is allocated for a user session (step ). In one embodiment, the unique host address is allocated using the dynamic host configuration protocol (DHCP). DHCP is a network protocol for assigning internet protocol (IP) addresses to devices on a network. Using DHCP, it is possible to request a unique network-address from a pool of network addresses previously configured by a network administrator. In another embodiment, the unique host address is allocated from a pool of addresses maintained in a data table contained in the multi-user device's memory. In yet another embodiment, the unique host address is allocated by choosing an unused address from a configured network subnet.","After a unique host address has been allocated, it is assigned to a network adapter (step ). In one embodiment, the host address is assigned to a network adapter representing a physical NIC attached to the multi-user device. In another embodiment, the host address is assigned to a virtual network adapter that is unique to the user session.","A request made by a process in the user session that may bind a network resource is intercepted (step ). A bind request may be explicit, as when a process calls the bind( ) function directly, or it may be implicit, as when a process calls the connect( ) function with an unbound socket.","Requests are generally made using application programming interface (API) calls. In one embodiment, API calls are intercepted by modifying the operating system to contain a replacement function having the same interface and the same name as the original function of the operating system. For example, a new function named \u201cbind\u201d may be provided to replace the \u201cbind\u201d function originally provided with the operating system.","In another embodiment, the original API function provided by the operating system is not replaced, but is modified in order to provide additional functionality associated with the invention. For example, additional code may be added to the existing API function by means of a subroutine or other sub-function inserted into the API function code.","In yet another embodiment, a network transport provider is installed in the operating system in such a way as to be called by the operating system when an application calls the existing API function. Windows 2000 provides an interface known as the service provider interface (SPI) as part of its Platform Software Development Kit (SDK). The SPI allows a program, called a layered service provider (LSP), to extend the operating system's existing networking functionality. A network transport provider is installed as an LSP and intercepts API calls made by user-mode applications using the facilities provided by the SPI.","In yet another embodiment, a device driver is installed in the operating system that uses operating system support to attach to the operating system's existing kernel-mode network drivers. A system service named IoAttachDevice, provided by the Windows 2000 operating system, is used by a filter device driver to attach to an object associated with the TCPIP.SYS network driver. IoAttachDevice allows I\/O requests bound for the target device to first be routed to the caller, effectively intercepting network requests.","The intercepted request is modified such that the host address associated with it, if any, is replaced with the host address associated with the user session (step ). In one embodiment, the intercepted request is modified by overwriting the data associated with the request with new data. In another embodiment, a new request is allocated with new data, and the new request used in place of the intercepted request. In any case, the request later passed to the original target (step ) comprises similar data to the original request, except that it may contain the host address associated with the user session.","Finally, the original target of the request is invoked with the potentially modified request (step ).",{"@attributes":{"id":"p-0034","num":"0036"},"figref":"FIG. 3","b":["502","502"]},"Active filter processes  receive the intercepted request. Depending on the nature of the intercepted request, the active filter processes  may access a socket context table . The socket context table  contains information about sockets that have been allocated. Information about each socket is stored in a socket context entry . Each socket context entry  comprises a socket handle that uniquely identifies the socket and a binary flag that specifies whether or not the socket has been bound.","If the request is WSPSocket( ), the active filter processes  create and initialize a socket context entry  and place it in the socket context table . If the request is WSPCloseSocket( ), the active filter processes  access the socket context table  and delete the socket context entry  associated with the socket handle specified in the request. If the request is WSPBind( ), WSPConnect( ), WSPConnectEx( ), or WSPIoct( ), the active filter processes  access the socket context table , locate the socket context entry  associated with the socket handle specified in the request, and read or write data from the socket context entry .","If the request is WSPBind( ), the active filter processes  access a session address mapping table . The session address mapping table  contains one session address mapping entry  for every user session on the multi-user device. The session address mapping table  is stored in a section of the Windows registry known that is shared amongst processes running in all user sessions of a multi-user device. The session address mapping table  is populated by the address allocator processes . Whenever a new user session is created that has no associated host address, the address allocator processes  allocate a unique host address using DHCP. The address allocator processes  assign the unique host address to an existing network adapter using an operating system function such as AddIpAddress( ), and create and initialize a session address mapping entry  before adding it to the session address mapping table  where it can later be found by the active filter processes .",{"@attributes":{"id":"p-0038","num":"0040"},"figref":"FIG. 4","i":"a ","b":["502","510","600","602","512","504","604","512","606","608","610","510","612","614"]},"In a similar embodiment, the WSPBind( ) function replaces the sin_addr field of the name parameter with the host address in the retrieved session address mapping entry  regardless of the previous value of the sin_addr field. Essentially, getting the socket context (step ) leads directly to determining the host address for the user session (step ). The process illustrated in is preferable when the invention is used in certain environments, and in conjunction with certain existing applications, as it allows processes that intentionally bind to specific host addresses to continue to do so.",{"@attributes":{"id":"p-0040","num":"0042"},"figref":"FIG. 4","i":"b ","b":["502","510","700","510","502","704","704","706","708"]},"The steps taken by the active filter processes  when the WSPConnectEx( ) function is invoked by the Winsock processes is identical to that illustrated in for WSPConnect( ), except that the call to the base transport's implementation of the WSPConnect function (step ) is replaced with a call to the base transport's implementation of the WSPConnectEx( ) function.","The invention provides a system and method for associating a process on a multi-user device with a host address unique to a user session associated with the process. By allocating a unique host address for each user session, and manipulating intercepted network requests such that processes may only bind to the host address associated with the user session, the invention solves many longstanding problems related to multi-user operating system environments. The invention permits multiple instances of an unmodified network server application to run in different user sessions of a multi-user system by removing contention over host addresses. Furthermore, it allows network tasks running elsewhere on the network to reliably assume that network packets with the same host address are associated with the same user session. Thus the reader will see that the method and system of the invention provides a powerful means for solving compatibility issues in multi-user environments.","Having described preferred embodiments of the invention, it will now become apparent to one of skill in the art that other embodiments incorporating the concepts may be used. It is felt, therefore, that these embodiments should not be limited to disclosed embodiments but rather should be limited only by the spirit and scope of the following claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0018","num":"0020"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0021"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0022"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0023"},"figref":"FIG. 4","i":"a "},{"@attributes":{"id":"p-0022","num":"0024"},"figref":"FIG. 4","i":"b "}]},"DETDESC":[{},{}]}
