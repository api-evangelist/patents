---
title: Mitigation of application-level distributed denial-of-service attacks
abstract: A system and method, implementable using an authenticating device, are provided for authenticating requesting devices such as mobile devices and other communication devices over a network. At least one group shared secret is provisioned on a plurality of requesting devices, which are further provided with other authentication credentials such as a shared secret for full authentication by the authenticating device. When authentication is sought, the requesting device transmits a pre-authentication request comprising one of the group shared secrets to the authenticating device, which verifies that group shared secret. The group shared secrets may be stored in volatile memory at the authenticating device. If the group shared secret is verified, the authenticating device will authenticate that same device in response to a subsequent authentication request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08793780&OS=08793780&RS=08793780
owner: BlackBerry Limited
number: 08793780
owner_city: Waterloo
owner_country: CA
publication_date: 20110411
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["1. Technical Field","The present application relates generally to mitigation of distributed denial-of-service attacks.","2. Description of the Related Art","Denial-of-service (DOS) attacks are a growing concern for website and web service providers. In a DOS attack, one or more attackers attempt to render a network resource effectively unavailable to legitimate users, typically by \u201cflooding\u201d the resource with communications requests. The flood of requests may exploit bugs or insecurities in the targeted computer resource, or else may simply overwhelm the targeted computer resource through the sheer volume of requests. For example, a DOS attack may be designed to consume the target network resource's available network bandwidth, server memory, processor time, hard drive or database space, request queues, database connections, or other resources. A DOS attack may not result in actual failure of the targeted network resource; however, the target may consequently fail to provide access to legitimate clients and requestors because it lacks the resources to service legitimate requests.","Some DOS attacks originate from a single attacking device that repeatedly issues requests to the targeted resource, optionally exploiting bugs or insecure features at the target. Other, distributed, attacks (termed distributed DOS attacks) originate from a number of attacking devices that may participate with or without their respective user's consent. Attacks are frequently implemented at the application level of the TCP\/IP stack, since the targeted computer resource's services are typically exposed at this level. For example, a DOS attack may use HTTP request messages and\/or web service application programming interfaces (APIs) as entry points.","The embodiments described herein provide a computing or communication device, service and method arranged to mitigate denial-of-service (DOS) attacks. In the description below, a DOS attack is considered to include a distributed (DDOS) attack unless explicitly stated to the contrary.","There is thus provided a method, comprising: receiving, at an authenticating device, a pre-authentication request comprising at least a reference for a first group shared secret, the first group shared secret being shared among a plurality of devices comprising a first device with which said pre-authentication request is associated; verifying, at the authenticating device, the received pre-authentication request using said first group shared secret; receiving an authentication request; and if the authentication request is determined to have been received from said first device with which the verified pre-authentication request is associated, authenticating the first device in response to the authentication request.","In one aspect of the foregoing, if the authentication request is determined not to have been received from any device with which any verified pre-authentication request is associated, the authentication request is discarded.","In another aspect, the method further comprises determining that the authentication request is received from said first device with which the verified pre-authentication request is associated by determining that said authentication request and said pre-authentication request were received from a single IP address.","In still another aspect, the pre-authentication request and the authentication request are comprised in a single message.","In a further aspect, determining that the authentication request is received from said first device with which the verified pre-authentication request is associated comprises determining that said authentication request comprises a token, the token previously being provided to said first device in response to said verifying.","In yet a further aspect, determining that the authentication request is received from said first device with which the verified pre-authentication request is associated comprises determining that said authentication request and said pre-authentication request comprise a same identifier.","The embodiments herein also provide the further acts of establishing a secure channel between the authenticating device and the first device in response to said pre-authentication request, the pre-authentication request comprising first device credentials for initiating the secure channel; and determining that the authentication request is received from said first device with which the verified pre-authentication request is associated by determining that said authentication request was received over the secure channel.","In other aspects, the pre-authentication request comprises an index of the first group shared secret and a hash comprising the first group shared secret. In still other aspects, the pre-authentication request comprises a payload and a signature, the payload comprising an index of the first group shared secret, a time interval number and a random number derived from the time interval number, and the signature comprising a hash of the first group shared secret and said payload. In the foregoing method, the authentication request may be received at the authenticating device. The first device may be a mobile device.","In still other aspects, the method may also comprise, prior to said receiving the pre-authentication request: providing said plurality of devices comprising said first device with said first group shared secret, said first group shared secret being selected from a group of shared secrets, said plurality of devices being selected from a set of devices; and providing a second plurality of devices of said set of devices with a second group shared secret selected from said set of group shared secrets, said second plurality of devices comprising said first device, wherein said verifying the received pre-authentication request using said first group shared secret comprises determining that the received pre-authentication request comprises at least a reference for at least one of the shared secrets comprised in said set of group shared secrets.","Still further, the method may also provide receiving, at the authenticating device, a further pre-authentication request comprising at least a reference for the second group shared secret from one of the second plurality of devices; upon determining that the second group shared secret is invalid, indicating to said one of the second plurality of devices that the further pre-authentication request has failed; and receiving a second pre-authentication request from said one of the second plurality of devices, said second pre-authentication request comprising at least a reference for a further group shared secret selected from said set of group shared secrets.","The embodiments herein also provide an authenticating device, comprising: a network communication subsystem; and a processor configured to enable: receiving a pre-authentication request comprising at least a reference for a first group shared secret, the first group shared secret being shared among a plurality of devices comprising a first device with which said pre-authentication request is associated; verifying the received pre-authentication request using said first group shared secret; receiving an authentication request; and if the authentication request is determined to have been received from said first device with which the verified pre-authentication request is associated, authenticating the first device in response to the authentication request.","In one aspect, the processor is further configured to enable, if the authentication request is determined not to have been received from any device with which any verified pre-authentication request is associated, discarding the authentication request.","In another aspect, the processor is further configured to enable determining that the authentication request is received from said first device with which the verified pre-authentication request is associated by determining that said authentication request and said pre-authentication request were received from a single IP address.","In still another aspect, the pre-authentication request and the authentication request are comprised in a single message.","In a further aspect, the processor is further configured to enable determining that the authentication request is received from said first device with which the verified pre-authentication request is associated by determining that said authentication request comprises a token, the token previously being provided to said first device in response to said verifying.","In yet another aspect, the processor is further configured to enable determining that the authentication request is received from said first device with which the verified pre-authentication request is associated by determining that said authentication request and said pre-authentication request comprise a same identifier.","In still a further aspect, the processor is further configured to enable: establishing a secure channel between the authenticating device and the first device in response to said pre-authentication request, the pre-authentication request comprising first device credentials for initiating the secure channel; and determining that the authentication request is received from said first device with which the verified pre-authentication request is associated by determining that said authentication request was received over the secure channel.","Further, the pre-authentication request may comprise an index of the first group shared secret and a hash comprising the first group shared secret. In another embodiment, the pre-authentication request comprises a payload and a signature, the payload comprising an index of the first group shared secret, a time interval number and a random number derived from the time interval number, and the signature comprising a hash of the first group shared secret and said payload.","In another aspect, the processor is further configured to enable: providing said plurality of devices comprising said first device with said first group shared secret, said first group shared secret being selected from a group of shared secrets, said plurality of devices being selected from a set of devices; and providing a second plurality of devices of said set of devices with a second group shared secret selected from said set of group shared secrets, said second plurality of devices comprising said first device, wherein said verifying the received pre-authentication request using said first group shared secret comprises determining that the received pre-authentication request comprises at least a reference for at least one of the shared secrets comprised in said set of group shared secrets. Further, the processor may be further configured to enable: receiving a further pre-authentication request comprising at least a reference for the second group shared secret from one of the second plurality of devices; upon determining that the second group shared secret is invalid, indicating to said one of the second plurality of devices that the further pre-authentication request has failed; and receiving a second pre-authentication request from said one of the second plurality of devices, said second pre-authentication request comprising at least a reference for a further group shared secret selected from said set of group shared secrets.","The embodiments herein also provide a computer program product comprising a computer readable medium, which may be non-transitory, bearing program code which, when executed by a processor, causes a computing device to carry out the methods recited herein.","These embodiments will be described and illustrated primarily in relation to an authenticating device, which may comprise one or more servers, databases, computing devices, communication devices, or other computing equipment adapted to communicate over a network (either fixed or wireless) with requesting devices. Requesting devices may comprise servers, personal computers, or other data processing or communication devices, such as wireless communication devices, communicating over fixed and wireless networks and public networks. It will be appreciated by those skilled in the art, however, that this description is not intended to limit the scope of the described embodiments to implementation on these particular systems or devices. For example, the methods and systems described herein may be applied to any appropriate communication device or data processing device adapted to communicate with another communication or data processing device over a fixed or wireless connection, whether portable or wirelessly enabled or not, whether provided with voice communication capabilities or not, and additionally or alternatively adapted to process data and carry out operations on data in response to user commands for any number of purposes, including productivity and entertainment. Thus, the embodiments described herein may be implemented on computing devices adapted for communication or messaging, including without limitation cellular phones, smartphones, wireless organizers, personal digital assistants, desktop computers, terminals, laptops, tablets, handheld wireless communication devices, notebook computers, entertainment devices such as MP3 or video players, and the like. Unless expressly stated, a requesting, computing or communication device may include any such device, and an authenticating device or server may include similar types of devices, configured to provide some or all of the authentication processes described herein. The configuration and operation of all such devices generally will be known to those skilled in the art. As another example, the methods and systems described herein are described generally in the context of a client-server system. However, it will be appreciated that this type of architecture is not strictly necessary.","In the primary examples described herein, communication takes place over a public network (such as the Internet or a similar network), adapted to implement the Internet Protocol Suite (TCP\/IP) as defined in RFC 1122 as published by the Internet Engineering Task Force, and optionally its predecessor, successor, and accompanying or complementary standards. Reference to a TCP\/IP-based communication system is made due to its prevalence; again, however, the person skilled in the art will appreciate that the embodiments described herein may be applied in environments and on networks implementing different communication protocols. For example, other protocols such as the user datagram protocol (UDP), which may also be provided over IP, can be implemented as well.","An exemplary network in which the within embodiments may be implemented is illustrated in . A number of requesting devices  (illustrated in  as devices , , . . . ) are potential clients or requestors for services or resources from a computing resource over a public or private network  (which may be the Internet). As noted above, the requesting devices  may comprise wireless communication devices, although the devices may certainly access the network  over a fixed connection. In the example of , however, wireless devices are illustrated and paths for both data and voice traffic (if the requesting devices  are provisioned for voice communication) are shown.","A requesting device 's access to IP networks and to a public switched telephone network (PSTN) , if applicable, can be provided through the wireless network , which comprises one or more nodes  configured for communication in accordance with a suitable mobile telephony standard. In turn, the wireless network  provides the requesting device  with connectivity to the Internet or other public wide area network , and thence to one or more services and systems. Alternatively, the requesting device  may access the network  without using the wireless network . Instead, the requesting device  may gain access to the network  via an access point or at a public or private Wi-Fi hotspot, represented by the access point .","The services or resources accessible over the network  can include a host system . Access to the host system  can be provided through one or more routers (not shown), and computing devices of the host system  can operate from behind a firewall or proxy server . A proxy server provides a secure node and a wireless internet gateway for the host system . The proxy server intelligently routes data to the correct destination server within the host system . The host system  can provide services such as a messaging server, other personal information stores, a mobile data server, an HTTP server, and access to fileservers and application servers within the host system. The host system  can also provide the requesting device  with access to other servers and services beyond or behind the host system , i.e., not necessary forming part of the host system  itself.","For some wireless networks  or other networks, the requesting device  may be registered or activated with the respective network. A process for identifying a subscriber to a cellular network using a SIM or other identifier card is described below. Other methods of registering or identifying the requesting device  to various networks will be known to those of ordinary skill in the art. However, registration or activation may not be required for all wireless networks , LANs or WLANs, as some networks may allow access without prior registration or activation. The requesting device  may also be provisioned or configured to access one or more networks. Methods of provisioning services on a requesting device  will be generally known to those skilled in the art, but as a non-limiting example, a request for registration may be sent from the requesting device  to a registration server of a service (not shown). If the request is approved, the registration server may transmit to the requesting device  a service book or similar data item containing data and instructions to enable the requesting device  to provision the service. The service book, when received at the requesting device , may be self-executing, and permits the user to enter account information relevant to the associated service. This information is then transmitted from the requesting device  to a provisioning server of the service provider (not shown), which then creates a service account associated with the requesting device . Provisioning may also be carried out in compliance with the OMA DM (Open Mobile Alliance Device Management) specification version 1.2 or its predecessor or successor versions, published by the Open Mobile Alliance Ltd.","Additionally or alternatively, one or more online services represented by web server  are accessible over the network  by the requesting devices , by user devices connected to the host system  LAN, or by other user devices, not shown in . The online service may implement one or more types of web services, such as a web server, messaging service, social network service, push service, online commerce or banking service, content service (e.g., music service, publisher, newsreader or content aggregating services), discussion forums, and the like. An online service may also include a communications network or access thereto. These services may be accessible using a browser client application on the requesting device , or using other applications, applets, widgets and the like which may operate in a browser environment or in a different runtime environment; these applications and other modules used to access the online services are configured to issue requests and to receive responses over the network . The client application may be a dedicated application for a corresponding online service, such as an entertainment or productivity application (music player or document editing application) designed to communicate with a corresponding entertainment service or document service (such as a music library or store, or a cloud-based software as a service provider or file server).","As with the host system , access to these other online services represented by the web server  may require subscription or registration. In addition, once the subscription or registration is established, further access to the data or services provided by these services may be restricted only to authenticated users who have presented adequate security credentials to permit the online service to verify their identity or legitimacy. A common method of authenticating requestors for services is to verify that the requestor has proof of knowledge of a secret shared by both an authenticator (which may be comprised in the online service itself, or provided as a third party service operating on behalf of the online service) and the requestor. This secret is held only by the authenticator and the particular requestor; in that way, the authenticator can use the requestor's proof of knowledge of the shared secret to verify the requestor's identity. In a simple embodiment, the requestor may transmit a password (either in the clear or in an obfuscated or encrypted form) to the authenticator, which then looks up the authenticator's copy of the password and verifies whether the received password matches the authenticator's stored copy. The password is thus the shared secret. In the example of , the web server  is in communication with an authentication server . Passwords or other user credentials can be stored in a database  accessible by the authentication server. If the password matches, then the requestor is authenticated, since it is presumed that the secret is shared only between the online service (or authenticator) and the requestor. Upon authentication, the authenticator grants access to the online service's services or data. Optionally, the authentication server (or a communication server associated with the authenticator) can transmit a message to the requesting device  to notify the requesting device  that it has been authenticated.","Other methods for authenticating requestors will be known to those skilled in the art. For example, proof of knowledge of the shared secret may comprise some other value that is independently derivable by each of the requestor and authenticator using secret information shared exclusively by the two parties. When the requestor seeks to be authenticated, the requestor derives this value and generates a message comprising this derived value, and transmits this message to the authenticator. The authenticator, in turn, generates the same value from its version of the shared secret and compares the result to the received message in order to authenticate the requestor.","Regardless of the precise means by which authentication is accomplished, typically the authenticator's copy of the shared secret, certificate, or other data used to authenticate the requestor is stored in one or more databases, such as the database , or similar data storage structure, particularly when there may be a large number (on the order of thousands or millions) of potential requestors. Thus, each time a request is received for authentication, the authenticator must query the database for the appropriate data to validate the authentication request. Regardless of how efficiently the proof of knowledge is transmitted or computed, the database query is inherently slow. This presents a vulnerability that can be exploited through a DOS attack in which multiple requesting devices initiate requests for authentication. An illegitimate request for authentication\u2014that is to say, a request generated by an attacker that is not intended to result in authentication\u2014received over the network  may be indistinguishable from a legitimate request generated by a user that is intended to result in authentication. In some scenarios, the originating address of the request may be spoofed by the attacker to appear to come from a legitimate requester, or at least not from a known illegitimate source. Thus, the online service or authenticator may not be able to detect the onset of a DOS attack. Servicing each individual request for authentication will necessitate a database query. Attackers may leverage the similar appearances of legitimate and illegitimate requests and the overhead involved in querying the database to orchestrate a DOS attack. Since attackers may steal resources from other computers on the network in order to conduct the DOS attack (for example by deploying a botnet, using malicious software to infect and take over the operation of other networked computers which are then used to initiate the requests) the consumption of network resources to mount a DOS attack is often not a concern to the attacker.","A number of countermeasures for DOS attacks exist. One preventive technique is to overprovision the online service and\/or authenticator to increase its capacity to handle spikes in requests. This technique results in a waste of resources, since they are not needed most of the time during normal operation. Another is to limit the number of concurrent connections or bandwidth available to individual client devices, which may throttle accesses by legitimate requestors during peak periods. Another option is to maintain a blacklist of IP addresses that are considered \u201csuspect\u201d or associated with illegitimate activity such as spamming and DOS attacks, or a whitelist of IP addresses associated with legitimate requestors. However, the blacklist and whitelist must be maintained and updated on a regular basis, and furthermore, the IP address associated with a legitimate requestor may change, resulting in false positives (or negatives) when a requesting IP address is filtered against the blacklist or whitelist. Finally, firewalls and routers, while they may be configured to reject certain types of requests that may be employed in DOS attacks, may be ineffective when the attacker's request resembles a legitimate request.","Other countermeasures for DOS attacks shift the burden of mitigating attacks on the client device itself, by requiring \u201cproof of work\u201d from the client. When a client device seeks to be authenticated, the authenticator transmits a puzzle (for example, a cryptographic problem) to the client device to be solved. The client device must dedicate resources to the solution, then transmit a response with the solution back to the authenticator for verification before the authenticator engages in any resource-intensive authentication steps. The puzzle consumes resources at the client device; thus, if the device was in fact an attacker, its ability to flood the authenticator with authentication requests is attenuated. However, this effect is reduced when the attacker is a high-powered workstation or when the attacker is not concerned with the waste of resources by the attacking computers, and it adversely affects legitimate requesting devices, which may be low-powered devices with constrained computing resources. It is therefore desirable to provide a countermeasure to DOS attacks that reduces the incidence of requests from illegitimate clients for \u201cexpensive\u201d processes (such as database queries) that need not be dependent on the other types of countermeasures mentioned above, and that is less likely to prevent legitimate clients from accessing the service.","Thus, in accordance with a first embodiment, a group password or shared secret is provided to each legitimate requesting device. The same group shared secret is held by every requesting device, and is stored in memory at the online service, rather than in a database. Referring to , each of the requesting devices  is provided with the group shared secret. When one of the requesting devices wishes to authenticate at the online service, the requesting device  transmits a first authentication request (a \u201cpre-authentication\u201d request) comprising the group shared secret, or proof of knowledge of the group shared secret, to the authenticating device. In the example of , the requesting device  first opens a connection with the authenticating device, then transmits the pre-authentication request. This pre-authentication request may be transmitted to the web server , which is the client device-facing module in the online service. In one variant of this embodiment, the authenticator copy of the group shared secret is stored in memory at the web server . The web server  may thus be considered to be the first authenticating device in this embodiment.","The web server  retrieves the group shared secret from its memory and compares it to the group shared secret received in the pre-authentication request or to the proof of knowledge provided in the pre-authentication request. For example, the requesting device  may compute a hash of the group shared secret and transmit the hash only to the web server . The hash may be accompanied by (or concatenated or otherwise combined with) a nonce or similar value to mitigate the possibility of a replay attack, if the requesting device 's transmission is intercepted by a third party. The web server  then retrieves its copy of the group shared secret from memory and computes its own hash. If the hash matches the received hash, then the pre-authentication request is successful and the requesting device is verified as a legitimate device. At this stage, the requesting device  has not yet been completely authenticated; the requesting device  has only been identified as belonging to a set of requesting devices  that is believed to be legitimate, but the password or other authentication data associated with the account or other service to be accessed at the online service has not yet been provided to the authenticator. However, this initial pre-authentication step verifies that the requesting device  is, at least, likely to be a legitimate requestor. Since the group shared secret is stored in memory, it is very quick to access, particularly when compared to the time and resources required to query a database.","In a second variant of this embodiment, the group shared secret is not stored in the web server 's memory, but rather is stored in memory at the authentication server . Thus, when the pre-authentication request is retrieved, the authenticator copy of the group shared secret is retrieved from the authentication server 's memory and compared to the group shared secret or proof of knowledge received in the pre-authentication request, as described above. Thus, in this embodiment, the authenticating device may comprise the web server , the authentication server , or both.","In the foregoing embodiment, if the pre-authentication request is successful, a response is sent by the authentication device to the requesting device  to confirm that the pre-authentication was indeed successful. This response may include a token or other value for use by the requesting device  when requesting complete authentication. The requesting device  constructs a new message as a second request (the \u201cauthentication request\u201d), this one including the token or other value received from the authenticating device as well of proof of knowledge of a secret shared exclusively between the authenticating device and the requesting device , such as the aforementioned password or a value derived by the requesting device  from secret information. This proof of knowledge may, again, be signed or encrypted. Upon receipt of the authentication request, the authenticating device determines that the request was received from a legitimate requesting device . In this example, this can be done by determining that the correct token or value from the confirmation message sent to the requesting device  was received in the authentication request. If the correct token or value was received, then the request is deemed to have been received from a legitimate source, and the authenticating device  then queries the database (such as the database ) for the shared secret needed to verify the shared secret portion of the authentication request. If the correct token or value was not received, then the authenticating device closes the connection between it and the requesting device , and does not query the database  for the shared secret. Since presumably only legitimate requesting devices  possess the group shared secret, this process will reduce the number of database queries initiated as a result of an illegitimate authentication request.","However, if the group shared secret in the above embodiment is disclosed by even one device of the set of legitimate requesting devices, the authenticating device again is exposed to an increased risk of a DOS attack. Accordingly, an enhancement to this scheme is illustrated in .",{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 2","FIG. 1"],"b":["210","200","100","100","100","100","100","100","100","210","135","140","210","100"],"i":["a","b","c","d","e","f"]},"The provisioning service  stores a number of possible group shared secrets . In , only five group shared secrets , , , and are illustrated for ease of reference. There may be N group shared secrets, where N may take any value such as 1000. Typically, N will be less than the number of requesting devices  that may communicate with the online service, authenticating device, web server  or authenticating server  or combination thereof.","The group shared secrets  comprise a set of distinct values, such as quasi-random values generated using any suitable generation algorithm or hashes of predetermined values or strings. Advantageously, each group shared secret within the set  is of a sufficient length that it cannot be easily spoofed or guessed by an attacker. In one embodiment, each group shared secret is 256 bits in length. Even though an attacker may attempt to guess at a 256-bit group shared secret value in a brute force attack (in which the attacker issues a series of pre-authentication requests using different values until one is discovered to match a stored group shared secret), by the time the attacker has cycled through enough requests to hit upon an actual group shared secret value, the authenticating device  may be able to determine that the requests originating from the attacker's IP address are illegitimate, and block further requests from that address.","Each requesting device  in the pool of requesting devices is provided with one of the group shared secrets from the set . These group shared secrets may be embedded in each requesting device  at the time of manufacture, or provisioned at a later date. Since there are likely more requesting devices  than group shared secrets, some devices  will share the same group shared secret. Thus, in , requesting devices , , and each store a copy of the first group shared secret . Requesting devices , and each store a copy of the second group shared secret . Some of the group shared secrets in the set  may not be allocated to any device  at all, or else they may be allocated to devices that are not illustrated in the figures. The authenticating device, for example the web server  or the authenticating server , also maintains the set of group shared secrets . While the provisioning server  or the authenticating device may maintain a record of which group shared secret was allocated to which requesting device , this is not mandatory.","If one of the group shared secrets, for example , is subsequently found to be compromised, the authenticating device and the provisioning server  can delete that group shared secret from the set , or else mark the group shared secret as being invalid. This will have the effect of invalidating the group shared secret held by requesting devices , and , which will prevent them from successfully completing pre-authentication. However, the remaining devices , and , and any other requesting device  that does not have the group shared secret , may still successfully pre-authenticate with the group shared secret that they do possess. For example, if there are N=1000 group shared secrets defined in the set  and they are substantially equally allocated among all requesting devices  in the pool of legitimate requesting devices, then if an attacker compromises only one of those group shared secrets and that group shared secret is invalidated, 99.9% of the pool of legitimate requesting devices will still be able to pre-authenticate with the authenticating device, since their group shared secret will not be invalidated. If the group shared secrets held by one hundred of the requesting devices in the pool of requesting devices were compromised through exposure to an attacker, then at most one hundred group shared secrets may be compromised, or 10% of the entire set of N=1000 group shared secrets. Given that any group shared secret therefore has a 10% chance of being compromised, 90% of the legitimate requesting devices  would still be able to pre-authenticate.","A further enhancement is illustrated in , in which each device  has been provided with two group shared secrets instead of only one. The allocation of group shared secrets from the set  to each device  may be carried out in a random or quasi-random fashion. In , it can be seen that the first and second requesting devices , each store group shared secrets , , whereas the third and sixth devices , each store group shared secrets , , while the fourth device stores group shared secrets , and the fifth stores group shared secrets , . Thus, in this example there are four groupings of requesting devices . If any one of these devices is compromised and its group shared secrets discovered by an attacker, then upon determination that the device and its group shared secret have been compromised, those two group shared secrets will be marked as invalid or deleted from the set . However, despite the invalidation of two group shared secrets, no more than two devices in this example will be rendered unable to accomplish a successful pre-authentication, because no more than two devices (such as and or and ) possess the same pair of group shared secrets. Accordingly, if one device, such as , is compromised, all of devices , , and will still be able to pre-authenticate because they will have at least one valid group shared secret that can be used to attempt pre-authentication. The process for pre-authentication is described in further detail below.","Referring back to the example in which N=1000 and one hundred of the requesting devices  are compromised, in the example of  it can be seen that up to 200 or 20% of the group shared secrets would be compromised (assuming that each of the one hundred compromised devices  was in possession of a unique pair of group shared secrets). Accordingly, given that up to 20% of the group shared secrets may be compromised, approximately 96% or possibly more of the legitimate requesting devices  will still be able to pre-authenticate, since each device is in possession of two group shared secrets.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 4","b":["100","212","100","214","214","214","100","214","214","214","100","214","214","214","100","214","214","214","100","100","214","214","214","100","100","100","100","100","100","100","100","100","100"],"i":["a ","a","c","e","b ","a","c ","d","c ","b","d ","e","d ","a","d","e","e ","f ","b","c","e","a ","b","c","d","e ","f ","c","f ","f ","c"]},"Again, referring back to the example in which N=1000 and one hundred of the requesting devices  are compromised, in the example of  it can be seen that up to 300 or 30% of the group shared secrets could be compromised (again assuming that each of the one hundred compromised devices  was in possession of a unique pair of group shared secrets). Consequently, approximately 97.6%, or possibly more, of the legitimate requesting devices  would likely have at least one uncompromised group shared secret and would therefore still be able to pre-authenticate.","The total number of group shared secrets in the set  may be selected to be any appropriate number by a person of ordinary skill in the art. It will be appreciated, however, that even where each group shared secret is 256 bits in length, up to one million distinct group shared secrets could be stored in a small amount of memory (approximately 32 MB). Thus, in practice where there is a large number of legitimate requesting devices \u2014on the order of hundreds of millions of devices \u2014a significant number of legitimate requesting devices  would likely be able to pre-authenticate with one of their group shared secrets even if a percentage of the devices were compromised and their group shared secrets invalidated. As N and the number of group shared secrets increases further, the percentage of legitimate requesting devices  that will be prevented from pre-authenticating will drop off to an insignificant figure.","The implementation of the above group shared secret system will now be described with reference to an authentication process such as might be carried out by a requesting device , an authenticating device , and an authentication database . Turning to , a simple communication flow diagram is illustrated. The requesting device  initiates the authentication process by transmitting a request  to the authenticating device . It will be appreciated that if this communication is taking place over a TCP\/IP network such as the Internet, the transmission of the request  may be preceded by a standard TCP three-way handshake process in order to place the authentication device , which may be a server, in a \u201clisten\u201d state so that it is receptive to the request  (recall that, as noted above, communications need not take place using the TCP\/IP protocol, but may employ any other suitable communications protocol or method). At that stage, additional DOS countermeasures may be implemented, which are not described in detail here but will be known to those skilled in the art. For example, the TCP handshake procedure may be implemented with TCP SYN cookies to reduce the likelihood of a DOS attack due to a SYN flood.","The request  transmitted by the requesting device  includes a pre-authentication message payload that includes, at a minimum, some proof of knowledge of a group shared secret. This group shared secret is selected from a subset group shared secrets stored at the requesting device ; the size of the subset of group shared secrets is described above. The proof of knowledge may consist of the group shared secret itself, but advantageously the group shared secret is obfuscated so that observers cannot learn the group shared secret by intercepting the request , so the request  comprises at a minimum an indicator or reference to the group shared secret. For example, the group shared secret may be hashed, and provided in the payload together with an index value identifying the group shared secret in the authentication device 's group shared secret store. The hash may incorporate not only the group shared secret, but also a salt, nonce, timestamp, or other value that may be used to mitigate potential replay attacks due to interception by a third party.","The authenticating device  may, as described above, comprise a server or other network computing resource, and may be comprised within one of various network resources in communication with the requesting device , such as the web server , authentication server , or in other embodiments implemented within or in combination with the host system  and firewall . The authenticating device  may further comprise programming code embodied in a program medium, such as a non-transitory computer-readable medium, executable to carry out the functions described herein. This programming code may be obfuscated to deter detection or reverse engineering. The authenticating device  receives the request  and extracts information from the request to verify the requesting device 's claimed proof of knowledge of the selected group shared secret. If the group shared secret is simply sent in the clear, the authenticating device  may simply look up the received group shared secret in its own set of group shared secrets stored in memory. If the group shared secret is provided in hashed form with an index value, the authenticating device  can use the received index value to look up the corresponding group shared secret in memory, and then compute the hash of this group shared secret value to determine if it matches the hashed value received from the requesting device . If there is a match, then the requesting device  is pre-authenticated and the authenticating device  may send a response  confirming pre-authentication to the requesting device .","It will be appreciated by those skilled in the art that this group shared secret lookup can be performed much faster and with less burden on computing resources than a full authentication requiring a database query or a computationally \u201cexpensive\u201d or intensive cryptographic process. If a hash is used, the hash may be computed relatively quickly, and does not impose a significant additional burden on the authenticating device 's resources. Thus, this pre-authentication request-response process provides a fast check on whether the requesting device  is likely a legitimate client seeking authentication.","Subsequent to the successful pre-authentication, the requesting device  sends an authentication request  to the authenticating device . The authentication request includes authentication information, such as proof of knowledge of a shared secret that is shared exclusively between the requesting device  and the authenticating device , as well as other optional information, discussed below. To minimize the likelihood of a replay attack, the authentication request  should be transmitted within a determined time interval t, which is discussed in further detail below. When the authentication device  receives the request , it determines whether the request  was received from a requesting device  that was determined to be likely legitimate; and if so, the authenticating device  queries  the authentication database  for the authentication information needed to verify the requesting device 's claimed proof of knowledge of the exclusive shared secret. The response from the database is received at , and the authentication is completed by the authenticating device . A response  based on the outcome of authentication is then transmitted to the requesting device .","Optionally, before the authentication request  is transmitted, the authenticating device , having determined that the requesting device  is likely legitimate, may upgrade the connection between it and the requesting device  to a more secure connection, for example implementing TLS or another form of encrypted communication.","In the foregoing embodiments and in , an authentication server  and a separate authenticating device  have been described for verifying the pre-authentication and authentication requests. However, in other embodiments the component or module carrying out pre-authentication may be separate from the component or module carrying out authentication, as may be the component or module of the authenticating device  computing hashes or the component or module storing all group shared secrets. Each of these components may be hosted on a separate component or provided in a separate code or hardware module. In other words, the device carrying out the pre-authentication described above\u2014as described above, the authenticating device \u2014need not be the same network resource that will process and authenticate the authentication request , although in this embodiment the authenticating device  carries out all of these functions. The authentication system as a whole can comprise a system of independent but cooperating components: a pre-authentication module or process, and an authentication module or process. The pre-authentication module and process thus effectively operate to grant the requesting device  with permission to seek full authentication by the authentication module or process. The pre-authentication module or process thus communicates with the authentication module or process as necessary to provide the authentication module or process with any needed information to confirm that a subsequently received request for full authentication is considered legitimate, although in some embodiments the subsequent request may be sufficient in itself to provide the needed confirmation. The authenticating device  described herein may provide only the pre-authentication function. For ease of reference herein, however, the pre-authentication and authentication functions are all generally described as being carried out by the authenticating device .","In a further embodiment, group shared secrets need not be explicitly stored at the authenticating device . In a further embodiment, a hash function and a global secret known only to the authenticating device  is provided. Each requesting device  is provisioned with an identifier n and a hash of the global secret and identifier, K=(s|n). The requesting device is not provided with the hash function or the global secret itself. When pre-authentication is sought, the requesting device  may then send only (n, K) to the authenticating device , which in turn may compute the hash to pre-authenticate the requesting device . The pre-authentication computation thus avoids the need to explicitly store group shared secrets, and may be implemented in a hardware module either with the authenticating device  itself or in operative communication therewith.","The process of authentication is set out in further detail in . Once a connection is open between the authenticating device  and the requesting device , the requesting device  transmits a pre-authentication request comprising a selected group shared secret, or proof of knowledge of the selected group shared secret, to the authenticating device  at . At , the authenticating device  receives the request. At , the authenticating device  determines whether the received group shared secret is valid. This determination includes looking up a group shared secret value, in the authenticating device 's memory, and can also include determining the status of that group shared secret; for example, the group shared secret may be marked \u201cinvalid\u201d as a result of an earlier determination that it had been compromised. A determination that a group shared secret is \u201cinvalid\u201d is advantageously stored on a permanent or quasi-permanent basis.","If the authenticating device  determines that the received group shared secret is invalid, the authenticating device  may either, at , close the connection with the requesting device  or transmit a response to the requesting device  to try again with a different group shared secret, if the requesting device  stores more than one group shared secret. If the received group shared secret is valid, then at  a confirmation message is transmitted to the requesting device . This confirmation is received at , and then at some point later, the requesting device  transmits an authentication request , which is received by the authenticating device  at . At  it is determined whether the received authentication request is a legitimate request. An example of this process is described below with reference to . If the request is determined to be illegitimate, then at  the connection is closed. The authenticating device  may further maintain a record of illegitimate requests received from a given requesting device  (i.e., from a given IP address, since if communications are taking place over TCP\/IP it is likely that the authenticating device  can be reasonably certain of the requesting device 's IP address). If a large number of illegitimate requests are received from a given IP address, that address may be blacklisted or otherwise blocked by the authenticating device .","If the request is determined at  to be legitimate, at  the authenticating device  constructs a query for the authentication database . The authentication database  receives this query and looks up the necessary authentication information at , then transmits a response back to the authenticating device  at . In an alternate embodiment, no database lookup may be necessary; instead, a cryptographic computation may be performed using the contents of the query to determine if the authenticating device  should be authenticated. If, based on the response received, the authenticating device  determines that the credentials received in the requesting device 's authentication request are valid at , then it is determined that at  the device is an authenticated device . The device  may then be granted access to the online services or data for which it was authenticated. If it is determined at  that the credentials are not valid, then the connection is closed at . Again, the authenticating device  may maintain a record of failed authentication requests associated with a given IP address, and\/or associated with the group shared secret transmitted in the request . If a large number of failed authentication requests are received from this device, or in association with this particular group shared secret, then it may be determined that either the device  has been compromised, and\/or the group shared secret has been compromised. Steps may be taken accordingly to blacklist the device , and to invalidate or delete the group shared secret at the authenticating device .","It will be appreciated by those skilled in the art that the authentication query received from the requesting device  is identified by the authenticating device  as likely being received from a requesting device that was in fact successfully pre-authenticated using a process such as those described above. The nexus between the successful pre-authentication request and the subsequent authentication query may be provided by one or more of a number of different means. One example is the token included in the second request sent by the requesting device  described above. The nexus is thus the provision of this token by the authenticating device  to the requesting device  in response to the pre-authentication request. Another example of a nexus is the receipt of the authentication request from the same IP (or other network) address as the pre-authentication request, since the IP address of a single user device is unlikely to change within the period of time spanning the receipt of the pre-authentication and authentication requests. Still another example is the inclusion of a single identifier (other than a network address) in both the pre-authentication and authentication request. As still a further example, the pre-authentication request may comprise an initial asymmetric encryption handshake message for initiating a secure, encrypted connection between the requesting device  and the authenticating device ; the subsequent authentication request would then be received over the secure channel thus established, once the pre-authentication is successful. The fact of the receipt of the authentication request over this secure channel thus provides the nexus with the successful pre-authentication request.","In still a further embodiment, the nexus may comprise the concurrent transmission of both the pre-authentication and the authentication request: rather than transmit these requests consecutively, they may be transmitted together in the same message. The authenticating device  receives this combined pre-authentication and authentication request, and processes the pre-authentication request first generally as described above. If the pre-authentication process is successful, then the authenticating device  proceeds to the authentication process with the further credentials provided by the requesting device  in the authentication portion of the message. This combined process avoids delay inherent in providing confirmation to the requesting device  and awaiting the further query. In a variant of this combined request, the payload of the authentication request (the shared secret, for example) is comprised in the pre-authorization request hash.","One particular implementation of group shared secrets in the pre-authentication stage is illustrated in . At , once a connection has been opened between the requesting device  and the authentication device , the requesting device  generates a message with a payload comprising at least the group shared secret or a group shared secret reference or indicator. The message may also include countermeasures against various attacks. In the example of , additional information is included as a countermeasure to a replay attack. Thus, in this example payload P=(T, G, r), where T is a time interval number (for example, a number identifying a number of hours or other number of units of time from an arbitrarily selected epoch), Gis an index number corresponding to a selected group shared secret stored at the requesting device , and r is a random or quasi-random number. The value r is used to mitigate replay attacks, as explained below. r can be changed with each time interval T. In some embodiments, the derivation or generation of r takes place at the time the message payload is generated; in other words, the value of r need not be known in advance to either the requesting device  or authenticating device  before the first request message containing that value of r is sent. The value of r may be derived from T using a pre-determined method known by the requesting device  and optionally the authenticating device . The time interval number T and optionally the random number r is also independently derivable or otherwise known to the authenticating device ; however, the requirement that the authenticating device  be capable of independently determining r is not mandatory.","Next, at , a signature H(P|S)is computed from a hash of a concatenation of P and S, where Sis the group shared secret corresponding to the index number G. A message is then sent at  comprising both the payload P and the signature H(P|S). Thus, the requesting device sends the authenticating device  proof of knowledge of a group shared secret, without disclosing the group shared secret in the clear to any observers.","The message is received at  by the authenticating device . The authenticating device  then extracts T, G, r from the payload at , and first determines whether r has been used recently at . If it has, then the request may be a suspected replay attack, and the connection is closed at . The authenticating device may store values of r from previously received messages or compute r for corresponding time interval number values T, for a given range of T values. Since the T value determined at the requesting device  should generally correspond to the value known at the authenticating device  (with some allowance for error), the authenticating device  need only store or compute values of r corresponding to the current value of T as well as the most recent values of T, as well as near future T values. If a received request contains an r determined by the authenticating device  to have been used in a previous request, particularly where that value of r corresponds to the current T or a nearby range of T, then the request may be suspected to be one of a number of reply attacks, and the request may be ignored. However, some tolerance may be provided by the authenticating device  for repeat requests apparently originating from the same source requesting device , since the repeated request may be the result of the requesting device  failing to receive acknowledgement of an earlier request transmission. However, if the received r is determined to have been used several times within the corresponding time interval T or nearby T, then the request may be strongly suspected to be one of a number of replay attacks and ignored. If the received r does not match a stored value of r in that case, then the request is invalid.","Otherwise, if r is valid, the authenticating device  looks up a group shared secret in its set of group shared secrets at  using the index value G, and determines whether the group shared secret corresponding to Gexists and is valid. If it is not (for example, if the value falls outside the range of stored group shared secret index values), then at  the authenticating device  may close the connection with the requesting device , or else may notify the requesting device  to try again with a different group shared secret. If the located group shared secret is valid, then at , the authenticating device  computes its own signature, H(P|S), using its located group shared secret value and the provided payload P at . If it is determined that H(P|S)=H(P|S)at  then a confirmation message, optionally comprising confirmation value C, is transmitted at  to the requesting device . C may be a value generated at the authenticating device  that the requesting device  must return in its authentication request.","At a subsequent time, which is expected to occur shortly after the pre-authentication of the requesting device , the requesting device  transmits an authentication request, as indicated in  at . The authentication request comprises proof of knowledge of a shared secret Sthat is known only to the authenticating device  and the requesting device . As described above, this may be a password or other secret value, and the authentication request may be constructed using known methods for generating authentication request message payloads, obfuscating or encrypting shared secret information, and so forth. The authentication request may include the confirmation value C, if it was provided. The authentication request is received at , and if the optional value C was included, it is extracted at  and it is determined at  whether it is valid. If it is not, the connection with the requesting device  is closed at . Alternatively the authenticating device  determines whether the request was received from a requesting device  that was previously and recently pre-authenticated. If the authentication request is received during the same session as the pre-authentication request, then the authenticating device  may determine that the authentication request received at  was received from a legitimate requesting device .","Upon determining that the authentication request is legitimate, the authenticating device  queries the authentication database  for the authentication information necessary to verify the received information in the authentication request. The query may comprise a requesting device  identifier included in the authentication request. The authentication database receives the query at , and returns a response at . The response from the database  is used by the authenticating device  to determine whether the proof of knowledge received in the authentication request is valid at , for example, whether the shared secret used to generate the information received in the authentication request matches the shared secret stored in the authentication database  for that identified requesting device . If the shared secret used to generate the authentication request is not valid, then again the connection is closed at . If the shared secret is valid, then at  the device  is authenticated.","As noted above, if one of the group shared secrets is rendered invalid because it is compromised, during the pre-authentication stage illustrated in  or  the authenticating device  may notify the requesting device  that the pre-authentication request has failed and that the device  should retry with a different group shared secret. Alternatively, the device  may determine that a new attempt should be made with a different group shared secret even if no notification is received from the authenticating device , simply because the connection was closed without a confirmation message.  illustrates a process that may be implemented by the requesting device  during the pre-authentication stage. At  the requesting device  selects a first group shared secret stored at the device, and at  the pre-authentication request is transmitted using the first group shared secret. If, in response to the pre-authentication request the requesting device  receives a notification to try again, or if the connection with the authenticating device  is closed at , then at  the requesting device  selects a further group shared secret that it has stored, and transmits a further pre-authentication request with the further selected group shared secret at . This process from  through  may be repeated until a confirmation message is received and the requesting device  is able to transmit the authentication request, or until the requesting device  has tried each of the group shared secrets stored thereat.","The embodiments described herein for implementation on a computing device may be implemented on a communication device such as that illustrated in . The communication device may communicate with other devices over a wireless communication system. The communication device  may be a mobile device with two-way communication and advanced data communication capabilities including the capability to communicate with other mobile devices or computer systems through a network of transceiver stations. The communication device  can also have voice communication capabilities. However, it will be appreciated by those skilled in the art that the foregoing embodiments do not require a dual-mode communication device; it is sufficient for the device  to be provisioned for data communication only via a fixed or wireless connection. Wireless connectivity may be provided by means of on-board communication hardware, such as the communication subsystems ,  described below, or using accessories such as a wireless dongle or mobile hotspot device, not shown.",{"@attributes":{"id":"p-0087","num":"0086"},"figref":"FIG. 10","b":["100","100","1002","100","1004","100","1003"]},"The communication subsystem  receives messages from and sends messages to a wireless network  (). In this exemplary embodiment of the communication device , the communication subsystem  is configured in accordance with one or more of Global System for Mobile Communication (GSM), General Packet Radio Services (GPRS) standards, Enhanced Data GSM Environment (EDGE) and Universal Mobile Telecommunications Service (UMTS). New standards are still being defined, but it is believed that they will have similarities to the network behavior described herein, and it will also be understood by persons skilled in the art that the embodiments described herein are intended to use any other suitable standards that are developed in the future. The wireless link connecting the communication subsystem  with the wireless network  represents one or more different Radio Frequency (RF) channels, operating according to defined protocols specified for GSM, GPRS, EDGE, or UMTS, and optionally other network communications. With newer network protocols, these channels are capable of supporting both circuit switched voice communications and packet switched data communications.","Other wireless networks can also be associated with the communication device  in variant implementations. The different types of wireless networks that can be employed include, for example, data-centric wireless networks, voice-centric wireless networks, and dual-mode networks that can support both voice and data communications over the same physical base stations. Combined dual-mode networks include, but are not limited to, Code Division Multiple Access (CDMA) or CDMA2000 networks, GSM\/GPRS networks, third-generation (3G) networks like EDGE, HSPA, HSPA+, EVDO and UMTS, or fourth-generation (4G) networks such as LTE and LTE Advanced. Some other examples of data-centric networks include WiFi 802.11\u2122, Mobitex\u2122 and DataTAC\u2122 network communication systems. Examples of other voice-centric data networks include Personal Communication Systems (PCS) networks like GSM and Time Division Multiple Access (TDMA) systems. The mobile device  may be provided with additional communication subsystems, such as the wireless LAN (WLAN) communication subsystem  also shown in . The WLAN communication subsystem may operate in accordance with a known network protocol such as one or more of the 802.11\u2122 family of standards developed by IEEE. The communication subsystem  may be separate from, or integrated with, the communication subsystem  or with the short-range communications module . The main processor  also interacts with additional subsystems such as a Random Access Memory (RAM) , a flash memory , a display interface , other data and memory access interfaces such as an auxiliary input\/output (I\/O) subsystem  or a data port , a keyboard , a speaker , a microphone , the short-range communications subsystems  and other device subsystems . The communication device may also be provided with an accelerometer , which may be used to detect gravity- or motion-induced forces and their direction. Detection of such forces applied to the device  may be processed to determine a response of the device , such as an orientation of a graphical user interface displayed on the display interface  in response to a determination of the current orientation of the device .","In some embodiments, the user device  may comprise a touchscreen-based device, in which the display interface  is a touchscreen interface that provides both a display for communicating information and presenting graphical user interfaces, as well as an input subsystem for detecting user input that may be converted to instructions for execution by the device . The touchscreen display interface  may be the principal user interface provided on the device , although in some embodiments, additional buttons, variously shown in the figures, or a trackpad, or other input means may be provided. In one embodiment, a transmissive TFT LCD screen  is overlaid with a clear touch sensor assembly  that supports single and multi-touch actions such as tap, double-tap, tap and hold, tap and drag, scroll, press, flick, and pinch. The touchscreen display interface  detects these single and multi-touch actions, for example through the generation of a signal or signals in response to a touch, which may then be processed by the processor  or by an additional processor or processors in the device  to determine the location of the touch action, whether defined by horizontal and vertical screen position data or other position data. Touch location data may include an area of contact or a single point of contact, such as a point at or near a center of the area of contact. The touchscreen display interface  may be provided with separate horizontal and vertical sensors or detectors to assist in identifying the location of a touch. A signal is provided to the controller , shown in , in response to detection of a touch. The controller  and\/or the processor  may detect a touch by any suitable contact member on the touch-sensitive display .","Some of the subsystems of the communication device  perform communication-related functions, whereas other subsystems can provide \u201cresident\u201d or on-device functions. By way of example, the display interface  and the keyboard  can be used for both communication-related functions, such as entering a text message for transmission over the network  (), and device-resident functions such as a calculator or task list.","A rendering circuit  is included in the device . When a user specifies that a data file is to be viewed on the display interface , the rendering circuit  analyzes and processes the data file for visualization on the display interface . Rendering data files originally optimized or prepared for visualization on large-screen displays on a portable electronic device display often requires additional processing prior to visualization on the small-screen portable electronic device displays. This additional processing may be accomplished by the rendering engine . As will be appreciated by those of skill in the art, the rendering engine can be implemented in hardware, software, or a combination thereof, and can comprise a dedicated image processor and associated circuitry, or can be implemented within main processor .","The communication device  can send and receive communication signals over the wireless network  after required network registration or activation procedures have been completed. Network access is associated with a subscriber or user of the communication device . To identify a subscriber, the communication device  requires a SIM\/RUIM\/UICC card  (i.e. Subscriber Identity Module, Removable User Identity Module, Universal Integrated Circuit Card, or the like) or another suitable identity module to be inserted into a SIM\/RUIM\/UICC interface  in order to communicate with a network. The SIM\/RUIM\/UICC card  is one type of a conventional \u201csmart card\u201d that can be used to identify a subscriber of the communication device  and to personalize the communication device , among other things. Without the SIM\/RUIM\/UICC card , the communication device  is not fully operational for communication with the wireless network . By inserting the SIM\/RUIM\/UICC card  into the SIM\/RUIM\/UICC interface , a subscriber can access all subscribed services. Services can include: web browsing and messaging such as e-mail, voice mail, Short Message Service (SMS), and Multimedia Messaging Services (MMS). More advanced services can include: point of sale, field service and sales force automation. The SIM\/RUIM\/UICC card  includes a processor and memory for storing information. Once the SIM\/RUIM\/UICC card  is inserted into the SIM\/RUIM\/UICC interface , it is coupled to the main processor . In order to identify the subscriber, the SIM\/RUIM\/UICC card  can include some user parameters such as an International Mobile Subscriber Identity (IMSI). An advantage of using the SIM\/RUIM\/UICC card  is that a subscriber is not necessarily bound by any single physical mobile device. The SIM\/RUIM\/UICC card  can store additional subscriber information for a mobile device as well, including datebook (or calendar) information and recent call information. Alternatively, user identification information can also be programmed into the flash memory .","The communication device  may be a battery-powered device including a battery interface  for receiving one or more rechargeable batteries . In at least some embodiments, the battery  can be a smart battery with an embedded microprocessor. The battery interface  is coupled to a regulator (not shown), which assists the battery  in providing power V+ to the communication device . Although current technology makes use of a battery, future technologies such as micro fuel cells can provide the power to the communication device .","The communication device  also includes an operating system  and software components  to  which are described in more detail below. The operating system  and the software components  to  that are executed by the main processor  are typically stored in a persistent store such as the flash memory , which can alternatively be a read-only memory (ROM) or similar storage element (not shown). Those skilled in the art will appreciate that portions of the operating system  and the software components  to , such as specific device applications, or parts thereof, can be temporarily loaded into a volatile store such as the RAM . Select other modules  may also be included, such as those described herein. Other software components can also be included, as is well known to those skilled in the art.","The subset of software applications  that control basic device operations, including data and voice communication applications, will normally be installed on the communication device  during its manufacture. Other software applications include a message application  that can be any suitable software program that allows a user of the communication device  to send and receive electronic messages. Various alternatives exist for the message application  as is well known to those skilled in the art. Messages that have been sent or received by the user are typically stored in the flash memory  of the communication device  or some other suitable storage element in the communication device . In at least some embodiments, some of the sent and received messages can be stored remotely from the device  such as in a data store of an associated host system that the communication device  communicates with.","The software applications can further include a device state module , a Personal Information Manager (PIM) , and other suitable modules (not shown). The device state module  provides persistence, i.e. the device state module  ensures that important device data is stored in persistent memory, such as the flash memory , so that the data is not lost when the communication device  is turned off or loses power.","The PIM  includes functionality for organizing and managing data items of interest to the user, such as, but not limited to, e-mail, contacts, calendar events, voice mails, appointments, and task items. A PIM application has the ability to send and receive data items via the wireless network . PIM data items can be seamlessly integrated, synchronized, and updated via the wireless network  with the mobile device subscriber's corresponding data items stored and\/or associated with a host computer system. This functionality creates a mirrored host computer on the communication device  with respect to such items. This can be particularly advantageous when the host computer system is the mobile device subscriber's office computer system. Some or all of the data items stored at the communication device  may be indexed for searching on the device  either through a corresponding application, such as the PIM , or another suitable module. In addition, the items may be searchable using a unified search process implemented in the device operating system . For example, application data items can be encapsulated in a searchable entity class and registered with a unified search engine on the device  that executes searches against all registered data repositories on the device based on received queries. The search engine can also be configured to invoke a search process of external resources, such as Internet search engines or remote databases.","The communication device  also includes a connect module , and an information technology (IT) policy module . The connect module  implements the communication protocols that are required for the communication device  to communicate with the wireless infrastructure and any host system, such as a host system with which the communication device  is authorized to interface.","The connect module  includes a set of Application Programming Interfaces (APIs) that can be integrated with the communication device  to allow the communication device  to use any number of services associated with the host system or with other systems accessible over the network . The connect module  allows the communication device  to establish an end-to-end secure, authenticated communication pipe with the host system. A subset of applications for which access is provided by the connect module  can be used to pass IT policy commands from the host system to the communication device . This can be done in a wireless or wired manner. These instructions can then be passed to the IT policy module  to modify the configuration of the device . Alternatively, in some cases, the IT policy update can also be done over a wired connection.","Other types of software applications can also be installed on the communication device . These software applications can be third party applications, which are added after the manufacture of the communication device . Examples of third party applications include games, calculators, utilities, etc.","The additional applications can be loaded onto the communication device  through at least one of the wireless network , the auxiliary I\/O subsystem , the data port , the short-range communications subsystem , or any other suitable device subsystem . This flexibility in application installation increases the functionality of the communication device  and can provide enhanced on-device functions, communication-related functions, or both. For example, secure communication applications can enable electronic commerce functions and other such financial transactions to be performed using the communication device .","The data port  enables a subscriber to set preferences through an external device or software application and extends the capabilities of the communication device  by providing for information or software downloads to the communication device  other than through a wireless communication network. The alternate download path can, for example, be used to load an encryption key onto the communication device  through a direct and thus reliable and trusted connection to provide secure device communication. The data port  can be any suitable port that enables data communication between the communication device  and another computing device. The data port  can be a serial or a parallel port. In some instances, the data port  can be a USB port that includes data lines for data transfer and a supply line that can provide a charging current to charge the battery  of the communication device .","The short-range communications subsystem  provides for communication between the communication device  and different systems or devices, without the use of the wireless network . For example, the subsystem  can include an infrared device and associated circuits and components for short-range communication. Examples of short-range communication standards include standards developed by the Infrared Data Association (IrDA), Bluetooth\u2122, and the 802.11\u2122 family of standards.","In use, a received signal such as a text message, an e-mail message, or web page download will be processed by the communication subsystem  and input to the main processor . The main processor  will then process the received signal for output to the display  or alternatively to the auxiliary I\/O subsystem . A subscriber can also compose data items, such as e-mail messages, for example, using the keyboard  in conjunction with the display interface  and possibly the auxiliary I\/O subsystem . The auxiliary I\/O subsystem  can include devices such as: a touchscreen, mouse, track ball, infrared fingerprint detector, or a roller wheel with dynamic button pressing capability. The keyboard  may be an alphanumeric keyboard and\/or telephone-type keypad. However, other types of keyboards can also be used. A composed item can be transmitted over the wireless network  through the communication subsystem . It will be appreciated that if the display interface  comprises a touchscreen, then the auxiliary I\/O subsystem  may still comprise one or more of the devices identified above.","For voice communications, the overall operation of the communication device  is substantially similar, except that the received signals are output to the speaker , and signals for transmission are generated by the microphone . Alternative voice or audio I\/O subsystems, such as a voice message recording subsystem, can also be implemented on the communication device . Although voice or audio signal output is accomplished primarily through the speaker , the display interface  can also be used to provide additional information such as the identity of a calling party, duration of a voice call, or other voice call related information.","The communication subsystem  component may include third party applications, which are added after the manufacture of the communication device . Examples of third party applications include games, calculators, utilities, etc.","The additional applications can be loaded onto the communication device  through at least one of the wireless network , the auxiliary I\/O subsystem , the data port , the short-range communications subsystem , or any other suitable device subsystem . This flexibility in application installation increases the functionality of the communication device  and can provide enhanced on-device functions, communication-related functions, or both. For example, secure communication applications can enable electronic commerce functions and other such financial transactions to be performed using the communication device .","The data port  enables a subscriber to set preferences through an external device or software application and extends the capabilities of the communication device  by providing for information or software downloads to the communication device  other than through a wireless communication network. The alternate download path can, for example, be used to load an encryption key onto the communication device  through a direct and thus reliable and trusted connection to provide secure device communication. The data port  can be any suitable port that enables data communication between the communication device  and another computing device. The data port  can be a serial or a parallel port. In some instances, the data port  can be a USB port that includes data lines for data transfer and a supply line that can provide a charging current to charge the battery  of the communication device .","The short-range communications subsystem  provides for communication between the communication device  and different systems or devices, without the use of the wireless network . For example, the subsystem  can include an infrared device and associated circuits and components for short-range communication. Examples of short-range communication standards include standards developed by the Infrared Data Association (IrDA), Bluetooth\u2122, and the 802.11\u2122 family of standards.","In use, a received signal such as a text message, an e-mail message, or web page download will be processed by the communication subsystem  and input to the main processor . The main processor  will then process the received signal for output to the display interface  or alternatively to the auxiliary I\/O subsystem . A subscriber can also compose data items, such as e-mail messages, for example, using the keyboard  in conjunction with the display interface  and possibly the auxiliary I\/O subsystem . The auxiliary I\/O subsystem  can include devices such as: a touchscreen, mouse, track ball, infrared fingerprint detector, or a roller wheel with dynamic button pressing capability. The keyboard  may be an alphanumeric keyboard and\/or telephone-type keypad. However, other types of keyboards can also be used. A composed item can be transmitted over the wireless network  through the communication subsystem . It will be appreciated that if the display interface  comprises a touchscreen, then the auxiliary I\/O subsystem  may still comprise one or more of the devices identified above.","For voice communications, the overall operation of the communication device  is substantially similar, except that the received signals are output to the speaker , and signals for transmission are generated by the microphone . Alternative voice or audio I\/O subsystems, such as a voice message recording subsystem, can also be implemented on the communication device . Although voice or audio signal output is accomplished primarily through the speaker , the display interface  can also be used to provide additional information such as the identity of a calling party, duration of a voice call, or other voice call related information.","The communication subsystem component  may include a receiver, transmitter, and associated components such as one or more embedded or internal antenna elements, Local Oscillators (LOs), and a processing module such as a Digital Signal Processor (DSP) in communication with the received and transmitter.","The additional applications can be loaded onto the communication device  through at least one of the wireless network , the auxiliary I\/O subsystem , the data port , the short-range communications subsystem , or any other suitable device subsystem . This flexibility in application installation increases the functionality of the communication device  and can provide enhanced on-device functions, communication-related functions, or both. For example, secure communication applications can enable electronic commerce functions and other such financial transactions to be performed using the communication device .","The data port  enables a subscriber to set preferences through an external device or software application and extends the capabilities of the communication device  by providing for information or software downloads to the communication device  other than through a wireless communication network. The alternate download path can, for example, be used to load an encryption key onto the communication device  through a direct and thus reliable and trusted connection to provide secure device communication. The data port  can be any suitable port that enables data communication between the communication device  and another computing device. The data port  can be a serial or a parallel port. In some instances, the data port  can be a USB port that includes data lines for data transfer and a supply line that can provide a charging current to charge the battery  of the communication device .","The short-range communications subsystem  provides for communication between the communication device  and different systems or devices, without the use of the wireless network . For example, the subsystem  can include an infrared device and associated circuits and components for short-range communication.","The systems and methods disclosed herein are presented only by way of example and are not meant to limit the scope of the subject matter described herein. Other variations of the systems and methods described above will be apparent to those in the art and as such are considered to be within the scope of the subject matter described herein. For example, it should be understood that steps and the order of the steps in the processing described herein may be altered, modified and\/or augmented and still achieve the desired outcome. Throughout the specification, terms such as \u201cmay\u201d and \u201ccan\u201d are used interchangeably and use of any particular term should not be construed as limiting the scope or requiring experimentation to implement the claimed subject matter or embodiments described herein.","The systems' and methods' data may be stored in one or more data stores. The data stores can be of many different types of storage devices and programming constructs, such as RAM, ROM, flash memory, programming data structures, programming variables, etc. It is noted that data structures describe formats for use in organizing and storing data in databases, programs, memory, or other computer-readable media for use by a computer program.","Code adapted to provide the systems and methods described above may be provided on many different types of computer-readable media including computer storage mechanisms (e.g., CD-ROM, diskette, RAM, flash memory, computer's hard drive, etc.) that contain instructions for use in execution by a processor to perform the methods' operations and implement the systems described herein.","The computer components, software modules, functions and data structures described herein may be connected directly or indirectly to each other in order to allow the flow of data needed for their operations. Various functional units described herein have been expressly or implicitly described as modules and agents, in order to more particularly emphasize their independent implementation and operation. It is also noted that an agent, module or processor includes but is not limited to a unit of code that performs a software operation, and can be implemented for example as a subroutine unit of code, or as a software function unit of code, or as an object (as in an object-oriented paradigm), or as an applet, or in a computer script language, or as another type of computer code. The various functional units may be implemented in hardware circuits comprising custom VLSI circuits or gate arrays; field-programmable gate arrays; programmable array logic; programmable logic devices; commercially available logic chips, transistors, and other such components. Modules implemented as software for execution by a processor or processors may comprise one or more physical or logical blocks of code that may be organized as one or more of objects, procedures, or functions. The modules need not be physically located together, but may comprise code stored in different locations, such as over several memory devices, capable of being logically joined for execution. Modules may also be implemented as combinations of software and hardware, such as a processor operating on a set of operational data or instructions.","A portion of the disclosure of this patent document contains material which is or may be subject to one or more of copyright, design patent, industrial design, or unregistered design protection. The rightsholder has no objection to the reproduction of any such material as portrayed herein through facsimile reproduction of the patent document or patent disclosure, as it appears in the Patent and Trademark Office patent file or records, but otherwise reserves all rights whatsoever."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In drawings which illustrate by way of example only embodiments of the present application,",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 8","FIG. 7"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 10","FIGS. 1 to 9"]}]},"DETDESC":[{},{}]}
