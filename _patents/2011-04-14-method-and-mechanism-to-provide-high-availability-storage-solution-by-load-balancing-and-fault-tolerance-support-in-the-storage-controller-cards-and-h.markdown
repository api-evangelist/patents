---
title: Method and mechanism to provide high availability storage solution by load balancing and fault tolerance support in the storage controller cards and HBAs
abstract: Disclosed is a method and mechanism for virtualizing the resources of multiple physical storage controller cards/HBAs available to a host computer system into a single virtual controller. An Advanced Storage Driver (ASD) may be inserted in a layer above the base device drivers of the storage controllers/HBAs and act as a single virtual controller for access to the end target devices connected to the multiple physical storage controllers/HBAs so that at any point in time the resources of each of the controllers/HBAs may be dynamically allocated to the various requested operations. The ASD may have bi-directional communication with each controller/HBA firmware directly and/or with the base device driver associated with each controller/HBA in order to permit both direct and base device driver controlled communication with each of the physical controllers/HBAs. The ASD may further provide load sharing between the controllers/HBAs as well as fault tolerance functionality to reroute communications through a different controller/HBA in the event of a failure of one or more of the controllers/HBAs.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08195854&OS=08195854&RS=08195854
owner: LSI Corporation
number: 08195854
owner_city: Milpitas
owner_country: US
publication_date: 20110414
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE EMBODIMENTS"],"p":["Computer systems have typically connected to remote target devices (i.e., remote storage devices\/systems and other target devices) via storage controller cards and\/or Host Bus Adapters (HBAs). The storage controller card and the HBA provide similar functionality in providing the hardware interface to the communication connection with target devices and the necessary communication control functionality to permit communication between a host computer system and the end target devices. Storage controller cards typically may further incorporate some additional storage control\/management functionality for the target storage devices, such as providing RAID (Redundant Array of Independent Disks) functionality and\/or other storage specific functionality in addition to the control\/management of the communications between the host computer and the target storage devices. A typical computer system may run a device driver application as an interface between other software applications running on the host computer system and each physical storage controller card\/HBA available to the host computer system.","An embodiment of the present invention may comprise a method of accessing end target devices connected to a host computer system via a switched storage network using multiple storage controllers\/HBAs present on the host computer system by at least one host system software application running on the host computer system comprising: creating an Advanced Storage Driver (ASD) that operates on the host computer system and acts as a single virtual device driver for access to the end target devices by the at least one host system software application; encapsulating the multiple storage controllers\/HBAs and multiple base device drivers running on the host computer system associated on a one-to-one basis with the multiple storage controllers\/HBAs as resources of the Advanced Storage Driver in order to virtualize the multiple storage controllers\/HBAs for access by the at least one host system software application through the Advanced Storage Driver; communicating between the Advanced Storage Driver and the at least one host system software application input and output communications that are from and intended to be delivered to the end target devices; communicating by the Advanced Storage Driver with the multiple base device drivers associated with the multiple storage controllers\/HBAs an indication of storage controller\/HBA availability\/utilization for each storage controller\/HBA of the multiple storage controllers\/HBAs associated with each base device driver of the multiple base device drivers; storing by the Advanced Storage Driver the indication of storage controller\/HBA availability\/utilization for each storage controller\/HBA of the multiple storage controllers\/HBAs in at least one resource table of the Advanced Storage Driver; mapping by the Advanced Storage Driver the input and output communications for the end target devices across the multiple storage controllers\/HBAs based on the storage controller\/HBA availability\/utilization stored in the at least one resource table; and communicating by the Advanced Storage Driver the input and output communications for the end target devices directly to the multiple storage controllers\/HBAs in accord with the mapping of the input and output communications determined by the Advanced Storage Driver such that the multiple storage controllers\/HBAs perform the mapped communications from\/to the end target devices.","An embodiment of the present invention may further comprise an advanced storage host computer system that accesses end target devices connected to the advanced storage host computer system via a switched storage network using multiple storage controllers\/HBAs present on the advanced storage host computer system by at least one host system software application running on the advanced storage host computer system comprising: an Advanced Storage Driver (ASD) that acts as a single virtual device driver for access to the end target devices by the at least one host system software application and encapsulates the multiple storage controllers\/HBAs and multiple base device drivers running on the advanced storage host computer system associated on a one-to-one basis with the multiple storage controllers\/HBAs as resources of the Advanced Storage Driver in order to virtualize the multiple storage controllers\/HBAs for access by the at least one host system software application through the Advanced Storage Driver; an ASD to host software applications subsystem that communicates between the Advanced Storage Driver and the at least one host system software application input and output communications that are from and intended to be delivered to the end target devices; an ASD to base device driver communication subsystem that communicates from the Advanced Storage Driver with the multiple base device drivers associated with the multiple storage controllers\/HBAs an indication of storage controller\/HBA availability\/utilization for each storage controller\/HBA of the multiple storage controllers\/HBAs associated with each base device driver of the multiple base device drivers; a resource table subsystem that stores the indication of storage controller\/HBA availability\/utilization for each storage controller\/HBA of the multiple storage controllers\/HBAs in at least one resource table of the Advanced Storage Driver; a resource mapping subsystem that maps the input and output communications for the end target devices across the multiple storage controllers\/HBAs based on the storage controller\/HBA availability\/utilization stored in the at least one resource table; and an ASD to storage controller\/HBA communication subsystem that communicates to\/from the Advanced Storage Driver the input and output communications for the end target devices directly to the multiple storage controllers\/HBAs in accord with the mapping of the input and output communications determined by the Advanced Storage Driver such that the multiple storage controllers\/HBAs perform the mapped communications from\/to the end target devices.","Virtualization and\/or cluster environments, such as cloud computing, may virtually distribute hardware resources (aka. target devices), including physical storage resources such as disk drives, among different host computer systems. In a cloud computing type of virtualization environment, the highly available storage system resources may result in overloading of the physical Host Bus Adapters (HBAs) and\/or storage controller cards (aka. storage controllers or just controllers) used to connect and communicate with the end target devices\/end hardware resources. For virtualization and\/or cluster environments, it may be desirable to have as little downtime as possible for the physical controllers\/HBAs and\/or for the end target devices\/end hardware resources accessed via the physical controllers\/HBAs. Accordingly, it may be desirable to implement a method or mechanism to share the resources of the physical storage controllers\/HBAs so that the hardware resources of the physical controllers\/HBAs may be shared for accessing the end target devices\/end hardware resources. In particular, a controller\/HBA sharing entity may manage load balancing between various storage controllers\/HBAs and\/or manage fault tolerance situations (e.g., handle\/reroute communications for hardware faults and\/or fatal errors of one or more of the storage controllers\/HBAs). A method, such as multi-pathing, may provide fault tolerance support at the link level, but not adequately address load sharing. An embodiment may provide a new controller stack (i.e., a new driver level) at the host computer system of the physical controllers\/HBAs that may provide for fault tolerance as well as load balancing at the controller\/HBA level.",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1","b":["100","108","108","110","102","108","112","110","112","110","112","112","108","108","108","112","110","102","114","118","102","110","108","110","112","108","110","112","110","112","104","108","108","112","110","112","112","110","112","112","110","112","108","112","112","114","118","112","110","112","108","112","110","112"]},"The computer system , which, herein, may also be referred to as the ASD  host computer system , may be a general purpose computer system defined to operate in a specific manner in accord with the systems, sub-systems, drivers, controllers, HBAs, etc. of an embodiment disclosed herein. Further, a specific purpose computer using firmware and\/or other specific purpose hardware may also be used to provide the functionality disclosed herein. Further, a general purpose computer may be a classical personal computer\/laptop computer, but may also be any other type of electronic computing platform capable of performing the necessary computations and capable of including\/accessing multiple storage controllers\/HBAs within\/from the electronic computing platform. Accordingly, the electronic computing platform may include, but is not limited to: a general purpose computer, a specific purpose computer, a handheld electronic device, etc.","An embodiment of the Advance Storage Driver (ASD) stack  may communicate bi-directionally with applications  running on the computer system  through a storage controller\/HBA device driver Application Programming Interface (API) , such as the \u201cStoreLib\u201d API  provided by LSI Corporation. As used herein, \u201cStoreLib\u201d is not meant to restrict the API interface to a particular interface (e.g., not restricted to the StoreLib provided by LSI Corporation), but \u201cStoreLib is meant to refer to a general API interface for programs\/software applications  (e.g., storage management software ) that may be created in a high level programming language so that programmers of the programs\/software applications may easily interface with a device driver, such as the base device drivers , using common functions having the same name and programmatic structure for each potential base device driver  that may be accessed by the programs\/software applications . While an embodiment of the ASD may support interfacing\/communicating with programs\/software applications  via the a general\/particular StoreLib API , various embodiments also permit customized access to the ASD  via a custom programmed interface in addition to and\/or in replacement of the StoreLib API . The programs\/software applications  may include any program\/software  capable of being run on the computer system  having the necessary communications capability to communicate with the ASD , such as support for the StoreLib API  that may be supported by various embodiments of the ASD . The programs\/software  may include programs\/applications that primarily run on a different computer system, but use a network connection to the ASD  host computer system  to connect with the ASD  and the multiple controller\/HBA resources ,  available on the ASD  host computer system . For programs\/applications  that partly, or even primarily, run on a different computer system than the ASD  host computer system , a small program\/software application  may be provided on the ASD  host computer system  to facilitate communication (such as by providing access to the StoreLib API  on the ASD  host computer system ) between the ASD  and the remote program\/software application . Potential programs\/software applications  include, but are not limited to: storage management software, MSM (MegaRAID Storage Management) software, SSM (Storage System Manager) software, RWC (RAID Web Console) software, etc. In the embodiment shown in , the ASD  communicates with the applications\/storage management software  running on the host computer system  via the StoreLib API . Thus, the applications\/storage management software  invokes StoreLib application side function\/interaction calls  of the StoreLib API  to communicate with the ASD  and the ASD  invokes StoreLib driver side function\/interaction calls  to communicate with the applications\/storage management software .","An embodiment of the ASD stack  may further communicate bi-directionally with each of the base device drivers  and\/or bi-directionally with the firmware running on each of the multiple storage controller cards\/HBAs . Typically, there is a based device driver  for each physical storage controller\/HBA  (i.e., a 1:1 correspondence). Each base device driver  may also be capable of bi-directional communication via firmware calls  with the single storage controller\/HBA  associated with each base device driver , so there are potentially two paths for the ASD  to communicate with each physical controller\/HBA . The ASD  may communicate directly with the physical controller\/HBA  via firmware calls  to the physical controller\/HBA , or the ASD  may manage interaction  with the base device driver  associated with the physical controller\/HBA  being accessed and cause the associated base device driver  to communicate the necessary firmware calls  with the physical controller\/HBA  being used. As such, an embodiment of the ASD stack  may be said to sit \u201con top\u201d of the traditional base device drivers  associated with each of the multiple physical storage controllers\/HBAs  while at the same time having direct communication with the multiple physical storage controllers\/HBAs , ensuring that necessary firmware calls  to the physical storage controllers\/HBAs  are properly handled without having to rely on the base device drivers  to perform the desired firmware calls . As described above, an embodiment of the ASD stack  may also handle the interaction with the StoreLib API , and, hence, the interaction with the upper level applications\/storage management software . Accordingly, an embodiment of the ASD stack may encapsulate the software (i.e., base device drivers)  and hardware resources (i.e., the controller\/HBA cards) with respect to the applications\/storage management software  such that the applications\/storage management software  view the ASD  as a single \u201cvirtual\u201d storage controller\/HBA. As described further below, an embodiment of the ASD  encapsulating the software  and hardware  resources of the physical controllers\/HBAs , may take responsibility for the virtualization of the software  and hardware  resources of the physical controllers\/HBAs  and may also perform intelligent switching operations of application\/storage management software  requested I\/O operations among the available controllers\/HBAs . Various embodiments may permit a user to add and remove physical storage controllers\/HBAs  that are available to the host computer system  such that so that a user may determine if all, or only a subset, of the available physical storage controllers\/HBAs  of the host computer system  are encapsulated and managed by the ASD . Also, if desired, multiple instances of an embodiment of the ASD  may run concurrently with each instance of the ASD encapsulating and managing a different subset of the resources ,  of the available physical storage controllers\/HBAs .","Each physical storage controller\/HBA  may be assigned as the controller\/communication manager for one or more end target devices -. The end target devices - may be any of a wide variety of devices designed to communicate with the storage controller\/HBA  associated with the end target device -. End target devices - may include an enclosure  housing multiple devices, such as a RAID (Redundant Array of Independent Disks) enclosure  that has RAID functionality built into a self-contained enclosure  of the multiple computer readable storage devices (e.g., hard disk drives and\/or solid state drives) making up the RAID. The end target devices - may also include individual computer readable storage drives  (e.g., an individual disk or solid state drive). The end target device computer readable storage drive(s)  may be either an actual physical computer readable storage drive  or a virtual (i.e., logical) representation of a computer readable storage drive . Other end target devices  designed to work with the storage network communications  protocol of the storage controllers\/HBAs  may also be accessed and managed by an embodiment of the ASD . Some of the other potential end target devices  may include, but are not limited to: scanners, printers, fax machines, optical drives, etc. The multiple physical storage controllers  may be connected to the end target devices - via one or more storage network communications protocols . Some of the potential storage network communications protocols  may include, but are not limited to: SAS, SCSI, Ethernet, Fibre Channel, FireWire (i.e., IEEE 1394), eSATA (external Serial ATA (Advanced Technology Attachment)), iSCSI (Internet SCSI), USB (Universal Serial Bus), etc.","To permit sharing of the communication paths to the end target devices -, the end target devices may be connected via a switched storage network  such that each physical storage controller\/HBA  has a possible physical communication path to each end target device -. In some embodiments, the switched storage network  may include the necessary communication gateways between different communication protocols  such that it is possible for a physical storage controller\/HBA  for one storage network communication protocol  (e.g., eSATA) to communicate with an end target device - communicating on a different storage network communication protocol  (e.g., SAS).","Also, as one skilled in the art will recognize, one method to implement a \u201cvirtual\u201d computer readable storage drive  may be for a SAS (Serial Attached SCSI (Small Computer System Interface) implementing SAS zoning to provide \u201cvirtual\u201d access to a computer readable drive as a \u201clogical\u201d (i.e., \u201cvirtual\u201d) representation  of a physical drive connected and\/or zoned-in with a controller on a different computer system that is attached to the subject host computer system  via the switched storage network . The subject host computer system  may then access the \u201cvirtual\u201d drive  presented by the other computer system\/controller by communicating with the other computer system\/controller as if the other computer system\/controller were the virtual computer readable storage device  and the actual communication with the physical computer readable storage device is performed by the other computer system\/controller presenting the \u201cvirtual\u201d computer readable storage device.","An embodiment of the ASD  may further provide for intelligent switching between the various software  and hardware  resources associated with the multiple physical controllers\/HBAs . For instance, an embodiment may provide load sharing capabilities to share the communications I\/O between two or more of the physical controllers\/HBAs  based on the resource availability of each of the physical controllers\/HBAs  for a particularly large I\/O request that would have traditionally been handled by a single physical controller\/HBA . In order to track the available resources , an embodiment of the ASD stack  may maintain a resource table that holds the availability of each of the multiple controller\/HBA cards  connected to the ASD stack . Various embodiments may implement the resource table as a single resource table for each resource (i.e., for each controller\/HBA ). Other embodiments may maintain the data for each of the available controllers\/HBAs  in a single resource table, so long as the resource availability for each resource  is maintained and available to the ASD stack  for evaluation when optimizing load sharing between the resources (i.e., controllers\/HBAs ). An embodiment of the ASD stack  may then utilize the contents of the resource table(s) to perform resource mapping of which resources (i.e., which physical controllers\/HBAs ) are available and to what extent each resource  is available such that the ASD stack  may optimize the resource  use so that each resource  is used equally, or so that each resource is used at a desired utilization rate. The ability to load share between the multiple physical controllers\/HBAs  may permit the entire host computer system  to operate more efficiently and with higher degree of controller  availability, which is desirable for most computer applications, including cloud and\/or cluster computing environments that are common data-center implementations. One skilled in the art will recognize that various schemes may be employed to share the resources  and to optimize resource  use to a level desired by a system programmer. For some embodiments equal resource  use may be desirable, but for other embodiments it may be desirable to utilize one resource  (i.e., controller card ) first because a particular controller card  may have better performance than other controller cards. Thus, the specific optimization scheme is dependent on the controller cards\/HBAs  available and the ultimate goals of the system designer in load sharing between the controller cards\/HBAs . The encapsulation\/wrapping of the multiple physical controllers","An embodiment may have the base device driver  associated with a physical controller\/HBA  read\/monitor\/maintain the resource  availability\/utilization of the physical controller\/HBA  associated with the base device driver . Each base device driver may then pass the resource  availability\/utilization information to the ASD stack  so that the ASD stack  is aware of the resource  availability\/utilization of each physical controller\/HBA  encapsulated by the ASD . The resource availability\/utilization information may be updated in real-time as often as necessary to maintain the resource table(s) used by the ASD stack  to perform resource mapping for load sharing (and fault tolerance as discussed below).","While an embodiment may have the ASD stack  act as a single \u201cvirtual\u201d controller\/device driver, it may also be desirable for the applications\/storage management software  to know about the actual physical storage controllers\/HBAs  available to the host computer system . Therefore, an embodiment of the ASD stack  may pass information about each physical controller\/HBA card  present so that the application\/storage management software  may be aware of the physical architecture of the controllers\/HBAs . Consequently, the controller\/stack information is transparent trough the ASD stack  such that the application\/storage management software  is able to that the ASD stack is made up of the multiple physical storage controller\/HBA cards .","An embodiment may provide fault tolerance using the same types of mechanisms as used for the load sharing implementation of an embodiment disclosed above. For instance, a fault may be reported as zero (0) availability of a resource (i.e., of a physical controller\/HBA card ). For some embodiments, some lower threshold limit that is above zero (0) availability may be set to indicate over utilization of a storage controller\/HBA resource  and trigger a fault tolerance shifting of communications to other storage controllers\/HBAs. An embodiment of the ASD stack  may observe that a resource  has zero (0) availability (or near zero availability) and channel operations and\/or I\/O using the next available controller\/HBA . Another embodiment may share the load from the faulty (i.e., zero availability) resource  with multiple other physical storage controllers\/HBAs  for the same type of \u201cload sharing\u201d reasons as disclosed above with respect to load sharing between the physical controller\/HBA resources . By using the availability as a measurement of fault, a system may adjust for actual faults and fatal errors of a particular controller\/HBA card  as well as simple over-utilization of a controller\/HBA card  that results in zero (0) availability of the controller\/HBA card . Various embodiments may also respond to actual notices of fatal errors and faults in the same manner as done by the response to zero (0) resource  availability as discussed above. Once the faulty controller\/HBA  returns to normal service (i.e., no longer has zero availability and\/or has a report that the fault\/fatal error has been cleared), the resource table(s) may be updated accordingly and the ASD stack  may utilize the formerly faulty controller\/HBA  in a similar fashion to operation prior to the fault occurrence.","Accordingly, an embodiment that implements an ASD stack  and provides load sharing and\/or fault tolerance for the physical storage controllers\/HBAs , may provide a variety of desirable results for a computer system  implementation. The various embodiments may provide a hardware independent solution as an embodiment of the ASD stack  is independent of the physical controllers\/HBAs present on the host computer system . Thus, the various embodiments may provide high resource  availability at a low cost of implementation. Further, as the various embodiments may provide load sharing capabilities, the various embodiments may provide better power efficiency by not over loading high power resources such that the various embodiments may better meet the needs of the cluster and\/or virtualization environments common for current data-center implementations. Further, eliminating bottlenecks from one resource (i.e., one physical storage controller\/HBA ) and more fully utilizing underutilized resources  further helps make the overall host computer system  more efficient and may eliminate the need to unnecessarily add additional resources (i.e., controller\/HBA cards ). Hence, the various embodiments may also lower the total cost of ownership of the host computer system . The implementation of the ASD stack  in the various embodiments is also scalable because the ASD stack  of an embodiment may encapsulate\/wrap around a few or many of the physical storage controllers\/HBAs  and associated based device drivers . Consequently, the various embodiments provide a net benefit of storage and resource optimization.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 2","FIG. 2"],"b":["200","202","206","204","204","1","212","216","1","212","216","1","218","222","1","230","2","232","228","1","212","216","206","212","216","224","226","218","222","224","226","224","228","230","234","224","228","224","228","236","224","228","230","234","224","228","212","216","224","228"]},"In the embodiment shown in , base device driver  () communicates with controller firmware  () that is part of storage controller  (), which controls and manages the enclosure(s) (e.g., RAID enclosure(s))  acting as the end target device for the base device driver  (), controller firmware  (), storage controller  () communication path. The base device driver  () likely does not have knowledge of, or the capability to interact with other types of end target devices such as devices  and . Similarly, base device driver  () communicates with controller\/HBA firmware  () that is part of storage HBA  (), which controls and manages the target device(s) (e.g., computer readable media devices, scanners, printers, etc.)  acting as the end target device for the base device driver  (), controller\/HBA firmware  (), storage HBA  () communication path. The base device driver  () likely does not have knowledge of, or the capability to interact with other types of end target devices such as devices  and . Also, base device driver N  communicates with controller\/HBA firmware N  that is part of storage controller N , which controls and manages the physical\/virtual computer readable media drive(s) (e.g., hard disk drives, solid state drives, and virtual\/logical access points for computer readable media drives)  acting as the end target device for the base device driver N , controller firmware N , storage controller N  communication path. The base device driver N  likely does not have knowledge of, or the capability to interact with other types of end target devices such as devices  and . The ASD  sitting in a layer above the base device drivers - and encapsulating the base device drivers - and associated controller firmware - may communicate  to the end devices - through the base device drivers - or may directly communicate  with the controller\/HBA firmware -. By having knowledge of each of the storage controllers\/HBAs -, the ASD may send firmware calls  to the controller\/HBA firmware - to permit the storage controllers - to communicate through the switched storage network  with target devices - that may not be supported by the base device driver - associated with the subject storage controller -. For instance, base device driver  () may not support interaction with target device(s) , but by directly communicating  with controller firmware  (), the ASD may be able to communicate with target device(s)  via the switched storage network  so as to permit load sharing with the other storage controllers\/HBAs ,  and\/or to permit uninterrupted communication with the target device(s)  even when storage HBA  () has encountered a fatal error or is otherwise unavailable.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3","FIG. 3"],"b":["300","302","324","304","312","314","306","326","302","304","306","308","308","308","330","310","306","306","328","310","308","320","322","312","314","320","322","312","320","314","322"]},"As seen in , the ASD driver stack  may further include one more resource tables  that identify and track the availability\/utilization for the firmware\/hardware of each physical storage controller\/HBA. The ASD driver stack  also may include a resource mapping module\/sub-system that utilizes the resource table(s)  to map control and communication I\/O for end target devices to be sent through multiple storage controllers\/HBAs for load sharing and through one or more other storage controllers\/HBAs for I\/O intended to be sent through a storage controller that is unavailable or has been determined to have a fatal error or fault.","Various embodiments may provide the control and management functions detailed herein via an application operating on a computer system (or other electronic devices). Embodiments may be provided as a computer program product which may include a computer-readable, or machine-readable, medium having stored thereon instructions which may be used to program\/operate a computer (or other electronic devices) or computer system to perform a process or processes in accordance with the present invention. The computer-readable medium may include, but is not limited to, hard disk drives, floppy diskettes, optical disks, Compact Disc Read-Only Memories (CD-ROMs), Digital Versatile Disc ROMS (DVD-ROMs), Universal Serial Bus (USB) memory sticks, magneto-optical disks, ROMs, random access memories (RAMs), Erasable Programmable ROMs (EPROMs), Electrically Erasable Programmable ROMs (EEPROMs), magnetic optical cards, flash memory, or other types of media\/machine-readable medium suitable for storing electronic instructions. The computer program instructions may reside and operate on a single computer\/electronic device or various portions may be spread over multiple computers\/devices that comprise a computer system. Moreover, embodiments may also be downloaded as a computer program product, wherein the program may be transferred from a remote computer to a requesting computer by way of data signals embodied in a carrier wave or other propagation medium via a communication link (e.g., a modem or network connection, including both wired\/cabled and wireless connections).","The foregoing description of the invention has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed, and other modifications and variations may be possible in light of the above teachings. The embodiment was chosen and described in order to best explain the principles of the invention and its practical application to thereby enable others skilled in the art to best utilize the invention in various embodiments and various modifications as are suited to the particular use contemplated. It is intended that the appended claims be construed to include other alternative embodiments of the invention except insofar as limited by the prior art."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In the drawings,",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
