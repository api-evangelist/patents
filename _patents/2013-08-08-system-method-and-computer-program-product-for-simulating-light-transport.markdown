---
title: System, method, and computer program product for simulating light transport
abstract: A system, method, and computer program product are provided for simulating light transport. In operation, a distribution function is decomposed utilizing a technique for sampling from a probability distribution (e.g. the Alias Method, etc.). Additionally, light transport associated with at least one scene is simulated utilizing information associated with the decomposed distribution function.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09424684&OS=09424684&RS=09424684
owner: NVIDIA Corporation
number: 09424684
owner_city: Santa Clara
owner_country: US
publication_date: 20130808
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["The present invention relates to image synthesis, and more particularly to efficient photorealistic image synthesis.","Photorealistic image synthesis is concerned with the computer simulation of taking a photograph in the real world. Synthesizing such images that cannot be distinguished from real photographs includes identifying all light transport paths that connect the light sources with a camera device and summing up their contributions.","Evaluating the optical properties of surfaces and simulating how they scatter photons are core routines in light transport simulation algorithms. Many mathematical models have been developed for this purpose. However, the visual quality of such mathematical models has been limited due their approximate nature.","In contrast, measured material data can capture the physical behavior of surfaces in a much more precise way. While the evaluation of measured data is straightforward, simulating photon scattering using such data so far has not been very efficient, especially on SIMD (Single Instruction, Multiple Data) and SIMT (Single-Instruction, Multiple-Thread) architectures.","Thus, there is a need for addressing this issue and\/or other issues associated with the prior art.","A system, method, and computer program product are provided for simulating light transport. In operation, a distribution function is decomposed utilizing a technique for sampling from a probability distribution (e.g. the Alias Method, etc.). Additionally, light transport associated with at least one scene is simulated utilizing information associated with the decomposed distribution function.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1","b":["100","110","120"]},"In one embodiment, the technique for sampling from a discrete probability distribution may include the Alias Method. The Alias Method refers to a known family of efficient algorithms for sampling from a probability distribution. More details associated with the Alias Method are described below.","In one embodiment, the distribution function may include a measured bidirectional reflectance distribution function (BRDF). Furthermore, the measured distribution function may include any measured distribution function associated with any number of materials and\/or objects. In some cases, the measured distribution function may be obtained from a database including pre-measured distribution functions.","In various embodiments, decomposing the distribution function may include a various number of steps and\/or functions. In one embodiment, decomposing the measured distribution function may include decomposing the measured distribution function into at least one first portion to be evaluated by shadow rays. Additionally, in one embodiment, decomposing the measured distribution function may include decomposing the measured distribution function into at least one second portion to be simulated utilizing scattering. In this case, in one embodiment, simulating the light transport may include evaluating the at least one first portion utilizing the shadow rays and\/or simulating the at least one second portion utilizing scattering.","Further, in one embodiment, decomposing the measured distribution function may include partitioning distributions. In this case, in one embodiment, simulating the light transport may include simulating each of the partitioned distributions.","In one embodiment, in the case that the technique for sampling from a discrete probability distribution includes the Alias Method, low discrepancy sequences may be mapped to the Alias Method. In this case, the mapping of the low discrepancy sequences may function to allow for simulating discrete densities without floating point computation. In another embodiment, an integer portion of rational low discrepancy sequences may be used as a permutation and index to access tables associated with the Alias Method. Furthermore, in one embodiment, an alias probability table and an alias table resulting from the Alias Method may be used to partition discrete densities into a uniform portion and a non-uniform portion.","Still yet, in one embodiment, the measured distribution function may include a measured BRDF and a partition may distinguish a portion that is easy to integrate and a portion that is efficient to simulate. In this case, in one embodiment, the partition may be applied to partition path space.","In another embodiment, the method  may include combining a bidirectional path tracing technique and a progressive photon mapping technique using implicit multiple importance sampling, which is described in further detail herein. In this case, in one embodiment, the bidirectional path tracing technique and the progressive photon mapping technique may be selected based on weights. In another embodiment, the bidirectional path tracing technique and the progressive photon mapping technique may be selected algorithmically.","More illustrative information will now be set forth regarding various optional architectures and features with which the foregoing framework may or may not be implemented, per the desires of the user. It should be strongly noted that the following information is set forth for illustrative purposes and should not be construed as limiting in any manner. Any of the following features may be optionally incorporated with or without the exclusion of other features described.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 2","FIG. 3"],"b":["200","200","200","250","250","250","250"]},"In one embodiment, the PPU  includes an input\/output (I\/O) unit  configured to transmit and receive communications (i.e., commands, data, etc.) from a central processing unit (CPU) (not shown) over the system bus . The I\/O unit  may implement a Peripheral Component Interconnect Express (PCIe) interface for communications over a PCIe bus. In alternative embodiments, the I\/O unit  may implement other types of well-known bus interfaces.","The PPU  also includes a host interface unit  that decodes the commands and transmits the commands to the task management unit  or other units of the PPU  (e.g., memory interface ) as the commands may specify. In one embodiment, the PPU  comprises U memory interfaces (U), where each memory interface (U) is connected to a corresponding memory device (U). The host interface unit  is configured to route communications between and among the various logical units of the PPU .","In one embodiment, a program encoded as a command stream is written to a buffer by the CPU. The buffer is a region in memory, e.g., memory  or system memory, that is accessible (i.e., read\/write) by both the CPU and the PPU . The CPU writes the command stream to the buffer and then transmits a pointer to the start of the command stream to the PPU . The host interface unit  provides the task management unit (TMU)  with pointers to one or more streams. The TMU  selects one or more streams and is configured to organize the selected streams as a pool of pending grids. In one embodiment, a thread block comprises 32 related threads and a grid is an array of one or more thread blocks that execute the same stream and the different thread blocks may exchange data through global memory. The pool of pending grids may include new grids that have not yet been selected for execution and grids that have been partially executed and have been suspended.","A work distribution unit  that is coupled between the TMU  and the SMs  manages a pool of active grids, selecting and dispatching active grids for execution by the SMs . Pending grids are transferred to the active grid pool by the TMU  when a pending grid is eligible to execute, i.e., has no unresolved data dependencies. An active grid is transferred to the pending pool when execution of the active grid is blocked by a dependency. When execution of a grid is completed, the grid is removed from the active grid pool by the work distribution unit . In addition to receiving grids from the host interface unit  and the work distribution unit , the TMU  also receives grids that are dynamically generated by the SMs  during execution of a grid. These dynamically generated grids join the other pending grids in the pending grid pool.","In one embodiment, the CPU executes a driver kernel that implements an application programming interface (API) that enables one or more applications executing on the CPU to schedule operations for execution on the PPU . An application may include instructions (i.e., API calls) that cause the driver kernel to generate one or more grids for execution. In one embodiment, the PPU  implements a SIMT (Single-Instruction, Multiple-Thread) architecture where each thread block (i.e., warp) in a grid is concurrently executed on a different data set by different threads in the thread block. The driver kernel defines thread blocks that are comprised of k related threads, such that threads in the same thread block may exchange data through shared memory.","In one embodiment, the PPU  may include 15 distinct SMs . Each SM  is multi-threaded and configured to execute a plurality of threads (e.g., 32 threads) from a particular thread block concurrently. Each of the SMs  is connected to a level-two (L2) cache  via a crossbar  (or other type of interconnect network). The L2 cache  is connected to one or more memory interfaces . Memory interfaces  implement 16, 32, 64, 128-bit data buses, or the like, for high-speed data transfer. In one embodiment, the PPU  may be connected to up to 6 memory devices , such as graphics double-data-rate, version 5, synchronous dynamic random access memory (GDDR5 SDRAM).","In one embodiment, the PPU  implements a multi-level memory hierarchy. The memory  is located off-chip in SDRAM coupled to the PPU . Data from the memory  may be fetched and stored in the L2 cache , which is located on-chip and is shared between the various SMs . In one embodiment, each of the SMs  also implements an L1 cache. The L1 cache is private memory that is dedicated to a particular SM . Each of the L1 caches is coupled to the shared L2 cache . Data from the L2 cache  may be fetched and stored in each of the L1 caches for processing in the functional units of the SMs .","In one embodiment, the PPU  comprises a graphics processing unit (GPU). The PPU  is configured to receive commands that specify shader programs for processing graphics data. Graphics data may be defined as a set of primitives such as points, lines, triangles, quads, triangle strips, and the like. Typically, a primitive includes data that specifies a number of vertices for the primitive (e.g., in a model-space coordinate system) as well as attributes associated with each vertex of the primitive. The PPU  can be configured to process the graphics primitives to generate a frame buffer (i.e., pixel data for each of the pixels of the display). The driver kernel implements a graphics processing pipeline, such as the graphics processing pipeline defined by the OpenGL API.","An application writes model data for a scene (i.e., a collection of vertices and attributes) to memory. The model data defines each of the objects that may be visible on a display. The application then makes an API call to the driver kernel that requests the model data to be rendered and displayed. The driver kernel reads the model data and writes commands to the buffer to perform one or more operations to process the model data. The commands may encode different shader programs including one or more of a vertex shader, hull shader, geometry shader, pixel shader, etc. For example, the TMU  may configure one or more SMs  to execute a vertex shader program that processes a number of vertices defined by the model data. In one embodiment, the TMU  may configure different SMs  to execute different shader programs concurrently. For example, a first subset of SMs  may be configured to execute a vertex shader program while a second subset of SMs  may be configured to execute a pixel shader program. The first subset of SMs  processes vertex data to produce processed vertex data and writes the processed vertex data to the L2 cache  and\/or the memory . After the processed vertex data is rasterized (i.e., transformed from three-dimensional data into two-dimensional data in screen space) to produce fragment data, the second subset of SMs  executes a pixel shader to produce processed fragment data, which is then blended with other processed fragment data and written to the frame buffer in memory . The vertex shader program and pixel shader program may execute concurrently, processing different data from the same scene in a pipelined fashion until all of the model data for the scene has been rendered to the frame buffer. Then, the contents of the frame buffer are transmitted to a display controller for display on a display device.","The PPU  may be included in a desktop computer, a laptop computer, a tablet computer, a smart-phone (e.g., a wireless, hand-held device), personal digital assistant (PDA), a digital camera, a hand-held electronic device, and the like. In one embodiment, the PPU  is embodied on a single semiconductor substrate. In another embodiment, the PPU  is included in a system-on-a-chip (SoC) along with one or more other logic units such as a reduced instruction set computer (RISC) CPU, a memory management unit (MMU), a digital-to-analog converter (DAC), and the like.","In one embodiment, the PPU  may be included on a graphics card that includes one or more memory devices  such as GDDR5 SDRAM. The graphics card may be configured to interface with a PCIe slot on a motherboard of a desktop computer that includes, e.g., a northbridge chipset and a southbridge chipset. In yet another embodiment, the PPU  may be an integrated graphics processing unit (iGPU) included in the chipset (i.e., Northbridge) of the motherboard.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 3","FIG. 2","FIG. 3"],"b":["250","250","305","310","320","350","351","352","353","380","370","390"]},"As described above, the work distribution unit  dispatches active grids for execution on one or more SMs  of the PPU . The scheduler unit  receives the grids from the work distribution unit  and manages instruction scheduling for one or more thread blocks of each active grid. The scheduler unit  schedules threads for execution in groups of parallel threads, where each group is called a warp. In one embodiment, each warp includes 32 threads. The scheduler unit  may manage a plurality of different thread blocks, allocating the thread blocks to warps for execution and then scheduling instructions from the plurality of different warps on the various functional units (i.e., cores , DPUs , SFUs , and LSUs ) during each clock cycle.","In one embodiment, each scheduler unit  includes one or more instruction dispatch units . Each dispatch unit  is configured to transmit instructions to one or more of the functional units. In the embodiment shown in , the scheduler unit  includes two dispatch units  that enable two different instructions from the same warp to be dispatched during each clock cycle. In alternative embodiments, each scheduler unit  may include a single dispatch unit  or additional dispatch units .","Each SM  includes a register file  that provides a set of registers for the functional units of the SM . In one embodiment, the register file  is divided between each of the functional units such that each functional unit is allocated a dedicated portion of the register file . In another embodiment, the register file  is divided between the different warps being executed by the SM . The register file  provides temporary storage for operands connected to the data paths of the functional units.","Each SM  comprises L processing cores . In one embodiment, the SM  includes a large number (e.g., 192, etc.) of distinct processing cores . Each core  is a fully-pipelined, single-precision processing unit that includes a floating point arithmetic logic unit and an integer arithmetic logic unit. In one embodiment, the floating point arithmetic logic units implement the IEEE 754-2008 standard for floating point arithmetic. Each SM  also comprises M DPUs  that implement double-precision floating point arithmetic, N SFUs  that perform special functions (e.g., copy rectangle, pixel blending operations, and the like), and P LSUs  that implement load and store operations between the shared memory  and the register file  via the J texture unit\/L1 caches  and the interconnect network . The J texture unit\/L1 caches  are coupled between the interconnect network  and the shared memory  and are also coupled to the crossbar . In one embodiment, the SM  includes 64 DPUs , 32 SFUs , and 32 LSUs . In another embodiment, the L1 cache is not included within the texture unit and is instead included with the shared memory  with a separate direct connection to the crossbar .","Each SM  includes an interconnect network  that connects each of the functional units to the register file  and to the shared memory  through the interconnect network . In one embodiment, the interconnect network  is a crossbar that can be configured to connect any of the functional units to any of the registers in the register file , to any of the J texture unit\/L1 caches , or the memory locations in shared memory .","In one embodiment, the SM  is implemented within a GPU. In such an embodiment, the SM  comprises J texture unit\/L1 caches . The texture unit\/L1 caches  are configured to access texture maps (i.e., a 2D array of texels) from the memory  and sample the texture maps to produce sampled texture values for use in shader programs. The texture unit\/L1 caches  implement texture operations such as anti-aliasing operations using mip-maps (i.e., texture maps of varying levels of detail). In one embodiment, the SM  includes 16 texture unit\/L1 caches . In one embodiment, the texture unit\/L1 caches  may be configured to receive load and store requests from the LSUs  and to coalesce the texture accesses and the load and store requests to generate coalesced memory operations that are output to a memory system that includes the shared memory . The memory system may also include the L2 cache , memory , and a system memory (not shown).","The PPU  described above may be configured to perform highly parallel computations much faster than conventional CPUs. Parallel computing has advantages in graphics processing, data compression, biometrics, stream processing algorithms, and the like.","In one embodiment, the systems described herein may be utilized to efficiently simulate light transport. For example, based on the Alias Method that has been developed for efficient particle simulation on SIMD architectures, new algorithms for using measured data in photorealistic image synthesis may be implemented. The benefits of implementing such algorithms include higher image fidelity, increased efficiency, and a simpler implementation, which are implemented with a focus on light transport simulation with measured reflectance data.","Previously, the Alias Method has only been used to simulate discrete densities on SIMD architectures. In one embodiment of the present invention, however, the use of the Alias Method may be extended to partitioning distributions and simulating each of the partitions with a simulation method. Furthermore, in one embodiment, a mapping of low discrepancy sequences may be utilized in context of the Alias Method to allow for simulating discrete densities without resorting to floating point computation. This has advantages over previous techniques that had to cope with effects of cancellation in long sums (such as computing cumulative distribution functions, etc.).","In another embodiment, the Alias Method may be utilized to decompose a measured BRDF into portions that can be evaluated by shadow rays and portions that are better simulated using scattering. This particular algorithm may be implemented to reduce instruction as well as memory divergence in a SIMD or SIMT architecture to the bare minimum of O(1).","Modern processors draw a part of their efficiency from a SIMD or SIMT architecture. A known issue with such architectures is divergence. One way to execute different instructions across the multiple lanes of data is to mask out lanes, which reduces the efficiency.","In the practical case of scattering photons, this means that performance is sacrificed, whenever different lanes have to simulate different mathematical models of surface properties. Abstracting, there is a need for a data structure and algorithm that allows for efficiently sampling from different probability density functions across the lanes of a SIMD or SIMT architecture.","The Alias Method addresses such issues. See, for example, \u201cA linear algorithm for generating random numbers with a given distribution\u201d (M. Vose, IEEE Trans. on Software Engineering, 17(9):972-975, 1991) and references therein, which describes Alias Method examples and is hereby incorporated by reference in its entirety.","Different discrete probability distribution functions can be simulated across lanes, while the same instructions are executed synchronously. The Alias Method utilizes an alias map a: {0, . . . , n\u22121}\u2192{0, . . . , n\u22121} for 0\u2266i<n and corresponding probabilities q\u03b5[0,1] such that the given discrete probability density function (Algorithm 1)",{"@attributes":{"id":"p-0051","num":"0050"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":"p","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},{"mrow":[{"munderover":{"mo":"\u2211","mrow":[{"mi":"i","mo":"=","mn":"0"},{"mi":"n","mo":"-","mn":"1"}]},"mo":"\u2062","mrow":{"mrow":{"msub":{"mi":["\u03c7","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},"mo":"\u2062","msub":{"mi":["p","i"]}}},{"mfrac":{"mn":"1","mi":"n"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":[{"mi":"i","mo":"=","mn":"0"},{"mi":"n","mo":"-","mn":"1"}]},"mo":"\u2062","mrow":{"mo":["(",")"],"mrow":{"mrow":[{"mrow":{"msub":{"mi":["\u03c7","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},"mo":"\u2062","msub":{"mi":["q","i"]}},{"mrow":[{"msub":{"mi":"\u03c7","msub":{"mi":["a","i"]}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","msub":{"mi":["q","i"]}}}],"mo":"\u2062"}],"mo":"+"}}}}],"mo":"="}],"mo":":="}}},"br":{},"sub":"i "},{"@attributes":{"id":"p-0052","num":"0051"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mo":["[",")"],"mrow":{"mfrac":[{"mi":["i","n"]},{"mrow":{"mi":"i","mo":"+","mn":"1"},"mi":"n"}],"mo":","}},"mo":"."}}}},"Given such a representation, sampling is a two-step procedure. First, a term i is uniformly selected. The second decision is to select either i or its alias aby comparing a number selected uniformly in [0,1) to q. The algorithm can be implemented using only one uniform number, which needs to be multiplied by n. The integer part is taken to be i, while the fraction is used to decide for either i or its alias a(as before). While this variant is very elegant, one must guarantee that the fraction still provides a sufficient number of uniform digits in order to avoid a deviation from the targeted distribution.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 4","b":["400","410","400","400"]},"An alias map  constructed from the discrete probability distribution  allows for generating samples according to the given discrete probability distribution by uniformly selecting one of the columns and then deciding for either the column or its alias.","Given the discrete probability density p\u03b5[0,1], \u03a3p=1, the algorithm in Listing  constructs the alias map aand according probabilities qin linear time. During construction, an additional permutation array is required that keeps track of the partition of probabilities below and above 1\/n. Looking at the implementation, it becomes apparent that the alias map ais injective as locations can be referenced more than once. Probabilities p<1\/n are never modified, while the mass of probabilities p\u22671\/n becomes distributed. Both for-loops run in at most O(n) and termination is unconditionally stable, as it does not depend on floating point precision. Note that while the algorithm is deterministic, the construction of the alias map is not unique.","Similar to computing the cumulative distribution function (CDF), care must be taken when normalizing density functions. Kahan-summation or hierarchical summation can help to ameliorate the effects of cancellation when summing large arrays of numbers. Listing  shows exemplary code for alias map construction, in accordance with one embodiment.",{"@attributes":{"id":"p-0058","num":"0057"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Listing 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u20021","void build("]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u20022","\/\/ In: Un -normalized probabilities"]},{"entry":[{},"\u20023","std::vector <float >& aP ,"]},{"entry":[{},"\u20024","\/\/ Out: Q's"]},{"entry":[{},"\u20025","std::vector <float >& aQ ,"]},{"entry":[{},"\u20026","\/\/ Out: Alias map"]},{"entry":[{},"\u20027","std::vector <unsigned int >& aAliasMap)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u20028","{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u20029","\/\/ Allocate memory"]},{"entry":[{},"10","aQ.resize(aP.size ( ));"]},{"entry":[{},"11","aAliasMap.resize(aP.size( ));"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"12"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"13","\/\/ Normalize probabilities"]},{"entry":[{},"14","float sum = 0.0f;"]},{"entry":[{},"15","for (unsigned int i=0u; i < aP.size( ); ++i)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"16","sum + = aP[i];"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"17","for (unsigned int i=0u; i < aP.size( ); ++i)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"18","aP[i] \/= sum;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"19"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"20","\/\/ Partition in larger and smaller than 1 \/ n"]},{"entry":[{},"21","std::vector <unsigned int> partitionTable(aP.size( ));"]},{"entry":[{},"22","unsigned int s = 0u, 1 = aP.size( );"]},{"entry":[{},"23","for (unsigned int i=0u; i < aP.size( ); ++i)"]},{"entry":[{},"24","\u2003{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"25","aAliasMap[i] = i;"]},{"entry":[{},"26","aQ[i] = aP[i] * aP.size ( );"]},{"entry":[{},"27","partitionTable[aQ[i] <1.0f? s++ : \u2212\u22121] = i;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"28","\u2003}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"29"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"30","\u2003\/\/ Create map"]},{"entry":[{},"31","\u2003for (s = 0; s < 1 && 1 < aP.size( ); ++s)"]},{"entry":[{},"32","\u2003{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"33","\u2003const unsigned int j = partitionTable[s], k ="]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"partitionTable[1];"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"34","\u2003aAliasMap[j] = k;"]},{"entry":[{},"35","\u2003aQ[k] += aQ[j] \u2212 1.0f;"]},{"entry":[{},"36","\u20031 = aQ[k] < 1.0f? 1 + 1u : 1;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"37","\u2003}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"38\u2003}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"As noted, in one embodiment, low discrepancy sequences may be mapped to the Alias Method to allow simulating discrete densities without floating point computation.","For example, (t, s)-sequences in base b are defined as sequences of (t, m, s)-nets in base b, which consist of bpoints in the s-dimensional unit cube. See, for example, \u201cRandom Number Generation and Quasi-Monte Carlo Methods\u201d (H. Niederreiter, SIAM, Philadelphia, 1992), which is incorporated by reference in its entirety.","This subset property is of special interest for (0, 1)-sequences, where integer parts of each (0, m, 1)-net multiplied by bare a permutation of {0, . . . , b\u22121}. Such sequences include the van der Corput sequences as well as the components of rank- lattice sequences, where the corresponding component of the generator vector is co-prime to b. More information associated with rank- lattice sequences may be found in \u201cExtensible lattice sequences for quasi-Monte Carlo quadrature\u201d (F. Hickernell, H. Hong, P. L'Ecuyer, and C. Lemieux, SIAM J. Sci. Comput., 22:1117-1138, 2001), which is hereby incorporated by reference in its entirety.","Given that bmatches the size of the data structures of the Alias Method, the permutations can be used as array indices avoiding any floating point computation and conversion and thus resulting in perfect precision. For higher dimensions and t=0 the same properties guarantee that each element of the alias map data structure is addressed exactly once before repetitions can occur. In various embodiments, either an inversion method or the Alias Method may be used to direct adaptive sampling. More information associated with the inversion method may be found in \u201cFast primitive distribution for illustration\u201d (A. Secord, W. Heidrich, and L. Streit, in 13Eurographics Workshop on Rendering, pages 215-226), which is hereby incorporated by reference in its entirety.","Samples inside the interval associated with a probability can be enumerated as introduced in \u201cEnumerating Quasi-Monte Carlo Point Sequences in Elementary Intervals\u201d (L. Gr\u00fcnschlo\u03b2, M. Raab, and A. Keller, In L. Plaskota and H. Wo\u017aniakowski, editors, Monte Carlo and Quasi-Monte Carlo Methods 2010, pages 399-408. Springer, 2012), which is incorporated by reference in its entirety. This process enumerates a subset of a low discrepancy sequence, whose density is proportional to the desired discrete probability distribution. In a similar way, the Alias Method may be used to realize consistent adaptive sampling as described in \u201cA hierarchical automatic stopping condition for Monte Carlo global illumination\u201d (H. Dammertz, J. Hanika, A. Keller, and H. Lensch, in Proc. of the WSCG 2009, pages 159-164, 2009), and U.S. patent application Ser. No. 12\/512,782, filed Jul. 30, 2009 and titled \u201cSystem, method, and computer program product for consistent image synthesis,\u201d which are hereby incorporated by reference in their entirety.","Further, more information associated with low discrepancy sequences may be found in \u201cRandom Number Generation and Quasi-Monte Carlo Methods\u201d (H. Niederreiter, SIAM, Philadelphia, 1992), which is incorporated by reference in its entirety.","In the context of distribution functions, there are differences between simple mathematical models and measured bidirectional reflectance distribution functions (BRDF). Not surprisingly, a small number of basis functions are not able to capture the subtleties of measured data efficiently.","Reflectance data is high dimensional as it can depend on incidence and reflectance direction, on wavelength, and location. Measuring along all these 7 dimensions would result in huge data. For the scope of this description, isotropic BRDF data measured in one location is considered, which can be represented by a block of 3-dimensional data for each wavelength. Such measurements can be found on the web, for example, in the Columbia-Utrecht Reflectance and Texture Database (CuRET), in the measurement data of the Cornell University Program of Computer Graphics, and in the Mitsubishi Electric Research Laboratories (MERL) BRDF Database, see, for example, \u201cA Data-Driven Reflectance Model\u201d (W. Matusik, H. Pfister, M. Brand, and L. McMillan, ACM Transactions on Graphics (Proc. SIGGRAPH 2003), 22(3):759-769), which is hereby incorporated by reference in its entirety.","More measurements may be found in, for example, the anisotropic data accompanying \u201cExperimental Analysis of BRDF Models\u201d (A. Ngan, F. Durand, and W. Matusik, In Rendering Techniques 2005 (Proc. 13Eurographics Symposium on Rendering), pages 117-226. Eurographics Association, 2005), which is hereby incorporated by reference in its entirety.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 5","b":["500","500","500"]},{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 5","FIG. 5"]},"The simulation of such models includes applying the composition or Alias Method to select a basis function followed by sampling the selected basis function using the inversion method. In order to increase efficiency, rendering algorithms often rely on a classification of BRDF basis functions in more diffuse and more glossy basis functions. See, for example, \u201cProgressive pointlight-based global illumination\u201d (H. Dammertz, A. Keller, and H. Lensch, Computer Graphics Forum, 29(8):2504-2515, 2010), which is hereby incorporated by reference in its entirety.","For discrete measured data, such a classification is not obvious. While both the Alias Method and the inversion method can be readily applied to simulate scattering, it can be more efficient to decompose the data into a part that is easy to integrate and a part that is easy to simulate.","Given a fixed direction \u03c9of incidence, then a measured bidirectional reflectance distribution function (BRDF) \u0192(\u03c9, x, \u03c9) in a point x can be considered an array of data, where each element \u0192represents measured reflectivity and its position i in the array specifies the directional dependence. For the sake of simplicity, a discrete probability density function",{"@attributes":{"id":"p-0073","num":"0072"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["p","i"]},"mo":"=","mfrac":{"msub":{"mi":["f","i"]},"mrow":{"munder":{"mo":"\u2211","mi":"i"},"mo":"\u2062","msub":{"mi":["f","i"]}}}}}},"br":{},"sub":["i","r,i","\u221e"]},"Now the application of the Alias method of Algorithm 1 to a measured BRDF",{"@attributes":{"id":"p-0075","num":"0074"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"msub":{"mi":["f","r"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},{"mrow":{"msub":{"mi":["f","r"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},"mo":"\u2062","mfrac":{"mrow":[{"mi":"p","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},{"mi":"p","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}}]}}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mi":{},"mo":"\u2062","mrow":{"mrow":[{"mrow":{"msub":{"mi":["f","r"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},"mo":"\u2062","mfrac":{"mrow":[{"mo":"\u2211","mrow":{"mrow":{"msub":{"mi":["\u03c7","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},"mo":"\u2062","msub":{"mi":["q","i"]}}},{"mi":"np","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}}]}},{"mrow":{"msub":{"mi":["f","r"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},"mo":"\u2062","mfrac":{"mrow":[{"mo":"\u2211","mrow":{"mrow":[{"msub":{"mi":"\u03c7","msub":{"mi":["a","i"]}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","msub":{"mi":["q","i"]}}}],"mo":"\u2062"}},{"mi":"np","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}}]}}],"mo":"+"}}}}]}}},"br":{},"figref":"FIG. 5","sub":["i ","i","i"]},"The probability of the evaluation component is",{"@attributes":{"id":"p-0077","num":"0076"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"msub":{"mi":["p","e"]},"mo":":=","mrow":{"mfrac":{"mn":"1","mi":"n"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":[{"mi":"i","mo":"=","mn":"0"},{"mi":"n","mo":"-","mn":"1"}]},"mo":"\u2062","msub":{"mi":["q","i"]}}}},"mo":","}}},"br":{},"sub":["s","e "]},{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 6","b":["600","600","600"]},{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 6"},"Example  utilizes measured BRDF Data from the MERL Database to illustrate the decomposition approach for light transport simulation. The measured BRDF data has been taken from the MERL database of isotropic BRDFs. See, for example, \u201cA Data-Driven Reflectance Model\u201d (W. Matusik, H. Pfister, M. Brand, and L. McMillan, ACM Transactions on Graphics (Proc. SIGGRAPH 2003), 22(3):759-769), which is hereby incorporated by reference in its entirety.","The parameterization underlying the MERL data exposes high sample density around the reflection lobes.","More information associated with parameterization may be found in \u201cA new change of variables for efficient BRDF representation\u201d (S. Rusinkiewicz, in Rendering Techniques (Proc. Eurographics Workshop on Rendering), pages 11-28, Springer Verlag, 1998), which is hereby incorporated by reference in its entirety.","As the parameterization requires both incident and reflection direction to evaluate the BRDF data access it does not lend itself for simple use in scattering simulation. In addition, enumerating the data items and applying the inverse parameterization to compute the associated pairs of incident and reflected direction reveals that the incident directions need to be quantized in order to use them for scattering simulation.","For this example, for an isotropic BRDF, a number of uniform buckets are fixed along the \u03b8 dimension of the incident directions, then all data items are enumerated, and the counter of the bucket containing the angle \u03b8 of the direction of incidence of the data item is increased. Only data items with valid direction pairs need to be considered.","The counters then determine the memory that needs to be allocated to keep the data for the alias maps. The arrays are filled by enumerating the data items a second time. Finally all arrays are processed to yield an alias maps for each bucket of \u03b8. Given an incident direction, its angle \u03b8 determines the alias map to use for scattering simulation.","For modeling with measured materials, one way to take advantage of the Alias Method with measured materials is to offer it as a dictionary function in the context of layered materials. A simple special case of this approach is to represent specular behavior separate from the remaining reflection behavior captured by measured data. In order to model varying surface properties, a texture with references to measured materials can be used in the obvious way. In addition measured material data structures can be generated algorithmically, be processed algorithmically similar to image processing, and even can be designed or \u201cpainted\u201d by artists.","Due to its ease of the implementation, its speed of sample generation, and its suitability to SIMD and SIMT architectures, the Alias Method may be utilized in the context of light transport simulation. Beyond the straightforward application, the function decomposition induced by the alias map construction is introduced as a new concept to increase efficiency.","With respect to sampling multiple lights, the alias method may be applied in order to select one out of many light sources. Using an image for lighting, each pixel can be considered an individual light source. Often importance sampling is realized using a MIP map and samples according to the light distribution are generated by traversing the MIP map hierarchy. Again, the Alias Method can be applied in a straightforward way in order to avoid hierarchy traversal. In some cases, attention must be paid to the fact that floating point numbers may not provide a sufficient number of bits to access all entries of the alias map. Similarly using a one-dimensional access to a two dimensional image may expose correlation artifacts with the underlying sampling scheme.","As such, care has to be taken that a sufficient number of uniform bits are provided to the Alias Method. For example, if one component of the Halton sequence is used artifacts will exist. While the artifacts would vanish in the limit, they persist for quite some time. Using two components to access the alias map removes the issue. The same is true when using the one-dimensional inversion method with the cumulative distribution function on two-dimensional data.","In one embodiment, an efficient and simple path tracer may be derived that benefits both from powerful variance reduction and the increased realism of measured material simulated by the Alias Method. More information associated with efficient path tracing may be found in \u201cThe Rendering Equation\u201d (in Computer Graphics (Proc. SIGGRAPH 1986), pages 143-150, 1986), which is hereby incorporated by reference in its entirety.","For example, the effect of implicit multiple importance sampling in a simple path tracer with next event estimation shows that the improvement due to the multiple importance sampling weights is dramatic on glossy surfaces, large area lights, and environment lighting, while it may be less perceivable on diffuse surfaces.","Generating light transport paths is based on two basic techniques: scattering in order to prolong a path segment and tracing shadow rays in order to connect mutually visible vertices of path segments. Unless the choice of technique is obvious, multiple importance sampling can combine the techniques such that the variance can be reduced.","More information associated with multiple importance sampling may be found in \u201cRobust Monte Carlo Methods for Light Transport Simulation\u201d (E. Veach, PhD thesis, Stanford University, 1997), and \u201cMathematical Models and Monte Carlo Algorithms for Physically Based Rendering\u201d (E. Lafortune, PhD thesis, Katholieke Universitiet Leuven, Belgium, 1996), which are hereby incorporated by reference in their entirety.","Given a function \u0192(x) to be integrated and multiple densities p(x) that can be evaluated and sampled, the idea of multiple importance sampling is to use a linear combination \u03a3w(x)p(x)=1\u2200x \u03b5 supp \u0192 to transform the integral",{"@attributes":{"id":"p-0095","num":"0094"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"msub":{"mo":"\u222b","mi":"D"},"mo":"\u2062","mrow":{"mrow":[{"mi":"f","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},{"mo":"\u2146","mi":"x"}],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.2em","height":"0.2ex"}}}}},{"msub":{"mo":"\u222b","mi":"D"},"mo":"\u2062","mrow":{"munder":{"mrow":{"munderover":{"mo":"\u2211","mrow":[{"mi":"i","mo":"=","mn":"0"},{"mi":"m","mo":"-","mn":"1"}]},"mo":"\u2062","mrow":{"mrow":[{"msub":{"mi":["w","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},{"mo":["(",")"],"mi":"x"}],"mo":["\u2062","\u2062"],"msub":{"mi":["p","i"]}}},"munder":{"mi":"\ufe38","mrow":{"mo":"=","mrow":{"mn":"1","mo":"\u2062","mrow":{"mo":"\u2200","mi":"x"}}}}},"mo":["\u2062","\u2062","\u2062"],"mrow":[{"mi":"f","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},{"mo":"\u2146","mi":"x"}],"mstyle":{"mspace":{"@attributes":{"width":"0.2em","height":"0.2ex"}}}}}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"munderover":{"mo":"\u2211","mrow":[{"mi":"i","mo":"=","mn":"0"},{"mi":"m","mo":"-","mn":"1"}]},"mo":"\u2062","mrow":{"msub":{"mo":"\u222b","msup":{"mrow":{"mo":["(",")"],"mrow":{"mn":["0","1"],"mo":","}},"mi":"s"}},"mo":"\u2062","mrow":{"mrow":[{"msub":{"mi":["w","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},{"mi":"f","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},{"mrow":{"mo":"\u2146","mrow":{"msub":{"mi":["P","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}}},"mo":"."}],"mo":["\u2062","\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.2em","height":"0.2ex"}}}}}}}}}]}}}},"Each of the resulting m integrals then can be evaluated by averaging samples generated according to p(x) weighted by w(x).","The so-called balance heuristic",{"@attributes":{"id":"p-0098","num":"0097"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":[{"msub":{"mi":["w","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}},{"mi":"w","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}}],"mo":"\u2261"},"mo":":=","mfrac":{"mn":"1","mrow":{"munderover":{"mo":"\u2211","mrow":[{"mi":"j","mo":"=","mn":"0"},{"mi":"m","mo":"-","mn":"1"}]},"mo":"\u2062","mrow":{"msub":{"mi":["p","j"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}}}}}}},"br":{}},"Other heuristics (e.g. the power heuristic, etc.) may be found in \u201cRobust Monte Carlo Methods for Light Transport Simulation\u201d (E. Veach, PhD thesis, Stanford University, 1997), and \u201cMathematical Models and Monte Carlo Algorithms for Physically Based Rendering\u201d (E. Lafortune, PhD thesis, Katholieke Universitiet Leuven, Belgium, 1996), which are hereby incorporated by reference in their entirety.","Samples x for which p(x)=0 obviously cannot be generated, which requires w(x)=0 to make the method work. As a direct consequence, for any x at least one density must be positive, i.e. p(x)>0. It may well happen that this cannot be guaranteed, which is called the problem of insufficient techniques. See, for example, \u201cEfficient bidirectional path tracing by randomized quasi-Monte Carlo integration\u201d (T. Kollig and A. Keller, in H. Niederreiter, K. Fang, and F. Hickernell, editors, Monte Carlo and Quasi-Monte Carlo Methods 2000, pages 290-305. Springer, 2002), which is hereby incorporated by reference in its entirety.","As an example of direct illumination, given an emission distribution Lon the scene surface, the direction illumination",{"@attributes":{"id":"p-0102","num":"0101"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"msub":{"mo":"\u222b","mrow":{"msubsup":{"mi":"s","mo":"-","mn":"2"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}}},"mo":"\u2062","mrow":{"mrow":[{"msub":{"mi":["L","e"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"h","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","\u03c9"],"mo":","}}}}},{"mo":"\u2146","mi":"\u03c9"}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062"],"msub":[{"mi":["f","r"]},{"mi":["\u03b8","x"]}],"mi":"cos","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},{"msub":{"mo":"\u222b","mrow":{"mi":"supp","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["L","e"]}}},"mo":"\u2062","mrow":{"mrow":[{"msub":{"mi":["L","e"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"y"}},{"mi":"V","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","y"],"mo":","}}},{"mo":"\u2146","mi":"y"}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"msub":[{"mi":["f","r"]},{"mi":["\u03b8","x"]}],"mi":"cos","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mfrac":{"mrow":{"mi":"cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["\u03b8","y"]}},"msup":{"mrow":{"mo":["\uf603","\uf604"],"mrow":{"mi":["x","y"],"mo":"-"}},"mn":"2"}}}}],"mo":"="}}},"br":[{},{},{}],"sub":["e","r ","x"],"in-line-formulae":[{},{}],"i":["p","w","p","y"]},"Given the hit point y:=h(x,w), the visibility V(x,y) is one, and the relationship",{"@attributes":{"id":"p-0104","num":"0103"},"maths":{"@attributes":{"id":"MATH-US-00009","num":"00009"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"msub":{"mi":["p","\u03c9"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"y"}},{"mrow":{"mi":"p","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},"mo":"\u2062","mfrac":{"mrow":{"mi":"cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["\u03b8","y"]}},"msup":{"mrow":{"mo":["\uf603","\uf604"],"mrow":{"mi":["x","y"],"mo":"-"}},"mn":"2"}}}],"mo":"="}}},"br":{}},{"@attributes":{"id":"p-0105","num":"0104"},"maths":{"@attributes":{"id":"MATH-US-00010","num":"00010"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":{"mi":"w","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"y"}},"mo":["=","\u2062"],"mi":{},"mfrac":{"mn":"1","mrow":{"mrow":[{"mi":"p","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"y"}},{"msub":{"mi":["p","\u03c9"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"y"}}],"mo":"+"}}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mfrac":{"mn":"1","mrow":{"mn":"1","mo":"+","mrow":{"msub":[{"mi":["f","r"]},{"mi":["\u03b8","x"]}],"mo":["\u2062","\u2062","\u2062","\u2062"],"mi":"cos","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mfrac":{"mrow":{"mi":"cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["\u03b8","y"]}},"msup":{"mrow":{"mo":["\uf603","\uf604"],"mrow":{"mi":["x","y"],"mo":"-"}},"mn":"2"}}}}}}}},{"mtd":{"mrow":{"mrow":{"mo":["=","\u2062"],"mi":{},"mfrac":{"msup":{"mrow":{"mo":["\uf603","\uf604"],"mrow":{"mi":["x","y"],"mo":"-"}},"mn":"2"},"mrow":{"msup":{"mrow":{"mo":["\uf603","\uf604"],"mrow":{"mi":["x","y"],"mo":"-"}},"mn":"2"},"mo":"+","mrow":{"msub":[{"mi":["f","r"]},{"mi":["\u03b8","x"]},{"mi":["\u03b8","y"]}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mi":["cos","cos"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}}}},"mo":","}}}]}}},"br":{}},{"@attributes":{"id":"p-0106","num":"0105"},"maths":{"@attributes":{"id":"MATH-US-00011","num":"00011"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":{"mi":"w","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}},"mo":["=","\u2062"],"mi":{},"mfrac":{"mn":"1","mrow":{"mrow":[{"mrow":{"mi":"p","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"y"}},"mo":"\u2062","mfrac":{"msup":{"mrow":{"mo":["\uf603","\uf604"],"mrow":{"mi":["x","y"],"mo":"-"}},"mn":"2"},"mrow":{"mi":"cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["\u03b8","y"]}}}},{"mi":"p","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}}],"mo":"+"}}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mfrac":{"mrow":[{"mi":"cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["\u03b8","y"]}},{"msup":{"mrow":{"mo":["\uf603","\uf604"],"mrow":{"mi":["x","y"],"mo":"-"}},"mn":"2"},"mo":"+","mrow":{"msub":[{"mi":["f","r"]},{"mi":["\u03b8","x"]},{"mi":["\u03b8","y"]}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mi":["cos","cos"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}}]}}}},{"mtd":{"mrow":{"mo":["(",")"],"mrow":{"mo":["=","\u2062"],"mi":{},"mfrac":{"mrow":[{"mrow":{"mo":["(",")"],"mrow":{"mn":"1","mo":"-","mrow":{"mi":"w","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"y"}}}},"mo":"\u2062","mfrac":{"msup":{"mrow":{"mo":["\uf603","\uf604"],"mrow":{"mi":["x","y"],"mo":"-"}},"mn":"2"},"mrow":{"mi":"cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["\u03b8","y"]}}}},{"mi":"p","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03c9"}}]}}}}}]}}},"br":{}},{"@attributes":{"id":"p-0107","num":"0106"},"maths":[{"@attributes":{"id":"MATH-US-00012","num":"00012"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["L","d"]},"mo":"=","mrow":{"mrow":[{"msub":{"mo":"\u222b","mrow":{"mi":"supp","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["L","e"]}}},"mo":"\u2062","mrow":{"mrow":[{"msub":{"mi":["L","e"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["y","x"],"mo":","}}},{"mi":"V","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","y"],"mo":","}}},{"mo":"\u2146","mi":"y"}],"mo":["\u2062","\u2062","\u2062"],"mfrac":{"mrow":[{"msub":[{"mi":["f","r"]},{"mi":["\u03b8","x"]},{"mi":["\u03b8","y"]}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mi":["cos","cos"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]},{"msup":{"mrow":{"mo":["\uf603","\uf604"],"mrow":{"mi":["x","y"],"mo":"-"}},"mn":"2"},"mo":"+","mrow":{"msub":[{"mi":["f","r"]},{"mi":["\u03b8","x"]},{"mi":["\u03b8","y"]}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mi":["cos","cos"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}}]}}},{"msub":{"mo":"\u222b","mrow":{"msubsup":{"mi":"s","mo":"-","mn":"2"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}}},"mo":"\u2062","mrow":{"mrow":[{"msub":{"mi":["L","e"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["y","x"],"mo":","}}},{"mo":"\u2146","mi":"\u03c9"}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mfrac":{"mrow":[{"mi":"cos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["\u03b8","y"]}},{"msup":{"mrow":{"mo":["\uf603","\uf604"],"mrow":{"mi":["x","y"],"mo":"-"}},"mn":"2"},"mo":"+","mrow":{"msub":[{"mi":["f","r"]},{"mi":["\u03b8","x"]},{"mi":["\u03b8","y"]}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mi":["cos","cos"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}]}}]},"msub":[{"mi":["f","r"]},{"mi":["\u03b8","x"]}],"mi":"cos","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}],"mo":"+"}}}},{"@attributes":{"id":"MATH-US-00012-2","num":"00012.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mstyle":{"mspace":{"@attributes":{"width":"1.1em","height":"1.1ex"}}},"mo":"\u2062","mrow":{"mrow":[{"mi":["with","y"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},{"mi":"h","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","\u03c9"],"mo":","}}}],"mo":"="}}}}]},"The terms of the above equation are bounded, which yields finite variance Monte Carlo estimators. In a numerical algorithm, the undefined 0\/0 case needs to be avoided explicitly. Both integrals contain the same term of the form a\/(b+a). In order to avoid numerical exceptions, it is sufficient to test a=cos \u03b8cos \u03b8for zero explicitly, since then no radiation is transported. Note that testing for a<\u03b5 is incorrect as for small distances |x\u2212y|<<a substantial amounts of transport can be excluded.","In one embodiment, a path tracer with next event estimation may be implemented by recycling scattering rays for multiple importance sampling. See, for example, \u201cMathematical Models and Monte Carlo Algorithms for Physically Based Rendering\u201d (E. Lafortune, PhD thesis, Katholieke Universitiet Leuven, Belgium, 1996). More information associated with implicit multiple importance sampling may be found in \u201cA comparison of light transport algorithms on the GPU\u201d (K. Dahm, Master's thesis, Computer Graphics Group, Saarland University, Germany, 2011), and \u201cUnbiased physically based rendering on the GPU\u201d (D. van Antwerpen, Master's thesis, Computer Graphics Research Group, Department of Software Technology Faculty EEMCS, Delft University of Technology, the Netherlands, 2011), which are hereby incorporated by reference in their entirety.","The implementation within the NVIDIA OptiX framework is found in Listing . More information associated with OptiX may be found in \u201cOptiX: A general purpose ray tracing engine\u201d (S. Parker, J. Bigler, A. Dietrich, H. Friedrich, J. Hoberock, D. Luebke, D. McAllister, M. McGuire, K. Morley, A. Robison, and M. Stich, ACM Transactions on Graphics (TOG)\u2014Proceedings of ACM SIGGRAPH 2010 TOG, 29(4):Article No. 66, 2010), which is hereby incorporated by reference in its entirety.","Radiance transport can be formulated recursively as radiance L=L+TL, which is source radiance plus transported radiance. The transported radiance",{"@attributes":{"id":"p-0112","num":"0111"},"maths":{"@attributes":{"id":"MATH-US-00013","num":"00013"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"msub":{"mi":["T","f"]},"mo":"\u2062","mi":"L"},{"msub":{"mi":["T","f"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["L","e"]},"mo":"+","mrow":{"msub":{"mi":["T","f"]},"mo":"\u2062","mi":"L"}}}}],"mo":["=","\u2062"],"mi":{}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"msub":{"mi":["T","f"]},"mo":["(",")"],"mrow":{"mrow":[{"munder":{"mrow":{"mo":["(",")"],"mrow":{"mrow":[{"msub":[{"mi":"w","mn":"1"},{"mi":"p","mn":"1"}],"mo":"\u2062"},{"msub":[{"mi":"w","mn":"2"},{"mi":"p","mn":"2"}],"mo":"\u2062"}],"mo":"+"}},"munder":{"mi":"\ufe38","mrow":{"mo":"=","mn":"1"}}},"mo":"\u2062","msub":{"mi":["L","e"]}},{"msub":{"mi":["T","f"]},"mo":"\u2062","mi":"L"}],"mo":"+"}}}}},{"mtd":{"mrow":{"mo":["=","\u2062"],"mi":{},"mrow":{"mrow":[{"msub":{"mi":["T","f"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mrow":[{"msub":[{"mi":"w","mn":"1"},{"mi":"p","mn":"1"},{"mi":["L","e"]}],"mo":["\u2062","\u2062"]},{"msub":{"mi":["T","f"]},"mo":"\u2062","mi":"L"}],"mo":"+"}}},{"msub":[{"mi":["T","f"]},{"mi":"w","mn":"2"},{"mi":"p","mn":"2"},{"mi":["L","e"]}],"mo":["\u2062","\u2062","\u2062"]}],"mo":"+"}}}}]}}},"br":{},"sub":"e "},"The final implementation is realized as a for-loop in order to avoid recursion, uses Russian roulette to terminate the path, and recycles the scattering direction for next event estimation with respect to the solid angle. Thus, no additional rays need to be shot as compared to a classic path tracer implementation.",{"@attributes":{"id":"p-0114","num":"0113"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Listing 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"DEVICE_INLINE"},{"entry":"float4 getRadiance("}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"const tMLTSample& aSample)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"{"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Create primary ray"]},{"entry":[{},"optix::Ray ray = camera.lensRadius > 0.0f ?"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003camera.generateRay(aSample.cameraSample.imageSample,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"aSample.cameraSample.lensSample, afBuffer[0], rayTypeRadiance,"]},{"entry":[{},"\u2003aHorizontalOffset) :"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003camera.generateRay(aSample.cameraSample.imageSample, rayTypeRadiance,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"aHorizontalOffset);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Initialize running variables"]},{"entry":[{},"float4 radiance = make_float4(0.0f, 0.0f, 0.0f, 1.0f);"]},{"entry":[{},"float4 alpha = make_float4(1.0f);"]},{"entry":[{},"RayPayload payload;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Trace eye path"]},{"entry":[{},"float brdfPdf;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"bool lastSpecularBounce = true;"]},{"entry":[{},"for (unsigned int length=1;; ++length)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003rtTrace(root, ray, payload);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ Environment light"]},{"entry":[{},"const int brdfType = optix::float_as_int(payload.brdfData.data1.w);"]},{"entry":[{},"if (brdfType == ENVIRONMENT)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if (mapRes.x != 0u)"]},{"entry":[{},"{"]},{"entry":[{},"\u2003const RadianceSample sample = getRadiance(ray.direction);"]},{"entry":[{},"\u2003const, float weight = useMIS ?"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"(lastSpecularBounce ? 1.0f : 1.0f \/ (1.0f + sample.pdfDirect \/ brdfPdf)) :"]},{"entry":[{},"(lastSpecularBounce ? 1.0f : 0.0f);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003radiance += alpha * weight * sample.radiance;"]},{"entry":[{},"\u2003radiance.w = 1.0f;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"break;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/ Area light source"},{"entry":"const float3 ns = payload.frame.getNormal( );"},{"entry":"const float3 ng = payload.geomNormal;"},{"entry":"if (brdfType == EMISSION)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"const float3 incoming = \u2212ray.direction;"]},{"entry":[{},"const float cosTheta = dot(incoming, ns);"]},{"entry":[{},"const TriangleLight& light = triLights[optix::float_as_int(payload.brdfData.data0.w)];"]},{"entry":[{},"float weight = 1.0f;"]},{"entry":[{},"if (!lastSpecularBounce)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if(useMIS)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"const RadianceSample sample = light.getRadiance(incoming);"]},{"entry":[{},"const float distance = optix::length(ray.origin \u2212 payload.position);"]},{"entry":[{},"const float lightPdfSA ="]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Math::toSolidAngleMeasure(sample.pdfDirect, cosTheta, distance);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"weight = 1.0f \/ (1.0f + lightPdfSA \/ brdfPdf);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"weight = 0.0f;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"radiance +="]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"cosTheta > 0.0f ? alpha * weight * payload.brdfData.data0 : make_float4(0.0f,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"0.0f, 0.0f, 1.0f);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"break;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/ Terminate path"},{"entry":"if (length == MAX_PATH_LENGTH)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"break;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/ Estimate direct illumination"},{"entry":"float lightPickProb;"},{"entry":"const float& lightSample = aSample.lightingSamples[length].lightPickSample;"},{"entry":"const float3& posSamples = aSample.lightingSamples[length].positionSamples;"},{"entry":"IlluminationSample is = sampleOneLight(payload.position, posSamples, lightSample,"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"lightPickProb);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"if (is.pdfDirectSolidAngle > 0.0f)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"IF_IS_NOT_OCCLUDED_POINT_DIR(payload.position, is.dirToLight, is.distance,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"camera.epsilon)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"float pdf;"]},{"entry":[{},"const float4 brdfFactor = evaluate(payload.brdfData, ns,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2212ray.direction, is.dirToLight, false, pdf);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"const float cosTheta = Math::clampDot(is.dirToLight, ns);"]},{"entry":[{},"const float invPdf = 1.0f \/ (is.pdfDirectSolidAngle * lightPickProb);"]},{"entry":[{},"const float weight = useMIS ?"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003 (is.isDeltaLight ? 1.0f : 1.0f \/ (1.0f + pdf \/ is.pdfDirectSolidAngle)) :"]},{"entry":[{},"\u20031.0f;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"radiance += alpha * weight * brdfFactor * is.radiance * cosTheta * invPdf;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/ Sample BRDF"},{"entry":"float3 outgoing;"},{"entry":"const float4 brdfFactor = sample(payload.brdfData,"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"aSample.cameraPathSamples[length].brdfSamples, ns,"]},{"entry":[{},"\u2212ray.direction, outgoing, brdfPdf, lastSpecularBounce);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"if (brdfPdf == 0.0f || dot(ng, outgoing) < 0.0f)"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"break;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/ Decide whether to terminate the path or to continue"},{"entry":"const float cosTheta = Math::absDot(ns, outgoing);"},{"entry":"const float4 pathScale = brdfFactor * cosTheta \/ brdfPdf;"},{"entry":"const float rrSurviveProb = fminf(1.0f, Math::maxComponent(pathScale));"},{"entry":"if (rrSurvive Prob < aSample.cameraPathSamples[length].rrSample)"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"break;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"alpha *= pathScale \/ rrSurviveProb;"},{"entry":"\/\/ Set up new state"},{"entry":"ray = optix::make_Ray(payload.position, outgoing, rayTypeRadiance, camera.epsilon,"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"TMAX);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"return radiance;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"In some cases, an alternative heuristic to deal with the weak singularities in light transport simulation may be implemented. See, for example, \u201cIllumination in the Presence of Weak Singularities\u201d (T. Kollig and A. Keller, in D. Talay and H. Niederreiter, editors, Monte Carlo and Quasi-Monte Carlo Methods 2004, pages 245-257. Springer, 2004), which is hereby incorporated by reference in its entirety.","For the example of integrating direct illumination over the surface of a light source, the weak singularity has been thresholded, while accounting for the loss by an integral over the solid angle:",{"@attributes":{"id":"p-0117","num":"0116"},"maths":{"@attributes":{"id":"MATH-US-00014","num":"00014"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["L","d"]},"mo":"=","mrow":{"mrow":[{"mrow":[{"msub":{"mo":"\u222b","mrow":{"mi":"supp","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["L","e"]}}},"mo":"\u2062","mrow":{"mrow":[{"msub":{"mi":["L","e"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["y","x"],"mo":","}}},{"mi":"V","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","y"],"mo":","}}},{"mo":["{","}"],"mrow":{"mfrac":{"mrow":{"mi":["cos","cos"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"msub":[{"mi":["\u03b8","x"]},{"mi":["\u03b8","y"]}]},"msup":{"mrow":{"mo":["\uf603","\uf604"],"mrow":{"mi":["x","y"],"mo":"-"}},"mn":"2"}},"mo":",","mi":"b"}},{"mo":"\u2146","mi":"y"}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062"],"msub":{"mi":["f","r"]},"mi":"min"}},{"msub":{"mo":"\u222b","mrow":{"msubsup":{"mi":"s","mo":"-","mn":"2"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"x"}}},"mo":"\u2062","mrow":{"mrow":[{"msub":{"mi":["L","e"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["y","x"],"mo":","}}},{"mo":"\u2146","mi":"\u03c9"}],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mfrac":{"mrow":{"mi":"max","mo":"\u2062","mrow":{"mo":["{","}"],"mrow":{"mrow":{"mfrac":{"mrow":{"mi":["cos","cos"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"msub":[{"mi":["\u03b8","x"]},{"mi":["\u03b8","y"]}]},"msup":{"mrow":{"mo":["\uf603","\uf604"],"mrow":{"mi":["x","y"],"mo":"-"}},"mn":"2"}},"mo":"-","mi":"b"},"mo":",","mn":"0"}}},"mfrac":{"mrow":{"mi":["cos","cos"],"mo":["\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}],"msub":[{"mi":["\u03b8","x"]},{"mi":["\u03b8","y"]}]},"msup":{"mrow":{"mo":["\uf603","\uf604"],"mrow":{"mi":["x","y"],"mo":"-"}},"mn":"2"}}},"msub":[{"mi":["f","r"]},{"mi":["\u03b8","x"]}],"mi":["cos","with","y"],"mstyle":[{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},{"mtext":{}},{"mspace":{"@attributes":{"width":"1.1em","height":"1.1ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}]}}],"mo":"+"},{"mi":"h","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["x","\u03c9"],"mo":","}}}],"mo":"="}}}}},"In the context of thresholding in a path tracing framework with next event estimation, with the alias or inversion method at hand, scattering can be simulated with respect to measured materials and given a light source with area A, the bound",{"@attributes":{"id":"p-0119","num":"0118"},"maths":{"@attributes":{"id":"MATH-US-00015","num":"00015"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"b","mo":"=","mfrac":{"mn":"1","mrow":{"msub":{"mi":["f","r"]},"mo":"\u2062","mi":"A"}}}}},"br":{},"sub":"e"},"As the algorithms only differ in their weights, they actually trace the same set of rays and the difference with respect to computation time is negligible. The area A actually is determined by the light source selected or hit and thus influences the threshold b as well as the BRDF \u0192.","For some scenes it may be insufficient to have a single technique for capturing specific lighting effects. A simple path tracer with next event estimation, for example, may be very inefficient in rendering directly seen caustics whereas a bidirectional approach can have an orders of magnitude higher pdf for such paths. One possible solution is to combine multiple techniques and weight them using implicit multiple importance sampling.","In one embodiment, a combination of bidirectional path tracing and progressive photon mapping using implicit multiple importance sampling may be implemented. In addition to bidirectional path tracing, density estimation may be performed at each camera vertex and the multiple importance sampling may be adapted to account for the new technique. In one embodiment, the weights may be implicitly computed such that it is not necessary to store the full path in memory.","Listing  shows pseudo code, in accordance with one embodiment.",{"@attributes":{"id":"p-0124","num":"0123"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Listing 3"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"- Trace N photons"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"- At each non-specular surface intersection"]},{"entry":[{},"\u2003- Explicitly connect to camera"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"and add its weighted contribution to image plane"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"- Build photon tree"]},{"entry":[{},"- Trace N camera paths"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"- At each light source hit"]},{"entry":[{},"\u2003- Add weighted contribution"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"- At each non-specular surface intersection"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"- Explicitly connect to a light"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"source and add its weighted contribution"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"- Perform density estimation and add its weighted contribution"]},{"entry":[{},"- Add weighted contribution of corresponding light subpath"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"In some situations it is advantageous to use only a subset of techniques. For example, path tracing and light tracing may be combined in a GPU implementation. Using implicit multiple importance sampling, a first pass renders the path tracing contribution with the appropriate weights, while in the second pass the contribution of the light tracer is added with the corresponding weights.","Further, in one embodiment, an implementation may utilize a combination of bidirectional path tracing and progressive photon mapping using implicit multiple importance sampling. Additional exemplary images associated with the techniques described herein may be found in U.S. Provisional Patent Application No. 61\/667,362, filed Jul. 2, 2012, titled \u201cLightweight near-eye displays using light field displays and optical deconvolution,\u201d which is hereby incorporated by reference in its entirety.",{"@attributes":{"id":"p-0127","num":"0126"},"figref":"FIG. 7","b":["700","700","701","702","702","700","704","704"]},"The system  also includes input devices , a graphics processor , and a display , i.e. a conventional CRT (cathode ray tube), LCD (liquid crystal display), LED (light emitting diode), plasma display or the like. User input may be received from the input devices , e.g., keyboard, mouse, touchpad, microphone, and the like. In one embodiment, the graphics processor  may include a plurality of shader modules, a rasterization module, etc. Each of the foregoing modules may even be situated on a single semiconductor platform to form a graphics processing unit (GPU).","In the present description, a single semiconductor platform may refer to a sole unitary semiconductor-based integrated circuit or chip. It should be noted that the term single semiconductor platform may also refer to multi-chip modules with increased connectivity which simulate on-chip operation, and make substantial improvements over utilizing a conventional central processing unit (CPU) and bus implementation. Of course, the various modules may also be situated separately or in various combinations of semiconductor platforms per the desires of the user.","The system  may also include a secondary storage . The secondary storage  includes, for example, a hard disk drive and\/or a removable storage drive, representing a floppy disk drive, a magnetic tape drive, a compact disk drive, digital versatile disk (DVD) drive, recording device, universal serial bus (USB) flash memory. The removable storage drive reads from and\/or writes to a removable storage unit in a well-known manner.","Computer programs, or computer control logic algorithms, may be stored in the main memory  and\/or the secondary storage . Such computer programs, when executed, enable the system  to perform various functions. For example, a compiler program that is configured to examine a shader program and enable or disable attribute buffer combining may be stored in the main memory . The compiler program may be executed by the central processor  or the graphics processor . The main memory , the storage , and\/or any other storage are possible examples of computer-readable media.","In one embodiment, the architecture and\/or functionality of the various previous figures may be implemented in the context of the central processor , the graphics processor , an integrated circuit (not shown) that is capable of at least a portion of the capabilities of both the central processor  and the graphics processor , a chipset (i.e., a group of integrated circuits designed to work and sold as a unit for performing related functions, etc.), and\/or any other integrated circuit for that matter.","Still yet, the architecture and\/or functionality of the various previous figures may be implemented in the context of a general computer system, a circuit board system, a game console system dedicated for entertainment purposes, an application-specific system, and\/or any other desired system. For example, the system  may take the form of a desktop computer, laptop computer, server, workstation, game consoles, embedded system, and\/or any other type of logic. Still yet, the system  may take the form of various other devices including, but not limited to a personal digital assistant (PDA) device, a mobile phone device, a television, etc.","Further, while not shown, the system  may be coupled to a network (e.g., a telecommunications network, local area network (LAN), wireless network, wide area network (WAN) such as the Internet, peer-to-peer network, cable network, or the like) for communication purposes.","While various embodiments have been described above, it should be understood that they have been presented by way of example only, and not limitation. Thus, the breadth and scope of a preferred embodiment should not be limited by any of the above-described exemplary embodiments, but should be defined only in accordance with the following claims and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
