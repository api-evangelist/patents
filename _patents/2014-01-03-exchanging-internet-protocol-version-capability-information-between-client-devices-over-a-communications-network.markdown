---
title: Exchanging internet protocol version capability information between client devices over a communications network
abstract: In an embodiment, a dual stack (DS) client device (IPv4+IPv6) configures a header of a message for transmission to include a Via header with an IPv4 address of the DS client device, and transmits the configured message to a server via an IPv6 socket for transmission to a target client device. The target client device receives a message from a server in response to the configured message that identifies the DS capability of the dual stack client device based on a Via header that includes both IPv4 and IPv6 addresses. In another embodiment, a DS client device receives a message with a Via header configuration indicating IPv4 and/or IPv6 addresses through which another client device can communicate, identifies the other client device as DS, IPv4-only or IPv6-only based on the Via header configuration and selects a target format for communication with the other client device based on the identification.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09455910&OS=09455910&RS=09455910
owner: QUALCOMM Incorporated
number: 09455910
owner_city: San Diego
owner_country: US
publication_date: 20140103
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION"],"p":["1. Field of the Invention","Embodiments of the invention relate to exchanging Internet Protocol (IP) version capability information between client devices over a communications network.","2. Description of the Related Art","Wireless communication systems have developed through various generations, including a first-generation analog wireless phone service (1G), a second-generation (2G) digital wireless phone service (including interim 2.5G and 2.75G networks) and third-generation (3G) and fourth-generation (4G) high speed data\/Internet-capable wireless services. There are presently many different types of wireless communication systems in use, including Cellular and Personal Communications Service (PCS) systems. Examples of known cellular systems include the cellular Analog Advanced Mobile Phone System (AMPS), and digital cellular systems based on Code Division Multiple Access (CDMA), Frequency Division Multiple Access (FDMA), Time Division Multiple Access (TDMA), the Global System for Mobile access (GSM) variation of TDMA, and newer hybrid digital communication systems using both TDMA and CDMA technologies.","More recently, Long Term Evolution (LTE) has been developed as a wireless communications protocol for wireless communication of high-speed data for mobile phones and other data terminals. LTE is based on GSM, and includes contributions from various GSM-related protocols such as Enhanced Data rates for GSM Evolution (EDGE), and Universal Mobile Telecommunications System (UMTS) protocols such as High-Speed Packet Access (HSPA).","Access networks using various communication protocols (e.g., 3GPP access networks such as W-CDMA, LTE, etc., or non-3GPP access networks such as WiFi, WLAN or wired LAN, etc.) can be configured to provide Internet Protocol (IP) Multimedia Subsystem (IMS) services via an IMS network managed by an operator (e.g., Verizon, Sprint, AT&T, etc.) to users across a communications system. Users that access the IMS network to request an IMS service are assigned to one of a plurality of regional application servers or application server clusters (e.g., groups of application servers that serve the same cluster region) for supporting the requested IMS service.","In an embodiment, a dual stack (DS) client device (IPv4+IPv6) configures a header of a message for transmission to include a Via header with an IPv4 address of the DS client device, and transmits the configured message to a server via an IPv6 socket for transmission to a target client device. The target client device receives a message from a server in response to the configured message that identifies the DS capability of the dual stack client device based on a Via header that includes both IPv4 and IPv6 addresses. In another embodiment, a DS client device receives a message with a Via header configuration indicating IPv4 and\/or IPv6 addresses through which another client device can communicate, identifies the other client device as DS, IPv4-only or IPv6-only based on the Via header configuration and selects a target format for communication with the other client device based on the identification.","Aspects of the invention are disclosed in the following description and related drawings directed to specific embodiments of the invention. Alternate embodiments may be devised without departing from the scope of the invention. Additionally, well-known elements of the invention will not be described in detail or will be omitted so as not to obscure the relevant details of the invention.","The words \u201cexemplary\u201d and\/or \u201cexample\u201d are used herein to mean \u201cserving as an example, instance, or illustration.\u201d Any embodiment described herein as \u201cexemplary\u201d and\/or \u201cexample\u201d is not necessarily to be construed as preferred or advantageous over other embodiments. Likewise, the term \u201cembodiments of the invention\u201d does not require that all embodiments of the invention include the discussed feature, advantage or mode of operation.","Further, many embodiments are described in terms of sequences of actions to be performed by, for example, elements of a computing device. It will be recognized that various actions described herein can be performed by specific circuits (e.g., application specific integrated circuits (ASICs)), by program instructions being executed by one or more processors, or by a combination of both. Additionally, these sequence of actions described herein can be considered to be embodied entirely within any form of computer readable storage medium having stored therein a corresponding set of computer instructions that upon execution would cause an associated processor to perform the functionality described herein. Thus, the various aspects of the invention may be embodied in a number of different forms, all of which have been contemplated to be within the scope of the claimed subject matter. In addition, for each of the embodiments described herein, the corresponding form of any such embodiments may be described herein as, for example, \u201clogic configured to\u201d perform the described action.","A client device, referred to herein as a user equipment (UE), may be mobile or stationary, and may communicate with a radio access network (RAN). As used herein, the term \u201cUE\u201d may be referred to interchangeably as an \u201caccess terminal\u201d or \u201cAT\u201d, a \u201cwireless device\u201d, a \u201csubscriber device\u201d, a \u201csubscriber terminal\u201d, a \u201csubscriber station\u201d, a \u201cuser terminal\u201d or UT, a \u201cmobile terminal\u201d, a \u201cmobile station\u201d and variations thereof. Generally, UEs can communicate with a core network via the RAN, and through the core network the UEs can be connected with external networks such as the Internet. Of course, other mechanisms of connecting to the core network and\/or the Internet are also possible for the UEs, such as over wired access networks, WiFi networks (e.g., based on IEEE 802.11, etc.) and so on. UEs can be embodied by any of a number of types of devices including but not limited to PC cards, compact flash devices, external or internal modems, wireless or wireline phones, and so on. A communication link through which UEs can send signals to the RAN is called an uplink channel (e.g., a reverse traffic channel, a reverse control channel, an access channel, etc.). A communication link through which the RAN can send signals to UEs is called a downlink or forward link channel (e.g., a paging channel, a control channel, a broadcast channel, a forward traffic channel, etc.). As used herein the term traffic channel (TCH) can refer to either an uplink\/reverse or downlink\/forward traffic channel.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","1","1","1","2","3","5"]},"Referring to , UEs  . . . N are configured to communicate with an access network (e.g., the RAN , an access point , etc.) over a physical communications interface or layer, shown in  as air interfaces , ,  and\/or a direct wired connection. The air interfaces  and  can comply with a given cellular communications protocol (e.g., CDMA, EVDO, eHRPD, GSM, EDGE, W-CDMA, LTE, etc.), while the air interface  can comply with a wireless IP protocol (e.g., IEEE 802.11). The RAN  includes a plurality of access points that serve UEs over air interfaces, such as the air interfaces  and . The access points in the RAN  can be referred to as access nodes or ANs, access points or APs, base stations or BSs, Node Bs, eNode Bs, and so on. These access points can be terrestrial access points (or ground stations), or satellite access points. The RAN  is configured to connect to a core network  that can perform a variety of functions, including bridging circuit switched (CS) calls between UEs served by the RAN  and other UEs served by the RAN  or a different RAN altogether, and can also mediate an exchange of packet-switched (PS) data with external networks such as Internet . The Internet  includes a number of routing agents and processing agents (not shown in  for the sake of convenience). In , UE N is shown as connecting to the Internet  directly (i.e., separate from the core network , such as over an Ethernet connection of WiFi or 802.11-based network). The Internet  can thereby function to bridge packet-switched data communications between UE N and UEs  . . . N via the core network . Also shown in  is the access point  that is separate from the RAN . The access point  may be connected to the Internet  independent of the core network  (e.g., via an optical communication system such as FiOS, a cable modem, etc.). The air interface  may serve UE  or UE  over a local wireless connection, such as IEEE 802.11 in an example. UE N is shown as a desktop computer with a wired connection to the Internet , such as a direct connection to a modem or router, which can correspond to the access point  itself in an example (e.g., for a WiFi router with both wired and wireless connectivity).","Referring to , an application server  is shown as connected to the Internet , the core network , or both. The application server  can be implemented as a plurality of structurally separate servers, or alternately may correspond to a single server. As will be described below in more detail, the application server  is configured to support one or more communication services (e.g., Voice-over-Internet Protocol (VoIP) sessions, Push-to-Talk (PTT) sessions, group communication sessions, social networking services, etc.) for UEs that can connect to the application server  via the core network  and\/or the Internet .","Examples of protocol-specific implementations for the RAN  and the core network  are provided below with respect to  to help explain the wireless communications system  in more detail. In particular, the components of the RAN  and the core network  corresponds to components associated with supporting packet-switched (PS) communications, whereby legacy circuit-switched (CS) components may also be present in these networks, but any legacy CS-specific components are not shown explicitly in .",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 2A","FIG. 2A","FIG. 2A"],"b":["120","140","120","200","205","210","215","120","215","220","140","220","215","220","225","140","225","225","140","175"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 2B","FIG. 2B","FIG. 2B"],"b":["120","140","120","200","205","210","215","120","215","220","140","120","215","120","215"]},"In , the core network  includes the above-noted SGSN B (and potentially a number of other SGSNs as well) and a GGSN B. Generally, GPRS is a protocol used in GSM for routing IP packets. The GPRS core network (e.g., the GGSN B and one or more SGSNs B) is the centralized part of the GPRS system and also provides support for W-CDMA based 3G access networks. The GPRS core network is an integrated part of the GSM core network (i.e., the core network ) that provides mobility management, session management and transport for IP packet services in GSM and W-CDMA networks.","The GPRS Tunneling Protocol (GTP) is the defining IP protocol of the GPRS core network. The GTP is the protocol which allows end users (e.g., UEs) of a GSM or W-CDMA network to move from place to place while continuing to connect to the Internet  as if from one location at the GGSN B. This is achieved by transferring the respective UE's data from the UE's current SGSN B to the GGSN B, which is handling the respective UE's session.","Three forms of GTP are used by the GPRS core network; namely, (i) GTP-U, (ii) GTP-C and (iii) GTP\u2032 (GTP Prime). GTP-U is used for transfer of user data in separated tunnels for each packet data protocol (PDP) context. GTP-C is used for control signaling (e.g., setup and deletion of PDP contexts, verification of GSN reach-ability, updates or modifications such as when a subscriber moves from one SGSN to another, etc.). GTP\u2032 is used for transfer of charging data from GSNs to a charging function.","Referring to , the GGSN B acts as an interface between a GPRS backbone network (not shown) and the Internet . The GGSN B extracts packet data with associated a packet data protocol (PDP) format (e.g., IP or PPP) from GPRS packets coming from the SGSN B, and sends the packets out on a corresponding packet data network. In the other direction, the incoming data packets are directed by the GGSN connected UE to the SGSN B which manages and controls the Radio Access Bearer (RAB) of a target UE served by the RAN . Thereby, the GGSN B stores the current SGSN address of the target UE and its associated profile in a location register (e.g., within a PDP context). The GGSN B is responsible for IP address assignment and is the default router for a connected UE. The GGSN B also performs authentication and charging functions.","The SGSN B is representative of one of many SGSNs within the core network , in an example. Each SGSN is responsible for the delivery of data packets from and to the UEs within an associated geographical service area. The tasks of the SGSN B includes packet routing and transfer, mobility management (e.g., attach\/detach and location management), logical link management, and authentication and charging functions. The location register of the SGSN B stores location information (e.g., current cell, current VLR) and user profiles (e.g., IMSI, PDP address(es) used in the packet data network) of all GPRS users registered with the SGSN B, for example, within one or more PDP contexts for each user or UE. Thus, SGSNs B are responsible for (i) de-tunneling downlink GTP packets from the GGSN B, (ii) uplink tunnel IP packets toward the GGSN B, (iii) carrying out mobility management as UEs move between SGSN service areas and (iv) billing mobile subscribers. As will be appreciated by one of ordinary skill in the art, aside from (i)-(iv), SGSNs configured for GSM\/EDGE networks have slightly different functionality as compared to SGSNs configured for W-CDMA networks.","The RAN  (e.g., or UTRAN, in UMTS system architecture) communicates with the SGSN B via a Radio Access Network Application Part (RANAP) protocol. RANAP operates over a Iu interface (Iu-ps), with a transmission protocol such as Frame Relay or IP. The SGSN B communicates with the GGSN B via a Gn interface, which is an IP-based interface between SGSN B and other SGSNs (not shown) and internal GGSNs (not shown), and uses the GTP protocol defined above (e.g., GTP-U, GTP-C, GTP\u2032, etc.). In the embodiment of , the Gn between the SGSN B and the GGSN B carries both the GTP-C and the GTP-U. While not shown in , the Gn interface is also used by the Domain Name System (DNS). The GGSN B is connected to a Public Data Network (PDN) (not shown), and in turn to the Internet , via a Gi interface with IP protocols either directly or through a Wireless Application Protocol (WAP) gateway.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 2C","FIG. 2B","FIG. 2C","FIG. 2C","FIG. 2C"],"b":["120","140","140","220","225","220","120","225","220","220","220","225","220"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 2D","FIG. 2D","FIGS. 2B-2C","FIGS. 2B-2C","FIGS. 2B-2C","FIG. 2D"],"b":["120","140","120","120","200","205","210","215","215","120","140","215","120"]},"In , the core network  includes a plurality of Mobility Management Entities (MMES) D and D, a Home Subscriber Server (HSS) D, a Serving Gateway (S-GW) D, a Packet Data Network Gateway (P-GW) D and a Policy and Charging Rules Function (PCRF) D. Network interfaces between these components, the RAN  and the Internet  are illustrated in  and are defined in Table 1 (below) as follows:",{"@attributes":{"id":"p-0049","num":"0048"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"EPS\/LTE Core Network Connection Definitions"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Network Interface","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["S1-MME","Reference point for the control plane protocol between RAN 120 and"]},{"entry":[{},"MME 215D."]},{"entry":["S1-U","Reference point between RAN 120 and S-GW 230D for the per"]},{"entry":[{},"bearer user plane tunneling and inter-eNodeB path switching during"]},{"entry":[{},"handover."]},{"entry":["S5","Provides user plane tunneling and tunnel management between S-"]},{"entry":[{},"GW 230D and P-GW 235D. It is used for S-GW relocation due to"]},{"entry":[{},"UE mobility and if the S-GW 230D needs to connect to a non-"]},{"entry":[{},"collocated P-GW for the required PDN connectivity."]},{"entry":["S6a","Enables transfer of subscription and authentication data for"]},{"entry":[{},"authenticating\/authorizing user access to the evolved system"]},{"entry":[{},"(Authentication, Authorization, and Accounting [AAA] interface)"]},{"entry":[{},"between MME 215D and HSS 225D."]},{"entry":["Gx","Provides transfer of Quality of Service (QoS) policy and charging"]},{"entry":[{},"rules from PCRF 240D to Policy a Charging Enforcement Function"]},{"entry":[{},"(PCEF) component (not shown) in the P-GW 235D."]},{"entry":["S8","Inter-PLMN reference point providing user and control plane"]},{"entry":[{},"between the S-GW 230D in a Visited Public Land Mobile Network"]},{"entry":[{},"(VPLMN) and the P-GW 235D in a Home Public Land Mobile"]},{"entry":[{},"Network (HPLMN). S8 is the inter-PLMN variant of S5."]},{"entry":["S10","Reference point between MMEs 215D and 220D for MME"]},{"entry":[{},"relocation and MME to MME information transfer."]},{"entry":["S11","Reference point between MME 215D and S-GW 230D."]},{"entry":["SGi","Reference point between the P-GW 235D and the packet data"]},{"entry":[{},"network, shown in FIG. 2D as the Internet 175. The Packet data"]},{"entry":[{},"network may be an operator external public or private packet data"]},{"entry":[{},"network or an intra-operator packet data network (e.g., for provision"]},{"entry":[{},"of IMS services). This reference point corresponds to Gi for 3GPP"]},{"entry":[{},"accesses."]},{"entry":["X2","Reference point between two different eNodeBs used for UE"]},{"entry":[{},"handoffs."]},{"entry":["Rx","Reference point between the PCRF 240D and an application function"]},{"entry":[{},"(AF) that is used to exchanged application-level session information,"]},{"entry":[{},"where the AF is represented in FIG. 1 by the application server 170."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"A high-level description of the components shown in the RAN  and core network  of  will now be described. However, these components are each well-known in the art from various 3GPP TS standards, and the description contained herein is not intended to be an exhaustive description of all functionalities performed by these components.","Referring to , the MMEs D and D are configured to manage the control plane signaling for the EPS bearers. MME functions include: Non-Access Stratum (NAS) signaling, NAS signaling security, Mobility management for inter- and intra-technology handovers, P-GW and S-GW selection, and MME selection for handovers with MME change.","Referring to , the S-GW D is the gateway that terminates the interface toward the RAN . For each UE associated with the core network  for an EPS-based system, at a given point of time, there is a single S-GW. The functions of the S-GW D, for both the GTP-based and the Proxy Mobile IPv6 (PMIP)-based S5\/S8, include: Mobility anchor point, Packet routing and forwarding, and setting the DiffSery Code Point (DSCP) based on a QoS Class Identifier (QCI) of the associated EPS bearer.","Referring to , the P-GW D is the gateway that terminates the SGi interface toward the Packet Data Network (PDN), e.g., the Internet . If a UE is accessing multiple PDNs, there may be more than one P-GW for that UE; however, a mix of S5\/S8 connectivity and Gn\/Gp connectivity is not typically supported for that UE simultaneously. P-GW functions include for both the GTP-based S5\/S8: Packet filtering (by deep packet inspection), UE IP address allocation, setting the DSCP based on the QCI of the associated EPS bearer, accounting for inter operator charging, uplink (UL) and downlink (DL) bearer binding as defined in 3GPP TS 23.203, UL bearer binding verification as defined in 3GPP TS 23.203. The P-GW D provides PDN connectivity to both GSM\/EDGE Radio Access Network (GERAN)\/UTRAN only UEs and E-UTRAN-capable UEs using any of E-UTRAN, GERAN, or UTRAN. The P-GW D provides PDN connectivity to E-UTRAN capable UEs using E-UTRAN only over the S5\/S8 interface.","Referring to , the PCRF D is the policy and charging control element of the EPS-based core network . In a non-roaming scenario, there is a single PCRF in the HPLMN associated with a UE's Internet Protocol Connectivity Access Network (IP-CAN) session. The PCRF terminates the Rx interface and the Gx interface. In a roaming scenario with local breakout of traffic, there may be two PCRFs associated with a UE's IP-CAN session: A Home PCRF (H-PCRF) is a PCRF that resides within a HPLMN, and a Visited PCRF (V-PCRF) is a PCRF that resides within a visited VPLMN. PCRF is described in more detail in 3GPP TS 23.203, and as such will not be described further for the sake of brevity. In , the application server  (e.g., which can be referred to as the AF in 3GPP terminology) is shown as connected to the core network  via the Internet , or alternatively to the PCRF D directly via an Rx interface. Generally, the application server  (or AF) is an element offering applications that use IP bearer resources with the core network (e.g. UMTS PS domain\/GPRS domain resources\/LTE PS data services). One example of an application function is the Proxy-Call Session Control Function (P-CSCF) of the IP Multimedia Subsystem (IMS) Core Network sub system. The AF uses the Rx reference point to provide session information to the PCRF D. Any other application server offering IP data services over cellular network can also be connected to the PCRF D via the Rx reference point.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 2E","FIG. 2D"],"b":["120","140","140","140"]},"In , the eHRPD RAN includes a plurality of base transceiver stations (BTSs) E, E and E, which are connected to an enhanced BSC (eBSC) and enhanced PCF (ePCF) E. The eBSC\/ePCF E can connect to one of the MMEs D or D within the EPS core network A over an S101 interface, and to an HRPD serving gateway (HSGW) E over A10 and\/or A11 interfaces for interfacing with other entities in the EPS core network A (e.g., the S-GW D over an S103 interface, the P-GW D over an S2a interface, the PCRF D over a Gxa interface, a 3GPP AAA server (not shown explicitly in ) over an STa interface, etc.). The HSGW E is defined in 3GPP2 to provide the interworking between HRPD networks and EPS\/LTE networks. As will be appreciated, the eHRPD RAN and the HSGW E are configured with interface functionality to EPC\/LTE networks that is not available in legacy HRPD networks.","Turning back to the eHRPD RAN, in addition to interfacing with the EPS\/LTE network A, the eHRPD RAN can also interface with legacy HRPD networks such as HRPD network B. As will be appreciated the HRPD network B is an example implementation of a legacy HRPD network, such as the EV-DO network from . For example, the eBSC\/ePCF E can interface with an authentication, authorization and accounting (AAA) server E via an A12 interface, or to a PDSN\/FA E via an A10 or A11 interface. The PDSN\/FA E in turn connects to HA A, through which the Internet  can be accessed. In , certain interfaces (e.g., A13, A16, H1, H2, etc.) are not described explicitly but are shown for completeness and would be understood by one of ordinary skill in the art familiar with HRPD or eHRPD.","Referring to , it will be appreciated that LTE core networks (e.g., ) and HRPD core networks that interface with eHRPD RANs and HSGWs (e.g., ) can support network-initiated Quality of Service (QoS) (e.g., by the P-GW, GGSN, SGSN, etc.) in certain cases.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 3","FIG. 3","FIG. 3"],"b":["300","300","300","305","310","315","320","300","305","310","315","320","325","330","300","300","300"]},"While internal components of UEs such as the UEs A and B can be embodied with different hardware configurations, a basic high-level UE configuration for internal hardware components is shown as platform  in . The platform  can receive and execute software applications, data and\/or commands transmitted from the RAN  that may ultimately come from the core network , the Internet  and\/or other remote servers and networks (e.g., application server , web URLs, etc.). The platform  can also independently execute locally stored applications without RAN interaction. The platform  can include a transceiver  operably coupled to an application specific integrated circuit (ASIC) , or other processor, microprocessor, logic circuit, or other data processing device. The ASIC  or other processor executes the application programming interface (API)  layer that interfaces with any resident programs in the memory  of the wireless device. The memory  can be comprised of read-only or random-access memory (RAM and ROM), EEPROM, flash cards, or any memory common to computer platforms. The platform  also can include a local database  that can store applications not actively used in memory , as well as other data. The local database  is typically a flash memory cell, but can be any secondary storage device as known in the art, such as magnetic media, EEPROM, optical media, tape, soft or hard disk, or the like.","Accordingly, an embodiment of the invention can include a UE (e.g., UE A, B, etc.) including the ability to perform the functions described herein. As will be appreciated by those skilled in the art, the various logic elements can be embodied in discrete elements, software modules executed on a processor or any combination of software and hardware to achieve the functionality disclosed herein. For example, ASIC , memory , API  and local database  may all be used cooperatively to load, store and execute the various functions disclosed herein and thus the logic to perform these functions may be distributed over various elements. Alternatively, the functionality could be incorporated into one discrete component. Therefore, the features of the UEs A and B in  are to be considered merely illustrative and the invention is not limited to the illustrated features or arrangement.","The wireless communication between the UEs A and\/or B and the RAN  can be based on different technologies, such as CDMA, W-CDMA, time division multiple access (TDMA), frequency division multiple access (FDMA), Orthogonal Frequency Division Multiplexing (OFDM), GSM, or other protocols that may be used in a wireless communications network or a data communications network. As discussed in the foregoing and known in the art, voice transmission and\/or data can be transmitted to the UEs from the RAN using a variety of networks and configurations. Accordingly, the illustrations provided herein are not intended to limit the embodiments of the invention and are merely to aid in the description of aspects of embodiments of the invention.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 4","FIG. 1"],"b":["400","400","300","300","120","200","210","215","200","210","215","200","210","140","220","225","220","225","215","220","225","230","235","240","140","175","170","400","100"]},"Referring to , the communication device  includes logic configured to receive and\/or transmit information . In an example, if the communication device  corresponds to a wireless communications device (e.g., UE A or B, one of BSs A through A, one of Node Bs B through B, one of eNodeBs D through D, etc.), the logic configured to receive and\/or transmit information  can include a wireless communications interface (e.g., Bluetooth, WiFi, 2G, CDMA, W-CDMA, 3G, 4G, LTE, etc.) such as a wireless transceiver and associated hardware (e.g., an RF antenna, a MODEM, a modulator and\/or demodulator, etc.). In another example, the logic configured to receive and\/or transmit information  can correspond to a wired communications interface (e.g., a serial connection, a USB or Firewire connection, an Ethernet connection through which the Internet  can be accessed, etc.). Thus, if the communication device  corresponds to some type of network-based server (e.g., PDSN, SGSN, GGSN, S-GW, P-GW, MME, HSS, PCRF, the application , etc.), the logic configured to receive and\/or transmit information  can correspond to an Ethernet card, in an example, that connects the network-based server to other communication entities via an Ethernet protocol. In a further example, the logic configured to receive and\/or transmit information  can include sensory or measurement hardware by which the communication device  can monitor its local environment (e.g., an accelerometer, a temperature sensor, a light sensor, an antenna for monitoring local RF signals, etc.). The logic configured to receive and\/or transmit information  can also include software that, when executed, permits the associated hardware of the logic configured to receive and\/or transmit information  to perform its reception and\/or transmission function(s). However, the logic configured to receive and\/or transmit information  does not correspond to software alone, and the logic configured to receive and\/or transmit information  relies at least in part upon hardware to achieve its functionality.","Referring to , the communication device  further includes logic configured to process information . In an example, the logic configured to process information  can include at least a processor. Example implementations of the type of processing that can be performed by the logic configured to process information  includes but is not limited to performing determinations, establishing connections, making selections between different information options, performing evaluations related to data, interacting with sensors coupled to the communication device  to perform measurement operations, converting information from one format to another (e.g., between different protocols such as .wmv to .avi, etc.), and so on. For example, the processor included in the logic configured to process information  can correspond to a general purpose processor, a digital signal processor (DSP), an ASIC, a field programmable gate array (FPGA) or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor, but in the alternative, the processor may be any conventional processor, controller, microcontroller, or state machine. A processor may also be implemented as a combination of computing devices, e.g., a combination of a DSP and a microprocessor, a plurality of microprocessors, one or more microprocessors in conjunction with a DSP core, or any other such configuration. The logic configured to process information  can also include software that, when executed, permits the associated hardware of the logic configured to process information  to perform its processing function(s). However, the logic configured to process information  does not correspond to software alone, and the logic configured to process information  relies at least in part upon hardware to achieve its functionality.","Referring to , the communication device  further includes logic configured to store information . In an example, the logic configured to store information  can include at least a non-transitory memory and associated hardware (e.g., a memory controller, etc.). For example, the non-transitory memory included in the logic configured to store information  can correspond to RAM memory, flash memory, ROM memory, EPROM memory, EEPROM memory, registers, hard disk, a removable disk, a CD-ROM, or any other form of storage medium known in the art. The logic configured to store information  can also include software that, when executed, permits the associated hardware of the logic configured to store information  to perform its storage function(s). However, the logic configured to store information  does not correspond to software alone, and the logic configured to store information  relies at least in part upon hardware to achieve its functionality.","Referring to , the communication device  further optionally includes logic configured to present information . In an example, the logic configured to present information  can include at least an output device and associated hardware. For example, the output device can include a video output device (e.g., a display screen, a port that can carry video information such as USB, HDMI, etc.), an audio output device (e.g., speakers, a port that can carry audio information such as a microphone jack, USB, HDMI, etc.), a vibration device and\/or any other device by which information can be formatted for output or actually outputted by a user or operator of the communication device . For example, if the communication device  corresponds to UE A or UE B as shown in , the logic configured to present information  can include the display A of UE A or the touchscreen display B of UE B. In a further example, the logic configured to present information  can be omitted for certain communication devices, such as network communication devices that do not have a local user (e.g., network switches or routers, remote servers, etc.). The logic configured to present information  can also include software that, when executed, permits the associated hardware of the logic configured to present information  to perform its presentation function(s). However, the logic configured to present information  does not correspond to software alone, and the logic configured to present information  relies at least in part upon hardware to achieve its functionality.","Referring to , the communication device  further optionally includes logic configured to receive local user input . In an example, the logic configured to receive local user input  can include at least a user input device and associated hardware. For example, the user input device can include buttons, a touchscreen display, a keyboard, a camera, an audio input device (e.g., a microphone or a port that can carry audio information such as a microphone jack, etc.), and\/or any other device by which information can be received from a user or operator of the communication device . For example, if the communication device  corresponds to UE A or UE B as shown in , the logic configured to receive local user input  can include the keypad A, any of the buttons A or B through B, the touchscreen display B, etc. In a further example, the logic configured to receive local user input  can be omitted for certain communication devices, such as network communication devices that do not have a local user (e.g., network switches or routers, remote servers, etc.). The logic configured to receive local user input  can also include software that, when executed, permits the associated hardware of the logic configured to receive local user input  to perform its input reception function(s). However, the logic configured to receive local user input  does not correspond to software alone, and the logic configured to receive local user input  relies at least in part upon hardware to achieve its functionality.","Referring to , while the configured logics of  through  are shown as separate or distinct blocks in , it will be appreciated that the hardware and\/or software by which the respective configured logic performs its functionality can overlap in part. For example, any software used to facilitate the functionality of the configured logics of  through  can be stored in the non-transitory memory associated with the logic configured to store information , such that the configured logics of  through  each performs their functionality (i.e., in this case, software execution) based in part upon the operation of software stored by the logic configured to store information . Likewise, hardware that is directly associated with one of the configured logics can be borrowed or used by other configured logics from time to time. For example, the processor of the logic configured to process information  can format data into an appropriate format before being transmitted by the logic configured to receive and\/or transmit information , such that the logic configured to receive and\/or transmit information  performs its functionality (i.e., in this case, transmission of data) based in part upon the operation of hardware (i.e., the processor) associated with the logic configured to process information .","Generally, unless stated otherwise explicitly, the phrase \u201clogic configured to\u201d as used throughout this disclosure is intended to invoke an embodiment that is at least partially implemented with hardware, and is not intended to map to software-only implementations that are independent of hardware. Also, it will be appreciated that the configured logic or \u201clogic configured to\u201d in the various blocks are not limited to specific logic gates or elements, but generally refer to the ability to perform the functionality described herein (either via hardware or a combination of hardware and software). Thus, the configured logics or \u201clogic configured to\u201d as illustrated in the various blocks are not necessarily implemented as logic gates or logic elements despite sharing the word \u201clogic.\u201d Other interactions or cooperation between the logic in the various blocks will become clear to one of ordinary skill in the art from a review of the embodiments described below in more detail.","The various embodiments may be implemented on any of a variety of commercially available server devices, such as server  illustrated in . In an example, the server  may correspond to one example configuration of the application server  described above. In , the server  includes a processor  coupled to volatile memory  and a large capacity nonvolatile memory, such as a disk drive . The server  may also include a floppy disc drive, compact disc (CD) or DVD disc drive  coupled to the processor . The server  may also include network access ports  coupled to the processor  for establishing data connections with a network , such as a local area network coupled to other broadcast system computers and servers or to the Internet. In context with , it will be appreciated that the server  of  illustrates one example implementation of the communication device , whereby the logic configured to transmit and\/or receive information  corresponds to the network access ports  used by the server  to communicate with the network , the logic configured to process information  corresponds to the processor , and the logic configuration to store information  corresponds to any combination of the volatile memory , the disk drive  and\/or the disc drive . The optional logic configured to present information  and the optional logic configured to receive local user input  are not shown explicitly in  and may or may not be included therein. Thus,  helps to demonstrate that the communication device  may be implemented as a server, in addition to a UE implementation as in A or B as in .","Access networks using various communication protocols (e.g., 3GPP access networks such as W-CDMA, LTE, etc. as described above with respect to , or non-3GPP access networks such as WiFi, WLAN or wired LAN, IEEE 802, IEEE 802.11, etc.) can be configured to provide Internet Protocol (IP) Multimedia Subsystem (IMS) services via an IMS network managed by an operator (e.g., Verizon, Sprint, AT&T, etc.) to users across a communications system. Users that access the IMS network to request an IMS service are assigned to one of a plurality of regional application servers or application server clusters (e.g., groups of application servers that serve the same cluster region) for supporting the requested IMS service.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":["FIG. 6","FIG. 6","FIG. 6","FIG. 6","FIG. 6","FIGS. 2A-2E"],"b":["1","1","1","2","1","2","1","2","2","2","1","1","120","120","120","125","1","600","120","120"]},"Referring to , the IMS network  is shown as illustrating a particular set of IMS components, including a proxy call session control function (P-CSCF) , an interrogating CSCF (I-CSCF) , a serving CSCF (S-CSCF)  and a Home Subscriber Server (HSS) . The P-CSCF , I-CSCF  and S-CSCF  are sometimes referred to collectively as the CSCF, and the CSCF is responsible for signaling via Session Initiation Protocol (SIP) between the Transport Plane, Control Plane, and the Application Plane of the IMS network .","Referring to the P-CSCF  of , the P-CSCF  is responsible for interfacing directly with Transport Plane components and is the first point of signaling within the IMS network  for any end-point, such as UEs  . . . N. Once an endpoint acquires IP connectivity, the end point will cause a registration event to occur by first signaling to the P-CSCF . As the name implies, the P-CSCF  is a proxy for SIP messages from end-points to the rest of the IMS network . It is usually in a home network of the end point, but may reside in a visited network of the end point. The P-CSCF  will use a DNS look-up to identify a target I-CSCF  to send SIP messages, which could be an I-CSCF  in its own network or another I-CSCF across an administrative domain. The P-CSCF  can also be responsible for policy decisions (e.g., via an integrated or standalone Policy Decision Function (PDF) in Releases 5 or 6 of IMS, via a Policy Charging, and Resource Function (PCRF) in Release 7 of IMS, etc.).","Referring to the I-CSCF  of , the main function of the I-CSCF  is to proxy between the P-CSCF  as entry point and S-CSCF  as control point for applications found in the Applications Plane. When the P-CSCF  receives a registration request SIP message, it will perform a DNS look-up to discover the appropriate I-CSCF  to route the message. Once the I-CSCF  receives the SIP message, it will perform a look-up operation with the HSS  via Diameter to determine the S-CSCF  that is associated with the end-point terminal. Once it receives this information, it will forward the SIP message to the appropriate S-CSCF  for further treatment.","Referring to the S-CSCF , the S-CSCF  is responsible for interfacing with the Application Servers (AS) (e.g., such as application servers -, - . . . -N in cluster region R, or application servers -, - . . . -N in cluster region , and so on) in the Application Plane. Upon receiving a registration request SIP message from an I-CSCF , the S-CSCF  will query the HSS  via Diameter protocol to register the terminal as being currently served by itself. Subsequent session establishment requires knowing which S-CSCF  is responsible for the terminal session control. As part of the registration process, the S-CSCF  uses credentials it obtains from the query to the HSS  to issue an SIP message \u201cchallenge\u201d back to the initiating P-CSCF  to authenticate the terminal.","In addition to acting as a registrar, the S-CSCF  is also responsible for routing SIP messages to the AS allowing for the Control Plane session control to interact with the Application Plane application logic. To do this, the S-CSCF  uses information obtained from the HSS  in the form of Initial Filter Criteria (IFC) that acts as triggers against inbound session establishment requests. The IFC includes rules that define how and where SIP messages should be routed to the various application servers that may reside in the Application Plane. The S-CSCF  may also act on Secondary Filter Criteria (SFC) obtained from the application servers during the course of messaging with them.","Referring to , a UE that requests IMS service (e.g., registration to set-up or join a VoIP session, a PTT session, a group communication session, etc.) from the IMS network  is assigned (or registered) to a target application server that is selected by the S-CSCF , as noted above. Generally, the IMS network  will attempt to select, as the target application server, an application server that is physically close to the UE and is also known to be capable of providing the requested IMS service.","In modern IP-based communications, endpoints (e.g., user agent clients (UACs), UEs, client devices, etc.) can be addressed using an IPv4 address, an IPv6 address or both IPv4 and IPv6 addresses. Some client devices are only capable of communicating using IPv4 (\u201cIPv4 client devices\u201d), while other client devices are only capable of communicating using IPv6 (\u201cIPv6 client devices\u201d). Still other client devices can communicate using both IPv4 and IPv6, and these client devices are referred to as \u201cdual stack\u201d client devices.","In conventional SIP, a dual stack UAC (or originating SIP client device) can select either the IPv4 address or the IPv6 address when initiating a SIP request to a user agent server (UAS) (not shown). The UAS is responsible for forwarding the SIP request to the next hop which could be another UAS or the target client device(s) for the communication. If the target client device(s) are not dual stack client devices (e.g., the target client devices have an IPv4 address or an IPv6 address, but not both), the IP header of the SIP request may require translation by a network address and port translation (NAPT) gateway so that the SIP request message can be processed by the target client device(s). Conventionally, the originating SIP client device does not have any special knowledge regarding the IPv4\/IPv6 capabilities of the target client device(s), which is why the NAPT gateway is used for IPv4\/IPv6 translation.","This aspect is shown in , whereby an IPv6 client device  operated by a first user (\u201cFord\u201d) is communicating with an IPv4 client device  operated by a second user (\u201cMarvin\u201d). The IPv6 client device  is assigned an IPv6 address (i.e., ABCD:BEEF:2228:7001) on Port  and the IPv4 client device  is assigned an IPv4 address (i.e., 120.140.160.101) on Port . Signaling between the IPv4 and IPv6 client devices  and  is mediated through a NAPT gateway , which is assigned an IPv4 address of 120.10.40\/24 on Port . Generally, the terminology of \u201cIP address\u201d is used to refer to either the IP address itself or a combination of the IP address and its associated port number.","Referring to , at (), the IPv6 client device  sends a IPv6 packet to the NAPT gateway  via IPv6 (i.e., over an IPv6 socket) with a header having a source field set to the IPv6 address and Port number of the IPv6 client device , and a destination field with a prefix set to the IPv4 address and Port number of the IPv4 client device . The NAPT gateway  receives the IPv6 packet and translates the IPv6 packet into an IPv4 packet with a header having a source field set to the IPv4 address and Port number of the NAPT gateway , and a destination field set to the IPv4 address and Port number of the IPv4 client device . The translated IPv4 packet is delivered by the NAPT gateway  to the IPv4 client device  in () of .","Next, still referring to , at (), the IPv4 client device  sends a IPv4 packet to the NAPT gateway  via IPv4 (i.e., over an IPv4 socket) with a header having a source field set to the IPv4 address and Port number of the IPv4 client device , and a destination field set to the IPv4 address and Port number of the NAPT gateway . The NAPT gateway  receives the IPv4 packet and translates the IPv4 packet into an IPv6 packet with a header having a source field with a prefix set to the IPv4 address and Port number of the IPv4 client device , and a destination field set to the IPv6 address and Port number of the IPv6 client device . The translated IPv6 packet is delivered by the NAPT gateway  to the IPv6 client device  in () of .","As will be appreciated from a review of , the IPv4 and IPv6 client devices  and  can still communicate with each other despite the differences in their IP version capability, but their communication is reliant upon the NAPT gateway  to perform the above-described translation function. Also, dual stack client devices are required to connect to the P-CSCF  via IPv6 under the current IMS standard.",{"@attributes":{"id":"p-0086","num":"0085"},"figref":["FIG. 8","FIG. 8"],"b":["800","884","800","896","805","810","815","820","820","875","884","825","820","896","830","825","835","840","845","850","830","855","860","865","870","875","878","881","884","887","890","893","896"]},{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 9","FIG. 6","FIG. 6"],"b":["600","610","615","900","900","910","900","905","905","910","9800","905","600","705"]},{"@attributes":{"id":"p-0088","num":"0087"},"figref":["FIG. 10","FIG. 10","FIG. 6","FIG. 6"],"b":["1","1000","1","1","2","1","1005","1005","1","1","1005"]},{"@attributes":{"id":"p-0089","num":"0088"},"figref":["FIG. 11","FIG. 11","FIG. 8"],"b":["1100","1105","1110","825","850","1110"]},{"@attributes":{"id":"p-0090","num":"0089"},"figref":["FIG. 12","FIG. 12"],"b":"1200"},"Further, it will be appreciated that the SIP message received at  could also include other Via headers, such as Via headers that identify IPv4 or IPv6 addresses of a dual stack SIP server\/proxy (not shown), Via headers that identify IPv4 or IPv6 addresses of a NAPT gateway or IMS ALG, and so on. In an example, the SIP message received at  can correspond to a version of the configured SIP message transmitted at  (e.g., a SIP OPTIONS message) that is modified at the dual stack SIP server\/proxy to include the IPv6 address of the source SIP client device.","Referring to , the target SIP client device identifies that the source SIP client device is dual stack based on the SIP message being received with both IPv4 and IPv6 addresses for the source SIP client device in the above-noted Via header, . At this point, the target SIP client device responds to the dual stack-identifying SIP message from  in a selective manner based on whether the target SIP client device itself is IPv4-only, IPv6-only or dual stack, .","In particular, if the target SIP client device determines itself to be IPv4-only in , then the IPv4-only target SIP client device configures a Via header of a SIP message (e.g., a SIP OPTIONS message) to include the IPv4 address of the IPv4-only target SIP client device (i.e., without reference to any IPv6 address for the IPv4-only target SIP client device), , and then transmits the configured SIP message as an IPv4 packet over an IPv4 socket to the dual stack SIP proxy\/server for transmission to the source SIP client device. In this case, the source SIP client device is expected to recognize that the target SIP client device is IPv4-only based on the SIP message being sent to the source SIP client device over the IPv4 socket and\/or based on the Via header including reference only to the IPv4 address without any reference to an IPv6 address.","Further, if the target SIP client device determines itself to be IPv6-only in , then the IPv6-only target SIP client device configures a Via header of a SIP message (e.g., a SIP OPTIONS message) to include the IPv6 address of the IPv6-only target SIP client device, , and then transmits the configured SIP message as an IPv6 packet over an IPv6 socket to the dual stack SIP proxy\/server for transmission to the source SIP client device. In this case, the source SIP client device is expected to recognize that the target SIP client device is IPv6-only based on the SIP message being sent to the source SIP client device in an IPv6 packet that includes a Via header with an IPv6 address of the target SIP client device without an associated IPv4 address for the target SIP client device.","Further, if the target SIP client device determines itself to be dual stack in , then the process advances to  of . In other words, the target SIP client device configures a Via header of a SIP message (e.g., a SIP OPTIONS message) to include the IPv4 address of the target SIP client device () and then transmits the configured SIP message as an IPv6 packet over an IPv6 socket to the dual stack SIP proxy\/server for transmission to the source SIP client device (). In this case, the source SIP client device is expected to recognize that the target SIP client device is dual stack based on the SIP message being sent to the source SIP client device in an IPv6 packet that includes both the IPv4 address for the target SIP client device in a given Via header (along with an associated IPv6 address, which can be inserted at the network-side).",{"@attributes":{"id":"p-0096","num":"0095"},"figref":["FIG. 13","FIG. 13","FIGS. 11-12"],"b":["1300","1300","1300","1305"]},"In particular, if the source dual stack SIP client device determines that the target SIP client device is IPv4-only, then the source dual stack SIP client device selects IPv4 as an IP format for communication with the target SIP client device, . Otherwise, if the source dual stack SIP client device is IPv6 or dual stack, then the source dual stack SIP client device selects IPv6 as the IP format for communication with the target SIP client device, . The source dual stack SIP client device then initiates communication with the target SIP client device using the selected IP format, .","The embodiments described above with respect to  are described below in more detail with respect to different operating scenarios. In particular,  illustrates an example implementation of  whereby a dual stack SIP client device is communicating with an IPv4-only SIP client device in accordance with an embodiment of the invention,  illustrates an example implementation of  whereby a dual stack SIP client device is communicating with an IPv6-only SIP client device in accordance with an embodiment of the invention and  illustrates an example implementation of  whereby a dual stack SIP client device is communicating with another dual stack SIP client device in accordance with an embodiment of the invention.","In the embodiments of , the following assumptions may be made, where applicable:",{"@attributes":{"id":"p-0100","num":"0099"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"center"}},"thead":{"row":{"entry":"TABLE 2"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Address Assumptions for FIGS. 14-16"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},{},"SIP Client Device 2"]},{"entry":[{},"Dual Stack SIP Client","Dual Stack SIP Server\/","(IPv4-only, IPv6-only or"]},{"entry":[{},"Device 1","Proxy","dual stack)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["SIP","userA@example.com","N\/A","userB@example.com"]},{"entry":"URI"},{"entry":["IPv4","192.0.2.1 or IPv4[1]","192.10.10.10 or","192.0.2.22 or IPv4[2]"]},{"entry":[{},{},"IPv4[Server]","(if applicable)"]},{"entry":["IPv6","2001:DB8:CAFE:1::100","2001:DB8:CAFE:ABC::10","2001:DB8:EFAC:123::100"]},{"entry":[{},"or IPv6[1]","or IPv6[Server]","or IPv6[2] (if applicable)"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"Referring to , at (), dual stack SIP client device  transmits a SIP OPTIONS message for delivery to a target SIP client device  configured to include a Via header set to \u201cVia: SIP\/2.0\/UDP 192.0.2.1:5060\u201d over an IPv6 socket to a dual stack SIP server\/proxy , similar to  of . At this point in the embodiment of , the target SIP client device  is IPv4-only, but the dual stack SIP client device  is not yet aware of this. In , the dual stack SIP server\/proxy  is a SIP server\/proxy that is addressable by both an IPv4 address and an IPv6 address, as noted above in Table 2. The dual stack SIP server\/proxy  receives the SIP OPTIONS message from () and implements standard SIP proxy behavior such as matching the IP address information in the Via header to the underlying IP header. In this case the dual stack SIP server\/proxy  detects that the Via header contains an IPv4 address, but the SIP request was received over an IPv6 socket, so the SIP proxy\/server  inserts a received parameter in the Via header containing the IPv6 address for dual stack SIP client device . As will be appreciated, this operation of the SIP proxy\/server  complies with standard SIP proxy behavior, except that the result is a SIP OPTIONS message that includes both IPv4 and IPv6 addresses for dual stack SIP client device . At (), the dual stack SIP server\/proxy  sends the configured SIP OPTIONS message over an IPv6 socket with a first Via header of \u201cVia: SIP\/2.0\/UDP [2001:DB8:CAFE:ABC::10]:5060\u201d and a second Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.1:5060;received=[2001:DB8:CAFE:1::100]\u201d to either the NAPT gateway  or the IMS ALG  depending on the implementation.","Referring to , at (), the NAPT or IMS ALG translates the IPv6-based SIP OPTIONS message into IPv4 and then transmits the IPv4-based SIP OPTIONS message to the IPv4 SIP client device  over an IPv4 socket with a first Via header of \u201cVia: SIP\/2.0\/UDP <NATPTIPv4 address>\u201d, a second Via header of \u201cVia: SIP\/2.0\/UDP [2001:DB8:CAFE:ABC::10]:5060\u201d and a third Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.1:5060; received=[2001:DB8:CAFE:1::100]\u201d, similar to  of . At , the IPv4 SIP client device  identifies SIP client device  as dual stack based on the third Via header including both IPv4 and IPv6 addresses for the dual stack SIP client device , similar to  of . At (), the IPv4 SIP client device  responds to the SIP OPTIONS message from () by transmitting a SIP 200 OK message over an IPv4 socket having a first Via header of \u201cVia: SIP\/2.0\/UDP <NATPTIPv4 address>\u201d, a second Via header of \u201cVia: SIP\/2.0\/UDP [2001:DB8:CAFE:ABC::10]:5060\u201d and a third Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.1:5060;received=[2001:DB8:CAFE:1::100]\u201d. At (), the NAPT or IMS ALG translates the IPv4-based SIP 200 OK message into IPv6 and forwards the IPv6-based SIP 200 OK message over an IPv6 socket to the dual stack SIP server\/proxy  with a first Via header of \u201cVia: SIP\/2.0\/UDP [2001:DB8:CAFE:ABC::10]:5060\u201d and a second Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.1:5060;received=[2001:DB8:CAFE:1::100]\u201d. At (), the dual stack SIP server\/proxy  transmits the SIP 200 OK message over an IPv6 socket to the dual stack SIP client device with a Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.1:5060;received=[2001:DB8:CAFE:1::100]\u201d.","Referring to , in addition to responding to the SIP OPTIONS message from () with a SIP 200 OK message as shown in ()-(), IPv4 SIP client device  also determines to notify dual stack SIP client device  that IPv4 SIP client device  is IPv4-only, . To this end, at (), IPv4 SIP client device  transmits a SIP OPTIONS message over an IPv4 socket configured with a Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.22:5060\u201d to the dual stack SIP server\/proxy , similar to - of . Then, at (), the dual stack SIP server\/proxy  transmits the SIP OPTIONS message to dual stack SIP client device  over an IPv4 socket with a first Via header of \u201cVia: SIP\/2.0\/UDP 192.10.10.10\u201d and a second Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.22:5060\u201d. At this point, dual stack SIP client device  recognizes that SIP client device  is IPv4-only based on SIP client device  using the IPv4 address of dual stack SIP client device  for communication instead of the IPv6 address of dual stack SIP client device , . At (), dual stack SIP client device  responds to the SIP OPTIONS message from () by transmitting a SIP 200 OK message over an IPv4 socket configured with a first Via header of \u201cVia: SIP\/2.0\/UDP 192.10.10.10\u201d and a second Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.22:5060\u201d to the dual stack SIP server\/proxy . Then, at (), the dual stack SIP server\/proxy  transmits the SIP 200 OK message to IPv4 SIP client device  over an IPv4 socket with a Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.22:5060\u201d.","Referring to , after (), dual stack SIP client device  will select IPv4 for any subsequent communication initiated with IPv4 SIP client device , , similar to - of . At (), an example of IPv4 communication initiated based on the selection of  is shown, similar to  of .","Turning to , at (), dual stack SIP client device  transmits a SIP OPTIONS message for delivery to a target SIP client device  configured to include a Via header set to \u201cVia: SIP\/2.0\/UDP 192.0.2.1:5060\u201d over an IPv6 socket to the dual stack SIP server\/proxy , similar to  of . At this point in the embodiment of , the target SIP client device  is IPv6-only, but the dual stack SIP client device  is not yet aware of this. The dual stack SIP server\/proxy  receives the SIP OPTIONS message from () and implements standard SIP proxy behavior such as matching the IP address information in the Via header to the underlying IP header. In this case the dual stack SIP server\/proxy  detects that the Via header contains an IPv4 address, but the SIP request was received over an IPv6 socket, so the SIP proxy\/server  inserts a received parameter in the Via header containing the IPv6 address for dual stack SIP client device . As will be appreciated, this operation of the SIP proxy\/server  complies with standard SIP proxy behavior, except that the result is a SIP OPTIONS message that includes both IPv4 and IPv6 addresses for dual stack SIP client device . At (), the dual stack SIP server\/proxy  sends the configured SIP OPTIONS message over an IPv6 socket with a first Via header of \u201cVia: SIP\/2.0\/UDP [2001:DB8:CAFE:ABC::10]:5060\u201d and a second Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.1:5060;received=[2001:DB8:CAFE:1::100]\u201d to IPv6 SIP client device , similar to  of . Unlike ()-() of , the SIP OPTIONS message of () in  is delivered to IPv6 SIP client device  without IPv4\/IPv6 translation because IPv6 SIP client device  is IPv6-capable.","Referring to , at , the IPv6 SIP client device  identifies SIP client device  as dual stack based on the second Via header including both IPv4 and IPv6 addresses for the dual stack SIP client device , similar to  of . At (), the IPv6 SIP client device  responds to the SIP OPTIONS message from () by transmitting a SIP 200 OK message over an IPv6 socket to the dual stack SIP server\/proxy  having a first Via header of \u201cVia: SIP\/2.0\/UDP [2001:DB8:CAFE:ABC::10]:5060\u201d and a second Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.1:5060;received=[2001:DB8:CAFE:1::100]\u201d. At (), the dual stack SIP server\/proxy  transmits the SIP 200 OK message over an IPv6 socket to the dual stack SIP client device with a Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.1:5060;received=[2001:DB8:CAFE:1::100]\u201d.","Referring to , in addition to responding to the SIP OPTIONS message from () with a SIP 200 OK message as shown in ()-(), IPv6 SIP client device  also determines to notify dual stack SIP client device  that IPv6 SIP client device  is IPv6-only, . To this end, at (), IPv6 SIP client device  transmits a SIP OPTIONS message over an IPv6 socket configured with a Via header of \u201cVia: SIP\/2.0\/UDP[2001:DB8:EFAC:123::100]:5060\u201d to the dual stack SIP server\/proxy , similar to - of . Then, at (), the dual stack SIP server\/proxy  transmits the SIP OPTIONS message to dual stack SIP client device  over an IPv6 socket with a first Via header of \u201cVia: SIP\/2.0\/UDP [2001:DB8:CAFE:ABC::10]:5060\u201d and a second Via header of \u201cVia: SIP\/2.0\/UDP[2001:DB8:EFAC:123::100]:5060\u201d. At this point, dual stack SIP client device  recognizes that SIP client device  is IPv6-only based on the SIP OPTIONS message from () attaching the IPv6 address of dual stack SIP client device  without any reference to an IPv4 address in the IPv6-based SIP OPTIONS message from dual stack SIP client device , . At (), dual stack SIP client device  responds to the SIP OPTIONS message from () by transmitting a SIP 200 OK message over an IPv6 socket configured with a first Via header of \u201cVia: SIP\/2.0\/UDP [2001:DB8:CAFE:ABC::10]:5060\u201d and a second Via header of \u201cVia: SIP\/2.0\/UDP[2001:DB8:EFAC:123::100]:5060\u201d. Then, at (), the dual stack SIP server\/proxy  transmits the SIP 200 OK message to IPv6 SIP client device  over an IPv6 socket with a Via header of \u201cVia: SIP\/2.0\/UDP[2001:DB8:EFAC:123::100]:5060\u201d.","Referring to , after (), dual stack SIP client device  will select IPv6 for any subsequent communication initiated with IPv6 SIP client device , , similar to - and  of . At (), an example of IPv6 communication initiated based on the selection of  is shown, similar to  of .","Turning to , at (), dual stack SIP client device  transmits a SIP OPTIONS message for delivery to a target SIP client device  configured to include a Via header set to \u201cVia: SIP\/2.0\/UDP 192.0.2.1:5060\u201d over an IPv6 socket to a dual stack SIP server\/proxy , similar to  of . At this point in the embodiment of , the target SIP client device  is dual stack, but the dual stack SIP client device  is not yet aware of this. In , the dual stack SIP server\/proxy  is a SIP server\/proxy that is addressable by both an IPv4 address and an IPv6 address, as noted above in Table 2. The dual stack SIP server\/proxy  receives the SIP OPTIONS message from () and implements standard SIP proxy behavior such as matching the IP address information in the Via header to the underlying IP header. In this case the dual stack SIP server\/proxy  detects that the Via header contains an IPv4 address, but the SIP request was received over an IPv6 socket, so the SIP proxy\/server  inserts a received parameter in the Via header containing the IPv6 address for dual stack SIP client device . As will be appreciated, this operation of the SIP proxy\/server  complies with standard SIP proxy behavior, except that the result is a SIP OPTIONS message that includes both IPv4 and IPv6 addresses for dual stack SIP client device . At (), the dual stack SIP server\/proxy  sends the configured SIP OPTIONS message over an IPv6 socket with a first Via header of \u201cVia: SIP\/2.0\/UDP [2001:DB8:CAFE:ABC::10]:5060\u201d and a second Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.1:5060;received=[2001:DB8:CAFE:1::100]\u201d to IPv6 SIP client device , similar to  of . As will be appreciated, ()-() of  are similar to ()-() from . Unlike ()-() of , the SIP OPTIONS message of () in  is delivered to dual stack SIP client device  without IPv4\/IPv6 translation because dual stack SIP client device  is IPv6-capable.","Referring to , at , the IPv6 SIP client device  identifies SIP client device  as dual stack based on the second Via header including both IPv4 and IPv6 addresses for the dual stack SIP client device , similar to  of . At (), the IPv6 SIP client device  responds to the SIP OPTIONS message from () by transmitting a SIP 200 OK message over an IPv6 socket to the dual stack SIP server\/proxy  having a first Via header of \u201cVia: SIP\/2.0\/UDP [2001:DB8:CAFE:ABC::10]:5060\u201d and a second Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.1:5060;received=[2001:DB8:CAFE:1::100]\u201d. At (), the dual stack SIP server\/proxy  transmits the SIP 200 OK message over an IPv6 socket to the dual stack SIP client device with a Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.1:5060;received=[2001:DB8:CAFE:1::100]\u201d.","Referring to , in addition to responding to the SIP OPTIONS message from () with a SIP 200 OK message as shown in ()-(), dual stack SIP client device  also determines to notify dual stack SIP client device  that dual stack SIP client device  is dual stack, . To this end, at (), dual stack SIP client device  transmits a SIP OPTIONS message over an IPv6 socket configured with a Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.22:5060\u201d to the dual stack SIP server\/proxy , similar to  and  of . Then, at (), the dual stack SIP server\/proxy  transmits the SIP OPTIONS message to dual stack SIP client device  over an IPv6 socket with a first Via header of \u201cVia: SIP\/2.0\/UDP [2001:DB8:CAFE:ABC::10]:5060\u201d and a second Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.22:5060;received=[2001:DB8:EFAC:123::100]\u201d. At this point, dual stack SIP client device  recognizes that SIP client device  is dual stack based on the SIP OPTIONS message received at () attaching both IPv4 and IPv6 addresses of dual stack SIP client device , . At (), dual stack SIP client device  responds to the SIP OPTIONS message from () by transmitting a SIP 200 OK message over an IPv6 socket configured with a first Via header of \u201cVia: SIP\/2.0\/UDP [2001:DB8:CAFE:ABC::10]:5060\u201d and a second Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.22:5060;received=[2001:DB8:EFAC:123::100]\u201d. Then, at (), the dual stack SIP server\/proxy  transmits the SIP 200 OK message to dual stack SIP client device  over an IPv6 socket with a Via header of \u201cVia: SIP\/2.0\/UDP 192.0.2.22:5060;received=[2001:DB8:EFAC:123::100]\u201d.","Referring to , after (), both dual stack SIP client device  and dual stack SIP client device  will select IPv6 for any subsequent communication initiated with the other dual stack SIP client device,  and , similar to - and  of . At (), an example of IPv6 communication initiated based on the selection of  or  is shown, similar to  of .","As will be appreciated, the exchange of SIP OPTIONS message shown above in  can occur as part of a rich communication suite (RCS) capability discovery procedure that is modified to not only exchange RCS capability information, but also IP-version capability information.","Those of skill in the art will appreciate that information and signals may be represented using any of a variety of different technologies and techniques. For example, data, instructions, commands, information, signals, bits, symbols, and chips that may be referenced throughout the above description may be represented by voltages, currents, electromagnetic waves, magnetic fields or particles, optical fields or particles, or any combination thereof.","Further, those of skill in the art will appreciate that the various illustrative logical blocks, modules, circuits, and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware, computer software, or combinations of both. To clearly illustrate this interchangeability of hardware and software, various illustrative components, blocks, modules, circuits, and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application, but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.","The various illustrative logical blocks, modules, and circuits described in connection with the embodiments disclosed herein may be implemented or performed with a general purpose processor, a digital signal processor (DSP), an application specific integrated circuit (ASIC), a field programmable gate array (FPGA) or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor, but in the alternative, the processor may be any conventional processor, controller, microcontroller, or state machine. A processor may also be implemented as a combination of computing devices, e.g., a combination of a DSP and a microprocessor, a plurality of microprocessors, one or more microprocessors in conjunction with a DSP core, or any other such configuration.","The methods, sequences and\/or algorithms described in connection with the embodiments disclosed herein may be embodied directly in hardware, in a software module executed by a processor, or in a combination of the two. A software module may reside in RAM memory, flash memory, ROM memory, EPROM memory, EEPROM memory, registers, hard disk, a removable disk, a CD-ROM, or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from, and write information to, the storage medium. In the alternative, the storage medium may be integral to the processor. The processor and the storage medium may reside in an ASIC. The ASIC may reside in a user terminal (e.g., UE). In the alternative, the processor and the storage medium may reside as discrete components in a user terminal.","In one or more exemplary embodiments, the functions described may be implemented in hardware, software, firmware, or any combination thereof. If implemented in software, the functions may be stored on or transmitted over as one or more instructions or code on a computer-readable medium. Computer-readable media includes both computer storage media and communication media including any medium that facilitates transfer of a computer program from one place to another. A storage media may be any available media that can be accessed by a computer. By way of example, and not limitation, such computer-readable media can comprise RAM, ROM, EEPROM, CD-ROM or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a computer. Also, any connection is properly termed a computer-readable medium. For example, if the software is transmitted from a website, server, or other remote source using a coaxial cable, fiber optic cable, twisted pair, digital subscriber line (DSL), or wireless technologies such as infrared, radio, and microwave, then the coaxial cable, fiber optic cable, twisted pair, DSL, or wireless technologies such as infrared, radio, and microwave are included in the definition of medium. Disk and disc, as used herein, includes compact disc (CD), laser disc, optical disc, digital versatile disc (DVD), floppy disk and blu-ray disc where disks usually reproduce data magnetically, while discs reproduce data optically with lasers. Combinations of the above should also be included within the scope of computer-readable media.","While the foregoing disclosure shows illustrative embodiments of the invention, it should be noted that various changes and modifications could be made herein without departing from the scope of the invention as defined by the appended claims. The functions, steps and\/or actions of the method claims in accordance with the embodiments of the invention described herein need not be performed in any particular order. Furthermore, although elements of the invention may be described or claimed in the singular, the plural is contemplated unless limitation to the singular is explicitly stated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A more complete appreciation of embodiments of the invention and many of the attendant advantages thereof will be readily obtained as the same becomes better understood by reference to the following detailed description when considered in connection with the accompanying drawings which are presented solely for illustration and not limitation of the invention, and in which:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2C"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2D"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2E"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 14","FIGS. 11-13"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 15","FIGS. 11-13"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 16","FIGS. 11-13"]}]},"DETDESC":[{},{}]}
