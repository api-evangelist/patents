---
title: Backup and archival of selected items as a composite object
abstract: An archive of items, which are computing data accessed by a user, is created at a semantic object level. The object archiving may group seemingly disparate items as a composite object, which may then be stored to enable retrieval by the user at a later point in time. The composite object may include metadata from the various items to enable identifying the composite object and providing retrieval capabilities. In some aspects, an archiving process may extract item data from an item that is accessed by a computing device. Next, the item may be selected by a schema for inclusion in a composite object when the item data meets criteria specified in the schema. The composite object(s) may then be stored in an object store as an archive.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09594759&OS=09594759&RS=09594759
owner: Microsoft Technology Licensing, LLC
number: 09594759
owner_city: Redmond
owner_country: US
publication_date: 20090616
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["People use computers to perform an array of functions, such as access local files, surf the Internet (the Web), communicate with other people, watch videos, listen to music, and so forth. Often, people are concerned with loss of computing data (or simply \u201cdata\u201d). To address this concern, people often archive (backup) their data using a number of different techniques. Some people individually select data to archive on a storage disk that is independent from a source storage disk that is used to initially access the data. Other users may use backup devices and\/or services that archive the users' data without continuous user intervention, such as at a scheduled backup time. In some instances, the archive may be performed over a network to a remote location.","Often archived computing data is stored in a same manner as it exists on the source storage disk. In some situations, data that is related to corresponding data (e.g., email attachment and email text, etc.) may not be backed up in a same location, at a same time, or even at a same interval as the corresponding data.","In addition, some computing data is accessed via a network, such as Web data accessible on the Internet. A user may desire to selectively archive the Web data to enable retrieval of the Web data at a later point in time. However, archiving Web data is difficult because Web data is often dynamic, may include large files, often does not include consistent naming conventions and semantic construction, and for other similar reasons. Thus, Web data may complicate selective archiving and retrieval of the data using traditional techniques.","Finally, users are often bombarded with user requests when computing. A presentation of additional dialog boxes or other user requests often annoy users and distract the users from pending tasks, which may result in a loss of productivity, user frustration, or other undesirable outcomes.","An archive of items, which are computing data accessed by a user, is created at a semantic object level. The object archiving may group seemingly disparate items as a composite object or group of composite objects, which may then be stored to enable retrieval by the user at a later point in time. The composite object may include metadata from the various items to enable identifying the composite object, providing retrieval capabilities (e.g., search, etc.), and so forth.","In some aspects, a schema agent may extract item data from an item that is accessed by a computing device. The schema agent may select the item for inclusion in a composite object based on a schema when the item data is included in instructions of the schema. The schema agent may also identify metadata and\/or attributes of the items, which may be stored with the composite object and used for identification and retrieval of the composite object. In some aspects, the schema may also construct composite objects based on characteristics of the data, such as by using either machine learning based approaches, wisdom of crowds for categorization, or simply heuristics.","In further aspects, the composite object may be stored in an object store, locally and\/or remotely. A policy engine may determine storage options for the items in the composite object, which may include duplicating the items, moving the items from an original location, or creating a pointer to the item's original location. The policy engine may also remove item redundancy in the object store. The object store may be a backup of the original objects, in context, which may allow recovery of the objects upon request.","Overview","As discussed above, archiving data may be important to enable users to secure data for retrieval at a later point in time. In some embodiments, an archiving system may enable a user to archive data that is accessible via multiples data sources (fixed disk, peer to peer (P2P), on the Web, etc.). In addition, the archiving system may minimize user interaction by selecting items (data) to archive without (or with minimal) user input. In some embodiments, the archiving system may group items that are related to one-another at a semantic object level based on time intervals, data access processes, and\/or semantic similarities such as, without limitation, email, favorites, contacts, tasks, calendar events, and so forth. In this way, related items may be archived together as a composite object. In some embodiments, the items in the composite object may be archived at substantially the same time and archiving interval.","As disclosed herein, archiving items (e.g., documents, images, web content, etc.) that are accessed by a user is performed at a semantic object level. Semantic object level archiving may be one level up from (i.e., at a less granular level than) traditional data archiving, which is performed by making identical copies of items at a data source level (e.g., files, folders, etc.). The object archiving may group seemingly disparate items as a composite object, which may then be archived to enable retrieval by the user at a later point in time. The composite object may include metadata from the various items to enable identifying the composite object, providing retrieval capabilities (e.g., search, etc.), and so forth.","In some embodiments, the archiving system may employ schemas as criteria for a selection of items for inclusion in the composite object. The schemas by implemented by a scheme service that includes some items in the composite object and exclude other items by implementing various instructions of the schemas. The instructions may enable selection of the items with minimal or no user interaction. The instructions of the schemas may be predefined, formed by aggregating preferences from other users (e.g., wisdom of the crowd), or defined by customization (e.g., user defined ahead of time).","In various embodiments, a policy engine may archive the composite object in a storage device for later retrieval. The policy engine may determine how to store each item of the composite object. For example, some items may be archived by duplicating the item, moving the item from the source to the archive location, creating a pointer to the item at its source location, using compression, and\/or performing data integrity operations to generate consistency of the composite object (and data within). The policy engine may also perform other operations such as identifying and reducing redundancy of archiving items of the composite objects.","The processes and systems described herein may be implemented in a number of ways. Example implementations are provided below with reference to the following figures.","Illustrative Environment",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1","b":["100","100","102","104","104","104","1","104","1","104","2","104","3","104","104","104","1"],"i":["n","n","n"]},"The clients  may access data locally (e.g., from memory of the client , etc.) and\/or remotely (e.g., from web servers  via network(s) ). The network(s)  may include one or more of wired or wireless networks including wide area networks (WANs), local area networks (LANs), and\/or personal area networks (PANs). A non-exhaustive list of example types of networks includes Wi-Fi, mobile telephone, Bluetooth\u00ae or other network types.","As the users  interact with the clients , items  may be created as discrete instances of data. The items  may include any content that is accessible by the clients  such as, for example, web data from the web servers  (e.g., websites, downloaded content, streamed data, etc.) local data from the client  (e.g., documents, images, video, audio, voice communications, etc.), and so forth.","Each of the items  may include various metadata  and\/or attributes  that describe the item. For example, the metadata  may include a date of data creation\/modification, file type, image size, resolution, etc. The attributes  may include additional information about the item  that may or may not be stored in the metadata, but that is discoverable by analyzing the item. For example, the attributes may include a file size, storage location, etc.","As one of the users  interacts with the client , various items  may be selected for archiving based on a schema (set of instructions). The schema may be implemented by a schema agent to select different items, such as item (), . . . , (P) based on a set of instructions, which will be discussed in more detail below. The items  may be associated as a composite object , which may be ultimately archived to enable user retrieval at a later point in time.","The composite object  is defined by the schema and contains information about the various items ()-(P) that are included in the composite object. For example, the composite object  may be created by a schema that selects items associated with an email application. In that case, the composite object  may include a first item that is an email message, a second item that is linked data from the email message, a third item that is contact information for a recipient of the email (e.g., phone, home address, email address, etc.), and a fourth item may include a note created by a notation app that is used to scribble notations over the email interface (e.g., using a stylus). These items may be bundled together as one example of the composite object , archived in an object store , and retrieved by one of the users  at a later point in time. Unlike conventional data storage, the composite object  may compile disparate instances of data (the items ) together as contextual data in the composite object that may be archived in the object store .","In some embodiments, the architecture  may include archiving server(s)  that are in communication with the clients  via the network(s) . The archiving servers  may monitor computing activities of the clients  to identify and select the items  and create the composite object  with the items based on the schema. When the archiving servers  are included in the architecture , the object store  may be located with the archiving servers  or otherwise remote from the clients . In other embodiments, the clients may identify and select the items  and create the composite object  with the items based on the schema. The object store  may be located with the clients or in a location that is remote (separate) from the clients.","As illustrated, the clients  and\/or the archiving server(s)  may be equipped with a computing infrastructure  to enable the clients  and\/or the archiving servers  to archive selected ones of the items  as the composite object . The computing infrastructure  may include one or more processors  and memory  that is accessible by the processors . The memory  may include applications, modules, and\/or data. In some embodiments, the memory  may include an object archiving application (OAA) . The OAA  may be an application with one or more additional components that may archive selected items as the composite object  as disclosed herein.","In some embodiments, the OAA  may include a schema agent  to implement the schema. The schema agent  may identify the items  that are accessed by the users  via the clients . The schema agent  may then select one or more of the items  for inclusion in the composite object , which may be archived in the object store . In various embodiments, the schema agent  may include instructions (schema) that determine when to select the items and define aspects of the composite objects . The instructions may be predefined, formed by aggregating preferences from other users (e.g., wisdom of the crowd), and\/or defined by customization (e.g., user defined). In some embodiments, the OAA  may employ optimization technology to compress, single instance or some other mechanism to save space in the object store. The OAA  may further perform data integrity operations during the archiving process.","In various embodiments, the OAA  may include a snapshot manager  to create a snapshot of data as one of the items . The snapshot manager  may be used to generate an image, text, or other types of data from content accessed by the users  (a snapshot of data at a point in time (the aggregated data). For example, the snapshot manager  may capture web browsing history by capturing screenshots of web pages viewed by a user. The snapshot manager may also capture changes to the objects at the high level as events are occurring on a computer (e.g. when a file is saved, the semantic data is also saved along with events scheduled). The snapshot may be stored as an image or other type of data and added to the composite object . The snapshot manager  may also obtain metadata for the generated data, which may be used to identify and\/or retrieve the item.","In some embodiments, the OAA  may include a policy engine . The policy engine  may enable archiving the composite object  in the object store . In some embodiments, the policy engine  may determine how to store the items  of the composite object , such as by duplicating the item, moving the item from the source to the archive location, performing compression\/optimizing, performing data integrity, and\/or creating a pointer to the item at its source location.","The computing infrastructure  may be wholly implemented on one or both of the clients  and\/or the archiving servers  to perform the various functions described above. In some embodiments, portions of the object archiving application  may be implemented (shared or divided) among the clients  and the archiving servers  to perform archiving selected items as a composite object. For example, in one configuration, the clients  may include the schema agent  and may select the items  for inclusion in the composite object . The composite object  may then be analyzed by the policy engine  executed by the archiving servers , which ultimately access the object store  to archive the composite objects . In another example, the clients  may include the entire computing infrastructure  and have direct access to the object store  (that may be local or remote from the clients). Other configurations are contemplated which allocate tasks (processing) between the clients  and the archiving servers .",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 2","b":["200","200","202","204","202","202","1","202","2","202","3","202","202","110","202"]},"Each of the various sources ()-(M) of the data source layer  may be examined from the object level semantics layer , which includes various object level schemas . Each of the schemas  may include instructions for identifying the items that originate from the data source layer . The schemas  may select items based on instructions to include the items in one or more composite objects. A first object level schema () may include items related to an email application, which ultimately forms an email based composite object  that includes disparate items extracted from various locations in the data source layer . The composite object  may include a metadata layer  that includes information to identify the composite object and\/or retrieve the composite object. Additional object level schemas ()-(N) may be included in the object level schemas, where each object level schema is configured to create composite objects by selecting items based on a set of instructions.","As an example, the object level schema (N) may include instructions that create items associated with a calendar schema. A user may interact with a calendar event by manipulating computing data to create items, such as via the mobile telephone client (). The activities associated with the calendar event may then be archived together as the composite object . The items  may include, without limitation, calendar information, attachments, attendee information (outlook properties, etc.), web services accessed during the event, voice over internet protocol (VoIP) communication used during the event, and so forth. Rather than just trying to capture the data, the composite objects stores data as \u201clife streaming\u201d (what the user is doing at any particular time, at a higher level than file\/folder). Thus, the composite objects enable archiving a person's events as captured by interaction with a computer, the web, etc.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 3","b":["300","302","104","110"]},"Each of the items ()-(P) may represent various data that is accessible from the data source layer . The items  may be described by various illustrative actions ()-(P), which are associated with the items ()-(P), respectively. Although all of the items  have a corresponding action, only some of the actions  are depicted in . Examples of the actions  may include a website (or websites) accessed by one of the users  as (), an email created by a user as (), . . . , and a video played by a user at (P). Other actions may include posting of photos and comments, which may be posted over time for each photo. Each of the actions  may be analyzed by the schema agent  by processing various instructions  to select the items .","The instructions  define the schema  and may include one or more of predefined instructions (), custom instructions (), and\/or group defined instructions (). The predefined instructions () may be instructions for selecting one of the items  and creating the composite object  that are universal, or default, thus accessible by the users  of the archiving service. The custom instructions () may be user defined instructions or otherwise modified instructions that may or may not share properties or an origin with the predefined instructions (). For example, the custom instructions () may be created by a user-selection of various predefined instructions in a template that enables the user to specify which elements are included\/excluded in the custom instructions rather than creating instructions without a template. The group defined instructions () may be formed by aggregating preferences or recommended schemas from other users to obtain \u201cwisdom of the crowd.\u201d For example, the group defined instructions () may be created by selecting popular user defined instructions stored as the custom instructions ().","In some embodiments, the group defined instructions () may be generated via an ontological analysis of item grouping from other users that interact with one or more of the items  or other items of the same or similar data type as the items . In various embodiments, schema agent  may run as a web service and data may be aggregated and shared across a group of user of a system. The set of aggregated schemas (not really preferences) can be provided as a web service where users can have object schemas defined automatically or submitted as a group. In this way, the process may build a bottom's up ontology for the schema by watching (via the schema agent ) user actions and submitting the actions to the web service. The schema can then be generated by using machine learning to look for common features (and creating a new schema) or simply by taking the common schemas that are either submitted or generated to the system and ensuring there is enough agreement across schema types that a new schema can be created.","The schema agent  may assemble the composite object  by selecting one or more of the items  for inclusion in the composite object. In some embodiments, the schema  may create the composite object  for an item, such as when one of the users  begins a new computing activity, and accesses an item included within the instructions  that are implemented by the schema agent . In some embodiments, the composite object  may be packaged (created) by the client , while in other instances another device (e.g., the archiving servers , etc.) may package the composite object.","The policy engine  may receive the composite object  and archive the composite object by interacting with the object store . The composite object  may be stored in the object store  with other composite objects , which may be later retrieved by one or more of the users . In some embodiments, only a user that creates the composite object  is permitted to retrieve the composite object. As shown in , the composite object  includes only a portion of the items  as an item group  (e.g., items , , . . . , N), which are the items  that are selected by implementing the schema agent . Any non-selected items (e.g., item , etc.) may be disregarded and not stored in the object store  and\/or not associated with the composite object .","Illustrative Operation",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIGS. 4A, 4B, and 4C","FIGS. 4A-4C","FIGS. 4A-4C","FIG. 1"],"b":["100","130"]},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 4A","b":["400","116","402","130","110","104","112","114"]},"At , the schema agent  may perform an analysis of the item using the instructions . For example, the metadata , the attributes , or other information and\/or relationships of the item may be compared with the instructions  to determine whether the item is included in a schema.","At , the schema agent  determines whether the item is to be included in a composite object based on the analysis at the operation . If the item is included in the instructions, then further operations may be performed on the item.","At , the schema agent  designates the item for inclusion in a composite object(s) and item information is associated with the item. For example, the item may be stored in cache or another memory location prior to inclusion in the composite object(s). The identification information may be generated from the metadata  and\/or the attributes , and thus be named\/identified without user input. In some embodiments, a user may provide a name\/identifier for the item or set of items.","At , the schema agent  may continue to monitor user activity to determine whether additional items need processing. When an item is not included in the schemas at the decision operation , the process  may advance to the decision operation  for further processing of the items.","At , the schema agent  may package the designated items from the operation  as the composite object  when no additional items are processed at the decision operation . In some embodiments, the operation  may batch process all of the items selected at  in the composite object, or may only process a portion of the items at .",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 4B","FIG. 4B"],"b":["414","414","400"]},"At , following the designation of the item as included in the instructions , the schema agent  may determine whether a composite object exists for packaging the item. When a composite object is identified at , the designated item may be packaged with the existing composite object at . However, when the composite object does not exist at , the schema agent  may create a new composite object for the item and then package the item in the new composite object at . In some instances, input for objects as events are happening (e.g., user interacting with a data via a computer) or input may be captured after creation of the object.","As an example, a user may perform a series of related computing activities using the client  to gather information prior to purchasing a car. Each of the activities may result in an identification of an item at . The user may look at reviews on the Web (), dealership websites, access prices from a database (e.g., the database ()), watch a video and so forth, which may create the items ()-(P). The schema agent , by implementing the instructions , may store some of the items  as the composite object . The process  may create the composite object  at  by including multiple items that form the composite object using a batch creation process. In contrast, the process  may add the items to existing composite objects at , as appropriate, or create a new composite object when necessary at . It is contemplated that the schema agent  may add items to different composite objects by alternating between composite objects based on the analysis of the item at .","In another example, a photo site may be used to post photos uploaded from users. User may post the photo or photos up on the site at a specific time, then share it with other people. Eventually, some people may comment on the photos or tag people within the photo. The photos and\/or comments may be archived as a composite object. The composite object may include a photo, the related comments, a timeline, and associated tags. During a restore of the archived composite object, the user may roll back to a specific event (e.g. the birthday party photos) and restore from that point. Each discrete element could be restored.","Later, the user may want to retrieve this information and continue the example research activity. By accessing the composite object , the user may continue the research while having at his\/her disposal the prior research stored as the composite object  of the items ()-(P). Some non-relevant activities (resulting in items) may be omitted from the composite object  as determined by the instructions  implemented by the service schema  at . For instance, in the example given above, a user may have taken a break from researching the car purchase to check their email. The schema may include instructions allowing the service schema  to discern that the email is not related to the car research and should be omitted from the composite object. The schema's operation may be transparent to the user such that the user does not have to continually make decisions (take action, etc.) on issues such as what to archive or what name (identifier) to archive an item with, and so forth.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 4C","b":"422"},"At , the schema agent  may identify the metadata  associated with the items . For example, the metadata  may include a date of data creation\/modification, file type, image size, resolution, event type, data type, etc.","At , the schema agent  may identify the attributes  associated with the items . The attributes  may include additional information about the item  that may or may not be stored in the metadata but that is discoverable by examining the item. For example, the attributes may include a file size, storage location, website location, etc.","At , the schema agent  may generate an identifier for the items using the metadata  and\/or the attributes . For example, a user may access an image on the Web that is one of the items  designated by the schema agent  for inclusion in the composite object . The item (image) may include a file name (metadata). The schema agent  may generate an identifier for the item that is more meaningful to the user for later retrieval. For example, the website source of the image (attribute), a resolution (metadata), caption (metadata), etc., may be used to generate an identifier (or name) which may be used to store the item and enable other activities such as retrieval (search, indexing, etc.).","At , the schema agent  may migrate at least a portion of the metadata  and\/or the attributes  of the item to the composite object . In this way, the composite object  may be identified (named, etc.) by metadata\/attributes of the items that the composite object includes. In addition, the composite object  may be retrieved (searched, categorized, schematized, etc.) using the migrated item information of the metadata  and\/or the attributes .",{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 5","FIG. 5","FIG. 1"],"b":["500","100","132","502","130","402"]},"At , the snapshot manager  may obtain a snapshot to create item(s) for archival. In some embodiments, the snapshot manager  may create an image file (e.g., bitmap, etc.), generate a screen scrape (identify text of the screen for storage as data other than an image), or a combination thereof.","At , the snapshot manager  may associate metadata and\/or attributes with the snapshot obtained at . The metadata and\/or attributes may include the data location (e.g., web address), access time, screen scrape (snapshot analysis) data, or other data associated with the snapshot. The metadata and\/or attributes may be used to identify the snapshot as an item and\/or to retrieve the item. Snapshots may enable obtaining a composite object automatically or on demand at any point in time. If a user wants to augment that at some later date, the system may only archive (or backup) incremental (delta) changes to the content.","At , the schema agent  may package the snapshot as the item with the composite object . The snapshot may then be retrieved with the composite object, as an item, set of objects, or sets of items, with other related items as determined by the schema agent .",{"@attributes":{"id":"p-0068","num":"0067"},"figref":["FIG. 6","FIG. 6","FIG. 1"],"b":["600","600","100","134"]},"At , the policy engine  may receive the designated item (e.g., the item  from the operation  as designated by the schema agent ). In some embodiments, the designated item may be transmitted across the network  prior to receipt by the policy engine .","At , the policy engine  may determine how to store the item  in the object store . The item  may be stored in the object store at  based on the determination of the policy engine  at . The policy engine  may store the item  using any available route (RT).","Following a first route RT, the policy engine  may store an archived (duplicate) copy of the item in the object store with the composite object . In some embodiments, the policy engine  may follow the first route RT as a default route.","Following a second route RT, the policy engine  may determine to \u201cstore\u201d the item by creating a pointer without creating an additional copy of the item that is separate from the source copy of the item of which the item originates. For example, the policy engine  may create a pointer to the item's original location rather than storing a duplicate copy of the item in the object store . In some aspects, the policy engine  may use compression and\/or optimization when archiving objects. The composite object  may then include a pointer, the metadata , and the attributes  of the pointed-to item instead of the complete item (i.e., duplicate). In some embodiments, the policy engine  may follow the second route RT when the item is stored in an original location that is unlikely to change (static item), the item is a large file and may require substantial bandwidth to copy via the first route RT, or for other reasons.","Following a third route RT, the policy engine  may move the item  to the object store and delete an original copy to minimize storage space (particularly applicable when the object store is local to the client ). In an example, a large email attachment may be archived as an item in the composite object  by moving the attachment to the object store and deleting the original attachment. The policy engine may also enable a user to selectively remove composite objects that are past a certain date of archiving (e.g., no longer relevant to the archived composite object). In some embodiments, the policy engine  may follow the third route RT when the item that is currently stored in an original location is no longer needed in the original location (more likely to be accessed via the composite object than via the original location), or for other reasons.","At , the policy engine  may determine whether to perform a redundancy check to see if the item has been previously archived. At , the redundancy check may be performed by the policy engine . When a redundancy is identified, an item with redundancy may be mapped to a new location and the redundant copy removed from the archive. In this way, two or more composite objects may share a same item, where one composite object may include the data of the item (i.e., duplicate copy) while the other composite objects may include a pointer to the duplicate copy. In some embodiments, the policy engine  may perform data integrity as the policy engine is running to ensure the composite object are consistent and do not contain errors.","At , the policy engine  may determine whether to create a composite object and\/or item search index. At , the policy engine may create a search index, which may enable expedited or alternative techniques for retrieval of the composite object and\/or items. The search index may be created as data is added to the composite object, or after the fact in a batch process. In some embodiments, the policy engine  may create the search index by indexing the metadata  and\/or the attributes  at the item or composite object level to enable a search of the composite objects and\/or the items.","At , the policy engine  may enable user retrieval of the composite objects. For example, the policy engine may enable access to the composite objects via a user interface, which may enable a user to selectively retrieve the composite object and items.",{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 7","b":["700","134","116","110","602","134","116","702","704","706","110","116","134","708","704","710"]},{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 8","b":["800","800","802","804","116"]},"The interface layer  may be manipulated by a user to select item links  that have been archived by the object archiving application (OAA) . The interface layer  may include timeline designators  to provide a timeline \u201cfeed\u201d representation of the creation, storage, or other event associated with the items  represented by the item links . The users  may select the item links , such as by clicking on the item links  or by other techniques, and thus access corresponding items , which are archived as the composite objects .","The relationship layer  shows the items  mapped to corresponding instances of the composite objects . A mapped composite object  may include any number of related objects as defined by the schema agent . In some embodiments, the user  may access the composite object  and\/or the items , as the mapped composite object , via the client . For example, the user  may click on one of the item links , which in turn may trigger the client  to provide user access to the mapped composite object , including access to the composite object  and\/or the individual items of the items  associated with the composite object.","Illustrative Computing Device",{"@attributes":{"id":"p-0081","num":"0080"},"figref":["FIG. 9","FIG. 1","FIG. 9"],"b":["900","100","900"]},"In a very basic configuration, the computing device  typically includes at least one processor  and system memory . Depending on the exact configuration and type of computing device, the system memory  may be volatile (such as RAM), non-volatile (such as ROM, flash memory, etc.) or some combination of the two. The system memory  typically includes an operating system , one or more program modules , and may include program data . The operating system  includes a component-based framework  that supports components (including properties and events) such as, for example, objects, inheritance, polymorphism, reflection, and provides an object-oriented component-based application programming interface (API). The computing device  in this example is of a very basic configuration demarcated by a dashed line . A terminal may have fewer components but will interact with a computing device that may have such a basic configuration.","The computing device  may have additional features or functionality. For example, the computing device  may also include additional data storage devices (removable and\/or non-removable). Such additional storage is illustrated in  by removable storage  and non-removable storage . Computer storage media may include volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information, such as computer readable instructions, data structures, program modules, or other data. The system memory , the removable storage , and the non-removable storage  are all examples of computer storage media. The computing device  may also have input device(s)  (e.g., keyboard, etc.) and output device(s)  (e.g., display, etc.).","The computing device  may also contain communication connections  that allow the device to communicate with other computing devices  (e.g., the data server(s) , etc.), such as over the network . The network(s)  may include wired networks as well as wireless networks. The communication connections  are one example of communication media. The communication media may typically be embodied by computer readable instructions, data structures, program modules, etc.","The illustrated computing device  is only one example of a suitable device and is not intended to suggest any limitation as to the scope of use or functionality of the various embodiments described. Other well-known computing devices, systems, environments and\/or configurations that may be suitable for use with the embodiments include, but are not limited to personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, game consoles, programmable consumer electronics, network PCs, minicomputers, mainframe computers, distributed computing environments that include any of the above systems or devices, and\/or the like. For example, some or all of the components of the computing device  may be implemented in a data center or cloud computing environment, such that resources and\/or services are made available via a computer network for selective use by client devices.","Conclusion","Although the techniques have been described in language specific to structural features and\/or methodological acts, it is to be understood that the appended claims are not necessarily limited to the specific features or acts described. Rather, the specific features and acts are disclosed as exemplary forms of implementing such techniques."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The detailed description is described with reference to the accompanying figures. In the figures, the left-most digit(s) of a reference number identifies the figure in which the reference number first appears. The same reference numbers in different figures indicate similar or identical items.",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4C"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 9","FIG. 1"]}]},"DETDESC":[{},{}]}
