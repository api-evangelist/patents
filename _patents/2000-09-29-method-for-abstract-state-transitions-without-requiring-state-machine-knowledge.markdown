---
title: Method for abstract state transitions without requiring state machine knowledge
abstract: A system and method employ a client-server architecture that abstracts from the client the states of objects and transitions between the states. As a result, the server maintains objects, along with associated states, and state transitions that are provided to clients on demand. The client is only provided with a set of valid transitions between states that are based on the current state of the object and valid transitions out of that state. The states may be additionally filtered based on the permissions granted to the client. In this way, the client is relieved of prior knowledge of valid object states and state transitions. Hence, in a document management system, for example, new states and transitions for objects may be added at the server and propagated through to the clients.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06976259&OS=06976259&RS=06976259
owner: Microsoft Corporation
number: 06976259
owner_city: Redmond
owner_country: US
publication_date: 20000929
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The present invention relates generally to systems and methods for abstracting from a client the state transitions of an object on a server. More particularly, the invention is directed to abstracting from various clients the states of an object in a knowledge management system so that the actions that the client can perform on the object are dynamically determined.","As the amount of information stored by computer systems continues its exponential growth, companies are developing sophisticated information organization methods to aid users in both the storage and retrieval of that information. The ability to capture information, knowledge, and data has created a demand on organizations to absorb and analyze this information, knowledge, and data in a focused way. Organizations and people within organizations that effectively harness this information, knowledge, and data have a competitive advantage.","The onslaught of information has in turn changed the way in which people within organizations interact with information and collaborate in the preparation of projects. For example, the ability for people within organizations to collaborate on the preparation and review of a document has changed the way people interact allowing people to gain knowledge from their experiences and their peers' expertise. The need for effective collaboration in the preparation of documents has become essential to completion of projects. Lack of effective collaboration affects an organization's ability to meet time-to-market constraints, affects bottom line costs, and minimizes top line profitability. To achieve effective collaboration, the collaborative environment must be optimized, information feeds must be integrated wherever possible, and the right tools must be available to visualize and disseminate information rapidly and meaningfully.","Client-server environments facilitate collaboration by providing a central repository of information by way of a server that can provide a common platform for people to interact with by way of client computers. Client-server systems allow a centralized server to uniformly control aspects of the client interaction with programs and data on the server. One such example system is a document management system that provides a mechanism whereby multiple clients can collaborate in development of documents and other objects. Typically, such systems maintain objects in a central location (i.e. on a server) and control the access to the object by multiple clients. In this way, collaboration can be coordinated so that multiple clients are not simultaneously changing the object. For example, clients can access the server and \u201ccheck-out\u201d an object. Thereafter, other clients attempting to access the object will be notified that that object is in a \u201cchecked-out\u201d state and may be prohibited from changing the object. Additionally, clients may see other object states such as \u201cchecked-in\u201d, \u201cexpired\u201d, and so on. While the server typically maintains control over the object, access to the object is typically provided by client software. Controlling the functionality of access to the object at the server would provide uniformity across clients and provide for a more flexible system design. Hence, there is a need to provide an improved system and method for controlling the access to and the manipulation of objects in a client-server environment wherein a plurality of clients have varying access to a plurality of objects stored on the server.","To meet the above need, the present invention provides a flexible, server based system for controlling the operations on objects (i.e., the manner in which users can access and manipulate objects), particularly in a document management system. This functionality is achieved by providing a server-based state-transition model for objects in its domain. The state transition model maintains at the server allowable states for object and allowable transitions between the states. Based on that state transition model, the server can determine what operations are permitted to be performed on a given object to transition the object from its current state to a new state. Whenever a client desires to perform operations upon the object, the client makes a request to the server for currently permitted operations. In this way, clients are divorced from the complexity of the system (e.g., the document management system) and the operations that are permitted to transition a given object to a different state. This use of a state transition model provides among other advantages, uniformity of interfaces, faster system upgrades, and so on.","The system comprises a server that maintains an object or objects to be accessed by a client. The server maintains a set of states and state transitions for each object and maintains a current state of each object. When the server receives a request for an object from a client computer, the server provides to the client the object, the current state of the object, and selected state transitions. The selected state transitions are based on the current state. Thereafter, the client may only perform the state transitions to the object based on said selected state transitions provided by the server.","Overview","The present invention addresses the need for a system and method for managing collaborative access to objects. To that end, the system and method provide centralized control over objects and provide a platform wherein actions to be performed on an object are based on the current state of the object and valid transitions from those states. The valid states are maintained on a per-object basis and can be controlled based on the permissions granted to the user.","Exemplary Operating Environment","The present invention is preferably deployed in a network environment, particularly where that network is an Internet or Intranet environment. The term \u201cInternet\u201d is an abbreviation for \u201cInternetwork,\u201d and refers commonly to the collection of networks and gateways that utilize the TCP\/IP suite of protocols, which are well-known in the art of computer networking. TCP\/IP is an acronym for \u201cTransmission Control Protocol\/Internet Protocol.\u201d The Internet can be described as a system of geographically distributed remote computer networks interconnected by computers executing networking protocols that allow users to interact and share information over the networks. Because of such wide-spread information sharing, remote networks such as the Internet have thus far generally evolved into an \u201copen\u201d system for which developers can design software applications for performing specialized operations or services, essentially without restriction.","Electronic information transferred between data-processing networks is usually presented in hypertext, a metaphor for presenting information in a manner in which text, images, sounds, and actions become linked together in a complex non-sequential web of associations that permit the user to \u201cbrowse\u201d or \u201cnavigate\u201d through related topics, regardless of the presented order of the topics. These links are often established by both the author of a hypertext document and by the user, depending on the intent of the hypertext document. For example, traveling among links to the word \u201ciron\u201d in an article displayed within a graphical user interface in a data-processing system might lead the user to the periodic table of the chemical elements (i.e., linked by the word \u201ciron\u201d), or to a reference to the use of iron in weapons in Europe in the Dark Ages. The term \u201chypertext\u201d was coined in the 1960s to describe documents, as presented by a computer, that express the nonlinear structure of ideas, as opposed to the linear format of books, film, and speech.","The term \u201chypermedia,\u201d on the other hand, more recently introduced, is nearly synonymous with \u201chypertext\u201d but focuses on the non-textual components of hypertext, such as animation, recorded sound, and video. Hypermedia is the integration of graphics, sound, video, or any combination thereof into a primarily associative system of information storage and retrieval. Hypermedia, as well as hypertext, especially in an interactive format where choices are controlled by the user, is structured around the idea of offering a working and learning environment that parallels human thinking\u2014that is, an environment that allows the user to make associations between topics rather than move sequentially from one to the next, as in an alphabetic list. Hypermedia, as well, as hypertext topics, are thus linked in a manner that allows the user to jump from one subject to other related subjects during a search for information. Hyper-link information is contained within hypermedia and hypertext documents, which allow a user to move back to \u201coriginal\u201d or referring network sites by the mere \u201cclick\u201d (i.e., with a mouse or other pointing device) of the hyper-linked topic.","A typical networked system that utilizes hypertext and hypermedia conventions follows a client-server architecture. The \u201cclient\u201d is a member of a class or group that uses the services of another class or group to which it is not related. Thus, in computing, a client is a process (i.e., roughly a set of instructions or tasks) that requests a service provided by another program. The client process utilizes the requested service without having to \u201cknow\u201d any working details about the other program or the service itself. In a client-server architecture, particularly a networked system, a client is usually a computer that accesses shared network resources provided by another computer (i.e., a server).","A request by a user for, by way of example, objects such as graphics, video, text and so on, can be sent by a client application program to a server. A server is typically a remote computer system accessible over a remote network such as the Internet. The server scans and searches for raw (e.g., unprocessed) information sources (e.g., newswire feeds or newsgroups). Based upon such requests by the user, the server presents filtered electronic information as server responses to the client process. The client process may be active in a first computer system, and the server process may be active in a second computer system, communicating with one another over a communications medium, thus providing distributed functionality and allowing multiple clients to take advantage of the information-gathering capabilities of the server.","Client and server communicate with one another utilizing the functionality provided by Hypertext-Transfer Protocol (HTTP). The World Wide Web (www) or, simply, the \u201cWeb,\u201d includes those servers adhering to this standard (i.e., HTTP) which are accessible to clients via a computer or data-processing system network address such as a Uniform Resource Locator (URL). The network address can be referred to as a Universal Resource Locator address. For example, communication can be provided over a communications medium. In particular, the client and server may be coupled to one another via TCP\/IP connections for high-capacity communication. Active within the client is a first process, known as a \u201cbrowser,\u201d which establishes the connection with the server and presents information to the user. The server itself executes corresponding server software that presents information to the client in the form of HTTP responses. Of course, applications other than browser may operate on a client and communicate with the server using HTTP. However, browser are one example of a common application that communicates using HTTP. The HTTP responses correspond to \u201cweb pages\u201d constructed from a Hypertext Markup Language (HTML), or other server-generated data. Each web page can also be referred to simply as a \u201cpage.\u201d","The client typically displays the information provided through the network by the server, using a software application known as a browser. Most browsers have modern graphical user interfaces that are capable of displaying and manipulating various types of data. A graphical user interface is a type of display format that enables a user to choose commands, start programs, and see lists of files and other options by pointing to pictorial representations (icons) and lists of menu items on the screen. Choices can be activated generally either with a keyboard or a mouse. Internet services are typically accessed by specifying a unique network address (i.e., typically with a URL). The URL address has two basic components, the protocol to be used and the object pathname. For example, the URL address, \u201chttp:\/\/www.uspto.gov\u201d (i.e., home page for the U.S. Patent and Trademark Office), specifies a protocol of HTTP and a pathname of the server (\u201cwww.uspto.gov\u201d). The server name is associated with one or more equivalent TCP\/IP address.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1","b":["20","20","22","70","22","80"],"i":"a"},"Client computers , and server computer  are connected to communications network  by way of communications interfaces . Communications interfaces  can be any one of the well-known communications interfaces such as Ethernet connections, modem connections, DSL connections and so on. Communications interfaces  may also be by way of an intermediate communications network such as a LAN.","According to aspects of the present invention, users of client computers , may generate and manipulate objects  (e.g., DOC) that must be stored for later retrieval for editing, viewing, and the like. The generic term user(s) is used herein to designate all users of the system; however, in practice user may be distinguished into different classes depending on his or her particular use. For example, a user may be a producer of documents (i.e., an author\/editor\/creator), a consumer (i.e. a reader trying to find particular documents), or both. Each user may have a different set of operations that they are authorized to perform on document . As used herein, the term object refers to any file that contains data and may contain text, graphics, special codes, or a combination of some or all of these. To facilitate object management, the objects generated by client computers , are stored in object storage  and are thus transmitted to server computer  over communications network . Server computer  then determines the proper storage of the objects in object storage .","In addition to the generation of objects, users of client computers , may also desire to share objects with other users, e.g., to collaborate on the object development. In order to retrieve objects generated by other users, users make requests to server computer  for documents stored in object storage . Server computer  then retrieves the requested documents and transmits them back to the requesting user's client computer , by way of communications network .","Server  maintains objects and information necessary to control access to the object in object storage .  illustrates how client  interacts with the server  to access and manipulate an object . When a user of client computer  desires access to an object (e.g., DOC) client components  make a request to server . Server  has a request infrastructure component  that accepts the request and retrieves (, ) the appropriate object  and\/or object information  from object storage . Notably, the object information  comprises state information related to the potential states of the object (e.g., state , state , state , state ), the current state of the object (e.g., shown here as cross- hatched state ), and the possible state transitions (e.g., transition from state  to state ). Some or all of this information  is transferred () in connection with object  by server request infrastructure  back to client components  where the information can be conveyed to give a user appropriate allowed actions on object .","According to an aspect of the invention, the operations that a given client , may perform on object  are dictated by the information  associated with object , in conjunction with the client's security permissions. Thus, for example, in the illustrative example of  wherein the object  is in state , the object may only transition to state  as indicated by the state transition to state  from state  and the lack of any other transitions out of state . Furthermore, this transition to state  may only be allowed for a certain set of clients. By maintaining the information  by server , any modifications to the information , such as the state model associated with object , can be made by way of server  and dynamically delivered to client . In this way, the system is more flexible in that changes made in a central location (e.g. object store ) are replicated to a plurality of clients. Moreover, client  does not need to understand in advance all of the allowed states and state transitions for a given object  (which may differ for different objects and different users) but rather obtains the information as needed for each object.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 3","FIG. 2","FIG. 4","FIG. 4"],"b":["21","23","20","10","20","21","301","20","22","23","303","23","70","305","307"],"sub":["A","A","A "]},{"@attributes":{"id":"p-0030","num":"0029"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Sample State Transitions"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["From State","To State","Operation (Transition) Name","Credential"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["None","Checked-Out","Create","All"]},{"entry":["Checked Out","Checked-In","Check-In","Group A"]},{"entry":["Checked-In","Checked-Out","Check-Out","All"]},{"entry":["Checked-In","Expired","Delete","Group B"]},{"entry":["Expired","Checked-In","Restore","Group B"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"From the set of all possible valid transitions, the presently valid transitions can be determined based on the current state. Thus for example, if DOCis currently in a \u201cChecked-In\u201d state, the possible valid state transitions and thus operations are \u201cCheck-Out\u201d and \u201cDelete.\u201d Hence, this set of states could be returned to the user. However, in accordance with an aspect of the invention, the set of valid operations could be further filtered based on the user's credentials. For example, it may be the case that all users are not permitted to perform a \u201cDelete\u201d operation. Accordingly, the users credentials are examined and compared to the Credential required to perform the operation. So in the present example in order to perform the operation of \u201cDelete,\u201d the user must have a credential available to users in Group B; whereas all users may merely \u201cCheck-Out\u201d DOC().","In accordance with another aspect of the invention, by storing the possible state transitions centrally, the operation (transition) name may be easily converted to a localized name. By merely examining the users language parameter, the operation name may be converted by the server before returning the operation name to the user. This ensures that the server always returned the allowed operations in the language of the client user.","After determining the set of valid operations, the server request infrastructure  returns the set of filtered operations to client components  (). Continuing with the document management example, where DOCis in a \u201cChecked-In\u201d state, in an exemplary embodiment the set of filtered operations returned to client components  may take the form of:\n\n","When client components  receives the set of operations allowed, the operations are presented to the user (). This is the essence of the invention\u2014at this point, the client requires no local logic for determining what operations are allowed.  shows how a \u201cFile\u201d drop-down box would display the available operations. If, for example, the user selected \u201cCheck-Out,\u201d the client components  would then transmit the selection back to server request infrastructure  (). In an exemplary embodiment, the request would take the form of: TNVOKE DOC<operation>Check-Out<\/operation>. Server request infrastructure  would then update the current state of DOC.","Along with the list of operations, the server can optionally send back a template of the HTTP invoke command to the client. The client processing then would simply reduce to:\n\n",{"@attributes":{"id":"p-0036","num":"0042"},"figref":"FIG. 6"},"With reference to , an exemplary system for implementing the invention includes a general purpose computing device in the form of a conventional computer , including a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. The system memory includes read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that helps to transfer information between elements within the computer , such as during start-up, is stored in ROM . The computer  further includes a hard disk drive  for reading from and writing to a hard disk, not shown, a magnetic disk drive  for reading from or writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD ROM or other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the system bus  by a hard disk drive interface , a magnetic disk drive interface , and an optical drive interface , respectively. The drives and their associated computer-readable media provide nonvolatile storage of computer readable instructions, data structures, program modules and other data for the computer . Although the exemplary environment described herein employs a hard disk, a removable magnetic disk  and a removable optical disk , it should be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, Bernoulli cartridges, random access memories (RAMs), read only memories (ROM), and the like, may also be used in the exemplary operating environment.","A number of program modules may be stored on the hard disk, magnetic disk , optical disk , ROM  or RAM , including an operating system , one or more application programs , other program modules , and program data . A user may enter commands and information into the computer  through input devices such as a keyboard  and pointing device . Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a serial port interface  that is coupled to the system bus, but may be connected by other interfaces, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video adapter . In addition to the monitor, computers typically include other peripheral output devices (not shown), such as speakers and printers.","The computer  may operate in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be another computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the local network  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the wide area network , such as the Internet. The modem , which may be internal or external, is connected to the system bus  via the serial port interface . In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","While the invention is susceptible to various modifications and alternative constructions, certain illustrated embodiments have been shown in the drawings and accompanying detailed description. It should be understood, however, that there is no intention to limit the invention to the specific constructions disclosed herein. For example, while the primary example used throughout was described in connection with a document management system, the present invention is by no means limited to such a system, but could be useful in any system wherein textual, graphic, or other information is managed. Indeed, any system which can be modeled as a finite state machine that requires interaction from remote clients to transition from one state to another in that state machine, would benefit from the invention. As such, the invention is intended to cover all modifications, alternative constructions, and equivalents falling within the scope and spirit of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing summary, as well as the following detailed description of the preferred embodiments, is better understood when read in conjunction with the appended drawings. For the purpose of illustrating the invention, there is shown in the drawings exemplary constructions of the invention; however, the invention is not limited to the specific methods and instrumentalities disclosed. In the drawings:",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
