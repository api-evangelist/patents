---
title: Granting access rights to unattended software
abstract: An access site allows a client application to access a server application on behalf of a subscriber who has an account at the client site. A client application registers with the access site and receives a certificate for the client application. A subscriber is directed to the access site upon an indication that she would like to use the features of the client application that integrate with the server application. The subscriber specifies access rights to the access site, and issues a validation token in association with the specified access rights. When the client site needs the server application to process subscriber data, it forwards the validation token to the access site, using the certificate. The access site validates this information, and where appropriate the server application processes the subscriber data and returns the results to the client application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07024689&OS=07024689&RS=07024689
owner: Intuit, Inc.
number: 07024689
owner_city: Mountain View
owner_country: US
publication_date: 20021213
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["1. Field of the Invention","This invention relates generally to software and data access rights, and more particularly to securely granting access rights to unattended software.","2. Description of the Related Art","Various computer applications, which perform some specified function for a user or program, are well known. Applications include those that provide databases, spreadsheets, word processing, and many others. Typically, a document or file made using an application will include some user data. For example, a financial services application allows a user to develop and maintain a database for their various financial activities.","Some conventional applications reside entirely in a desktop computer, and process data found on the same computer and on a network. Others operate in a network environment, and reside on workstations, servers or both, with access to applications being well controlled by a network administrator.","Online (e.g., web based) applications reside on servers that may be variously accessed by users, who may also be referred to as subscribers. These servers may also store subscriber data, or communicate with related servers that store such data. One advantage of online applications is access flexibility. That is, a client computer having conventional web browsing capability can be used to access an online application. This allows businesses to set up applications that various employees can access, without requiring the business to set up elaborate computer networks. For example, a business can establish a database, allowing employees from multiple disconnected offices, from home offices, and\/or from the field to access the database, without requiring the employees to be on the same private network, and without requiring specialized hardware. Any employee accessing a web-enabled device could theoretically access the common database. Also, if there are updates to the configuration of the database, or application upgrades, the business owner does not need to be considered with updating numerous computers according to the upgrade. Thus, online applications have been found to be very desirable.","Some applications are used by other, related applications, to provide a necessary foundation for a functionality that they provide, or for other reasons. This may be referred to in terms of a client-server relationship, wherein a client application is a requestor of some functionality provided by a server application.","Application service providers are companies that host on their own servers various applications and store data for corporate subscribers. The subscribers use a local client application (e.g., a generic browser or specific lightweight client interface) to access the server based applications and data. This existing model is a two party transaction model between the local client and the server application.","However, the two party ASP model can be extended to a three-party transaction. In this model, a third party \u201cclient\u201d application exists separately and independently of the server applications and subscriber data. The subscriber separately subscribes to the client application in order to obtain its functionality. For example, a subscriber may use a server-based accounting application provided by accounting firm, and may store all of its data at the accounting firm's data server. In addition, the subscriber may have a separate relationship with a third party payroll provider, which hosts a payroll application. The subscriber may desire to have the payroll application access the subscriber's data at the accounting data server, thereby acting as a client application to the accounting server. There are several advantages to this architecture. For one, it is modular, and therefore flexible in terms of building and enhancing applications. It also provides an environment in which software developers can be encouraged to create different uses of the application, expanding existing markets and allowing penetration into new markets for the server application. The subscriber is free to choose different applications from different application providers, and yet keep its corporate data or information resident in a limited number of locations.","One continuing need with online applications is subscriber data management. In the two party transaction model, data management is relatively straightforward. The server application is configured to provide access only to authorized subscribers (users) who sign in through names and passwords. Because the service provider's applications are the only ones that can programmatically access the subscriber's data, there is little or no need for application level data security or management, since it is assumed that the service provider's applications are trusted.","Such is not the case in a three party model, where an independent, third party client application is attempting to access a subscriber's data at the service provider. Continuing the above example, first it is necessary for the server based accounting application to validate that the third party payroll application is authorized to access the subscriber's data. Even if the third party payroll application is authorized by a subscriber to communicate with the server based accounting application that controls the subscriber's corporate data, the subscriber might want to control the specific details of the payroll application's access to accounting data, and may further want to control access to such data in different ways for different users. Third, there is the converse problem of the third party application ensuring that its use by the subscriber on the server data is authorized, that is, that the subscriber is in fact a legitimate subscriber of the server application's functionality and data hosting services. These various distinct types of control and management are currently not met by conventional client-server systems.","Thus, while online applications allow great flexibility and other advantages, it would be desirable to allow subscribers improved control over the granting of access rights corresponding to their applications and underlying subscriber data.","The present invention improves on the ability of subscribers to grant access rights, particularly in environments where client applications request server applications to process subscriber data on behalf of subscribers.","In one embodiment, the present invention allows subscribers to grant access rights to a client application in a system where a subscriber uses a client application to access a server application. An access site accommodates the granting of access rights, acting as a neutral broker between the client and server applications.","Initially, application developers correspond with the access site to reserve names and receive corresponding certificates for client applications that they develop. These certificates are subsequently used as part of securely granting access to the server application by the client application. Specifically, the certificate is used to ensure that subsequent communications securely originate from the client application.","A subscriber navigates to the client application (typically residing at a web site referred to as a client site), and requests features of the client application that implement the server application. This request can be variously made. For example, it can be a selection of a server application based feature that is presented at the client site, part of a more formal registration, and the like.","After such a request, the subscriber is taken through steps that allow the subscriber to grant permission to a client application to access the server application. The granted permission can be variously defined. For example, the subscriber may grant permission for a payroll application to access an accounting application. However, the subscriber may not want the payroll application to be able the access certain accounting data. Further, the subscriber may want to require an authorized user to login prior to granting a request to process subscriber data.","Embodiments of the present invention variously ensure that access rights are securely granted, and that subsequent client application requests to process subscriber data through the server application are securely allowed.","When the subscriber requests client application features that integrate with the server application, the client application gives the subscriber a unique confirmation code. Separately, the client application transmits the same confirmation code to the access site. The client application also causes the subscriber to be redirected to the access site with the confirmation code. The access site compares the confirmation codes received from the subscriber and the client application, verifying that they match, and thereby verifying that the subscriber is legitimately seeking to contact the server application based upon the previous exchange with the client application. Preferably, the confirmation code is sent by the client application to the server application using a security mechanism (e.g., SSL) that implements the previously issued certificate. This provides assurance to the server application that the confirmation code has been sent by the client application.","After verifying legitimate contact, the access site provides information explaining the access that the client application is requesting, and then allows the subscriber to specify a set of access rights for the client application.","In one embodiment, this involves the access site redirecting the subscriber to the server application, which then communicates with the subscriber to establish the set of permissions, and associates them to a proxy account. Once these details are established, the server application reports back to the access site, confirming that the proxy account has been established. The access site retains information identifying the existence of the proxy account, but does not need to keep the particular details of the proxy account that are kept by the server application.","After the set of permissions is specified, the access site issues a validation token, which is provided to the client application. The client application can subsequently use the validation token to access the server application on behalf of the subscriber, within the limits defined by the set of permissions.","In one embodiment, the subscriber also has the option of associating login security to the set of permissions. This means that before exchanging data two validation tokens must be presented by the client application to the server application. The first validation token is the one described above. It proves that someone has given permission for the client application to request services from the server application. A second validation token indicates that an authorized user has given permission (e.g., logged in) for a particular data exchange to occur. This can be referred to as a user validation token.","The login security option is preferably presented at the time that a proxy account is being created. When login security is selected the subscriber is allowed to choose which particular users of the server application have the right to authorize the data exchange.","Where applicable, the client application is informed that login security is required when it attempts to exchange data. The client application makes the initial request to the access site and presents the account validation token. If login security is enabled in association with the validation token, a message indicating that user login is required is sent to the client application. The client application then causes the user to be directed to the login screen on the access site, where they are prompted to present personal credentials. If the user is on the list of particular authorized users previously designated by the subscriber, as confirmed by receipt of appropriately identified credentials, they are given the user validation token as proof of their login. The authorized user provides the user validation token to the client application. The client application then presents it to the access site\/server application. At this point the data exchange can take place.","The present invention can be embodied in various forms, including various computer implemented methods, computer program products, computer systems and networks, user interfaces, application programming interfaces, and the like.","In the following description, for purposes of explanation, numerous details are set forth, such as flowcharts and system configurations, in order to provide an understanding of one or more embodiments of the present invention. However, it is and will be apparent to one skilled in the art that these specific details are not required in order to practice the present invention.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 1A","b":["100","100","102","104","106","106","106","106","106","106","112","1","3","102","104","106","106"],"i":["a","b","a","b ","a ","b ","a","b "]},"Similarly, the client site  and access site  include components for communicating with each other and the subscriber and authorized user computers , through the network . The access site  and client site  respectively include server applications and a client application . The server applications , are preferably network-based software applications. With network-based software applications, client computers communicate with application servers to perform the functionality associated with the software, as opposed to conventional client-based applications, wherein data is stored and processed locally on a computer. With network-based applications, subscriber data may be entirely stored on the server on which the application resides, such as the access site  server or one on which a server application separately resides. Alternatively, a subset of the subscriber data may be stored on such a server, with other subscriber data being stored on the subscriber's computer. Still further, redundant storage of subscriber data may entail processing of a version of subscriber data that is periodically sent to another server for back up purposes.","Network-based software applications may also be referred to as online or web-based applications, particularly where the Internet is involved. For ease of description, the server applications may also be referred to as online applications herein. An example of network-based application is Quickbooks\u00ae Online Edition, available from Intuit Inc. of Mountain View, Calif.","The client application  is also an online application. The client application  relates to a server application and thus may also be referred to as a related application. The relationship between the client application  and server application will vary. For example, the client application  may be an explicit \u201cplug in\u201d that enhances the server application but does not have significant independent functionality, or the client application  may be an independent application where data exchange of some kind with the server application enhances the value of both applications. Preferably, an application developer creates and clients the related application . An example of a client application is one built using the Quickbooks\u00ae Software Development Kit (SDK). While only one client application  is shown in , in practice there will be many different client applications  operating to access subscriber data controlled by the access site .","The access site  coordinates the registration of subscribers and application developers. The access site  is shown to logically include the server applications , although they do not necessarily, and most likely do not physically reside on the same server; the access site  need only be able to manage access to the server applications, regardless of where the server applications reside.  is analogous to , with the server applications being shown to reside outside the access site .","Although a single server application can be associated with the access site , multiple server applications are shown to illustrate that the access rights module  functionality can be used to manage access to any number of different applications, and that the access rights functionality provided by the access rights module  may be easily be applied to new applications as they are introduced into the system. Often, although not necessarily, a primary vendor will want to maintain control over the server application(s), the access site, and the development SDKs or platforms used by application developers to create client applications. This is among the reasons that it is desirable for the access site  to ensure that access by a client application  is legitimate and permitted by the subscriber whose data is being accessed.","A client application  accesses a server application on behalf of a subscriber. For a given client application , a subscriber operates the subscriber computer to grant particular access rights to the client application . The subscriber may also require a login security mode, wherein an \u201cauthorized user\u201d must submit login credentials in order for the client application to exercise the access rights. The authorized user may be any person that is registered with the server application for the subscriber, or a set of particular authorized users may be selected, such as through a conventional check off box based interface.","For example, assume server application \u201cA\u201d is an online accounting package. The subscriber may be a small business owner who uses the server application to manage the business' books. The client application  in this example could be an analytical tool that evaluates the business' accounts receivables, or a payroll application that needs to access some, but not all of the subscriber data managed by the accounting application to perform certain payroll functions. The subscriber can grant the client application access the server application according to defined access rights limitations. The access rights can be variously configured, such as by limiting access to a particular server application function, subscriber data, or both. This system allows application developers to create client applications that have new functionality beyond what the server application can do, which may or may not include access to certain types of subscriber data.","As indicated, when a subscriber grants access rights to a client application, the subscriber can also require login security. For example, a small business owner may by the subscriber, operating the subscriber computer , and an accountant may be the authorized user, operating that computer . The system  of  discloses a scenario wherein these computers each independently access the client application  through the network , preferably the Internet. Various configurations, such those involving some employees operating workstations on a business' local area network, some contractors operating computers outside the local area network, and other end users, may also be provided.","The access rights module  provides the functionality that allows subscribers to grant access rights to client applications  that will access server applications  on behalf of a subscriber. The access rights module  is preferably provided as software, but may also comprise hardware and firmware components, or combinations thereof.","The access site , configured to include the access rights module , allows the client application  to access a server application on behalf of a subscriber. Prior to such access by subscribers, developers register the client applications that they create, and receive in return a certificate. Preferably, this registration process is undertaken between the access site  and the developers (using the client site). Each client application  is given a unique certificate. These certificates are later used as part of the process of securely granting access to the server application by the client application , as described further below.","A subscriber navigates to the client site  and provides an indication that they would like to enable the features of the client application that integrate with the server application . This indication may be variously made. For example, the subscriber may be a long time user of the client application , and the client site may notify users of a new feature that integrates with the server application. Alternatively, the client application may have been set up solely as a newly developed application whose existence depends on the server application. The vehicle through which the indication is made may also vary. For example, conventional user interfaces (e.g., an \u201cOK\u201d button, etc.) may simply receive the indication. Alternatively, some formal registration information may be collected by the client application.","Regardless, when the client application receives the request or indication that the subscriber would like to implement the client-server application features, the client site  sends a confirmation code to the access site  and to the subscriber, redirecting them to the access site . The confirmation code can be any format, such as a number or alphanumeric string, and will typically defined according to the desires of the client application developer.","When the subscriber contacts the access site  with the confirmation code, the access site  ensures a match with the confirmation code sent by the client site . The access site compares the confirmation codes received from the subscriber and the client application, verifying that they match, and thereby verifying that the subscriber is legitimately seeking to contact the server application based upon the previous exchange with the client application. As a further measure of security, the communication of the confirmation code from the client site  to the access site  is authenticated as having come from the registered client application using the previously issued certificate. For example, a conventional SSL communication that uses the certificate can be implemented.","The access site  then engages in an exchange with the subscriber wherein information about a specified set of access rights to be given to the client application is collected. Although in many circumstances the client application will be able to unilaterally exercise these access rights once the following procedure is completed, in some circumstances the subscriber may also require a person to log in as a condition of allowing the client application to have the defined access. For example, the subscriber may grant permission for a payroll application to access an accounting application. However, the subscriber may not want the payroll application to be able the access certain accounting data without additional, explicit permission from a particular authorized user of the accounting application. An authorized user can be a single user. Alternatively, it may be a group of selected user, or any user from a group of users registered or otherwise recognizable by the server application. Where this feature is associated to the access rights, a user submits credentials to allow the client application use of the server application according to the access rights.","In any event, after verifying legitimate contact as described above, the access site initially provides information to the subscriber indicating the type of access that the client application is requesting. The access site and server application then operate to allow the subscriber to specify the access rights. The mechanism through which the access rights are specified and managed can be referred to as a proxy account, although such is not required in order to practice the present invention. In one embodiment, this involves the access site redirecting the subscriber to the server application, which then communicates with the subscriber to establish the details of the proxy account, including an identification of particular access rights being granted, and a determination of whether login security is required. Where login security is required, the subscriber may select from among a list of users recognized by the server application (e.g., from previous registration of such users with the server application), or may simply indicate that all recognized users.","The access rights themselves can be variously defined, and will generally be dictated according to the conventional access rights capabilities of the server application. For example, with an online accounting application, there may be three major areas of access rights, such as (1) all accounting data, (2) only accounts receivable, and (3) only accounts payable, from which the subscriber could select. The access rights determination may be limited to selection from these categories, or could be further broken down. For example, a subscriber may specify the access rights to cover the ability to read payroll data, or read, edit, and modify accounts receivable data in the online accounting application example. Once these details are established, the server application reports back to the access site, confirming that the proxy account has been established.","The access site retains information identifying the existence of the proxy account, but does not need to keep the particular details of the proxy account that are kept by the server application. After receiving confirmation of the establishment of the proxy account, the access site issues a validation token, which is provided to the client application. The client application uses the proxy account to access the server application on behalf of the authorized user, within the limits defined therein. The validation token is used to ensure appropriate implementation of the proxy account by the client application, and thus provides protection to the subscriber by ensuring that the client application has authorized access to the subscriber's data.","As indicated, when setting up the proxy account, the authorizing user can indicate that they want to enable \u201clogin security\u201d on the connection between the client and server applications. This means that before exchanging data two validation tokens must be presented by the client application to the server application. The account validation token proves that someone has given permission for the client application to request services from the server application. A second \u201cuser\u201d validation token requires a particular authorized user to login prior to allowing the client application to make a particular data exchange.","The login security option is preferably presented at the time that a proxy account is being created. When login security is selected the subscriber is allowed to choose which particular authorized users (or, \u201call\u201d) of the server application have the right to authorize the data exchange. These particular authorized users will have a mechanism for identifying themselves, preferably in the form of credentials unique to a particular authorized user.","The client application  is informed that login security is required when it attempts to exchange data and login security is enabled. Specifically, the client application makes the initial request to the access site and presents the first validation token, and then an indication that user login is required is sent to the client application . The client application  directs the user to the access site to login, wherein she provides her credentials to confirm that she is an authorized user. If the authorized user is on the list of users previously designated by the subscriber, and appropriate credentials are submitted, the access site issues a second validation token proving login by a qualified user. The second validation token is provided to the client application , preferably from the authorized user, and then presented to the access site\/server application by the client application . At this point data exchange can take place, with the access rights are defined according to the previously arranged proxy account corresponding to the validation token.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIGS. 2A\u2013C","FIG. 2A"],"b":["202","202","204","206"]},"At some point, the subscriber is registered or otherwise recognized in some fashion by the server application. This can be accommodated using any conventional procedures that server applications use to collect information from and register users. This can take place before the subscriber has any contact with the client application, or at any other time up to the point where the features of the client application that invoke the server application are requested by the subscriber. Indeed, the information may be provided by the subscriber to the server application as part of the process of granting access rights to the client application. The actual information collected is specific to whatever the server application requires. For example, it may use a payment model and therefore request credit card and other information to set up the account. Additionally, specific company and related information may also be collected. For example, for the online accounting application, the subscriber may indicate whether they are a sole proprietor, \u201cS\u201d corporation, or other form; whether customers are called customers, clients, donors, patients, etc. Preferably, this account information is collected and maintained by the server application, to free the access site from having to be concerned with such information. However, the access site could perform a registration function as well, if desired.","The client site provides web pages for interfacing with potential subscribers. As described above, a subscriber may navigate to a page pertaining to a client application and indicate  that he would like to use features of the client application that integrate with the server application. Pursuant to such an indication, an approved subscriber verification phase  provides confirmation that a subscriber contacting the server application is a legitimate user of the client application. Particularly, upon receipt of the indication that the subscriber would like to use such features, the client application generates a confirmation code that is sent  to the subscriber. The confirmation code can be any unique piece of information, typically dictated by the client application. For example, the confirmation code can be any number or alphanumeric string. The subscriber is also redirected  to the access site by a redirect command that directs the subscriber to the access site. The redirect may also include information that specifically directs the user to a particular server application, and may also include information that allows the access site to automatically respond once the subscriber is navigated to the access site.","The confirmation code is also separately sent  to the access site. Preferably, the client application uses the previously issued certificate as the basis for an SSL conversion used for the communication of the confirmation code to the access site. This provides an added level of security as the communication is authenticated as having come from the client application, which possesses the certificate. Ideally, all communications between the client application and the access site\/server application can be encrypted as such, to ensure that all such communications have come from the trusted source. One preferred protocol is SSL, using a public key pair signed by another public key for the certificate; however, any protocol or certificate could be used, such as Transport Layer Security or the like.","The access site retains  the confirmation code, such as by storing it in a local database in association with identifying information for the client site and\/or client application, and awaits contact by the subscriber. As indicated, the subscriber had been redirected to the access site. Preferably, the confirmation code is sent  to the access site by the subscriber automatically, in conjunction with the redirect command. Alternatively, the subscriber may be separately asked to submit the confirmation code to the access site. Regardless, possession of a matching confirmation code by the client application and the subscriber, and possession of the certificate by the client application, helps to ensure that the subscriber is communicating with the access site pursuant to arrangements made with a registered client application. It also helps prevent others from navigating to the access site for erroneous or fraudulent account establishment. The access site can also provide another measure of security by examining information about the client site and\/or client application sending the confirmation code. For example, the access site may retain the address of the client site and ensure that the confirmation code is coming from a valid address. Once the confirmation codes have been received, verification  involves a comparison of the code sent by the subscriber to the one sent by the client application.","The access site then arranges a proxy account. Generally, the proxy account is a vehicle through which the client application accesses the server application according to access rights specified by the subscriber. The proxy account is preferably managed in conjunction with the server application. More particularly, the access sites generally initiates the proxy account and manages the existence of the proxy account, and the server application manages details such as particular access rights defined under the proxy account.","The proxy account is arranged  as follows. Since the client application had been previously registered with the access site, the access site is able to send  a tailored message to the subscriber, conveying the type of access being requested of the server application by the client application. Generally, the message will invite the subscriber to log in and grant access rights to the client application. Again, conventional interfaces can be used to request and receive such information. For example, the message may be in the form of a web page having fields for collecting the necessary information. The subscriber completes the necessary information and submits  the information to the access site.","The access site creates  and maintains the proxy account according to authorized users identified by the subscriber. The proxy account will later be usable by the client application to access subscriber data based on behalf of the subscriber, restricted as needed by the associated access rights. The proxy account is identified by an account identifier. That identifier is anything that can identify each proxy account, such as a number, alphanumeric string, code, or the like, and is referred to herein as Account_ID. For example, Account_ID may be the name Company_Name, or may be the name of a person, etc. As indicated, the access site maintains the existence of the account generally. The access site could also maintain the particulars regarding granted access rights, but preferably those are separately managed by the server application. As described, in the latter case the exchange between the access site and the server application to create the proxy account includes redirecting the subscriber to the server application, communicating with the subscriber to establish the details of the proxy account, and reporting back to the access site to confirm that the proxy account has been established. The proxy account can be identified by the Account_ID, with the access site generally managing the existence of the proxy account and screening subsequent access to the server application by the client application, and the server application applying the particulars under the proxy account.","In one alternative, \u201clogin security\u201d can also be associated with a proxy account as described above. Generally, when the login security option is selected the subscriber choose particular users who must login when the client application seeks to access the server application according to the otherwise specified access rights. If login security is enabled, then the server application will later request login credentials, such as a username and password for a particular authorized user, when the client application seeks to access subscriber data through the server application. The login security feature is described further with reference to  below.","Referring to , a validation token is also issued  in association with the proxy account. The validation token can be any unique identifier corresponding to the created proxy account. In one embodiment, the validation token comprises a random code with an appended identifier particular to the created proxy account. There are numerous alternatives for the validation token, including those that are merely the proxy account identifier. The validation token is provided  to the client application, which may later use the validation token in connection with accessing the server application on behalf of the subscriber.","Optionally, a confirmation procedure may also be undertaken among the access site, client application, and subscriber, as shown. There, the validation token is provided  to the subscriber as well, along with a redirect to the client application. The subscriber is thus prompted to send  the validation token to the client application, which then verifies  that the validation token sent by the access site matches the one sent by the subscriber.","The client application retains the validation token and later uses it to access the server application on behalf of the subscriber. The client application is free to make arrangements with the subscriber directly as to how and when such access is to be applied. For example, the subscriber may separately require the client application to have an affirmation such as a user login in order to use the validation token. As with transmission of the confirmation code during the arrangement of the proxy account, the client application can use a security protocol using the client application certificate for communicating the validation token, as well as following communications to access the server application and process subscriber data.",{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 3"},"Processing subscriber data according to this embodiment involves three different security aspects. First, the self-service certification scheme uniquely identifies the client application as having been registered with the access site. A security protocol implementing the certificate allows the access site, server application and client application to securely communicate. The client application also presents the account validation token, which generally governs access to the proxy account corresponding to the validation token. Finally, login security ensures that the request is on behalf of an authorized user.","As indicated in , to access the server application and corresponding subscriber data, the client application initially sends  its certificate to the access site. The access site maintains a correlation of certificates to registered client applications, and recognizes an appropriate certificate. The access site then acknowledges  the certificate, which prompts the client application to send  the account validation token to the access site. The access site receives the validation token and associates it to the proxy account using the information retained during the creation of the proxy account.","As described above, additional login security may have been established in connection with the proxy account. If login security is not required, then the presentation of the certificate and then the account validation token are sufficient indicia to allow access to the server application and subscriber data according to the settings defined by the proxy account. Accordingly, confirmation that access is allowed is communicated  to the client application.","If login security is enabled for the proxy account, then a login security phase  is invoked, to ensure that access by the client application is associated with a request by a particular authorized user. Initially, this involves sending  a code indicating that user login is required to the client application. The client application is configured to recognize this code, and to prompt the particular authorized user to browse  to the login server (preferably the access site, but could equally be the server application if the server application is directly handling the login security aspect of the proxy account), and to then provide  credentials. The communication is in conjunction with the previous presentation of the validation token, which is correlated to the proxy account, which in turn identifies the list of users who may login. The credentials are preferably in the form of a user name and password, although any login credential can be used, including but not limited to a code or key, biometric data, a code that uniquely identifies the authorized user's machine, etc.","The access site receives and verifies appropriate credentials corresponding to the proxy account, and then sends  a user validation token to the authorized user. Like the account validation token, the user validation token can be any kind of unique code, number or the like. The authorized user sends  the user validation token to the client application, which in turn sends  it to the access site. Receipt of the user validation token from the client application indicates to the access site that the client application request is associated with the \u201clogged in\u201d authorized user, and thus prompts an indication  and corresponding approval of the data exchange through the proxy account.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 4","b":["400","400","400","400"]},"The illustrated access rights module  includes a self-service certificate module , an account management module , a proxy account module , a validation token module , and a usage management module .","The self-service certification module  receives developer submissions of application identifiers and provides corresponding certificates. The functionality of the self-service certification module  is described further above (, certificate issuance ). The account management module  includes routines for managing subscriber accounts. It includes conventional routines for providing and managing a subscriber data base, and for requesting information to be provided in the data base for registering subscribers. The account management module  also includes routines for communicating with a client application upon an initial request by a subscriber to set up an account, receive confirmation codes from the client application, and match those confirmation codes to those independently submitted to the access rights module  by subscribers. As described above, server applications will often manage the particulars of subscriber accounts. In those circumstances, the account management module does not need to duplicate all of the account information that the server application handles according to its conventional requirements.","In conjunction with the proxy account module , the account management module  includes routines that allow a subscriber to set up a proxy account, which allows the client application to appropriately request a server application to process subscriber data, as described above. This preferably involves the presentation of interfaces to the subscriber requesting selections that identify an account, and corresponding access rights settings.","The validation token module  communicates with the account management module , and generates account validation tokens corresponding to created proxy accounts, and user validation tokens where access is requested and login security is enabled.","The proxy account module  maintains information corresponding to created proxy accounts. As indicated previously, in some embodiments, an access site will maintain the information that generally identifies the proxy account and allows the access site to confirm that a client application is legitimately attempting to use a proxy account, whereas an application server will manage the specified access rights defined under the proxy account. In that circumstance, some functionality provided by the proxy account module  could alternatively be provided by similar software at the server application.","Finally, the usage management module  generally allows a client application to request subscriber data processing based upon the previously defined accounts and access rights settings. Particularly, the usage management module  may receive a certificate from a client application and then verify that the client application has been registered with the system, such as by querying the certificate module . The usage management module  communicates with client applications to confirm certificate validation, and receives account validation tokens which are correlated to maintained proxy accounts. Particularly, the usage management module  receives a account validation token for a proxy account, and communicates with the other modules to verify the presence of the proxy account and the association of the validation token to the proxy account. The usage management module  then allows the server application to process subscriber data according to the access rights defined by the proxy account, whereupon the server application may return appropriate results to the client application. Where login security is provided, the usage management module  identifies that such is the case through communication with the proxy account module , then prompts the submission of login credentials from an authorized user, typically through commands initially provided to the client application, then recognizes and approves the credentials provided by the authorized user. Where appropriate, the usage management module  then communicates with the validation token module , issues a user validation token to the user, and awaits receipt of the same from the client application as described above, whereupon the access site allowed the server application to process subscriber data according to the request.","Thus, systems, methods and apparatus for managing databases are provided in accordance with the present invention. Although the present invention has been described in considerable detail with reference to certain preferred embodiments thereof, other embodiments are possible. Therefore, the sprit and scope of the appended claims should not be limited to the description of the preferred embodiments contained herein.","The present invention has been described in particular detail with respect to one possible embodiment. Those of skill in the art will appreciate that the invention may be practiced in other embodiments. First, the particular naming of the components, capitalization of terms, the attributes, data structures, or any other programming or structural aspect is not mandatory or significant, and the mechanisms that implement the invention or its features may have different names, formats, or protocols. Further, the system may be implemented via a combination of hardware and software, or entirely in hardware elements. Also, the particular division of functionality between the various system components described herein is merely exemplary, and not mandatory; functions performed by a single system component may instead be performed by multiple components, and functions performed by multiple components may instead performed by a single component.","Some portions of the above description present the feature of the present invention in terms of algorithms and symbolic representations of operations on information. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. These operations, while described functionally or logically, are understood to be implemented by computer programs. Furthermore, it has also proven convenient at times, to refer to these arrangements of operations as modules or code devices, without loss of generality.","It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion, it is appreciated that throughout the description, discussions utilizing terms such as \u201cprocessing\u201d or \u201ccomputing\u201d or \u201ccalculating\u201d or \u201cdetermining\u201d or \u201cdisplaying\u201d or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system memories or registers or other such information storage, transmission or display devices.","Certain aspects of the present invention include process steps and instructions described herein in the form of an algorithm. It should be noted that the process steps and instructions of the present invention could be embodied in software, firmware or hardware, and when embodied in software, could be downloaded to reside on and be operated from different platforms used by real time network operating systems.","The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may comprise a general-purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium, such as, but not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, magneto-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, application specific integrated circuits (ASICs), or any type of media suitable for storing electronic instructions, and each coupled to a computer system bus. Furthermore, the computers referred to in the specification may include a single processor or may be architectures employing multiple processor designs for increased computing capability.","The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general-purpose systems may also be used with programs in accordance with the teachings herein, or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems appears in the description above. In addition, the present invention is not described with reference to any particular programming language. It is appreciated that a variety of programming languages may be used to implement the teachings of the present invention as described herein, and any references to specific languages are provided for disclosure of enablement and best mode of the present invention.","The present invention is well-suited to a wide variety of computer network systems over numerous topologies. Within this field, the configuration and management of large networks comprise storage devices and computers that are communicatively coupled to dissimilar computers and storage devices over a network, such as the Internet.","Finally, it should be noted that the language used in the specification has been principally selected for readability and instructional purposes, and may not have been selected to delineate or circumscribe the inventive subject matter. Accordingly, the disclosure of the present invention is intended to be illustrative, but not limiting, of the scope of the invention, which is set forth in the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["These and other more detailed and specific features of the present invention are more fully disclosed in the following specification, reference being had to the accompanying drawings, in which:",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIGS. 1A\u2013B"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIGS. 2A\u2013C"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
