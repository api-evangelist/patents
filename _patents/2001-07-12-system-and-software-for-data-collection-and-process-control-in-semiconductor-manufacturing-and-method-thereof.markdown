---
title: System and software for data collection and process control in semiconductor manufacturing and method thereof
abstract: In its various embodiments, the method collects data from process and metrology tools in a semiconductor manufacturing environment, generates statistics from that data, detects tool failures, processing errors, and other conditions that can jeopardize product output, and performs high level process control in the form of tool shutdowns, lot holds, and lot releases. One method as disclosed automates the collection and recording of data from process and metrology tools, automates configuration of data collection, and automates process equipment shut downs, all within the existing framework of existing MES systems and engineering data collection systems. Automation of configurations and data collection is conducted by creation of data collection plans, data collection capability specifications, and other versioned documents within a process control and data collection system as disclosed herein. These versioned documents may be generated through a common graphical user interface and presented via an Internet web browser or other network interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06970758&OS=06970758&RS=06970758
owner: Advanced Micro Devices, Inc.
number: 06970758
owner_city: Sunnyvale
owner_country: US
publication_date: 20010712
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CO-PENDING APPLICATIONS","FIELD OF THE DISCLOSURE","BACKGROUND","DETAILED DESCRIPTION OF THE FIGURES"],"p":["This application is related to U.S. patent application Ser. No. 09\/905,226, entitled \u201cSystem and Software for Data Distribution in Semiconductor Manufacturing and Method Thereof,\u201d U.S. patent application Ser. No. 09\/905,213, entitled \u201cSystem and Software for Database Structure in Semiconductor Manufacturing and Method Thereof,\u201d U.S. patent application Ser. No. 09\/904,619, entitled \u201cSystem and Software for Process Control with Fabrication Operator Interface and Method Thereof,\u201d U.S. patent application Ser. No. 09\/905,221, entitled \u201cSystem and Software for Data History Reconstruction in Semiconductor Manufacturing and Method Thereof,\u201d U.S. patent application Ser. No. 09\/904,953, entitled \u201cSystem and Software for Normalization and Denormalization of Data in Semiconductor Manufacturing and Method Thereof,\u201d U.S. patent application Ser. No. 09\/905,241, entitled \u201cProcess Control Interface in Semiconductor Manufacturing and Method Thereof,\u201d U.S. patent application Ser. No. 09\/905,222, entitled \u201cSystem and Software for Statistical Process Control in Semiconductor Manufacturing and Method Thereof,\u201d all filed of even date Jul. 12, 2001.","The present disclosure relates generally to process control, and more particularly to data collection and process control in the semiconductor manufacturing industry.","Current commercially available manufacturing execution system (MES) packages are used throughout the semiconductor manufacturing sector. These systems track each lot and determine where it has been and where the lot needs to go. However, the model of statistical process control (SPC) employed by most commercially available packages is a na\u00efve model with assumptions built into the system that are incorrect, i.e., one parameter is measured, at one place, using only one type of product, only once. For example, most SPC systems are entity- and lot-based, but the real world of the factory is chamber- and wafer-based. From an automation user's point of view, these SPC systems are difficult for programmers to maintain and enhance. Also, at least in part because of the assumptions, these SPC systems require many statistical process control charts (over 14,000 for some fab operations) for effective process monitoring. Maintaining so many charts is costly, hinders change, and can obscure important statistics. In addition, due to the monolithic nature of charting systems used with current semiconductor SPC systems, producing a statistical process control chart for viewing is typically a labor-intensive process.","Individual point solutions offered by various vendors for particular applications do not adequately address the shortcomings of currently available systems, because point solutions do not take into account the many different databases and manufacturing models, with their attendant integration problems. Hence, the use of many independent point solutions may generate communications barriers caused by multiple point solutions not being easily integratable within the larger whole of an MES system.","In its various embodiments, the method, system and software disclosed herein collect data from process and metrology tools in a semiconductor manufacturing environment, generate statistics from that data, detect tool failures, processing errors, and other conditions that can jeopardize product output, and perform high level process control in the form of tool shutdowns, lot holds, and lot releases. In one embodiment, the collection and recording of data from process and metrology tools, the automatic configuration of data collection, and automatic process equipment shut downs are implemented within the existing framework of RS\/1-based SPC systems and engineering data collection systems.","Automation of configurations and data collection is facilitated by creation of data collection plans, data collection capability specifications\u2014each of which may be a versioned document within a process control and data collection system as disclosed herein. By allowing these versioned documents to be generated through a common graphical user interface presented via an Internet web browser or other suitable network interface, configuring a semiconductor manufacturing facility's process control and measurement systems can be accomplished more efficiently than through the use of multiple conventional interfaces.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIGS. 1 through 20"},"In an embodiment of the present disclosure, measurement data is taken in from fabrication process tools and metrology tools, where it may then be characterized as to quality of product resulting from the various manufacturing processes. For example, in its various embodiments, the method collects data from process and metrology tools, generates statistics from that data, detects tool failures, processing errors, and other conditions that can jeopardize product output, and performs high level process control in the form of tool shutdowns, lot holds, and lot releases. One method as disclosed automates the recording of engineering data, automates configuration of data collection, and automates process equipment shut downs, all within the existing framework of existing MES systems, and engineering data collection systems in a semiconductor manufacturing environment. An embodiment supports wafer- and chamber-level tracking, thus reducing the time required to detect tool failures or faulty configurations, as well as making it possible to increase the accurate diagnosis of tool failures or faulty configurations. In another embodiment, the method facilitates control of chamber-to-chamber variations, and enables shutdown of single chambers on cluster tools. Measurement data may be stored in fullest detail, and may be summarized upon extraction from the database rather than prior to storage, as is the case with many current systems. Additionally, engineering data is provided to an engineering data analysis (EDA) database as it is collected.","The method facilitates decision support by allowing real-time monitoring of equipment performance during the various stages of a fabrication cycle by providing a chart client to allow, via graphical user interface, display of up to four charts per screen preview area, in a \u201cweb browser\u201d (i.e., HTTP client program) window, via an Internet interface. In one embodiment, the chart may also be accessible without a web browser. Charts created with the method as disclosed permit users to chart by semiconductor processing tool, metrology tool, or by a chamber within a semiconductor processing tool. By means of the chart client as embodied by the method herein, users may view, modify, and perform \u201cwhat if\u201d analyses on statistical process control (SPC) charts, both from within a fabrication facility, or outside of a fabrication facility, on a PC or Unix workstation. In addition, a \u201chistory reconstruction\u201d feature allows detailed trend analyses, as well as a being a key enabler for performing \u201cwhat-if\u201d analyses.","In one embodiment, the engineering data collection and process control system disclosed herein integrates seamlessly with existing MES, engineering data collection systems, and equipment interfaces (EIs). This integration may be fully appreciated by referring to , which is an overview diagram illustrating the functionality of systems integration in a semiconductor manufacturing environment under an embodiment of the present disclosure. With the embodied process control system , a user  is able to configure engineering data collection (EDC) from process and metrology tools, specify the data that is used for statistical process control (SPC), and define how the SPC data is to be processed and interpreted. In at least one embodiment, all of this is done via an Internet interface, such as web browser . In another embodiment, web browser  may interface with a network other than the Internet. Web browser  sends the EDC\/SPC configuration data to the process control system , which, through various sub-systems to be discussed in greater detail in the figures that follow, ensures that the appropriate action takes place to implement the desired EDC\/SPC configuration in the manufacturing cycle. For example, the manufacturing execution system (MES) begins its function in the fabrication cycle by sending a trigger to the equipment interface (EI) , which manages tool . Tool  may be either a process or a metrology tool used in a semiconductor manufacturing environment. The equipment interface  requests and receives EDC configuration data from process control system , and, in turn, sends the measurement data and other process data that the EI  collects from the tool  to process control system . The tool measurement and other data sent from the EI  to the process control system  is then sent by the process control system  to an OLTP (online transaction processing) database , and an engineering data analysis system  and its online analytical processing (OLAP) database . The measurement data may also be distributed to various internal subscribers, such as an SPC subsystem (not illustrated). In the fabrication cycle, MES , through process control system , triggers the chart client  whenever a course of action involving process control occurs, in which case a relevant chart can be automatically displayed. The embodied process control system , through chart client , will thus automatically display SPC data as it is collected. This real-time data collection and analysis capability allows user  to specify high-level process control actions, such as tool shutdowns and lot holds, at any point in the manufacturing cycle. The area shaded in light grey in  indicates the various systems and subsystems within process control system , whose integration\/interactions with existing MES and EDA systems facilitate this real-time decision support capability.","Referring now to , the modular architecture of the various systems' components according to an embodiment of the present disclosure will be discussed. Each of the respective systems are independent, yet, together function as an integral part of a whole. The dotted lines passing through equipment interface  and transaction processing database  demarcate these integrated but separate systems, or \u201cislands of automation\u201d within the process control system as disclosed herein. Those functions handled by the data collection configuration component  are independent of the engineering data control (EDC) broker component . The EDC broker  is independent of the statistical process control (SPC) component . Thus, the method as embodied by the present disclosure offers the advantages of the self-sufficiency of point solutions, yet is easily integratable within a larger suite of applications and systems, thereby offering greater flexibility.","Referring now to , which shows a simplified Unified Modeling Language (UML) collaboration diagram illustrating the highest-level activities that are performed in the process control system according to at least one embodiment of the present disclosure. Unified Modeling Language (UML) is the industry-standard, general-purpose notational language for specifying, visualizing, constructing, and documenting complex software systems, particularly large object-oriented projects, as well as for business modeling, and other non-software systems. In , some liberties have been taken in the order of processing, and internal components such as managers have been omitted. With UML, conventions are used to describe concepts, flows, and interactions. In a use-case or interaction sense, in UML, a \u201cstick man\u201d figure denotes an actor name or actor class (actor name:Actor class), i.e., the systems or users which interact within the system encompassed by the UML diagram. Hence there are six actor classes shown in FIG. : :AutomationUser , :ToolOwner , :SPCExpert , MES system , :WFT (wafer fabrication technician) , and :EI (equipment interface) .","The flow directional arrows going from each of the actors (-) has a numerical sequence and notation written under the directional arrow. The number indicates the order of the sequence within the system, and incrementing a number decimally indicates the \u201corder\u201d in a flow with multiple steps, thus 4 occurs first, 4.1 second, 4.2 third, 4.3 fourth, 4.3.1 fifth, 4.3.1.1 sixth, and so on. The notation after a number under the directional arrows indicates the event or operation initiated or conducted by the respective actor class, and the rectangular box indicates the package name or object class name upon which the actors \u201cact.\u201d Thus, AutomationUser :\u201ccreate\u201d indicates that AutomationUser  would create the object named ToolCapabilitySpec . The second action (2) is creation of the DataCollectionPlan  by ToolOwner . A third (3) action is creation of SPCPlan  by SPCExpert . Then MES  sends DCIN message (4) to :EI , which gets (4.1) DataCollectionPlan , measures the product (4.2), transmits the data (4.3) to the EDCBroker . EDCBroker  updates (4.3.1) DataHistory , which is stored (4.3.1.1) by Database . Another action taken by EDCBroker  is to update data (4.3.2) to the engineering data analysis interface, :EDALoader , followed by updates (4.3.3) to the SPCProcedure. Then SPCProcedure  gets (4.3.3.1) SPCPlan . Should an out of control condition exist requiring a tool shutdown, SPCProcedure  sends a perform error action (4.3.3.2) to MES . SPCProcedure  also updates (4.3.3.3) the data to the ChartClient . WFT  views the chart and sends a correctError message (5) to Chart Client , which, in turn, sends a perfomCorrectiveAction (6) message to MES .","A representative operation of the semiconductor manufacturing process control system as embodied herein receives measurement data at a statistical process control (SPC) system from an engineering data analysis data broker during a semiconductor manufacturing process; the SPC evaluates the data in accordance with a process control strategy (PCS), and implements appropriate control actions based upon the data evaluation.","An example representing typical operations of the process control system is presented in  (FIGS. A-B), which is a flow diagram of a typical operation of the process control system according to at least one embodiment of the present invention. It should be noted that although the steps in  are described in a sequential order for purposes of illustration, some steps may be performed simultaneously with other steps, or some steps may be performed in a different order than shown in . In step , an automation user creates a tool capability specification, known as a data collection capability specification (DCCS). In at least one embodiment, a DCCS is a versioned document that defines the data collection capabilities of a tool (i.e., contexts, events, and parameters). For any given tool, a data collection capability specification (DCCS) version is created before a data collection plan (DCP) is implemented. In step , a tool or process owner creates a data collection plan (DCP), which, in one embodiment, is a versioned document that defines the parameters that a tool should collect at a particular context. In step , the data collection plan gets the tool capability specification or DCCS. Hence a graphical user interface is used to receive for analysis a first selection indicating a set of statistical process control data associated with a semiconductor process; a second selection indicating what processing is to be performed on the set is received, and a statistical process subsystem processes the statistical process control data in accordance with the processing indicated by the second selection. A data collection plan (DCP) is associated with a DCCS and is attached to at least one MES context. An MES context is the means by which DCPs are selected for engineering data collection. If a DCP is not attached to a context, it will not be used.","In step , the MES system consults the MES system database, and sends a DCIN message (stimulus) to the equipment interface (EI). In step , the equipment interface (EI) gets the data collection plan. In step , the EI performs measurements (i.e., measureProduct), as requested by the data collection plan (DCP). In step , the EI sends the measurement data to the engineering data collection (EDC) broker. In step , the EDC broker updates DataHistory. In step , the EDC broker sends updated DataHistory to the engineering data analysis (EDA) system, e.g., SAPPHIRE. In step  DataHistory subscriber sends new data to the OLTP database (transaction and performance monitoring system database) for storage. In step , the EDC broker triggers the statistical process control (SPC) procedure. In step , SPC procedure gets the process control strategy (PCS) plan and data. The process control strategy was created by a tool or process owner in step . The nature of the system framework in the method as embodied by the present disclosure is such that the measurement data received from fabrication process tools and metrology tools is received as the measurements occur, and statistical process analysis generates statistics from that data online, effectively in real-time. Real-time as used herein implies both that analytical data may be displayed within seconds of its creation during a fabrication cycle, as well as there being a definitive time stamp associated with each data point generated according to an embodiment of the present disclosure. This real-time analysis capability enables early detection of processing errors and other conditions that can jeopardize product output, and does it at the batch, lot, or wafer level.","In addition, an embodiment enables the performance of high-level process controls in the form of tool shutdowns (making a machine unavailable for use), lot holds, and lot releases. This high-level process control capability applies to metrology tools and semiconductor processing tools, and even to the level of an individual chamber within a semiconductor processing tool having multiple chambers, or an individual polish head, for example, in the case of a tool with multiple polish heads. This feature is seen in the latter steps of the flow chart of  (FIGS. A-B), as in step  where, if an error is detected, i.e., an out of control (OOC) condition exists, SPC procedure sends a message to the MES system (performErrorAction). In step , statistical process control (SPC) updates data for the chart client, and the wafer fabrication technician views SPC charts with the chart client, notes the error, and documents the action in step . In step , the wafer fabrication technician documents the corrective action to the SPC procedure. In step , the SPC sends a perform corrective action message to MES system.","Various features and functional capabilities of the method as embodied have been presented in broad terms, hence now discussion will turn to the finer details of the various parts of the arrangement.  () is a block diagram of the major subsystems of the data collection and process control system. The components within the data collection and process control system domain , indicated by the area shaded in lighter grey, includes a chart viewing client subsystem , statistical process control subsystem , the engineering data collection subsystem , an interface  to the engineering data analysis system , and a tap  which intercepts all communications between the equipment interface  and console . Console  serves as the interface between the engineering data collection subsystem  and the equipment interface .","The area shaded in darker grey in  indicates the transaction processing and performance monitoring system areas  which are utilized by the various subsystems in process control system . Transaction and performance monitoring system components may be thought of as an underlying support layer, or \u201cglue\u201d which consolidates and orchestrates the smooth, seamless function of data collection and process control system . The transaction and performance monitoring area  includes the interface  between the MES system  and the SPC subsystem . The graphical user interface (GUI)\/HTTP-based web program interface  allows a more user-friendly graphical presentation than that of the monolithic interfaces of the past for communicating with the other applications within the data collection and process control system domain  and the transaction and performance monitoring system area . Via a common web interface  on console , for example, users can create or edit versioned documents  such as a data collection capability specification (DCCS) or a process control specification (PCS). It should be noted that in at least one embodiment, versioned documents  are not files, and are not stored as binary large objects (BLOBs). Each of the versioned documents  has its own tables in the transaction processing database into which it writes its attributes, which allows configuration data to be accessible to reporting tools. An assortment of other application programming interfaces exist within transaction and processing area , such as process context  which is a rule-matching algorithm used to identify a DCP attached to a context matching the applicable MES context, service management  which groups components together into services for reliability purposes, system management  which controls the configuration and startup\/shutdown of the system, and persistence , which is responsible for storing the attributes of objects into the database. In addition, security  authenticates users and authorizes them to perform particular functions within the system, communication  is the facility that allows the transmission of information from one component to another, often over a network, logging  which records significant events that occur in the system for troubleshooting purposes, and workflow . Workflow  insures that a versioned document that has been submitted for approval is properly routed to obtain the appropriate approvals before changes to the system proposed by the submitted versioned document become effective.","The major subsystems within the process control system shall now be presented, beginning with , a block diagram of the equipment interface communication (tap) subsystem within the data collection and process control system according to an embodiment of the present disclosure. It should be noted that the chosen order of presentation of the various subsystems is not meant to imply that one particular subsystem is more \u201cimportant\u201d than another subsystem. As seen in , tap  may be thought of as a constant-monitoring type of device which intercepts all communications between equipment interface  and transaction and performance monitoring system console . Console  serves as the interface between the engineering data collection (EDC) subsystem  and the equipment interface . Tap  is responsible for getting data out of tools  and into the data collection and process control system (, FIGS. A-B). Tap  queries EDC controller  within EDC subsystem  for a data collection plan (DCP), and then sets up data collection according to the instructions in the DCP. EDC broker  receives the data collected according to the DCP, and sends it to the various subscribers (not illustrated). In one embodiment, once data is collected, it is stored in the entity data model, which is part of a semiconductor fabrication facility's equipment interface baseline (not illustrated). The tap  knows how to convert the entity data model to FIDOSpeak (a simple ASCII language) and feed it to console  over UNIX standard input . The console  transmits the data  to the EDC broker  within the EDC subsystem .","Referring now to , a block diagram of the engineering data collection (EDC) subsystem according to an embodiment of the present disclosure, will be discussed. Engineering data collection (EDC) subsystem of process control system as embodied is responsible for configuring data collection, distributing collected data, and storing collected data, and is supported through underlying transaction and performance monitoring system component . The EDC controller  manages the configuration documents such as the data collection capability specification (DCCS) , standard parameter naming specification (SPNS) , standard collection event specification (SCES) , and data collection plan (DCP)  from within the transaction and processing system versioned document area . Data collection capability specifications  describe what a tool can collect. Standard parameter naming specifications  give a single person\/group control over defining parameter names for consistency, while standard collection event specifications  are like an SPNS, but for collection events rather than parameter names. Data collection plans  describe what a particular tool should collect at a particular context. Other application programming interfaces in support of versioned documents  are workflow , and a web user interface (UI) .","Engineering data collection (EDC) broker  accepts data from equipment interfaces  or tap subsystem , then distributes the data to all subscribers such as Data history , the engineering data analysis (EDA) system interface , and the statistical process control (SPC) subsystem . Engineering data analysis system interface  is responsible for transmitting raw data collection and process control system data to an engineering data analysis system (not illustrated). Interface  allows MES system data collection to be deactivated in favor of the data collection and process control system as disclosed herein. Interface  has a data subscription to the EDC broker , just like Data History  and SPC subsystem . In one embodiment, interface  is not a transaction and performance monitoring system component comparable to the other interfaces disclosed herein. Data history  subscribes to everything and stores it in the transaction and performance monitoring system's online transaction processing (OLTP) database . User input to engineering data collection is accomplished via web interface  by a keyboard data entry client .","When the data collection and process control system disclosed herein is used to configure engineering data collection, data collection capability specification (DCCS) and data collection plan (DCP) versions are created. However, configuring data collection and processing incoming data are two completely separate activities as far as the embodied process control system is concerned. The process control system accepts data from any source, regardless of whether or not that data was configured using a DCCS and DCP. Equipment interfaces and other systems may send data to the process control system at any time, whether a DCCS or DCP exists or not.","In general, in an embodiment of the method as disclosed herein, the DCCS defines the data collection capabilities of a tool and constrains the collection levels (e.g., wafer level, lot level, site level, and the like), the collection events (CEIDs) that a tool generates, and parameters that may be included in a DCP. The DCP defines parameters that the tools collect, and the conditions under which to collect them based upon the DCCS with which it is associated. A DCP is used for engineering data collection as disclosed herein when attached to an MES context that matches the context of an MES process automation management (PAM) action. \u201cPAM\u201d is a proprietary term developed by Consilium to describe their application program interface (API) to equipment interfaces. A PAM action is a message sent through that interface to an equipment interface (EI). Thus, each DCP is to be attached to at least one context, or no equipment interface (EI) will see it.","When a data collection PAM action is initiated in the MES, the EI sends the PAM action context to the process control system as disclosed herein. The process control system determines if there is a DCP attached to a context that matches the PAM action context. If there is, DCCS  associated with the matching DCP is used to convert the DCP to a DCEP (Data Collection Execution Plan), which is essentially the DCP with some fields resolved for the current time and context. The EI uses the DCEP to set up EDC behavior for data sent to the process control system as disclosed herein. If no context matching DCPs are found, engineering data collection does not transpire. Should context matching DCPs exist, the EI, through a DCEP, collects data and sends it to the data collection and process control system for storage in the OLTP database, statistical processing, and the like.","Referring now to , a block diagram of the statistical process control (SPC) subsystem of data collection and process control system  () according to an embodiment of the present disclosure, is presented. The statistical process control (SPC) subsystem, which includes SPC controller , and SPC procedure , is the heart of the data collection and process control system in the various embodiments as disclosed herein. SPC is responsible for performing calculations to generate statistics on collected data, applying rules to the statistics, and executing error actions when those rules are violated, and is supported through underlying transaction and performance monitoring system component . The SPC procedure  is a statistical engine that performs what the process control strategy  describes. A process control strategy (PCS)  is an SPC configuration mechanism that defines the context at which to pull data from the database (i.e., the process to be controlled), the data to be used to calculate the statistical points (what data should be analyzed), how the data is processed and interpreted for SPC, and actions to take based upon the interpreted data (the rules to apply and the actions to be taken when rules are violated). There is one SPC procedure  for each PCS . The PCS  is one of the versioned documents maintained within the transaction and processing system versioned document area . Other application programming interfaces in support of versioned documents  are workflow , and a web user interface (UI) .","The SPC controller  subscribes to the EDC subsystem  (EDC broker), and sends data to the appropriate SPC procedures . In at least one embodiment, the SPC controller  is the outside world's only way to communicate with an SPC procedure . SPC controller  sends data to the chart client subsystem , which allows visualization of statistics generated by SPC procedure  in graphical chart form. User input to create or edit process control strategy  is accomplished via web interface . SPC procedure  is able to communicate with MES  via an interface .","The process control strategy (PCS)  as disclosed herein enables a user to control a semiconductor manufacturing process by performing statistical analysis on the data collected on tools. PCS  is an SPC configuration mechanism that defines one or more of the following: the context at which to pull data from the database (i.e., the process to be controlled); the data to be used to calculate the statistical points; how the data is processed and interpreted for SPC; and the actions to be taken based upon interpretation of the data. PCS  may also define other process control elements and\/or objects as desired. In one embodiment, as part of creating the PCS, the user makes the following specifications: Context Matching Specification, Pipeline Specification, Control Specification, and Symptoms, Causes and Fixes Specification. The Context Matching Specification identifies the context of the process control system data to use for SPC processing. The Pipeline Specification defines the data, at the matching context, to pull from the OLTP database for input to SPC, as well as describing how to process that data. The Control Specification describes how to interpret the processed SPC data, and defines the appropriate actions to take when out of control (0\u00b0 C.) conditions are detected. The Symptoms, Causes and Fixes Specification lists causes and fixes for potential symptoms.","One purpose of PCS  is to enable process engineers to specify how to monitor and control key components of the manufacturing process, such as process tool performance. In an embodiment of the present invention, a tool is controlled by monitoring the data collected before, during, and\/or after specified processes. Information about the material processed on a tool is what links the data from process to process, and provides for logical separation of the data as disclosed herein. In an embodiment of the present disclosure, for each SPC variable that is pulled from the database for input to SPC (e.g., parameter, toolname, tooltype, attribute, and the like), the lot ID, wafer ID, site ID, die ID, product and batch may be automatically included. Generally speaking, there should be one or two PCSs per tool type, with some exceptions resulting in three or four PCSs per tool type. If, for a given process such as metal etch, a parameter is produced on multiple layers for multiple etchers, that parameter can be included in one PCS for all layers and etchers entitled, for example, Metal Etch FICD. When multiple PCSs are required, it is either because the number of parameters monitored at that context for the tool type is too large to reasonably be included in one PCS, or the parameters are collected at different times. For example, stepper parameters include a wide range of overlay parameters, such as translation errors, magnitude errors, and the like, in addition to setup parameters and critical dimension (CD) parameters. In this example, there might be two PCSs: one for overlay parameters, and one for setup and CD parameters.","PCSs are used for processing both lot-based parameters and non-lot based parameters in an embodiment of the present disclosure. Non-lot based parameters are those collected as part of a daily qualification (qual). For a given tool, non-lot based parameters would be input via a single PCS named, for example, DPS Etch Daily Qual. For PCSs that process lot-based parameters, there are typically as many as four parameters that represent all the controls for the tool type. For example, the lot-based parameters that may be used to monitor and control an etcher include mean CD, standard deviation of CD, main etch rate, overetch rate, and punchthrough etch rate. These parameters would be processed as the result of one PCS named, for example, Metal Etch.","The context matching component (not illustrated) of PCS  as embodied herein continuously monitors the OLTP database for data collected at MES contexts that match SPC contexts. Each time a match is found, the data is input to the SPC procedure , which processes the data according to the Pipeline Specification discussed earlier, and then interprets the data and takes actions as defined in the Control Specification.","An overview of the process control system PCS process according to an embodiment of the present disclosure is presented as a flow diagram in FIG. . In the setup phase of the operation, a process engineer creates a process control strategy (PCS) version as in step . The PCS defines what data from the process control system OLTP database goes into the SPC procedure when the SPC procedure is invoked. This assumes that the data has been collected and is in the database. If the desired data has not been collected, as seen in step , then the EDC of the process control system as disclosed herein is used to configure data for collection via a DCCS and DCP, as in step . However, the embodied process control system data collection configuration is not a requirement, and data collection may be configured by other means that do not involve DCCSs and DCPs. Thus, there need not be a direct relationship between the PCS and the DCP or DCCS. After data collection has been accomplished, in the execution phase of the PCS process, the process control system data matching PCS-specified context is processed according to the Pipeline Specification in step . In step , process data is interpreted according to the Control Specification, and the actions defined in the Control Specification are taken. The statistical points generated by the SPC procedure are stored in the OLTP database in step . The user plots and views these statistical points using the chart client in step . Statistical process control charts may be accessible by means of the Internet or another network, and may be presented via a graphical user interface in various formats such as wafer maps, histograms, scatter plots, bar chart, line graphs, and the like.","A flow diagram illustrating use of the PCS process according to an embodiment of the present disclosure is presented in  PCS document for the parameter to measure should exist, therefore determination of whether a PCS document for the process context (e.g., tool type) to be measured exists is conducted in step . If a PCS process does exist, in step , determination is made as to whether the parameter(s) wanted may be added to the existing PCS document. If a suitable PCS document does not exist, then a new PCS version is created and saved, as in step . In step , determination is made as to the suitability of the PCS version. Should the PCS version not be suitable, in step  the necessary editing of the PCS version is done. Should the PCS version be suitable, the user may plot and view statistical points using the chart client, as in step . If editing of a PCS version were required, after editing has been finalized, the edited PCS version would be attached to an approval flow (not illustrated). When the edited PCS version is approved by all of the approvers in the flow, it automatically becomes effective, that is, in use.","Referring now to , a block diagram of the chart client subsystem within the process control system according to an embodiment of the present disclosure, will be discussed. Charts are created in the process control system as embodied herein using the PCS component. Charts may be categorized by semiconductor fabrication module, and may display data in formats consisting of wafer maps, histograms, scatter plots, bar charts, line graphs, or any other suitable format on any processing tool or metrology tool which communicates with data collection and process control system as disclosed herein. The use of chart client  allows visualization of SPC procedure  statistics using a graphical display . Chart client  also allows for printing of charts to a printer , or to a file (not illustrated), should the user so desire. The chart client  talks to SPC controller  to obtain data and record annotations. SPC controller  and SPC procedure  are part of the SPC subsystem . Chart client  can perform certain types of \u201cwhat-if\u201d analyses, and includes a symptoms\/cause\/failure (SCF) graphical troubleshooting client (not illustrated). Chart client  may be utilized at an MES computer terminal after data collection, and is implemented as a stand-alone thin client in at least one embodiment.","The procedure for starting chart client  may depend upon whether it will be run in the fabrication facility or outside the fabrication facility on a PC or Unix workstation. In the fabrication facility, the MES can automatically initiate chart client  whenever a process involving process control occurs. In this instance, the relevant chart is automatically displayed. On a desktop PC or Unix workstation outside the fabrication facility, users may view charts, for example, using a telnet session through the transaction and performance monitoring system's production server using a Unix production account.","An application related to chart client  is a chart navigation feature, which may be used to locate and group charts for display.  shows an example of a chart navigation feature window according to an embodiment of the present disclosure, and designated generally as chart navigation feature window . Chart navigation feature window  displays a list of charts  that pertain to a user-selectable dropdown module menu . In the example shown in , the dropdown module menu  is displaying ETCH. To select one of the listed charts , the user simply positions a mouse or other pointing device over the name of the listed chart to select (highlight) a particular chart name from the listed charts . Similarly, the dropdown module menu  may be changed to display charts that belong to another module by the user making a selection from dropdown module menu . The number of runs to display field  indirectly controls the number of points displayed on the chart. Direct control of the number of runs to display is specified in the PCS. The PCS is not changed from chart navigation feature window , however, a user may temporarily change the value in number of runs field  by editing the displayed value to the desired value. After the user has selected a chart from chart list , a module from dropdown module menu , and a value for the number of runs to display field , a click on the OK button  will display the chart. Actions may be cancelled at any time by clicking the cancel button .","An example of a chart created according to an embodiment of the present disclosure is shown in , and referred to generally as chart window . Chart name  is displayed in the title bar of the chart. In one embodiment, chart name  is a concatenation of information entered in the Version Information of the PCS, as follows: Criticality: Chart Owner: PCS Name: Owner Contact Info: Chart Title. Thus in the example presented in , the name of the chart is C: Jane Doe: Multilayer Normalized PCS by Group: ext 54321, mailto:Jane.Doe@amd.com: Testing PCS for Metal . It will be appreciated that other suitable naming conventions can be used. Each graph , , and  that makes up the chart window  displays a different statistic, and the name of the statistic , , and  plotted is displayed immediately above the corresponding graph, along with the normalization state of the graph in parentheses after the statistic name -. Consequently, in our example, graph  displays the statistic named Mean FICD (Non-Normalized) , while graph  displays the statistic named STDDev FICD (Non-Normalized) , and graph  displays the statistic named Normalized FICD (Normalized) . It should be noted that the terms in parentheses, e.g., (Normalized) are not apart of statistic name -, but rather an annotation added by the chart client for clarity.","When used herein, the term \u201cnormalization\u201d or standardization, represents a mathematical transformation of a distribution's location and spread. For example, if we say X is a random variable whose distribution has a mean, A, and a standard deviation, B, and say Y=(X\u2212A)\/B is a random variable whose distribution has a mean of zero and standard deviation of one. If the distribution of X is \u201cNormal,\u201d then the distribution of Y is called \u201cStandard Normal\u201d However, the transformation works for our purposes whether X is Normally distributed or not. These statistics are specified in the PCS, and for each statistic listed under Statistical\/Plotted Variables in the PCS, there will be a graph. The order (first to last) in which these statistics are listed in the PCS determine their order of presentation (top to bottom) in chart window . On each graph -, the target value  is identified, as are the upper control limit  and lower control limit .","By default, nothing is displayed on the x-axis of a chart client graph, as is seen in graph . However, the PCS owner may choose to display any valid attribute on the x-axis by specifying an attribute defined by the PCS owner in the Pipeline Specification\/Input Variables section of the PCS. For example, in graphs  and , measurement time was specified by the PCS owner, and is thus displayed on the x-axis.","Referring now to , a flow diagram illustrating normalization\/denormalization of data according to an embodiment of the present disclosure will be discussed. An embodiment of the process control and data collection system allows for data analysis and presentation techniques for statistical control data charts in ways that may enable production engineers, process engineers, wafer fabrication technicians, and other technical personnel in a semiconductor fabrication facility to positively impact the final quality of product created. For example, the chart client subsystem may be used to display data that, in addition to the standard \u201cnormalized\u201d SPC chart, is able to be manipulated and mathematically transformed such that the data may be presented in a \u201cdenormalized\u201d fashion as well. This is not to say that one cannot generate the standard Shewhart control charts (where the center line is process mean, and the upper and lower control limits represent the 3-sigma values from the mean) using the method as disclosed, if desired.","Each recipe performed with a semiconductor fabrication tool produces results (data) with a measurable mean and standard deviation. Knowing the mean and standard deviation of each recipe permits the application of this mathematical transformation (referred to as normalizing) to the data from that recipe. Then, because all of the normalized data has the same distribution, it may be conveniently plotted on a single SPC chart whose centerline is zero with control limits at plus and minus 3, commonly referred to as the \u201cnormalized\u201d SPC chart or Shewhart control chart as was discussed above. This offers the advantages of fewer charts, with more rapid accumulation of process history on a single chart as a result. Consequently, a slightly deviant tool whose use is split equally between four recipes can more quickly be detected using a single normalized chart than by using four recipe-specific SPC charts, each of which would only accumulate one fourth of the total evidence of the tool's deviance. There is a minimal time advantage when applying this technique for tools with large problems because only a single point is needed to discover large problems anyway. One problem with this normalizing technique as commonly applied is that the scale of the data changes to something unitless and unfamiliar to an end user, which may make a normalized chart confusing and difficult to interpret. An embodiment of the method as disclosed herein solves this problem by denormalizing the data to the recipe being examined (called the target recipe), and by denormalizing data from the other recipes also into the distribution of the target recipe.","An example of the technique as embodied herein is shown in FIG. . In the first step , we let X be a random variable whose distribution has mean, A, and standard deviation, B. (X physically represents a first set of data associated with a first semiconductor process with a first set of parameters.) In step , we let Z be a random variable whose distribution has mean, C, and standard deviation, D. (Z physically represents a second set of data associated with a second process with a set of parameters different from the first set of parameters.) Then in step , we apply the transform Y=[(X\u2212A)\/B]D+C, , as a random variable whose distribution now has a mean, C, and standard deviation, D.","Hence in step , we have X normalized using its own mean and standard deviation, and then denormalized using the mean and standard deviation of Z in step , in order to have the same distribution as Z, the target recipe. Then in step  the values for Y and Z are plotted together utilizing the chart client as disclosed herein, thus allowing all the advantages of the normalized chart without the loss of reference produced by plain normalization. When practicing this technique as disclosed herein, as new data is plotted on a normalized chart, its recipe is the target recipe. Data from other recipes are transformed (normalized and then denormalized to the target recipe) to have the same distribution as the target recipe. Within the chart client as embodied herein, target recipe points may be highlighted, to present to the viewer an easy way to evaluate the performance of that single recipe over time. Points from other recipes are also plotted in time order, but their appearance is muted. Changing the target recipe is easily accomplished from within the chart client as embodied herein.","With the method as disclosed herein, users may modify the normalization of features displayed with the chart client. In one embodiment, to change the normalization of the data on a graph, the user can simply right click with a mouse or other pointing device, anywhere inside the graph. This will display a normalization menu , as seen in , which is a screen shot of a chart generated according to an embodiment of the present disclosure. Options selectable from normalization menu  include non-normalized , which means that the data displayed will not be normalized, that is, the actual statistical values will be plotted; normalized , which means that the statistical data points will be normalized (standardized) using the mean and standard deviation of the process recipe associated with the data; and normalized to target . When normalized  is selected, the y-axis will correspond to the normalized range of the statistics, which is +\/\u2212 3-sigma. As an example, if the statistics for a process Metal  and Metal  are plotted on the same graph and normalized  is chosen, the Metal  statistics will be normalized using the mean and standard deviation for the Metal  recipe, and the Metal  statistics will be normalized using the mean and standard deviation of the Metal  recipe. The resulting graph will have a target value of zero, and control limits of +\/\u2212 3 sigma.","The option normalized to target  is used to display the statistical data points on a graph whose y-axis corresponds to the natural metric of the statistic, instead of the unitless zero, +\/\u2212 3 sigma of a normalized graph. When normalized to target  is selected, the data is normalized as described above, and then the normalized points are normalized again using the mean and standard deviation of the target recipe selected. Target recipes in this example are Metal , , and Metal , . If item target  is selected instead of a target recipe, then the target recipe will automatically be the recipe associated with the most recently generated point on the graph. As an example, if statistics for Metal  and Metal  are plotted on the same graph, normalized to target  is selected, and the target recipe is Metal , , then the statistical data points would first be normalized using their own respective recipes (same as for normalized  above), then the normalized data points would be normalized again using the mean and standard deviation of the Metal  recipe . These analyses may be applied to processes that were conducted with the same machine or the same type of machines, and with individual data sets or a plurality of data sets collected from a semiconductor process measurement. These measurements may be indicative of a machine's functionality for a particular process or recipe.","Another embodiment of the present disclosure that may facilitate trend analysis is a data history reconstruction feature. The results of a history reconstruction operation are presented via the chart client subsystem by a common, graphical user interface (Internet or other network interface). Trends from past data may be imported and viewed for trend analysis. Analysis charts may be used to, for example, recalculate control limits. A viewer may select to change plotting parameters and change grouping of data for display to investigate a \u201ctheoretical\u201d new limit, tolerance, or other parameter of interest. These changes are not permanent, and are not sent to the database for recording because the changes are for problem analysis\/solving and trialing purposes. Viewers may print these variously changed charts either to a file, or to a printer as a means of preserving the trials, if desired.","An embodiment of the present disclosure allows for offline capability analysis of the semiconductor process measurement data as well. Should one wish to know if a processing machine's function could be changed from an existing specification requirement and increase the capability of the machine as a result, the method embodied herein supports this. For example, a user could select an amount of data, i.e., all of the measurements made by that tool during a period (i.e. week, month, year, machine cycle, or the like), create a histogram using the chart client as disclosed herein, and compare the outcome to see if the new process is capable of living inside the specification requirements.","The main types of changes to the input data that a user may try include, but are not limited to: data filtering based on grouping or control recipe, recalculation of graph limits based upon currently displayed statistics, and changing the grouping or ordering of the currently displayed statistics. Data may be presented graphically as histograms, scatter plots, wafer maps, bar charts, line graphs, or the like. The method involves identifying data to be processed, selecting statistical processing analyses to be carried out on the data, retrieving the identified data from storage, and evaluating the data according to the selected statistical processing analyses. The identified data may include previously recorded semiconductor process measurements as well as original process parameters of the semiconductor process measurements, whether performed by metrology tools or process tools. The framework of the distributed architecture of the data collection and process control system as embodied is such that the original process parameters and the semiconductor process measurements may be stored together, that is, accessible point by point, even if the respective measurements are stored in different tables of a relational database. This identified data may be retrieved via an interface from online transaction processing (OLTP) databases associated with the transaction and performance monitoring system components underlying the process control and data collection system embodied by the present disclosure.","In an embodiment of the disclosure, a user may change groupings and\/or ordering of identified and selected statistics and display a new grouped chart of the change in grouping and\/or ordering using a common graphical user interface. This change of grouping or ordering feature is accomplished with the chart client. This is shown in , which is a screen shot of a chart generated according to an embodiment of the present disclosure. Grouping and ordering of the chart client graphs are specified in the Control Specifications\/Statistics section of the process control strategy (PCS) as disclosed herein. However, a user may temporarily regroup or reorder data statistics from within the chart client for experimentation or trial purposes. To change the grouping or ordering of the data on a graph, the user may select Analysis\u2192Group\/Order Changes tab  from menu bar .","This action will launch a new window, shown in , and referred to as Alter Grouping, Ordering window . For each statistic (i.e., graph) , the user makes the desired selections from the Linked checkboxes , Group By drop down menus , or Order By drop down menus . The linked option is used to facilitate grouping and ordering changes. The user selects the Linked checkbox  to link the statistic to any other statistic whose Linked checkbox  is checked. When the grouping or ordering of any linked statistic is changed, that attribute will be changed for all linked statistics.","For example, if the group by attribute for Mean FICD  is changed to Product (not shown) in the Group By drop down menu  associated with Mean FICD , the group by attribute for StdDev FICD  and Normalized FICD  will automatically be changed to Product because all three statistics are linked by having their respective Linked checkboxes  checked, as illustrated in  user selects from the Group By drop down menus  to change an attribute on which grouping is based. Examples of some choices available from the Group By drop down menus  may include lot, product, recipe, or operation. A user selects from the Order By drop down menus  to change an attribute on which ordering is based. Examples of some choices from Order By drop down menus  may include processing time at some prior context, metrology time, or lot number. The Go button  is selected to regenerate the graphs and display the new grouped and\/or ordered chart. To cancel the operation, the user selects the Cancel button .","In an embodiment of the present disclosure, the chart client has methods for identifying key graph points. For example, a blue box can be displayed around the most recently generated point on a graph, a green circle can be displayed around a point that has been annotated, a triangle along the x-axis can be used to denote a missing statistic, and a yellow box to identify a selected point. For example, when the user selects a point by clicking once on it, a yellow box may be displayed around that point. At the same time, a yellow box is displayed around those points corresponding to the same data that generated the selected point on the other graphs in the chart window. A small red \u201cx\u201d can be used to cover an \u201cout of control\u201d point as defined in the PCS. No action is required by the user for this condition, as a small red \u201cx\u201d implies that the process control system as embodied did not shut down the tool or put the lot on hold. However, a large red \u201cX\u201d used to cover an \u201cout of control\u201d point as defined in the PCS might indicate that the process control system as disclosed herein has either shut down the tool or put the lot on hold, and would indicate that action is required by the user.","A user may select this point by double-clicking on the large red \u201cX\u201d to display information regarding the out of control point in Graph Point Detail Window  as illustrated in  The General Information tab  of Graph Point Detail Window  displays data about the selected point in one of several areas: an attribute and value area , a general area , an out-of-control actions area , and an annotation history area . Users may create an annotation for any point displayed with Graph Point Detail Window  by entering text in area  and clicking the add button . The annotation is added, and the point on the graph  will be circled.","General area  displays various fields such as the value of the selected point, the upper control limit (UCL) of the graph containing the point, the target value for the graph containing the point, the lower control limit (LCL), the PCS Recipe, Run ID number, and out of control (OOC) violation. The attribute and value area  lists the attributes defined in the PCS and their corresponding values. The out-of-control actions area  lists the action(s) that were taken by the process control system as disclosed herein in the \u201cAction\u201d column  for the selected out-of-control point, for example, shut down the tool, hold the lot, or (sent) Email to the person listed in the PCS. If no actions were taken by the process control system, Action column  would be blank. For each action listed in Action column , the \u201cCorrect\u201d column  would contain an active button. After taking the appropriate corrective action, the user selects this button to undo the corresponding action, i.e., to bring the tool back up or release the lot from hold. A message from the MES is displayed in the Message column  if the user action to bring the tool back up or release the lot from hold failed. Otherwise, nothing is displayed in Message column .","Referring now to , the database schema according to an embodiment of the present disclosure, generally referred to as database schema , will be discussed, The schema, or structure of the database, defines the tables, the fields in each table, and the relationships between fields and tables. The term schema is also used to refer to a graphical depiction of the database structure, such as that seen in FIG. . The functionality of various embodiments disclosed herein may be improved by employing the database methodology discussed below in the requirements-analysis phase for data collection and process control. Relational database technology as used in the embodied system as disclosed herein generally consists of a set of interconnected tables, such as the various tables seen in schema . One such table is Run table , which is the top-level table when data is submitted. Each report of data to the data collection and process control system from a client application inserts a row into Run table . A \u201crun\u201d as used here refers to a quantity of data collected on material that was processed together so, for example, a row in the run table may equate to data on three wafers, where each table has a field or an amalgamation of fields that uniquely identifies each record (tuple) in the table. This unique identifier is referred to as a primary key. A primary key is a field that uniquely identifies a record in a table. Primary keys are identified with brackets, i.e, [PK] in schema . An example of a primary key, for example, appears in Run table  at the end of the RUNID row, which indicates that RUNID is a primary key.","In addition, the method as disclosed herein utilizes foreign keys as well. A foreign key represents the value of a primary key for a related table. That is, a foreign key is a field or collection of fields in one table whose values match the values of the primary key of a different table. However, a foreign key may not need to be a primary key as disclosed herein. Foreign keys are also identified with brackets, i.e., [FK] in schema . In an embodiment, a first primary key identifying a semiconductor run is stored in a first table of a relational database, and a second primary key identifying a production unit is stored in a second table of a relational database. Also stored within the second table is a first foreign key to associate the production unit with the semiconductor production run, and information identifying an aggregation level of the production level. A third table stores process measurement information, and a third primary key identifying a production unit reading, as well as the first primary key to associate process measurement information with the semiconductor production run, and the second primary key to associate the process measurement information with the production unit.","An example of the use of primary and foreign keys is seen in RunUnitReadingAttr table , and RunUnitReading table . In RunUnitReadingAttr table , the row READINGID is indicated to be a foreign key [FK], with the corresponding primary key [PK] being located in RunUnitReading table  as READINGID. The RunUnitReading table  contains the measurements, and is for numeric readings only\u2014string parameter readings are stored in the RunUnitReadingAttr table . Another example is seen in RunUnit table , which has a primary key containing the data in both RUNID and UNITID together. In RunUnit table , a row is inserted for each of the units in the run, where a unit is a lot, wafer, site, and the like, depending on the aggregation level. The RunUnitAttr table  contains any additional information about a unit that is the submitter of the data sent with it. The format used in RunUnitAttr table  is a name\/value\/BLOB (binary large objects) tuple (record). RunUnitReadingAttr table  serves the same purpose as RunUnitAttr table , but contains additional information about readings on those units, not the units themselves.","An embodiment of the method comprises storing information about a first semiconductor process measurement in a first table of a relational database, where the first process measurement is associated with a first unit with a first aggregation level, and storing information about a second semiconductor process measurement in the first table, the second process measurement associated with a second unit with a second aggregation level different from the first aggregation level. An aggregation level is the level at which the records are being described and controlled, that is, aggregation is an object made up of other objects. In an embodiment, the stored information from the first table is associated with a second table of the rational database, and information characterizing the first unit is stored in the second table, as is information characterizing the second unit. The information characterizing the first unit includes information specifying the first aggregation level, and the information characterizing the second unit includes information specifying the aggregation level. Further, the second table may be associated with a third table of the relational database, and the third table may store information characterizing a first product run associated with the first unit, and information characterizing a second product run associated with the second unit. As disclosed herein, aggregation levels may be selected from a group which includes batches, lots, and wafers. The information stored about the various process measurements may include various attributes such as die-level measurements, wafer-level measurements, site-level measurements, coordinate-level measurements, calculated results based on a plurality of measurements, or various mixtures thereof. For example, a lot-averaged measurement and a set of particular die measurements on a particular wafer could be considered aggregation levels. The use of aggregation levels and primary and foreign keys in schema  enables the storage of control limits with each data point such that when the data is retrieved, the data \u201cremembers\u201d what the limits were when it was stored. These old limits may be plotted with the chart client subsystem as embodied, along with \u201cnew\u201d limits, should a process change control limits during a process evolution.","As seen in , each of the rows contains a tuple (record) with a descriptive name. The names are generally descriptive of the information within a tuple, and may be defined as follows:\n\n","The terms RUNID, UNITID, CATEGORY, ATTRIBUTENAME, ATTRIBUTE VALUE, AND ATTRIBUTE DATA in RUNUNITATTR table  are analgous to the terms in RUNUNITREADINGATTR table , but describe units instead.","Upon consideration of the teachings set forth herein, it will become apparent that the use of features such as aggregation levels, or the use of UNITID as a single key for the RUNUNITREADING table , whether it be a batch or a lot, provides a way to relate the tables in a minimalist fashion, saving time and storage space.","As shown in , the software system of an embodiment of the present disclosure may utilize a three-tier architecture (browser, web server, database). The highest tier  is the Presentation Layer, the object-oriented remote method invocation (RMI) environment consisting of the menus, buttons, dialog boxes, charts and other items able to be seen by the user. The middle tier  contains the Business Logic\/Application Middleware Layer such as the Java server components that are responsible for distributing objects across servers and networks (i.e., the Internet). The lowest tier , the Storage Layer, is a database containing raw production data that is connected by the Middleware Layer to other servers and the Presentation Layer. Oracle may be used as the database management system in lowest tier . It should be server, application server, database), may also be employed to practice the teachings as disclosed herein.","The various functions and components in the present application may be implemented using a data processor, or a plurality of data processing devices. Such a data processor may be a microprocessor, microcontroller, microcomputer, digital signal processor, state machine, logic circuitry, and\/or any device that manipulates digital information based on operational instruction, or in a predefined manner. Generally, the various functions and systems represented by block diagrams are readily implemented by one of ordinary skill in the art using one or more of the implementation techniques listed herein. When a data processor for issuing instructions is used, the instruction may be stored in memory. Such a memory may be a single memory device or a plurality of memory devices. Such a memory device may be read-only memory device, random access memory device, magnetic tape memory, floppy disk memory, hard drive memory, external tape, and\/or any device that stores digital information. Note that when the data processor implements one or more of its functions via a state machine or logic circuitry, the memory storing the corresponding instructions may be embedded within the circuitry that includes a state machine and\/or logic circuitry, or it may be unnecessary because the function is performed using combinational logic. Such an information handling machine may be a system, or part of a system, such as a computer, a personal digital assistant (PDA), a hand held computing device, a cable set-top box, an Internet capable device, such as a cellular phone, and the like.","One of the implementations of the invention is as sets of computer readable instructions resident in the random access memory of one or more processing systems configured generally as described in . Until required by the processing system, the set of instructions may be stored in another computer readable memory, for example, in a hard disk drive or in a removable memory such as an optical disk for eventual use in a compact disc (CD) drive or digital video disc (DVD) drive or a floppy disk for eventual use in a floppy disk drive. Further, the set of instructions can be stored in the memory of another processing system and transmitted over a local area network or a wide area network, such as the Internet, where the transmitted signal could be a signal propagated through a medium such as an ISDN line, or the signal may be propagated through an air medium and received by a local satellite to be transferred to the processing system. Such a signal may be a composite signal comprising a carrier signal, and contained within the carrier signal is the desired information containing at least one computer program instruction implementing the invention, and may be downloaded as such when desired by the user. One skilled in the art would appreciate that the physical storage and\/or transfer of the sets of instructions physically changes the medium upon which it is stored electrically, magnetically, or chemically so that the medium caries computer readable information. The preceding detailed description is, therefore, not to be taken in a limiting sense, and the scope of the present invention is defined only by the appended claims.","In the preceding detailed description of the figures, reference has been made to the accompanying drawings which form a part thereof, and in which is shown by way of illustration specific embodiments in which the invention may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice the invention, and it is to be understood that other embodiments may be utilized and that logical, mechanical, chemical and electrical changes may be made without departing from the spirit or scope of the invention. To avoid detail not necessary to enable those skilled in the art to practice the invention, the description may omit certain information known to those skilled in the art. Furthermore, many other varied embodiments that incorporate the teachings of the invention may be easily constructed by those skilled in the art. Accordingly, the present invention is not intended to be limited to the specific form set forth herein, but on the contrary, it is intended to cover such alternatives, modifications, and equivalents, as can be reasonably included within the spirit and scope of the invention. The preceding detailed description is, therefore, not to be taken in a limiting sense, and the scope of the present invention is defined only by the appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIGS. 4A and 4B"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIGS. 5A and 5B"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 20"}]},"DETDESC":[{},{}]}
