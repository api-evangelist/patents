---
title: Method of initializing and using a security association for middleware based on physical proximity
abstract: A computer system, method, and computer program product for controlling data communication in an ad-hoc network that connects a wireless device and a nearby wireless device. The method stores an application directory, determines a priority for each entry in the application directory, identifies a selected entry based on the priority, and examines the attributes and security parameters associated with the selected entry. When the security parameters indicate to use a secure connection, the method establishes a security association to support the data communication by querying a database for an existing security association that will satisfy the security parameters. When the query is successful, the method reuses the existing security association. When the query is unsuccessful, the method creates a new security association by establishing a privileged side channel to the nearby wireless device, negotiating the new security association over the privileged side channel, and storing the new security association.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07545941&OS=07545941&RS=07545941
owner: Nokia Corporation
number: 07545941
owner_city: Espoo
owner_country: FI
publication_date: 20040224
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application for letters patent is related to and incorporates by reference U.S. patent application Ser. No. 10\/284,135, titled \u201cDEVICE DETECTION AND SERVICE DISCOVERY SYSTEM AND METHOD FOR A MOBILE AD HOC COMMUNICATIONS NETWORK\u201d, and filed in the United States Patent and Trademark Office on Oct. 31, 2002. This application for letters patent is also related to and incorporates by reference U.S. continuation-in-part patent application Ser. No. 10\/662,407, titled \u201cDEVICE DETECTION AND SERVICE DISCOVERY SYSTEM AND METHOD FOR A MOBILE AD HOC COMMUNICATIONS NETWORK\u201d, and filed in the United States Patent and Trademark Office on Sep. 16, 2003. This application for letters patent is also related to and incorporates by reference U.S. patent application Ser. No. 10\/662,470, titled \u201cMECHANISM FOR IMPROVING CONNECTION CONTROL IN PEER-TO-PEER AD-HOC NETWORKS\u201d, and filed in the United States Patent and Trademark Office on Sep. 16, 2003. This application for letters patent is also related to and incorporates by reference U.S. patent application Ser. No. 10\/662,469, titled \u201cAPPLICATION CONTROL IN PEER-TO-PEER AD-HOC COMMUNICATION NETWORKS\u201d, and filed in the United States Patent and Trademark Office on Sep. 16, 2003. The assignee is the same in this application and the related patent applications.","The present invention relates, in general, to communication between devices connected to a wireless communication network. In particular, the present invention is a system and method for launching and controlling secure and non-secure application programs in wireless devices in a mobile ad-hoc communications network.","Short-range wireless systems have a range of less than one hundred meters, but may connect to the Internet to provide communication over longer distances. Short-range wireless systems include, but are not limited to, a wireless personal area network (PAN) and a wireless local area network (LAN). A wireless PAN uses low-cost, low-power wireless devices that have a typical range of ten meters. An example of a wireless PAN technology is the Bluetooth Standard. The Bluetooth Standard operates in the 2.4 GHz Industrial, Scientific, and Medical (ISM) band and provides a peak air-link speed of one Mbps and a power consumption low enough for use in personal, portable electronics such as a personal digital assistance or mobile phone. A introduction to Bluetooth applications is in 1, Syngress Publishing, Inc., 2002. Another example of a wireless PAN technology is a standard for transmitting data via infrared light waves developed by the Infrared Data Association (IrDA), a group of device manufacturers. IrDA ports enable computers, such as a laptop, or devices, such as a printer, to transfer data from one device to another without any cables. IrDA ports support roughly the same transmission rates as traditional parallel ports and the only restrictions on their use is that the two devices must be proximately located (i.e., within a few feet of each other) and have a clear line of sight. A wireless LAN is more costly than a wireless PAN, but has a longer range. An example of a wireless LAN technology is the IEEE 802.11 Wireless LAN Standard and the HIPERLAN Standard. The HIPERLAN Standard operates in the 5 GHz Unlicensed-National Information Infrastructure (U-NII) band and provides a peak air-link speed between ten and one hundred Mbps.","An ad-hoc network is a short-range wireless system comprising an arbitrary collection of wireless devices that are physically close enough to exchange information. Construction of an ad-hoc network is quick with wireless devices joining and leaving the network as they enter and leave the proximity of the remaining wireless devices. An ad-hoc network also may include one or more access points, that is, stationary; wireless devices operating as a stand-alone server or as gateway connections to other networks.","In the future, the Bluetooth Standard will likely support the interconnection of multiple piconets to form a multi-hop ad-hoc network, or scatternet. In a scatternet, a connecting device forwards traffic between different piconets. The connecting device may serve as a master device in one piconet, but as a slave device or a master device in another piconet. Thus, the connecting devices join the piconets that comprise a scatternet by adapting the timing and hop sequence to the respective piconet and possibly changing the roles that they serve from a master device to a slave device.","A Bluetooth device includes, but is not limited to, a mobile telephone, personal or laptop computer, radio-frequency identification tag, and personal electronic device such as a personal digital assistant (PDA), pager, or portable-computing device. Each Bluetooth device includes application and operating system programs designed to find other Bluetooth devices as they enter and leave the communication range of the network. The requesting Bluetooth device in a client role and the responding Bluetooth device in a server role establish a proximity link between the two devices. The requesting and responding Bluetooth device use the proximity link and a service discovery protocol to discover the services offered by the other Bluetooth device and how to connect to those services.","A public key infrastructure (PKI) is a system of digital certificates, certificate authorities (CAs), and other registration authorities that verify and authenticate the validity of each party involved in an Internet transaction. A digital certificate is an attachment to an electronic message typically to verify that a user sending a message is who they claim to be, and to provide the receiver with the means to encode a reply. An individual wishing to send an encrypted message applies for a digital certificate from a CA. The CA issues a signed digital certificate containing the applicant's public key and a variety of other identification data. The CA makes its own public key readily available through print publicity or perhaps on the Internet. The recipient of an encrypted message uses the CA's public key to verify the digital certificate attached to the message, verify that it was issued by the CA, and obtain the sender's public key and identification information held within the certificate. With this information, the recipient can send an encrypted reply. The most widely used standard for digital certificates is X.509.","Cryptography is the art of protecting information by transforming (i.e., encrypting) the information into an unreadable format, called cipher text. Only someone who possesses a secret key can decipher (i.e., decrypt) the cipher text into plain text. Symmetric-key systems and public-key systems are broad classifications of cryptography systems. A symmetric-key system (e.g., the Data Encryption Standard (DES)) is an encryption system in which the sender and receiver of a message share a single, common key that is used to encrypt and decrypt the message. A public-key system (e.g., Pretty Good Privacy (PGP)) uses two keys, a public key known to everyone and a private or secret key known only to the recipient of the message. When John wants to send a secure message to Jane, he uses Jane's public key to encrypt the message. Jane then uses her private key to decrypt the message. Symmetric-key systems are simpler and faster than public-key systems, but their main drawback is that the two parties must somehow exchange the key in a secure way. To avoid this drawback, public-key systems distribute the public key in a non-secure way and never transmit the private key.","The problem of secure communication and authentication in ad-hoc wireless networks has been addressed in a paper titled -by Balfanz et al. The authors present a solution that provides secure authentication using almost any established public-key-based key exchange protocol, as well as inexpensive hash-based alternatives. The solution allows devices to exchange a limited amount of public information over a privileged side channel, and then allows the devices to complete an authenticated key exchange protocol over the wireless link. The solution does not require a PKI, is secure against passive attacks on the privileged side channel and all attacks on the wireless link, and directly captures the user's intention to communicate with a particular previously unknown device that is within their physical proximity.","For wireless devices that communicate in a peer-to-peer ad-hoc network, prior art middleware facilitates inter-application communication by hiding peer-discovery, network formation, application and service discovery, as well as automatic application launching, behind an easy-to-use coherent application programming interface (API). However, since no trusted, accessible, third party based solution is available, establishing secure communication and authentication is difficult for the prior art middleware.","Thus, there is a need for a system and method for providing secure communication between selected applications in wireless ad-hoc network devices that rely upon middleware to facilitate inter-application communication. The system and method will provide the means to implement a security API for application-level access to other security services based on the generated peer-to-peer security associations. The system and method do not require a highly available server or PKI and improve establishment of security by relying on a user to enter a password. The present invention addresses this need.","A computer system, method, and computer program product for controlling data communication in an ad-hoc network that connects a wireless device and a nearby wireless device. The method stores an application directory, determines a priority for each entry in the application directory, identifies a selected entry based on the priority, and examines the attributes and security parameters associated with the selected entry. When the security parameters indicate to use a secure connection, the method establishes a security association to support the data communication by querying a database for an existing security association that will satisfy the security parameters. When the query is successful, the method reuses the existing security association. When the query is unsuccessful, the method creates a new security association by establishing a privileged side channel to the nearby wireless device, negotiating the new security association over the privileged side channel, and storing the new security association.","The attributes include a device identifier, a role, and control parameters such as an application state and at least one user-defined application setting. The security parameters include an information security objective (e.g., maintaining confidentiality, ensuring integrity, authenticating a party, and protecting against replay or reuse), a cryptography method for attaining the information security objective (e.g., a signature verification service, and an encryption algorithm), and a level of security. In one embodiment, a bit-string includes the security parameters, a value of the bit-string representing each of the security parameters.","In one embodiment, to reconnect to a secure connection the method stores a security association between the wireless device and the nearby wireless device when the nearby wireless device enters the ad-hoc network for a first encounter. The method stores a copy of the security association so that when the first encounter terminates, the method can remove the security association and retain the copy. When the nearby wireless device enters the ad-hoc network for a second encounter, the method establishes a secure connection to the nearby device based on the copy of the security association. In another embodiment, the method establishes the secure connection by searching a connection log to locate the copy of the security association. In another embodiment, storage of the connection log is on a long-term storage device. In another embodiment, a user operates a graphical user interface to locate the copy of the security association.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":["FIG. 1","FIG. 1"],"b":["100","110","120","110","120","110","120","120","110","120"]},"Each device in the mobile ad-hoc communications network will either assume the role of a terminal device or a server device. A terminal device is a consumer of services that a single user operates. A terminal device includes devices such as a mobile phone or PDA. A server is typically a stationary device and only produces services. A server device creates a hotspot around them for using their services. \u201cHotspot\u201d refers to the radio coverage area provided by the server device for detecting devices and discovering services offered by the applications hosted in the server. If the server device is not stationary, one of the terminal devices in the network will assume the role of application directory server and perform device detection and service discovery functions for the remaining terminal devices in the network. The disclosed invention introduces two roles among such terminal devices, application directory servers and terminals, where application directory servers serve terminals in device detection and service discovery. If stationary servers with hotspots exist, servers typically act as application directory servers. However, device detection and service discovery is possible without such a stationary server because one of the terminals will assume the application directory server duties.","The disclosed invention assigns an identifier to each application placed under control. In one embodiment, the identifier is a non-unique identifier that abstractly identifies the application. In another embodiment, the identifier specifies a function that the application performs. In another embodiment, the identifier specifies a communication protocol that the application uses to communicate. Thus, the identifier may indicate that several occurrences of an application each occurrence authored in a different computer language, or targeted to run on a different hardware platform or fulfill a different application role may be considered to be the same because they can interoperate and fulfill the same function. However, in yet another embodiment, the identifier is a unique identifier that identifies the application.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 2A","FIG. 1"],"b":["110","110","200","201","202","203","204","210","204","120","110","120"]},"CPU  performs the methods of the disclosed invention by executing the sequences of operational instructions that comprise each computer program resident in, or operative on, memory . Memory  includes operating system software , application programs , and middleware software . Operating system software  controls keypad , display , RF adapter , and the management of memory . Application programs  control the interactions between a user and server  including a proximity security initialization program. Middleware software  includes an application program interface (API) , application directory , security association database , and connection log . API  assists an application program running on server  to find and communicate with a counterpart application running on terminal . Application directory  tracks, for each application that is resident in each device in piconet , a reference to the device storing the application, an identifier for the application, the role that the application performs, and the security parameters that define the required policy configuration attributes and security services. In one embodiment, the reference to the device storing the application is the MAC address of the device. Security association database  stores all recent, pair-wise and group associations established by the proximity security initialization program. Connection log  stores recent connections to server , such as general packet radio service (GPRS), Bluetooth, or wireless local area network (WLAN) connection. In one embodiment, middleware software  integrates the storage of any combination of application directory , security association database , and connection log .",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 2B","FIG. 1"],"b":["120","120","250","251","252","253","254","260","254","110","120","110","120"]},"CPU  performs the methods of the disclosed invention by executing the sequences of operational instructions that comprise each computer program resident in, or operative on, memory . Memory  includes operating system software , application programs , and middleware software . Operating system software  controls keypad , display , RF adapter , and the management of memory . Application programs  control the interactions between a user and terminal  including a proximity security initialization program. Middleware software  includes an application program interface (API) , application directory , security association database , and connection log . API  assists an application program running on server  to find and communicate with a counterpart application running on terminal . Application directory  tracks, for each application that is resident in each device in piconet , a reference to the device storing the application, an identifier for the application, the role that the application performs, and the security parameters that define the required policy configuration attributes and security services. In one embodiment, the reference to the device storing the application is the MAC address of the device. Security association database  stores all recent, pair-wise and group associations established by the proximity security initialization program. Connection log  stores recent connections to terminal , such as general packet radio service (GPRS), Bluetooth, or wireless local area network (WLAN) connection. In one embodiment, middleware software  integrates the storage of any combination of application directory , security association database , and connection log .","In one embodiment, the configuration of memory  and memory  is identical. In another embodiment, the configuration of memory  and memory  only includes the software necessary to perform the essential tasks of server  and terminal , respectively. For example, if terminal  needs to receive a general inquiry access code, but does not need to send a general inquiry access code message, only the software that receives this message will reside in memory .","In the disclosed invention, the distributed application directory stored in the middleware software is a database that makes it possible for a device to know something of the requirements and wishes of peer devices to which it connects. The database also contains information of local applications and their requirements. The information includes security parameters, as well as priority information, indicating importance of the application set by the user. The distributed application directory, or database, stores these security parameters and the middleware software enforces these security parameters. In one embodiment, these security parameters are stored as a bit-string where the bits allow the user to enable application-level access control for each entry in the application. Thus, the user may set the security parameters to indicate that a specific application requires that a specific security association is present before communicating with a complementary application running on another device.","As shown in  and , the security parameters are a bit-string in which the first four bits identify a communication security type, the next two bits identify a required security API service, and the last two bits identify a level of security. The communication security type identifies the information security objective sought. Information security objectives include keeping information private or confidential, ensuring the integrity of the information, authenticating the identity of the parties to the communication, protecting against replay or reuse of the information, and the like. The specified security API service identifies cryptography methods for required application by obtaining the information security objective. The cryptography method includes signature services, encryption algorithms, and the like. The level of security determines the algorithm as well as the way information is collected. For example, higher-level security may require the use of certain location-limited channels when the security context is established. Other parameters that may be affected by the level of security are the validity period of the established security context or the validity of third-party information. For example, in low-level security formation group keys may well be used for channel protection in a way where pair-wise security establishment may not be needed between every possible pair in the group.","Middleware software  and  stores in security association database  or  all recent, pair-wise and group security associations established by a proximity security initialization program. However, middleware software  and  only establishes the security associations between devices, not applications. Middleware software  and  is also responsible for purging records based on validity period settings and use order (e.g., when the database fills up, purging the oldest and least used associations). For example, if device D and peer P are each running application X, middleware software  or  sends a query to security association database  or  for an existing and valid security association between D and P. If security association A exists and satisfies the security parameters associated with X, security association A is used and no other security association between D and P is needed.","According to one embodiment, a security association includes fields for identifying the peer device and security parameters. The fields for identifying the peer device may specify the local device identity as seen by the peer device (i.e., external) or may specify the identity of the peer device as seen by the local device (i.e., internal). The security parameters, in addition to the security parameters shown in  and , include a cryptographic digest (e.g., a thumbprint of a certificate), a public key pair, secret keys of a peer device, and a possible lifetime of key material.","Middleware software  and  may also prioritize both secure and non-secure applications. To minimize application congestion on the mobile terminal, the prioritization is concerned with runnable, automatically launching applications in the local network. The. related application titled \u201cApplication Control in Peer-to-Peer Ad-Hoc Communication Networks\u201d describes a system and method for launching and controlling non-secure application programs resident in wireless devices in a spontaneous and instant (ad-hoc) communications network. One aspect of that system and method chooses the highest priority application and automatically launches the application if the application is \u201crunnable\u201d and the appropriate user-defined flags are set. The system and method disclosed herein addresses the task of prioritizing secure and non-secure, runnable applications that can be automatically launched. Thus, the system and method disclosed herein minimizes \u201capplication congestion\u201d on a mobile terminal that includes secure and non-secure applications.","Middleware software  and  facilitates inter-application communication by hiding peer discovery, network formation, application and service discovery as well as automatic application launching. When two mobile devices meet, the devices exchange (i.e., distribute) application directory data that describes the applications and peer devices on the network. Using the application directory data, the mobile devices can launch and control application programs resident in wireless devices in a mobile ad-hoc communications network. However, communication in a secure manner requires the integration of the application directory and proximity security initialization software. For each application and terminal in the application directory, the user may set a requirement to use a secure channel, as well as additional information (e.g., the user may set a requirement that the application requires a digital signature facility from a cryptography API). Before launching an application that requires a secure channel, two proximate mobile devices first determine whether an existing security association will support the secure channel communication. If a security association already exists, the matching applications will launch and utilize the security association. If a security association does not exist, both devices will launch proximity security initialization software to use a location-limited (i.e., proximity) side channel, such as an infrared data association (IrDA) port, to authenticate the devices and negotiate a security association. When the negotiation is complete, the matching applications launch and utilize the negotiated security association.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 3A","FIG. 3B","FIG. 3A"],"b":["302","304","306","308","310","312","314","310","314"]},"If the processing exhausts the list of applications (step ), the process returns to waiting for a connection request (step ). If the processing selects an application (step ) and if the selected application does not require a security association (step ), the processing of the selected application continues from step  as shown in . If the selected application requires a security association (step ) and if security association database  or  includes a security context for the selected application (step ), the processing of the selected application continues from step  as shown in . If security association database  or  does not include a security context for the selected application (step ) and if all runnable applications have not executed (step ), the process defers the priority of the selected application (step ) and continues from step  as shown in . If security association database  or  does not include a security context for the selected application (step ) and if all runnable applications have executed (step ), the process negotiates a security association for the deferred secure applications (step ) and continues from step  as shown in .","In another embodiment, rather than defer the priority of the selected application until all runnable applications have executed (step ), the process launches the proximity security initialization software on an as needed basis to establish a secure. connection for the selected application. In yet another embodiment, the mobile device selects whether to defer the priority or launch the proximity security initialization software based on the computing performance required by the user of the mobile device.","The process in  begins with examining the attributes associated with the selected application. If the selected application is running in device A (step ) and running in device B (step ), the process notifies device A and device B of the connection (step  and step ) and selects the next application from the list (step ). If the selected application is running in device A (step ), is not running in device B (step ), and is startable in device B (step ), device B starts the selected application (step ) and the process continues from step  as shown in . If the selected application is running in device A (step ), is not running in device B (step ), is not startable in device B (step ), and is missing in device B (step ), then if device B will accept the selected application (step ), device A transfers the selected application to device B (step ) and the process continues from step  as shown in . If the selected application is not running in device A (step ), but is startable in device A (step ), the process starts the selected application in device A (step ) and continues from step  as shown in . If the selected application is running in device A (step ), is not running in device B (step ), is not startable in device B (step ), and is not missing from device B (step ), the process continues from step  as shown in . If the selected application is not running in device A (step ) and is not startable in device A (step ), the process continues from step  as shown in .","To negotiate the security association, middleware software  or  launches proximity security initialization software. The proximity security initialization software enables two devices, such as server  and terminal , that have no prior security context to authenticate each other based on some kind of user-initiated physical authentication and in a resulting communication protocol generate a security association. There mutual authentication protocols include each user entering a common password into their device, using a location-limited channel as described in Balfanz, visual or short has mutual verification by the users, and pair-wise biometric identification (i.e., entering biometric data in the peer device that the local device authenticates).","If a security association between two peer devices does not exist, middleware software  or  for the first peer device sends a request to establish a security association between the first and the second peer device. The proximity security initialization software resident in the first device negotiates the security association, including peer identification data, over a location-limited channel. Once negotiation of the security association is complete, the proximity security initialization software offers the location-limited channel for use to middleware software  or  and the application that requires the security association.","If the security association between the two peer devices exists, before an application that requires security can launch, the proximity security initialization software enforces the security policy set in application directory  or . The proximity security initialization software retrieves the correct security association from middleware  or , and configures the necessary security protocols (e.g., Bluetooth pairing, or Transport Layer Security\/Internet Protocol Security). The application that requires security launches after establishment of the security services. However, if the security policy for the application requests ;a security application program interface (API) the proximity; security initialization software also configures the required cryptographic services. In another embodiment, when critical security levels are in use, the security associations stored in middleware  or  may be protected and require user interaction (e.g., entering a password, or providing biometric data).","In another embodiment, the definitions of the security associations are application specific. This approach requires the proximity security initialization software to negotiate a specific security association for each pair-wise application that needs security according to the associated security policy. Also, the proximity security initialization software and the communication infrastructure provide support for multiplexing several security contexts over the communications channel based on the associations in use.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 3C","FIG. 3B","FIG. 3A"],"b":["240","290","320","220","270","245","295","350","352","354","356","358","360","328","360","322"]},"Connection log  and , and security association database  and , store in a similar manner initialization parameters that describe a secure application connection. These initialization parameters include fields for identifying the device, and fields for security parameters. The fields for identifying the device include, for example, the local device identity as seen by the peer device, and the peer device identity as seen by the local device. The fields for security parameters include, for example, Cryptographic Digest such as a thumbprint of a certificate, public key of the peer device, secret keys of the peer device, and the possible lifetime of the key material. However, in contrast, connection log  and  is longer-term storage than security association database  and . For example, security association database  and  may only store the initialization parameters for the duration of the application connection and release the storage of those parameters when the user exits the application. Since connection log  and  retains a copy of those initialization parameters for a longer period of time, the peer device can leave the ad-hoc network and upon returning to the network immediately start the application using the initialization parameters. Thus, the returning peer device need not re-establish a location-limited channel to touch the local device and begin secure communications.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 4","FIG. 4","FIG. 2B","FIGS. 2B and 4","FIG. 2A"],"b":["120","110"]},"As shown in , window  resides in display  of terminal . Window  includes the elements comprising the graphical user interface. Bus  is a communication medium that connects keypad , display , CPU , RF adapter , and memory .  shows display  and memory  as separate components. In another embodiment, CPU  stores window  is a display or video memory associated with display . However, in yet another embodiment, CPU  stores window  in a protected portion of memory .","Window  shown in  includes title bar , data header , display list , scroll bar , and index . Title bar  identifies the title of window  as \u201cConnection Log\u201d. Data header  identifies the title for the columns comprising each entry in display list . Display list  includes one entry for each entry in connection log . If display list  is an empty list, there is no selected entry. If display list  is not an empty list, the graphical user interface will always consider one entry to be a selected entry and will display the selected entry in a format that differs visually from the display of the non-selected entries.  depicts the selected entry shown in reverse video as the entry in which \u201cDevice Name\u201d is \u201cCarol's Phone\u201d. Scroll bar  is a navigational element that provides an indication of the spatial location of the selected entry in display list . Scroll bar  includes an up arrow, a down arrow, a scroll region, and a scroll box in the scroll region. If the selected entry is the first entry in display list , the location of the scroll box is at the top-most portion of the scroll region. If the selected entry is the last entry in display list , the location of the scroll box is at the bottom-most portion of the scroll region. Otherwise, the location of the scroll box within the scroll region is proportional to the quotient of the index of the selected entry in display list  and the index of the last entry in display list , where the index of the first entry in display list  is one and the index of the last entry in display list  is equal to the number of entries in display list . Index  is another navigational element that provides an indication of the numerical location of the selected entry in display list . Index  includes two numbers separated by a slash. The number to the left of the slash is the index associated with the selected entry. The number to the right of the slash is the index associated with the last entry in display list  (i.e., the number of entries in display list ).","Referring again to , CPU  executes the appropriate instructions to cause window  to appear in display  of terminal . CPU  sends a request to middleware software  via bus  for data from connection log . CPU  executes the appropriate instructions to store the data received in response to the request in display list . A user of terminal  may browse display list  shown in display . The user may also view detailed data for each entry in display list . The detailed data includes a name for the device (e.g., \u201cCarol's Phone), a timestamp associated with the connection (e.g., Oct. 3, 2003, 20 hours, and 42 seconds), an indication of the presence of security parameters, and a channel type for the connection (e.g., RFID). The user may also operate an input device such as keypad  to change the entry in display list  that is the selected entry, and to choose to reconnect to the secure application program associated with the selected entry. In another embodiment, the user may operate keypad  to display additional detailed data associated with the selected entry.","Although the disclosed embodiments describe a fully functioning system and method for launching and controlling secure and non-secure application programs in wireless devices in a mobile ad-hoc communications network, the reader should understand that other equivalent embodiments exist. Since numerous modifications and variations will occur to those who review this disclosure, the system and method for launching and controlling secure and non-secure application programs resident in wireless devices in a mobile ad-hoc communications network is not limited to the exact construction and operation illustrated and disclosed. Furthermore, the disclosed invention may be distributed in the form of a computer readable medium of instructions including recordable media such as a removable disc, a hard disk drive, random access memory, flash memory, and read-only memory, as well as transmission media such as a digital or analog communication link. Accordingly, this disclosure intends all suitable modifications and equivalents to fall within the scope of the claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying figures best illustrate the details of the system and method for providing secure communication between selected applications in wireless ad-hoc network devices that rely upon middleware to facilitate inter-application communication. Like reference numbers and designations in these figures refer to like elements.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 2A","FIG. 1"],"b":"110"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":["FIG. 2B","FIG. 1"],"b":"120"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 3A","FIG. 3B"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3C"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
