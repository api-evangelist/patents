---
title: Streaming video authentication
abstract: One or more devices transmit, to a user device, an application for secure mobile streaming, and receive, from the user device, a registration request for the application. The registration request includes a user ID and a unique device identifier (UDID) for the user device. The one or more devices initiate a validation procedure for the user ID or UDID. When the user ID or UDID is validated, the one or more devices generate a device-token for the user device. The device-token includes a hash value based on information in the registration request and an expiration date for the device-token. The one or more devices send the device-token to the user device via a private network. The device-token is required to permit the user device to receive a secure content stream via a public network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09098678&OS=09098678&RS=09098678
owner: VERIZON PATENT AND LICENSING INC.
number: 09098678
owner_city: Basking Ridge
owner_country: US
publication_date: 20110915
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["Streaming of certain live video content, such as company quarterly broadcast, often has company proprietary information and, therefore, may be restricted to viewing only through a company's private network (e.g., an intranet) within a particular facility or through a virtual private network (VPN) over Internet connections. In some cases, VPN access may not be a solution for people on the go, since the company may not have a VPN client running on some mobile smart phones or tablet devices. Subsequently, viewing company live broadcasts is a challenge for people on the go.","The following detailed description refers to the accompanying drawings. The same reference numbers in different drawings may identify the same or similar elements.","Systems and\/or methods described herein may enable users of mobile devices to consume private information (e.g., private streaming video) on a public network via reliable and secure applications. Users may register for and download a mobile application for their mobile device(s) using a private network connection. The mobile application may later be used to access private video content over a public network after executing a validation process.","In one implementation, the systems and\/or methods may transmit, to a user device, an application for secure mobile streaming, and may receive, from the user device, a registration request for the application. The registration request may include a user ID and\/or a unique device identifier (UDID) for the user device. The systems and\/or methods may initiate a validation procedure for the user ID and\/or UDID. When the user ID and\/or UDID is validated, the systems and\/or methods may generate a device-token for the user device. The device-token may include a hash value based on information in the registration request and an expiration date for the device-token. The systems and\/or methods may send the device-token to the user device via a private network. The device-token can be required later to permit the user device to receive a secure content stream via a public network.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","110","120","130","140","150","160","170","180","190","100","110","120","130","140","150","160","170","180","190","100"]},"User device  may include a personal communications system (PCS) terminal (e.g., a smartphone that may combine a cellular radiotelephone with data processing and data communications capabilities), a personal digital assistant (PDA) (e.g., that can include a radiotelephone, a pager, Internet\/intranet access, etc.), a tablet computer, a radiotelephone, a personal computer, a laptop, a gaming console, a set-top box, an Internet television, or other types of computation or communication devices. In one implementation, user device  may include any device that is capable of accessing and storing a mobile application (e.g., provided by application server ) that enables a user of user device  to consume live streaming video content. In one implementation, each user device  may store a unique device identifier (UDID) or a call function to retrieve a UDID.","Backend server  may include one or more server devices, or other types of computation or communication devices, to provide provisioning information for users and\/or devices associated with private network . In one implementation, backend server  may include user profiles, employment information, and\/or subscription information that can be used to validate a user that requests access to the mobile application. For example, backend server  may include a single sign-on database that provides access to a user's email address, mobile number, and\/or mailing address. As another example, backend server  may include customer billing information. Backend server  may communicate, for example, with application server  via secure network channels.","Application server  may include one or more server devices, or other types of computation or communication devices, to provide mobile application downloads and conduct user registrations. In one implementation, application server  may validate users based on security information from backend server . For example, application server  may prompt a user to provide private information that matches information stored in backend server . As described further herein, application server  may also generate a device-token for user devices  and a separate user personal identification number (PIN) for validated users. Application server  may publish the device-token and the user PIN to device server  for authentication during live broadcasting operations.","In another implementation, application server  may also define the configuration protocols for the live broadcasting operations, such as how many users can register in one region and how many users can connect to one mobile tower to avoid a traffic jam, etc. Additionally, application server  may store, in a database, the locations of serving WiFi nodes and user device  locations for WiFi offloading from wireless 3G\/4G networks.","Device server  may include one or more server devices, or other types of computation or communication devices, to authenticate user devices  and provide a streaming URL (e.g., for live broadcasting content) to authenticated devices. Authentication may be based on the device-token and user PIN generated by application server  during registration of user device . Device server  may withhold sending the streaming URL to user devices  that fail authentication. In one implementation, device server  may also communicate with application server  to implement the configuration protocols for the live broadcasting operations and to locate available WiFi\/MiFi networks to permit offloading traffic from wireless 3G\/4G networks.","Streaming server  may include a server device, such as a computer device, and\/or a network device, such as a router, that provides streaming data packets to user device  (e.g., via public network ). In one implementation, after user device  is authenticated, streaming server  may securely stream video content (e.g., via the streaming URL) directly to user device . Streaming server  may receive a request for streaming content from user device  and may continue to provide streaming content to user device  until the particular requested content is received or user device  terminates a connection with streaming server . In one implementation, the streaming URL may be session-based, such that each URL can be used only once for one user device for security purpose.","Transcoding device  may include one or more server devices and\/or network devices that transcode (or convert) video content to a format that user device  may utilize (e.g., playback). For example, transcoding device  may convert an audio, video, or graphic file from one format to another (e.g., from one bit rate to another bit rate, from one resolution to another, from one standard to another, from one file size to another, etc.","Live content source  may include one or more devices to broadcast a live streaming feed. The streaming feed may be, for example, analog or digital format.","Private network  may include a one or more private IP networks that use a private IP address space. Private network may include a local area network (LAN), an intranet, a private wide area network (WAN), etc. In one implementation, private network  may implement one or more Virtual Private Networks (VPNs) for providing communication between, for example, between application server  and user devices . Private network  may be protected\/separated from other networks, such as public network , by a firewall. While user device , backend server , and application server  are shown within private network  in , in other implementations, transcoding device  and live content source  may also be included within private network .","Public network  may include a WAN, an intranet, a telephone network (e.g., the Public Switched Telephone Network), or a combination of networks. Public network  may include, for example, an untrusted network, such as the Internet. Public network  may further include transport and\/or network devices such as routers, switches, and\/or firewalls.","In implementations described herein, user device  may connect to application server  via private network  to register user device  and request a user PIN. Once user device  is registered, application server  may provide a mobile application and unique device-token (or session cookie) to store in user device . The device-token may have a limited lifetime. The user PIN may be provided via a separate communication method (e.g., via a user's email account). When user device  is not connected to private network , user device  may use the provided mobile application and public network  to access device server . Device server  may use the device-token and user PIN to authenticate user device , and may provide a URL to allow user device  to access protected content.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2","b":["200","110","110","200","200","210","220","230","240","250","260","200","200"]},"Bus  may include a path that permits communication among the components of client computing module . Processing unit  may include any type of processor or microprocessor (or groups of processors or microprocessors) that interprets and executes instructions. In other embodiments, processing unit  may include an application-specific integrated circuit (ASIC), a field-programmable gate array (FPGA), or the like.","Input device  may include a device that permits a user to input information into client computing module , such as a keyboard, a mouse, a pen, a, a remote control, a touch-screen display, etc. Output device  may include a device that outputs information to the user, such as a display, a speaker, etc. Output device  may also include a vibrator to alert a user.","Input device  and output device  may allow the user to activate a particular service or application, such as a visual voicemail application and\/or service. Input device  and output device  may allow the user to receive and view a menu of options and select from the menu options. The menu may allow the user to select various functions or services associated with applications executed by client computing module .","Communication interface  may enable client computing module  to communicate with other devices and\/or systems. Communication interface  may include a transmitter that may convert baseband signals to radio frequency (RF) signals and\/or a receiver that may convert RF signals to baseband signals. Alternatively, communication interface  may include a transceiver to perform functions of both a transmitter and a receiver. Communication interface  may be coupled to an antenna for transmission and reception of the RF signals. Communications interface  may include a network interface card, e.g., Ethernet card, for wired communications or a wireless network interface (e.g., a WiFi) card for wireless communications. Communication interface  may also include, for example, a universal serial bus (USB) port for communications over a cable, a Bluetooth\u2122 wireless interface for communicating with Bluetooth devices, a near-field communication (NFC) interface, etc. Communication interface  may implement a wireless communication protocol, e.g., LTE, GSM, CDMA, WCDMA, GPRS, EDGE, etc. Communications interface  may also receive, transmit and\/or process digital or analog audio inputs\/outputs and\/or digital or analog video inputs\/outputs.","Memory  may include a random access memory (RAM) or another type of dynamic storage device that may store information and instructions, e.g., an application, for execution by processing logic ; a read-only memory (ROM) device or another type of static storage device that may store static information and instructions for use by processing unit ; and\/or some other type of magnetic or optical recording medium and its corresponding drive, e.g., a hard disk drive (HDD), for storing information and\/or instructions.","Consistent with implementations described herein, memory  may include a mobile application , a session cookie , and identifiers . Mobile application  may obtain and store registration\/authentication information that may allow a user to obtain, receive, and consume streaming video content. In some instances, mobile application  may cause user device  to automatically retrieve unique identifiers for user device  and to automatically request authentication. Session cookie  may store tokens (e.g., key-tokens) that may be required to access secure streaming content. Identifiers  may include application identifiers (e.g., device-tokens), device identifiers and\/or user identifiers that may be required to authenticate user device  and\/or users of user device .","As described herein, client computing module  may perform certain operations in response to processing unit  executing software instructions contained in a computer-readable medium, such as memory . A computer-readable medium may include a non-transitory memory device. A memory device may include space within a single physical memory device or spread across multiple physical memory devices. The software instructions may be read into memory  from another computer-readable medium or from another device via communication interface . The software instructions contained in memory  may cause processing unit  to perform processes described herein. Alternatively, hardwired circuitry may be used in place of or in combination with software instructions to implement processes described herein. Thus, implementations described herein are not limited to any specific combination of hardware circuitry and software.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 3","b":["300","120","160","120","160","300","300","310","320","330","340","300","300"]},"Bus  may include a path that permits communication among the components of module . Processing unit  may include any type of processor or microprocessor (or groups of processors or microprocessors) that interprets and executes instructions. In other embodiments, processing unit  may include an ASIC, an FPGA, or the like.","Communication interface  may enable module  to communicate with other devices and\/or systems. For example, communication interface  may include mechanisms similar to those described above for communication interface  for communicating with other devices, such as other devices of network .","Memory  may include a RAM or another type of dynamic storage device that may store information and instructions, e.g., an application  and application data , for execution by processing unit ; a ROM device or another type of static storage device that may store static information and instructions for use by processing unit ; and\/or some other type of magnetic or optical recording medium and its corresponding drive, e.g., a HDD, for storing information and\/or instructions.","In the case of application server , for example, application  may include an application to register mobile applications for secure mobile streaming and\/or generate device-tokens. Application data  may include tables and\/or data corresponding to items from application , such as user device and\/or user identifiers, available WiFi locations, a number of allowed connections for particular streaming content, etc.","In the case of device server , for example, application  may include an application to authenticate registered user devices . As such, in the case of device server , application data  may also include user device and\/or user identifiers, links to content streams, etc.","Module  may perform certain operations, as described in detail below. Module  may perform these operations in response to processing unit  executing software instructions contained in a computer-readable medium, such as memory . The software instructions may be read into memory  from another computer-readable medium or from another device via communication interface . The software instructions contained in memory  may cause processing unit  to perform processes that are described below.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 4","FIG. 4","FIG. 4","FIGS. 1-3"],"b":["400","100","400","110","120","130","110","120","130"]},"Communications described in  may take place in a secure environment, such as private network . For example, user device  may connect to a WiFi network in a company's office or to a WiFi connection in a private home network. In another implementation, user device  may connect to application server  via a VPN connection.","As shown in , user device  may send an application request  to application server  to download a mobile application that will manage secure provisioning and mobile access to streaming video content. Application server  may respond to request  by downloading or otherwise delivering a mobile application  to user device . In one implementation, mobile application  may be downloaded to user device  from a URL that is only accessible from a company intranet. User device  may install mobile application , which may initiate a registration process.","To start the registration process, user device  may send to application server  a provisioning request  that includes a UDID and a user ID. The UDID may be obtained, for example, through an original equipment manufacturer (OEM) API function call. The user ID may be a unique character string, such as an email address, MDN, or another authentic credential. The user ID may be input by a user (e.g., as prompted by the mobile application) and\/or may be saved in memory (e.g., memory ) of user device .","Application server  may receive provisioning request  and may, in response, send an authentication request  to backend server . Authentication request  may validate the user ID (e.g., including, optionally, a user password) to make sure the user is entitled to access the secure mobile streaming service. If the user is not authorized to access the service, backend server  may not authenticate the user and application server  may deny (not shown) the provisioning request . Assuming the user is authorized to access the service, backend server  may provide an approval  to application server .","Based on approval , application server  may generate a device-token  using, for example, a hash algorithm. The hash value for device-token  may include the UDID, the user ID, secret data, and an expiration time . The UDID and the user ID may be the values included by user device  in provisioning request . The secret data and expiration time  may be added from the server side (e.g., application server ). The secret data may be information known only to application server . The secret data may be, for example, a random number or a predefined constant parameter for server communication efficiency that only application server  may understand, such as a type of service being embedded into the parameters. Expiration time  may be a date and time or a time period after which the device-token is set to expire. Expiration time  may be a value configured by, for example, a network administrator based on remote network access and travel tendencies of users. In one implementation, expiration time  may be configured differently for each mobile application . In one implementation, application server  may store device-token  locally (e.g., in memory ) and forward device-token  and expiration time  to user device . In another implementation, application server  may store the hash algorithm and expiration date , but not the actual device-token .","User device  (e.g., running the mobile application) may save device-token  and expiration time  in local memory (e.g., memory ) for future use, as indicated by reference number . Also in response to approval , application server  may store locally (e.g., in memory ) a separate user operating PIN  and send PIN  to the user of user device  through a reliable channel, such as an email account associated with the user. Operating PIN  may be required for future remote access to the secure mobile streaming service.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 5","FIG. 5","FIG. 5","FIGS. 1-4"],"b":["500","100","500","110","140","150","110","140","150"]},"Communications described in  may take place in a public network environment, such as public network . For example, user device  (e.g., running the mobile application ) may connect to device server  via a public Internet connection. User device  may provide a login request  to device server . Login request  may include, for example, device-token , the UDID and user ID (e.g., from provisioning request ), and expiration time  that had been previously stored (e.g., in memory ) by user device . The mobile application  may also request a user to enter operating PIN  and pass operating PIN  to device server  as part of the login process.","Device server  may receive login request  and may communicate with application server  (not shown) to validate device-token  and operating PIN , as indicated by reference number . In one implementation, application server  may apply the same hash algorithm used to issue device-token  during the registration process (). Application server  may apply the UDID, user ID, and expiration time  to the locally stored secret data to re-generate the hash value for device-token . Application server  may compare the re-generated hash value to the hash value received from user device . Since application server  may use a one-way hash algorithm and since it would be mathematically complex to reverse engineer the input parameters, any difference between the hash value received from user device  and the re-generated hash value would be indicative of an attempted hacking Application server  may also validate operating PIN  by comparing against the originally-stored value. If either the device-token  derived from login request  or the operating PIN do not match previously stored values, login request  will fail. In another implementation, application server  may share PIN , the hash algorithm, and the secret data with device server  so that device server  can regenerate the hash value to validate received device-token  without communicating to application server  during normal operations.","Assuming device server \/application server  validate device-token  and operating PIN , device server  may return a content URL  (e.g., for particular streaming content requested by the user) and a key-token  to user device . Key-token  may include, for example, a unique alpha-numeric character string or hash value that includes a combination of user identification and secret data. Device server  may set key-token  for one-time use for a particular content stream. Once key-token  is used by user device  to start a streaming session, key-token  may be expired to prevent additional uses. In one implementation, content URL  and key-token  may be delivered via a secure channel (e.g., a Hypertext Transfer Protocol Secure (HTTPS) connection).","User device  may receive content URL  and key-token  from device server . User device  may use content URL  and key-token  to request streaming content from streaming server , as indicated by reference number . In response to request , streaming server  may validate key-token . For example, streaming server  may contact device server  to validate key-token , as indicated by reference number . Assuming the key-token of request  matches the key-token stored by device server , device server  may provide key-token validation . Alternatively, streaming server  may run the same hash algorithm used by device server  to generate key-token  if the secret used for generating key-token  is made available to streaming server .","Once key-token  is validated, streaming server  may begin streaming session  to provide the requested content stream to user device . Streaming session  (e.g., between streaming server  and mobile device ) and subsequent session  management may be handled by a known streaming protocol. In one implementation, HTTP Live Streaming (HLS) may be used to encrypt streaming data and encryption keys may be delivered through a secure channel (e.g., HTTPS) before each streaming session  starts. Streaming server  may also ensure that key-token  can be used only once, and that any further attempt to use the same key-token will fail.","User device  may receive content via streaming session  and may present (e.g., play) the streaming content to the user, as indicated by reference number . After stream session  has been initiated, device server  may continue monitoring the stream by making sure key-token  is used by only one streaming session. Device server  may also monitor login attempts and disable user accounts if a login attempt has a particular number (e.g., 3, 5, 10, etc.) of failed login attempts.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 6","FIG. 4","FIG. 6","FIG. 4"],"b":["400","420","110","110","130","460","462","460","462","460","110","460","420","400"]},"Communications described in  may take place in a secure environment, such as private network . Thus, device-token  may not be distributed on the Internet and may only be saved to user devices  through reliable network channels. When mobile application  recognizes device-token  is expired, or when another server (e.g., device server ) indicates device-token  is invalid, user device  may initiate re-authentication procedures within private network . User device  may send to application server  a re-provisioning request  that includes the user device UDID and the user ID.","Application server  may receive re-provisioning request  and may, in response, send an authentication request  to backend server . Similar to authentication request , authentication request  may validate the user ID to make sure the user is entitled to access the secure mobile streaming service. If the user is not authorized to access the service, backend server  may not authenticate the user and application server  may deny (not shown) re-provisioning request . Assuming the user is authorized to access the service, backend server  may provide an approval  to application server .","Based on approval , application server  may generate a new device-token  using, for example, a hash algorithm. The hash value for device-token  may be generated using the same hash algorithm described above with respect to device-token . Thus, in one implementation, new device-token  may include the UDID, the user ID, secret data, and an expiration time . Expiration time  may be a particular date and time or a time period for when device-token  is set to expire. In one implementation, application server  may store new device-token  locally (e.g., in memory ) and may forward new device-token  and expiration time  to user device . In another implementation, application server  may store the hash algorithm and expiration date, but not new device-token .","User device  (e.g., running the mobile application) may save new device-token  and expiration time  in local memory (e.g., memory ), as indicated by reference number . User device  (e.g., mobile application ) may later use new device-token  and operating PIN  to conduct remote authentication procedures for accessing streaming content.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 7","b":["700","110","700","110"]},"As shown in , process  may include downloading a mobile application via a secure local network (block ), requesting device authentication via the secure local network (block ), and receiving and storing a device-token (block ). For example, as described above in connection with , user device  may install mobile application , which may initiate a registration process. User device  may send to application server  a provisioning request  that includes a UDID and a user ID. Application server  generate device-token  (e.g., based on the UDID, user ID, and other information) and forward device-token  to user device . User device  (e.g., running the mobile application) may save device-token  and expiration time  in local memory (e.g., memory ) for future use, as indicated by reference number .","Process  may include performing a mobile application login via a public network using the device-token and a user PIN (block ). For example, as described above in connection with , user device  may provide a login request  to device server . Login request  may include, for example, device-token , the UDID and user ID (e.g., from provisioning request ), and expiration time  that had been previously stored (e.g., in memory ) by user device . The mobile application  may also pass operating PIN  to device server  as part of the login process.","Process  may also include receiving a content link and key-token for particular content (block ), requesting content using the content link and key-token (block ), and receiving and\/or presenting a content stream for the particular content (block ). For example, as described above in connection with , assuming device server \/application server  validate device-token  and operating PIN , user device  may receive content URL  and key-token  from device server . User device  may use content URL  and key-token  to request streaming content from streaming server , as indicated by reference number . Once key-token  is validated, streaming server  may begin streaming session  to provide the requested content stream to user device . User device  may receive content via streaming session  and may present (e.g., play) the streaming content to the user, as indicated by reference number .",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 8","b":["800","130","140","800","130","140"]},"As shown in , process  may include providing a mobile application via a secure network (block ). For example, in implementations described above in connection with , user device  may send to application server  an application request  to download a mobile application . Application server  may receive request  and respond by downloading a mobile application  to user device . Mobile application  may be used by user device  to manage secure provisioning and mobile access to streaming video content.","Process  may further include receiving a UDID and user ID (block ), providing a user device with a device-token of limited duration (block ), and providing a user PIN via a separate communication (block ). For example, in implementations described above in connection with , application server  may receive provisioning request  that includes a UDID and user ID. In response, application server  may send an authentication request  to backend server . Assuming the user is authorized to access the secure steaming service, application server  may generate device-token  using, for example, a hash algorithm. The hash value for device-token  may include the UDID, the user ID, secret data, and expiration time . Expiration time  may be a date and time or a time period for when the device-token is set to expire. Also, application server  may send PIN  to the user of user device  through a reliable channel, such as an email account associated with the user.","Process  may include receiving a login request including the device token (block ), and validating the login request (block ). For example, in implementations described above in connection with , device server  may receive login request  from user device  and may communicate with application server  to validate device-token  and operating PIN .","Process  may also include providing a URL and key-token for particular streaming content (block ), validating the key-token (block ), and monitoring access to a content stream associated with the URL (block ). For example, in implementations described above in connection with , assuming a valid login request, device server  may return a content URL  (e.g., for particular streaming content requested by the user) and a key-token  to user device . Content URL  and key-token  may be used by user device  to request a streaming session from streaming server . Streaming server  may contact device server  to validate key-token . Alternatively, streaming server  may run the same hash algorithm used by device server  to generate key-token  if the secret used for generating key-token  is made available to streaming server . After stream session  has been initiated, device server  may continue monitoring the stream by making sure key-token  is used by only one streaming session. Device server  may also monitor login attempts and disable user accounts if a login attempt has a particular number (e.g., 3, 5, 10, etc.) of failed login attempts.","Systems and\/or methods described herein may allow user devices to obtain secure streaming video. User devices may download an application for secure mobile streaming using a private network. The application may be registered within the private network to receive a device-token and user PIN. The user device\/application may later use the device-token and user PIN to authenticate the user device\/user and gain access to streaming content via a public network.","In the preceding specification, various preferred embodiments have been described with reference to the accompanying drawings. It will, however, be evident that various modifications and changes may be made thereto, and additional embodiments may be implemented, without departing from the broader scope of the invention as set forth in the claims that follow. The specification and drawings are accordingly to be regarded in an illustrative rather than restrictive sense. For example, while series of blocks have been described with respect to , the order of the blocks may be modified in other implementations. Further, non-dependent blocks may be performed in parallel.","It will be apparent that different aspects of the description provided above may be implemented in many different forms of software, firmware, and hardware in the implementations illustrated in the figures. The actual software code or specialized control hardware used to implement these aspects is not limiting of the invention. Thus, the operation and behavior of these aspects were described without reference to the specific software code\u2014it being understood that software and control hardware can be designed to implement these aspects based on the description herein.","Further, certain portions of the invention may be implemented as a \u201ccomponent\u201d or \u201csystem\u201d that performs one or more functions. These components\/systems may include hardware, such as a processor, an ASIC, or a FPGA, or a combination of hardware and software.","Even though particular combinations of features are recited in the claims and\/or disclosed in the specification, these combinations are not intended to limit the disclosure of the invention. In fact, many of these features may be combined in ways not specifically recited in the claims and\/or disclosed in the specification. Although each dependent claim listed below may directly depend on only one other claim, the disclosure of the invention includes each dependent claim in combination with every other claim in the claim set.","No element, act, or instruction used in the present application should be construed as critical or essential to the invention unless explicitly described as such. Also, as used herein, the article \u201ca\u201d and \u201cone of\u201d is intended to include one or more items. Further, the phrase \u201cbased on\u201d is intended to mean \u201cbased, at least in part, on\u201d unless explicitly stated otherwise."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0003","num":"0002"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIG. 4","FIG. 1"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0008","num":"0007"},"figref":["FIG. 6","FIG. 4"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
