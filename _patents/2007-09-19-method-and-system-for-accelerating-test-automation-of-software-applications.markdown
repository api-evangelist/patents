---
title: Method and system for accelerating test automation of software applications
abstract: Disclosed is a method and system for capturing a user action on a user interface and fetching user interface elements in the user interface into a first list and operations of the user interface elements into a second list. A test case for the user action is created in an automation accelerator by selecting a user interface element from the first list and an operation of the user interface element from the second list. An automation accelerator script of the test case is created by the automation accelerator.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08001468&OS=08001468&RS=08001468
owner: SAP AG
number: 08001468
owner_city: Walldorf
owner_country: DE
publication_date: 20070919
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The invention generally relates to the field of testing software applications and more specifically to a way of accelerating a test automation process.","The process of testing software applications is typically a manual process. A user writes a test case in human readable format in a test case document and follows this test case while testing the software application. The manual process of testing is typically a tedious and time consuming process. Also, the manual process may be prone to error since a person may tend to make a mistake while writing the test case in the test case document or a user testing the software application may tend to make a mistake in reading the test case document and performing the test.","To eliminate the above problems, an automated testing process for user interface of software applications was introduced. In automated testing process, test automation tools were used that typically could automate the testing process. In the automated testing process using the test automation tool, the user creates a test case in the test automation tool and the test automation tool performs the testing of the software application by executing the test case. The test case is typically written in a programming language understood by the test automation tool. Such a test automation tool typically requires a skilled user as it demands the user to have knowledge of the programming language understood by the test automation tool. Moreover, it is tedious and time consuming to write the test case in the programming language of the test automation tool. Also, test automation tools typically only identify standard user interface elements such as inputbox, dropdown list, checkbox, and radio button with standard properties such as width, height, number of characters. Test automation tools may not identify customized user interface elements such as the user interface elements having additional properties. For example, if a customized inputbox has additional properties such as background color, background pattern, the test automation tool may not identify the customized inputbox.","What is described is a method and system for capturing a user action on a user interface and fetching user interface elements in the user interface into a first list and operations of the user interface elements into a second list. A test case for the user action is created in an automation accelerator by selecting a user interface element from the first list and an operation of the user interface element from the second list. An automation accelerator script of the test case is created by the automation accelerator.","What is described is a method and system for capturing a user action on a user interface and fetching user interface elements in the user interface into a first list and operations of the user interface elements into a second list. A test case for the user action is created in an automation accelerator by selecting a user interface element from the first list and an operation of the user interface element from the second list. An automation accelerator script of the test case is created by the automation accelerator. The automation accelerator script may be executed by the automation accelerator to execute the test case on a software application. The automation accelerator generates a test report containing a result of execution of the test case.",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1","b":["100","105","110","100","115"]},{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 2","FIG. 1"],"b":["200","205","210","215","100","220"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 3","b":["300","305","310","315","320"]},"At , the automation accelerator checks if there are any more user actions to be performed. If yes, then the automation accelerator performs the steps from step  to step , that is, the automation accelerator captures attributes of all the user actions performed on the UI and adds the user action to the test case. If there are no more user actions to be captured, the automation accelerator script is created at step . The automation accelerator script for the test case may be created by using, for example, a save button.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4","b":["400","400","405","410","415","410","420","410","425","410","430"]},"UI element  specifies name of the UI element in the UI of the software application on which the user action is performed. Type  specifies a type of UI element . Type  includes UI elements such as button, radio, checkbox, dropdown list, input box and hyperlink. Operation  is the operation performed on the UI element  in the user action which includes operations such as click, set, and launch. Value  contains a value of UI element  and comments  contains comments on the user action. The fields, UI element , type , and operation  are mandatory fields, that is, the fields must be provided with values in user action table  where as the fields, value  and comments  are not mandatory fields which may not have values. User action table  may be updated with the attributes of all the user action performed on the UI.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 5","b":["500","500","510","515","530","500"],"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":{"@attributes":{"id":"ul0001-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":["In a first user action, the user may launch login UI  by typing a uniform resource locator (URL)  in a web browser.","In a second user action, the user may provide a value for user ID  as \u201cpgreene\u201d .","In a third user action, the user may provide a value for password  which is displayed as \u201c . . . \u201d .","In a fourth user action, the user may log on to the software application by clicking \u201cLog on\u201d button ."]}}}},{"@attributes":{"id":"p-0026","num":"0029"},"figref":["FIG. 6","FIG. 5","FIG. 5"],"b":["600","605","500","600","610","620"]},"The attribute of the first user action such as name of UI element  which is \u201cBrowser\u201d  may be selected from UI element dropdown list . UI element drop down list  contains a list of all UI elements in login UI .",{"@attributes":{"id":"p-0028","num":"0031"},"figref":"FIG. 7","b":["710","705","700","710","710","710","730","715","710","735","720","710","740","725","710","505","700"]},{"@attributes":{"id":"p-0029","num":"0032"},"figref":"FIG. 8","b":["800","805","835","500","835","805","835","810","815","820","825","830"]},"The name of UI element  on which the first user action is performed is captured as \u201cBrowser\u201d , type  of UI element  is updated by automation accelerator  as \u201cBrowser\u201d , operation  performed on \u201cBrowser\u201d  is captured as \u201cLaunch\u201d  and a value  of \u201cBrowser\u201d  is set as \u201chttps:\/\/a1stest.wdf.corp\/\u201d  by automation accelerator . Each row in user action table  corresponds to the user action performed on login UI . A set of such user actions in user action table  form a test case.",{"@attributes":{"id":"p-0031","num":"0034"},"figref":["FIG. 9","FIG. 5"],"b":["900","905","930","935","940","945","500"]},"The below four user actions form test case  for testing the login functionality of login UI .\n\n","All the above user actions may be the necessary user actions to be performed by the user to login to the software application. The user actions may be captured in the automation accelerator  while the user is performing the user action on login UI  or the user actions may be captured in automation accelerator  independently, that is, the user may update the attributes of the user action in automation accelerator  without actually performing the user actions on login UI . After capturing the above four user actions in automation accelerator , the user may save test case  using save button . When test case  is saved, an automation accelerator script is generated by automation accelerator . The automation accelerator script is an extensible markup language (XML) file containing test case .","The automation accelerator script may be opened in automation accelerator  and executed by automation accelerator . On executing the automation accelerator script, automation accelerator  executes the test case  on login UI  automatically. Once, the automation accelerator script is executed by automation accelerator , typically no further human intervention is required to perform the testing of login UI  as automation accelerator simulates the user actions on login UI  automatically.","Automation accelerator  may also be executed in a record mode. In the record mode, automation accelerator window is minimized or executed in the background. Automation accelerator records the user actions performed on login UI  by automatically capturing the attributes of the user actions in user action table . Automation accelerator  automatically identifies the name of the UI element, the operation of the UI element and the value of UI element on which the user action is performed and updates the attributes of the user actions in user action table . After performing the user actions on the login UI , the user may deactivate the record mode and save test case  in automation accelerator . In record mode, no human intervention may be required for capturing the user actions to create test case  in automation accelerator .","The user may specify to automation accelerator , login UI  for which test case  may be created by using pointer button . For example, the user may click on pointer button  via a pointing device, then switch to login UI  and click on login UI  again. Automation accelerator  identifies login UI  as the UI for which a test case may be created and builds a list of UI elements and a list of operations for the UI elements in login UI  which are required to create user actions in automation accelerator .","Automation accelerator  may execute test case  completely or partially, that is, automation accelerator  may execute all the user actions in test case  or only a selected group of the user actions. The user may specify the group of user actions to be tested in login UI  by specifying a start point and an end point in the test case. All the user actions between the start point and the end point may be executed by automation accelerator . For example, the user may specify user action  as start point of test case  and user action  as the end point of test case . Automation accelerator  would only execute user action  and user action  when the automation accelerator script is executed.",{"@attributes":{"id":"p-0038","num":"0045"},"figref":"FIG. 10","b":["1005","1015","1015","1005","1015","1010","1010","1005","1015"]},"Automation accelerator  communicates with test automation tool  via automation accelerator technology layer  to fetch UI elements into a first list and operations of the UI elements into a second list when user  identifies the UI for which a test case may be created. Automation accelerator  communicates with test automation tool  to simulate user actions on the UI when automation accelerator script is executed. Automation accelerator  allows user  to create the test case in a declarative way unlike test automation tool  wherein user  typically has to create the test case by writing a code for the test case in a programming language understood by test automation tool . Automation accelerator  typically eliminates the need to know a programming language specific to test automation tool .","Also, automation accelerator  may be customized to identify customized UI elements in the UI unlike test automation tool  which typically identifies only standard UI elements. Standard UI elements are UI elements such as inputbox, drop down list, radio button and checkbox with standard properties such as width, height, and number of characters. If inputbox is customized to have one or more additional properties such as background style of inputbox that are not part of the standard properties, test automation tool  typically does not identify the customized inputbox. Automation accelerator  may be programmed to have the API that may identify customized UI elements.",{"@attributes":{"id":"p-0041","num":"0048"},"figref":"FIG. 11","b":["1100","1105","1110","1110","1115","1105","1100","1110","1110","1105","1100"]},"The test case may be saved in automation accelerator . Automation accelerator  persists the test case as an automation accelerator script . Automation accelerator script  is persisted in an XML file format. Automation accelerator script  may also be displayed in human readable format by opening it in automation accelerator . Automation accelerator  also has a feature that allows user  to generate automation tool script  for the test case that is executable by test automation tool . Automation tool script  allows a user  to execute the test case on user interface  by executing automation tool script  in test automation tool . This is particularly useful in a test environment where automation accelerator  is not integrated with test automation tool . Another advantage of the above feature is that user  may create the test case using automation accelerator  which is typically faster and easier than creating a test case in test automation tool .","Test data container  persists values of UI elements specified in the test case in automation accelerator . Automation accelerator  creates test data container when automation accelerator script  is executed and initializes test data container  with the values of the UI elements. Automation accelerator  fetches the values of UI elements from test data container  for simulating the user actions on user interface  to perform the testing. Automation accelerator  generates a test report  that contains a result of execution of the test case. Test report  is generated in a human readable format.",{"@attributes":{"id":"p-0044","num":"0051"},"figref":"FIG. 12","b":["1200","1205","1210","1215","1220","1225","1230","1235","1240","1245","1250","1250","1205","1210","1220","1210","1215","1220","1225","1210","1230","1235","1235","1240","1245"]},"Embodiments of the invention may include various steps as set forth above. The steps may be embodied in machine-executable program code which causes a general-purpose or special-purpose processor to perform certain steps. Alternatively, these steps may be performed by specific hardware components that contain hardwired logic for performing the steps, or by any combination of programmed computer components and custom hardware components.","Embodiments of the present invention may also be provided as a machine-readable medium for storing the machine-executable instructions. The machine-readable medium may include, but is not limited to, flash memory, optical disks, CD-ROMs, DVD ROMs, RAMs, EPROMs, EEPROMs, magnetic or optical cards, propagation media or any other type of machine-readable media suitable for storing electronic instructions. For example, the present invention may be downloaded as a computer program which may be transferred from a remote computer (e.g., a server) to a requesting computer (e.g., a client) by way of data signals embodied in a carrier wave or other propagation medium via a communication link (e.g., a modem or network connection).","Throughout the foregoing description, for the purposes of explanation, numerous specific details were set forth in order to provide a thorough understanding of the invention. It will be apparent, however, to one skilled in the art that the invention may be practiced without some of these specific details. Accordingly, the scope and spirit of the invention should be judged in terms of the claims which follow."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
