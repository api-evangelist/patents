---
title: Synchronizing a visible document and a virtual document so that selection of text in the virtual document results in highlighting of equivalent content in the visible document
abstract: Disclosed is a system and method for synchronizing virtual and physical documents. The system can be used in conjunction with screen reading software for synchronizing the screen reader's virtual representation of a component to components that are visually displayed to a sighted user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08234593&OS=08234593&RS=08234593
owner: Freedom Scientific, Inc.
number: 08234593
owner_city: St. Petersburg
owner_country: US
publication_date: 20090306
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION DATA","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["This application claims benefit of application Ser. No. 61\/034,573 filed on Mar. 7, 2008 entitled \u201cON SCREEN SYNCHRONIZATION OF SELECTION IN VIRTUAL DOCUMENT.\u201d The contents of this application are fully incorporated herein.","In the electronic age, information is provided to computer users by way of a display. This information can include text, graphics, movies and other items presented to a user in a certain layout. This system, designed with the sighted-user in mind, has certain deficiencies when the user is a low-vision or blind user (\u201clow-vision user\u201d). Low-vision users typically rely upon screen readers to navigate and interact with computer systems.","Historically, screen readers have offered a virtual presentation of a webpage which enables the user to read the text and interpret the graphics, headings, links and other constructs on a webpage in an intelligible manner. Such presentations offer a rudimentary synchronization of what is visually onscreen with what the screen reader user is reading by ensuring that the text being read by the user is physically visible as they arrow through the document. When the low vision user selects text to copy to the clipboard, however, the text from the screen reader's virtual document is copied without any formatting associated with the equivalent physically displayed text. There is also no indication on screen of the selection within the virtual document as the virtual representation of the document uses words and extra text to describe physical characteristics of the real document and thus is logically but not physically equivalent. For example, if a low-vision user visits a webpage containing a table of information, a screen reader will typically read the information, contained within the table to the low-vision user. If the user wishes to copy and paste this information, historical screen readers allow the user to select the information within the screen reader, but this does not maintain the structural elements of the information, namely the table layout. Thus, when pasted, the information will not maintain the formatting and structure it had when it was originally presented.","In various embodiments, the present invention enables true synchronization of the virtual and physical document, even when selecting text in the virtual document. That is, when the user selects text in the virtual representation of the real document, the equivalent physical web content is highlighted on the screen as if the user used a mouse to select the equivalent content. The system can then rely upon existing copy, selection, highlight and other functionality to provide similar functionality to low vision users as is provided to sighted users. Thus, when a low-vision user copies information to the clipboard, all characteristics of the displayed content may also be preserved. This would mean, for instance, that copying the virtual representation of tabular data from the web to a word processor would result in the true table with all of its formatting being copied.","In order to achieve this, intelligent code running in a computer system manages the relationship between the virtual document maintained and presented to the low-vision user and the actual physical document that would be presented to a sighted user on a graphical display, such as a monitor, LCD, television, cellular telephone, personal digital assistant, or any other visual display. By managing this relationship, the intelligent code embodying this invention can translate a low-vision user's selection of content within a screen reader's virtual document presentation of a document to the actual physical location that is displayed to a sighted user.","Because low-vision users are unable to see the graphical displays relied upon by sighted users, what is needed, and what is provided by certain embodiments of the invention herein, is the ability to translate movements within a screen reader to coordinates within a graphically displayed document. What follows below is a discussion of the presentation of information in WebPages to low-vision users. But a person having ordinary still in the art will appreciate the applicability of the system described below to any visually displayed information, such as word processing documents, financial registers, and any other electronically displayed information.","Thus, embodiments of the invention herein may provide a novel system and method for mapping the layout elements of electronic documents to their presentation within a screen reader utilized by a low vision user such that the low-vision user can select, copy, paste, cut, and otherwise manipulate and interact with both the content of the electronic document and the layout of the content.","These or other embodiments of the present invention may map the low-vision user's screen reader to the display such that when the low-vision user selects, copies, pastes, cuts and otherwise manipulates content and layout of documents within the screen reader equivalent actions are displayed on the screen, for instance highlighting text on the visual display when the low-vision users selects that same text within the screen reader.","Additional features of the invention will be described hereinafter which form the subject of other aspects of the invention. It should be appreciated by those skilled in the art that the conception and the specific embodiment disclosed may be readily utilized as a basis for modifying or designing other structures for carrying out the same purposes of the present invention. If should also be realized by those skilled in the art that such equivalent constructions do not depart from the spirit and scope of the invention as set forth in the appended claims.","Similar reference characters refer to similar parts throughout the several views of the drawings.","Certain embodiments of the invention are directed to a method and apparatus used in conjunction with screen reading software, such as the JAWS\u00ae screen reader, available from Freedom Scientific, Inc., for synchronizing the screen reader's virtual representation of a component visually displayed to a sighted user. The discussion that follows below focuses on an embodiment of the present invention directed to synchronization of a webpage being navigated by a low-vision user, but a person having ordinary skill in the art would appreciate that any computer application that displays information to users visually could be utilized in the invention discussed herein. This detail assumes INTERNET EXPLORER\u00ae as the web browser in use however this concept may be translated to work with any other browsers.","Most applications developed for modern operating systems provide graphical representations of their information to their users. These applications usually rely upon underlying graphical user interface (\u201cGUI\u201d) features and window managers to maintain a consistent look and feel. These window managers, which can be part of the underlying operating system, draw graphical windows and manage the creation, movement, destruction, sizing and other graphical manipulation of windows. These window managers also provide information concerning the GUI to the application or applications utilizing the GUI features, including location information, such as the coordinates of where the cursor is located. Users typically interact with these GUIs by way of various input devices, including a mouse, tablet, joystick, trackball, touchscreen or any other input device.","As an example, web pages contain a tremendous amount of information which is presented to a user in a particular fashion. Websites are \u201cprogrammed\u201d in HTML (hypertext markup language). The Document Object Model (\u201cDOM\u201d) is a specification defining an application programming interface for documents developed by the World Wide Web Consortium (\u201cW3\u201d). The DOM specification, which is located at http:\/\/wvvvv.w3.org\/, is hereby explicitly incorporated by reference. The DOM enables programmatic access to documents by providing a hierarchical, tree-like representation of the elements of structured documents like HTML and XML.","Web browsers typically rely upon the DOM for maintaining and navigating web pages. Other applications may rely upon an Application Programming Interface (or \u201cAPI\u201d) to provide the relevant information. Embodiments of the invention herein described in more detail below utilizes an application's ability to interact with the physical characteristics of its presentation to provide enhanced functionality to low-vision users.","In order to facilitate speed in intersecting with the web browser, one embodiment of the present invention uses a COM (Component Object Model) control which is injected into the web browser application and thus is executed in the address space of the web browser application and communicates back to a client screen reader, such as the JAWS\u00ae screen reader, as necessary. This embodiment also uses a Document Object Model (\u201cDOM\u201d) Module (FSDom Module) which communicates with the web browser via a translation layer, which in one embodiment is known as the FSDomNodeIE.dll. One possible implementation is the W3C Dom, although other object models can also be implemented. This enables the system to write different translation layers for different applications but use the same FSDom Module control to communicate with the application and assemble a virtual document representing the physical document in whichever application it is being utilized. Thus, for instance, the system can create a FSDomNodeFireFox.dll to serve as a translation layer between the FIREFOX\u00ae web browser and the screen reader's virtual document.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 7","b":["701","702","703"]},"The FSDomNodeIE module provides the mechanism for traversing the document provided by the INTERNET EXPLORER\u00ae web browser to the FSDom Module which keeps track, via its own node tree, of the translation between the physical document and the virtual document created by the FSDom Module.","The FSDomNodeIE module uses interfaces provided by the underlying application, such as the IMarkupServices, IMarkup Pointer, IDisplayServices and IDisplayPointer as well as other interfaces provided by the MSHTML library of INTERNET EXPLORER\u00ae, to traverse the underlying web document and interact with the elements of the document on behalf of the FSDom Module. The implementation of this would be known to one of ordinary skill in the art. Once FSDomNodeIE is injected into Internet Explorer, the FSDomNodeIE code attaches an event sink or listener to the Browser object (IWebBrowser2). When this sink receives notification that a new document has been loaded, the virtual buffer is constructed and event sinks are attached to the document itself (IHTMLDocument2) and to each element of the document (THTMLElement). This allows certain portions of the virtual buffer to be rebuilt when notification of document changes are received from the document or one of its elements. This FSDomNodeIE module (or other translation layer module) traverses the web browser's document and creates a node for each document element, assembling them into a tree structure which is then traversed by the FSDom Module. Each element of the DOM has an associated tag and attributes. Using this information it is possible to determine the type of each element and processes it appropriately. Since each node maintains information about the physical element to which it points in the underlying web document, the node is able to offer functions to the FSDom Module to provide details about the physical onscreen location and characteristics of the piece of information represented by the underlying element. As the FSDom Module traverses the node tree, it builds a virtual document representing the physical document replacing graphical images with text descriptions and augmenting the physical document with other textual descriptions such as the rubber of rows and columns in a table of information or the number of items in a balloted or numbered list.","As part of walking the DOM to construct the virtual buffer, information is gathered about every table including the row and cell count and where in the virtual buffer each cell begins\/ends. This makes it possible to find the associated table cell (if any) for any offset in the virtual buffer and vice versa.","A similar technique is used for lists, wherein the count of elements in each list along with the starting and ending location of each list item is associated with offsets in the virtual buffer.","For each virtual element added to the document, the FSDom Module is thus able to ask, or call back on, the node to interact with the physical element represented by the virtual element in the virtual document. As the FSDom Module traverses the node tree, it also updates the node's location in the virtual document so that, for example, if the user selects some text in the virtual document, the characters selected in the virtual document can be mapped directly back to the physical onscreen data.","Several key functions help with this mapping, all of which are implemented in the translation layer module, in this case, FSDomNodeIE. The following pseudo code function signatures are:\n\n","The first function, UnderlyingDocumentSupportsACP( ) is used to determine if the translation layer, in this case FSDomNodeIE, is able to provide a mapping to the underlying document's representation at an Absolute Character Position (\u201cACP\u201d) (or screen location) granularity. If not, the translation layer may not be able to accurately determine the exact offsets to highlight on the screen. Note that if the underlying application does not allow this mapping, it is still possible to provide an approximated mapping by selecting the nearest physical element. While this may not be suitable for selecting onscreen data, it may be useful in at least highlighting the current element being voiced by the screen reader.","The second function, GetUnderlyingACPForNodeOffset (longnOffsetInNode) will, given a document, offset in the virtual document relative to this node, obtain the Absolute Character Position of the equivalent piece of data in the physical web document. An example may suffice.","Suppose the physical document consists of the webpage as shown in . To a low vision user, a screen reader would render the webpage shown in  to indicate there is an \u201cimage of a boy reading\u201d and then the text \u201cMy clever son.\u201d The HTML for this webpage comprises:\n\n","Note that quotes are used to show spacing and are not included in the offset discussion below. This would be represented by markup pointers in INTERNET EXPLORER\u00ae as depicted in . The first column of  stores the Absolute Character Position of the document element being maintained. The second column serves to provide a description, and the third column shows the actual data. Walking through the example code discussed above, the first entry in the table represents the first physical character of the string of html as an image. This corresponds to the <img . . . tag above.","The next row in the table indicates that at absolute character position 1 is the <p> tag, used for defining a paragraph in HTML. Further note the description maintains the element at character position 1 is described as \u201cEnterScope Paragraph\u201d as the <p> is the beginning of this Paragraph scope.","The next row is the first piece of text in the above example, namely the letters and space \u201cMy\u201d. As is appreciated by one skilled in the art, these three characters are positioned at absolute character positions 2-4, where position 2 is \u2018M\u2019, position 3 is \u2018y\u2019 and position 4 is \u2018 \u2019.","As with the <p> tag above, the next character is a formatting character, namely the <b> tag, used to indicate the beginning of text that, should be presented in boldface. The next element corresponds to absolute character positions 6-11, which is where \u201cClever\u201d is displayed. Next up is the < \/b > tag at absolute character position 12, which indicates the end of the bold face scope, which had begun at absolute character position 5. The remainder of  provides the same information for the rest of the HTML of the webpage depicted in .","The FSDom Module's virtual representation of the same web page is shown in . Note that  contains the same three columns, but the data stored in each is different than what was stored in . As the presentation under this approach is to a low-sighted user, instead of displaying the actual image of the boy reading, the low-vision user is read the alternate text that is provided in the < img . . . > tag. This alternate text, \u201cImage of a boy reading\u201d is located in character positions 0-21, as indicated in ","The next two lines in the table shown in  correspond to the <p> tag that was represented in the second row of the table in . The next row of  is used to store information concerning the text \u201cMy\u201d. Note the character position for this text in , namely 24-26, is different than the character position stored in the table of  for this same element. This is because in , the display considers the actual image of the boy reading to comprise a single position, whereas now, for the low-vision user, the display (which is the screen reader that reads the information to the low-vision user) must store and read the alternate text, specifically \u201cImage of a boy reading.\u201d Furthermore, in the  table, the paragraph tag <<p>> takes up only a single character position, while the screen reader version in  requires two character spaces.","This enables the invention disclosed herein to maintain a mapping of virtual document elements to their physical Absolute Character Position, as shown in . The Node Offset in virtual column of the table in  keeps track of how large the offset for the particular element is in the virtual document. Thus, as shown in the first row, the < i mg > element, which takes up only a single character position in the physical character representation, takes up 22 character positions in the virtual document. Similarly, as shown in the second row of the table in , the <p> tag, which takes up a single character position in the physical document, occupies two character positions within the virtual document. This first column of the table in  keeps track of relative offsets within a particular node. Thus, looking at the third row down (namely the row for the physical element \u201cMy\u201d), the first column indicates that there are only three character positions within this element.","The second column, Virtual ACP, stores the corresponding information from the table shown in , while the third column. Physical ACP, provides the information from the table shown in . Finally, the last column, Physical Element, depicts what the actual element being stored is. By managing the information in this manner, the screen reader application and translation layer, combined with the FSDom Module, is able to seamlessly integrate with window management systems and provide the same functionality to low-vision users as sighted-users take for granted.","Thus, embodiments of the invention are suitable for use with any application that has the ability to use a cursor to manipulate, change, highlight, copy, cut, select, or otherwise modify what is shown on the display. All that must be done is the creation of a suitable translation layer capable of mapping the display events to absolute character positions.",{"@attributes":{"id":"p-0044","num":"0048"},"figref":["FIG. 2","FIG. 1"]},"At this point, methods are provided to select and copy information within, the web browser's application space. In the INTERNET EXPLORER\u00ae example discussed above, CopyRangeToClipboard (long uUnderlyingACPStart, longn UnderlyingACPEnd) and SelectRangeOnScreen (long uUnderlyingACPStart, long nUdnderlyingACPEnd) are provided Absolute Character Position parameters, and then interact with INTERNET EXPLORER\u00ae's document representation, and can call INTERNET EXPLORER\u00ae's native library functions to do the copying or onscreen selection.","For instance, the translation layer can utilize the MSHTML library's ITextRange interface to create the appropriate text range representing the data between the ACR values specified and is able to call ITxtRange::Select or ITxtRange::Copy to select the range on screen or copy the range to the clipboard.","By having a suitable translation layer for other applications such as Firefox, Adobe Reader, Adobe Acrobat, Microsoft Word, Microsoft Excel, and any other computer application which presents information to users, the FSDom Module is able to determine the capability of the underlying application and perform onscreen selection and copy to clipboard functionality. If the FSDom Module determines that this capability is unavailable in the underlying application because the underlying application does not have the necessary functionality or the translation layer doesn't yet implement this functionality, the FSDom Module is still able to copy a representation of the data to the clipboard but is unable to highlight the appropriate data on the screen and the data copied will be our representation of the data rather than the physical data from the application.","This process is further described, by reference to FIG. .  shows a flow chart laying out a usage scenario of a low-vision user utilizing the invention herein. At step , the user begins to receive a document in the screen reader. The screen reader traverses the document object model at step , and creates a virtual buffer at step .  shows a sample virtual buffer for the example discussed above. Steps  and  depict the event loop during which the low-vision user peruses the virtual document. When the low-vision user selects text within the virtual document at step , the internal mappings discussed at  are consulted to determine the physical location of the text at step . Finally, the application is called to highlight the text at step . The physical display is a step .","The present disclosure includes that contained in the appended claims, as well as that of the foregoing description. Although this invention has been described in its preferred form with a certain degree of particularity, it is understood that the present disclosure of the preferred form has been made only by way of example and that numerous changes in the details of construction and the combination and arrangement of parts may be resorted to without departing from the spirit and scope of the invention.","Now that the invention has been described,"],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWING","p":["Various other objects, features and attendant advantages of the present invention will become apparent to one with skill in the art upon examination of the accompanying drawings and detailed descriptions. It is intended that these objects, features and attendant advantages be included as the same when considered in conjunction with the accompanying drawings, in which like reference characters designate the same or similar parts through the several views and wherein:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 5","FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
