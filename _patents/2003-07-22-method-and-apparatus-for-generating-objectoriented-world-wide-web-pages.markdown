---
title: Method and apparatus for generating object-oriented world wide web pages
abstract: In the present invention, HTML elements are mapped to objects in an object-oriented environment. Classes of objects are defined for each HTML element as well as the HTML document (or page). By providing a one-to-one mapping between each HTML element and object classes, HTML documents can be manipulated programmatically. The properties of each element are stored in instance variables of the associated object. Each object class can include methods to manipulate the HTML element within an HTML document.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07055154&OS=07055154&RS=07055154
owner: Next Software, Inc.
number: 07055154
owner_city: Cupertino
owner_country: US
publication_date: 20030722
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["1. Field of the Invention","This invention relates to the generation of object-oriented world wide web pages.","2. Background","The Internet is a worldwide matrix of interconnected computers. An Internet client accesses a computer on the network via an Internet provider. An Internet provider is an organization that provides a client (e.g., an individual or other organization) with access to the Internet (via analog telephone line or Integrated Services Digital Network line, for example). A client can, for example, download a file from or send an electronic mail message to another computer\/client using the Internet.","To retrieve a file on the Internet, a client must search for the file, make a connection to the computer on which the file is stored, and download the file. Each of these steps may involve a separate application and access to multiple, dissimilar computer systems. The World Wide Web (WWW) was developed to provide a simpler, more uniform means for accessing information on the Internet.","The components of the WWW include browser software, network links, and servers. The browser software, or browser, is a user-friendly interface (i.e., front-end) that simplifies access to the Internet. A browser allows a client to communicate a request without having to learn a complicated command syntax, for example. A browser typically provides a graphical user interface (GUI) for displaying information and receiving input. Examples of browsers currently available include Mosaic, Netscape, and Cello.","Information servers maintain the information on the WWW and are capable of processing a client request. Hypertext Transport Protocol (HTTP) is the standard protocol for communication with an information server on the WWW. HTTP has communication methods that allow clients to request data form a server and send information to the server.","To submit a request, the client contacts the HTTP server and transmits the request to the HTTP server. The request contains the communication method requested for the transaction (e.g., GET an object from the server or POST data to an object on the server). The HTTP server responds to the client by sending a status of the request and the requested information. The connection is then terminated between the client and the HTTP server.","A client request therefore, consists of establishing a connection between the client and the HTTP server, performing the request, and terminating the connection. The HTTP server does not retain any information about the request after the connection has been terminated. HTTP is, therefore, a stateless protocol. That is, a client can make several requests of an HTTP server, but each individual request is treated independent of any other request. The server has no recollection of any previous request.","An addressing scheme is employed to identify Internet resources (e.g., HTTP server, file or program). This addressing scheme is called Uniform Resource Locator (URL). A URL contains the protocol to use when accessing the server (e.g., HTTP), the Internet domain name of the site on which the server is running, the port number of the server, and the location of the resource in the file structure of the server.","The WWW uses a concept known as hypertext. Hypertext provides the ability to create links within a document to move directly to other information. To activate the link, it is only necessary to click on the hypertext link (e.g., a word or phrase). The hypertext link can be to information stored on a different site than the one that supplied the current information. A URL is associated with the link to identify the location of the additional information. When the link is activated, the client's browser uses the link to access the data at the site specified in the URL.","If the client request is for a file, the HTTP server locates the file and sends it to the client. An HTTP server also has the ability to delegate work to gateway programs. The Common Gateway Interface (CGI) specification defines the mechanisms by which HTTP servers communicate with gateway programs. A gateway program is referenced using a URL. The HTTP server activates the program specified in the URL and uses CGI mechanisms to pass program data sent by the client to the gateway program. Data is passed from the server to the gateway program via command-line arguments, standard input, or environment variables. The gateway program processes the data and returns its response to the server using CGI (via standard input, for example). The server forwards the data to the client using the HTTP.","A browser displays information to a client\/user as pages or documents. A language is used to define the format for a page to be displayed in the WWW. The language is called Hypertext Markup Language (HTML). A WWW page is transmitted to a client as an HTML document. The browser executing at the client parses the document and produces a displays a page based on the information in the HTML document.","HTML is a structural language that is comprised of HTML elements that are nested within each other. An HTML document is a text file in which certain strings of characters, called tags, mark regions of the document and assign special meaning to them. These regions are called HTML elements. Each element has a name, or tag. An element can have attributes that specify properties of the element. Blocks or components include unordered list, text boxes, check boxes, radio buttons, for example. Each block has properties such as name, type, and value. The following provides an example of the structure of an HTML document:",{"@attributes":{"id":"p-0016","num":"0015"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<HTML>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<HEAD>"]},{"entry":[{},".... element(s) valid in the document head"]},{"entry":[{},"<\/HEAD>"]},{"entry":[{},"<BODY>"]},{"entry":[{},".... element(s) valid in the document body"]},{"entry":[{},"<\/BODY>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/HTML>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"Each HTML element is delimited by the pair of characters \u201c<\u201d and \u201c>\u201d. The name of the HTML element is contained within the delimiting characters. The combination of the name and delimiting characters is referred to as a marker, or tag. Each element is identified by its marker. In most cases, each element has a start and ending marker. The ending marker is identified by the inclusion of an another character, \u201c\/\u201d that follows the \u201c<\u201d character.","HTML is a hierarchical language. With the exception of the HTML element, all other elements are contained within another element. The HTML element encompasses the entire document. It identifies the enclosed text as an HTML document. The HEAD element is contained within the HTML element and includes information about the HTML document. The BODY element is contained within the HTML. The BODY element contains all of the text and other information to be displayed. Other HTML elements are described in an HTML reference manual.","The prior art HTML is not object-oriented. An HTML element is contained as a string within a flat, ASCII file. An application must be written to manipulate an HTML file. It would be beneficial to have the ability to map HTML elements to classes of objects that define the behavior of HTML elements.","In the present invention, HTML elements are mapped to objects in an object-oriented environment. Classes of objects are defined for each HTML element as well as the HTML document (or page). By providing a one-to-one mapping between each HTML element and object classes, HTML documents can be manipulated programmatically. The properties of each element are stored in instance variables of the associated object. Each object class can include methods to manipulate the HTML element within an HTML document.","An HTML document defines a World Wide Web page. An HTML document can be generated using HTML templates. Multiple HTML templates can be used to generate a single HTML document. An HTML template consists of HTML element statements. A parser parses an HTML template and generates an object tree.","The object tree is traversed during HTML document generation. When the HTML document is rendered, or generated, the root of the object tree is sent a message to create the document. The root object processes this message by creating its corresponding HTML element statement(s). The \u201ccreate\u201d message is then forwarded by the parent object to its children. This process is repeated until all of the objects in the object tree receive the message. Once all of the objects process the \u201ccreate\u201d message, the HTML document is generated.","An HTML document can also be generated without using an HTML template. An object tree can be created dynamically during runtime. For example, a root object (e.g., a PAGE object) is instantiated at runtime. During processing, additional HTML objects can be instantiated at inserted into the object tree. For example, a BODY object is inserted in the object tree as a child of the root object based on logic contained in an application procedure. Attributes of the BODY object can be set during application processing. Additional HTML objects can be added to the object tree in a similar manner until all of the objects have been assembled. As previously described, the HTML document is generated by sending a \u201ccreate\u201d message to the objects in the object tree.","An HTML template can include a server-side HTML extension known as the group extension. A group extension provides the ability to create a block of HTML statements. A name attribute of the group extension provides the ability to identify the group. The name attribute can be stored in a hash table. During processing, the group identity can be retrieved and used to traverse an object tree.","The group extension also ensures the scoping of named elements. A group object maintains a hash table that includes the named elements which are its members. The group element scopes the named elements within itself. Therefore, two elements having the same name in different groups are distinguishable. Each one is scoped to its respective group.","A declarations file is used in combination with the group extension. The declarations file contains additional definition for a group extension. An entry in the declarations file includes a label that links the entry to the group extension. The entry also declares an HTML object. That is, the class of the HTML object is defined. Properties of the HTML object can also be defined within the entry. Values for properties provided in the object class definition can be used to populate the properties in an instance of the object class instantiated for the group.","A declaration entry modifies its associated group by adding element to the group or modifying the elements that already exist in the group. For example, an HTML object, or element, declared in the entry inserts itself into the group that bears the same name as the declaration entry. Property values that are declared in the declaration entry are used to modify the HTML object's properties.","An instance of the group extension contained in an HTML template is not included in the HTML document that is sent to the client browser. Therefore, the client browser does not need to recognize the group extension. When the HTML document is rendered, the HTML objects contained within a group object render themselves to generate the HTML for the group. The HTML objects generate actual HTML statements within the HTML document. That is, the group does not generate HTML statements. However, the group transmits a message to its children (e.g., an HTML object that inserted itself within the group) to generate HTML statements.","A declaration entry may contain, for example, a declaration for a text string HTML object. The STRING HTML object is inserted into the group identified by the entry. When the HTML document is rendered, the STRING HTML object generates the HTML statements necessary to insert the text string into the HTML document.","A group extension also provides the ability to identify a block of HTML as a repeating subcomponent of the HTML document. The block identified by the group extension can be repeated multiple times within the HTML document. A repeating group can be used to render HTML statements that contain data that is retrieved from an external data source, for example.","A method and apparatus for generating object-oriented World Wide Web pages is described. In the following description, numerous specific details are set forth in order to provide a more thorough description of the present invention. It will be apparent, however, to one skilled in the art, that the present invention may be practiced without these specific details. In other instances, well-known features have not been described in detail so as not to obscure the invention.","The present invention can be implemented on a general purpose computer such as illustrated in . A keyboard  and mouse  are coupled to a bi-directional system bus . The keyboard and mouse are for introducing user input to the computer system and communicating that user input to CPU . The computer system of  also includes a video memory , main memory  and mass storage , all coupled to bi-directional system bus  along with keyboard , mouse  and CPU . The mass storage  may include both fixed and removable media, such as magnetic, optical or magnetic optical storage systems or any other available mass storage technology. Bus  may contain, for example,  address lines for addressing video memory  or main memory . The system bus  also includes, for example, a 32-bit DATA bus for transferring DATA between and among the components, such as CPU , main memory , video memory  and mass storage . Alternatively, multiplex DATA\/address lines may be used instead of separate DATA and address lines.","In the preferred embodiment of this invention, the CPU  is a 32-bit microprocessor manufactured by Motorola, such as the 680X0 processor or a microprocessor manufactured by Intel, such as the 80X86, or Pentium processor. However, any other suitable microprocessor or microcomputer may be utilized. Main memory  is comprised of dynamic random access memory (DRAM). Video memory  is a dual-ported video random access memory. One port of the video memory  is coupled to video amplifier . The video amplifier  is used to drive the cathode ray tube (CRT) raster monitor . Video amplifier  is well known in the art and may be implemented by any suitable means. This circuitry converts pixel DATA stored in video memory  to a raster signal suitable for use by monitor . Monitor  is a type of monitor suitable for displaying graphic images.","The computer system described above is for purposes of example only. The present invention may be implemented in any type of computer system or programming or processing environment. When a general purpose computer system such as the one described executes the processes and process flows described herein, it is a means for generating an HTML page using object-oriented HTML elements.","In the present invention, HTML elements are mapped to objects in an object-oriented environment. Classes of objects are defined for each HTML element as well as the HTML document (or page). Each HTML element can be mapped to a corresponding object class (e.g., Objective C, C++, or SmallTalk object class). By providing a one-to-one mapping between each HTML element and object classes, HTML documents can be manipulated programmatically. The properties of each element are stored in instance variables of the associated object. Each object class can include methods to manipulate the HTML element within an HTML document.","The object-oriented approach used by the present invention provides the ability to dynamically generate a page, or HTML document. Some or all of a page can be generated based on input received in a receive form, generated at runtime, or retrieved from an external data source (e.g., database or electronic mail system). The dynamic generation of HTML documents is more fully described in a co-pending U.S. patent application entitled \u201cMethod and Apparatus for Processing Internet Transactions\u201d, Ser. No. 08\/532491 now U.S. Pat. No. 6,249,291, filed on Aug. 15, 1995 and incorporated herein by reference.","As previously indicated, the present invention objectifies (Objective C, C++ objects, SmallTalk objects, etc.) HTML elements. By doing so, the HTML objects can be connected to other objects. That is, the HTML objects can be connected to objects in the business model (i.e., data model objects). Internet transaction processing is more fully described in a co-pending U.S. patent application entitled \u201cMethod and Apparatus for Processing Internet Transactions\u201d, Ser. No. 08\/532491 now U.S. Pat. No. 6,249,291, filed on Aug. 15, 1995 and incorporated herein by reference.","The present invention provides the ability to access an application using any interface. For example, a client can access the same application via the Internet using a system running Windows, MAC\/OS, Sun OS, NextStep, etc. Referring to , client  is resident on a corporate network . Corporate network  is a local area network comprised of personal computers such as client , for example. Client  executes a browser such as Netscape or Mosaic to interface with World Wide Web (WWW) . The browser executing on client  displays HTML pages transmitted to client  via WWW . When the client browser submits a request contained within an HTML page, the page is transmitted via WWW  to HTTP server . One attribute of the submitted page can be a Universal Resource Locator (URL). A URL specifies procedures to be executed and\/or data input by the user, for example.","HTTP server  can service the client request by, for example, retrieving a return form or file (specified by a URL contained in the HTML document) and transmitting it to client  via WWW . Further, HTTP server  can initiate a program identified in the URL. In the preferred embodiment, the URL specifies CGIMessenger  to service the client request. CGIMessenger is a Common Gateway Interface (CGI) script. The following provides an example of a URL:","http:\/\/www.next.com\/cgi_bin\/cgimessenger\/app_name\/rcv_form\/send_form","A URL has multiple parts. The first part, \u201chttp:\u201d specifies the protocol to be used. Other examples of protocol include \u201cftp:\u201d, \u201cgopher:\u201d and \u201cwais\u201d. The next part specifies the Internet domain name of the server. In this case, the Internet domain name of the HTTP server is \u201cwww.next.com\u201d. The next part, \u201c\/cgi_bin\/cgi_messenger\u201d specifies the path and filename of the desired resource. The resource can be a file, form, or program, for example. In this case, the resource is a common gateway interface program that is used to route requests to applications. The application that processes the client request is specified in the URL with the \u201capp_name\u201d specification. The names of the receiving form (e.g., the form containing the client request) and the sending form (e.g., a reply to the client request) can be included in the URL.","A client request can result in the invocation of application  in the server domain , for example. The client request is received by the HTTP server . The HTTP server  initiates CGIMessenger . To service the client request, CGIMessenger  communicates with HTTP server  to obtain information regarding the client request. For example, CGIMessenger  obtains the information that accompanied the user request such as form and\/or application names and\/or user input. The form names can include the name of the form that was submitted to initiate the client request as well as a return form.","The application name identifies the application that services the client request. If an application is specified, CGIMessenger  transmits the client request and corresponding information transmitted from HTTP Server  to application . Application  executes an interaction flow to satisfy the user request.","A simple hypertext request (e.g., a request for another form specified in the request) is serviced by HTTP Server  by returning the specified form. For requests other than simple hypertext requests, the present invention can execute logic such as CGIMessenger  and application , for example, to process a client request. The application includes objects such as those created in an objective C, C++, or SmallTalk environment to manage the components of an HTML document (i.e., HTML elements). The behavior defined by the objects manipulate the HTML elements based on the information available to the objects, for example.","Preferably, a user interface (UI) is used to define the HTML elements of a Web page. However, HTML elements can be defined using a text editor. The output of either a UI tool or a text editor is an ASCII, or flat, file that contains definitions for one or more HTML elements. The HTML elements are arranged within the file in the definitional hierarchy (e.g., BODY element is contained within the HTML element).","The HTML elements that define a Web page can be included in a single ASCII file. A file that contains HTML elements is referred to as an HTML template. An HTML template can include a complete definition of the Web page. However, an HTML template may define a subset of the Web page. Two or more HTML templates that define portions of the Web page can be combined to provide a complete definition. The following provides an example of the contents of an HTML template:",{"@attributes":{"id":"p-0056","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE ONE"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<HTML>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<BODY>"]},{"entry":[{},"This is a list of employees:"]},{"entry":[{},"<P>"]},{"entry":[{},"<OL>"]},{"entry":[{},"<LI> James <\/LI>"]},{"entry":[{},"<LI> Mary <\/LI>"]},{"entry":[{},"<\/OL>"]},{"entry":[{},"<\/BODY>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/HTML>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The above HTML template includes HTML, BODY, Paragraph (P), Ordered List (OL),and List Item (LI) elements. The present invention defines a class for each HTML element. An object class defines instance variables to store information associated with the HTML element such as attributes, or properties, of an HTML element. Methods can be defined to manipulate an HTML element to render (i.e., generate) an HTML document, for example.","Referring to , application  includes objects . Objects  correspond to the HTML elements that define a WWW page. Objects  are arranged in a tree structure that corresponds to the hierarchical structure of the HTML elements that they implement. To render an HTML document, application  sends a message to the root object  to render itself. In response to this message, root object  renders the corresponding HTML element(s). Root object  sends a message to its children, objects A\u2013B, to render themselves. This process is continued until all of the nodes in the object tree have been processed.","The objects in an object tree are instantiated based on pre-defined object classes. Object classes are defined to manipulate and generate HTML elements in an HTML document. The name of the object class can mirror the names of the corresponding HTML element to provide an easy association between the two. Alternatively, any mapping scheme can be used to map an HTML element to an object class. Instance variables can be used to store property information defined by properties in the HTML element statement. An object class can further contain instance variable declarations to store other information associated with an HTML element.","An object class can have associated method declarations that can be used to manipulate the HTML document. For example, an object class may have a method that varies the display characteristics of the HTML element based on the outcome of some Boolean logic. Further, instance variables can be used to provide a pointer to scripts used with the HTML document.","A script is a type of program that consists of a set of instructions that is read and interpreted by another application. An instruction is an expression that conforms to the rules and syntax expected by a script interpreter. A script language (set of script instructions) may include simple control statements such as loops and if\/then expressions.","Since the language does not include complex constructs, the language is easy to master. As with other interpretive languages, a developer does not have to perform steps to translate a script into machine-readable code. Even though a script is interpreted at runtime, it is not considered to cause any degradation in the overall response time (the actual network response times are the primary concern). Therefore, scripts are typically used to provide the logic associated with a Web page.","Appendix A provides a list of some object classes for HTML elements. Additional or modified class definitions can also be used with the present invention. A library of object classes are preferably predefined.",{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 3","b":["302","302","304"]},"When the Web page definition is requested by a client browser, the associated HTML template(s), script(s), and declarations are retrieved from storage. At step , a parser is invoked to parse the statements contained in the HTML template(s). HTML elements are identified by the parser. An object tree is generated based on the HTML elements identified and the hierarchical structure inherent in HTML and defined in the HTML template(s).","An HTML object is instantiated for each of the HTML elements defined in the HTML template(s) at step . At step , the objects instantiated in step  are used to render the Web page definition (i.e., HTML document). The HTML document is sent to the client browser at step . The client browser interprets the HTML document and displays the Web page. When the client submits the page, the page is returned to the HTTP server as an HTML document. The HTML document is received at step . At step , the HTML objects are used to perform the processing based on the client input. Processing ends at step .","The object tree generated during parsing identifies the objects and hierarchy defined in an HTML template.  provides a diagram of the object tree or hierarchy for the HTML template provided in Table One.","Page object  corresponds to the HTML element. The BODY element is contained within the HTML element hierarchy. This hierarchy is represented in the object tree by a parent-child relationship. Body object  is a child of its parent, page object . Similarly, string object , paragraph object , and ordered list object  are children of their parent, body object . String object  corresponds with the \u201cThis is the list of employees:\u201d text string in Table One. Paragraph object  and ordered list object  correspond with the paragraph and ordered list elements, respectively, in the HTML document. Below the ordered list element is a pairing of a list item element and string element in the HTML document in Table One.","Before an HTML document is sent to the client, the HTML objects render the document. An HTML document consists of HTML statements. HTML statements define HTML elements. An HTML document defines the components of a Web page. The HTML document is sent to client browser  from HTTP Server , for example. Browser  identifies the components of the Web page by parsing the HTML document and generates the Web page.","Before the HTML document is transmitted to client browser  by HTTP server , it is generated using the object-oriented capabilities of the present invention. As previously indicated, an HTML document is defined using HTML templates created using a process such as the one illustrated by .  provides an example of a flow for processing stored templates for an HTML document.","At step , a determination is made whether all templates needed to define the HTML document have been processed. If all of the templates have been processed, processing ends at step . If all of the HTML templates have not been processed, processing continues at step  to retrieve the next stored template. At step , the template is parsed and an object tree is generated. Each object identified in the object tree corresponds to an HTML element defined in the HTML template. Each object in the tree corresponds to an object class. For each element in the HTML template, an instance of the corresponding object class is instantiated. At step , a determination is made whether all of the objects in the template's object tree have been processed. If they have, processing continues at step  to determine whether all of the HTML document's templates have been processed. If the template's object tree has not been processed, processing continues at step  to instantiate the next object in the object tree. At step , pointers to a script can be set in the instantiated object's instance variables, for example. Element attribute information is stored in the object's instance variables at step . Processing continues at step  to process any remaining portion of the object tree.","As illustrated in , a parsing routine is used at HTML document generation time. Any parser can be used with the present invention. Parsers and parsing routines can be downloaded from various sites on the Internet. The parsing process is performed during document generation to retrieve HTML element information and to generate an object tree.  provides an example of a process flow to parse a template and generate an object tree.","At step , a determination is made whether the template has been parsed. If it has, processing ends at step . If the template has not been completely parsed, processing continues at step  to parse the next element definition in the template. If, at step , a determination is made whether a syntax error exists in the element definition, processing continues at step  to raise an error condition. If an error occurs, processing ends at step . Alternatively, processing can continue to parse the rest of the template.","If no syntax error occurred, the parser proceeds to identify the type of element defined by the current element statement. At step , the object class that corresponds to the element type is identified. The object is added to the object tree at step . Processing continues at step  to determine if additional parsing is necessary.","An HTML document can also be generated without using an HTML template. An object tree can be created dynamically during runtime. PAGE object  is instantiated at runtime, for example. During processing, additional HTML objects can be instantiated and inserted into the object tree as children, grandchildren, great-grandchildren, etc. of PAGE object . For example, BODY object  is instantiated at runtime based on logic contained in an application procedure. BODY object  is inserted in the object tree as a child of PAGE object . Attributes of the BODY object can be set in the application processing. The remaining portion of the object tree in  can be created dynamically as well.","An object tree that is created dynamically without using HTML templates, or one that is created based on one or more HTML templates can be modified dynamically at runtime. Once the object tree is generated, the HTML statements of an HTML document are generated by sending a \u201ccreate\u201d message to the objects in the object tree.","There is a standard set of HTML elements that are understood by most of the Web browsers. Some Web browsers offer additional HTML elements or extensions. These extensions provide additional functionality. However, because extensions are not part of the standard HTML, one browser's HTML extension may not be interpretable by another browser.","The extensions offered by client browsers are interpreted on the client side. The present invention provides an extension to HTML that is used on the HTTP server side. The HTML extension is filtered out before a Web page is sent to a client browser. It is used to interpret an HTML template and to render an HTML document before is transmitted to the client browser. Because HTML extensions are not sent to the client browser, there is no need for a client browser to support these extensions. Thus, existing client browsers that support the standard HTML can-be used to display HTML documents using the present invention.","The present invention uses an extension to the standard HTML known as the group extension. The group extension provides the ability to combine HTML elements or statements in a single block. A name attribute of the group extension provides the ability to identify the block, or group, by name. The name attribute can be stored in a hash table. During processing, the group identity can be retrieved and used to traverse an object tree.","The group extension also ensures the scoping of named elements (i.e., elements that have a name by virtue of a name attribute). A group object maintains a hash table that includes the named elements which are its members. The group element scopes the named elements within itself. Therefore, two elements having the same name in different groups are distinguishable. Each one is scoped to its respective group. For example, a group element named \u201cNico\u201d contained within a parent group named \u201cEmployee\u201d is distinct from a group named \u201cNico\u201d within a parent group named \u201cTourist\u201d.","A declarations file is used in combination with the group extension. The declarations file contains additional definition for a group extension. An entry in the declarations file includes a label that links the entry to the group extension. The entry also declares an HTML object. That is, the class of the HTML object is defined. Properties of the HTML object can also be defined within the entry. Values for properties provided in the object class definition can be used to populate the properties in an instance of the object class instantiated for the group.","A declaration entry modifies its associated group by adding elements to the group or modifying the elements that already exist in the group. For example, an HTML object, or element, declared in the entry modifies the group by inserting itself into the group that bears the same name as the declaration entry. Property values that are declared in the declaration entry are used to modify the HTML object's properties.","An NSWTAG marker is used to identify the bounds of the group. The following is an example of a format for an HTML group extension statement using the NSWTAG marker:",{"@attributes":{"id":"p-0084","num":"0083"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<NSWTAG NAME = \u201cGREETING\u201d><\/NSWTAG>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In this example, the group, or NSWTAG extension, does not contain an HTML statement. The NSWTAG extension is identified by the <NSWTAG> and <\/NSWTAG> delimiters. The NAME portion of the extension specifies the name of the group. This name can be used to link to a declaration in a declaration file. An example of an entry contained in an external definition for \u201cGREETING\u201d is as follows:","GREETING:NSWString {value=\u201cWelcome to the Cyber Surfshop\u201d}","The group extension is associated with the declaration file entry using the name attribute in the NSWTAG extension statement. The same name is provided as a label in the declaration file. The label field of an entry is the first field in the entry and is located to the left of the colon (e.g., \u201cGREETING\u201d). To the right of the label (after the colon) in the declaration file entry is an indication of an object class. The object class field specifies the class of HTML object that is to be instantiated and inserted in the \u201cGREETING\u201d group. The \u201cNSWString\u201d specification in the \u201cGREETING\u201d entry results in the creation of an instance of the \u201cNSWString\u201d HTML object class. The NSWString class provides object cover for free-floating text. The \u201cNSWString\u201d HTML object instance inserts itself into the \u201cGREETING\u201d group.","The declaration contains a property field (i.e., delimited by brackets). The property field, value, is used to initialize a property in the \u201cNSWString\u201d HTML object. The value field contains the text that is to be inserted into the HTML document. When the \u201cGREETING\u201d group portion of the object is rendered, a \u201ccreate\u201d message is sent to the \u201cGREETING\u201d group object. It does not generate any HTML statements in the HTML document. However, it sends a \u201ccreate\u201d message to its children. As its child, the \u201cNSWString\u201d HTML object receives the \u201ccreate\u201d message. The \u201cNSWString\u201d HTML object inserts the text contained in the value property into the HTML document.","The group extension can be used to insert a block of HTML statements into an HTML document. The block of HTML statements can occur once in the HTML template. The block can also be repeated within the HTML document.  provides an example of a Web page that contains block that is repeated (i.e., a repeating subcomponent).","Web page  provides a list of a client's unread electronic mail. As displayed in Web page , a mail item  contains information about the sender (name and image), subject, and content of the mail message. Mail item  is repeated for each piece of electronic mail. A horizontal rule separates each mail item. The sender, subject, content and horizontal rule elements constitute the repeating subcomponent of Web page .","A group element acts outer block of a group of HTML elements that generate the HTML statement block (either repeating or nonrepeating). In an object tree, the group object acts as the root for the HTML objects that correspond to the HTML elements.  provides an example of the object tree that is symbolic of the repeating subcomponent of Web page  of . The group object  is the parent of the objects  contained within the group. Each of the objects  contained within the group are children of group object . The children of group object  (i.e., objects ) can be repeated to handle the number of mail items to be displayed to the client.","In addition to defining the root of a repeating component, the group extension can be used to define the root of a subtree. The subtree can be combined with other trees or subtrees to generate a complete object. The combined object tree can be used to render a Web page. Thus, for example, Web page  may be defined in two separate HTML templates. One template defines the repeating portion and the other defines the non-repeating portion.  provides the object tree for the HTML template that defines the repeating portion of Web page . The group extension can be defined in both templates such that the two templates can be combined to generate a single HTML document.","Group extension scan be nested in the same way that HTML elements are nested within each other. An outer group provides scoping for an inner group. Therefore, a parent group object provides scoping for its children. Table Two provides an example of HTML that includes an NSWTAG extension.",{"@attributes":{"id":"p-0094","num":"0093"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}},"thead":{"row":[{"entry":"TABLE TWO"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<HTML>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<NSWTAG NAME=\u201cSELECT_FORM\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<FORM>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},". . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<NSWTAG NAME=\u201cSAILBOARDS\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"224pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<NSWTAG NAME=\u201cCHECK\u201d><INPUT TYPE=\u201ccheckbox\u201d><\/NSWTAG>"]},{"entry":[{},"<NSWTAG NAME=\u201cNAME\u201d><\/NSWTAG>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"238pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/NSWTAG>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},". . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"252pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/FORM>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/NSWTAG"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},". . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/HTML>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The first NSWTAG extension provides an identifier for the block containing the form element. The NSWTAG statement includes a name attribute, \u201cSELECT_FORM\u201d, to identify this block, or group. Within the \u201cSELECT_FORM\u201d block, a \u201cSAILBOARDS\u201d NSWTAG extension provides an identifier for a repeating subcomponent of the HTML. There are two NSWTAG extensions within the repeating subcomponent (i.e., \u201cCHECK\u201d and \u201cNAME\u201d). An input HTML element is nested within each of these NSWTAG extensions.","The declarations file that is associated with the HTML in Table Two contains further definition for the NSWTAG extensions. For example, the outer NSWTAG extension (i.e., \u201cSELECT_FORM\u201d) has the following associated entry in the declarations file:","SELECT_FORM:NSWForm {action=onSelection( )};","The label portion of the declaration file entry (i.e., \u201cSELECT_FORM\u201d) links the entry with the NSWTAG extension in the HTML template having the same name. The next field in the entry (i.e., located to the right of the colon) indicates that an instance of the NSWForm object class should be instantiated and inserted within the SELECT_FORM group object. Following the element\/object specification, the entry includes a value for a property or attribute of the NSWFORM object. That is, the action attribute is assigned the value of \u201conSelection( )\u201d. The \u201conSelection( )\u201d value indicates the procedure to invoke in the script associated with the HTML document when an action is taken by the client, for example.","The NSWTAG extension named \u201cSAILBOARDS\u201d is contained within the SELECT_FORM group. It also begins a repeating subcomponent. An example of the declarations file entry associated with the \u201cSAILBOARDS\u201d NSWTAG extension is as follows:","SELECT_FORM.SAILBOARDS:NSWRepetition (list=sailboards; item=sailboard;","The label in the declarations file entry specifies that the entry is associated with the \u201cSAILBOARDS\u201d group that is within the SELECT_FORM group. The entry further indicates that the \u201cSAILBOARDS\u201d group is a repetition group. The \u201cSAILBOARDS\u201d group can cause a block of HTML statements to be repeated in the HTML document. The NSWRepetition specification in the entry indicates that an repetition object should be instantiated to process the repeating subcomponent. The repetition object can contain HTML objects that generate a multiple occurrences of an HTML statement block. The number of times, N, that the block is repeated is based on data that is to be loaded into the HTML (e.g., list of sailboards).","The list attribute specified in the \u201cSELECT_FORM.SAILBOARDS\u201d declarations file entry points to a container object (i.e., object that holds other objects), \u201csailboards\u201d. The item attribute points to the information to be retrieved to populate the repeating subcomponent for the \u201cSAILBOARDS\u201d repetition group.","The HTML template and the declarations file contains entries that further define the \u201cSELECT_FORM.SAILBOARDS\u201d repetition group. Two group extensions are contained within the \u201cSELECT_FORM.SAILBOARDS\u201d nested group structure in the HTML template. These groups, \u201cCHECK\u201d and \u201cNAME\u201d, have the following declarations, respectively:",{"@attributes":{"id":"p-0104","num":"0103"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"SELECT_FORM.SAILBOARDS.CHECK:NSWInput {value=sailboard,"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return=selectionArray};"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"SELECT_FORM.SAILBOARDS.NAME:NSWString {value=sailboard};"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"An object of class \u201cNSWInput\u201d is instantiated based on the specification in the \u201cCHECK\u201d NSWTAG statement and the \u201cSELECT_FORM.SAILBOARDS.CHECK\u201d declaration file entry. It inserts itself within the \u201cSELECT_FORM.SAILBOARDS.CHECK\u201d nested group.","Preferably, property values of the newly instantiated HTML object are retrieved from its corresponding declaration. However, property information can be defined in the HTML template. For example, the \u201cSELECT_FORM.SAILBOARDS.CHECK\u201d group HTML element in the HTML template specifies the type property (i.e., \u201ctext) for the NSWInput HTML object. This property could have been specified in the corresponding declaration.","The \u201cSELECT_FORM.SAILBOARDS.CHECK\u201d declaration contains property information. The \u201cvalue\u201d attribute points to a sailboard object that contains the name of the first\/next sailboard to populate the repeating subcomponent in the HTML document. The return attribute specifies the variable, \u201cselectionArray\u201d into which an input value is pushed when the HTML document returns from the client. The HTML object that is instantiated from the \u201cSELECT_FORM.SAILBOARDS.CHECK\u201d declaration generates an INPUT HTML statement of type \u201ccheckbox\u201d when it is receives the \u201ccreate\u201d message.","The \u201cSELECT_FORM.SAILBOARDS.NAME\u201d declaration file entry identifies the NSWString object class. An NSWString object is instantiated and inserted into the SELECT_FORM.SAILBOARDS\u201d nested group. The \u201cNSWString\u201d object generates a string that is equal to the value of the first\/next sailboard.","The NSWTAG extension can be replaced using data stored in properties of the object(s) associated with the HTML element and NSWTAG extension. Table Three provides an example of HTML including NSWTAG extensions contained within an ordered list HTML element. The NSWTAG extensions provide associations to entries in the declarations file that point to data stored in object properties.",{"@attributes":{"id":"p-0110","num":"0109"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":[{"entry":"TABLE THREE"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<HTML>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<NSWTAG NAME=\u201cSELECT_FORM\u201d>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<FORM>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},". . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<OL>"]},{"entry":[{},"<NSWTAG NAME=\u201cWEBPEOPLE\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<NSWTAG NAME=\u201cFN\u201d><INPUT TYPE=\u201ctext\u201d><\/NSWTAG>"]},{"entry":[{},"<NSWTAG NAME=\u201cLN\u201d><INPUT TYPE=\u201ctext\u201d><\/NSWTAG>"]},{"entry":[{},"<P>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/NSWTAG>"]},{"entry":[{},"<\/OL>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},". . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/FORM>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/NSWTAG"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},". . ."]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/HTML>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"A \u201cWEBPEOPLE\u201d NSWTAG extension is contained within the \u201cSELECT_FORM\u201d NSWTAG extension. The \u201cWEBPEOPLE\u201d NSWTAG extension includes two nested group HTML elements. Associated with each HTML group elements is a corresponding declaration file entry. The following provides an example of declaration file entries for the \u201cWEBPEOPLE\u201d, \u201cFN\u201d, and \u201cLN\u201d NSWTAG extensions, respectively:",{"@attributes":{"id":"p-0112","num":"0111"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"SELECT_FORM.WEBPEOPLE:NSWRepetition {list=web_dept; item="},{"entry":"employee};"},{"entry":"SELECT_FORM.WEBPEOPLE:FN:NSWInput {value=employee.fn};"},{"entry":"SELECT_FORM.WEBPEOPLE.LN:NSWInput {value=employee.ln};"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The \u201cWEBPEOPLE\u201d declaration file entry indicates that the \u201cWEBPEOPLE\u201d NSWTAG extension is a repeating subcomponent or group of HTML. Group objects are instantiated for each. When the HTML document is rendered, the \u201cWEBPEOPLE\u201d group object sends a \u201ccreate\u201d message to the \u201cFN\u201d and \u201cLN\u201d group objects. The \u201cFN\u201d and \u201cLN\u201d group objects send a \u201ccreate\u201d message to the two \u201cNSWInput\u201d objects instantiated as a result of the \u201cSELECT_FORM.WEBPEOPLE.FN\u201d and \u201cSELECT_FORM.WEBPEOPLE.LN\u201d declarations. The declarations specify the data associated with the \u201cfn\u201d and \u201cln\u201d properties of an employee object. The \u201cNSWInput\u201d objects generate HTML statements in the HTML document using the values of the \u201cfn\u201d and \u201cin\u201d properties of the employee object.","The \u201cFN\u201d and \u201cLN\u201d groups are contained within the \u201cWEBPEOPLE\u201d group. The \u201cWEBPEOPLE\u201d group is a repetition group. Therefore, \u201cFN\u201d and \u201cLN\u201d groups can be activated multiple times to generate HTML statement blocks within the HTML document.","The name property of the group, or NSWTAG, extension provides the ability to identify the group and the statements contained within the group. During parsing, a name property associated with a group can be stored in a hash table. During processing, an object can be located by traversing the object tree. Preferably, however, one object can retrieve group names from the hash table to locate another object within the object tree.  modifies the flow provided in  to include steps to add tag name information to a hash table.","Steps  and  are added to the flow. After the object is added to the object tree at step , a determination is made whether the parsed statement contained a name property. If there is no name property, processing continues at step  to process any remaining elements of the HTML template. If a name property is defined, processing continues at step  to store the identifier in the hash table. Processing continues at step  to process any remaining elements of the HTML template.","Thus, a method and apparatus for generating object-oriented world wide web pages is provided.",{"@attributes":{"id":"p-0118","num":"0117"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}}],"thead":{"row":[{"entry":"APPENDIX A"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Class","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["NSWHAnchor","Object cover for Anchor HTML element"]},{"entry":["NSWHCheckbox","Object cover for Input HTML element, type is"]},{"entry":[{},"\u201ccheckbox\u201d"]},{"entry":["NSWHComment","Object cover for comments"]},{"entry":"NSWHElement"},{"entry":["NSWHForm","Object cover for Form HTML element"]},{"entry":["NSWHGroup","Cover for group extension. A group is a"]},{"entry":[{},"container for other objects."]},{"entry":["NSWHImage","Object cover for Image HTML element"]},{"entry":["NSWHImageInput","Object cover for Input HTML element, type is"]},{"entry":[{},"\u201cimage\u201d"]},{"entry":"NSWHImagemapRegion"},{"entry":["NSWHInput","Abstract class for input HTML elements. All"]},{"entry":[{},"input HTML elements subclass this class"]},{"entry":["NSWHKeyValueCoding","Defines methods to maintain a dictionary of"]},{"entry":[{},"data values associated with keys. Values can be"]},{"entry":[{},"extracted from the dictionary to initialize an"]},{"entry":[{},"object, or retrieved from an object and stored"]},{"entry":[{},"in the dictionary."]},{"entry":["NSWHList","A generic container class for HTML elements"]},{"entry":[{},"that can contain other elements or plain text."]},{"entry":[{},"This class can be used for HTML elements that"]},{"entry":[{},"do not covered by another object class"]},{"entry":["NSWHListItem","Object cover for List Item HTML element"]},{"entry":"NSWHMarkedElement"},{"entry":["NSWHMenu","Object cover for Menu HTML element"]},{"entry":["NSWHOption","Object cover for Option HTML element"]},{"entry":["NSWHOrderedList","Object cover for Ordered List HTML element"]},{"entry":"NSWHPage"},{"entry":["NSWHRadio","Object cover for Input HTML element, type is"]},{"entry":[{},"\u201cradio\u201d"]},{"entry":"NSWHRectRegion"},{"entry":["NSWHRepetitionGroup","Object cover for repeating group HTML"]},{"entry":[{},"extension"]},{"entry":["NSWHReset","Object cover for Input HTML element, type is"]},{"entry":[{},"\u201creset\u201d"]},{"entry":["NSWHSelect","Object cover for Select HTML element"]},{"entry":["NSWHString","Object cover for free-floating HTML text"]},{"entry":["NSWHSubmit","Object cover for Input HTML element, type is"]},{"entry":[{},"\u201csubmit\u201d"]},{"entry":["NSWHText","Object cover for Input HTML element, type is"]},{"entry":[{},"\u201ctext\u201d"]},{"entry":["NSWHTextArea","Object cover for TextArea HTML element"]},{"entry":"NSWHParser"},{"entry":["NSWHUnknownElement","Object cover for Unordered List HTML"]},{"entry":[{},"element"]},{"entry":["NSWHUnorderedList","Object cover for Input HTML element"]},{"entry":["NSWHUrl","Object cover for Uniform Resource Locator"]},{"entry":["NSWHUrn","Object cover for URN"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 6B","FIG. 6A"]},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 7B"}]},"DETDESC":[{},{}]}
