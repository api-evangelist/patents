---
title: Automated addition of accessiblity features to documents
abstract: A method includes analyzing a first document to identify a first set of one or more tags and responsive to identifying the first set of one or more tags: automatically producing a second document based in part on first set of one or more tags, where the second document includes one or more accessibility features that were not in the first document.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09268753&OS=09268753&RS=09268753
owner: APOLLO EDUCATION GROUP, INC.
number: 09268753
owner_city: Phoenix
owner_country: US
publication_date: 20111024
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND","DETAILED DESCRIPTION","Overview","Accessibility Features","Inaccessible Features","System Architecture and Functionality","Document Modifier","Document Modification Examples","Document Modification by a Server Machine","Document Modification by a Client Machine","Document Modification by a Server Machine and a Client Machine","Document Modification Steps","Document Analysis","Document Production","Hardware Overview"],"p":["The present invention relates to document accessibility in general. More specifically, the invention relates to automatically modifying a document to improve document accessibility.","The approaches described in this section are approaches that could be pursued, but not necessarily approaches that have been previously conceived or pursued. Therefore, unless otherwise indicated, it should not be assumed that any of the approaches described in this section qualify as prior art merely by virtue of their inclusion in this section.","People with disabilities use electronic documents (for example, pdfs, web pages, word processing documents, or spreadsheet documents) with the help of assistive technologies that identify the content of the electronic documents. Assistive technologies, as referred to herein, include any software and\/or hardware that interprets information for presenting to a user. Examples of assistive technologies include, but are not limited to screen readers, text to speech software, digital book players, Braille displays, Braille embossers, and electronic note takers. Assistive technologies convey information using visual, audio, or touch stimuli. For example, assistive technology such as a screen reader may be configured to read out the contents of a web page that are normally displayed to a user when the web page is rendered by a web browsing application.","However, assistive technologies may not properly be able to identify the content within a document if the document is not designed for interpretation by assistive technologies. For example, a Hyper Text Markup Language (HTML) document includes elements such as a table that is formatted with tags <tr>, <td>, or <th>. Some screen readers are unable to distinguish these HTML tags that format the table from table values that are displayed when the HTML document is rendered by a web browsing application. As a result, screen readers read the tags out loud, as if the tags were part of the normal displayed textual content of the document, for a user with a visual disability. Screen readers are unable to determine a proper sequence in which the table values should be read to sensibly convey the content to a user, or unnecessarily read out layout information such as \u201ctable with two columns and one row\u201d to a user.","In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding. It will be apparent, however, that one or more embodiments may be practiced without these specific details. In other instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring one or more embodiments.","Several features are described hereafter that can each be used independently of one another or with any combination of the other features. However, any individual feature might not address any of the problems discussed above or might only address one of the problems discussed above. Some of the problems discussed above might not be fully addressed by any of the features described herein. Although headings are provided, information related to a particular heading, but not found in the section having that heading, may also be found elsewhere in the specification.","Methods for automatically modifying documents to improve document accessibility are provided, in accordance with one or more embodiments. Modifying a document to improve document accessibility refers to modifications which result in proper or better interpretation by an assistive technology, or which result in improving a user's ability to understand the content of a document.","Documents that are not designed for accessibility by assistive technologies are good candidates for automatic modification. For example, documents that do not conform to the guidelines from the Web Accessibility Initiative-Accessible Rich Internet Applications (WAI-ARIA) may not be designed for accessibility. Documents that include some accessible features and lack other accessible features are good candidates for automatic modification to improve document accessibility.","In one embodiment, methods for automatically producing a document include find and replace methods which replace text within a document with alternate text that improves document accessibility. Methods for automatically producing a document include capturing data that is displayed to a user from a first document and writing a new document which displays substantially the same data but improves the document accessibility. Methods for automatically producing a document perform the production at the server side, the client side, or a combination of both.","Although specific components are recited herein as performing the method steps, in other embodiments, agents or mechanisms acting on behalf of the specified components perform the method steps. Further, although one or more embodiments are discussed with respect to components distributed over multiple systems (for example, a browser on a client machine and a document modifier on server), other embodiments include systems where all components are on a single system (for example, modify documents stored on a personal computer for display on the personal computer). Furthermore, embodiments are applicable for dynamically modifying any set of documents (for example, obtained over a network, a local machine, a server, a peer machine, within a software application, etc.).","While specific embodiments are described in which documents are automatically modified, the techniques described herein are not limited to the disclosed embodiments, and the techniques described herein may be applicable to other embodiments.","As shall be explained in detail hereafter, techniques are provided in which \u201caccessibility features\u201d are automatically added to documents to improve the accessibility of the documents. As used herein, an accessibility feature is any feature that improves a user's ability to understand the content of a document. For example, accessibility features improve a user's ability to understand the content of a document by:\n\n","Referring to , accessibility features () may be particular tags which, when added to a document, allow for proper interpretation of the document by assistive technologies. For example, accessibility features () correspond to formatting, styles, or other markup that can be applied to one or more elements within a document. Accessibility features () correct one or more problems associated with inaccessible features described below. While  illustrates a system () in which accessibility features () are stored separately, in a data repository (), from modified documents (), in alternative embodiments the accessibility features () are not separately stored in the data repository ().","In an embodiment, accessibility features () correspond to metadata, describing content in a modified document (), that can be read by software and communicated to a person with disabilities (for example, via a Braille terminal or an audio readout). In an example, the metadata includes the content that is displayed when a web page is rendered without including any formatting tags that are not displayed when the web page is rendered.","In an embodiment, accessibility features () corresponds to a formatting of content within a document () or a modified document () which is designed for a particular assistive technology or recognizable by an assistive technology. In an example, an accessibility feature () corresponds to a formatting of a table using HTML formatting tags such as <div> or <span> which can be used to dictate the manner in which a particular screen reader reads out table values. The screen reader skips read out of <div> and <span> tags because the tags are recognized as formatting tags. Furthermore, a screen reader may interpret the content for read out based on <div> and <span> tags that conveys an accurate understanding of the table to a user instead of reading out table cells in a possibly improper sequence.","Other examples of accessibility features () include, but are not limited to, text alternatives for non-text content, using a minimum font size, using colors which distinguish the foreground from the background, and making all functionality of a document available from a keyboard.","In an embodiment, accessibility features () corresponds to code (for example, JavaScript) which when executed adds other accessibility features () to the document () to produce the modified document (). For example, accessibility features () correspond to code which extracts content from a document with formatting tags that are not properly interpreted by assistive technologies. The accessibility features () correspond to code which uses the extracted content to produce a modified document () with different formatting tags than the original formatting tags. The modified document () produced by the assistive technologies may use different formatting tags that are recognizable to assistive technologies and that present the content in the same manner as the original formatting tags.","In an embodiment, the accessibility feature () is code that reformats the content of a document to be displayed differently. For example, the code changes the color or size of a font to make text easier to read by a visually impaired reader. The code used to convert the document () to modified document () is within the document () itself or separate from the document ().","An \u201cinaccessible feature\u201d, as used herein, refers to content or formatting which cannot be properly interpreted by one or more assistive technologies for presentation to a user. For example, an assistive technology such as a screen reader is designed for reading out the content from a HTML document that is displayed when the HTML document is rendered by a browser application and designed for not reading out HTML formatting tags that are used for formatting of the displayed content. However, a particular HTML document includes some HTML formatting tags that are not recognized, by the screen reader, as formatting tags that are not to be read out. As a result of not recognizing the formatting tags, the formatting tags are read out by the screen reader as a portion of the displayed content. In this example, the HTML formatting tags are referred to as inaccessible features since the screen reader does not recognize the HTML formatting tags and reads out the HTML formatting tags as displayed content.","In an embodiment, an inaccessible feature corresponds to one or more elements that lack a label or a description that can be accessed by an assistive technology. For example, a displayed line on a web page includes text, followed by a text field for user input, followed by additional text. A screen reader reads out the text, the additional text, and lastly the text field based on the sequence in which the elements appear in the document or using some other ordering method. The information conveyed to the user in this example results in an improper understanding of the displayed line by the user. The information may not convey the relationship between different objects on a displayed line, for example, relationship between labels and other objects. In an example, an inaccessible feature corresponds to a link in a web page without a title for readout by a screen reader.","In an embodiment, an element without an \u201cid\u201d or class is referred to as an inaccessible feature because the lack of the id or class prevents code (for example JQuery or JavaScript) to refer to the element or prevents the use of cascading style sheets for formatting purposes (for example, to increase the font size for all text or to provide additional context or metadata).","In an embodiment, an inaccessible feature corresponds to a design component that is interpreted and presented by an assistive technology when that design component should not be presented by the assistive technology. In another embodiment, an inaccessible feature refers to a component that is interpreted and not presented by an assistive technology when that design component should be presented by the assistive technology. Design components that should or should not be presented to a user are determined based on user preferences, definition by a programmer or administrator, based on the context of the page, or based on other criteria. In an example, an image separating two sections on a web page or a table used only for data layout purposes in a HTML document should not be presented to a visually impaired user based on user preferences. The design component is referred to as an inaccessible feature because an assistive technology such as a screen reader is not able to determine based on the information within the document that the design component is not to be presented to a user.","In another example, an inaccessible feature corresponds to one or more components of a table in a HTML document. The components do not provide enough information for a screen reader to read out the table values of a table in a sequence that would properly convey the description of the table to a user. Table values read out of sequence result in a misunderstanding by the user with regard to which table values are in which rows or columns, or with regard to which table values are associated with which other table values.","In another example, an inaccessible feature corresponds to one or more elements within a document () that cannot be navigated to by a user of the document (). For example, a particular checkbox within a HTML document () can only be checked by a mouse click. In this example, the particular checkbox is inaccessible to a user limited to the keyboard input. The user may be disabled and\/or unable to use the keyboard or the user may be operating a device such as a cell phone with limited functionality. Accordingly, an inaccessible feature is inaccessible due to user disability or due to environmental restrictions such as device software or device hardware limitations. In another example, an inaccessible feature corresponds to navigation between interface elements that do not allow the use of a keyboard or other input tool selected by a user.","Although a specific computer architecture is described hereafter, other embodiments are applicable to any architecture that can be used to automatically add one or more accessibility features to documents.",{"@attributes":{"id":"p-0032","num":"0034"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","102","110"]},"In an embodiment, the client machine () corresponds to any system used for presenting a document () or a modified document () to a user in an audio, visual, or touch (for example, Braille) format. Examples of client machines () include, but are not limited to desktop computers, laptops, tablets, mobile phones, personal digital assistants (PDAs), book readers, and\/or other digital computing devices. As shown in example system (), the client machine () includes one or more of: a browser (), an assistive technology (), or any another application used for presenting information within a document to a user. The client machine () may also include one or more of: the data repository () and the document modifier () that are illustrated, for purposes of explanation, as implemented on the server machine ().","In an embodiment, the browser () corresponds to any application that can render contents from a document for display to a user. A browser () is illustrated and used as an example of software that presents content to a user. Any other hardware or software application that presents content from a document to a user in an audio, visual, or touch format may be used instead of or in addition to the browser (). For example, a pdf reader is used for displaying content from a pdf document or a spreadsheet application is used to present data from a spreadsheet document. Examples described herein with relation to a specific application for presenting content are equally applicable to other applications that present content.","In an example, the browser () corresponds to a web browser which includes functionality to request a web page, obtain the web page, and render the web page for display to a user. In another example, the browser () modifies a web page received from a server to obtain a modified web page, and renders the modified web page for display to a user.","In an embodiment, an assistive technology () illustrated as implemented on the client machine (), includes assistive, adaptive, and rehabilitative software and\/or hardware for people with disabilities. Assistive technologies enable people to perform tasks that the people were formerly unable to accomplish, or had great difficulty accomplishing, by providing enhancements to or changed methods of interacting with the technology needed to accomplish such tasks. Examples of assistive technology () include text-to-speech tools that read out the text being displayed on a screen. In another example, an assistive technology () converts text or audio in a particular language to text or audio in a different language. An assistive technology magnifies the contents of a document, highlight text, modify font sizes and colors, or performs other functions which make a document easier to access. In another example, an assistive technology provides output to a Braille device.","In one or more embodiments, the assistive technology () is implemented as a standalone application or as a component of another application (for example, as a browser plug-in or a toolbar component). In an example, the assistive technology () is implemented as a component of an operating system. The system () may include an assistive technology () without the use of a browser (). Product examples of assistive technologies include, but are not limited to, Job Access for Windows and Speech (JAWS) by Freedom Scientific, Dragon Naturally Speaking by Nuance Communications, NonVisual Desktop Access (NVDA), ChromeVox by Google Corporation, VoiceOver by Apple Corporation, Supernova by Dolphin Computer Access, Edbrowse by Karl Dahlke, Spoken Web by Ehal Shalom, Fire Vox by Charles L. Chen, 95Reader by SSCT, COBRA by BAUM Retec, Linux Screen Reader by GNOME\/Linux, Virtual Vision by MicroPower, and ZoomText by Ai Squared.","In an embodiment, the server machine () corresponds to any device that is communicatively coupled with the client machine () and sends data to the client machine (). The server machine () sends the data in response to receiving one or more requests from the client machine ().","In an embodiment, the server machine () includes a data repository () storing one or more of: documents (), modified documents () and accessibility features (). The data repository () corresponds to any data storage device (for example, local memory on the server machine (), web servers connected over the internet, machines within a local area network, a memory on a mobile device, local memory on the client machine (), etc.). In one or more embodiments, access to the data repository () is restricted and\/or secured. As such, access to the data repository () requires authentication using passwords, secret questions, personal identification numbers (PINs), biometrics, and\/or any other suitable authentication mechanism. Those skilled in the art will appreciate that elements or various portions of data stored in the data repository () may be distributed (for example, stored on client machine () or at other servers). In one or more embodiments, the data repository () includes flat, hierarchical, network based, relational, dimensional, object modeled, or data files structured otherwise. In an example, data repository () is maintained as a table of a SQL database. In addition, data in the data repository () is verified against data stored in other repositories.","In an embodiment, documents () correspond to any files stored in memory (for example, on the server machine () or client machine ()). Documents () include, but are not limited to, pdfs, web pages, word processing documents, spread sheet documents, slides, images, video files, etc. Documents () are requested by an application executing on a client system (). For example, a document () corresponding to a web page is requested by browser () executing on the client system ().","In an embodiment, documents () include documents that have at least one inaccessible feature. In an embodiment, documents () are modified by one or more components of system () to include an accessibility feature (). Documents () that are modified by one or more components of system () to include an accessibility feature () are referred to herein as modified documents (). Documents () with one or more accessibility features () are modified to include additional accessibility features (). Modified documents () also include new documents that are created using documents ().","In an embodiment, the document modifier () corresponds to hardware and\/or software that produces modified documents () by adding one or more accessibility features () to documents (). In one or more embodiments, the document modifier () adds additional accessibility features to a document () that already has one or more accessibility features ().","In an example, the document modifier () modifies the document () by directly converting the document () to an accessibility-enabled document or adding code to the document () which when executed converts the document to an accessibility-enabled document. An accessibility-enabled document is a document that has been modified to include information that improves a user's understanding of the document. In an example, the document modifier () modifies a web page by adding JQuery and\/or JavaScript which when executed converts the web page into an accessibility-enabled web page.","The code executed by the document modifier () to add one or more accessibility features () is included within the document () or stored separately from the document ().","In an embodiment, modifying a document includes making one or more changes to a document () to obtain a modified document (). The modified document () is stored in addition to the original document () or instead of the original document (). Modifying a document includes producing a new document based on the original document (). For example, modifying a document includes analyzing the contents of the original document () and creating a new document based on the analysis of the contents of the original document (). Modifying a first document () to obtain a second document may be referred to herein as producing the second document.","Each of these components described above may be located on the same device or may be located on separate devices coupled by a network (e.g., Internet, Intranet, Extranet, Local Area Network (LAN), Wide Area Network (WAN), etc.), with wire and\/or wireless segments. In one or more embodiments, the example system () is implemented using a client-server topology. The example system () itself is an enterprise application running on one or more servers, a peer-to-peer system, or resident upon a single computing system. In one or more embodiments, the example system () is accessible over a network connection (not shown), such as the Internet, by one or more users. Information and\/or services provided by the example system () may also be stored and accessed over the network connection.",{"@attributes":{"id":"p-0047","num":"0049"},"figref":["FIG. 2A","FIG. 2B","FIG. 3A","FIG. 3B","FIG. 2A","FIG. 2A"],"b":"202"},"When a HTML webpage with the original HTML code () is rendered by a browser, the data is shown in a table format. In an example, a particular screen reader application used by a blind user to surf the HTML webpage reads out text recited in screen reader readout A () as presented in . In this example, the layout table is used for formatting purposes and is not useful for a blind user of a screen reader. However, the particular screen reader, when reading out the displayed contents rendered by a browser, reads out table layout information such as \u201ctable with two columns and four rows\u201d and \u201ctable end\u201d. This table information should not have been read out by the particular screen reader to a blind user because the table is intended for layout purposes and clutters the other information presented to the blind user.","The original HTML code () is modified in accordance with one or more embodiments to produce accessibility-enhanced HTML code () as illustrated in . The accessibility-enhanced HTML code () which is based on the original HTML code () presents the same information as the original HTML code () when rendered by a browser. A screen reader playing an audio readout of a rendered webpage, which includes the accessibility-enhanced HTML code (), reads out text recited in screen reader readout B (). The text recited in screen reader readout B () does not include the table information included in screen reader readout A () and accordingly, does not clutter the information provided to a blind user. The accessibility-enhanced HTML code improves a user's ability to understand the content of the webpage.","In an embodiment, the document modifier () is implemented on the server machine (). In an example, the document modifier () is an application or a component of an application that modifies one or more documents () stored on the server machine () to produce modified documents (). The modified documents () are stored on the server, by the document modifier, as accessibility-enabled documents instead of or in addition to the original documents ().","In an embodiment, the document modifier () is executed on the server machine () in response to receiving a request for a document from the client machine (). In an example, the server machine () receives a request for a particular document (). In response to the request, a document modifier () on the server machine () determines that the particular requested document () is not accessibility enabled during an analysis of the particular requested document (). The document () is analyzed to identify tags that are not recognizable by assistive technologies (). The server machine () executes the document modifier () to produce a modified document () which is an accessibility-enabled version of the particular requested document (). In response to receiving a request from the client machine () for the particular document (), the server machine () sends the modified document ().","In an embodiment, the request received by server () from any client machine () indicates whether or not an accessibility-enabled document is requested. The server machine () returns the original document () or an accessibility-enabled document (for example, the modified document ()) depending on whether an accessibility-enabled document is requested. In an example, the client machine () requests an accessibility-enabled document based on the preferences of a user of the client machine (). For example, user preferences identify a particular disability of a user of the client machine (). Based on the particular disability of the user, the client machine () or an application executing on the client machine () requests a document which can be interpreted by a specific assistive technology () designed for that particular disability.","In an embodiment, the document modifier () is implemented on the client machine (). For example, the document modifier () is an application that receives requested documents () from the server () and converts the documents () to modified documents () for storing on the client machine () or for immediate use on the client machine ().","In an embodiment, the document modifier () is implemented as a component of an application that provides access to the modified document (). In an example, the document modifier () is implemented within a browser (). The browser () receives a request from a user to display a particular document (). The browser () then requests and obtains the particular document () from the server machine (). Subsequent to obtaining the document (), the document modifier () in the browser () converts the document () to a modified document () that is to be rendered for display. The browser () then renders the modified document () for display while a screen reader interprets the modified document () to extract information for presentation to a user.","In an embodiment, the document modifier () is activated in response to a user command. In an example, a document () is displayed by a browser () executing on the client machine (). Subsequent to the display by the browser (), the user selects an accessibility option (for example, by selecting an accessibility button on a toolbar) to make the document () accessibility-enabled. In response to the user selection, the document modifier () executes a script for adding accessibility features () to document () for producing a modified document (). The script further calls a text-to-speech procedure to read out the text from the modified document () while document () is still being displayed by the browser (). Alternatively, the browser () renders the modified document () for display and a screen reader automatically reads out the contents of the modified document () in response to display of the modified document () by the browser ().","In an embodiment, document modifiers () are implemented on both of the server machine () and the client machine (). In an example, one document modifier () is implemented as a server plugin, launched by server (), to handle an HTTP request from the client machine () for a document (). The server plugin accesses the document () from a database at the server () and adds JQuery or JavaScript to obtain a modified document (). The JQuery or JavaScript if executed would produce an accessibility-enabled version of the document () that can be properly interpreted by a screen reader (for example, execution of the JavaScript causes adding, removing, or modifying of information based on suitability for a screen reader). The server plugin then prepares an HTTP response with the modified document () and sends the modified document () to the client machine (). A second document modifier () is implemented as a component of a browser () executing on the client machine (). The component of the browser () parses the modified document () and executes the JavaScript added by the server plugin. The execution of the JavaScript results in adding one or more accessibility features () to the modified document () that were not previously included in the document (). The browser () then renders the modified document () with the additional one or more accessibility features () for display to a user. A screen reader reads out content from the displayed document by properly interpreting the HTML and distinguishing the content that is to be read out from the formatting elements that are not be read out.",{"@attributes":{"id":"p-0057","num":"0059"},"figref":["FIG. 4","FIG. 4"]},"Initially, a document is analyzed (Step ). In an embodiment, the document is analyzed to identify inaccessible features. In an example, inaccessible features are identified by searching for text that is known to be misinterpreted by one or more assistive technologies. In a HTML document, the text to be searched may include particular HTML formatting tags or particular document elements (for example, a layout table). In another example, the identification of inaccessible features includes identifying formatting and styles for content that do not use cascading style sheets.","In an embodiment, the identification of inaccessible features is based on the functionality or capabilities of a particular assistive technology. For example, features known to be in inaccessible by a particular screen reader are identified. The screen reader is not be able to distinguish specific formatting tags from content or is not be able to present content associated with these specific formatting tags in a manner which conveys the correct information to a user. In another example, an assistive technology is not updated to recognize new keywords in a new version of a programming language or to interpret document information created by a new version of a software application.","In an embodiment, analysis of a document includes evaluating elements to determine whether the elements meet guidelines from the Web Accessibility Initiative-Accessible Rich Internet Applications (WAI-ARIA). In an example, multiple HTML elements that form a single sentence to a viewer are evaluated to determine whether \u201caria-labelledby\u201d attribute should be used and if the \u201caria-labelledby\u201d attribute is in fact being used.","In an example, an analysis of a document includes identifying form fields which require input. The analysis involves a search for a \u201c*\u201d or a red font which is customarily used to indicate a required field. If a required field is found, then a determination is made whether a \u201caria-required\u201d attribute is associated with the field for indicating to a screen reader that the field is required. If the \u201caria-required\u201d attribute is not found for a required field, the required field is flagged for modification in Step  described below.","In an example, elements are evaluated to determine whether elements have ids by which they can be referred to or have controls that are keyboard accessible. In an example, the evaluation of an element <li class=\u201ctab tab-css tabindex_true\u201d>Classroom<\/li> results in determining the element lacks an \u201cid\u201d and\/or lacks \u201caria-controls\u201d.","In an embodiment, analysis of a document includes defining an element based representation of the document, which is referred to herein as a model of the document. Defining a model of the document includes identifying one or more elements within the document for storing in a data structure. An element corresponds to a data value (for example, displayed data) or a keyword value (for example, a formatting tag). The model of the document includes element characteristics. Examples of element characteristics include, but are not limited to, an element value, the manner in which an element is presented, the manner in which an element is accessed, the manner in which an element is manipulated, or the relationship of an element to other elements. The identified elements within a model are represented as nodes within a tree data structure, a directed graph, or other suitable data structure. In an example, a model of a HTML or XML document is defined using a Document Object Model (DOM). In an example, a HTML table from a HTML document is used to generate a table object that represents the HTML table.","In an embodiment, values or properties of a table object are accessed using commands from an application programming interface. For example, a command is executed to search for table layout tags in a HTML document that indicate the beginning and end of table cells. Based on the identified table layout tags, the cell values are extracted.","In an example, a HTML document is used to generate an object with elements by traversing the HTML document using a tokenizer with HTML tags (for example, \u201c<tr>\u201d or \u201c<td>\u201d) as delimiters. Data values such as displayed text or images between a set of HTML tags are identified as a token by the tokenizer. The delimiters (for example, the HTML tags) may also be identified as tokens if the tag themselves need to be stored. The delimiters may be interpreted and delimiter information such as tag characteristics (style, position, etc.) are stored in the data structure. In an example, a title of a HTML table is stored as a parent node and the cell values within the HTML table are stored as child nodes under that parent node. In this example, the placement of a node within the tree indicates the relationship of the node with other nodes.","In an embodiment, the analysis of a first document is used to produce a second document which includes one or more accessibility features that were not included in the first document (Step ). Producing the second document is performed by one or more of: modifying the first document itself or by creating new document(s) that are separate than the first document. Any examples which refer to modifying a first document to obtain the second document may instead be implemented by creating one or more new documents. Any examples which refer to creating a second document that is separate from the first document may instead be implemented by modifying the first document to create the second document. The terms second document and modified document are used interchangeably herein.","In an embodiment, the second document is produced based on the contents of the first document. The second document is a result of replacing inaccessible features of the first document with accessible features. For example, the inaccessible features identified in Step  which include tags that are not recognized by screen readers as formatting tags are replaced by tags that are recognized by screen readers as formatting tags. The production of the second document includes implementing a find and replace function for finding each tag in a first set of one or more tags and replacing each tag with a corresponding tag in a second set of one or more tags.","In an embodiment, the second document is produced by adding classes to content within the first document. Characteristics (for example, formatting styles or triggering events) for particular classes are defined within the second document or defined using separate documents such as, for example, cascading style sheets.","In an embodiment, the second document is produced by adding an \u201cid\u201d to one or more elements so the one or more elements can be referred to by other elements. For example, an \u201cid\u201d is added to an input field so that a <label> tag can refer to the \u201cid\u201d for assignment of a label to the input field. In an example, an \u201cid\u201d value is assigned to ids in a numeric chronological order or using content in proximity of the DOM. In an example, an <h1> tag is assigned an \u201cid\u201d equivalent to the contents within the <h1> tags.","In an embodiment, the second document is produced by modifying the first document according to WAI-ARIA guidelines. For example, attributes such as \u201caria-required\u201d, \u201caria-labelledby\u201d, and \u201caria-describedby\u201d are added to provide assistive technologies with information to read out to a user. In an example, <div class=\u201capplication\u201d> is modified to <div class=\u201capplication\u201d aria-labelledby=\u201capplication_label0\u201d>.","In an embodiment, if a link has no title, then a title attribute is automatically created. In an example, HTML code <a href=\u201cthis-link.html\u201d> this is a link<\/a> is modified to add a title using HTML code <a href=\u201cthis-link.html\u201d title=\u201cthis is a link\u201d> this is a link<\/a>. In an example, if an image is used only as a design element (for example, a page divider line), then the \u201calt\u201d attribute is set to an empty string so that a screen reader does not narrate a file name of the design element.","In an embodiment, producing the second document includes using an element based representation of the first document. As described above, an element based representation of the first document includes a data structure where each node or entry within the data structure corresponds to an element in the first document. In an example, the data structure is a tree that can be traversed to produce the second document. A table represented by a tree data structure is traversed using a tree traversal algorithm which traverses each node of the tree to identify the elements within the tree and identify corresponding element characteristics. The traversal of the data structure is used to identify the relationships between different elements of the tree. Using the information in the data structure, the second document is programmatically created by adding text to a document based on information within the nodes as the nodes are traversed. Creating the second document includes using accessibility-enabled tags that were not used in the first document. For example, formatting using a layout table in a first document is recreated from a representation of the first document and using the <div> tag and <span> tag.","In an embodiment, cascading style sheets are used to format or style one or more elements within a document. For example, elements that are individually defined with different styles are reformatted using cascading style sheets.","In an embodiment, producing a second document includes modifying web pages to add one or more of: labels, fieldsets, legends, or landmarks. For example, landmarks are added to different displayed portions of a document to allow for easy traversal from one landmark to another using keyboard input such as tab or arrows. The landmarks allow a user to navigate between input fields, text, images, sections, etc. In an embodiment, labels that are read out by screen readers are associated with different landmarks so that a blind user can easily identify the currently selected portion of a document. In an embodiment, producing a second document includes implementing a shortcut (for example, ESC key) to close a window (for example, a pop up window).","In an example, an original document includes the following HTML code:",{"@attributes":{"id":"p-0076","num":"0078"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003","<div id=\u201ctabpanel1\u201d>"]},{"entry":[{},"<ul class=\u201ctablist-css\u201d>"]},{"entry":[{},"<li id=\u201ctesttabid\u201d class=\u201ctab-css\u201d>Home<\/li>"]},{"entry":[{},"<li class=\u201ctab tab-css tabindex_true\u201d>Classroom<\/li>"]},{"entry":[{},"<li class=\u201ctab-css\u201d>Library<\/li>"]},{"entry":[{},"<li class=\u201ctab-css\u201d>PhoenixConnect<\/li>"]},{"entry":[{},"<\/ul>"]},{"entry":[{},"<div>"]},{"entry":[{},"<div>"]},{"entry":[{},"<p>home tab<\/p>"]},{"entry":[{},"<\/div>"]},{"entry":[{},"<\/div>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The original document is first modified to include one or more classes:",{"@attributes":{"id":"p-0078","num":"0080"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"196pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003","<div class=\u201cdiv-tab\u201d>"]},{"entry":[{},"<div id=\u201ctabpanel1\u201d class=\u201ctabpanel\u201d>"]},{"entry":[{},"<ul class=\u201ctablist tablist-css\u201d>"]},{"entry":[{},"<li id=\u201ctesttabid\u201d class=\u201ctab tab-css selected"]},{"entry":[{},"tabindex_true\u201d>Home<\/li>"]},{"entry":[{},"<li class=\u201ctab tab-css tabindex_true\u201d>Classroom<\/li>"]},{"entry":[{},"<li class=\u201ctab tab-css tabindex_true\u201d>Library<\/li>"]},{"entry":[{},"<li class=\u201ctab tab-css tabindex_true\u201d>PhoenixConnect<\/li>"]},{"entry":[{},"<\/ul>"]},{"entry":[{},"<div class=\u201cdiv-tabpanel\u201d>"]},{"entry":[{},"<div class=\u201ctabpanel panel tabindex_true\u201d>"]},{"entry":[{},"<p>home tab<\/p> <\/div>"]},{"entry":[{},"<\/div>"]},{"entry":[{},"<\/div>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"Furthermore, ids are added for reference and the resulting accessibility-enhanced code recites:",{"@attributes":{"id":"p-0080","num":"0082"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003","<div class=\u201cdiv-tab\u201d>"]},{"entry":[{},"<div class=\u201ctabpanel\u201d id=\u201ctabpanel1\u201d>"]},{"entry":[{},"<ul class=\u201ctablist tablist-css\u201d>"]},{"entry":[{},"<li class=\u201ctab tab-css selected tabindex_true\u201d id=\u201ctesttabid\u201d aria-"]},{"entry":[{},"controls=\u201c panel0\u201d >Home<\/li>"]},{"entry":[{},"<li class=\u201ctab tab-css tabindex_true\u201d id=\u201ctab 1\u201d aria-"]},{"entry":[{},"controls=\u201ctestpanelid\u201d>Classroom<\/li>"]},{"entry":[{},"<li class=\u201ctab tab-css tabindex_true\u201d id=\u201ctab2\u201d aria-"]},{"entry":[{},"controls=\u201cpanel2\u201d>Library<\/li>"]},{"entry":[{},"<li class=\u201ctab tab-css tabindex_true\u201d id=\u201ctab3\u201d aria-"]},{"entry":[{},"controls=\u201c panel3\u201d>PhoenixConnect<\/li>"]},{"entry":[{},"<\/ul>"]},{"entry":[{},"<div class=\u201cdiv-tabpanel\u201d>"]},{"entry":[{},"<div class=\u201ctabpanel panel tabindex_true\u201d id=\u201cpanel0\u201d aria-"]},{"entry":[{},"labelledby=\u201ctesttabid\u201d tabindex=\u201c0\u201d>"]},{"entry":[{},"<p>home tab<\/p>"]},{"entry":[{},"<\/div>"]},{"entry":[{},"<\/div>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"In another example, a form is modified to improve accessibility. The original document recites:",{"@attributes":{"id":"p-0082","num":"0084"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003","<form class=\u201cform\u201d>"]},{"entry":[{},"<span id=\u201cfirstname_span\u201d>First Name:<\/span> "]},{"entry":[{},"<input type=\u201ctext\u201did=\u201cfirstname\u201d \/>"]},{"entry":[{},"<br \/>"]},{"entry":[{},"<span id=\u201clastname_span\u201d>Last Name:<\/span> "]},{"entry":[{},"<input type=\u201ctext\u201dname=\u201clastname\u201d \/>"]},{"entry":[{},"<br \/>"]},{"entry":[{},"<input type=\u201csubmit\u201d value=\u201cSubmit\u201d\/>"]},{"entry":[{},"<\/form>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The original document is modified to add classes and divs and recite:",{"@attributes":{"id":"p-0084","num":"0086"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003","<div class=\u201capplication\u201d>"]},{"entry":[{},"<form class=\u201cform\u201d> <div class=\u201cform-basic textbox\u201d>"]},{"entry":[{},"<span id=\u201cfirstname_span\u201d class,\u201cspan_form\u201d>First Name:<\/span>"]},{"entry":[{},"<input type=\u201ctext\u201d id=\u201cfirstname\u201d \/>"]},{"entry":[{},"<br \/> <\/div>"]},{"entry":[{},"<div class=\u201cform-basic textbox\u201d>"]},{"entry":[{},"<span id=\u201clastname_span\u201d class=\u201cspan_form\u201d>Last Name:<\/span>"]},{"entry":[{},"<input type=\u201ctext\u201d name=\u201clastname\u201d \/>"]},{"entry":[{},"<br \/> <\/div>"]},{"entry":[{},"<div class>\u201cform-basic submit\u201d> <input type=\u201csubmit\u201d"]},{"entry":[{},"value=\u201cSubmit\u201d\/> <\/div>"]},{"entry":[{},"<\/form> <\/div>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The document is further modified to include labels and recite:",{"@attributes":{"id":"p-0086","num":"0088"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003","<div class=\u201capplication\u201d aria-labelledby=\u201capplication_label0\u201d>"]},{"entry":[{},"<form class=\u201cform\u201d><div class=\u201cform-basic textbox\u201d>"]},{"entry":[{},"<span class=\u201cspan_form\u201d id=\u201cfirstname_span\u201d>"]},{"entry":[{},"<label for=\u201cfirstname\u201d>First Name:<\/label><\/span>"]},{"entry":[{},"<input type=\u201ctext\u201d id=\u201cfirstname\u201d>"]},{"entry":[{},"<br><\/div>"]},{"entry":[{},"<div class=\u201cform-basic textbox\u201d>"]},{"entry":[{},"<span class,\u201cspan_form\u201d id=\u201clastname_span\u201d><label"]},{"entry":[{},"for=\u201cinput1\u201d>Last Name:<\/label><\/span><input type=\u201ctext\u201d"]},{"entry":[{},"name=\u201clastname\u201d id=\u201cinput1\u201d>"]},{"entry":[{},"<br><\/div>"]},{"entry":[{},"<div class=\u201cform-basic submit\u201d> <input type=\u201csubmit\u201d"]},{"entry":[{},"value=\u201cSubmit\u201d id=\u201cinput8\u201d><\/div>"]},{"entry":[{},"<\/form><\/div>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"In another example, a document lacks particular ARIA attributes and originally recites:",{"@attributes":{"id":"p-0088","num":"0090"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003","<div class=\u201clog-aria\u201d>"]},{"entry":[{},"<h2 id=\u201cregion2Label\u201d>Log Text using Aria Live Region<\/h2>"]},{"entry":[{},"<div class=\u201clog atomic_false live_assertive relevant_additions\u201d>"]},{"entry":[{},"<!\u2014 dynamic text"]},{"entry":[{},"<\/div>"]},{"entry":[{},"<\/div>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The document is automatically modified to add the aria-labelledby, aria-relevant, aria-atomic, and aria-live attributes to recite:",{"@attributes":{"id":"p-0090","num":"0092"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["\u2003","<div class=\u201clog-aria\u201d>"]},{"entry":[{},"<h2 id=\u201cregion2Label\u201d>Log Text using Aria Live Region<\/h2>"]},{"entry":[{},"<div class=\u201clog atomic_false live_assertive relevant_additions\u201d "]},{"entry":[{},"aria-labelledby=\u201cregion2Label\u201d aria-relevant,\u201call\u201d "]},{"entry":[{},"aria-atomic=\u201ctrue\u201d aria-live=\u201cassertive\u201d >"]},{"entry":[{},"<!\u2014 dynamic text \u2192"]},{"entry":[{},"<\/div>"]},{"entry":[{},"<\/div>"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"In an embodiment, producing a second document includes automatically creating a draft document by including one or more accessibility features that were not included in the original document. The automatically created draft document is then presented to a user for manual changes, verifications, and corrections. For example, a label generated in accordance with one or more embodiments is presented to a user for approval or for editing.","Any of the steps recited above for producing a second document which includes one or more accessibility features not included in the first document may be combined with other steps for producing the second document. Multiple accessibility features are added to a document for producing an accessibility-enabled document in accordance with one or more embodiments.",{"@attributes":{"id":"p-0093","num":"0095"},"figref":"FIG. 5","b":["500","500","502","504","502","500","506","502","504","506","504","500","508","502","504","510","502"]},"Computer system  may be coupled via bus  to a display , such as a cathode ray tube (CRT), for displaying information to a computer user. An input device , including alphanumeric and other keys, is coupled to bus  for communicating information and command selections to processor . Another type of user input device is cursor control , such as a mouse, a trackball, or cursor direction keys for communicating direction information and command selections to processor  and for controlling cursor movement on display . This input device typically has two degrees of freedom in two axes, a first axis (e.g., x) and a second axis (e.g., y), that allows the device to specify positions in a plane.","According to one embodiment, documents are modified by computer system  in response to processor  executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory  from another computer-readable medium, such as storage device . Execution of the sequences of instructions contained in main memory  causes processor  to perform the process steps described herein. One or more processors in a multi-processing arrangement may also be employed to execute the sequences of instructions contained in main memory . In alternative embodiments, hard-wired circuitry may be used in place of or in combination with software instructions to implement one or more embodiments. Thus, embodiments are not limited to any specific combination of hardware circuitry and software.","The term \u201ccomputer-readable medium\u201d as used herein refers to any medium that participates in providing instructions to processor  for execution. Such a medium may take many forms, including but not limited to, non-volatile media, volatile media, and transmission media. Non-volatile media includes, for example, optical or magnetic disks, such as storage device . Volatile media includes dynamic memory, such as main memory . Transmission media includes coaxial cables, copper wire and fiber optics, including the wires that comprise bus . Transmission media can also take the form of acoustic or light waves, such as those generated during radio wave and infrared data communications.","Common forms of computer-readable media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, or any other magnetic medium, a CD-ROM, any other optical medium, punch cards, paper tape, any other physical medium with patterns of holes, a RAM, a PROM, and EPROM, a FLASH-EPROM, any other memory chip or cartridge, a carrier wave as described hereinafter, or any other medium from which a computer can read.","Various forms of computer readable media may be involved in carrying one or more sequences of one or more instructions to processor  for execution. For example, the instructions may initially be carried on a magnetic disk of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system  can receive the data on the telephone line and use an infrared transmitter to convert the data to an infrared signal. An infrared detector coupled to bus  can receive the data carried in the infrared signal and place the data on bus . Bus  carries the data to main memory , from which processor  retrieves and executes the instructions. The instructions received by main memory  may optionally be stored on storage device  either before or after execution by processor .","Computer system  also includes a communication interface  coupled to bus . Communication interface  provides a two-way data communication coupling to a network link  that is connected to a local network . For example, communication interface  may be an integrated services digital network (ISDN) card or a modem to provide a data communication connection to a corresponding type of telephone line. As another example, communication interface  may be a local area network (LAN) card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation, communication interface  sends and receives electrical, electromagnetic or optical signals that carry digital data streams representing various types of information.","Network link  typically provides data communication through one or more networks to other data devices. For example, network link  may provide a connection through local network  to a host computer  or to data equipment operated by an Internet Service Provider (ISP) . ISP  in turn provides data communication services through the worldwide packet data communication network now commonly referred to as the \u201cInternet\u201d . Local network  and Internet  both use electrical, electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link  and through communication interface , which carry the digital data to and from computer system , are exemplary forms of carrier waves transporting the information.","Computer system  can send messages and receive data, including program code, through the network(s), network link  and communication interface . In the Internet example, a server  might transmit a requested code for an application program through Internet , ISP , local network  and communication interface .","The received code may be executed by processor  as it is received, and\/or stored in storage device , or other non-volatile storage for later execution. In this manner, computer system  may obtain application code in the form of a carrier wave.","In the foregoing specification, embodiments have been described with reference to numerous specific details that may vary from implementation to implementation. Thus, the sole and exclusive indicator of what is the invention, and is intended by the applicants to be the invention, is the set of claims that issue from this application, in the specific form in which such claims issue, including any subsequent correction. Any definitions expressly set forth herein for terms contained in such claims shall govern the meaning of such terms as used in the claims. Hence, no limitation, element, property, feature, advantage or attribute that is not expressly recited in a claim should limit the scope of such claim in any way. The specification and drawings are, accordingly, to be regarded in an illustrative rather than a restrictive sense."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"p":["One or more embodiments are illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings and in which like reference numerals refer to similar elements and in which:",{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIGS. 2A","b":["2","3","3"]},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
