---
title: Use of special directories for encoding semantic information in a file system
abstract: In an enhanced file system specialized operators are provided, which consolidate contextually sensitive selections of documents from widely scattered


url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07437363&OS=07437363&RS=07437363
owner: International Business Machines Corporation
number: 07437363
owner_city: Armonk
owner_country: US
publication_date: 20010815
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENT","EXAMPLE 1","EXAMPLE 2"],"p":["This application claims the benefit of Provisional Application No. 60\/264,519, filed Jan. 25, 2001.","1. Field of the Invention","This invention relates to computer file systems. More particularly this invention relates to an improved semantically based file system, in which semantic information is encoded in the names of virtual directories.","2. Description of the Related Art","It has been recognized that static, hierarchical systems of organizing documents are inadequate to efficiently meet the needs of computer users attempting to access increasingly vast amounts of dynamically changing information. Conventional file systems are simply too unwieldy to deal with this information load in a way that is convenient to the user. They have become increasingly impractical for efficient document management. In providing component names for the user, conventional file systems thereafter attach no semantic significance to the identified names. Consequently, they are largely limited to a familiar set of functions e.g., creating a physical directory structure, storing files in a specific directory location, and retrieving the files from the same location.","It is a primary advantage of some aspects of the present invention that the functionality of a computer file system is enhanced by the attachment of additional semantic information to directory names.","It is another advantage of some aspects of the present invention that the enhanced functionality is made available within the user's normal file system environment.","It is a further advantage of some aspects of the present invention that the file system provided is interoperable with existing computer applications that utilize the computer system's applications programming interface (API).","These and other advantages of the present invention are attained by a file system, which presents a dynamic directory structure to the user, and breaks the conventional tight linkage between sets of files and the physical directory structure, thus allowing different users to see files organized in a different fashion. The present invention provides specialized operators that consolidate contextually sensitive selections of documents from widely scattered sources in a concise presentation, such as a linear list. One specialized operator, _desc, converts a hierarchical tree into a single level, and provides an exhaustive list of the elements and attributes of documents that are distributed throughout the tree. Another specialized operator, _star, provides a single level presentation, such as a linear list, of the child elements of its contextual node. The operator _star applies to the directory's immediate children, similar to a \u201cwild card\u201d. Thus, the application of the operator _star on a particular directory results in the display of that directory's grandchildren. The specialized operators are invoked by opening special directories that are presented to the user in a conventional file system interface.","In copending application Ser. No. 09\/873,084, filed Jun. 4, 2001, under attorney docket number 40394, of common assignee herewith, and herein incorporated by reference, a semantic file system is disclosed which exploits attributes encoded in an XML document. The file system presents a dynamic directory structure to the user, and breaks the conventional tight linkage between sets of files and the physical directory structure, thus allowing different users to see files organized in a different fashion. The dynamic structure is based upon content, which is extracted according to attributes defined by the XML structure. To the user, the XML-aware file system appears to be a completely conventional standard file system, and it supports any existing application that employs a standard file system applications programming interface. In addition, in some embodiments, since the XML-aware file system is built upon an existing file system, it can exploit existing support facilities, for example backup facilities.","In an important departure from the view presented by traditional hierarchical file systems, instead of showing files organized in a static directory structure, the XML-aware file system shows files organized in a dynamic hierarchy which is constructed on-the-fly. The user of the XML-aware file system is informed by the directory path as to relevant content at a particular instance in time. A directory path in the XML-aware file system is a sequence of attributes and values, and the contents of a directory are all of the XML documents that have the attributes and values named in the path. In other words, a directory path in the XML-aware file system reflects a query for a set of documents matching a set of constraints. As the path is being incrementally constructed, the user of the file system browses through a set of documents that match a partial query.","In an exemplary embodiment, the specialized operators can be implemented in the XML-aware file system that is disclosed in the above noted copending application. The specialized operators enhance the XML-aware file system, enriching it by providing improved semantic operations that result in enhanced functionality and presentation of meaningful links to files that may be desired by the user.","The invention provides a computer implemented method of information retrieval using a file system, including the steps of displaying a portion of a hierarchical tree that is representative of a repository of memorized files. The method further includes displaying a special virtual directory in each of the directories and the subdirectories of the hierarchical tree, invoking a semantic operator by selection of the special virtual directory, and displaying elements of at least a subtree of the hierarchical tree, the elements being selected by the semantic operator.","An aspect of the method includes arranging a screen display in accordance with a specification of the semantic operator.","According to an aspect of the method, the semantic operator is _desc.","According to an aspect of the method, the semantic operator is _star.","According to an additional aspect of the method, the repository of memorized files includes documents written in a markup language.","The invention provides a computer software product, including a computer-readable medium in which computer program instructions are stored, which instructions, when read by a computer, cause the computer to perform the steps of displaying a portion of a hierarchical tree that is representative of a repository of memorized files, levels of the hierarchical tree including directories and subdirectories thereunder, and displaying a special virtual directory in each of the directories and the subdirectories. The steps further include invoking a semantic operator by selection of the special virtual directory, displaying elements of at least a subtree of the hierarchical tree, the elements being selected by the semantic operator.","An aspect of the computer software product includes arranging a screen display in accordance with a specification of the semantic operator.","According to yet another aspect of the computer software product, the semantic operator is _desc.","According to still another aspect of the computer software product, the semantic operator is _star.","According to one aspect of the computer software product, the repository of memorized files includes documents written in a markup language.","The invention provides a computer implemented information retrieval system for presenting a semantically dependent directory structure of files to a user, including a file system engine that receives a file request via a file system application programming interface, and issues file system calls to an operating system. The file request specifies a file content of memorized files, wherein responsive to the file request, the file system engine returns a hierarchical tree of directories to the file system application programming interface, the directories having references to selected ones of the memorized files. The file system engine displays a special virtual directory in each of the directories, wherein the special virtual directory includes at least a portion of the hierarchical tree, the portion being selected by a semantic operator.","An aspect of the information retrieval system includes a monitor, which has a screen display arranged thereon in accordance with a specification of the semantic operator.","According to a further aspect of the information retrieval system, the semantic operator is _desc.","According to yet another aspect of the information retrieval system, the semantic operator is _star.","According to still another aspect of the information retrieval system, the memorized files comprise documents written in a markup language.","According to an additional aspect of the information retrieval system, the markup language is XML.","The invention provides a computer implemented method of information retrieval, including the steps of retrieving structural information of memorized documents according to a document type declaration that corresponds to each of the documents, retrieving elements, attributes and values of the elements and the attributes of the documents, generating a multilevel inverted index from the structural information, the elements, the attributes and the values, accepting a specification from a user, wherein the specification has members that comprise at least one of the elements, the attributes and the values. Responsive to the specification, the method includes extracting data from the multilevel inverted index that complies with at least one of the members of the specification, and displaying a hierarchical tree. Levels of the hierarchical tree include directories, wherein the directories each comprise a sequence of the members, and wherein contents of the directories and contents of subdirectories thereunder comprise selected ones of the documents possessing the specification. The method further includes displaying a special virtual directory in each of the directories, wherein content of the special virtual directory includes at least one level of the hierarchical tree, which is more deeply nested than the level of the special virtual directory in the hierarchical tree.","An aspect of the method includes invoking an operator _desc to a context node of the special virtual directory.","A further aspect of the method invoking the operator _desc also includes selecting all descendants of the context node, and displaying a list of the descendants.","According to one aspect of the method, the list is a linear list.","Another aspect of the method displaying the special virtual directory includes invoking an operator _star to a context node of the special virtual directory.","A further aspect of invoking the operator _star includes selecting all children of the context node, and displaying a list of grandchildren of the context node.","According to still another aspect of the method, the children are selected from the elements.","According to an additional aspect of the method, the children comprise selected ones of the elements, the attributes, and the values.","According to one aspect of the method, the multilevel inverted index includes a structural section that has postings of the structural information, and a words section that has postings of the values, wherein the values are words.","According to another aspect of the method, the documents are XML documents.","A further aspect of the method includes noting changes in a composition of a repository of the documents, and updating the multilevel inverted index responsive to the changes.","The invention provides a computer implemented method of information retrieval, including the steps of retrieving structural information of memorized documents according to a document type declaration that corresponds to each of the documents, wherein the documents are written in a markup language, retrieving elements, attributes and values of the elements and the attributes of the documents, generating a multilevel inverted index from the structural information, the elements, the attributes and the values, accepting a specification from a user. The specification has members that comprise at least one of the elements, the attributes and the values, responsive to the specification. The method includes extracting data from the multilevel inverted index that complies with at least one of the members, displaying a hierarchical tree, levels of the hierarchical tree including directories, wherein the directories each comprise a sequence of the members, and wherein contents of the directories and contents of subdirectories thereunder comprise selected ones of the documents possessing the specification, and displaying a special virtual directory in each of the directories, wherein content of the special virtual directory includes at least one level of the hierarchical tree, the one level being more deeply nested than the level of the special virtual directory in the hierarchical tree.","An aspect of displaying the special virtual directory includes invoking an operator _desc to a context node of the special virtual directory.","Another aspect of the method invoking the operator _desc also includes selecting all descendants of the context node, and displaying a list of the descendants.","According to a further aspect of the method, the list is a linear list.","Yet another aspect of the method displaying the special virtual directory includes invoking an operator _star to a context node of the special virtual directory.","An aspect of invoking the operator _star includes selecting all children of the context node, and displaying a list of grandchildren of the context node.","According to one aspect of the method, the children are selected from the elements.","According to another aspect of the method, the children comprise selected ones of the elements, the attributes, and the values.","According to a further aspect of the method, the multilevel inverted index includes a structural section that has postings of the structural information, and a words section that has postings of the values, wherein the values are words.","According to yet another aspect of the method, the documents are XML documents.","Still another aspect of the method includes noting changes in a composition of a repository of the documents, and updating the multilevel inverted index responsive to the changes.","The invention provides a computer software product, including a computer-readable medium in which computer program instructions are stored, which instructions, when read by a computer, cause the computer to perform the steps of retrieving structural information of memorized documents according to a document type declaration that corresponds to each of the documents, retrieving elements, attributes and values of the elements and the attributes of the documents, generating a multilevel inverted index from the structural information, the elements, the attributes and the values. The steps include accepting a specification from a user having members that comprise at least one of the elements, the attributes and the values, extracting data from the multilevel inverted index that complies with at least one of the members, displaying a hierarchical tree, levels of the hierarchical tree including directories, wherein the directories each comprise a sequence of the members, and wherein contents of the directories and contents of subdirectories thereunder comprise selected ones of the documents possessing the specification. The steps include displaying a special virtual directory in each of the directories, wherein content of the special virtual directory includes at least one level of the hierarchical tree, the one level being more deeply nested than the level of the special virtual directory in the hierarchical tree.","In an aspect of the computer software product, the steps include invoking an operator _desc to a context node of the special virtual directory.","In one aspect of the computer software product, the steps include invoking the operator _desc, selecting all descendants of the context node, and displaying a list of the descendants.","According to another aspect of the computer software product, the list is a linear list.","A further aspect of the computer software product includes invoking an operator _star to a context node of the special virtual directory.","In yet another aspect of the computer software product invoking the operator _star also includes selecting all children of the context node, and displaying a list of grandchildren of the context node.","According to still another aspect of the computer software product, the list is a linear list.","According to an additional aspect of the computer software product, the children are selected from the elements.","According to one aspect of the computer software product, the children comprise selected ones of the elements, the attributes, and the values.","According to another aspect of the computer software product, the multilevel inverted index includes a structural section that has postings of the structural information, and a words section that has postings of the values, wherein the values are words.","According to a further aspect of the computer software product, the documents are XML documents.","In yet another aspect of the computer software product the instructions further cause the computer to perform the steps of noting changes in a composition of a repository of the documents, and updating the multilevel inverted index responsive to the changes.","The invention provides a computer software product, including a computer-readable medium in which computer program instructions are stored, which instructions, when read by a computer, cause the computer to perform the steps of retrieving structural information of memorized documents according to a document type declaration that corresponds to each of the documents, wherein the documents are written in a markup language, retrieving elements, attributes and values of the elements and the attributes of the documents, generating a multilevel inverted index from the structural information, the elements, the attributes and the values, accepting a specification from a user that has members that comprise at least one of the elements, the attributes and the values, and, responsive to the specification, extracting data from the multilevel inverted index that complies with at least one of the members. The steps include displaying a hierarchical tree, levels of the hierarchical tree including virtual directories, wherein the virtual directories each comprise a sequence of the members, and wherein contents of the virtual directories and contents of virtual subdirectories thereunder comprise selected ones of the documents possessing the specification. The steps including displaying a special virtual directory in each of the virtual directories, wherein content of the special virtual directory includes at least one level of the hierarchical tree, the one level being more deeply nested than the level of the special virtual directory in the hierarchical tree.","In an aspect of the computer software product, displaying the special virtual directory includes invoking an operator _desc to a context node of the special virtual directory.","In an additional aspect of the computer software product invoking the operator, _desc also includes selecting all descendants of the context node, and displaying a list of the descendants.","According to one aspect of the computer software product, the list is a linear list.","In another aspect of the computer software product displaying the special virtual directory includes invoking an operator _star to a context node of the special virtual directory.","In a further aspect of the computer software product invoking the operator _star also includes selecting all children of the context node, and displaying a list of grandchildren of the context node.","According to yet another aspect of the computer software product, the list is a linear list.","According to still another aspect of the computer software product, the children are selected from the elements.","According to an additional aspect of the computer software product, the children comprise selected ones of the elements, the attributes, and the values.","According to one aspect of the computer software product, the multilevel inverted index includes a structural section has postings of the structural information, and a words section has postings of the values, wherein the values are words.","According to another aspect of the computer software product, the documents are XML documents.","In a further aspect of the computer software product the instructions further cause the computer to perform the steps of noting changes in a composition of a repository of the documents, and updating the multilevel inverted index responsive to the changes.","The invention provides a computer implemented information retrieval system for presenting a semantically dependent directory structure of files to a user, including a file system engine, that receives a file request via a file system application programming interface, and issues file system calls to an operating system, wherein the file request specifies a file content of memorized files. The files comprise documents written in a markup language. The system includes a parser linked to the file system engine that retrieves structural information of the documents, the parser further retrieving at least one of elements, attributes and respective values thereof from the documents. The system includes an indexer, linked to the parser, for constructing an inverted index of the elements and the attributes and the respective values thereof, wherein responsive to the file request, the file system engine retrieves postings of the inverted index that satisfy requirements of the file request, and returns a hierarchical tree of directories to the file system application programming interface, the directories having references to selected ones of the documents corresponding to the postings. The file system engine displays a special virtual directory in each of the directories, wherein content of the special virtual directory includes at least one level of the hierarchical tree, the one level being more deeply nested than the level of the special virtual directory in the hierarchical tree.","According to an aspect of the information retrieval system, the file system engine displays the special virtual directory by invoking an operator _desc to a context node of the special virtual directory.","According to another aspect of the information retrieval system, the file system engine displays the special virtual directory by the steps of selecting all descendants of the context node, and displaying a list of the descendants.","According to a further aspect of the information retrieval system, the list is a linear list.","According to yet another aspect of the information retrieval system, the file system engine displays the special virtual directory by invoking an operator _star to a context node of the special virtual directory.","In still another aspect of the information retrieval system the file system engine displays the special virtual directory by the steps of selecting all children of a context node of the special virtual directory, and displaying a list of grandchildren of the context node.","According to an additional aspect of the information retrieval system, the list is a linear list.","According to one aspect of the information retrieval system, the children are selected from the elements.","According to another aspect of the information retrieval system, the children comprise selected ones of the elements, the attributes, and the values.","According to yet another aspect of the information retrieval system, the inverted index includes a structural section that has postings of the structural information, and a words section that has postings of words of the documents.","Still another aspect of the information retrieval system includes an analyzer for updating the inverted index, wherein the analyzer analyzes additions to the memorized files.","According to an additional aspect of the information retrieval system, the parser retrieves the structural information from document type declarations of the documents.","The invention provides a computer implemented information retrieval system for presenting a semantically dependent directory structure of XML files to a user, including a file system engine, which receives a file request via a file system application programming interface and issues file system calls to an operating system, wherein the file request specifies a file content of memorized files. The system includes an XML parser linked to the file system engine, which retrieves structural information of XML documents, the XML parser further retrieving at least one of elements, attributes and respective values thereof from the XML documents. The system includes an indexer, linked to the XML parser, for constructing an inverted index of the elements and the attributes and the respective values thereof, wherein responsive to the file request, the file system engine retrieves postings of the inverted index that satisfy requirements of the file request, and returns a hierarchical tree of virtual directories to the file system application programming interface, the virtual directories having references to selected ones of the XML documents corresponding to the postings. The file system engine displays a special virtual directory in each of the virtual directories, wherein content of the special virtual directory includes at least one level of the hierarchical tree, the one level is more deeply nested than the level of the special virtual directory in the hierarchical tree.","According to an aspect of the information retrieval system, the file system engine displays the special virtual directory by invoking an operator _desc to a context node of the special virtual directory.","In still another aspect of the information retrieval system, the file system engine displays the special virtual directory by selecting all descendants of the context node, and displaying a list of the descendants.","According to an additional aspect of the information retrieval system, the list is a linear list.","According to one aspect of the information retrieval system, the file system engine displays the special virtual directory by invoking an operator _star to a context node of the special virtual directory.","In another aspect of the information retrieval system, the file system engine displays the special virtual directory by selecting all children of the context node of the special virtual directory, and displaying a list of grandchildren of the context node.","According to a further aspect of the information retrieval system, the list is a linear list.","According to yet another aspect of the information retrieval system, the children are selected from the elements.","According to still another aspect of the information retrieval system, the children comprise selected ones of the elements, the attributes, and the respective values.","According to an additional aspect of the information retrieval system, the inverted index includes a structural section that has postings of the structural information, and a words section that has postings of words of the XML documents.","One aspect of the information retrieval system includes an XML analyzer for updating the inverted index, wherein the XML analyzer analyzes additions to the memorized files.","According to another aspect of the information retrieval system, the XML parser retrieves the structural information from document type declarations of the XML documents.","In the following description, numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent however, to one skilled in the art that the present invention may be practiced without these specific details. In other instances well-known circuits, control logic, and the details of computer program instructions for conventional algorithms and processes have not been shown in detail in order not to unnecessarily obscure the present invention.","Software programming code, which embodies aspects of the present invention, is typically maintained in permanent storage, such as a computer readable medium. In a client\/server environment, such software programming code may be stored on a client or a server. The software programming code may be embodied on any of a variety of known media for use with a data processing system, such as a diskette, hard drive, or CD-ROM. The code may be distributed on such media, or may be distributed to users from the memory or storage of one computer system over a network of some type to other computer systems for use by users of such other systems. The techniques and methods for embodying software program code on physical media and distributing software code via networks are well known and will not be further discussed herein. The invention may be practiced using a general purpose computer having conventional facilities, for example a screen display.","While the teachings of the invention are disclosed with reference to an XML-aware file system, the invention is not limited to XML documents. It can be applied, for example, to documents written in other markup languages, and to other types of files from which contextual attributes either are encoded or can be derived. Moreover, there are numerous applications written for the file system applications programming interface. Those applications can operate with the present invention without any modifications whatsoever. It will occur to those skilled in the art that the teachings of the invention can be implemented in diverse file systems other than those specifically disclosed herein.","Turning now to the drawings, reference is made to , which displays a high level block diagram of an exemplary file system, which is constructed and operative in accordance with a preferred embodiment of the invention. An arrangement  allows a computer user to access stored data. The arrangement  is fully disclosed in above noted copending application. However, a brief explanation is presented herein, in order to facilitate understanding of the teachings of the present invention. In the arrangement , there is a basic underlying physical file structure , which is conventional. The file structure  can be realized by a physical file system. An XML-aware file system  forms a functional layer between the file structure  and the file system applications programming interface  that is seen by a user application . Shielded by the file system applications programming interface , the XML-aware file system  presents itself to the outside world in a completely standard fashion.","The XML-aware file system  has several components that cooperate to provide a file system applications programming interface for accessing files in a context-sensitive manner. These components include an indexer , an XML analyzer , and a file system engine .","The indexer  produces a multilevel inverted index that can support several kinds of queries. Queries that are supported include supplying all valid values in a given context, including child elements, attributes, and actual values from the files stored in the repository. An example of this type of query is, \u201cSupply all possible values of the context \/profile\/name\u201d. In other words, supply all child elements and attributes of the element \u201cname\u201d, and all the values of this element from the files themselves.","Another supported query is a request to supply all files that have a particular value in a given context. An example is the query, \u201cSupply all the files which have the word INC in the context \/profile\/name\u201d.","The conjunction of several queries is supported, for example the query \u201c\/profile\/name\/INC\/and\/profile\/ticker\u201d. This query will supply all valid values in the context \/profile\/ticker from all the files which have the word INC in their \/profile\/name element.","The XML analyzer  is responsible for updating the index created by the indexer  when newer files appear in the file structure , which is the repository of the documents. The file system engine  implements basic file system functions, and may do this by building upon an existing file system, for example by issuing basic file system calls to the operating system. A main difference of the file system engine , as compared with a conventional file system engine, is the consultation of the indexer  when information about the directory structure is required. This occurs, for example, when reading, or traversing directories. The file system engine  receives instructions from the file system applications programming interface . It then passes a directory path to the indexer , which interprets the path as a query. The indexer  returns information which enables the file system engine  to respond to the file system applications programming interface  as if a conventional directory were accessed.","The XML-aware file system  adapts the concept of semantic file systems, which is proposed in the above noted document, Semantic File Systems, and uses it in combination with information retrieval techniques in the context of XML documents. Semantic file systems attempt to gather underlying semantics of the files, and present the files to the users in virtual directories that are organized according to the file semantics in order to ease navigation. The XML-aware file system  exploits the file content to derive metadata, which is, needed in order to automatically and semantically organize the files. In order to derive the metadata, each file that is added to the file structure  has to be parsed in order to retrieve meaningful information that makes the search functions and browse functions of an XML document repository possible. The XML-aware file system  uses an XML-parser , which is associated with the XML analyzer . The XML-parser  retrieves the underlying structural information of an XML document, as well as individual elements and attributes, together with their respective values. A conventional IBM parser, XML4J, is suitable. This structural information, which is an integral part of the document according to well-known XML specifications, is used by the indexer  to construct an inverted index that supports automatic meaningful organization of documents by content. This process is completely automatic and transparent to the user.","In the currently preferred embodiment, the components of the XML-aware file system  are written in Java. However, many programming languages could be equally applied. A prototype system currently operates under the Microsoft Windows\u00ae Operating System.","Reference is now made to , which illustrates aspects of the indexer  in further detail. The description of  is to be read in conjunction with . The indexer  operates on a multilevel inverted index . The index  consists of two main portions, a structural section , and a words section . The structural section  is compliant with each underlying structure of each document  being indexed, as dictated by its respective DTD , and the words section  keeps track of all the words which appear as values in each of the documents . The structural section  maintains a list of postings  for each element of the document , and the words section  maintains a list of postings . The postings ,  include a file identification, offset and length, and are accessed from the index  when preparing responses to relevant queries.","In implementing additional enhanced functionality in the arrangement , the navigational portions of the well-known XPath standard is supported. This is believed to be a logical and practical choice, since XPath is an important standard in the XML community. The XPath standard is disclosed in the document, XML Path Language (XPath), Version 1.0. W3C\u00ae, http:\/\/www.w3.org\/TR\/1999\/REC-xpath-19991116. Use of the XPath standard has facilitated the objective of reducing the effort of locating specific XML files. Two XPath operators are currently supported: (1) the operator \u201c\/\/\u201d, herein referred to as \u201c_desc\u201d, which flattens the directory hierarchy, and (2) the operator \u201c*\u201d, herein referred to as \u201c_star\u201d, which as implemented herein, applies to the directory's immediate children, similar to a \u201cwild card\u201d. Thus, the application of the operator _star on a particular directory results in the display of that directory's grandchildren.","A special virtual directory, names _desc, appears in every physical directory that has subdirectories. This directory represents the Xpath operator \u201c\/\/\u201d. Once the user attempts to read the contents of this directory the file system engine recognizes the special operator, and rather than reading the actual physical directory on disk, it supplies a semantic response. In the particular case of the operator \u201c\/\/\u201d, the response consists of listing all the subdirectories recursively. Moreover, when one such subdirectory is accessed the file system engine recognizes that the special semantic operator appears somewhere along the path and responds accordingly.","As a specific example, assume that the user is operating in a directory named \u201ctop\u201d which has a subdirectory named \u201cgroup\u201d, which in turn has a subdirectory named \u201cgroup\u201d. Applying the _desc operator to the directory top, and then reading the contents of the directory group results in the identification of all files contained in both of the subdirectories sharing the name \u201cgroup\u201d, and their display in a combined presentation.","As explained more formally in the above noted XPath standard, the symbol \u201c\/\/\u201d is short for \/descendant-or-self::node( )\/. As implemented herein the _desc operator, invoked by the syntax \u201c\/\/\u201d, selects all descendants of the context node and presents them in a flat format, which can be a linear list, rather than the conventional hierarchical tree.","For example, the syntax \u201c\/\/olist\/item\u201d selects all the \u201citem\u201d elements in the same document as the context node that have an \u201colist\u201d parent. The syntax *\/para invokes the operator _star.","In both cases, the information presented to the user represents a flattening of the elements hierarchy of the DTD in question beginning from the element at which the user began. Each such returned element is represented as a directory, which the user can work with as with any conventional directory. For example, the user can read its contents.","The XML-aware file system  () supports a combination of browse and search navigation paradigms. Clients navigate through a directory hierarchy that specifies which content, in which context, is relevant to them at that time. A path to a directory in the XML-aware file system  is a sequence of elements and values. The content of the final directory includes all the XML documents that contain the elements and values named in the path in the correct nesting. Thus, a directory path reflects a query for a set of documents matching a set of constraints. The XML-aware file system  allows queries to be constructed incrementally. At each stage of the directory structure traversal, the XML-aware file system  presents all the valid possibilities from which the user can select, in order to continue narrowing the query. These possibilities may derive from the DTD structure, as well as from the actual document contents. The browse and search paradigms are greatly facilitated by the implementation of the operators _star and _desc.","Reference is now made to , which represents a computer monitor screen display that is generated in accordance with a preferred embodiment of the invention. The description of  is to be read in conjunction with . The arrangement  is employed in the following example, which excerpts a session. A user has issued a query that has resulted in the generation of a screen display . The screen display  includes a left pane  and a right pane , and represents the relevant portion of the output of the well-known Windows Explorer application of the Microsoft Windows\u00ae operating system. The left pane  shows a volume  \u201cmnt\u201d, a directory  named \u201cprofile\u201d, and a directory  named \u201cprofile2\u201d. The left pane  also displays a special virtual directory , named \u201c_desc\u201d, and a special virtual directory , named \u201c_star\u201d. The right pane  shows a first level expansion of the directory , and also displays a special virtual directory  named \u201c_desc\u201d and a special virtual directory  named \u201c_star\u201d.","The special virtual directory  and the special virtual directory  share the same name, but they are not identical. When the special virtual directory  is opened, its contents are generated by the application of the operator _desc to the its context node, which is the directory . When the special virtual directory  is opened, its contents are generated from the application of the operator _desc to its context node, which is the volume . The contents of the special virtual directory  include attributes and elements of the directory  and the directory .","The special virtual directory  and the special virtual directory  share the same name, but they are not identical. When the special virtual directory  is opened, its contents are generated by the application of the operator _star to the its context node, which is the directory . When the special virtual directory  is opened, its contents are generated from the application of the operator _star to its context node, which is the volume . The contents of the special virtual directory  include attributes and elements of the directory  and the directory .","Reference is now made to , which schematically illustrates a full hierarchical expansion of the directory  that would be produced by a conventional file system or the XML-aware file system  without the enhancements provided by the operators _desc and _star. The description of  is to be read in conjunction with . In  elements are shown in cross-hatched boxes, and attributes are shown in boxes having a white background. The elements and attributes are collected in the course of the operation of the file system into a single physical directory. The directory is represented in  as a hierarchical tree  having a root , in which the root  corresponds to the directory  (). The first level  is similar to the presentation in the right pane  (), except that the special virtual directory  and the special virtual directory  are not shown. The hierarchical tree  includes a second level , and an arbitrary number of more deeply nested levels, of which a third level  and a fourth level  are shown. The semantic information that is encoded in the hierarchical tree  includes elements, for example the element  named \u201cOfficer\u201d. The semantic information also includes attributes of elements, for example the attribute  named \u201cname\u201d, which is an attribute of the element .","The directory , as represented by the hierarchical tree  of , is a much more concise presentation in response to a context sensitive query than could be afforded by a conventional file system. Nevertheless, it has enough complexity to hinder the user in his search for desired information.","Reference is now made to , which represents a computer monitor screen display that is generated in accordance with a preferred embodiment of the invention. The description of  is to be read in conjunction with  and . A screen display  includes a left pane  and a right pane . The left pane  shows the directory , and its first level expansion, including the special virtual directory  and the special virtual directory . The right pane  displays a wrapped linear list , which is the result of stepping into the special virtual directory  (), thereby applying the operator _desc to the context node of the special virtual directory , which is the directory . The linear list  includes all the attributes and elements of the hierarchical tree  () in a flat format, except the context node itself. The user thus has the option of viewing the results of a query in a standard format that is presented by the XML-aware file system  () without the enhancements provided by the operator _desc. This is done simply by stepping into the directory . The user has the additional option of viewing the results in an alternative presentation by stepping into the special virtual directory , and thereby invoking the operator _desc.","Reference is now made to , which represents a computer monitor screen display that is generated in accordance with a preferred embodiment of the invention. A screen display  includes a left pane  and a right pane , and presents the response to a query that is similar to but not identical to that presented in  and . Shown on the left pane  is a volume , which is expanded on the right pane  as a list of elements . The elements  comprise the special virtual directory , named \u201c_desc\u201d, the special virtual directory , named \u201c_star\u201d, the directory , named \u201cprofile\u201d, and the directory , named \u201cvrml\u201d.","Reference is now made to , which represents a computer monitor screen display that is generated in accordance with a preferred embodiment of the invention and is an alternate presentation in response to the query associated with . The description of  is to be read in conjunction with . A screen display  includes a left pane  and a right pane . Shown on the left pane  are the volume , the special virtual directory , named \u201c_desc\u201d, the special virtual directory , named \u201c_star\u201d, and the directory . The directory  has been opened, and the elements  of its first level expansion are shown in the left pane , The elements  include a special virtual directory , named \u201c_desc\u201d, and a special virtual directory , named \u201c_star\u201d. Other elements of the directory  are also shown in the left pane , including the directory , named \u201cgroup\u201d, the directory , named \u201cStatistics\u201d, and the directory , named \u201cticker\u201d. A directory , named \u201cvrml\u201d, is present.","Reference is now made to , which represents a computer monitor screen display that is generated in accordance with a preferred embodiment of the invention. The description of  is to be read in conjunction with . A screen display  includes a left pane  and a right pane . Shown on the left pane  are the volume , and the directory . The elements  of the first level expansion of the directory  are shown in the left pane , and include the directory , a special virtual directory , named \u201c_desc\u201d, and a special virtual directory , named \u201c_star\u201d. The special virtual directory  has been opened, and the elements  of its first level expansion, shown on the right pane , include a special virtual directory , named \u201c_desc\u201d, a special virtual directory , named \u201c_star\u201d, a directory , named \u201cviewpoint\u201d, and a directory , named \u201cworldinfo\u201d. The right pane  will be discussed in further detail hereinbelow.","Referring now to , the right pane  displays the result of stepping into the special virtual directory , and thereby invoking the operator _star, which is applied to the volume , the context node of the special virtual directory . The right pane  shows all grandchild elements of the root node of the volume  that were generated by the XML-aware file system  (). The right pane  thus presents a list of elements  that are found in the first level expansion of the directory  and the first level expansion of the directory . Attributes and elements are treated identically by the operators _star and _desc.","The elements  presented in the right pane  includes directories, of which the directory , named \u201cStatistics\u201d and the directory , named \u201cticker\u201d are child elements of the directory . The directory  is a child element of the directory  (see ). While not illustrated in , in some embodiments it is possible for the elements displayed by the operator _star to be objects other than directories. This is typically the case when the operator _star produces a display of the most deeply nested level of a directory hierarchy. The right pane  presents a special virtual directory , named \u201c_desc\u201d, and a special virtual directory , named \u201c_star\u201d.","Reference is now made to , which represents a computer monitor screen display that is generated in accordance with a preferred embodiment of the invention. The description of  is to be read in conjunction with , , and . A screen display  includes a left pane  and a right pane . The left pane  is similar to the left pane  (), except now the special virtual directory  has been opened, and expanded in the right pane , thereby invoking the operator _star, which is applied to the context node, the directory .","The right pane  presents a list of elements  that are child elements of the directories  and are grandchildren elements of the directory . Descendants of the directory  are not presented in the right pane , because the directory  is not an element of the hierarchical tree whose root is the directory .","Various ones of the elements  could be revealed by expanding the individual directories  by one level one-by-one. However, such a procedure would be far more tedious than the invocation of the operator _star, which immediately reveals all the elements  in the right pane . If further in-depth examination of the hierarchical levels below the directories  and the elements  were required, the task could easily become completely impractical.","The right pane  presents a special virtual directory , named \u201c_desc\u201d, and a special virtual directory , named \u201c_star\u201d. Stepping into the special virtual directory  or the special virtual directory  would apply the operator _desc and the operator _star respectively to all the directories  that are displayed on the left pane .","Referring again to , the display presented on the right pane  represents the application of the operator _star to the directory . Thus the directories ,  are child elements of the directory , and could be alternatively shown by stepping into the directory  directly.","While this invention has been explained with reference to the structure disclosed herein, it is not confined to the details set forth, and this application is intended to cover any modifications and changes as may come within the scope of the following claims:"],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["For a better understanding of these and other objects of the present invention, reference is made to the detailed description of the invention, by way of example, which is to be read in conjunction with the following drawings, wherein:",{"@attributes":{"id":"p-0101","num":"0100"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0102","num":"0101"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0103","num":"0102"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0104","num":"0103"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0105","num":"0104"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0106","num":"0105"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0107","num":"0106"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0108","num":"0107"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0109","num":"0108"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
