---
title: Transition animation methods and systems
abstract: An exemplary method includes a transition animation system detecting a screen size of a display screen associated with a computing device executing an application, automatically generating, based on the detected screen size, a plurality of animation step values each corresponding to a different animation step included in a plurality of animation steps that are to be involved in an animation of a transition of a user interface associated with the application into the display screen, and directing the computing device to perform the plurality of animation steps in accordance with the generated animation step values. Corresponding methods and systems are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09007381&OS=09007381&RS=09007381
owner: Verizon Patent and Licensing Inc.
number: 09007381
owner_city: Basking Ridge
owner_country: US
publication_date: 20110902
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND INFORMATION","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["Mobile applications (i.e., applications configured to be executed by mobile phones, tablet computers, and other types of mobile computing devices) have become widespread and popular. However, screen sizes (i.e., pixel resolutions) and processing capabilities of mobile devices vary greatly, thereby making it difficult for mobile application developers to develop applications that have a consistent look and feel regardless of the particular mobile device being used to execute them.","For example, it is often desirable to animate transitions between different user interfaces that are displayed by a mobile application. To illustrate, it may be desirable to replace a user interface displayed within a display screen of a mobile device with a new user interface by having the new user interface \u201cslide\u201d into the display screen. This is typically accomplished by directing the mobile device to perform a series of animation steps in which the display screen is repeatedly redrawn or re-rendered. Each time the display screen is redrawn, an increasing number of pixels included in the display screen are occupied by the new user interface until the new user interface is completely displayed within the display screen.","Unfortunately, the actual number of pixels that are to be occupied by the new user interface after each animation step depends on the specific screen size of the display screen, which, as mentioned above, may vary from device to device. To remedy this problem, mobile application developers have traditionally had to hard-code the exact number of pixels to be occupied by the new user interface after each animation step is performed and\/or the speed at which each animation step is to be performed for each of a multitude of different screen sizes. Not only is this cumbersome and difficult to perform, but it requires constant updates to the mobile application over time as new mobile devices having previously unaccounted for screen sizes are developed.","Transition animation methods and systems are described herein. As will be described in more detail below, an exemplary transition animation system may detect a screen size of a display screen associated with a computing device (e.g., a mobile device) executing an application (e.g., a mobile application), automatically generate, based on the detected screen size, a plurality of animation step values each corresponding to a different animation step included in a plurality of animation steps that are to be involved in an animation of a transition of a user interface associated with the application into the display screen, and direct the computing device to perform the plurality of animation steps in accordance with the generated animation step values.","As used herein, an \u201canimation step\u201d refers to a drawing or redrawing (also referred to herein as a rendering or re-rendering) of a display screen (i.e., a drawing or redrawing of contents displayed within the display screen). As will be described below, a plurality of animation steps may be sequentially performed by a computing device in order to animate a transition of a user interface into a display screen included within or otherwise associated with the computing device.","As will be described below, each animation step may have a corresponding animation step value. As used herein, an \u201canimation step value\u201d corresponding to an animation step may define a total number of pixels within a display screen that are to be occupied by a user interface being transitioned into the display screen immediately after the animation step is performed. As will be illustrated below, the total number of pixels that are to be occupied by a user interface after the animation step is performed may be expressed in terms of pixel width, pixel height, pixel area, and\/or in any other manner. Alternatively, as will be described below, an animation step value corresponding to an animation step may define a speed at which the animation step is performed. The speed may be expressed in terms of pixels\/second, time in between animation steps, and\/or in any other manner.","To facilitate an understanding of the methods and systems described herein,  illustrates an exemplary transition  of a user interface into a display screen . In particular,  shows how a user interface (i.e., user interface B) may \u201cslide\u201d into display screen  from the left and in the process replace another user interface (i.e., user interface A) that is already displayed within display screen . A sliding transition is illustrative of the many different types of transitions that may be animated in accordance with the methods and systems described herein. For example, the methods and systems described herein may be utilized to animate fill-in transitions, fill-out transitions, zoom in transitions, zoom out transitions, transparent transitions, and\/or any other type of transition as may serve a particular implementation.","As used herein, a \u201cuser interface\u201d may include any display frame, graphic, and\/or other interface that may be associated with (e.g., displayed by) an application executed by a computing device. A user interface may have any suitable size (i.e., pixel resolution). For example, user interfaces A and B, as shown in , may be configured to occupy all of the pixels included in display screen  once they have been entirely transitioned into display screen . Alternatively, a user interface may be configured to occupy less than all of the available pixels within display screen .","As shown in , user interface A may be initially located within the display screen. To animate a sliding transition of user interface B into display screen , a computing device associated with display screen  may perform a series of animation steps. Three animation steps are shown in  for illustrative purposes. During each animation step, display screen  is redrawn to include an increasingly larger portion of user interface B displayed therein. After the last animation step (i.e., the third animation step), user interface B has completely replaced user interface A and occupies all of the pixels of display screen .","Animation of a transition of a user interface into a display screen may be implemented in a variety of different manners. For example, each animation step included in a series of animation steps may be performed at a fixed speed. In other words, the time period in between performance of each animation step is the same. In this case, animation step values corresponding to the animation steps may define a total number of pixels within the display screen that are to be occupied by the user interface immediately after each animation step is performed.","To illustrate,  depicts a series of twenty animation steps  (e.g., animation steps - through -) that may be performed over a period of time in order to animate a transition of a user interface into a display screen. As shown, each animation step  is performed at a fixed speed. In other words, the time period in between each animation step (e.g., time periods tand t) is the same. In this case, animation step values corresponding to animation steps  may define a total number of pixels within the display screen that are to be occupied by the user interface immediately after each animation step  is performed. For example, Table 1 lists exemplary animation step values corresponding to each animation step  shown in  for a display screen that has a width of 620 pixels.",{"@attributes":{"id":"p-0021","num":"0020"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},{},"Animation Step Value"]},{"entry":[{},"Animation Step","(in pixel width)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1","20"]},{"entry":[{},"2","40"]},{"entry":[{},"3","54"]},{"entry":[{},"4","63"]},{"entry":[{},"5","68"]},{"entry":[{},"6","71"]},{"entry":[{},"7","73"]},{"entry":[{},"8","75"]},{"entry":[{},"9","79"]},{"entry":[{},"10","86"]},{"entry":[{},"11","98"]},{"entry":[{},"12","115"]},{"entry":[{},"13","139"]},{"entry":[{},"14","172"]},{"entry":[{},"15","214"]},{"entry":[{},"16","268"]},{"entry":[{},"17","334"]},{"entry":[{},"18","414"]},{"entry":[{},"19","509"]},{"entry":[{},"20","620"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"As shown in Table 1, after the first animation step (i.e., animation step -), the user interface occupies a pixel width of 20 pixels. After the second animation step (i.e., animation step -), the user interface occupies a pixel width of 40 pixels. The transition of the user interface into the display screen continues in accordance with the animation step values shown in Table 1 until the entire pixel width of 620 pixels is occupied by the user interface (i.e., after animation step -).","As also shown in Table 1, the distance (in pixels) that the user interface moves into the display screen during each animation step  may vary from animation step to animation step. Hence by specifying particular animation step values, an application developer may vary the speed at which different portions of the animated transition occurs.","Alternatively, a user interface may be transitioned a fixed number of pixels into a display screen during each animation step. In this case, the animation step values corresponding to the animation steps that are performed to transition the user interface into the display screen may define a speed at which each animation step is performed.","To illustrate,  depicts a series of twenty animation steps  (e.g., animation steps - through -) that may be performed over a period of time in order to animate a transition of a user interface into a display screen. In this example, the display screen has a width of 620 pixels. Hence, the user interface is transitioned 31 pixels (i.e., 620 pixels divided by twenty animation steps) into the display screen during each animation step . The animation step values corresponding to animation steps  define the speed at which each animation step  is performed.","For example, Table 2 lists exemplary animation step values corresponding to each animation step  shown in .",{"@attributes":{"id":"p-0027","num":"0026"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Animation","Animation Step Value","Animation Step Value"]},{"entry":["Step","(in pixels\/second)","(in seconds)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","80","0.388"]},{"entry":["2","110","0.282"]},{"entry":["3","90","0.344"]},{"entry":["4","100","0.310"]},{"entry":["5","100","0.310"]},{"entry":["6","90","0.344"]},{"entry":["7","80","0.388"]},{"entry":["8","85","0.365"]},{"entry":["9","90","0.344"]},{"entry":["10","95","0.326"]},{"entry":["11","100","0.310"]},{"entry":["12","130","0.238"]},{"entry":["13","140","0.221"]},{"entry":["14","150","0.207"]},{"entry":["15","140","0.221"]},{"entry":["16","130","0.238"]},{"entry":["17","120","0.258"]},{"entry":["18","110","0.282"]},{"entry":["19","105","0.295"]},{"entry":["20","100","0.310"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"As shown in Table 2, the second animation step (i.e., animation step -) is performed at a speed of 110 pixels\/second. This means that the time in between the performance of the first animation step - and the performance of the second animation step - (i.e., t) is 0.282 seconds (i.e., 31 pixels divided by 110 pixels\/second). As another example, the third animation step (i.e., animation step -) is performed at a speed of 90 pixels\/second. This means that the time in between the performance of the second animation step - and the performance of the third animation step - (i.e., t) is 0.344 seconds (i.e., 31 pixels divided by 90 pixels\/second). Hence, an application developer may vary the speed at which different portions of the animated transition occur by specifying different speeds at which each animation step  is performed.","As illustrated, the animation step values corresponding to the animation steps involved in an animation of a transition of a user interface into a display screen depend on the screen size (e.g., the pixel width) of the display screen. For example, the animation step values listed in Tables 1 and 2 would be different for a display screen having a width of 1080 pixels. Hence, an application developer may have to manually input each of the animation step values. This is especially true if it is desirable to vary the speed at which the user interface is to be transitioned into the display screen (e.g., relatively slowly at the beginning of the transition and relatively fast at the end of the transition).","As will be described below, the methods and systems described herein may automatically generate the animation step values corresponding to a series of animation steps involved in an animation of a transition of a user interface into a display screen, thereby obviating the need for application developers to hard-code the animation step values when developing code representative of an application. In this manner, the methods and systems described herein may allow a computing device to effectively and accurately (e.g., smoothly) perform an animation of a transition of a user interface into a display screen regardless of the screen size of the display screen and\/or the processing capabilities of the computing device.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 4","FIG. 4"],"b":["400","400","400","402","404","406","402","406","402","406"]},"Detection facility  may be configured to detect a screen size (e.g., a pixel resolution) of a display screen associated with a computing device executing an application. For example, detection facility  may acquire data representative of the screen size by way of one or more application programming interfaces (\u201cAPIs\u201d) residing on the computing device that executes the software application.","Transition animation management facility  may be configured to perform one or more transition animation operations with respect to one or more user interfaces associated with (i.e., displayed by) the application being executed by the computing device. For example, transition animation management facility  may automatically generate a plurality of animation step values each corresponding to a different animation step included in a plurality of animation steps that are to be involved in an animation of a transition of a user interface associated with the application into the display screen. Transition animation management facility  may then direct the computing device to perform the plurality of animation steps in accordance with the generated animation step values.","Transition animation management facility  may automatically generate the plurality of animation step values that correspond to the plurality of animation steps involved in animating the transition of the user interface into the display screen in any suitable manner. For example, transition animation management facility  may automatically generate the animation step values during a runtime of the application and may base the generation of the animation step values on a detected screen size of a display screen within which the user interface is to be displayed.","The automatic generation of the animation step values may be further based on a plurality of sample animation step values associated with a subset of the animation steps and specified (e.g., by an application developer) in code (e.g., programming code) associated with the application. In some examples, as will be described below, the sample animation step values may specify a fraction (or percentage) of a sample display screen (having any suitable sample screen size) that is to be occupied by the user interface after an occurrence of each animation step included in the subset of animation steps. Alternatively, as will also be described below, the sample animation step values may specify a speed at which each animation step included in the subset of animation steps is to be performed with respect to a sample display screen having any suitable sample screen size. Examples of generating animation step values based on sample animation step values and on a detected screen size will be provided below.","Storage facility  may be configured to maintain application data  and transition animation data . Application data  may be representative of one or more applications configured to be executed by a computing device. Transition animation data  may be generated and\/or utilized by transition animation management facility . For example, transition animation data  may include data representative or otherwise associated with one or more animation steps, animation step values, and\/or any other type of information generated and\/or utilized by transition animation management facility . It will be recognized that storage facility  may maintain additional or alternative data as may serve a particular implementation.",{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 5","b":["500","400","502","504","506","402","404","406","502","504"]},"Application server subsystem  may be associated with an application provider (e.g., a mobile application provider), a service provider (e.g., a subscriber television service provider, a mobile communications service provider, an Internet service provider, etc.), a media content program provider (e.g., ESPN, NBC, etc.), and\/or any other type of application provider. Accordingly, application server subsystem  may be configured to provide one or more application services to computing device . For example, application server subsystem  may be configured to manage (e.g., maintain, process, distribute, and\/or generate) applications configured to be delivered to and\/or executed by computing device . Application server subsystem  may be implemented by one or more computing devices as may serve a particular implementation.","Computing device  may be configured to access and\/or execute one or more applications provided by application server subsystem . For example, computing device  may be configured to download an application from application server subsystem  and then execute the application at the direction of a user.","Computing device  may be implemented by any suitable combination of computing devices. For example, computing device  may be implemented by one or more mobile devices (e.g., mobile phones and\/or tablet computers), personal computers, set-top box devices, digital video recording devices, personal-digital assistant devices, gaming devices, television devices, etc.","Application server subsystem  and computing device  may communicate with one another using any suitable communication technologies, devices, media, and protocols supportive of data communications, including, but not limited to, socket connections, Ethernet, data bus technologies, data transmission media, communications devices, Transmission Control Protocol (\u201cTCP\u201d), Internet Protocol (\u201cIP\u201d), File Transfer Protocol (\u201cFTP\u201d), Telnet, Hypertext Transfer Protocol (\u201cHTTP\u201d), Hypertext Transfer Protocol Secure (\u201cHTTPS\u201d), Session Initiation Protocol (\u201cSIP\u201d), Simple Object Access Protocol (\u201cSOAP\u201d), Extensible Mark-up Language (\u201cXML\u201d) and variations thereof, Simple Mail Transfer Protocol (\u201cSMTP\u201d), Real-Time Transport Protocol (\u201cRTP\u201d), User Datagram Protocol (\u201cUDP\u201d), Global System for Mobile Communications (\u201cGSM\u201d) technologies, Code Division Multiple Access (\u201cCDMA\u201d) technologies, Evolution Data Optimized Protocol (\u201cEVDO\u201d), Time Division Multiple Access (\u201cTDMA\u201d) technologies, Short Message Service (\u201cSMS\u201d), Multimedia Message Service (\u201cMMS\u201d), radio frequency (\u201cRF\u201d) signaling technologies, wireless communication technologies (e.g., Bluetooth, Wi-Fi, etc.), in-band and out-of-band signaling technologies, and other suitable communications technologies.","Application server subsystem  and computing device  may communicate using any suitable network. For example, as shown in , application server subsystem  and computing device  may be configured to communicate with each other by way of network . Network  may include one or more networks or types of networks capable of carrying communications and\/or data signals between application server subsystem  and computing device . For example, network  may include, but is not limited to, a cable network, an optical fiber network, a hybrid fiber coax network, a wireless network (e.g., a Wi-Fi and\/or mobile telephone network), a satellite network, a wireless broadcast network (e.g., a satellite media broadcasting network or terrestrial broadcasting network), a subscriber television network, a provider-specific network, the Internet, an intranet, a local area network, any other suitable network, and\/or any combination or sub-combination of these networks.","In certain embodiments, system  may be implemented entirely by application server subsystem  or by computing device . In other embodiments, components of system  may be distributed across application server subsystem  and computing device .",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 6","FIG. 6","FIG. 6","FIG. 6"],"b":["600","400"]},"In step , a transition animation system detects a screen size of a display screen associated with a computing device executing an application. Step  may be performed in any of the ways described herein.","In step , the transition animation system automatically generates, based on the detected screen size, a plurality of animation step values each corresponding to a different animation step included in a plurality of animation steps that are to be involved in an animation of a transition of a user interface associated with the application into the display screen. Step  may be performed in any of the ways described herein.","In step , the transition animation system directs the computing device to perform the plurality of animation steps in accordance with the generated animation step values. Step  may be performed in any of the ways described herein.","As mentioned, animation step values corresponding to a plurality of animation steps involved in an animation of a transition of a user interface into a display screen may be based on a screen size of the display screen, which may be detected at runtime of an application, and on a plurality of sample animation step values, which may be provided by an application developer during a development of code associated with the application.","For example, an application developer may specify (e.g., in code associated with the application and\/or within another application that interfaces with the application) a total number of animation steps to be involved in an animation of a transition of a user interface into a display screen and a plurality of sample animation step values corresponding to a subset of the specified animation steps. As described above, the sample animation step values may specify a fraction of a sample display screen (having any suitable sample screen size) that is to be occupied by the user interface after an occurrence of each animation step included in the subset of animation steps. Alternatively, the sample animation step values may specify a speed at which each animation step included in the subset of animation steps is to be performed with respect to a sample display screen having any suitable sample screen size.","Any number of sample animation step values may be specified as may serve a particular implementation. For example, an application developer may provide a sample animation step value for each animation step at which it is desirable to adjust the speed of the animation transition. Examples of this will be provided below.","An application developer may also specify (e.g., in code associated with the application and\/or within another application that interfaces with the application) an objective formula that describes the animation of the user interface into the display screen. The objective formula may include any suitable continuous math formula that describes the animation of the user interface into the display screen. For example, the objective formula may include a polynomial function, a triangle function, a signal function, a pre-defined animation speed curve, and\/or any other type of formula as may serve a particular implementation. An exemplary objective formula will be provided below.","As will be described below, system  may use the sample animation step values and the detected screen size to determine a plurality of coefficients included in the objective formula. As will be illustrated below, this may be performed using any suitable equation solver heuristic, interpolation heuristic, and\/or curve fitting heuristic. The objective formula, the determined coefficients, and the detected screen size may then be used by system  to automatically generate an animation step value that corresponds to each animation step included in the plurality of animation steps involved in the animation of the transition of the user interface into the display screen.","Two examples of generating animation step values corresponding to a plurality of animation steps involved in an animation of a transition of a user interface into a display screen will now be described. It will be assumed for purposes of these examples that a sliding transition is to be animated. In the first example, the animation step values define a total number of pixels within the display screen that are to be occupied by the user interface immediately after each animation step is performed. In the second example, the animation step values define a speed at which each animation step is performed. It will be recognized that the examples provided herein are merely illustrative of the many possible examples that may be realized in accordance with the methods and systems described herein.","Turning now to the first example, an application developer may specify in code associated with an application that twenty animation steps are to be performed in order to animate a transition of a user interface into any display screen (referred to herein as a \u201csample display screen\u201d) having any suitable screen size. The application developer may further specify four sample animation values corresponding to four of the animation steps. The sample animation step values and corresponding animation steps are listed in Table 3.",{"@attributes":{"id":"p-0055","num":"0054"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 3"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},{},"Sample Animation"]},{"entry":[{},"Animation Step","Step Value"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1"," 1\/31"]},{"entry":[{},"2"," 2\/31"]},{"entry":[{},"18","\u2154"]},{"entry":[{},"20","1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"As shown in Table 3, each sample animation step value specifies a fraction of the sample display screen that is to be occupied by the user interface after an occurrence of animation steps , , , and . For example, Table 3 specifies that 1\/31 of the sample display screen is to be occupied by the user interface after animation step .","The application developer may also specify an objective formula that describes the animation of the transition of the user interface into the sample display screen. For example, with four sample animation step values specified as in Table 3, the application developer may specify that the following polynomial function be used as the objective formula:\n\nOccupied Screen Width=stepstep\u00d7step+\u2003\u2003(Equation 1).\n","In Equation 1, \u201cOccupied Screen Width\u201d refers to a total number of pixels (in terms of pixel width) within a display screen that the user interface is to occupy after a particular animation step included in the subset of animation steps that correspond to the sample animation step values (e.g., animation step  shown in Table 3) is performed. The variable \u201cstep\u201d refers to a particular animation step number. \u201cA,\u201d \u201cB,\u201d \u201cC,\u201d and \u201cD\u201d are coefficients that, as will be described below, may be calculated using any suitable equation solver heuristic. It will be recognized that the polynomial function may be of any other suitable degree depending on the number of sample animation step values specified by the application developer.","The application may then be loaded onto (e.g., installed on) a computing device, which may execute the application. During runtime of the application, system  may determine that a display screen associated with the computing device has a pixel width of 620 pixels. Using this information, along with the sample animation step values specified in code associated with the application, system  may automatically generate animation step values for each of the twenty animation steps.","To illustrate, system  may build a formula array based on the sample animation step values. For example, using the sample animation step values listed in Table 3 and the objective formula specified in Equation 1, system  may generate the following four equations:",{"@attributes":{"id":"p-0061","num":"0060"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mrow":{"mrow":[{"mfrac":{"mn":["1","31"]},"mo":"\u2062","mrow":{"mo":["(",")"],"mn":"620"}},{"mrow":[{"mi":"A","mo":"\u00d7","msup":{"mn":["1","3"]}},{"mi":"B","mo":"\u00d7","msup":{"mn":["1","2"]}},{"mi":"C","mo":"\u00d7","mn":"1"}],"mo":["+","+","+"],"mi":"D"}],"mo":"="},"mo":","}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Equation","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"2"}}}]},{"mtd":[{"mrow":{"mrow":{"mrow":[{"mfrac":{"mn":["2","31"]},"mo":"\u2062","mrow":{"mo":["(",")"],"mn":"620"}},{"mrow":[{"mi":"A","mo":"\u00d7","msup":{"mn":["2","3"]}},{"mi":"B","mo":"\u00d7","msup":{"mn":["2","2"]}},{"mi":"C","mo":"\u00d7","mn":"2"}],"mo":["+","+","+"],"mi":"D"}],"mo":"="},"mo":","}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Equation","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"3"}}}]},{"mtd":[{"mrow":{"mrow":{"mrow":[{"mfrac":{"mn":["2","3"]},"mo":"\u2062","mrow":{"mo":["(",")"],"mn":"620"}},{"mrow":[{"mi":"A","mo":"\u00d7","msup":{"mn":["18","3"]}},{"mi":"B","mo":"\u00d7","msup":{"mn":["18","2"]}},{"mi":"C","mo":"\u00d7","mn":"18"}],"mo":["+","+","+"],"mi":"D"}],"mo":"="},"mo":",","mi":"and"}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Equation","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"4"}}}]},{"mtd":[{"mrow":{"mn":"620","mo":"=","mrow":{"mrow":[{"mi":"A","mo":"\u00d7","msup":{"mn":["20","3"]}},{"mi":"B","mo":"\u00d7","msup":{"mn":["20","2"]}},{"mi":"C","mo":"\u00d7","mn":"20"},{"mi":"D","mo":"."}],"mo":["+","+","+"]}}},{"mrow":{"mo":["(",")"],"mrow":{"mi":"Equation","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mn":"5"}}}]}]}}}},"With four equations and four unknowns (i.e., coefficients A, B, C, and D), the four coefficients may be calculated by system  using any suitable equation solver heuristic. For example, system  may determine that A=0.2224, B=\u22124.4713, C=31.8571, and D=\u22127.6082.","These coefficients may be plugged into Equation 1 to obtain an objective formula specific to the particular screen size of the display screen into which the user interface is to be transitioned:\n\nOccupied Screen Width=0.2224\u00d7step\u22124.4713\u00d7step+31.8571\u00d7step\u22127.6082 \u2003\u2003(Equation 6).\n","Each of the twenty animation steps may be plugged into Equation 6 to determine the actual animation step values (referred to as \u201cOccupied Screen Width\u201d in Equation 6) that correspond to each of the twenty animation steps. For example, the animation step value for animation step  may be 0.2224*3^3\u22124.4713*3^2+31.8571*3\u22127.6082, which equals 53.726. This result may be rounded up to 54, which indicates that after the third animation step has been performed, the user interface will occupy a pixel width of 54 pixels within the display screen. In a similar manner, system  automatically generates animation step values for each of the other nineteen animation steps, with the results being the same as those listed in Table 1 above.","Turning now to the second example in which the animation step values define a speed at which each animation step is performed, an application developer may specify in code associated with an application that thirty animation steps are to be performed in order to animate a transition of a user interface into a sample display screen. The application developer may further specify five sample animation values corresponding to five of the animation steps. The sample animation step values and corresponding animation steps are listed in Table 4.",{"@attributes":{"id":"p-0066","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"center"}}],"thead":{"row":[{"entry":[{},"TABLE 4"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},{},"Sample Animation Step Value"]},{"entry":[{},"Animation Step","(pixels\/second)"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1","100"]},{"entry":[{},"2","110"]},{"entry":[{},"10","300"]},{"entry":[{},"20","600"]},{"entry":[{},"30","2000"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},"As shown in Table 4, each sample animation step value specifies a speed at which animation steps , , , , and  are to be performed. For example, Table 4 specifies that the first animation step is to be performed at 100 pixels\/second.","Because there are five sample animation step values, the objective formula may include a four degree polynomial function. To avoid the processing requirements of solving a relatively high degree polynomial function such as this, an interpolation heuristic and\/or a curve fitting heuristic may be employed.","To illustrate, a Splines interpolation heuristic may be used by system  to determine the animation step values corresponding to each of the thirty animation steps. In Splines interpolation, the sample animation step values are grouped into groups that have one overlapped joint point. For example, the sample animation step values may be grouped into the following two groups:\n\n","The first number listed in each data pair is the animation step and the second number listed in each data pair is the animation step value. As shown, each group includes the sample animation step value corresponding to the tenth animation step (i.e., ). An objective formula may then be specified for each group. For example, the objective formulas for group 1 and group 2, respectively, may be the following polynomial functions:\n\n\u0192(step)=\u00d7step\u00d7step\u00d7step+\u2003\u2003(Equation 7), and\n\n\u0192(step)=\u00d7step\u00d7step\u00d7step+\u2003\u2003(Equation 8).\n","In order to ensure that the joint points are smooth between the two functions, Equations 7 and 8 may be required to have the same derivations. Hence:\n\n\u0192\u2032(step)=3\u00d7\u00d7step+2\u00d7\u00d7step+\u2003\u2003(Equation 9),\n\n\u0192\u2032(step)=3\u00d7\u00d7step+2\u00d7\u00d7step+\u2003\u2003(Equation 10),\n\n\u0192\u2033(step)=6\u00d7\u00d7step+2\u00d7\u2003\u2003(Equation 11), and\n\n\u0192\u2033(step)=6\u00d7\u00d7step+2\u00d7\u2003\u2003(Equation 12).\n","Using Equations 9-12, system  may derive the following equations (where Yrepresents the sample animation step values and Xrepresents the animation steps):\n\n\u2003\u2003(Equation 13),\n\n\u2003\u2003(Equation 14),\n\n\u2003\u2003(Equation 15),\n\n\u2003\u2003(Equation 16),\n\n\u2003\u2003(Equation 17),\n\n\u00d7x\u2003\u2003(Equation 18),\n\n3\u00d7+2=3+2\u00d7\u2003\u2003(Equation 19), and\n\n6+2\u00d7=6\u00d7+2\u00d7\u2003\u2003(Equation 20).\n","As shown in Equations 13-20, there are eight equations with eight unknown constants (i.e., A, B, C, D, A, B, C, and D). System may plug the sample animation step values and their corresponding animation step numbers into Equations 13-20 to determine that A=\u22120.189368, B=3.98956169, C=\u22120.64310912, D=96.84291542, A=0.245777, B=\u22129.246627, C=135.354835, and D=\u2212374.66265.","During runtime of the application, system  may determine that a display screen associated with the computing device has a pixel width of 630 and that code associated with the application specifies that thirty animation steps will be performed. This means that the user interface will be transitioned into the display screen 21 pixels in width during each animation step. Equation 7 (with the determined values for A-Dincluded therein) may be used to generate animation step values for animation steps  through , and Equation 8 (with the determined values for A-Dincluded therein) may be used to generate animation step values for animation steps -. Table 5 shows the results of such an operation:",{"@attributes":{"id":"p-0075","num":"0076"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE 5"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"Animation Step Value","Animation Step Value"]},{"entry":["Animation Step","(in pixels\/second)","(in seconds)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"char","char":"."}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"char","char":"."}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"char","char":"."}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["1","100","0.210"]},{"entry":["2","110","0.191"]},{"entry":["3","126","0.167"]},{"entry":["4","146","0.144"]},{"entry":["5","170","0.124"]},{"entry":["6","196","0.107"]},{"entry":["7","223","0.094"]},{"entry":["8","250","0.084"]},{"entry":["9","276","0.076"]},{"entry":["10","300","0.070"]},{"entry":["11","323","0.065"]},{"entry":["12","343","0.061"]},{"entry":["13","362","0.058"]},{"entry":["14","382","0.055"]},{"entry":["15","405","0.052"]},{"entry":["16","431","0.049"]},{"entry":["17","462","0.045"]},{"entry":["18","499","0.042"]},{"entry":["19","545","0.039"]},{"entry":["20","600","0.035"]},{"entry":["21","666","0.032"]},{"entry":["22","745","0.028"]},{"entry":["23","837","0.025"]},{"entry":["24","945","0.022"]},{"entry":["25","1070","0.020"]},{"entry":["26","1214","0.017"]},{"entry":["27","1377","0.015"]},{"entry":["28","1561","0.013"]},{"entry":["29","1768","0.012"]},{"entry":["30","2000","0.011"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}]}}},"Hence, as shown in Table 5, system  may automatically determine the speed of each animation step (i.e., the amount of time that separates each animation step). In this manner, the application developer does not have to manually specify each animation step value for each possible screen size.",{"@attributes":{"id":"p-0077","num":"0078"},"figref":["FIG. 7","FIG. 7","FIG. 7","FIG. 7"],"b":["700","400"]},"In step , a transition animation system detects a screen size of a display screen associated with a computing device executing an application. Step  may be performed in any of the ways described herein.","In step , the transition animation system analyzes code representative of the application to determine a total number of animation steps that are to be involved in an animation of a transition of a user interface associated with the application into the display screen, a plurality of sample animation step values associated with a subset of the animation steps, and an objective formula that describes the animation of the transition of the user interface into the display screen. Step  may be performed in any of the ways described herein.","In step , the transition animation system automatically generates a plurality of animation step values each corresponding to a different animation step included in the total number of animation steps. As described above, this generation may be based on the detected screen size, the plurality of sample animation step values, and the objective formula. Step  may be performed in any of the ways described herein.","In step , the transition animation system directs the computing device to perform the plurality of animation steps in accordance with the generated animation step values. Step  may be performed in any of the ways described herein.","In certain embodiments, one or more of the processes described herein may be implemented at least in part as instructions embodied in a non-transitory computer-readable medium and executable by one or more computing devices. In general, a processor (e.g., a microprocessor) receives instructions, from a non-transitory computer-readable medium, (e.g., a memory, etc.), and executes those instructions, thereby performing one or more processes, including one or more of the processes described herein. Such instructions may be stored and\/or transmitted using any of a variety of known computer-readable media.","A computer-readable medium (also referred to as a processor-readable medium) includes any non-transitory medium that participates in providing data (e.g., instructions) that may be read by a computer (e.g., by a processor of a computer). Such a medium may take many forms, including, but not limited to, non-volatile media, and\/or volatile media. Non-volatile media may include, for example, optical or magnetic disks and other persistent memory. Volatile media may include, for example, dynamic random access memory (\u201cDRAM\u201d), which typically constitutes a main memory. Common forms of computer-readable media include, for example, a disk, hard disk, magnetic tape, any other magnetic medium, a CD-ROM, DVD, any other optical medium, a RAM, a PROM, an EPROM, a FLASH-EEPROM, any other memory chip or cartridge, or any other tangible medium from which a computer can read.",{"@attributes":{"id":"p-0084","num":"0085"},"figref":["FIG. 8","FIG. 8","FIG. 8","FIG. 8","FIG. 8"],"b":["800","800","802","804","806","808","810","800","800"]},"Communication interface  may be configured to communicate with one or more computing devices. Examples of communication interface  include, without limitation, a wired network interface (such as a network interface card), a wireless network interface (such as a wireless network interface card), a modem, an audio\/video connection, and any other suitable interface.","Processor  generally represents any type or form of processing unit capable of processing data or interpreting, executing, and\/or directing execution of one or more of the instructions, processes, and\/or operations described herein. Processor  may direct execution of operations in accordance with one or more applications  or other computer-executable instructions such as may be stored in storage device  or another computer-readable medium.","Storage device  may include one or more data storage media, devices, or configurations and may employ any type, form, and combination of data storage media and\/or device. For example, storage device  may include, but is not limited to, a hard drive, network drive, flash drive, magnetic disc, optical disc, random access memory (\u201cRAM\u201d), dynamic RAM (\u201cDRAM\u201d), other non-volatile and\/or volatile data storage units, or a combination or sub-combination thereof. Electronic data, including data described herein, may be temporarily and\/or permanently stored in storage device . For example, data representative of one or more executable applications  (which may include, but are not limited to, one or more of the software applications described herein) configured to direct processor  to perform any of the operations described herein may be stored within storage device . In some examples, data may be arranged in one or more databases residing within storage device .","I\/O module  may be configured to receive user input and provide user output and may include any hardware, firmware, software, or combination thereof supportive of input and output capabilities. For example, I\/O module  may include hardware and\/or software for capturing user input, including, but not limited to, a keyboard or keypad, a touch screen component (e.g., touch screen display), a receiver (e.g., an RF or infrared receiver), and\/or one or more input buttons.","I\/O module  may include one or more devices for presenting output to a user, including, but not limited to, a graphics engine, a display (e.g., a display screen, one or more output drivers (e.g., display drivers), one or more audio speakers, and one or more audio drivers. In certain embodiments, I\/O module  is configured to provide graphical data to a display for presentation to a user. The graphical data may be representative of one or more graphical user interfaces and\/or any other graphical content as may serve a particular implementation.","In some examples, any of the facilities described herein may be implemented by or within one or more components of computing device . For example, one or more applications  residing within storage device  may be configured to direct processor  to perform one or more processes or functions associated with detection facility  and\/or transition animation management facility . Likewise, storage facility  may be implemented by or within storage device .","In the preceding description, various exemplary embodiments have been described with reference to the accompanying drawings. It will, however, be evident that various modifications and changes may be made thereto, and additional embodiments may be implemented, without departing from the scope of the invention as set forth in the claims that follow. For example, certain features of one embodiment described herein may be combined with or substituted for features of another embodiment described herein. The description and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings illustrate various embodiments and are a part of the specification. The illustrated embodiments are merely examples and do not limit the scope of the disclosure. Throughout the drawings, identical or similar reference numbers designate identical or similar elements.",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIGS. 2-3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
