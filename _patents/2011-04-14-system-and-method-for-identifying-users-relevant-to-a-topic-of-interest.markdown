---
title: System and method for identifying users relevant to a topic of interest
abstract: A system and method for identifying users relevant to a topic of interest is provided. A query comprising one or more topics is executed against a corpus of messages. Voting users associated with the messages matching the query are identified. A set of candidate users comprising users connected to the voting users is generated. A relevancy score is computed for each candidate user. The candidate users are ranked by their respective relevancy score.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08275769&OS=08275769&RS=08275769
owner: Palo Alto Research Center Incorporated
number: 08275769
owner_city: Palo Alto
owner_country: US
publication_date: 20110414
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application relates in general to management of electronic information and, in particular, to a system and method for identifying users relevant to a topic of interest.","A growing amount of information is shared through social networking websites, such as Facebook and Twitter. Initially, these types of websites were used mainly as a way to keep in touch with friends and family by sharing personal information such as status updates and uploaded photographs. Currently, social media tools are increasingly utilized for purposes beyond personal conversations, including public discourse in diverse areas, including politics, business, technology, and pop culture, as well as professional networking","Information is transferred via a relationship, or connection, such as \u201cfriending\u201d in Facebook and \u201cfollowing\u201d in Twitter. For example, Twitter is a social networking and microblogging service that allows users to send and receive short messages, known as \u201ctweets\u201d, and to share and discover various topics of interest in real-time. To receive another user's tweets, a user must subscribe to, or \u201cfollow\u201d, the other user's tweets. To receive high-quality information about a topic of interest, a user has to identify credible users whose tweets are relevant to the topic. A user is found credible based at least in part on both the expertise of the user and the trust other users have in the user, reflected in the number of followers the user has.","As there are currently over 100 million registered users of Twitter, finding the credible, or otherwise valuable, users who publish information on a regular basis can be difficult as there are no simple or efficient ways to determine which users are relevant to particular topics of interest. Twitter has introduced lists whereby users can organize the users they follow, \u201cfollowees,\u201d into groups. Third party services, such as Listorious, available at listorious.com, and MyTwitterCloud, available at mytwittercloud.com, use the created Twitter lists to index popular users based on their membership in other users' lists. The list assignments are aggregated and used to generate a ranking of users for a given tag. However, user ranking is based on the manually provided users lists, which have not been widely adopted, leading to an under representation of potential credible users. Moreover, the list categories are arbitrarily chosen by a user, which means that the topics associated with a user can be arbitrary as well, and may not reflect the actual topic of credibility of a user in the list.","Additionally, WeFollow, available at wefollow.com, allows a user to self-associate with a keyword of choice, which is then used to rank the user against other uses who have opted-in for the same keyword. However, a user has to manually opt-in to be included on a list, which means many credible sources may not be represented in the list for the particular keyword or topic. Like Listorious and MyTwitterCloud, a user may be arbitrarily associated with a particular typographical instantiation of a keyword or topic. For example, a user may associate with the term \u201cphotography\u201d but, in turn, may be weakly associated with the term \u201cphotographer.\u201d","Accordingly, there is a need for leveraging the existing social structure to identify relevant users associated with a particular topic of interest.","An embodiment provides a system and method for identifying users relevant to a topic of interest. A query comprising one or more topics is executed against a corpus of messages. Voting users associated with the messages matching the query are identified. A set of candidate users comprising users connected to the voting users is generated. A relevancy score is computed for each candidate user. The candidate users are ranked by their respective relevancy score","Still other embodiments of the invention will become readily apparent to those skilled in the art from the following detailed description, wherein are embodiments of the invention by way of illustrating the best mode contemplated for carrying out the invention. As will be realized, the invention is capable of other and different embodiments and its several details are capable of modifications in various obvious respects, all without departing from the spirit and the scope of the invention. Accordingly, the drawings and detailed description are to be regarded as illustrative in nature and not as restrictive.","As valuable knowledge is increasingly shared through social networks, identifying credible users who are highly relevant to a particular topic of interest becomes more difficult. Providing an automated ranking of the most interesting or relevant users relevant to a topic greatly minimizes the time and effort required by a user to identify other users worth connecting to.  is a block diagram showing a system  for identifying users relevant to a topic of interest, in accordance with one embodiment. One or more user devices - are connected to a content server  via an Internetwork , such as the Internet. The user devices - can include a computer, laptop, or mobile device, such as a cellular telephone or mobile Internet device (not shown). In general, each user device - is a Web-enabled device that executes a Web browser, which supports interfacing tools and information exchange with the content server .","The content server  is interconnected to a content database  and a user database . The content database  stores messages , which are provided to the user devices - upon request. The user database  stores user profiles , such as user name, password, and connections between users. Other types of data are possible. In a further embodiment, messages  and user profiles  can be stored locally on the user devices -.","A user inputs a search query of one or more keywords or topics and the query is executed against the messages  in the content database  via the content server . Messages  are created by users or automatically generated, and can include status updates from networking sites, such as Facebook and Twitter, emails, blog postings, forums, and news content. Other types of messages  are possible. Messages  can be queried and the results received directly on user devices -, for user review via a user interface from the content server , through a application programming interface of the message source, such as the Twitter API, or messages  from many sources can be aggregated, cached, and accessed by user devices - from other servers .","Subsequently, a relevancy server  generates a ranking of users relevant to the search query. The relevancy server  is interconnected to the user devices - and the content server  via the internetwork , and includes a candidate generator module , relevancy scorer module , and candidate ranking module .","The candidate generator module  generates, a set of candidate users. The candidate users are generated from a combination of the user generated search query of the messages  in the message database  and the social connections between users. For example, social networks include features to connect with other users, such as family, friends, colleagues, and strangers. Facebook has \u201cfriending\u201d and Twitter has \u201cfollowing.\u201d Users connect to one another to keep updated with messages posted by other users. The messages can include, for example, status updates, weblinks, and photos.","The relevancy scorer module  applies a relevancy measure to the candidate users and determines a relevancy score for each candidate. The relevancy score of each candidate user is compared and the candidates are ranked  based on the score. The rankings  can be cached for later retrieval or update in the relevancy database . Users can then select one or more of the ranked users to connect to, such a by following or friending the user.","The user devices -, relevancy server , and content server  each include components conventionally found in general purpose programmable computing devices, such as a central processing unit, memory, input\/output ports, network interfaces, and non-volatile storage, although other components are possible.","Further, the user devices -, relevancy server , and content server  can each include one or more modules for carrying out the embodiments disclosed herein. The modules can be implemented as a computer program or procedure written as source code in a conventional programming language and is presented for execution by the central processing unit as object or byte code. Alternatively, the modules could also be implemented in hardware, either as integrated circuitry or burned into read-only memory components. The various implementations of the source code and object and byte codes can be held on a computer-readable storage medium, such as a floppy disk, hard drive, digital video disk (DVD), random access memory (RAM), read-only memory (ROM) and similar storage mediums. Other types of modules and module functions are possible, as well as other physical hardware components.","Users relevant to a topic of interest are identified from content of user messages and social connections between users.  is a flow diagram  showing a method for identifying users relevant to a topic of interest, in accordance with one embodiment. A search query is received from a user and applied to a corpus of messages  and the messages  satisfying the query are identified (block ). In one embodiment, various linguistics, such as word stemming, synonym expansion, and spelling corrections can be applied to the search query","The query can be applied to all messages  or to only those messages  within a specified time window. The time period can be manually chosen by the user or automatically determined. For example, the time window may be all messages  received since the last time the user used the system , those that have been received in the last hour, or only the most recent number n messages. Other time windows are possible. The query can be applied directly to the messages through the content server , through an application programming interface of the message source, such as the Twitter API, through the relevancy server , or messages  from many sources can be aggregated, cached, and accessed by user devices - from other servers.","Candidate users that may be relevant to the query are generated from the identified messages (block ), as further discussed below with reference to . Briefly, the users connected to the users whose messages satisfy the query are identified as candidate users. The uses can be connected through, for example, social links such as \u201cfriends\u201d on Facebook or \u201cfollowing\u201d on Twitter. Other connections between users are possible.","Candidate users are identified from other users who follow their message streams.  is a data flow diagram  showing, for example, a method for generating candidate users for use in the method of . A query  is received from a user of the system . The query  can include one or more keywords or terms. The query is applied to the corpus through a search  for messages matching the query or a subset of the query . In one embodiment, the query results include all messages that match the query. In a further embodiment the query results only include a subset of the entire results, such as described above with reference to . For example, only the most recent 1,500 messages that include the query will be returned. Confining results to the most recent messages increases the ability to adapt to temporal trends in messages . When the semantics of a query changes over time, the result generated by the system  can track the most recent meaning of the query. For example, a query term \u201celection\u201d can have multiple semantics depending on when the term is used. Near an U.S. presidential election, \u201celection\u201d maybe strongly associated with \u201cpresidential election\u201d while \u201celection\u201d may be more related to gubernatorial or senate elections when used close to a midterm election.","Users whose message content satisfies the query are identified, placed in a voter user set, and designated as voter users . The social connections of the voter users  are analyzed and the users who are connected to the voter users  are identified as candidate users . For each candidate user , the number, f, of voter users  who are connected to the candidate user  is determined. Additionally, the total number of users, F, who are connected to each candidate user  is determined by combining the number of voter users  and non-voter users  for each candidate user . For example, candidate user C, has a fvalue of 1, since the only voter user connected to Cis V, while Chas a Fof 2 since NVis connected to Cas well. Candidate users Cand Chave fscores of 3 and 1, and Fscores of 3 and 3, respectively. The numbers fand Fare then used to determine a relevancy score for each candidate user , as further described below with reference to .","Returning to the above discussion with respect to , a relevancy measure is then applied to each of the candidate users to determine a relevancy score (block ), as further described below with reference to . The relevancy scores of the candidate users are then compared and the candidate users ranked (block ) based on the relevancy scores. The ranking is displayed to the querying user, who can then select one or more candidate users to connect to, for example \u201cfollowing\u201d or \u201cfriend\u201d.","A relevancy measure is applied to determine a ranking of each candidate user to a topic of interest.  is data flow diagram  showing, for example, types of relevancy measures . Relevancy measures  can include NumVotes , DivF , DivLogF , BetaBin(\u03b1, \u03b2) , and latent Dirichlet allocation (LDA) . Other relevancy measures are possible. NumVotes  counts the number of voter users who follow a particular candidate user u. Each voter user casts a vote for each of their social connections, such as followees, and the total number determined, f, is the relevancy score for user u.","In some circumstances, NumVotes  can overly favor the most popular users who may not be relevant to the topic of interest. For example, some Twitter users have over one million followers and would likely return many voting users for any search query. Therefore, DivF  counts the proportion, rather than the actual number, of a user's followers, who satisfied the search query. A higher proportion of a user's followers who are associated with a topic, the more relevant that user should be to the topic of the query. DivF  is determined according to the equation f\/F.","DivF  may overpenalize generally popular users and underpenalize unpopular users in some situations, and can be overly sensitive to spuriously large values of fwhen Fis small. DivLogF  provides a balance between the NumVotes  and DivF  relevancy measures. DivLogF  is determined according to the equation f\/logF. DivLogF  generates values between NumVotes  and DivF , balancing between the two measures. However, DivLogF , in some circumstances, may not properly penalize generally popular users.","BetaBin(\u03b1, \u03b2)  properly penalizes generally popular users without underpenalizing unpopular users. BetaBin(\u03b1, \u03b2)  is probability based. Each candidate user's followers is assumed to be randomly included in the voter user set independently of one another and with probability p, and fis then approximated by a Binomial(F, p) binomial probability distribution. Next a Beta(\u03b1, \u03b2) prior distribution over p is used, so that after observing fof the user's Ffollowers occurring in the voter users set, the posterior probability of p follows a Beta(f+\u03b1, F+\u03b2) distribution. The expected value of the posterior distribution gives an estimate, E, of the probability that each of the user's followers is to be part of the voter user set, after observing the values of fand F. The posterior expected value is determined according to the equation:\n\n]=(+\u03b1)\/(+\u03b1+\u03b2)\n","which defines the BetaBin(\u03b1, \u03b2)  relevancy measure.","Since the proportion of a user's followers within the voter user set is expected to be low on average, \u03b1 is set so that \u03b1<<\u03b2. For example, \u03b1 is set to 1, while \u03b2 is given values such as 10, 10, or 10. Other values for \u03b1 and \u03b2 are possible.","Additionally, the BetaBin(\u03b1, \u03b2)  relevancy measure functions similar to the NumVotes  measure when F<<\u03b1+\u03b2, since (f+\u03b1)\/(F+\u03b1+\u03b2)\u2248f+\u03b1)\/(\u03b1+\u03b2)\u02dcf. Further, BetaBin(\u03b1, \u03b2)  functions similar to the DivF  measure when F>>a+B, since (f+\u03b1)\/(F+\u03b1+\u03b2)\u2248f\/F. Therefore, BetaBin(\u03b1, \u03b2)  has the benefit of measuring the proportion of a user's followers who are in the voter user set, like DivF , while also appropriately penalizing unpopular users like the NumVotes  measure.","Unlike NumVotes , DivF , DivLogF , BetaBin(\u03b1, \u03b2) , which take into account information about the link structure of the social network between the users, the LDA measure  takes into account the overall content, or topics, of users' messages as well. Candidate users are still determined from the voter user set, such as described above in . A topic model is built to associate each user, and associated message, with one or more topics. The entire message histories of the candidate users are collected and the LDA measure  is run on the messages. The LDA results provide a way of determine the topical similarity of any user to a search query based on the content of the user's tweets.","The LDA measure  analysis first begins by collecting all messages made by a user into a document. Each user is represented by the aggregation of messages they have created. Next, the parameters for the LDA analysis are chosen. The number of topics, k, is empirically chosen, and is generally between 200 and 1,000 topics, though other topic numbers are possible. In one embodiment, the number of topics is set to 500. Parameters alpha and beta for the Dirichlet kernel are empirically chosen as well and are set to 0.1 and 0.5 respectively. Finally, the LDA algorithm, such as described in D. M. Blei et al., \u201cLatent Dirichlet Allocation,\u201d 3 Jour. Of Machine Learning Research 993-1022 (2003), the disclosure of which is incorporated herein by reference, is applied on the set of documents to obtain the two sets, Pand P, of topical distribution. P(query term|topic) is the probability distribution of terms for each topic, where k is the number of topics. P(topic|user) is the probability distribution of topics for each document, which is an aggregation of messages by a user, where i is the number of users.","Given the two probability distributions, Pand Pthe topical similarity between query terms and a user can be calculated as the probability that the user would generate the query terms, which is according to the equation:",{"@attributes":{"id":"p-0038","num":"0037"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":[{"mrow":{"mrow":[{"msub":{"mi":["Score","LDA"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["user","i"]}}},{"munderover":{"mo":"\u2211","mi":"k","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mrow":{"msub":{"mi":"P","mn":"1"},"mo":["(","\uf604"],"mi":"queryterm"},"mo":"\u2062","msub":{"mi":["topic","k"]}}}],"mo":"="},"mo":")"},{"msub":[{"mi":"P","mn":"2"},{"mi":["topic","k"]}],"mo":["(","\uf604"]}],"mo":["*","\u2062"],"msub":{"mi":["user","i"]}},"mo":")"}}}},"The candidates are then ranked based on the results. In a further embodiment, LDA can be applied to one of the link structure-based measures that has been applied to re-rank the candidate users, using topic similarity to the search query as the ranking criterion. For example, the two scores for ranking can he combined according to the equation:\n\nScore*Score*Score\n","where Scoreequals one of NumVotes , DivF , DivLogF , or BetaBin(\u03b1, \u03b2), Scoreequals the LDA determination, and 0<W, W<1 and W+W=1.","Other content-based algorithms can be used, for example, probabilistic latent semantic analysis, latent semantic indexing, hierarchical LDA, and explicit semantic analysis.","While the invention has been particularly shown and described as referenced to the embodiments thereof, those skilled in the art will understand that the foregoing and other changes in form and detail may be made therein without departing from the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
