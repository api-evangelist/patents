---
title: Geographic recommendation online search system
abstract: In one example implementation computer executable instructions are executed to provide an application program interface (API) to an online resource search system. The instructions are executed to receive a get recommendation (get rec) web enabled function call from a client network node to get recommendation information ordered by at least one of similarity, popularity, and distance. The function call can include a geographic location identifier, a radius identifier, a tag identifier, an item identifier, a global or local search flag, and a user identifier as parameters. The instructions can be executed to respond to the getrec function call by returning a number of recommendations, a number of uses, and a set of tags.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08775570&OS=08775570&RS=08775570
owner: Hewlett-Packard Development Company, L. P.
number: 08775570
owner_city: Houston
owner_country: US
publication_date: 20110915
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["More and more content is generated and published by users online. As GPS sensors and unlimited data plans have been introduced for mobile devices, location based services have flourished. Many of these services are targeted for specific content domains and use-cases, and thus end up rewriting the location indexing and retrieval.","An application program interface (API) is provided for an online search system that can be used from any web enabled client (e.g., HTTP get mobile client having a web browser). The API can be used to recommend and query content by location, users, and tags as well as to retrieve personalized recommendation. Such an API may be implemented as a set of routines, protocols, and tools (e.g., rules and specifications) that software programs can follow to communicate with one another. In one implementation, a lightweight extensible markup language (XML) and JSON remote interface is provided to be accessible from a wide range of devices and web browsers. This open platform may allow developers to create any number of complement APIs for the different client mobile platforms.","That is, this open API may allow developers to mashup location aware discovery and sharing of content with numerable use cases. Herein, middleware may be provided to allow generic, real-time, geo-aware tasks including: popularity ranking of content, social filtering of content, channel\/tag popularity ranking, local (channel-based) content expert discovery, folksonomy tagging of content, distance ranking of content, collaborative filtering of content, time-relevancy of content, advertisement and auctioning of content (including second price ad auctioning), prediction market arbitrage of content to forecast future events, live polling of content popularity, coverage-limited tagging of content, feeds of new content views, feeds of new content ratings, syndication of rating to social media platforms, third party single sign-on authentication, and\/or real-time notifications of content updates.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":["FIG. 1A","FIG. 1A"],"b":["10","12","14","16","18","16","12","20","22","24","22","26","20","14","12"]},"The communications applications  operating on the first and second client network nodes ,  communicate with the online search system . The communications application  typically operates on a client network node that includes software and hardware resources which, together with administrative policies, user preferences, and other settings, define a local configuration that influences the administration of connections with other network nodes. The communications applications  also provide respective interfaces for receiving commands from the communicants. In addition, the communication applications handle the submission of recommendations from the client network nodes ,  to the online search system  and the presentation of search results from the online search system  to the client network nodes , . In some examples, the communication applications  are implemented by web browser applications that respectively include extensions or plugins that handle communications with the online search system .","As shown in , multiple different mobile platforms (e.g., client node A  and client node B ) can be provided with a respective client side API  capable of providing a web enabled (e.g., hypertext transfer protocol (HTTP) GET) function call to the online search system . The web enabled function call to the online search system  is received by a respective online search system  side API . The online search system API can be implemented as a JSON representational state transfer (REST) API.","The online search system  can include one or more server nodes  that provide network infrastructure services that cooperate with the communications applications  in the process of establishing and administering network connections with the client nodes , .","The online search system  maintains a database  that contains records  of geo-tagged MPL recommendations for, for example, online documents or MPLs that were received from the client network nodes , . Each recommendation record  describes an association between a respective online document or MPL identifier that identifies a respective online document or MPL, recommendation information (e.g., an amount of credit allocated to the online document or MPL), and a geographic location identifier that identifies a respective geographic location. Each recommendation record  also optionally may include (i) a respective user identifier that identifies a user of the respective client network node that sent a submission from which the recommendation was derived, (ii) a respective channel identifier that identifies a respective category that is assigned to the associated online document or MPL, and (iii) a reference to a related URL, which may be used to bring up recommendations\/notes when that URL is opened in a browser application.","In some examples, the online search system  additionally maintains a second database  that contains records  of user accounts. The user account records  typically store contact information, an amount of recommendation credit that currently is available for submitting recommendations, and other information relating to the respective users of the client network nodes , .","The network  may include any of a local area network (LAN), a metropolitan area network (MAN), and a wide area network (WAN) (e.g., the internet). The network  typically includes a number of different computing platforms and transport facilities that support the transmission of a wide variety of different media types (e.g., text, voice, audio, and video) between network nodes.","In some examples, the online search system  includes a back-end service that uses dynamic database sharding to partition the data efficiently for scalable geo-location (e.g., find nearby and rank) queries. Databases, (e.g., organized collections of records that are presented in a standardized format that can be searched by computers) described herein may be stored on a single computer-readable data storage medium on a single computer or they may be distributed across multiple computer-readable data storage media on one or more computers. Furthermore, such databases may be geographically partitioned (\u201cgeo-partitioned\u201d) according to different geographic location identifiers.","In the examples described herein, a bridge between a relational database management system (RDBMS) and one or more application clients may be provided to provide a feature rich social location-based service through an open API. In an example, the system scales out based on geographic partitioning. Furthermore, some implementations may not rely on geospatial key-value stores but rather use the capabilities of a full RDBMS. Consequently, more sophisticated queries may be supported efficiently locally.","A Geohash algorithm is leveraged to map locations in queries into geographic area. In one example, the areas constitute Grid cells of 97\u00d797 miles using a 3 character, 32 letter alphabet. Search inquiries are limited to 30 miles and can touch between 1-4 Grid cells, called shards. Each shard is implemented as a RDBMS table. The tables are located at runtime making it easy to distribute content from different geographic regions on different server nodes  in a cloud\/data center. With this scheme 32\u00d732\u00d732=32768 shards can be created in use. When a new item is recommended in a new shard, that shard will be created in real time in-band (e.g. on the same computing platform). Thus, not all possible shards have to be created. According to this example, to serve about 7 million recommendations spread globally in the inhabited areas on Earth as few as 12,000 shards may be used.","Groups of tables\/shards can be collected but some hotspot shards may by off-loaded to external nodes. The server nodes are designed to be stateless which means that operations may be performed efficiently with only local data. In some implementations, only authentication and reporting data are kept global.","Because of this design, the shard tables are also heavily de-normalized. Apart from that, the shard tables may allow the same expressive SQL queries as any traditional RDBMS. Instead of joins being performed, a mechanism akin to GROUP_CONCAT in MySQL (grouping columns instead of joining columns from multiple tables) may be performed. The table queries can also perform radius boxing to avoid calculating the exact distance using Haversine arithmetic for more than the items that are in range.","In an example, if a query is touching more than one shard in its radius scope a SQL union of the shard results will be used in the stored procedure layer of the database or in the application server if the shards are located in different database servers.","Given this highly distributed infrastructure feeding new data into the system and creating global reports can be highly parallelized and performed concurrently by multiple cores or by multiple nodes in a MapReduce cluster. Apart from uploading new data into the shards, this kind of parallel processing can also be performed when computing contribution rewards, most popular site trends, and channel heatmaps.","In some implementations, the recommendations are not allowed to span partitions for efficiency. In such implementations, within the same shard group (e.g., sorted region of shards hosted on the same database server), recommendations are limited by a user-specified radius away from a particular location (e.g., latitude, longitude coordinate) and the total number of hits requested. Both of these may have upper limits to fit the display layouts of the client network nodes and to preserve server scalability.","A client side API  enables a web enabled mobile client to interface with the online search system API described next. As described herein, an online search system (e.g., online document or MPL search system)  API  is provided which communicates with a client network node among various different mobile platforms and receives, via the online API, a recommendation (rec) web enabled function call to recommend an online document or MPL from the client network node. The rec function call can include a geographic location identifier for the client network node and a selected online document or MPL as parameters. The API operates on the function call to pass the online document or MPL identifier as an attribute to the online search system.","In an example of a request for an MPL recommendation, the MPL identifier is a URL and the MPL API received a get recommendation (getrec) web enabled function call from the client network node to get MPL recommendation information. The getrec function call includes a geographic location identifier as a parameter for the client network node. Further, the MPL API responds to the getrec function call by returning, via the MPL API, real time ranked recommendations for multiple MPLs in JSON format from an MPL database in an MPL search system. The multiple MPLs are indexed online in the database according to URLs. For instance, an index model may be built in real time (e.g., indexing as information is received in band to a given computing platform) using databases that are partitioned in a predetermined manner (e.g., using geographically pre-partitioned databases). The MPL API  can return object JSON attributes, in response to the getrec function call, having a JSON array of 10-tuple with elements output format.","The MPL API can implement a JSON representational state transfer (REST) API, and receiving the web enabled function calls include receiving a http get function call to communicate with multiple HTTP GET enabled client network nodes from different mobile platforms.","In an example, instructions associated with the MPL API can be executed to receive the note function call and can be executed to create a URL comment identifier to be indexed online in association with the selected MPL in the MPL search system. Further, instructions associated with the API can be executed, in response to the note function call, to pass a note attribute with text and to encode the note attribute with text within the created URL comment identifier to be indexed.","The online document or MPL identifier can be a URL and instructions associated with the API can be executed to respond to the getrec function call by returning, via the API, real time note attributes with text in association with the selected online document or MPL in JSON format from an online database in the search system. In various examples, instructions associated with the API can be executed to receive a rec function call that includes a recommending user identifier as a parameter for the client network node and a recommendation credit identifier (bid) as a parameter in association with a respective geographic location identifier parameter and online document or MPL identifier parameter. Further, instructions associated with the API can executed to pass the recommendation credit identifier as an attribute to the search system; and to decrement a budget (e.g., \u201csubmission credit\u201d) of a submitting user account associated with the recommending user identifier.","In parallel to exchanging (e.g., receiving and returning) function calls, the online search system  also may run data-mining and web crawling agents that automatically populate the database  with geo and URL data for specific channels in order to maintain a high overall quality even for long tail information items that might be requested by very few users or very rarely. In some examples, the online search system  leverages attention economy, collaborative filtering, and information market research in order to improve the accuracy of the list of ranked online documents or MPL identifiers that are sent to the client network nodes.",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 1B","FIG. 1B"],"b":["19","19"]},"The platform can include web servers  (e.g., Apache, HTTP representational state transfer (REST)) that can include processing and memory resources. Each web server  in the platform does not have to run the full platform stack. Rather, each web server  can be associated with a particular database  (e.g., a MySQL database) to provide an online content service for the content in that particular geo-partitioned (e.g., geo-hashed) database. The web servers  can provide the functionality associated with primitives, as described herein.","A primitive is a generic functionality provided by a platform for online content-specific services. A primitive can have multiple models that can be used with different online content and\/or services without having to recreate the functionality of the generic primitive. Primitives can include, for example, an activity log of explicit and\/or implicit use and\/or recommendations of content, an economic voting primitive for recommending content, a hierarchical folksonomy of tags, an interface with a social network, and a geomodel to partition data for efficient local retrieval, among others.","One primitive includes an economic recommendation model that provides a temporal budget of recommendations that can be submitted by a user for ranking content. In some examples, the number of recommendations that a particular user may make within a time span is limited by the amount of credit that the user currently has available. Recommendation credits (or tickets) may be granted or purchased and used to increase prominence of an online document or MPL in connection with a geographic location. Recommendation credits can be provided to a user in a discrete amount per time period. For example, a user may receive 5 recommendation credits per week. Furthermore, a recommendation credit used by a user (e.g., when a user recommends content) can have a fixed duration after which it is no longer considered by the platform when providing results (e.g., the user-provided recommendation can expire). User-provided recommendations can be used by the platform to generate a result (e.g., suggestion) for an online document or MPL in response to a later query by a user.","Taking the economic recommendation primitive as an example of a primitive, the economic recommendation primitive can be used when building applications for recommending different types of online content, such as an MPL service and a restaurant location service, as will be described in more detail with respect to ). An economic recommendation model can include a temporal budget of recommendations that can be submitted by a user for recommending content. A temporal budget of recommendations implies that the recommendations are somehow limited in time (e.g., the user has a certain number of recommendations available per unit time and\/or the recommendations have a certain lifespan or expiration).","Another example of a primitive is an activity log that stores implicit and\/or explicit recommendations of geo-partitioned content by a plurality of users. An explicit recommendation is a recommendation, submitted by the user, of a particular item of the content. An implicit recommendation is a recommendation of a particular item of the content based on, for example, a viewing and\/or using of the content by the user. As used herein, a recommendation of the content can imply a recommendation of content itself (e.g., a good and\/or service) and\/or a recommendation of a provider of the content. In some instances, it may not be possible to distinguish between the content and the provider.","The platform can include web application services  (e.g., via Django, JavaScript Object Notation with Padding (JSONP), GeoRSS, HTML). The web application services  can provide a search system side API, as described herein. An example of a web application service  is an online content service for an online document or MPL, as described herein. The platform can include a caching system  (e.g., Memcached). The caching system  can be a general purpose distributed memory caching system used to speed up dynamic database-driven websites by caching data and objects in RAM to reduce the number of times an external data source (such as a database or API) is read.","The platform can include integration services  (e.g., for integration with Google Maps, Geocoding, Facebook Connect, SocialAuth, OAuth). Authentication can occur over an integration service  or with a native (to the platform) authentication protocol. For authentications using an integration service , a user can register to obtain a nickname and recommendation key. In some examples, anonymous users can also use the platform, however anonymous users may have stricter recommendation credit quotas. Integration services  can help provide personal content services for a user (e.g., by collaborative filtering of geo-partitioned content based at least in part on previous similar explicit and\/or implicit recommendations submitted by other users). Integration services  can help provide social content services including social filtering of the geo-partitioned content based at least in part on previous explicit and\/or implicit recommendations submitted by friends (e.g., \u201cfriend recommendations\u201d) of a user (e.g., where \u201cfriends\u201d of the user are determined according to an interface between the platform and a social network such as Facebook). Integration services  can help provide time-aware and\/or location-aware content services including time relevancy and distance ranking of the geo-partitioned content.","The platform can include databases  (e.g., MySQL databases, Geohashed databases). The databases  can be provided with dynamic database sharding, as described herein (e.g., where each geographic region has its own real or virtual database containing region-specific recommendation tables). Each database  can be on its own node, or multiple databases  can be located on a single node. In some examples, the region-specific recommendation tables can be partitioned across nodes. User-submitted recommendations can be confined to a geo-partitioned database associated with a respective item of the content being recommended.","The platform can host services that create and recommend social, personalized, time- and location-aware online content. The platform can scale to serve a large amount of geo-partitioned data to a large number of users. The platform can be designed around generic primitives that can be used to serve a wide array of content-specific services on the same infrastructure.",{"@attributes":{"id":"p-0055","num":"0054"},"figref":["FIG. 1C","FIG. 1C","FIG. 1B"],"b":"19"},"The platform can include web servers  (e.g., an ONLINE DOCUMENT OR MPL server -M hosting an Apache server -G) that can include processing and memory resources. In an example implementation, the Apache server -G can host an online document or MPL application server -M (e.g., providing an recommender system Java API via WebLogic Java, as described herein). The online document or MPL application server -M can communicate with integration services  via HTTPS\/XML. The online document or MPL application server -M can communicate with an recommender system application server -G hosted by the Apache server -G via HTTP\/JSON. The recommender system application server can be provided via a Django Python web framework that can include a web server gateway interface (WSGI), an extension to the Python language supporting large multidimensional arrays and matrices and accompanying mathematical functions (Numpy), a hierarchical spatial data structure that subdivides space into grid elements (Geohash), SimpleJSON, and\/or MySQL-Python, among others.","The recommender system application server -G can interface with a caching system  (e.g., Memcached). The caching system  can be a general purpose distributed memory caching system used to speed up dynamic database-driven websites by caching data and objects in RAM to reduce the number of times an external data source (such as a database or API) is read. The recommender system application server -G can interface with databases (e.g., database -A and database -B). Database -A and database -B can represent different nodes of a geo-partitioned MySQL database.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 1D","b":["190","190"]},"An online document or MPL system can work with connectors, and these connectors can be printing partners (e.g., FedEx Office ) or auxiliary services, such as recommender system . A user, or customer , can search for online documents or MPLs , request print jobs , and provide the print job to the MPL and\/or request to have an MPL deliver the print job or print content . These requests can be made via user interface , which may be presented on a mobile device, such as a smart phone. This is illustrated in  as arrow . Translator  can translate these customer requests into calls to the aforementioned connectors for locations and print jobs. As illustrated at , a customer may also be able to filter his or her print job request by previous personal preference (e.g., entering a user identifier), location of the MPL, and\/or type of print job (e.g., color, high resolution, black and white, etc.).","The online search system, working together with the recommender system, can sort and return the results to the customer in a number of ways. As illustrated at , the results can be ordered by distance from the user, similarity of online documents or MPLs, and\/or popularity of the online document or MPL. For example, a default result can be distance from the customer, but if the customer's location is not exactly known, the results may be displayed in a different order. The results can also be displayed in alphabetical order by the name of the online document or MPL. In some examples, a connector (e.g., FedEx Office ) can privilege some of its results on the top of a result list according to some partner contract definition. Each search result can have an identifier, and these identifiers can be passed to the recommender system, as illustrated by arrow , which can annotate the search result with recommendation data (e.g., user recommendations of an online document or MPL). This annotation can allow for additional ordering criteria, where the most recommended online document or MPL is listed first.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 1E","FIG. 3A"],"b":["16","27","60","16","62","64","68"]},"In one example, the memory includes a data structure stored in the memory ,  and used by the application program  of . The data structure of  can include information resident in a number of databases ,  geographically-partitioned (geo-partitioned) in a predetermined manner according to a number of shards.  illustrates that the persistent memory  can include a geographically-hashed (geo-hash) look up table .  illustrates that the geo-hash look up table  contains a number of geo-hash ranges  associated with respective geographic location identifiers . The geo-hash look up table  receives a function call including a geographic location identifier and a client network node identifier as parameters to the function call and uses the table  to link the client network node to a particular server node ,  and an associated geo-partitioned database ,  containing the geo-hash ranges in a shard data object table  associated with the received geographic location identifier. Each shard data object table  can contain a number of data attributes including a shard data attribute , a user data attribute , a geographic location data attribute , a URL data attribute , a tag and\/or comment data attribute , a bid data attribute , a referenced URL data attribute , a title data attribute , etc.","As shown in  a plurality of user data object tables  are part of the data structure. Each user data object table  contains respective user data attributes including user recommendation credit data attributes  associated with a particular user data attribute . The plurality of user data object tables  link to the particular server node ,  and the associated geo-partitioned database , . As shown in  the data structure can link a particular user to the particular server node and the associated geo-partitioned database based on the geographic location identifier. In effect, the data structure can link a given client network node to the particular server node and a particular geo-partitioned database having MPL information indexed according to URLs based on the geographic location identifier.","In one example, using the tag and\/or comment data attribute , the referenced URL data attribute and the user data attributes \/ the data structure can link the particular user to the particular server node and the particular geo-partitioned database in order to index by URL a comment, regarding an MPL from the particular user, based on the geographic location identifier.","As shown in , the data structure can include a note object table , having a number of data attributes including an identifier data attribute, a user data attribute, a title data attribute, a note data attribute, a timestamp data attribute, a parent note data attribute, etc., logically linked to the particular user data object table . The data structure can further include a reward object table  physically linked (e.g., actually electronically connected versus logically linked as a virtual connection) to the particular user data object table . In one or more embodiments the data structure includes a friend object table  physically linked to the particular user data object table . An advertisement object table  is logically and physically linked to the shard object table . In one or more embodiments a URL object table  can be physically linked to the advertisement object table  and an advertisement log object table  can be logically linked to the advertisement object table .",{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 1F","b":["49","65","51","53","55","57","101","65","53","65","55","55","55","65","57","65","65"]},"Recommendations  can be ordered by similarity  (e.g., by similarity of content for divergent recommendations and\/or by similarity of recommendations for divergent content), by popularity  (e.g., by total number of recommendations and\/or a most favorable average recommendation), and\/or by distance  (e.g., distance from the requesting user's present location). A provider  of content can be associated with various additional information such as an identifier of the provider (e.g., identifier ), a total number of recommendations (e.g., explicit recommendations) for the provider and\/or the provider's content, a total number of uses of the provider and\/or the provider's content (e.g., implicit recommendations), and\/or a type of the content being provided. For example, a type of content, in the case of a mobile print provider service, can include color printers.","A recommendation  submitted by a user can be accompanied by information including, for example, an identity of the provider  of the content being ranked, a value (e.g., \u201cvote\u201d)  of the recommendation , an identity  of the user submitting the recommendation , a time  that the recommendation  was submitted, a type , a geographic area , and\/or whether the recommendation was intended by the user to be visible globally (e.g., by everyone using the platform) or locally (e.g., by people within a certain geographic region . The identity  of the user can be a user ID as determined from a login directly to the platform, a user ID as determined according to an interface with a social network (e.g., Facebook\u00ae Connect), or a user ID as determined from network information such as an IP address, among others.","An economic recommendation model can be provided to help assure that the platform provides meaningful results (e.g., as opposed to some previous approaches that do not constrain users' ability to recommend various content). A user's recommendations (e.g., votes)  can be constrained by one or more economic recommendation models such as a frequency quota , geofencing , a provider quota , and\/or a user quota . A frequency quota  can limit a user to providing X votes over T days and\/or at most Y votes per day. Such frequency quotas  can help prevent users from spamming a particular provider with recommendations (e.g., where the user has a pecuniary interest in having a particular provider receive recommendations). Geofencing  can include the use of GPS or other location-determining means (e.g., IP address, cell triangulation, user-provided location) to limit a user's ability to provide recommendations to providers within X distance (e.g., miles) from the target provider being recommended.","Thus, geofencing  can help prevent users from recommending a particular provider when it is clear that the user is not currently using the services of the provider. A provider quota  can limit a particular provider of content to receiving at most X votes per a given time period. The provider quota  can help prevent a provider from cheating the system by having different users fraudulently recommend the provider. A user quota  can limit a user to providing no more than X unexpired votes. The user quota  can help prevent an \u201coverly positive\u201d user from providing what may be considered arbitrary recommendations for a multitude of content providers. The use of the variables X, T, and Y in the discussion of  is arbitrary and does not imply a correlation between different economic recommendation models (e.g., the X in the frequency quota  may be the same or different than the X in geofencing ).","An economic recommendation model can limit a user's recommendations according to a \u201ccheckins\u201d model  where a user is limited to X recommendations (e.g., 1 vote) per provider per time period (e.g., day) within a given distance (e.g., 0.5 miles). Such a model can help to assure that the user actually used the provider (e.g., via the distance requirement) and help to assure that the user does not spam a provider with recommendations (e.g., via the limited recommendations per time period requirement). An economic recommendation model can limit a user's recommendations according to a \u201croses\u201d model  where a user is limited to X recommendations (e.g., 50 recommendations) per week across all providers. Such a model can help to limit \u201coverly positive\u201d users (e.g., as described above) from skewing results based on their recommendations. An economic recommendation model can limit a user's recommendations according to a \u201cclassic\u201d model  where a user is limited to at most X recommendations (e.g., 5 votes) per provider. The use of the term \u201cclassic\u201d does not imply that such a model has previously been used, but implies that such a model may be implemented as a more basic feature. An economic recommendation model can limit a user's recommendations according to a meritocracy model  where the user has an initial quota (e.g., 1000 votes) that can be replenished according to a rewards system (e.g., based on a determination of a quality of the feedback, such as meaningful and\/or honest feedback by the user, among other determinations). The economic recommendation models described herein can be used independently or in any combination.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 2","b":"36"},"At , the method includes receiving, via the URL API, a get recommendation (getrec) web enabled function call from the client network node to get recommendation information. That is, in one implementation, an online search system (e.g., online document or MPL search system) API may be provided which communicates with a client network node among various different mobile platforms and to receive, via the online API, a getrec web enabled function call to get recommendation information ordered by at least one of similarity, popularity, and distance in relative to an online document or MPL. The getrec function call can include a geographic location identifier for the client network node and a selected online document or MPL as parameters. Instructions associated with the online API can be executed to receive the function call to query an online database for online documents or MPLs identified by the function call. In some implementation, the received getrec function call includes a geographic location identifier, a radius identifier, a tag identifier, an item identifier, a global or local flag, and a user identifier as parameters.","At , the method includes responding to the getrec function call by returning, via the URL API, a number of recommendations, a number of uses, and a set of tags. In such implementations, instructions associated with the API can be executed to return a number of recommendations, a number of uses, and a set of tags (e.g., types) as discussed above in detail in connection with .","In some implementations, the method includes executing instructions associated with the API to receive a recommendation (rec) web enabled function call from the client network node to recommend a particular item. In such implementations, the rec function call including a geographic location identifier, a URL identifier, a bid identifier, a user identifier, a tag identifier as parameters.","For example, the URL identifier may be associated with a mobile print location (MPL) provider. In this example, instructions associate with the API may execute to respond to the getrec function call by returning real time ranked recommendations for multiple URLs in JSON format from a URL indexed database associated with the online search system. Such multiple URLs may be indexed online. Further, in some implementations, instructions associated with the API may be executed to receive a note function call. Instructions may be executed in response to receiving the note function call to create a URL comment identifier to be indexed online in association with a referenced URL in the online search system.","In some implementations, instructions associated with the API may execute to pass a note attribute with text and to encode the note attribute with text within the created URL comment identifier to be indexed. In such implementations, instructions associated with the API may be executed to respond to a getrec function call by returning real time note attributes with text in association with the referenced URL in JSON format from a URL indexed database associated with the online search system.","Implementing the online search system API may include implementing a JSON representational state transfer (REST) API. Such an implementation may allow the API to receive http get function calls thus enabling the API to communicate with multiple HTTP GET enabled client network nodes from different mobile platforms.","As shown in the following examples, receiving the rec function call may include: receiving a rec function call that includes a recommending user identifier as a parameter for the client network node and a recommendation credit identifier as a parameter in association with a respective geographic location identifier parameter and a referenced URL identifier parameter. Instructions associated with the API may be executed to pass the recommendation credit identifier as an attribute to the online search system and to decrement a submission credit of a submitting user account associated with the recommending user identifier.","To illustrate, an online document or MPL API may be provided to receive another (second type) rec web enabled function call from the client network node to submit a comment in association with a given online document or MPL. This rec function call may include the geographic identifier parameter. In addition, this rec function call may pass a note attribute with text and a reference attribute associated with the selected online document or MPL identifier to the online search system.","In one example of this second type rec web enabled function call, the same rec REST API operation is performed passing in a notes attribute with the text of the attribute instead of a URL attribute. To associate the note with an online document or MPL, a reference (ref) attribute to associate to the note is passed in with the URL. This type of note may also be associated with the creator\/initial recommender of the item, exposing the creator more prominently than with the first type rec web function call. The creation time likewise also may be exposed when following the URL that is created from the note (and returned with the API). This example can include notes of 300-4000 characters. A comment using regular notes will store a notes entry that can be retrieved when following the notes URL.","Another example of this second type of rec web function call includes a more lightweight note referred to as a page note (PNote) that may not require any state lookup on the online search system  server nodes , and that may allow more control of the format of the URL created. This type of note is self-contained in the URL. This note type can include notes that are less than 100 characters where a URL allows up to 300 characters. Following the URL will show a web page similar to the regular notes web page, but all the information displayed is available in the URL. This feature may be used to create a very large number of items to recommend with a small amount of text for each item. This model can be used in polling applications where users can create their own geo-tagged, ad-hoc polls.","To create the PNote the following URL structure may be used: http:\/\/www.recommendersystem.com\/json\/pnot\/?q=<PNote><PNote>:=<Title>,<Content>, Where <Title> denotes the title of the note, and <Content> may be an arbitrary text string. XML, HTML or JavaScript may not be used in either the content or the title. The <PNote> part is URL encoded as it is passed and an HTTP GET parameter. This URL may be recommended and tagged into any arbitrary geolocation and follows all the rules for regular URLs in the search system . That is, this URL is entered in the system with an API call to the rec operation and retrieved with an API call to the getrec operation. At that point the geolocation and tag\/channel associations are made.","Another example of this second type of rec web function call is referred to herein as Quick Notes (QNote). The QNote is similar to PNotes in that they are self-contained. QNotes, however, contain a little more structure. The main idea behind the QNote is to fix or pin the location associated with the note as opposed to leaving it up to end users to decide what location the note should be associated with. This feature may be used in the online search system  to integrate with point of interest (POI) databases that contain very little more than the venue name and address. The venues are fixed in a location and hence can reliably provide point-to-point direction with the location encoded in a QNote.","To create the QNote the following URL structure may be used: http:\/\/www.recommendersystem.com\/json\/pnot\/?q=<QNote><QNote>:=<Latitude><Longitude><Site><PNote><PNote>:=<Title>,<Content>. The <Site> part is by some clients used to pick up a logo to display but may be an arbitrary URL. The <PNote> part follows the same rules as described above for PNotes.","This URL may be recommended and tagged following all the rules for regular URLs in the search system . That is, this URL is entered into the system with an API call to the rec operation and retrieved with an API call to the getrec operation. At that point the tag\/channel association is made.",{"@attributes":{"id":"p-0087","num":"0086"},"figref":["FIG. 3A","FIG. 3A"],"b":["60","27","62","64","66","62","60","62","64","60","66","60","68","66"]},"A user may interact (e.g., enter commands or data) with the computer  using one or more input devices  (e.g., a keyboard, a computer mouse, a microphone, joystick, and touch pad). Information may be presented through a graphical user interface (GUI) that is displayed to the user on a display monitor , which is controlled by a display controller . The server network node  also typically includes peripheral output devices, such as speakers and a printer. One or more remote computers may be connected to the server network node  through a network interface card (NIC) .","As shown in , the system memory  also stores an online search application , and a GUI driver , and input data, processing data, and output data . The online search application  is executed by the server network node  in order to implement the functionality of the online search system . In some embodiments, the online search application  interfaces with the GUI driver  and the user input  to control the operation of the online search system.",{"@attributes":{"id":"p-0090","num":"0089"},"figref":["FIG. 3B","FIG. 3B"],"b":["168","169","170","12","14","28","29"]},{"@attributes":{"id":"p-0091","num":"0090"},"figref":["FIG. 4","FIG. 4"],"b":["82","26","12","14","82","84","86","88","90","92","16","94","96","98","82","99","96"]},"The geographic coordinates display area  displays the latitude and longitude coordinates of a particular location. The latitude and longitude coordinates may be input by the user (e.g., by manually typing into the associated boxes, or by using a pointer  to select a location on a map that is displayed in the map area ) or they may be obtained automatically by searching by address identifiers (e.g., street, zip, city etc) or obtaining a reading from a location sensor (e.g., a built-in GPS receiver) that is associated with the client network node. These geographic coordinates collectively constitute a geographic location identifier that identifies a particular location to the online search system  (e.g., MPL search system). The geographic range input area  allows the user to identify a target geographic location by specifying a value of a radius of a circular region that is centered at the latitude and longitude coordinates in the geographic coordinates display area . In other examples, the user may identify a target geographic location in other ways. For example, the user may use the pointer  to draw a rectangular boundary of the target geographic location on the map that is displayed in the map area . Alternatively, the user may use the magnification controller  to select a magnification level of the map in the map area  such that the entire geographic region appearing in the map area  corresponds to the target geographic location.","The user selects one of the channels in the channel selection area  to specify a channel that will be associated with a recommendation or that will be used by the online search system  to restrict the online search to only those online documents that are associated with channel identifiers that correspond to the specified channel. The user can select one of the channels as it applies to MPLs (e.g., \u201claser\u201d, \u201ccolor\u201d, \u201chigh resolution\u201d, etc.) in the channel selection area  to specify a channel that will be associated with a recommendation or that will be used by the MPL search system  to restrict the MPL search to only those MPLs that are associated with channel identifiers that correspond to the specified channel.","In some examples, users are given the option to limit online searches to only those online documents and\/or MPLs that are associated with recommendations from a target group of user identifiers. The target group of user identifiers may, for example, consist of the user identifiers for the user's friends, the user's family members, or the user's co-workers. The target group also may be used to allow self-filtering to provide a personal bookmarking service. The online search system  can store the identified target groups in the user account records  in the database .","The user selects the \u201cGet Recommendations\u201d button  to submit a request for recommendations from the online search system . In response to the receipt of the location information (e.g., the geographic coordinates and the geographic range information) from a searching client network node, the online search system  identifies ones of the identifiers that are associated with respective ones of the geographic location identifiers in the database that correspond to the received location information. If a target channel is specified by the user, the online search system  additionally filters the identifiers by selecting only those identifiers that are associated with channel identifiers that match the target channel identifier. If a target set of user identifiers is specified by the user, the online search system  additionally filters the identifiers by selecting only those identifiers that are associated with user identifiers that match any of the specified target user identifiers.","The online search system  ranks the identified ones of the identifiers based on the recommendation information that respectively is associated with the identifiers. In this process, the online search system  typically aggregates the credits that are allocated to each of the identifiers. If a target set of user identifiers is specified by the user, the online search system  determines the rankings based on only the recommendation information received from the specified target set of user identifiers.","The online search system  returns a list of the ranked identifiers (up to the maximum number specified in the input area ) to the searching client network node. The ranked list of identifiers is displayed in the \u201cRecommendations\u201d display area  of the graphical user interface . Each of the identifiers (i.e., URL_, . . . , URL_) is presented in association with a respective ranking (i.e., 20, 15, 4, 2, 1) that was determined by the online search system  based on the recommendations that were received for the corresponding online documents and\/or MPLs. In some examples, the online search system  also returns other metadata, such as title and sample and average geographic coordinates associated with the identifiers to be returned in response to user queries.","In response to the selection of one of the identifiers (e.g., URL_) in the \u201cRecommendations\u201d display area , the communications application  copies the selected identifier into the \u201cSelected URL\u201d display area  and marks (e.g., with a flag icon ) the location of map in the map area  that corresponds to the geographic location identifier that is associated with the selected identifier. In some examples, the online search system returns the average of the geographic coordinates associated with the identifiers in the \u201cRecommendations\u201d display area , and the communications application  displays and maps the average location. When a user wishes to recommend a particular online document and\/or MPL, the user identifies the identifier to the communications application  simply by browsing to the particular online document and\/or MPL with a browser application.",{"@attributes":{"id":"p-0099","num":"0098"},"figref":["FIG. 5","FIG. 5"],"b":["26","108","110","112","110","114","112","108","116","118","108","26","16"]},{"@attributes":{"id":"p-0100","num":"0099"},"figref":["FIG. 6A","FIG. 6A"],"b":["116","26","120","16","122","120"]},"In response to user selection of the \u201cRecommend\u201d button  in the graphical user interface  () or the \u201cRecommend\u201d button  in the graphical user interface  (), the communications application prepares a submission and sends the submission to the MPL search system . The submission includes recommendation information in association with the current location information that is specified in geographic coordinates display area  (and optionally includes the geographic range information specified in the input area ) and the identifier of the currently selected MPL identifier. In some examples, the recommendation information is specified by a set of recommendation configuration settings, which may be fixed or customizable by the user. The recommendation configuration settings typically include a user identifier that identifies the user and an amount of credit (also referred to as \u201csubmission credit\u201d) to allocate for each recommendation. In other examples, for each submission, the communications application  opens a dialog box that allows the user to specify at least some of the recommendation information that will be transmitted with the submission. The specified recommendation may include, for example, the amount of credit to allocate to the selected MPL, and an indication whether the recommendation is for (positive) or against (negative) the selected MPL.","In response to receipt of the submission from the client network node, the MPL search system  indexes the respective recommendation information and the respective MPL identifier in association with the respective geographic location identifier in the recommendation records database .","In some examples, the online search system  allows users to submit user-generated comments (or notes) in association with respective geographic location identifiers that identify respective geographic locations. This feature allows a user to submit a user-generated comment for any MPL and any point of interest (e.g., the location of a business or other location), even those points of interest that currently do not have an online presence (e.g., they are not associated with any online document, such as a web page). The geo-tagged comments are hosted by the search system , which allows the comments to be treated in the same way as other online documents or MPLs by the search system . For example, users of the client network nodes ,  can submit recommendations for comments and the comments can be filtered based on channel selections and identification of target groups of user identifiers (e.g., friends).",{"@attributes":{"id":"p-0104","num":"0103"},"figref":["FIG. 6B","FIG. 6A","FIG. 6B"],"b":["121","1","123","125","127","1","121","1","121","2","121","3","127","1","127","2","127","3"]},{"@attributes":{"id":"p-0105","num":"0104"},"figref":["FIG. 6C","FIG. 6C","FIG. 6C"],"b":["129","129","131"]},{"@attributes":{"id":"p-0106","num":"0105"},"figref":["FIG. 6D","FIG. 6D","FIG. 6D"],"b":["133","1","133","2","133","3","135","1","135","2"]},{"@attributes":{"id":"p-0107","num":"0106"},"figref":["FIG. 7","FIG. 7"],"b":["130","82","132","132","26","134","132","26"]},"By way of example and not by way of limitation,  shows the graphical user interface (GUI) for an online document search system . In accordance with this method, the search system  receives a respective submission from a given client network node, e.g.,  and\/or . The submission includes a user-generated comment that is generated by a user of the given client network node in association with a respective geographic location identifier identifying a respective geographic location. The online search system  can create a respective online document identifier of the user-generated comment.","According to one or more examples, the online search system  indexes the online document identifier of the user-generated comment in association with the respective geographic location identifier in the database.","A number of methods can be implemented by an online search system. In accordance with one of the number of methods, the online search system receives a respective submission from a given client network node. The submission includes a user-generated comment that is generated by a user of the given client network node in association with a respective geographic location identifier identifying a respective geographic location. The online search system creates a respective online document or MPL identifier of the user-generated comment. The online search system indexes the respective online document or MPL identifier of the user-generated comment in association with the respective geographic location identifier in the database.","Once a comment has been indexed, the online search system  is able to serve a renderable description of a graphical representation of the user-generated comment in response to receipt of a request from a client network node to view content associated with the online document or MPL identifier of the user-generated comment. In some embodiments, when an online document or MPL is displayed in the browser window, the most popular comments that are associated with that online document or MPL in the current geo-location also will be displayed. In addition, the online search system  is able to receive a respective submission from a particular client network node in connection the hosted comment. The submission can include, for example, respective recommendation information in association with the respective online document or MPL identifier identifying the user-generated comment and a respective geographic location identifier identifying a respective geographic location. In response to the receipt of such a submission, the online search system  indexes the respective recommendation information and the respective online document identifier of the user-generated comment in association with the respective geographic location identifier in the database .","As described in connection with , the number of recommendations that a particular user may make within a time span is limited by the amount of credit that the user currently has available. Recommendation credits (or tickets) may be granted or purchased and used to increase prominence of an online document or MPL in connection with a geographic location. For example, users can be periodically issued credit (which also may be referred to as \u201ccurrency\u201d) in the form of granted or purchased tickets that allows them to recommend a certain number of online documents or MPLs within a specified time window.",{"@attributes":{"id":"p-0113","num":"0112"},"figref":["FIG. 8","FIG. 8"],"b":["150","152","154","156","154","154","16","158","154","154","16","158","154"]},{"@attributes":{"id":"p-0114","num":"0113"},"figref":"FIG. 9","b":["150","152","154","156","154","154","16","162","154","154","16","164","154"]},{"@attributes":{"id":"p-0115","num":"0114"},"figref":["FIG. 10","FIG. 10"],"b":["150","152","154","156","154","166","164","154","16","168","154","154","16","170","154","164","164","164"]},"The examples that are described herein provide systems and methods of searching for MPLs based on geography tagged recommendations. These examples enable users to recommend MPLs to others in connection with respective geographic locations and optionally with respective channels corresponding to categories respectively assigned to the MPLs. A subscribing user may be presented with ranked list of the most popular MPLs within a particular geographic location and optionally on a particular channel that is selected by the user.","Other examples are within the scope of the claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0003","num":"0002"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0004","num":"0003"},"figref":"FIG. 1B"},{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1C"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1D"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1E"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1F"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6C"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6D"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
