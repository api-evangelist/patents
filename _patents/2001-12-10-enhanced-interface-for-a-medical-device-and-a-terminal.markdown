---
title: Enhanced interface for a medical device and a terminal
abstract: A system is described that comprises a medical device on which is installed a version of software and a software agent communicatively coupled to the medical device without regard to the version of software installed on the medical device. An example of the medical device includes a defibrillator. The software agent may reside in a personal digital assistant and can be operated to communicate with the defibrillator to access the data stored in the defibrillator irrespective of the version of software of the defibrillator.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06957102&OS=06957102&RS=06957102
owner: Medtronic Emergency Response Systems, Inc.
number: 06957102
owner_city: Redmond
owner_country: US
publication_date: 20011210
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["The present invention relates generally to systems for communicating medical information and more particularly, to systems and methods for communicating configuration data and patient data between medical devices and a terminal.","In the past, most medical devices operated as stand-alone devices that would either record physiological information from the patient or be operated to supply some therapy or treatment to the patient.  shows a medical system  that is limited to monitoring a patient's vital signs and recording physiological information from the patient. The system  uses an electrocardiogram acquisition module  to acquire electrocardiogram data of a patient  and forward such data to a PalmPilot\u2122 . The PalmPilot  can be controlled to start or stop the recording of the electrocardiogram data. Other information, such as name and age of a patient, can also be recorded along with the electrocardiogram data associated with the patient . While recording, the PalmPilot  displays the electrocardiogram data as waveforms in real time. The user can change the gain or the zoom to see more details of the waveforms. For proper communications between the electrocardiogram acquisition module  and the PalmPilot , the PalmPilot  must be compatible with the software version installed on the electrocardiogram acquisition module .","Other medical devices have advanced to the point where they not only can monitor a patient but they can also apply a therapy to the patient to treat various ailments. These medical devices can be tailored to a particular patient by modifying the parameters relating to a particular medical protocol used to treat the patient. For example, if a patient is in defibrillation, the medical protocol may require a sequence of shocks to be applied to the patient. The energy level of each shock can be modified. Or, the sequencing of a medical protocol can be modified so that the device automatically executes each step in the medical protocol without further human intervention.","To vary or program the parameters of the medical device, the parameters can be retrieved from the medical device. To do that, a terminal is needed to communicate with the medical device because most medical devices do not have a user interface. However, the communication between the terminal and the medical device may be impossible unless the terminal is compatible with the version of software installed on the medical device. The problem is that as different generations of devices and terminals are distributed into the marketplace, it can be exceedingly difficult to obtain a compatible terminal to communicate with the device having a particular version of software. The medical system  illustrates such a problem in that if the electrocardiogram acquisition module  were to be distributed with a version of software not known to the PalmPilot , the PalmPilot  may not be able to obtain any physiological information or be able to control the electrocardiogram acquisition module .","Furthermore, the current trend among designers of medical equipment is to integrate such equipment into an overall system whereby the equipment can be programmed by an operator in a manner that is specific to a particular patient's needs as well as to have the equipment operate in conjunction with other pieces of the system. In order to facilitate such a system integration, it is necessary to provide a common protocol that can be used to either read data from or write data to a particular medical device. Because many devices have different versions of operating software, it is desirable that communications to these devices operate in a predictable manner regardless of the version of operating software on each device.","Another prior art solution is shown in  where a medical system  includes a treatment device  that is engineered with all the rules, parameters, and user interface features necessary for the treatment device  to communicate with a number of terminals -. In other words, the treatment device  contains all of the intelligence necessary to treat a patient as well as the ability to present a user interface to configure the treatment device . When one of the terminals - has successfully connected to the treatment device , the treatment device  presents a user interface, which is displayed on one of the terminals -, so that a user may control the treatment device  or read data from it. To ensure compatibility with multiple generations of terminals -, however, the medical device  must be constantly updated and marketed at a price that is prohibitively expensive for many customers.","To facilitate communication between one or more medical devices and a terminal, the present invention is a communication protocol executed between a medical device and a software agent. The medical device includes a directory of objects that can be accessed by the software agent. Each object includes executing code that can write data to or retrieve data from the medical device irrespective of the version of software installed on the medical device. Each object has a well-known or predefined name so that any software agent may access the well-known name of the object and invoke the executing code of the object.","In one embodiment of the invention, the medical device, such as a defibrillator, can export patient data or configuration data (operating parameters) to the software agent and can have its operating parameters programmed by the software agent.","In one embodiment of the invention, the software agent operates on a computing device, such as a personal digital assistant, which communicates with the medical device through a wired or wireless communication link.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3","b":["300","302","304","302","304","304","304","302","302"]},"The medical device  contains one portion of an interface (described in detail below), and the software agent  contains the other portion of the interface. These portions of the interface allow the software agent  to communicate to the medical device  in a predictable manner regardless of the version of software that is installed on the medical device . In this way, communication compatibility between a software agent from one generation and a medical device from another generation is possible. In the example shown in , a software agent  communicates with a medical device  as well as a medical device . With the present invention, communication can take place with both devices even if the medical device  is from a different generation than the medical device .","One advantage of the ability to communicate with both the medical device  and the medical device  is best illustrated by an example. Suppose a patient had been successfully treated by the medical device  so that the medical device  contains medical information regarding the successful treatment that was applied to the patient. At a later point in time, the patient is in need of the same treatment again, but the medical device  is at a location that is geographically remote from the patient. The software agent  may locate the medical device , retrieve the medical information regarding the patient from the medical device , such as via a wireless communication link, and configure the medical device  so that the medical device  may apply the treatment that was successfully applied to the patient by the medical device . In this way, medical personnel may reuse a treatment from the medical history of a patient by retrieving medical information from any medical devices that may have treated the patient.","The software agent  can also interact with other devices and systems. One example is an output device , which includes any devices that can output medical information understandable to a human user, transmit the medical information, or process the medical information. Such output devices  can include but are not limited to a printer, a waveform display, a video recorder, a debugging machine, a data card, a cellular phone, a therapeutic device trainer, a modem, an electrocardiogram monitor, a personal computer, an alarm system, a voice storage system, and a personal digital assistant. Another example of a device that can communicate to the software agent  is a data management system . The data management system  is capable of storing, allowing access to, and analyzing the medical information that is obtained by the software agent . A further example is a battery that can communicate with the software agent  regarding its present capacity so as to alert a user to recharge the battery. An additional example is a service test system or a manufacturing test system that can be controlled by the software agent  to calibrate or to obtain a service history of a medical device. As yet another example is another medical device that the software agent  may send data for storage.","Besides being capable of interacting with other devices and systems, the software agent  can interact with other software agents, such as a software agent . The software agent  may share with the software agent  the medical information obtained from either the medical device  or the medical device . The software agent  may share this medical information with other devices and systems, such as a medical device , an output device , or a data management system .","Each software agent connects a medical device to a diverse group of devices and systems and thereby enhances the functionality of the medical device. Because each software agent can communicate with other software agents, a large network may be formed. The communication medium by which each software agent communicates can be any communication network, such as a wired local area network or a wireless local area network.","In , a system  for communicating medical information includes a defibrillator , as an example of a medical device, and a personal digital assistant , as an example of a terminal or a computing device that can execute the software agent for communicating with the medical device. The defibrillator  contains a piece of communication software, and the software agent, which may reside in the personal digital assistant  or in another defibrillator (not shown), contains the other piece of the communication software that allows both to communicate through a communication medium . The communication medium  can be chosen from wired communication protocols or wireless communication protocols.","The defibrillator  also includes hardware (not shown) to apply a therapy to a patient according to a set of therapeutic rules. A number of data storage devices (described in further detail below) may be housed in the defibrillator  for storing medical information, such as patient data and configuration data. A common interface (also described below) exists in the defibrillator  for exporting either the patient data or the configuration data to a device that is external to the defibrillator .","The personal digital assistant  also includes a number of data storage devices (described below) for storing medical information, such as patient and configuration data obtained from the defibrillator , and for storing a set of presentation tools. These presentation tools can be used to invoke a user interface to allow a user to interact with the defibrillator . The software agent in the personal digital assistant  also provides an interface for importing medical information stored in the defibrillator . Via the interface, the software agent allows the user to configure the defibrillator  irrespective of the version of software installed on the defibrillator .",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 5","b":["402","404","501","402","502","402"]},"Examples of medical information include patient data, which is stored in a datastore , and configuration data, which is stored in a datastore . Both the patient data and configuration data may be modified to affect a therapy that may be applied to a patient by a set of therapeutic rules . A device session manager  executes the piece of communications software associated with the defibrillator  and coordinates the device interface , patient data in the datastore , and configuration data in the datastore .","The software agent running on the personal digital assistant  includes an agent session manager  for executing the communications software associated with the software agent and coordinating various pieces of software of the software agent. An agent interface  allows the software agent to import medical information, which is external to the software agent, such as patient data and configuration data. After the medical information is imported into the software agent, the medical information may be stored in a datastore  (if patient data) or in a datastore  (if configuration data). One or more presentation tools  may be invoked by a set of agent rules  when the medical information is imported so that a user interface may be displayed to show the medical information to a user. The user may operate the user interface to query for more information from the defibrillator  or to configure the defibrillator . The term \u201cconfigure\u201d includes modifying the configuration and\/or patient data, causing any functions of the medical device to be performed, or emulating a front panel that can control the medical device.","The software agent can retrieve medical information in the datastore  and the datastore  or configure the defibrillator  via the device interface  and the agent interface  irrespective of the version of the software or the medical device or irrespective of the therapeutic rules  or the version of the therapeutic rules . In this way, any terminal or computing device that executes the software agent, such as the personal digital assistant , can communicate with any medical device, such as the defibrillator .","A session manager  as shown in  represents either the device session manager  or the agent session manager . The session manager  operates in a general manner to get data from a certain location or to put data at a certain location.","At least two types of communication protocols are supported: the wired communication protocols  or wireless communication protocols . Each set of communication protocols includes a translator layer  that hides the implementation of a selected set of communication protocols so as to provide data that is understandable to the session manager  without regard to the selected set of communication protocols. Below the translator layer  are the communication protocols that make up the two sets of protocols.","A number of communication protocols can be selected. For example, the wireless communication protocols include the Object Exchange (OBEX) protocol, Infrared Data Association (IrDA) protocols, and Bluetooth protocols. The wired communication protocols include File Transfer Protocol (FTP), Transmission Control Protocol (TCP), Internet Protocol (IP), Lightweight Directory Access Protocol (LDAP), Simple Object Access Protocol (SOAP), Common Object Request Broker Architecture (CORBA) protocol, RS-232-C protocol, HyperLAN, and IEEE 802.x protocols. The OBEX protocol or the FTP protocol accesses data that is organized in a directory so that a layer that contains these protocols is also known as a directory layer .","As shown in , medical information on the defibrillator , which is accessible by the software agent residing on the personal digital assistant , is exposed by the device session manager  as a number of objects in a directory . Objects - are organized as an inbox, an outbox, device data, patient data, and a root directory. An object can contain other objects, such as object , and in such a case, the object being contained is considered a subdirectory. There can be one or more subdirectories in the directory .","Each object in the directory can be a constructor object, an activator object, or both. A constructor object can be controlled to query the defibrillator for medical information whereas an activator object can be controlled to configure the defibrillator . Those objects that are to be exposed have predefined names (or \u201cwell-known\u201d names in the idioms of software engineering) so that the software agent may use these well-known names to invoke the objects in the directory  via the device interface . These well-known names may be composed of any combination of letters, numbers, or symbols so long as each combination is unique to invoke an object in the directory .","When an object is exported from the directory  via the device interface , the object is imported into the software agent via the agent interface  as an element , which is structured in a language that contains the data of the object and that describes the data of the object. In other words, the exported object appears as an arrangement of data that is understood by the software agent, thereby allowing ease of data processing. The language to structure the data may use a number of textual tags to describe the data of the object. An example language includes Extensible Markup Language (XML), and in such a case, the element  is an XML element.","Upon receiving the element , the agent session manager  interacts with the set of agent rules  to invoke a presentation tool from a set of presentation tools . For example, the element  may invoke a presentation tool  so that a user interface may display the data of the element  on the personal digital assistant . A number of presentation tools may be used, such as stringed functions, pick values, pick lists, check lists, radio buttons, and pull down menus. Each presentation tool analyzes the element  for displaying by parsing out the attributes of the element , such as label, field, and parameter name. For example, the element  may represent a shock waveform that has four valid levels of energy; a presentation tool may represent the element  as four radio buttons with each radio button displaying a valid level of energy.","The communication between the defibrillator  and the software agent that resides on the personal digital assistant  can be further clarified by referring to a process  shown in FIG. . The communication begins when either the software agent starts the communications process as shown in a block  or the defibrillator  starts the communications process as shown in block .  illustrates in greater detail the process by which the software agent starts its communications software, and  illustrates in greater detail the process by which the defibrillator  starts its communications software.","Regardless of whether the software agent or the defibrillator initiates the communication, the process  proceeds to a decision block  where a determination is made as to whether the software agent wants to retrieve data from the defibrillator . If so, processing proceeds to a block  where a desired constructor object from the directory in the defibrillator  is invoked by the software agent to query and retrieve the desired medical information in the defibrillator . Next, at block , the software agent invokes a presentation tool to display the returned medical information in the form of an element, such as the element . When the processing at block  is finished, the process  enters node A and loops back to the decision block  again.","If the software agent does not want to retrieve the medical information from the defibrillator , the decision block  branches to a decision block , which determines whether the software agent wants to configure the defibrillator . If the answer to the decision block  is NO, the process  enters the node A and loops back to the decision block . If the answer at decision block  is YES, processing proceeds to block , where the software agent invokes a presentation tool to allow a user to change data. Next, at a block , the software agent invokes a desired activator object from a number of activator objects in the defibrillator  to change medical information in the defibrillator , and thereby configure the defibrillator . After the completion of processing in the block , processing proceeds to enter the node A, which leads back to the decision block  again.","As discussed above, for proper communication, the software agent may start its communications software as shown in  process  begins by having the software agent set up its communication software at block . This may include selecting a desired set of communication protocols and setting up other communication parameters. Because the process of setting up a piece of communication software is considered to be well known, it need not be further discussed.","Once the software agent has successfully set up its communications software, the software agent attempts to read the directory of objects on the defibrillator  at a block  so as to verify that the software agent is communicatively coupled to the defibrillator . After attempting to read the directory, processing proceeds to a decision block  to determine whether the directory is available. If the software agent cannot read the directory, the software agent loops back to block  to attempt another try at reading the directory. Once the directory can be read by the software agent, processing returns to the block  in FIG. .",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 10","b":["1000","402","1002","1000","402"]},"After the communications software is set up, the defibrillator  exposes the directory of objects at block . Each exposed object has a well-known name that the software agent can use to invoke the functionality of the exposed object. An exposed constructor object can be used to query the defibrillator  for medical information, and the exposed activator object can be used to change one or more parameters and thereby alter the operation of the defibrillator . If an exposed object is a constructor object as well as an activator object, then this exposed object can be used to query and configure the defibrillator .","Next, the process  waits until the software agent communicates with the defibrillator  as represented by a decision block . If the software agent has not communicated with the defibrillator, the answer to the decision block  is NO, and the process  loops back to the decision block  again to wait until the software agent has communicated with the defibrillator. Once the answer to decision block  is YES, the processing proceeds to a decision block  where it is determined whether the software agent is invoking a constructor object. If the answer to the decision block  is YES, the defibrillator  gets the desired medical information from the datastore. For example, if the desired medical information is patient data, the defibrillator  gets the patient data from the datastore . After the desired medical information is obtained, the defibrillator  exports the medical information to the software agent as an element, such as element , at a block . Processing then proceeds from the block  to enter a node B and loops back to the decision block  again.","If the answer to the decision  is NO, the process  determines whether the software agent is invoking an activator object at a block . If the software agent is indeed invoking an activator object, the program execution proceeds to a block  where the defibrillator  sets a desired parameter in the datastore to a certain value. Afterwards, the process  proceeds to enter the node B from the block  and loops back to the decision block  again.","The process  enters a block  if the answer to the decision block  is NO. In this case, the defibrillator  has detected an error because it cannot understand the communication from the software agent. The defibrillator  will then export the error to the software agent as an element so that the software agent can further analyze the error.","The foregoing discussion uses the defibrillator  as an example of a medical device, but such a use is not meant to be limiting because the medical device can be any device that is capable of applying a therapy to a patient (a therapeutic device) or monitoring a patient parameter such as ECG, heart rate, blood pressure, etc. (a monitoring device). Also, the personal digital assistant  is used as an example of a computing device that may execute the software agent, but any computing device that can execute the software agent is within the scope of the present invention. Finally, although the process steps described above and shown in  are shown in a particular sequence, it would be apparent to those skilled in the art that such steps could be performed in a different order and still achieve the functionality described.","While the preferred embodiment of the invention has been illustrated and described, it will be appreciated that various changes can be made therein without departing from the scope of the invention. It is therefore intended that the scope of the invention be determined from the following claims and equivalents thereto."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing aspects and many of the attendant advantages of this invention will become more readily appreciated as the same become better understood by reference to the following detailed description, when taken in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
