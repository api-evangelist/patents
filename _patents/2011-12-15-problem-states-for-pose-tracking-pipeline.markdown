---
title: Problem states for pose tracking pipeline
abstract: A human subject is tracked within a scene of an observed depth image supplied to a pose tracking pipeline. An indication of a problem state is received from the pose tracking pipeline, and an identification of the problem state is supplied to the pose tracking pipeline. A virtual skeleton is received from the pose tracking pipeline that includes a plurality of skeletal points defined in three-dimensions. The pose tracking pipeline selects a three-dimensional position of at least one of the plurality of skeletal points in accordance with the identification of the problem state supplied to the pose-tracking pipeline.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08630457&OS=08630457&RS=08630457
owner: Microsoft Corporation
number: 08630457
owner_city: Redmond
owner_country: US
publication_date: 20111215
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Optical tracking of a human subject may be used to control electronic devices such as computers and gaming consoles. For example, a human subject may provide a control input to an electronic device by moving his or her body within a scene observed by an optical sensor. For at least some electronic devices, an image of the human subject captured by the optical sensor may be analyzed to create a model of the human subject, which may be translated into a control input for the electronic device.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter. Furthermore, the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.","A human subject is tracked within a scene of an observed depth image supplied to a pose tracking pipeline. An indication of a problem state is received from the pose tracking pipeline, and an identification of the problem state is supplied to the pose tracking pipeline. A virtual skeleton is received from the pose tracking pipeline that includes a plurality of skeletal points defined in three-dimensions. The pose tracking pipeline selects a three-dimensional position of at least one of the plurality of skeletal points in accordance with the identification of the problem state supplied to the pose-tracking pipeline.","The present disclosure is directed to recognition, analysis, and tracking of a human subject by supplying an identification of zero, one, or more problem states to a pose tracking pipeline. The pose tracking pipeline is supplied an observed depth image of the human subject within a scene captured by a depth camera. The observed depth image is processed by the pose tracking pipeline to model the human subject with a virtual skeleton that includes multiple skeletal points defined in three-dimensions. The pose tracking pipeline selects a three-dimensional position of one or more of the skeletal points in accordance with the identification of zero, one, or more problem states.","A problem state may refer to a pre-defined state of a human subject within an observed scene. The existence of one or more of these problem states within an observed scene may decrease the accuracy or increase the uncertainty of pose recognition. However, the accuracy and certainty of the pose recognition may be improved by identifying whether zero, one, or more problem states exists within a scene, and by providing the pipeline with information identifying the existing problem state so that the pipeline is able to tune processing for that particular problem state.","Example problem states may include: an occluded state in which a portion of the human subject is occluded by another object within the observed scene, a cropped state in which a portion of the human subject resides outside of the observed scene, a proximate state in which a portion of the human subject resides at the same or similar depth within the scene as another object, a crossed state in which a portion of the human subject has crossed a virtual boundary into a region where that portion of the human subject does not usually reside, and a velocity limited state in which a portion of the human subject moves at a rate that exceeds an upper or lower velocity threshold. However, other suitable problem states may be identified.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 1A","FIG. 1A","FIG. 1A","FIG. 1A","FIG. 1A","FIG. 2"],"b":["10","12","14","16","18","20","18"]},"A tracking system may be used to recognize, analyze, and\/or track one or more targets, such as human subject .  shows a scenario in which human subject  is tracked using depth camera  so that the movements of human subject  may be interpreted by gaming system  as controls that can be used to affect the game being executed by gaming system . In other words, human subject  may use his or her movements to control the game. The movements of human subject  may be interpreted as virtually any type of game control.","The example scenario illustrated in  shows human subject  playing a boxing game that is being executed by gaming system . The gaming system uses HDTV  to visually present a boxing opponent  to human subject . Furthermore, the gaming system uses HDTV  to visually present a player avatar  that human subject  controls with his or her movements. As shown in , human subject  can throw a punch in physical\/world space as an instruction for player avatar  to throw a punch in game\/virtual space. Gaming system  and depth camera  can be used to recognize and analyze the punch of human subject  in physical space so that the punch can be interpreted as a game control that causes player avatar  to throw a punch in game space. For example,  shows HDTV  visually presenting player avatar  throwing a punch that strikes boxing opponent  responsive to human subject  throwing a punch in physical space.","Other movements by human subject  may be interpreted as other controls, such as controls to bob, weave, shuffle, block, jab, or throw a variety of different punches. Furthermore, some movements may be interpreted into controls that serve purposes other than controlling player avatar . For example, the human subject may use movements to end, pause, or save a game, select a game level, view high scores, communicate with a friend or other player, etc.","In some embodiments, a target to be tracked may include a human subject and an object. In such embodiments, for example, a human subject may be holding an object, such that the motions of the human subject and the object are utilized to adjust and\/or control parameters of an electronic game. For example, the motion of a human subject holding a racket may be tracked and utilized for controlling an on-screen racket in an electronic sports game. In another example, the motion of a human subject holding an object may be tracked and utilized for controlling an on-screen weapon in an electronic combat game.","Tracking systems may be used to interpret movements of a target (e.g., a human subject) as operating system and\/or application controls that are outside the realm of gaming. Virtually any controllable aspect of an operating system and\/or application, such as the boxing game shown in , may be controlled by movements of a target, such as human subject . The illustrated boxing scenario is provided as an example, but is not meant to be limiting in any way. To the contrary, the illustrated scenario is intended to demonstrate a general concept, which may be applied to a variety of different applications without departing from the scope of this disclosure.","The methods and processes described herein may be tied to a variety of different types of computing systems.  show a nonlimiting example in the form of gaming system , HDTV , and depth camera . As another, more general, example,  schematically shows a computing system  that may perform one or more of the recognition, tracking, and analysis methods and processes described herein. Computing system  may take a variety of different forms, including, but not limited to, gaming consoles, personal computing systems, public computing systems, human-interactive robots, military tracking and\/or targeting systems, and character acquisition systems offering green-screen or motion-capture functionality, among others.","Computing system  may include a logic subsystem , a data-holding subsystem , a display subsystem , and\/or a capture device . The computing system may optionally include components not shown in , and\/or some components shown in  may be peripheral components that are not integrated into the computing system.","Logic subsystem  may include one or more physical devices configured to execute one or more instructions. For example, the logic subsystem may be configured to execute one or more instructions that are part of one or more programs, routines, objects, components, data structures, or other logical constructs. Such instructions may be implemented to perform a task, implement a data type, transform the state of one or more devices, or otherwise arrive at a desired result. The logic subsystem may include one or more processors that are configured to execute software instructions. Additionally or alternatively, the logic subsystem may include one or more hardware or firmware logic machines configured to execute hardware or firmware instructions. The logic subsystem may optionally include individual components that are distributed throughout two or more devices, which may be remotely located in some embodiments.","Data-holding subsystem  may include one or more physical devices configured to hold data and\/or instructions executable by the logic subsystem to implement the herein described methods and processes. When such methods and processes are implemented, the state of data-holding subsystem  may be transformed (e.g., to hold different data). Data-holding subsystem  may include removable media and\/or built-in devices. Data-holding subsystem  may include optical memory devices, semiconductor memory devices (e.g., RAM, EEPROM, flash, etc.), and\/or magnetic memory devices, among others. Data-holding subsystem  may include devices with one or more of the following characteristics: volatile, nonvolatile, dynamic, static, read\/write, read-only, random access, sequential access, location addressable, file addressable, and content addressable. In some embodiments, logic subsystem  and data-holding subsystem  may be integrated into one or more common devices, such as an application specific integrated circuit or a system on a chip.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 2","b":"50"},"Display subsystem  may be used to present a visual representation of data held by data-holding subsystem . As the herein described methods and processes change the data held by the data-holding subsystem, and thus transform the state of the data-holding subsystem, the state of display subsystem  may likewise be transformed to visually represent changes in the underlying data. As a nonlimiting example, the recognition, tracking, and analysis of human subjects described herein may be reflected via display subsystem  in the form of a game character that changes poses in game space responsive to the movements of a game player in physical space. Display subsystem  may include one or more display devices utilizing virtually any type of technology. Such display devices may be combined with logic subsystem  and\/or data-holding subsystem  in a shared enclosure, or such display devices may be peripheral display devices, as shown in .","Computing system  further includes a capture device  configured to obtain depth images of one or more targets. Capture device  may be configured to capture video with depth information via any suitable technique (e.g., time-of-flight, structured light, stereo image, etc.). The captured video may take the form of a time-series of multiple observed depth images. As such, capture device  may include a depth camera, a video camera, stereo cameras, and\/or other suitable capture devices.","For example, in time-of-flight analysis, the capture device  may emit infrared light to a target and may then use sensors to detect the backscattered light from the surface of the target. In some cases, pulsed infrared light may be used, wherein the time between an outgoing light pulse and a corresponding incoming light pulse may be measured and used to determine a physical distance from the capture device to a particular location on the target. In some cases, the phase of the outgoing light wave may be compared to the phase of the incoming light wave to determine a phase shift, and the phase shift may be used to determine a physical distance from the capture device to a particular location on the target.","In another example, time-of-flight analysis may be used to indirectly determine a physical distance from the capture device to a particular location on the target by analyzing the intensity of the reflected beam of light over time, via a technique such as shuttered light pulse imaging.","In another example, structured light analysis may be utilized by capture device  to capture depth information. In such an analysis, patterned light (i.e., light displayed as a known pattern such as grid pattern, a stripe pattern, a constellation of dots, etc.) may be projected onto the target. Upon striking the surface of the target, the pattern may become deformed, and this deformation of the pattern may be studied to determine a physical distance from the capture device to a particular location on the target.","In another example, the capture device may include two or more physically separated cameras that view a target from different angles to obtain visual stereo data. In such cases, the visual stereo data may be resolved to generate a depth image.","In other embodiments, capture device  may utilize other technologies to measure and\/or calculate depth values. Additionally, capture device  may organize the calculated depth information into \u201cZ layers,\u201d i.e., layers perpendicular or normal to a Z axis extending from the depth camera along its line of sight to a target.","In some embodiments, two or more different cameras may be incorporated into an integrated capture device. For example, a depth camera and a video camera (e.g., RGB video camera) may be incorporated into a common capture device. In some embodiments, two or more separate capture devices may be cooperatively used. For example, a depth camera and a separate video camera may be used. When a video camera is used, the video camera may be used to provide target tracking data, confirmation data for error correction of target tracking, image capture, face recognition, high-precision tracking of fingers (or other small features), light sensing, and\/or other functions.","It is to be understood that at least some target analysis and tracking operations may be executed by a logic machine of one or more capture devices. A capture device may include one or more onboard processing units configured to perform one or more target analysis and\/or tracking functions. A capture device may include firmware to facilitate updating such onboard processing logic.","Computing system  may optionally include one or more input devices, such as controller  and controller . Input devices may be used to control operation of the computing system. In the context of a game, input devices, such as controller  and\/or controller  can be used to control aspects of a game not controlled via the target recognition, tracking, and analysis methods and procedures described herein. In some embodiments, input devices such as controller  and\/or controller  may include one or more of accelerometers, gyroscopes, infrared target\/sensor systems, etc., which may be used to measure movement of the controllers in physical space. In some embodiments, the computing system may optionally include and\/or utilize input gloves, keyboards, mice, track pads, trackballs, touch screens, buttons, switches, dials, and\/or other input devices. As will be appreciated, recognition, tracking, and analysis of human subjects may be used to control or augment aspects of a game, or other application, conventionally controlled by an input device, such as a game controller. In some embodiments, the human subject tracking described herein can be used as a complete replacement to other forms of user input, while in other embodiments such human subject tracking can be used to complement one or more other forms of user input.","Computing system  may be configured to perform the human subject tracking methods described herein. However, it should be understood that computing system  is provided as a nonlimiting example of a device that may perform such human subject tracking. Other devices are within the scope of this disclosure.","Computing system , or another suitable device, may be configured to represent each human subject with a model. As described in more detail below, information derived from such a model can be compared to information obtained from a capture device, such as a depth camera, so that the fundamental proportions or shape of the model, as well as its current pose, can be adjusted to more accurately represent the modeled human subject. The model may be represented by one or more polygonal meshes, by a set of mathematical primitives, and\/or via other suitable machine representations of the modeled target.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 3","FIGS. 1A and 1B"],"b":["70","70","18"]},"A model of a human subject can be variously configured without departing from the scope of this disclosure. In some examples, a model may include one or more data structures that represent a target as a three-dimensional model comprising rigid and\/or deformable shapes, or body parts. Each body part may be characterized as a mathematical primitive, examples of which include, but are not limited to, spheres, anisotropically-scaled spheres, cylinders, anisotropic cylinders, smooth cylinders, boxes, beveled boxes, prisms, and the like.","For example, body model  of  includes body parts bp through bp, each of which represents a different portion of a modeled human subject. Each body part is a three-dimensional shape. For example, bp is a rectangular prism that represents the left hand of a modeled human subject, and bp is an octagonal prism that represents the left upper-arm of the modeled human subject. Body model  is exemplary in that a body model may contain any number of body parts, each of which may be any machine-understandable representation of the corresponding part of the modeled target.","A model including two or more body parts may also include one or more joints. Each joint may allow one or more body parts to move relative to one or more other body parts. For example, a model representing a human subject may include a plurality of rigid and\/or deformable body parts. Some of these body parts may represent a corresponding anatomical body part of the human subject. Further, each body part of the model may comprise one or more structural members (i.e., \u201cbones\u201d or skeletal parts), with joints located at the intersection of adjacent bones. It is to be understood that some bones may correspond to anatomical bones in a human subject and\/or some bones may not have corresponding anatomical bones in the human subject.","The bones and joints may collectively make up a skeletal model (e.g., a virtual skeleton), which may be a constituent element of the body model. In some embodiments, a skeletal model may be used instead of another type of model, such as body model  of . The skeletal model may include one or more skeletal members for each body part and\/or a joint between adjacent skeletal members. In other words, a virtual skeleton that includes a plurality of points defined in three-dimensional space may serve as this type of skeletal model. Exemplary skeletal model  and exemplary skeletal model  are shown in , respectively.  shows a skeletal model  as viewed from the front, with joints j through j.  shows a skeletal model  as viewed from a skewed view, also with joints j through j.","Skeletal model  further includes roll joints j through j, where each roll joint may be utilized to track axial roll angles. For example, an axial roll angle may be used to define a rotational orientation of a limb relative to its parent limb and\/or the torso. For example, if a skeletal model is illustrating an axial rotation of an arm, roll joint j may be used to indicate the direction the associated wrist is pointing (e.g., palm facing up). By examining an orientation of a limb relative to its parent limb and\/or the torso, an axial roll angle may be determined. For example, if examining a lower leg, the orientation of the lower leg relative to the associated upper leg and hips may be examined in order to determine an axial roll angle.","A skeletal model may include more or fewer joints without departing from the spirit of this disclosure.","As described above, some models may include a skeleton and\/or other body parts that serve as a machine representation of a modeled target. In some embodiments, a model may alternatively or additionally include a wireframe mesh, which may include hierarchies of rigid polygonal meshes, one or more deformable meshes, or any combination of the two.","The above described body part models and skeletal models are nonlimiting example types of models that may be used as machine representations of a modeled human subject. Other models are also within the scope of this disclosure. For example, some models may include polygonal meshes, patches, non-uniform rational B-splines, subdivision surfaces, or other high-order surfaces. A model may also include surface textures and\/or other information to more accurately represent clothing, hair, and\/or other aspects of a modeled target. A model may optionally include information pertaining to a current pose, one or more past poses, and\/or model physics. It is to be understood that a variety of different models that can be posed are compatible with the herein described target recognition, analysis, and tracking.","As mentioned above, a model serves as a representation of a target, such as human subject  in . As the human subject moves in physical space, information from a capture device, such as depth camera  in , can be used to adjust a pose and\/or the fundamental size\/shape of the model so that the model more accurately represents the human subject.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 6","FIG. 1A","FIG. 2"],"b":["100","100","12","40"]},"The disclosed pipeline can be used to accurately and efficiently track one or more human subjects that are present in the field of view of a depth camera. The pipeline can model and track one or more human subjects in real time, thus providing a responsive, immersive, and realistic experience for a human subject being tracked.","In some embodiments, pose tracking pipeline  includes six conceptual processes: depth image acquisition , background removal process , foreground pixel assignment process , model fitting process , model resolution process , and reporting . Information identifying an existing problem state (e.g., problem state ) may be supplied to one or more of these processes where the information may be used by these processes to output a virtual skeleton representing the human subject.","Depth image acquisition  may include receiving an observed depth image of the human subject from a source. In some embodiments, the source may be a depth camera configured to obtain depth information about the human subject via time-of-flight analysis, structured light analysis, stereo vision analysis, or other suitable technique. The observed depth image may include a plurality of observed pixels, where each observed pixel has an observed depth value. The observed depth value includes depth information of the human subject as viewed from the source.","The depth image may optionally be represented as a pixel matrix that includes, for each pixel address, a depth value indicating a world space depth from the plane of the depth camera, or another suitable reference plane, to a surface at that pixel address.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 7","FIG. 7"],"b":["150","152","154","152","152","154","156","158","156","158","160","162","160","162"]},"As shown at  of , depth image acquisition  may optionally include downsampling the observed depth image to a lower processing resolution. Downsampling to a lower processing resolution may allow the observed depth image to be more easily utilized and\/or more quickly processed with less computing overhead.","As shown at  of , depth image acquisition  may optionally include removing and\/or smoothing one or more high-variance and\/or noisy depth values from the observed depth image. Such high-variance and\/or noisy depth values in the observed depth image may result from a number of different sources, such as random and\/or systematic errors occurring during the image capturing process, defects and\/or aberrations resulting from the capture device, etc. Since such high-variance and\/or noisy depth values may be artifacts of the image capturing process, including these values in any future analysis of the image may skew results and\/or slow calculations. Thus, removal of such values may provide better data integrity and\/or speed for future calculations.","Background removal process  may include distinguishing targets such as human subjects that are to be tracked from non-target background elements in the observed depth image. As used herein, the term \u201cbackground\u201d is used to describe anything in the scene that is not part of the target(s) to be tracked. The background may include elements that are in front of (i.e., closer to the depth camera) than the target(s) to be tracked. Distinguishing foreground elements that are to be tracked from background elements that may be ignored can increase tracking efficiency and\/or simplify downstream processing.","Background removal process  may include assigning each data point (e.g., pixel) of the processed depth image a player index that identifies that data point as belonging to a particular human subject or to a non-target background element. When such an approach is used, pixels or other data points assigned a background index can be removed from consideration in one or more subsequent phases of pose tracking pipeline .","As an example, pixels corresponding to a first human subject can be assigned a player index equal to one, pixels corresponding to a second human subject can be assigned a player index equal to two, and pixels that do not correspond to a human subject can be assigned a player index equal to zero. Such player indices can be saved or otherwise stored in any suitable manner. In some embodiments, a pixel matrix may include, at each pixel address, a player index indicating if a surface at that pixel address belongs to a background element, a first human subject, a second human subject, etc. For example,  shows data structure  including a player index equal to zero for wall pixel , data structure  including a player index equal to zero for door pixel , and data structure  including a player index equal to one for pixel  of a human subject. While this example shows the player\/background indices as part of the same data structure that holds the depth values, other arrangements are possible. In some embodiments, depth information, player\/background indices, body part indices, body part probability distributions, and other information may be tracked in a common data structure, such as a matrix addressable by pixel address. In other embodiments, different masks may be used to track information through pose tracking pipeline . The player index may be a discrete index or a fuzzy index indicating a probability that a pixel belongs to a particular target (e.g., human subject) and\/or the background.","A variety of different background removal techniques may be used. Some background removal techniques may use information from one or more previous frames to assist and improve the quality of background removal. For example, a depth history image can be derived from two or more frames of depth information, where the depth value for each pixel is set to the deepest depth value that pixel experiences during the sample frames. A depth history image may be used to identify moving objects in the foreground of a scene (e.g., a human subject) from the nonmoving background elements. In a given frame, the moving foreground pixels are likely to have depth values that are smaller than the corresponding depth values (at the same pixel addresses) in the depth history image. In a given frame, the nonmoving background pixels are likely to have depth values that match the corresponding depth values in the depth history image.","As one nonlimiting example, a connected island background removal may be used. Using a connected island approach, an input depth stream can be used to generate a set of samples (e.g., voxels) that can be conceptually unprojected back into world space. Foreground objects are then isolated from background objects using information from previous frames. In particular, the process can be used to determine whether one or more voxels in the grid are associated with a background by determining whether an object of the one or more objects in the grid is moving. This may be accomplished, at least in part, by determining whether a given voxel is close to or behind a reference plate that is a history of the minimum or maximum values observed for background objects. The output from this process can be used to assign each data point (e.g., pixel) a player index or a background index.","Additional or alternative background removal techniques can be used to assign each data point a player index or a background index, or otherwise distinguish foreground targets from background elements. In some embodiments, particular portions of a background may be identified. For example, at  of , a floor in a scene may be identified as part of the background. In addition to being removed from consideration when processing foreground targets, a found floor can be used as a reference surface that can be used to accurately position virtual objects in game space, stop a flood-fill that is part of generating a connected island, and\/or reject an island if its center is too close to the floor plane.","A variety of different floor finding techniques may be used. In some embodiments, a depth image can be analyzed in screen space row by row. For selected candidate rows of the screen space depth image (e.g., rows near the bottom of the image), a straight depth line can be interpolated through two candidate points that are believed to be located on a floor surface. Boundary lines can then be fit to endpoints of the straight depth lines. The boundary lines can be averaged and used to define a plane that is believed to correspond to the floor surface.","In other embodiments, a floor finding technique may use three points from a depth image to define a candidate floor surface. The three points used to define the candidate can be randomly selected from a lower portion of the depth image, for example. If the normal of the candidate is substantially vertical in world space, the candidate is considered, and if the normal of the candidate is not substantially vertical, the candidate can be rejected. A candidate with a substantially vertical normal can be scored by counting how many points from the depth image are located below the candidate and\/or what the average distance such points are below the candidate. If the number of points below the candidate exceeds a threshold and\/or the average distance of points below the candidate exceeds a threshold, the candidate can be rejected. Different candidates are tested, and the candidate with the best score is saved. The saved candidate may be blessed as the actual floor if a predetermined number of candidates with lower scores are tested against the saved candidate.","Additional or alternative background removal techniques can be used to assign each data point a player index or a background index, or otherwise distinguish foreground targets from background elements. For example, in  pose tracking pipeline  includes bad body rejection . In some embodiments, objects that are initially identified as foreground objects can be rejected because they do not resemble any known target. For example, an object that is initially identified as a foreground object can be tested for basic criteria that are to be present in any objects to be tracked (e.g., head and\/or torso identifiable, bone lengths within predetermined tolerances, etc.). If an object that is initially identified as being a candidate foreground object fails such testing, the object may be reclassified as a background element and\/or subjected to further testing. In this way, moving objects that are not to be tracked, such as a chair pushed into the scene, can be classified as background elements because such elements do not resemble a human subject.","In some embodiments, an indication of zero, one, or more problem states (e.g., problem state ) may be output from the background removal process . This indication may take the form of information derived from an observed depth image by the pose tracking pipeline. As such, background removal process  may output a message that a certain problem state exists instead of or in addition to pixel classification information classifying each pixel of an observed depth image as either a foreground pixel belonging to the human subject or a background pixel not belonging to the human subject. The message and\/or pixel classification information output by background removal process  may be used by another process, such as a problem state module  of  to identify and supply an identification of zero, one, or more problem states to the pose tracking pipeline.","In some embodiments, an identification of zero, one, or more problem states (e.g., problem state ) may be supplied to the background removal process . The identification of the zero, one, or more problem states may be considered by the background removal process when classifying each pixel of an observed depth image (e.g., the observed depth image from which the problem state was identified or subsequent depth images that are processed by the pose tracking pipeline) as either a foreground pixel belonging to the human subject or a background pixel not belonging to the human subject. As another example, segmentation module  may output classification information (e.g., probabilistic or soft classification and\/or hard classification) of each depth pixel as background or belonging to a particular subject. Segmentation module  may also provide other suitable indicators, such as proximity relationships between foreground and background regions, relevant changes in the minimum or maximum depth plates, etc.","In some examples, an identified problem state, such as a proximate state in which a portion of a human subject resides at the same or similar depth within the scene as another object may be used by the pipeline to refine foreground\/background separation in a limited region of the depth image. The limited region may correspond to the region of the depth image where the problem state is present (e.g., the region including or surrounding the portion of the human subject). Techniques deemed too computationally intensive to apply to an entire depth image may be selectively applied, such as to separate a subject's arm from an arm rest of a chair or other object within the scene. Similarly, identification of an occluded state in which an object resides in front of a portion of the human subject may be used by the pipeline to refine foreground\/background separation in a limited region of the depth image corresponding to the occluded portion of the human subject. This approach is in contrast to a connected island approach (e.g., where all portions of the human subject are assumed to be connected to each other within the observed depth image). The connected island approach may cause objects within the scene to be erroneously classified as belonging to the human subject, for example, if an object occludes the human subject in a manner that creates the appearance that the human subject is divided into two or more portions within the observed depth image. After foreground pixels are distinguished from background pixels, pose tracking pipeline  further classifies the pixels that are considered to correspond to the foreground objects that are to be tracked. In particular, at foreground pixel assignment process  of , each foreground pixel is analyzed to determine what part of a human subject's body that foreground pixel is likely to belong.","A variety of different foreground pixel assignment techniques can be used to assess which part of a human subject's body, or a machine representation of the body, a particular pixel is likely to belong. A pixel matrix or other data structure may include, for each pixel address, a body part index, confidence value, and\/or body part probability distribution indicating the part, or parts, to which a pixel is likely to belong. For example,  schematically shows data structure  including a body part index equal to nine, which corresponds to an upper, right arm, for pixel  of a human subject. In the simplified version of , the body part index is resolved to a single candidate body part (i.e., body part nine). In practice, the body part information may be a soft labeling that is represented as a histogram over possible body parts for each pixel. In other words, a probability distribution of all likely body parts may be used in some embodiments, as described in more detail below.","As one nonlimiting example, machine-learning can be used to assign each foreground pixel a body part index and\/or body part probability distribution. The machine-learning approach analyzes a foreground object using information learned from analyzing a prior-trained collection of known poses. This approach can be used to assign each foreground pixel a body part index or distribution without any prior context (i.e., knowledge of the prior frame is not needed).","In some embodiments, the machine-learning foreground pixel assignment may utilize one or more decision trees to analyze each foreground pixel of interest in an observed depth image. Such analysis can find a best-guess of the body part for that pixel and the confidence that the best-guess is correct. In some embodiments, the best-guess may include a probability distribution over two or more possible body parts, and the confidence may be represented by the relative probabilities of the different possible body parts.","At each node of the decision tree, an observed depth value comparison between two pixels is made, and, depending on the result of the comparison, a subsequent depth value comparison between two pixels is made at the child node of the decision tree. The result of such comparisons at each node determines the pixels that are to be compared at the next node. The terminal nodes of each decision tree result in a body part classification and associated confidence in the classification.","In some embodiments, subsequent decision trees may be used to iteratively refine the best-guess of the body part for each pixel and the confidence that the best-guess is correct. For example, once the pixels have been classified with the first classifier tree (based on neighboring depth values), a refining classification may be performed to classify each pixel by using a second decision tree that looks at the previous classified pixels and\/or depth values. A third pass may also be used to further refine the classification of the current pixel by looking at the previous classified pixels and\/or depth values. It is to be understood that virtually any number of iterations may be performed, with fewer iterations resulting in less computational expense and more iterations potentially offering more accurate classifications and\/or confidences.","The decision trees may be constructed during a training mode in which a sample of known models in known poses are analyzed to determine the questions (i.e., tests) that can be asked at each node of the decision trees in order to produce accurate pixel classifications.","In some embodiments, an indication of zero, one, or more problem states (e.g., problem state ) may be output from the foreground pixel assignment process . This indication may take the form of information derived from an observed depth image by the pose tracking pipeline. As such, foreground pixel assignment process  may output a message that a certain problem state exists instead of or in addition to pixel assignment information labeling each pixel of the observed depth image classified as a foreground pixel (e.g., a pixel belonging to the human subject) with body part information indicating a likelihood that that the foreground pixel belongs to one or more body parts of the human subject. The message and\/or pixel assignment information output by pixel assignment process  may be used by another process, such as a problem state module  of  to identify and supply an identification of zero, one, or more problem states to the pose tracking pipeline.","In some embodiments, an identification of zero, one, or more problem states (e.g., problem state ) may be supplied to the foreground pixel assignment process . The identification of zero, one, or more problem states may be considered by the foreground pixel assignment process when labeling each pixel of an observed depth image (e.g., the observed depth image from which the problem state was identified or subsequent depth images that are processed by the pose tracking pipeline) classified as a foreground pixel with body part information indicating a likelihood that that the foreground pixel belongs to one or more body parts of the human subject. In some examples, a decision tree, such as one trained with a known pose set related to a particular problem state or a set of problem states, or a decision tree dedicated to a particular body part or a set of body parts likely to have specific problem states, may be selectively applied to corresponding problematic regions of pixels to determine whether the pixel is a foreground or background pixel.","Turning back to , after foreground pixels are labeled with body part information, pose tracking pipeline  includes model fitting process , which finds one or more possible skeletons that serve as machine representations of the human subject.","A variety of different model fitting techniques may be used. During model fitting process , a human subject is modeled as a virtual skeleton including a plurality of skeletal points defined in three or more dimensions. The various skeletal points may correspond to actual joints of a human subject, terminal ends of a human subject's extremities, and\/or points without a direct anatomical link to the human subject. Each skeletal point has at least three degrees of freedom (e.g., world space x, y, z). As such, the virtual skeleton can be fully defined by 3\u00d7\u03bb values, where \u03bb is equal to the total number of skeletal points included in the skeleton. A virtual skeleton with 31 skeletal points can be defined by 93 values, for example. As described with reference to  above, some skeletal points may account for axial roll angles.","The various model fitting approaches compatible with pose tracking pipeline  may use depth information, background information, body part information, prior trained anatomical and kinetic information, and\/or zero, one, or more problem states (e.g., problem state ) to deduce one or more skeleton(s) that closely model a human subject.","As an example, the body part information that is assessed for the foreground pixels may be used to find one or more candidate locations (e.g., centroids) for one or more skeletal bones. Furthermore, a plurality of plausible virtual skeletons may be assembled to include skeletal bones at different combinations of the plurality of candidate locations. The various plausible virtual skeletons may then be scored, and the scored proposals can be combined into a final estimate.","Clumps of foreground pixels may individually include body part probability distributions indicating that a particular body part is probable for that clump. In some cases, two or more clumps that are spaced apart from one another may indicate that the same body part is probable. For example, the clumps of pixels actually showing the right and left hands of a target may both be labeled with body part information indicating a high probability for a right hand body part. As such, two or more centroid candidates may be calculated for each body part. Each centroid candidate for a particular body part may be represented in four dimensions\u2014x, y, z and probability w that the candidate belongs to that body part. In other words, each centroid defines a location of a clump of neighboring foreground pixels individually having body part probability distributions indicating that that body part is probable for that clump of neighboring foreground pixels. Furthermore, each centroid defines a single probability representing all individual body part probability distributions within the clump.","Two or more different centroid candidates can be considered in finding a virtual skeleton that closely models a human subject. The various candidate centroids can be scored against one another (e.g., number of pixels in clump multiplied by average probability that pixels in the clump belong to a particular body part). The scores may be adjusted based on one or more constraints (e.g., apply a penalty when a distance between the highest scoring clump for a body part in a previous frame exceeds a threshold distance to the highest scoring clump for the same body part in the current frame). The scored centroids may be used to construct one or more plausible virtual skeletons, from which a single virtual skeleton can be derived.","Considering plural plausible virtual skeletons employs a probabilistic principle of least commitment to deal with uncertainty. As such, many possibilities may be considered throughout the model fitting phase of the pipeline, without necessarily requiring that hard decisions be made until such decisions can no longer be avoided.","If the data is unambiguous, the plurality of plausible virtual skeletons will be very similar to each other. If there are situations in which there are numerous possibilities for one or more parts of the virtual skeleton, the sample set will be more diverse, thus capturing the uncertainty.","The accuracy of the approximation can improve as the number of plausible virtual skeletons, n, increases. However, computational cost also increases as n increases. The model fitting phase of the pipeline can be restrained to focus on a relatively small number of samples (e.g., n<100). Another restraining technique may include pruning or selective reduction of samples based on scoring body part relationships. For example, if there is only one high confidence proposal for the neck of a human subject, then shoulder proposals which are too far from the neck may be rejected. Accordingly, the early rejection or preservation decisions on proposals may be influenced by the identification of zero, one, or more problem states. To improve results when working with fewer samples, information from foreground pixel assignment process  and past skeletal motion information may be used to improve the intelligence of the search for a set of proposal virtual skeletons. The plausible virtual skeletons can be evaluated against the input data (e.g., observed depth images and\/or an identification of problem states supplied to the pose tracking pipeline), and other sources of information, to arrive at a final approximation.","As shown in , model fitting process  may receive input from previous phases of pose tracking pipeline  as well as zero, one, or more problem states (e.g., problem state ). Model fitting process  may receive one or more raw depth images from depth image acquisition , player\/background information from background removal process , and body part information from foreground pixel assignment process .","With all available inputs, foreground regions of the depth image may be segmented into a set of patches, which are regions of roughly consistent depth. This effectively approximates the full depth image by a set of small planar regions. For a modest loss of fidelity, this can reduce the bandwidth requirements from millions of pixel accesses, to thousands of patch accesses.","Plausible virtual skeletons may then be proposed from the previous foreground pixel assignments. The purpose of this phase is to convert pixel-wise body part probability distributions into proposals for full virtual skeletons (e.g., 93 values for a \u03bb=31 skeleton). In the spirit of the principle of least commitment, all likely locations for a body part are considered until global information can be brought to bear. Therefore, this phase may include two components: a body part proposer, which extracts candidate locations from foreground pixel assignment process  for each body part independently (e.g., finding candidate centroids for each body part, as introduced above); and a virtual skeleton generator, which combines these candidates into complete virtual skeletons.","In some embodiments, an indication of zero, one, or more problem states (e.g., problem state ) may be output from the model fitting process . This indication may take the form of information derived from an observed depth image by the pose tracking pipeline. As such, model fitting process  may output a message that a certain problem state exists instead of or in addition to a set of one or more proposed virtual skeletons for an observed depth image in which at least one of the set of proposed virtual skeletons indicates the problem state. The message and\/or set of one or more virtual skeletons output by model fitting process  may be used by another process, such as a problem state module  of  to identify and supply an identification of zero, one, or more problem states to the pose tracking pipeline.","In some embodiments, an identification of zero, one, or more problem states (e.g., problem state ) may be supplied to the model fitting process . The identification of zero, one, or more problem states may be considered by the model fitting process to identify a set of proposed virtual skeletons that are supplied to a model resolution process  for a given observed depth image (e.g., the observed depth image from which the problem state was identified or subsequent depth images that are processed by the pose tracking pipeline).","As discussed above, in at least some embodiments, model fitting can be used to find a plurality of different plausible or proposed virtual skeletons. A proposed virtual skeleton can be scored using a variety of different metrics, including an identification of zero, one, or more problem states (e.g., problem state ) that are supplied to the model resolution process . In , pose tracking pipeline  includes model resolution process , in which a single virtual skeleton is derived from the plurality of plausible virtual skeletons. A variety of different model resolution techniques may be used. In some embodiments, two or more plausible virtual skeletons may be scored against each other based on weight, observed motion over time, anticipated bone length, foreground\/background crossing, problem states, and\/or other factors. A proposed virtual skeleton with a highest score may be selected; or the best scoring portions of two or more different proposed virtual skeletons, from one or more different frames, may be combined into a selected virtual skeleton. Furthermore, various constraints (e.g., bone length, joint angle, collision testing, etc.) may be applied to one or more virtual skeletons to shift the proposed skeleton(s) into a better matching pose.","In addition to or as an alternative to scoring based on problem states, scoring functions may be weighted according to the identified problem states. An example includes a scoring function that penalizes proposals in which a body part of a human subject cannot be connected to another body part without crossing through a proposed background region of the scene e.g. a wrist proposal that cannot be connected to an elbow proposal without crossing through a proposed background region). As a nonlimiting example, such a scoring function may apply a penalty scaled by a factor that is based, at least in part, on a number of proposed background pixels crossed between the proposed body parts. When a problem state such as a proximate state is identified, the resulting penalty may be dampened (e.g., reduced) responsive to expected or identified ambiguity in background\/foreground pixel classification, so that the scoring function has less of an effect or influence on the result than if the subject (or part of the subject) is more distant from a background object.","In some embodiments, an indication of zero, one, or more problem states (e.g., problem state ) may be output from the model resolution process . This indication may take the form of information derived from an observed depth image by the pose tracking pipeline. As such, model resolution process  may output a message that a certain problem state exists instead of or in addition to a selected virtual skeleton from the set of proposed virtual skeletons. The message and\/or selected virtual skeleton output by model resolution process  may be used by another process, such as a problem state module  of  to identify and supply an identification of zero, one, or more problem states to the pose tracking pipeline.","In some embodiments, an identification of zero, one, or more problem states (e.g., problem state ) may be supplied to the model resolution process . The identification of zero, one, or more problem states may be considered by the model resolution process to select a virtual skeleton from a set of proposed virtual skeletons for a given observed depth image (e.g., the observed depth image from which the problem state was identified or subsequent depth images that are processed by the pose tracking pipeline). For example, the pose tracking pipeline may select a three-dimensional position of at least one of the plurality of skeletal points in accordance with the identification of the problem state supplied to the pose-tracking pipeline at one or more of processes , , , and\/or . In some examples, an identification of zero, one, or more problem states and\/or information indicating the problem states may flow directly to reporting  or may be provided as an output through model resolution . The identification of problem states can be used by or be beneficial to other aspects of the tracking system in addition to or as an alternative to other outputs, such as skeletal models.","Pose tracking pipeline  also includes reporting , where the selected skeleton is reported for use by other applications. Reporting can be performed in any suitable manner. As a nonlimiting example, an application programming interface (API) may be used to report the selected skeleton. Such an (API) may be configured to communicate the joint positions, joint velocities, joint accelerations, confidences in positions, velocities, and\/or accelerations, and\/or other information related to the selected skeleton for one or more targets. A content receiver (e.g., a gaming application) may then use the reported information as desired.",{"@attributes":{"id":"p-0100","num":"0099"},"figref":"FIG. 8","b":["170","172","174","170","176","102","104","100"]},"At , the depth information believed to belong to the human subject is analyzed to determine what part of a human subject's body each pixel is likely to belong. Map  schematically represents one or more data structures capturing the body part information (e.g., as deduced during foreground pixel assignment process  of pose tracking pipeline ).","At , a set of plausible virtual skeletons are proposed, where each virtual skeleton is an attempt to model the human subject as a machine representation. Virtual skeleton set  schematically represents one or more data structures defining the proposed virtual skeletons (e.g., as proposed during model fitting process  of pose tracking pipeline ). It is to be understood that the graphical depictions of virtual skeletons in , , and  is nonlimiting. Virtual skeletons with a different number and\/or configuration of skeletal points and skeletal bones may be used.","At , a virtual skeleton is selected based on the set of plausible virtual skeletons. Virtual skeleton  schematically represents one or more data structures defining the selected virtual skeleton (e.g., as selected during model resolution process  of pose tracking pipeline ).","At , the selected virtual skeleton is reported (e.g., as described with reference to reporting  of pose tracking pipeline ). As indicated at , the reported virtual skeleton may be used as an input by an operating system, one or more applications, or any other suitable receiver.","A problem state (e.g., such as previously described problem state  of ) may refer to a pre-defined state of a human subject within a scene observed by one or more optical sensors. The observed scene may be captured by the one or more optical sensors as an image. The image may take the form of a depth image or other suitable image that does not necessarily provide depth information. Zero, one, or more problem states may be identified from an individual image (e.g., a time-free image) or from a combination of two or more time-series images. An identification of zero, one, or more problem states may be supplied to the pose tracking pipeline to aid in the selection of a virtual skeleton output by the pipeline or otherwise select a three-dimensional position of one or more skeletal points in accordance with the identification of the problem state supplied to the pose-tracking pipeline.","Accuracy or reliability of pose recognition may be improved by supplying the identification of problem states to the pose tracking pipeline because the pose tracking pipeline may rely on the existence of a number of conditions or assumptions to reliably track a human subject. For example, these conditions or assumptions may include (1) that all body parts of the human subject are fully to mostly visible (e.g., non-occluded to limited occlusion), the absence of which corresponds to the occluded state, (2) all body parts are sufficiently distant from each other (e.g., low to medium proximity), the absence of which corresponds to the proximate state, (3) left-side limbs of the human subject are left of right-side limbs of the human subject, and vice-versa (e.g., no limb crossing), and an upright stance of the human subject has the feet on or near the ground, the torso upright, and no body parts are extended too far overhead (e.g., a neutral stance), the absence of which corresponds to the crossed state, (4) all body parts of the human subject are within the observed scene, the absence of which corresponds to the cropped state, and (5) the human subject is moving within an acceptable velocity range, the absence of which corresponds to the velocity limited state. As will be described in greater detail below, these problem states or the absence thereof may be identified by application of discrete classifications and\/or continuous regression measurements.","The occluded state may correspond to a state of the observed depth image where at least a portion of the human subject is blocked from view within the scene by an object. The object may include another portion of the human subject (e.g., a limb or a body portion) or by another object (including other human subjects) within the environment. For example, a human subject may assume a sideways pose in which an arm and a leg may be hidden from view by the body and other leg of the human subject. Some body parts may also meaningfully self-occlude. For example, a human subject may assume a seated position in which the upper legs of the human subject are parallel to the line of sight of the optical sensor. Visible surface area estimates (e.g., in square millimeters (mm^2) or other suitable measurement) obtained from an observed image can provide a measure of occlusion for a body part where a value of 0.0, as a nonlimiting example, corresponds to total occlusion of the body part. A ratio of the visible surface area estimate to an expected surface area may be used to provide a useful unit-less measure of occlusion. However, surface area also depends on orientation of the body part within the observed image. Accordingly, the maximum surface area for the body party may be used to quantify self-occlusion of the body part. As an alternative to these continuous measures of occlusion, occlusion may be quantified as a discrete classification of either (1) none\/minimal, (2) partial, or (3) total occlusion.","The cropped state may correspond to a state of the observed depth image where at least a portion of the human subject resides outside a boundary of the scene. Cropping may also correspond to a state of the observed depth image where the human subject exceeds a near or far plane relative to the optical sensor. Placement of the optical sensor and play space limits within which the human subject can move may result in inapplicability of the cropped state to one or more of the 6 boundaries of the scene, such as the lower boundary when the floor is fully in frustum or the far plane forming the rear boundary when the rear room wall is nearer to the optical sensor. As with occlusion, visible surface area estimates may also provide a measure of cropping where a value of 0.0, as a nonlimiting example, indicates a totally cropped body part. A discrete classification scheme having two or more cases or states may be used in addition to or as an alternative to continuous measurements. For example, a continuous measure of cropping may be quantified as a discrete classification of (1) none, (2) partial, or (3) total cropping. As another example, the cropping may be quantified as a discrete classification of (1) cropped or (2) un-cropped. Any discrete classification scheme of more than two cases or states may be expressed as a series of pairs. For example, a typical six-sided die has the discrete values 1 to 6, which may be represented as 6 cases or 6 pairs of cases (e.g. 1, not 1). Accordingly, the example discrete classifications described herein should be considered nonlimiting.","The proximate state may correspond to a state of the observed depth image where at least a portion of the human subject resides within a threshold depth proximity to an object within the scene. The object may include another part of the human subject such as a limb or body core, or may include an object within the environment. The proximity state may occur, for example, when another part of the body or the environment is not between the body part and optical sensor, but is very close to or in contact with the body part. Distance estimates (e.g., in millimeters or other suitable measurement) can provide a measure of proximity where a value of 0.0, as a nonlimiting example, indicates that the body part and the object are touching. Depth sensors have distance dependent noise floors for measurement resolution and precision. As an alternative to or in addition to a continuous measure of proximity, proximity may be quantified as a discrete classification of (1) outside, (2) near, or (3) within the noise floor of the depth sensor. As another example, the cropping may quantified as a discrete classification of (1) outside the noise floor or (2) within the noise floor. However, other suitable numbers and\/or types of discrete classifications may be used. In some examples, discrete classifications may be easier to specify, apply, and or detect than continuous measurements, discrete classifications may be more computationally efficient than continuous measurements, and\/or discrete classifications may be more useful than continuous measurements, or may provide additional value when used in combination with continuous measurements.","The crossed state may correspond to a state of the observed depth image where a body part of the human subject crosses a virtual boundary dividing the virtual skeleton into at least two regions from a native region to a non-native region. In some embodiments, a human subject may be assigned a number of virtual boundaries. These virtual boundaries may include, for example, a sagittal plane, a transverse plane, and a coronal plane. The anatomical planes may help describe the location of body parts in relation to each other. For a person facing the optical sensor in a relaxed stance, the sagittal plane divides the right and left sides of the human subject, the coronal plane divides the front and back of the human subject, and the transverse plane divides an upper (superior) portion of the human subject from a lower (inferior) portion of the human subject. Crossing occurs, for example, whenever a leg or an arm, or other body part crosses one of these planes. For the purpose of transverse crosses, an upper transverse plane at the shoulders of the human subject may apply to arms and a mid-transverse plane at the waist of the human subject may apply to legs. Distance estimates (e.g., in millimeters or other suitable measurement) can provide a measure of crossing where a value of 0.0, as a nonlimiting example, indicates plane intersection and a negative value, as another nonlimiting example, may indicate plane crossing by a body part.","The velocity limited state may correspond to a state of the observed depth image where the human subject has a velocity in the scene that exceeds an upper velocity threshold and\/or a lower velocity threshold. Entropy increases with both absence of motion of the human subject and motion of the human subject exceeding optical sensor limits. Velocity estimates (e.g., in millimeters per millisecond or other suitable measurement) are limited by the time-series step between observed images. Other limitations of velocity may include distance dependent depth noise floors for no velocity to slow velocity of the human subject, and exposure time for very fast velocity of the human subject.",{"@attributes":{"id":"p-0112","num":"0111"},"figref":["FIG. 9","FIG. 6"],"b":["900","910","920","910","910","912","104","914","106","916","108","918","110"]},"Segmentation module  may be configured to receive an observed depth image  and\/or an identification of a problem state , and to output pixel classification information  classifying each pixel of the observed depth image as either a foreground pixel belonging to the human subject or a background pixel not belonging to the human subject. Segmentation module  may be configured to output an indication  of zero, one, or more problem states, which may be received by problem state module . Indication  may include a message indicating zero, one, or more problem states and\/or information derived from an observed depth image by segmentation module  to enable problem state module  to identify zero, one, or more problem states. For example indication  may include pixel classification information that indicates the problem state output from the segmentation module.","In some examples, problem state module  may receive an indication of problem states and\/or derived information from pose tracking pipeline , and may make a problem state determination based on the accumulated evidence. The identification of the problem states fed back into the pose tracking pipeline may take the form of one or more consensus problem states. For example, each module of pose tracking pipeline  may contribute derived information and\/or problem state indicators, hints, or opinions to problem state module . Problem state module  may be configured to determine a consensus, which each module of the pose tracking pipeline  may then rely upon in addition to or in place of the module's own determination. Similar to proposal scoring, a variety of consensus methods may be used, including union and voting schemes such as majority and weighted. For example, a proximity determination may have a greater influence on the consensus if the proximity determination is received from segmentation module  than from model fitting module . It will be appreciated that any suitable weighting among the modules of pose tracking pipeline  may be used to influence the consensus determined by problem state module .","Pixel assignment module  may be configured to receive pixel classification information  from segmentation module  and\/or an identification of a problem state  from problem state module , and to output pixel assignment information  labeling each pixel of the observed depth image classified as a foreground pixel belonging to the human subject with body part information indicating a likelihood that that the foreground pixel belongs to one or more body parts of the human subject. Pixel assignment module  may be configured to output an indication  of zero, one, or more problem states, which may be received by problem state module . Indication  may include a message indicating zero, one, or more problem states and\/or information derived from an observed depth image by pixel assignment module  and\/or segmentation module  to enable problem state module  to identify the zero, one, or more problem states. For example, indication  may include pixel assignment information that indicates the problem state output from the segmentation module labeling foreground pixels belonging to the human subject with body part information.","Model fitting module  may be configured to receive pixel assignment information  from pixel assignment module  and\/or an identification of a problem state  from problem state module , and to output a set of proposed virtual skeletons  for the human subject. Model fitting module  may be configured to output an indication  of zero, one, or more problem states, which may be received by problem state module . Indication  may include a message indicating zero, one, or more problem states and\/or information derived from an observed depth image by model fitting module , pixel assignment module  and\/or segmentation module  to enable problem state module  to identify the zero, one, or more problem states. For example, indication  may include at least one virtual skeleton of a set of proposed virtual skeletons.","Model resolution module  may be configured to receive a set of proposed virtual skeletons  from model fitting module  and\/or an identification of a problem state  from problem state module , and to output selected virtual skeleton  from the set of proposed virtual skeletons. Model resolution module  may be configured to output an indication  of zero, one, or more problem states, which may be received by problem state module . Indication  may include a message indicating zero, one, or more problem states and\/or information derived from an observed depth image by model resolution module , model fitting module , pixel assignment module  and\/or segmentation module  to enable problem state module  to identify the zero, one, or more problem states. For example, indication  may include the selected virtual skeleton or a portion thereof (e.g., a body part).","As depicted in , problem state module  may supply an identification of a problem state to one or more intermediate processes of pose tracking pipeline . In some embodiments, problem state module  may supply an identification of the same problem state to some or all of these intermediate processes. For example, identified problem states at , , , and  in  may correspond to the same problem state or set of problem states indicated to each module of pose tracking pipeline .","In some embodiments, problem state module  may supply an identification of different problem states to some or all of the intermediate processes of the pose tracking pipeline. For example, identified problem states at , , , and  in  may correspond to different problem states or sets of problem states identified to respective modules of pose tracking pipeline .",{"@attributes":{"id":"p-0120","num":"0119"},"figref":"FIG. 9","b":["940","940","942","944","940","942","944"]},"In some embodiments, an indication of zero, one, or more problem states output by pose tracking pipeline  (e.g., at , , , ) may be used by problem state module  to identify the problem states, to identify intermediate processes that are to be supplied an identification of the problem states, and to supply the identification of the problem states to the identified processes. In some embodiments, some or all of the intermediate processes of pose tracking pipeline  may be configured to directly identify the problem states, which may be output to problem state module .",{"@attributes":{"id":"p-0122","num":"0121"},"figref":["FIG. 10","FIG. 9"],"b":["1000","1000","920"]},"At , the method includes receiving from a source, an observed depth image of the scene including the human subject. At , the method includes supplying the observed depth image to a pose tracking pipeline. At , the method includes receiving an indication of a problem state from the pose tracking pipeline. The problem state indicated by the pose tracking pipeline may be one of a plurality of problem states indicated by the pose tracking pipeline, and may be received from one or more intermediate processes of the pipeline. As previously described, these intermediate processes may correspond to respective modules of the pose tracking pipeline. In some examples, zero (i.e., no or none) problem states may be indicated by the pose tracking pipeline.","In some embodiments, an indication of the problem state from the pose tracking pipeline may include an identification of the problem state itself (e.g., as a problem state identifier). In this embodiment, a process or module of the pose tracking pipeline may directly identify the problem state.","In some embodiments, an indication of the problem state may be received from the pose tracking pipeline as information derived from the observed depth image by the pose tracking pipeline. The problem state may be identified from a set of available problem states based on the information derived from the observed depth image. In this embodiment, the problem state may be identified, for example, by a problem state module as described in greater detail with reference to .","At , the method includes supplying an identification of one or more problem states to the pose tracking pipeline. If a plurality of problem states are indicated by the pose tracking pipeline, then an identification of zero (i.e., no or none), some, or all of the plurality of problem states may be supplied to the pose tracking pipeline. As previously discussed, body part segmentation and prediction from time-series depth images may be estimated probabilistically (e.g., soft classification) and\/or as a hard classification where a state is either applicable or not (e.g., 0 or 1). Soft or hard classifications may be applied to problem states on a per body part basis. For example, a probability value or hard classification may be supplied to the pose tracking pipeline for some or all of the identified problem states. With reliable classification or regression, these problem states can influence each model fitting stage, such as with state specific synthesis, state weighted scoring, state driven dynamic selection and\/or ordering of regressors, and state based constraints. In some embodiments, an identification of a problem state may be supplied to the pose tracking pipeline for each body part of a human subject modeled with a plurality of body parts.","At , the method includes receiving from the pose tracking pipeline a virtual skeleton including a plurality of skeletal points defined in three or more dimensions. In some examples, the plurality of skeletal points may be defined spatially in three-dimensions. Examples of other dimensions include a confidence or probability in a position of a skeletal point, a velocity and\/or acceleration vector for some or all of the skeletal points, a joint rotation vector for some or all of the joints, a shape (e.g., volumetric metrics on a shape type such as a sphere, cylinder, or other suitable shape with which the skeletal point is associated), an indication of whether a joint is tracked, not tracked, or inferred, or other suitable indication of state. Accordingly, the pipeline may output an indication of these other dimensions or different dimensions in addition to or as an alternative to the three spatial dimensions for some or all of the skeletal points. For example, the pose tracking pipeline may be configured to output a plurality of skeletal points ordered from most to least likely or to output the top \u201cn\u201d candidate skeletal points from the most to least likely to provide an indication of a confidence or probability or some other weighted indicator of state.","As one example, the pose tracking pipeline may select a three-dimensional position and\/or other suitable dimensions discussed above of at least one, some, or all of the plurality of skeletal points in accordance with the identification of zero, one, or more of the problem states supplied to the pose tracking pipeline. Additionally or alternatively, the pose tracking pipeline may select one, some, or all of the plurality of skeletal points not in accordance with the identification of one or more of the problem states supplied to the pose-tracking pipeline. For example, the pose tracking pipeline may disregard or override one or more of the identified problem states, at least under some conditions. As another example, identification of zero (i.e., no or none) problem states may be indicated to the pose tracking pipeline or an identification of any problem states may be withheld. The pose tracking pipeline may select one or more of the plurality of skeletal points in accordance with the indication of zero problem states or the lack of indication of any problem states.","The virtual skeleton received at  includes the virtual skeleton selected for an observed depth image supplied to the pose tracking pipeline. In some embodiments, the pose tracking pipeline is configured to apply the identification of the problem state supplied to the pose tracking pipeline to the observed depth image, and the virtual skeleton that is received from the pose tracking pipeline corresponds to the observed depth image. In some embodiments, a subsequently observed depth image may be supplied to the pose tracking pipeline, and the pose tracking pipeline may be configured to apply the identification of the problem state supplied to the pose tracking pipeline to the subsequently observed depth image. In this embodiment, the virtual skeleton received from the pose tracking pipeline corresponds to the subsequently observed depth image rather than a previously observed image from which the problem state was identified. As previously discussed, individual modules of the pose tracking pipeline may utilize problem states identified by the problem state module in place of or in addition to problem states or other information identified by the modules.",{"@attributes":{"id":"p-0130","num":"0129"},"figref":["FIG. 11","FIG. 9","FIG. 10"],"b":["1100","1100","920","1100","1000"]},"At , the method includes receiving an indication of a problem state as information derived from an observed depth image by an intermediate process of the pose tracking pipeline. At , the method includes identifying the problem state from a set of available problem states based on the received information. In some embodiments, filtering of problem states indicated by the pose tracking pipeline may be performed to reduce a number of problem states identified to the pipeline. For example, if a plurality of problem states are indicated by the pose tracking pipeline then filtering may be performed to eliminate the least likely or least prominent problem states. Problem states that remain after the filtering may be identified to the pose tracking pipeline.","Problem states may be described as one of multiple discrete states (e.g., a domain of classification in machine learning) and\/or as a measure of one of the multiple discrete states (e.g., a domain of regression in machine learning). Problem states may be identified by application of one or more classifiers and\/or one or more regressors to individual images or combination of images observed by an optical sensor.","In some embodiments, a problem state may be identified from a set of available problem states by applying classifier analysis to the set of available problem states. The classifier analysis may be used to classify each problem state of the set of available problem states as either an applicable problem state or an inapplicable problem state based on the information derived from the observed depth image. The identification of the problem state supplied to the pose tracking pipeline may be classified as an applicable problem state, whereas other problem states not identified to the pose tracking pipeline may be instead classified as an inapplicable problem state.","In some embodiments, a problem state may be identified from a set of available problem states by applying regressor analysis to the set of available problem states. The regressor analysis may be used to assign one or more of a measurement (e.g., of an estimated area in square millimeters, a distance in millimeters, etc.), a probability that the problem state exists in the image, and\/or a relative weighting to each problem state of the set.","At , the method includes identifying an intermediate process of the pose tracking pipeline to supply an identification of the problem state. In some embodiments, the intermediate processes identified at  may be based on an operating parameter. The operating parameter may include, for example, the problem state itself, as indicated by the pose tracking pipeline and\/or the intermediate process of the pose tracking pipeline from which an indication of the problem state was received. For example, the type of problem state may determine to which intermediate process an identification of the problem state is to be supplied. As another example, problem states that are indicated by a particular intermediate process of the pose tracking pipeline may be predetermined to be supplied to a particular intermediate process of the pipeline as one or more identified problem states.","At , the method includes supplying an identification of the problem state identified at  to the intermediate process of the pose tracking pipeline identified at . The pose tracking pipeline then uses the identification of the problem states supplied at  to select and output a virtual skeleton for an observed depth image. In some embodiments, a problem state may be identified to the pipeline for each body part of a plurality of body parts used to model the human subject.","An example implementation for an occluded state follows: The occluded state is identified per body part of a human subject. The occluded state may be characterized as either (1) unknown, if the occluded state is unknown, (2) none, if the body part is not occluded, (3) local, if the body part is locally occluded by itself or by a neighboring body part, (4) core, if the body part is occluded by the body core, (5) cross, if the body party is occluded by a different limb, (6) environ, if the body part is occluded by an object in the environment.","It is to be understood that the configurations and\/or approaches described herein are exemplary in nature, and that these specific embodiments or examples are not to be considered in a limiting sense, because numerous variations are possible. The specific routines or methods described herein may represent one or more of any number of processing strategies. As such, various acts illustrated may be performed in the sequence illustrated, in other sequences, in parallel, or in some cases omitted. Likewise, the order of the above-described processes may be changed.","The subject matter of the present disclosure includes all novel and nonobvious combinations and subcombinations of the various processes, systems and configurations, and other features, functions, acts, and\/or properties disclosed herein, as well as any and all equivalents thereof."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1A"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIG. 1B","FIG. 1A"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
