---
title: System and method for auto-generating JavaScript
abstract: A method, system, Web-environment and computer program product for automatically generating proxies and meta-proxies for script code in an HTML document. The invention preferably operates with a system that allows for JavaScript to be utilized on the server-side.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08510378&OS=08510378&RS=08510378
owner: Appcelerator, Inc.
number: 08510378
owner_city: Mountain View
owner_country: US
publication_date: 20120911
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATION","STATEMENT REGARDING FEDERALLY SPONSORED RESEARCH OR DEVELOPMENT","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION","EXAMPLE ONE","EXAMPLE TWO"],"p":["This application is a continuation application of U.S. patent application Ser. No. 12\/344,434, filed on Dec. 12, 2008, now U.S. Pat. No. 8,266,202, which claims priority to U.S. patent application Ser. No. 12\/275,182, filed on Nov. 20, 2008, which claims priority to U.S. Provisional Patent Application No. 60\/989,795, filed on Nov. 21, 2007, which is hereby incorporated by reference in its entirety.","Not Applicable","1. Field of the Invention","The present invention is related to development of Web-sites and Web-applications. More specifically, the present invention relates to JavaScript proxies and meta-proxies.","2. Description of the Related Art","Prior to Rich Internet Applications, traditional Web applications involved a client-server architecture with all of the processing on the server side and the client-side used to display the HTML web-pages served by the server. Each time a user desired to view a new Web-page, a HTTP request was sent to the server and the requested Web-page was served to the Web browser on the client-side. Such a traditional system is shown in  with a Web-server  on a server side receiving requests over the Internet  from a Web-browser  on a client-side.","Rich Internet Applications, such as Ajax, greatly improved on the traditional client-server architecture by allowing the client machine to dynamically render and partially refresh web pages based on an initial set of instructions from the server, user input, and small amounts of subsequent data dynamically requested from the server. As shown in , the client machine processes Ajax instructions to render a Web page for the user.","Early Web applications allowed a user's browser to send a request to a server. The server processed the request and responded to the browser with a Web page. When the user wanted to view a new page, another request was sent to the server and the server responded to the browser with a new Web page. Such a process resulted in a waste of bandwidth since much of the Web contents in the first Web page were also contained in the second web page. The need to resend the same information led to a much slower user interface of a Web application than that of a native application.","An emerging technology, called Ajax (Asynchronous and JavaScript XML), was developed for refreshing part of a page instead of refreshing the whole page on every interaction between the user and application. In an Ajax application, when a user submits a form in a page, a script program, usually a JavaScript program, resident on the Web browser receives the user's request and sends a XML (Extended Markup Language) HTTP (Hyper Text Transfer Protocol) request to the Web server in background so as to retrieve only the needed Web contents instead of the whole page and perform corresponding processing to partly refresh the page when receiving a response from the Web server. In this way, the application response time is shortened, because the amount of data exchanged between the Web browser and the Web server is greatly reduced. And the processing time of the Web server is saved because much of the processing is performed at the client side.","General definitions for terms utilized in the pertinent art are set forth below.","Ajax is the use of dynamic HTML, JavaScript and CSS to create dynamic and usually interactive Web sites and applications. A more detailed explanation of Ajax is set forth in Edmond Woychowsky, , Prentice Hall, 2007, which is hereby incorporated by reference in its entirety.","Applets or Java Applets are mini-executable programs named with the .class suffix and are placed on a Web page and provide interactive and multimedia uses.","Application Programming Interface (API) is a collection of computer software code, usually a set of class definitions, that can perform a set of related complex tasks, but has a limited set of controls that may be manipulated by other software-code entities. The set of controls is deliberately limited for the sake of clarity and case of use, so that programmers do not have to work with the detail contained within the given. API itself.","An Attribute provides additional information about an element, object or file. In a Document Object Model, an attribute, or attribute node, is contained within an element node.","Behavioral layer is the top layer and is the scripting and programming that adds interactivity and dynamic effects to a site.","Binding in a general sense is the linking of a library to an application program usually to prevent repetition of frequently utilized code.","Cascading Style Sheets (CSS) is a W3C standard for defining the presentation of Web documents.","Compiler is a computer program that translates a series of instructions written in one computer language into a resulting output in a different computer language.","Document Object Model (DOM) Element is an object contained in a Document Object Model (DOM). The term DOM is generally used to refer to the particular DOM held in the memory region being used by the Web browser. Such a DOM controls the Graphical Respondent Interface (GRI) or Graphical User Interface (GUI). The DOM is generated according to the information that the Web browser reads from the HTML file, and\/or from direct JavaScript software instructions. Generally, there exists a unique DOM element for every unique HTML element. DOM elements are sometimes referred to as HTML\/DOM elements, because the DOM element exists only because HTML code that was read by the Web browser listed some HTML element that had not previously existed, and thereby caused the Web browser to create that DOM element. Often specific elements of the greater set of HTML\/DOM elements are identified by specifying an HTML\/DOM checkbox element, or an HTML\/DOM text input element. A more detailed explanation of the document object model is set forth in Jeremy Keith, , friendsof, 2005, which is hereby incorporated by reference in its entirety.","HyperText Markup Language (HTML) is a method of mixing text and other content with layout and appearance commands in a text file, so that a browser can generate a displayed image from the file.","Hypertext Transfer Protocol (HTTP) is a set of conventions for controlling the transfer of information via the Internet from a Web server computer to a client computer, and also from a client computer to a Web server.","Internet is the worldwide, decentralized totality of server computers and data-transmission paths which can supply information to a connected and browser-equipped client computer, and can receive and forward information entered from the client computer.","JavaScript is an object-based programming language. JavaScript is an interpreted language, not a compiled language. JavaScript is generally designed for writing software routines that operate within a client computer on the Internet. Generally, the software routines are downloaded to the client computer at the","JSON is JavaScript Object Notation format, which is a way of taking data and turning it into valid JavaScript syntax for reconstituting an object at the other end of the transmission protocol.","MySQL is a relational database management system which relies on SQL for processing data in a database.","Parser is a component of a compiler that analyzes a sequence of tokens to determine its grammatical structure with respect to a given formal grammer. Parsing transforms input text into a data structure, usually a tree, which is suitable for later processing and which captures the implied hierarchy of the input. XML Parsers ensure that an XML document follows the rules of XML markup syntax correctly.","Platform is the combination of a client computer, an operating system, and a browser, which together can support Internet access and in particular the operation of interactive forms.","Presentation layer follows the structural layer, and provides instructions on how the document should look on the screen, sound when read aloud or be formatted when it is printed.","Rendering engine is software used with a Web browser that takes Web content (HTML, XML, image files) and formatting information (CSS, XSL) and displays the formatted content on a screen.","Serialization places an object in a binary form for transmission across a network such as the Internet and deserialization involves extracting a data structure from a series of bytes.","SQL (Structured Query Language) is a computer language designed for data retrieval and data management in a database.","Structural layer of a Web page is the marked up document and foundation on which other layers may be applied.","User is a client computer, generally operated by a human being, but in some system contexts running an automated process not under full-time human control.","Web-Browser is a complex software program, resident in a client computer, that is capable of loading and displaying text and images and exhibiting behaviors as encoded in HTML (HyperText Markup Language) from the Internet, and also from the client computer's memory. Major browsers include MICROSOFT INTERNET EXPLORER, NETSCAPE, APPLE SAFARI, MOZILLA FIREFOX, and OPERA.","Web-Server is a computer able to simultaneously manage many Internet information-exchange processes at the same time. Normally, server computers are more powerful than client computers, and are administratively and\/or geographically centralized. An interactive-form information-collection process generally is controlled from a server computer, to which the sponsor of the process has access.","World Wide Web Consortium (W3C) is an unofficial standards body which creates and oversees the development of web technologies and the application of those technologies.","XHTML (Extensible Hypertext Markup Language) is a language for describing the content of hypertext documents intended to be viewed or read in a browser.","XML (Extensible Markup Language) is a W3C standard for text document markup, and it is not a language but a set of rules for creating other markup languages.","There are three types of JavaScript: 1) Client-side JavaScript; 2) Server-side JavaScript; and 3) Core JavaScript. Client-side JavaScript is generally an extended version of JavaScript that enables the enhancement and manipulation of web pages and client browsers. Server-side JavaScript is an extended version of JavaScript that enables back-end access to databases, file systems, and servers. Core JavaScript is the base JavaScript.","Core JavaScript includes the following objects: array, date, math, number and string. Client-side JavaScript and Server-side JavaScript have additional objects and functions that are specific to client-side or server-side functionality. Generally, any JavaScript libraries (.js files) created in core JavaScript can be used on both the client and the server without changes. Client-side JavaScript is composed of a Core JavaScript and additional objects such as: document, form, frame and window. The objects in Client-side JavaScript enable manipulation of HTML documents (checking form fields, submitting forms, creating dynamic pages) and the browser (directing the browser to load other HTML pages, display messages). Server-side JavaScript is composed of Core JavaScript and additional objects and functions for accessing databases and file systems, and sending email. Server-side JavaScript enables Web developers to efficiently create database-driven web applications. Server-side JavaScript is generally used to create and customize server-based applications by scripting the interaction between objects. Client-side JavaScript may be served by any server but only displayed by JavaScript-enabled browsers. Server-side JavaScript must be served by a JavaScript-enabled server but can be displayed by any browser.","United States Patent Publication Number 20010037359 describes a system and method for a server-side browser including markup language graphical user interface, dynamic markup language rewriter engine and profile engine. The system includes a user computer and a destination server computer separated by a server computer hosting a server-side browser (SSB). The SSB includes a markup language graphical user interface (MLGUI), a dynamic markup language rewriter engine (DMLRE) and a profiling engine (PE). The SSB may be configured as an intermediary infrastructure residing on the Internet providing customized information gathering for a user. The components of the SSB allow for controlling, brokering and distributing information more perfectly by controlling both browser functionality (on the client-side) and server functionality (on the destination site side) within a single point and without the necessity of incremental consents or integration of either side.","Irassar et al., United States Patent Publication Number 20040250262, for Business To Business Event Communications discloses an event handling mechanism that allows communication of event information among providers and subscribers across a network using an event handling server.","Jennings et al., United States Patent Publication Number 20070073739 for a Data-Driven And Plug-In Defined Event Engine, discloses an event engine that enables application developers to define finite state machines for implementation via a data-driven approach using executable plug-ins.","Lindhorst et al., U.S. Pat. No. 6,981,215 for a System For Converting Event-Driven Code Into Serially Executed Code, discloses an event-driven server model that uses active server pages that appear to other files as objects with associated method and properties for developing Web pages.","However, current technologies that operate Server-side JavaScript fail to offer complete interactions which are the hallmark of rich web sites and applications. When a developer designates some code to run on the server and be callable from the client, they are logically defining a web service or an RPC (Remote Procedure Call) entry point.","The Present Invention overcomes the obstacles of the prior art. The present invention realizes a RPC, and by default also assumes that the only page from which this code should be called client-side is the page that included that code server-side. The present invention therefore automatically removes and stores the server-side code, and then injects into the client-side page new JavaScript code with the same name: the proxy code. The proxy code will accept (on the client) the same inputs as the original, server-side function; it will package up the data and then remotely call the server, which will verify that the call came from the same page it was defined in, find (or reconstitute) the original code, pass it the data, and when that function completes the returned data (if any) is packaged up, returned to the client, and becomes the return value from the proxy code. All of this is done automatically with the present invention. Moreover, the present invention architecture also allows the insertion of \u201cmeta-proxy\u201d code: code that, upon arrival on the client, or upon other client-side events, will then create the necessary proxies. For example, if a large library is callable from the client, but may or may not actually get called, the present invention simply emits a meta-proxy to the client, and does not store the entire library server-side. Instead, the meta-proxy would \u201clisten\u201d for any invocation of the library on the client, and when it detects that it will call the server, which will return the set of proxies that need to dynamically be created on the client for full access to that library. The server can also load that library dynamically as it's needed, either when the meta-proxy first detects the call, or when the proxy functions are invoked","One aspect of the present invention is a method for automatically generating proxies. The method includes providing a code operating on a server-side and callable from a client-side. The method also includes assuming a page of the code which is callable from the client-side is a page which includes the code server-side. The method further includes automatically removing and storing the server-side code. The method further includes injecting into a client-side page proxy code with a same name as the original code.","Another aspect of the present invention is a method for automatically generating meta-proxies. The method includes providing a code operating on a server-side and callable from a client-side. The method also includes assuming a page of the code which is callable from the client-side is a page which includes the code server-side. The method further includes automatically removing and storing the server-side code. The method further includes injecting into a client-side page meta-proxy code with a same name as the original code. The method further includes generating a plurality of proxies on the client-side upon a client-side event.","Yet another aspect of the present invention is a JavaScript server architecture which includes means for automatically processing an original code for a HTML page running on a server-side and callable on a client-side to remove and store the original code, and a framework written in JavaScript. The framework includes means for generating a proxy code for the original code and means for injecting the proxy code into the HTML page.","Yet another aspect of the present invention is a method for automatically generating proxies for synchronous calls and asynchronous calls. The method includes providing a code operating on a server-side and callable from a client-side. The method also includes assuming a page of the code which is callable from the client-side is a page which includes the code server-side. The method further includes automatically removing and storing the server-side code. The method further includes injecting into a client-side page a first proxy code with a same name as the original code and a second proxy code with a different name.","Yet another aspect of the present invention is a method for automatically generating meta-proxies for synchronous calls and asynchronous calls. The method includes providing a code operating on a server-side and callable from a client-side. The method also includes assuming a page of the code which is callable from the client-side is a page which includes the code server-side. The method further includes automatically removing and storing the server-side code. The method further includes injecting into a client-side page a first meta-proxy code with a same name as the original code and a second meta-proxy code with a different name. The method further includes generating a plurality of proxies on the client-side upon a client-side event.","Yet another aspect of the present invention is a JavaScript server architecture which includes means for automatically processing an original code for a HTML page running on a server-side and callable synchronously and asynchronously on a client-side to remove and store the original code, and a framework written in JavaScript. The framework includes means for generating a first proxy code for the original code for synchronous calls and a second proxy code for asynchronous calls, and means for injecting the first proxy code and the second proxy code into the HTML page.","To understand the differences between the server and browser sides, it's important to keep in mind the page lifecycle. The page request from the browser is received by the Web server, which fetches the appropriate HTML document (either from the file system or perhaps from another \u201chandler\u201d such as PHP or Ruby or Java). The Web server (Apache server) then feeds the document to the script server of the present invention, which begins to parse the HTML document and builds up the DOM tree. When the script server encounters <script> tags the script server not only adds them to the DOM but may also execute them if they have a runat attribute that indicates they should run on the server. During the parsing and execution, external content may also be fetched and loaded into the document, via <script src=\u201c . . . \u201d><\/script> elements and Jaxer.load( . . . ) for JavaScript code, or via <jaxer:include src=\u201c . . . \u201d><\/jaxer:include> (or <jaxer:include path=\u201c . . . \u201d><\/jaxer:include>) for HTML content, or via XMLHttpRequests for any content. After the DOM is fully loaded, the onserverload event is fired. This is the server-side equivalent of the onload event on the browser. The onserverload event is named differently so that a developer's code can react separately to onserverload and onload events. The script server post-processes the DOM to carry out its built-in logic and prepare the DOM for sending to the browser: removing <script> blocks meant only for the server, replacing functions to be proxied with proxies, saving (as needed) functions that should be available on callbacks, . . . etc. Finally, the DOM is serialized back to HTML, and that HTML is streamed back via the Web server to the browser.","The resulting HTML page is sent back to the browser as the response to the browser's request. The browser begins to parse the HTML, building up the DOM. When the browser encounters <script> tags the browser not only adds them to the DOM but also executes them. External JavaScript code or any other content may also be loaded. The onload event fires. Of course the page is progressively rendered throughout much of this flow, and also the user can interact with it.","Callbacks from the browser to server-side functions are handled via XMLHttpRequests. When the script server receives such a request, it creates a new, empty document (unless configured to use a different static document). The script server retrieves the saved functions that are needed to be made available during callbacks to this page. If a function called oncallback is found, it is executed. This is usually used to create the environment needed during a callback, if the saved functions are not enough. The callback function itself is executed. Finally, the result of that execution is packaged and returned as the response to the XMLHttpRequest.","While a DOM is available during callback processing, it is not serialized as HTML and returned as the response, as it was during the \u201cregular\u201d (non-callback) page processing flow. The DOM on script server and the DOM on the browser typically are not synchronized. Both are created from the same HTML source, but they are often subject to processing by different JavaScript code, and both come to life at different points in the page lifecycle: the DOM on the script server exists temporarily when the page is processed by the script server, and is eliminated after it's been serialized into the HTML sent to the browser; the DOM in the browser is built, on the browser, from that HTML, and is the DOM that's rendered to the user and with which the end-user interacts.","While script server and the browser may well share some code (e.g. when using runat=\u201cboth\u201d), usually the JavaScript code designated to run on script server and interacting with the script server DOM is different than the code designated to run on the client. The latter exists e.g. as a <script> tag in the script server DOM but is not executed in script server.","Remember that the only things sent to the browser at the end of page processing is what's actually in the DOM, and what the script server of the present invention has added such as proxies, clientData, and injected scripts. For example, if a developer added an expando property, which is an in-memory change to the DOM that will not get serialized, it will not appear on the client side.","var div=document.createElement (\u201cdiv\u201d);","div.id=\u201cmyDiv\u201d;","document.body.appendChild(div);","document.getElementById(\u201cmyDiv\u201d).userId=123;","On the browser the div is present, with an id of \u201cmyDiv\u201d, but without a \u201cuserId\u201d property. For this same reason, setting event handlers programatically rather than in the DOM will not translate to DOM changes and hence will not propagate to the browser. For example with a button: <input type=\u201dbutton\u201d id=\u201dmyButton\u201d value=\u201dClick me\u201d>","A developer could add an onclick=\u201c . . . \u201d attribute to the tag, but this does not assist with adding the event handler programatically. The script server of the present invention provides Jaxer.setEvent (domElement, eventName, handler) function that \u201cdoes the right thing\u201d in the script server as well as on the browser. var btn=document.getElementById(\u201cmyButton\u201d); function sayHi( ) {alert (\u201chi\u201d)} sayHi.runat=\u201cclient\u201d; Jaxer.setEvent(btn, \u201conclick\u201d, sayHi);","The function used as the event handler should be made available to the browser. When setEvent is executed on the server, as above, it results in the following change to the myButton element: <input type=\u201dbutton\u201d id=\u201dmyButton\u201d value=\u201dClick me\u201d onclick=\u201dsayHi( )> This is sent to the browser since it is a DOM change. If the function passed into setEvent has no name, its body (source) is used as the value of the attribute: var btn","=document.getEleemntById(\u201cmyButton\u201c); Jaxer.setEvent(btn, \u201conclick\u201d, function( ){alert(\u201chi\u201d); });","This results in the following: <input type=\u201dbutton\u201d id=\u201dmyButton\u201d value=\u201dClick me\u201d onclick=\u201d(function( ) {alert(\\\u201dhi\\);}) ( )\u201d>","Which is useful for short functions but is easier to pass in the code to execute as a string: var btn=","document.getEleemntById(\u201cmyButton\u201d);Jaxer.setEvent(btn, \u201conclick\u201d, \u201calert(\u2018hi\u2019)\u201d);","Which results in:<input type=\u201dbutton\u201d id=\u201dmyButton\u201d value=\u201dClick me\u201d onclick=\u201dalert(\u2018hi\u2019)\u201d>","Having briefly described the present invention, the above and further objects, features and advantages thereof will be recognized by those skilled in the pertinent art from the following detailed description of the invention when taken in conjunction with the accompanying drawings.","As shown in  a system  of the invention generally includes a server-side , a client side  and a network or preferably the Internet . The server-side  includes a web-server , a handler  and a JavaScript server  preferably having a server-core  and a server-framework . The client-side  includes a Web-browser  has a client-framework , a client-side JavaScript code  and a rendering engine . The server-framework  accesses filesystems  and databases , as well as the Internet . A more detailed description of the abilities of the running JavaScript on the server-side and client-side is disclosed in U.S. patent application Ser. No. 12\/270,817, filed Nov. 13, 2008 for A Web Server Based On The Same Paradigms As Web-Clients, which is hereby incorporated by reference in its entirety.","In , the system  is shown during a callback operation. The callback begins at the client-side JavaScript code  with a callback request sent to the client-framework . A HTTP GET\/request is transmitted over the Internet  to the server-side , and received at the Web-server . The HTTP GET\/request is sent to the server-core  which sends the HTTP GET\/request as a callback to the server-framework . The server-framework  receives the callback, deserializes, performs the get functions, invokes, serializes and sends the response to the callback to the server-core . The server-core  sends the response to the Web-server  which sends the response over the Internet  to client-framework  on the Web-browser .","In , the system  is shown during a normal process. The process begins with a HTTP GET\/request for a Web-page sent over the Internet  from the Web-browser  on the client-side  to the server-side . The HTTP Request is sent to the handler server . The HTML Web-page is then sent to the script server architecture . The server-core  of the script server architecture  parses the HTML Web-page to create a HTML DOM of the HTML Web-page. The server-core  also parses and interprets the JavaScript of the HTML Web-page. The server-framework  accesses databases  and filesystems  to respond to the Requests for the HTML Web-page. The server-framework  also injects proxies to modify the HTML Web-page. The server-core  serializes the DOM back to the HTML Web-page and the web-server  transmits the HTML Web-page to the client-side  where the Web-browser  renders the HTML Web-page for display for a user. As shown in , a Web server (e.g., apache server)  receives a request from the client-side. The request  is sent to the handler server (PHP, Ruby or Java language) . The handler server  feeds the HTML document to script server-core  which begins to parse the HTML document thereby building the DOM tree for the HTML document on the server-side. Events and callbacks are sent to the script server-framework . The script server adds <script> tags to the DOM and executes them if the <script> has a runat attribute that indicates the <script> should be run on the server. During the parsing and execution, external content from filesystems , databases , and the like are fetched and loaded into the HTML document. After the DOM is loaded, the onserverload event is fired from the script server framework . The script server architecture post-processes the DOM to perform its built in logic and prepare the DOM for transmission to the client side. This post-process includes removing <script> block meant only for the server, replacing function to be proxied with proxies, saving functions that should be available as callbacks, and the like. The DOM is serialized back to HTML, and the HTML is streamed back via the web server  to the browser. A more detailed explanation of event-driven JavaScript architecture is set forth in Colton et al., U.S. patent application Ser. No. 12\/273,539, filed on Nov. 18, 2008, for a Flexible, Event-Driven JavaScript Server Architecture, which is hereby incorporated by reference in its entirety.",{"@attributes":{"id":"p-0089","num":"0088"},"figref":["FIGS. 10 and 11","FIGS. 10 and 11","FIGS. 10 and 11","FIG. 10"],"b":["30","91","92","93","25","25","93","30","25","93"]},"As shown in , the present invention allows the server  to execute the JavaScript functions that are set to runat=\u201cserver\u201d or runat=\u201cboth\u201d. These functions might call databases, file systems, communicate across network sockets, or get session data. And since the server-side engine has a HTML DOM just like the browser, the HTML page can be manipulated through standard DOM APIs and your favorite Ajax libraries. The present invention also has session objects that can be used to persist data for users during a session or transaction. Any functions set to runat=\u201cserver\u201d are stripped from what gets sent to the browser . Specifically at 1, the page executes on the server  and a resulting HTML page is sent to the browser . A more detailed description of the runat function is set forth in Colton et al., U.S. patent application Ser. No. 12\/270,868, filed on Nov. 14, 2008, for a System And Method For Tagging Code To Determine Where The Code Runs, which is hereby incorporated by reference in its entirety.","After server  sends the resulting HTML page to the browser , at 2 the browser  interprets the HTML page and executes the JavaScript within the HTML page. If JavaScript functions tagged to runat=\u201cserver-proxy\u201d are included, then the present invention automatically strips out the bodies of those functions and replaces the bodies with a new functions by the same name that know how to invoke the original function on the server  using Ajax calls and return the result either synchronously or asynchronously. Ajax communications do not need to be written using the present invention. Any functions not tagged with a runat attribute or set to runat=\u201cclient\u201d or runat=\u201cboth\u201d are processed by the browser .","Any functions set to runat=\u201cserver-proxy\u201d can now be called from the browser . The function is called as if it were running on the browser , and the present invention, automatically via XHR communications with the server , marshals the parameters to the server  where the function executes (calling databases, getting info from the session data, etc. . . . ) and returns the result to the browser . The \u201cserver-proxy\u201d functions can be invoked either synchronously or asynchronously. At 3, the browser  calls the server  asynchronously for new information.","The server computer program of the present invention is pre-configured for preferable use as a plug-in to the APACHE 2.x web server. To provide standards-compliant JavaScript and DOM capabilities server-side, the server computer program is built on the MOZILLA engine, which is the same engine used in the popular FIREFOX browser. The server computer program of the present invention is layered into APACHE as an input and output filter for use to modify dynamic pages created by other languages, such as PHP or Ruby.","The server computer program of the present invention is preferably a combination of C\/C++ \u201cCore\u201d code and a server-side JavaScript \u201cFramework.\u201d The server-core  provides the JavaScript parser and runtime, HTML parser and DOM engine, and an event architecture that calls the server-framework  as the document is being processed on the server-side . The server-framework  provides the logic, for example deciding which code to run on the server-side  and which on the client-side , creating proxies on the client-side  for callable server-side functions, serializing and deserializing data, and other related activities.","On the server side , a developer's JavaScript environment is enhanced by the server-framework , which provides access to the database (e.g., MySQL), file system, network, the HTTP Request and Response data, and the external server-side platforms such as Java, PHP, and Ruby.","An example of code written by a developer and prior to processing by the present invention is set forth below.",{"@attributes":{"id":"p-0097","num":"0096"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<html>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<head>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<title>Tasks<\/title>"]},{"entry":[{},"<style>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"body { font: 9pt Arial; float: left; }"]},{"entry":[{},".tasks (background-color: #f0f0ff; padding: 8px;}"]},{"entry":[{},".new-task {Padding-bottom: 8px;}"]},{"entry":[{},".task { Padding: 4px; }"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/style>"]},{"entry":[{},"<script type=\u201dtext\/javascript\u201d runat=\u201dserver\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Var sql = \u201cCREATE TABLE IF NOT EXISTS tasks ( \u201c +"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u201c id int (11) NOT NULL,\u201d +"]},{"entry":[{},"\u201cdescription varchar (255),\u201d+"]},{"entry":[{},"\u201ccreated datetime NOT NULL\u201d +"]},{"entry":[{},"\u201c) ENGINE=InnoDB DEFAULT CHARSET=utf8;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Aptana.DB.execute(sql);"]},{"entry":[{},"Window.onserverload = function( )"]},{"entry":[{},"{"]},{"entry":[{},"var resultSet = Aptana.DB.execute(\u2033SELECT * FROM"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"tasks ORDER BY created\u2033);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"for (var i=0; i<resultSet.rows.length; i++)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"var task = resultSet.rows[i];"]},{"entry":[{},"addTask(task.description, task.id);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"function saveTask(id, description)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"var resultSet = Aptana.DB.execute(\u2033SELECT * FROM tasks"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"WHERE id = ?\u2033, [id]);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if (resultSet.rows.length > 0) \/\/ task already exists"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Aptana.DB.execute(\u2033UPDATE tasks SET description = ?"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"WHERE id = ?\u2033,"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"[description, id]);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else \/\/ insert new task"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Aptana.DB.execute(\u2033INSERT INTO tasks (id, description,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"created) \u2033 +"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2033VALUES (?, ?, NOW( ))\u2033,"]},{"entry":[{},"[id, description]);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"saveTask.proxy = true;"]},{"entry":[{},"function $(id) { return document.getElementById(id); }"]},{"entry":[{},"$.runat = \u2033both\u2033;"]},{"entry":[{},"function addTask(description, id)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"var newId = id \u2225 Math.ceil(1000000000 * Math.random( ));"]},{"entry":[{},"var div = document.createElement(\u2033div\u2033);"]},{"entry":[{},"div.id = \u2033task_\u2033 + newId;"]},{"entry":[{},"div.className = \u2033task\u2033;"]},{"entry":[{},"var checkbox = document.createElement(\u2033input\u2033);"]},{"entry":[{},"checkbox.setAttribute(\u2033type\u2033, \u2033checkbox\u2033);"]},{"entry":[{},"checkbox.setAttribute(\u2033title\u2033, \u2033done\u2033);"]},{"entry":[{},"checkbox.setAttribute(\u2033id\u2033, \u2033checkbox_\u2033 + newId);"]},{"entry":[{},"Aptana.setEvent(checkbox, \u2033onclick\u2033, \u2033completeTask(\u2033 + newId +"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u2033)\u2033);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"div.appendChild(checkbox);"]},{"entry":[{},"var input = document.createElement(\u2033input\u2033);"]},{"entry":[{},"input.setAttribute(\u2033type\u2033, \u2033text\u2033);"]},{"entry":[{},"input.setAttribute(\u2033size\u2033, \u203360\u2033);"]},{"entry":[{},"input.setAttribute(\u2033title\u2033, \u2033description\u2033);"]},{"entry":[{},"input.setAttribute(\u2033id\u2033, \u2033input_\u2033 + newId);"]},{"entry":[{},"input.setAttribute(\u2033value\u2033, description);"]},{"entry":[{},"Aptana.setEvent(input, \u2033onchange\u2033, \u2033saveTask(\u2033 + newId + \u2033,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"this.value)\u2033);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"div.appendChild(input);"]},{"entry":[{},"$(\u2033tasks\u2033).insertBefore(div, $(\u2033tasks\u2033).firstChild);"]},{"entry":[{},"if (!Aptana.isOnServer)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"saveTask(newId, description);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"addTask.runat = \u2033both\u2033;"]},{"entry":[{},"function completeTask(taskId)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"var div = $(\u2033task_\u2033 + taskId);"]},{"entry":[{},"div.parentNode.removeChild(div);"]},{"entry":[{},"deleteSavedTask(taskId);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"completeTask.runat = \u2033client\u2033;"]},{"entry":[{},"function deleteSavedTask(id)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Aptana.DB.execute(\u2033DELETE FROM tasks WHERE id = ?\u2033, [id]);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"deleteSavedTask.proxy = true;"]},{"entry":[{},"<\/script>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/head>"]},{"entry":[{},"<body>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<h2>Tasks To Do<\/h2>"]},{"entry":[{},"<div><i>Any changes should be automatically saved to your"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"database!<\/i><br\/><br\/><\/div>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<div class=\u2033new-task\u2033>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"New:"]},{"entry":[{},"<input type=\u2033text\u2033 id=\u2033txt_new\u2033 size=\u203360\u2033>"]},{"entry":[{},"<input type=\u2033button\u2033 value=\u2033add\u2033"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"onclick=\u2033addTask($(\u2032txt_new\u2032).value)\u2033>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/div>"]},{"entry":[{},"<div id=\u2033tasks\u2033 class=\u2033tasks\u2033>"]},{"entry":[{},"<\/div>"]},{"entry":[{},"<\/body>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/html>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Processing of the code by the present invention results in the code being formatted as set forth below:",{"@attributes":{"id":"p-0099","num":"0098"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<html>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<head>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<script src=\u201c\/aptana\/framework.js?version=0.1.1.759\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"type=\u201ctext\/javascript\u201d><\/script>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<script type=\u201ctext\/javascript\u201d>Aptana.clientData ="]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Aptana.Serialization.fromJSONString(\u2018{ }\u2019);<\/script>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<script type=\u201ctext\/javascript\u201d>Aptana.Callback.id = \u22121407728339;<\/script>"]},{"entry":[{},"<title>Tasks<\/title>"]},{"entry":[{},"<style>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"body {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"font: 9pt Arial;"]},{"entry":[{},"float: left;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},".tasks {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"background-color: #f0ff0ff;"]},{"entry":[{},"padding: 8px;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},".new-task {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"padding-bottom: 8px;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},".task {"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"padding: 4px;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/style>"]},{"entry":[{},"<script type=\u201ctext\/javascript\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"function $(id)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return document.getElementById(id);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"function addTask(description, id)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"var newId = id \u2225 Math.ceil(1000000000 * Math.random( ));"]},{"entry":[{},"var div = document.createElement(\u201cdiv\u201d);"]},{"entry":[{},"div.id = \u201ctask_\u201d + newId;"]},{"entry":[{},"div.className = \u201ctask\u201d;"]},{"entry":[{},"var checkbox = document.createElement(\u201cinput\u201d);"]},{"entry":[{},"checkbox.setAttribute(\u201ctype\u201d, \u201ccheckbox\u201d);"]},{"entry":[{},"checkbox.setAttribute(\u201ctitle\u201d, \u201cdone\u201d);"]},{"entry":[{},"checkbox.setAttribute(\u201cid\u201d, \u201ccheckbox_\u201d + newId);"]},{"entry":[{},"Aptana.setEvent(checkbox, \u201conclick\u201d, \u201ccompleteTask(\u201c + newId +"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u201d)\u201d);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"div.appendChild(checkbox);"]},{"entry":[{},"var input = document.createElement(\u201cinput\u201d);"]},{"entry":[{},"input.setAttribute(\u201ctype\u201d, \u201ctext\u201d);"]},{"entry":[{},"input.setAttribute(\u201csize\u201d, \u201c60\u201d);"]},{"entry":[{},"input.setAttribute(\u201ctitle\u201d, \u201cdescription\u201d);"]},{"entry":[{},"input.setAttribute(\u201cid\u201d, \u201cinput_\u201d + newId);"]},{"entry":[{},"input.setAttribute(\u201cvalue\u201d, description);"]},{"entry":[{},"Aptana.setEvent(input, \u201conchange\u201d, \u201csaveTask(\u201c + newId + \u201d,"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"this.value)\u201d);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"div.appendChild(input);"]},{"entry":[{},"$(\u201ctasks\u201d).insertBefore(div, $(\u201ctasks\u201d).firstChild);"]},{"entry":[{},"if (!Aptana.isOnServer)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"saveTask(newId, description);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"function completeTask(taskId)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"var div = $(\u201ctask_\u201d + taskId);"]},{"entry":[{},"div.parentNode.removeChild(div);"]},{"entry":[{},"deleteSavedTask(taskId);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"function saveTask( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return Aptana.Callback.invokeFunction.call(null, \u201csaveTask\u201d,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"arguments);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"function saveTaskAsync(callback)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return Aptana.Callback.invokeFunctionAsync.call(null, callback,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u201csaveTask\u201d, arguments);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"function deleteSavedTask( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return Aptana.Callback.invokeFunction.call(null, \u201cdeleteSavedTask\u201d,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"arguments);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"function deleteSavedTaskAsync(callback)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return Aptana.Callback.invokeFunctionAsync.call(null, callback,"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"\u201cdeleteSavedTask\u201d, arguments);"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/script>"]},{"entry":[{},"<\/head>"]},{"entry":[{},"<body>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<h2>Tasks To Do<\/h2>"]},{"entry":[{},"<div>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<i>Any changes should be automatically saved to your database!<\/i>"]},{"entry":[{},"<br>"]},{"entry":[{},"<br>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/div>"]},{"entry":[{},"<div class=\u201cnew-task\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"New:<input id=\u201ctxt_new\u201d size=\u201c60\u201d type=\u201ctext\u201d><input value=\u201cadd\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"onclick=\u201caddTask($(\u2018txt_new\u2019).value)\u201d type=\u201cbutton\u201d>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/div>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<div id=\u201ctasks\u201d class=\u201ctasks\u201d>"},{"entry":"<\/div>"},{"entry":"<\/body>"},{"entry":"<\/html>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0100","num":"0099"},"figref":"FIG. 6","b":"99"},"As shown in , a server-computer  contains server architecture . The server-architecture  includes the server-core  and the server-framework . The server-core  includes a JavaScript parser . The server-computer  is preferably a conventional server-computer available from IBM, HP, APPLE, DELL, and SUN.","As shown in , a user-computer  contains a Web-browser . The Web-browser  preferably includes the client framework , client-side JavaScript code  and the rendering engine . The user-computer  is preferably a conventional user-computer such as a PC available from HP, DELL, and GATEWAY, or a MAC available from APPLE. The Web-browser  is preferably MICROSOFT INTERNET EXPLORER, NETSCAPE, APPLE SAFARI, MOZILLA FIREFOX, or OPERA.","A general method  of the present invention is shown in . At block , a code operating on a server-side is provided and callable from a client-side. At block , a page of the code which is callable from the client-side is assumed to be a page which includes the code server-side. At block , the server-side code is automatically removed and stored. At block , proxy code with the same name as the original code is injected into the client-side page. Alternatively at block , a first proxy code with the same name as the original code and a second proxy code with a different name are injected into the client-side page.","A more specific method  of the present invention for automatically generating meta-proxies is shown in . At block , a code operating on a server-side is provided and callable from a client-side. At block , a page of the code which is callable from the client-side is assumed to be a page which includes the code server-side. At block , the server-side code is automatically removed and stored. At block , meta-proxy code with the same name as the original code is injected into the client-side page. Alternatively at block , a first meta-proxy code with the same name as the original code and a second meta-proxy code with a different name are injected into the client-side page. At block , multiple proxies are generated on the client-side upon a client-side event.","A more specific method  of the present invention is shown in . At block , on the client-side, a proxy code with the same name as an original code accepts the same inputs as an original, server-side function. At block , the data is packaged and the server is called. At block , the server verifies that the call came from the same page as the proxy code was defined in. At block , the server finds the original code or reconstitutes the original code. At block , the data is passed to the original code and the function is completed. At block , the return data, if any, is packaged. At block , the packaged return data is returned to the client-side where it becomes the return value from the proxy code.","Another specific method  of the present invention is illustrated in . At block , an HTML document starts life on the server, either as a static HTML file read from disk, or as a dynamic page generated by PHP, Ruby, Java, etc. At block , the server core  receives the HTML document as an output (post-process) filter from APACHE, and starts to parse and execute the HTML document, similar to a browser. The server-core  creates and populates the DOM, executes the JavaScript code designated to run on the server-side , and continues until the entire HTML document is completed. At block , the server-framework  modifies the DOM by generating proxies that automatically replace server-side client-callable functions. At block , the new DOM is serialized as an HTML document on the server-core  and streamed out to the client-side . At block , the client-side receives the HTML document and the processing continues, recreating the DOM from HTML document and executing the remaining client-side JavaScript. At block , one of the client-side proxy functions is called and its parameters are automatically serialized into JSON. A XML HTTP request is sent to the server to invoke the original function with the parameters. At block , the server receives the XML HTTP request. The parameters are deserialized. The function to be invoked is restored and called with these parameters. The results and any exception are serialized back into JSON. At block , the data is returned to the client-side where it is deserialized and returned as the result of the proxy.","Server-side functions can be declared to be proxied so they are callable from the client side. This is achieved by specifying a proxy property on the function object. The possible values for this property are true or false. This is only required for enabling the proxying of the function. By default, in a <script runat=\u201cserver\u201d> block, the functions are not proxied. Note that if a function is not proxied, it isn't just that proxies are not inserted into the client to facilitate calling it: it's actually marked as not callable on the server, so hacking the client to try to call the function on the server will not work.","The following example illustrates one simple way of using the proxy options in a typical code scenario. Group all the server-side code in one script block, and explicitly designate a subset of function to be proxied. Then all client-side code goes in a different script block (where there isn't even the option of programmatically changing it by setting a different runat or proxy value). Of course those skilled in the pertinent art may choose different ways of organizing the code. Further, for large amounts of code, one has the option to extract the code into (reusable) external JavaScript files.","The _login.js file referenced in the example illustrated in the code below which contains some functions that explicitly override the runat=\u2018server\u2019 directive specified on the script tag used to load the file.",{"@attributes":{"id":"p-0110","num":"0109"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<script type=\u201ctext\/javascript\u201d runat=\u201cserver\u201d>"},{"entry":"function setPassword(username, newPassword)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ put code in here to directly set the password of a given username"]},{"entry":[{},"\/\/ this code should not be callable from the client"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"function changePassword(username, oldPassword, newPassword)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/ put code in here to first verify the submitted password,"]},{"entry":[{},"\/\/ and then - if successful - call setPassword to actually make changes"]},{"entry":[{},"\/\/ this code should be callable from the client"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"changePassword.proxy = true;"},{"entry":"<\/script>"},{"entry":"<script type=\u201ctext\/javascript\u201d>"},{"entry":"function submitPassword( )"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ put client-side code here to grab the username and old and new"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"passwords"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\/\/ and call changePassword on the server"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"<\/script>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"In the snippet illustrated below, the function is proxied.",{"@attributes":{"id":"p-0112","num":"0111"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"function checkCredentials(username, password)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"var rs = Aptana.DB.execute(\u201cSELECT * FROM users WHERE"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"username = ? AND password = ?\u201d,"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"[username, password]);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if (rs.rows.length == 0)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return \u201c\u201d;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"var user = rs.rows[0];"]},{"entry":[{},"makeAuthenticated(user);"]},{"entry":[{},"return user.username;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"checkCredentials.proxy = true;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"In the snippet illustrated below, the function runs on the client-side.",{"@attributes":{"id":"p-0114","num":"0113"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"function login( )"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"var username = $(\u2018username\u2019).value;"]},{"entry":[{},"var password = $(\u2018password\u2019).value;"]},{"entry":[{},"var username = checkCredentials(username, password);"]},{"entry":[{},"if (username != \u201c\u201d)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"fromTemplate(\u2018loginComponent\u2019, \u2018loginAuthenticated\u2019);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"setTimeout(\u201c$(\u2018authenticatedUsername\u2019).innerHTML = \u2018\u201c + username +"},{"entry":"\u201d\u2019\u201d, 0);"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"changeAuthentication (true);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"else"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"$(\u2018loginMessage\u2019).innerHTML = \u201cSorry, try again\u201d;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"login.runat = \u201cclient\u201d;"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Below is an illustration of object inside an Aptana namespace to allow the proxy functions to be declared in a single group within JavaScript code.\n\n","This code is presented in such a way that it is executed by the server prior to DOM serialization. One can also use this code to remove the proxied functions by setting the value to null. Also, Aptana.proxies is not a complete collection of the functions being proxied by the server it is just a convenient way to express the myFunc.proxy=true; syntax for multiple function references.","In another example, code written by a Web developer prior to processing by script server architecture of the present invention is set forth below.",{"@attributes":{"id":"p-0118","num":"0120"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<html>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<head>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<script runat=\u2018server-proxy\u2019>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"function getName(id)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return Jaxer.DB.execute(\u201cSELECT name FROM users"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"WHERE id = ?\u201d, id).singleResult;"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"function countUsers( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return Jaxer.DB.execute(\u201cSELECT COUNT(*) FROM"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"users\u201d).singleResult;"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/script>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/head>"]},{"entry":[{},"<body>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<script>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"function showNameAndUsers( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"document.getElementById(\u2018output\u2019).innerHTML ="]},{"entry":[{},"getName(id) +"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u201c is one of\u201d + countUsers( ) + \u201c users\u201d;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/script>"]},{"entry":[{},"<input type=\u201cbutton\u201d value=\u201cClick me\u201d"]},{"entry":[{},"onclick=\u201cshowNameAndUsers(1)\u201d>"]},{"entry":[{},"<div id=\u201coutput\u201d><\/div>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/body>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<\/html>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"Then after processing by the script server architecture of present invention, the code is as set forth below.",{"@attributes":{"id":"p-0120","num":"0122"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"<html>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<head>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<script type=\u201ctext\/javascript\u201d"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"src=\u201c\/jaxer\/framework\/clientFramework_compressed.js?version=1.0.0.4252\u201d>"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/script>"]},{"entry":[{},"<script type=\u201ctext\/javascript\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Jaxer.Callback.pageSignature = \u22121745593693;"]},{"entry":[{},"Jaxer.Callback.pageName = \u2018127.0.0.1:8081\/repo\/APT-010.html\u2019;"]},{"entry":[{},"Jaxer.CALLBACK_URI = \u2018\/jaxer-callback\u2019;"]},{"entry":[{},"Jaxer.ALERT_CALLBACK_ERRORS = false;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/script>"]},{"entry":[{},"<script>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"eval(Jaxer.Callback.createProxies([\u2018getName\u2019, \u2018countUsers\u2019]));"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/script>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/head>"]},{"entry":[{},"<body>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<script>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"function showNameAndUsers( )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"document.getElementById(\u2018output\u2019).innerHTML = getName(id) +"]},{"entry":[{},"\u201c is one of\u201d +"]},{"entry":[{},"countUsers( ) +"]},{"entry":[{},"\u201c users\u201d;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/script>"]},{"entry":[{},"<input value=\u201cClick me\u201d onclick=\u201cshowNameAndUsers(1)\u201d type=\u201cbutton\u201d>"]},{"entry":[{},"<div id=\u201coutput\u201d>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/div>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"<\/body>"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<\/html>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"There is a meta-proxy call to Jaxer.Callback.createProxies for getName and countUsers, which will in turn create proxy functions for getName and countUsers, and when one calls each of them they will automatically call their server-side namesakes. The functionality can be expanded to change each of these proxies or meta-proxies such that, when first invoked, they either call back their server-side implementations (like the above) or download the implementation and execute it client-side (for those functions that can run client-side).","From the foregoing it is believed that those skilled in the pertinent art will recognize the meritorious advancement of this invention and will readily understand that while the present invention has been described in association with a preferred embodiment thereof, and other embodiments illustrated in the accompanying drawings, numerous changes modification and substitutions of equivalents may be made therein without departing from the spirit and scope of this invention which is intended to be unlimited by the foregoing except as may appear in the following appended claim. Therefore, the embodiments of the invention in which an exclusive property or privilege is claimed are defined in the following appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE SEVERAL VIEWS OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 8A"},{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 9A"},{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
