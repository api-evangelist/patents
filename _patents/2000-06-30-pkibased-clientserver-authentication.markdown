---
title: PKI-based client/server authentication
abstract: A client/server authentication system is disclosed. The system includes a filter, a plug-in, and an extension. The filter monitors sessions between a client and a server for proper authentication. The plug-in is coupled to the client and the server. The plug-in generates public and private key pairs, and receives and stores certificates. The extension is coupled to the filter. The extension generates script commands to cause the client and the server to perform required steps indicated by the filter.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07032110&OS=07032110&RS=07032110
owner: LANDesk Software Limited
number: 07032110
owner_city: Dublin
owner_country: IE
publication_date: 20000630
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["This disclosure relates to public-key infrastructure (PKI)-based client\/server authentication.","The expanding popularity of the Internet, especially the World Wide Web, has lured many people and businesses into the realm of network communications. There has been a corresponding growth in the transmission of confidential information over these networks. As a consequence, there is an increasing need for security in communications over the Internet. In particular, there is a critical need for improved approaches to ensuring the confidentiality of private information.","Many operating systems, including UNIX and Microsoft Windows\u2122, support a security protocol implemented through a Secure Sockets Layer (SSL) library. In these systems, the SSL provides authentication and data privacy over the Internet. However, SSL implementation has some disadvantages. The SSL 1.0 provides server authentication but not client authentication. The SSL 3.0 provides mechanisms for client authentication but requires storage and management of client certificates.","For example, Web browsers that support the SSL 3.0 warn the user of connecting to a site with an unlisted certificate. An unlisted certificate site refers to a site with a certificate signed by a certificate authority not in the authority trust list such as CyberTrust or VeriSign. In this case, the browser requires the user's certificate to be placed into the client certificate list. The browser further requires the selection of this certificate every time a connection is made to the web server.","Public-key infrastructure (PKI) is a combination of software, encryption technologies, and services that provides security for communications and business transactions over public and private networks. The PKI technology provides several aspects of security needs such as authentication, privacy, data integrity, and non-repudiation.","Throughout this description, the embodiments and examples shown should be considered as examples rather than as limitations of the invention.","An examplary computer network , such as the Internet, is illustrated in  in accordance with an embodiment of the present invention. The computer network  includes computers , , . The computers  may be \u201cpersonal computers\u201d or workstations. These computers  may enable users to make requests for data or services from other computers on the network . The requested data may reside in the computers , , . The computer network  also includes a network channel , which allows the delivery of the requested data or service between the computers , , .","In some embodiments, the computers  are client systems and the computers ,  are servers. The term \u201cclient\u201d refers to a computer's general role as a requester of data or services, and the term \u201cserver\u201d refers to a computer's role as a provider of data or services. The size of a computer, in terms of its storage capacity and processing capability, does not necessarily affect its ability to act as a client or server. Further, it is possible that a computer may request data or services in one transaction and provide data or services in another transaction, thus changing its role from client to server or vice versa.","In other embodiments, the computers  may also act as consoles to provide system administrators with access to managed nodes. The managed nodes may be represented with any computers , ,  tied to the network channel . In these embodiments, the consoles and the managed nodes may have associated servers to store related data. There may also be a central service and database server referred to as a core. The core may be used to store and manage data. The core may also be used to provide authentication and issue certificates. The console, the managed nodes, and the core may form a system such as Intel's LANDesk product.","The system described above may also require Single Sign-On (SSO) for the system administrator. Once the administrator logs into the core through the console, the SSO allows the administrator free access to the managed nodes in the system. The administrator is allowed to access the resources and administrative features of the system without requiring additional authentication processes at the core or the managed nodes. Thus, the authentication at the core is propagated to the managed nodes.","The console in the system may use a Web browser or a WinINET-based User Interface (UI) component, such as Microsoft Management Console (MMC), to interface with the network. The managed node may use the Web server to communicate to the network.","In the above embodiments, the system uses a PKI-based technology. The console performs network operating system (NOS) authentication at the core computer using the capabilities of the core's web server. Once the operating system has been authenticated, the console may create a public\/private key pair and submit the public key to the core. The core may create an X.509 compliant certificate using the public key, and place identification information in the certificate based upon the NOS authenticated console session. Managed nodes have the core's signing certificate containing the core's public key. Therefore, the nodes may be configured to trust certificates signed by the core. When a managed node is contacted, the console may present the certificate to the managed node. The node may use the public key of the core to verify the certificate that identifies the operator\/administrator. Further, the managed node may use the information embedded in the certificate to grant specific access rights to the console operator.","A PKI-based client\/server authentication (PBCSA) system utilizes the Web server's extension functionality and the Web browser's script capabilities to implement the PBCSA protocol. A block diagram of the PBCSA system  is illustrated in  in accordance with an embodiment of the present invention. The diagram includes the PBCSA system  in the context of a relationship between a client  and a server . In one embodiment, the PBCSA system includes a security plug-in , a web server security filter , and a web server security extension .","The web server security filter  monitors sessions for proper authentication. The security filter  may also re-direct unauthenticated sessions to the proper web page.","The security plug-in  interfaces a client script to generate public\/private key pairs. The security plug-in  may also receive and store certificates from the core. The security plug-in  may further generate client signatures.","The web server security extension  generates an HTML and browser script commands to cause the client  to perform the required steps.",{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIGS. 3A through 3C"},"Initially, a client side console submits a request to a managed node's web server at . The security filter  checks the request's destination at . If the destination is a protected page , the security filter  may examine the request to look for a valid security token at . The presence of the token may indicate a previous authentication by the console. If the valid security token is not present to indicate a previous authentication , then the security filter  may re-direct the request to the security extension  of the managed node's web server at . In one embodiment, the re-direction is effected by an appropriate HTML program.","At , the security filter  may generate an appropriate re-direct HTML program and script to direct the client to invoke the security plug-in . The invocation of the security plug-in  allows the client to submit the certificate to the security extension at . The security extension  may then verify the certificate by checking the certificate's signature with the trusted core's certificate at . If the certificate is determined to be valid , the security extension  creates a connection session at . The security extension  may then perform a server challenge at . In one embodiment, the server challenge may be made by using the re-direct HTML program to convey the challenge to the client. The re-direct HTML program may direct the client to invoke the security plug-in  to generate the client response to the server challenge at .","The purpose of the server challenge and the client response is to prevent an intruder from intercepting the client certificate and then submitting the certificate to the server. In one embodiment, the server challenge is a random number. The client may respond to the server challenge by signing the random number with a private key associated with the session certificate. By verifying that the client has the private key, the server knows that the client is not an eavesdropper. An eavesdropper may obtain the certificate by listening to network traffic, but he has no access to the private key since the key is not sent over the network.","The re-direct HTML program may direct the client to save the security token as a named cookie at . At , the client is directed to re-submit the Uniform Resource Locator (URL) of the originally requested page, along with a query string to the server. Once this process is completed, the security filter  determines if the session is authenticated. The determination is made using the security token contained in the cookie at .","Once the session is authenticated, the security filter  determines if the client is authorized to access the web page at . If authorized, the client is allowed access to the requested page at .",{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 4","b":"400"},"If the client is a WinINET-based component, the security filter  may generate a symmetric key and encrypt the key with the client's public key at . The filter may then send the encrypted symmetric key to the client via an hypertext transfer protocol (HTTP) header or cookie at . The symmetric key may be used to encrypt communication at . If the client is a web browser, the PBCSA system may work with Secure Sockets Layer (SSL) library 1.0 to provide communication privacy at .","The combination of SSL 1.0 and the PBCSA system allows flexibility of an extensive client\/server authentication without added responsibility of certificate selection and management. The combined system provides advantageous features of communication authentication and privacy at significantly reduced storage and management tasks for the client. The footprint of the server side component is smaller than that of a fully enable SSL 3.0 server. The PBCSA system may also provide authentication to non-SSL supported Web servers. Further, the PBCSA system may enable core-based authorizations.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIGS. 5A and 5B","FIG. 5A"],"b":["208","210","210","210","210"]},"For a WinINET-based component (), the client first contacts the server with the certificate inserted as a request header. The security filter  may verify and generate the server challenge that is inserted in the response header. The client may then generate the client response and save it as a named cookie.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIGS. 6A through 6E","b":["208","208"]},"The security filter  waits for Internet Server Application Programming Interface (ISAPI) Uniform Resource Locator (URL) map notifications at . The filter may then check if the URL is protected . If the URL is not protected, the request is allowed to proceed at . If the URL is protected, the filter may check the HTTP header at .","If the HTTP header has a HTTP_LDMSCert variable, then the client is a non-browser client who submitted the certificate in the request header. The HTTP_LDMSCert variable inserts the client certificate into the HTTP header. The variable also informs the web server that the connection is made by a WinINET-based client. When the security filter  finds this variable in the HTTP header, the filter assumes that the connection is a new WinINET connection. The filter further expects the authentication to take place within the security filter . Thus, in this case, the security filter  does not need to redirect the client to submit the certificate to the security extension . This saves a round trip between the web server and the client.","The security filter  may then perform the verification of the certificate at . If the verification of the certificate  fails, the filter may reject the client at . If the verification succeeds, the filter may generate the node challenge  and add the challenge to the HTTP response header as a cookie variable at . The security filter  may respond to the client with a retry status at . The client may re-submit the request with the client response as the cookie variable instead of the certificate variable in the requested header at . The re-submission of the request allows the client to present the authentication token to the server at . The security filter  may then create and register the session, and re-direct the client to the original URL.","If the HTTP header does not have the HTTP_LDMSCert variable, then a check is made to find out if the client has presented an authentication token as a cookie variable at . If the token is not present and the client is a Web browser , the security filter  may redirect the client to the security extension  for authentication at . If the client is not a browser, the filter may return an authentication failure status code at . The non-browser client automatically responds to this status code at . The client may then insert its session certificate in the HTTP_LDMSCert header and resubmit the request at .","If the authentication token is present, the filter may verify that the authentication token of the client response is valid at . The security filter  may then reject the client's access at  if the response is not valid. Otherwise, if the response is valid, the filter may verify that the authentication token has not expired at . If the token has expired, the filter may redirect the browser client  to the security extension at . For a non-browser clients the filter may respond to the client with a failure status at . The client may insert a session certificate as the HTTP_LDMSCert variable, at , and resubmit the request to the managed node upon receipt of the failure status at .","At , Access Control List (ACL) checking is performed to verify that the client is authorized to access the URL in the manner requested. If the client passes the authorization process , the client is allowed to proceed to the requested page at . Otherwise, the request is rejected at .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 7","b":["210","210","210"]},"The security extension  may obtain the certificate from the submitted form at . The extension  then verifies the certificate using the trusted core certificate at . If the verification fails at , the security extension  indicates a failure status to the client using an HTML program at . If the verification passes at , the security extension  creates and registers a new authenticated session at . The filter may then validate this authenticated session by verifying the authentication token at .","The security extension  may generate a node challenge random number at . The extension  may also generate the re-direct HTML program. The program may generate the client response and save the response as a browser cookie at , and re-direct the client to the original URL it requested at . The browser cookie may be saved to expire after the current session. The Web browser or WinINET component may automatically send the client response as a cookie variable in subsequent requests to the server.","The Web browser may use the re-direct HTML program to redirect the browser from its requested target to the security extension  and from the extension  back to the original target during the authentication process.","An example HTML code for the re-direct program is listed below. The following code segment contains HTML redirection scripts to redirect the client. The code contains the server challenge that may direct the client to invoke the security plug-in . The invocation of the security plug-in  calculates the client response. The code then saves the client response as a named cookie. The browser automatically submits the authentication token as the cookie variable in the HTTP header in subsequent requests made to the server. The HTML script then redirects the client to the URL of the original request with the query string. The original request is automatically re-submitted to the server with the client response after the authentication process. The code shown below may be found in the security filter .",{"@attributes":{"id":"p-0050","num":"0049"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"strcpy(raw,"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"280pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2033<HTML>\\r\\n<BODY>Authentication in processing...<br>\\n\u2033"]},{"entry":[{},"\u2033<OBJECT classid=CLSID:B)!B133E-E148-11D2-8757-00C004F72C180 height=1 id=SecCon"]},{"entry":[{},"\u2002width=1><\/OBJECT>\\n\u2033"]},{"entry":[{},"\u2033<form name=\\\u2033CertData\\\u2033 action=\\\u2033\/\/jsu-deski1\/MNode\/idms.sec?CertVerify\\\u2033"]},{"entry":[{},"\u2002method=\\\u2033post\\\u2033>\\n\u2033"]},{"entry":[{},"\u2033<input type=\\\u2033hidden\\\u2033 name=\\\u2033CertVerify\\\u2033 value=\\\u2033\\\u2033 >\\n\u2033"]},{"entry":[{},"\u2033<input type=\\\u2033hidden\\\u2033 name=\\\u2033RedirectUrl\\\u2033 value=\\\u2033\u2033);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"strcat(raw, url);"},{"entry":"strcat(raw, \u2033\\\u2033>\\n<input typ=\\\u2033hidden\\\u2033 name=\\\u2033RedirectParam\\\u2033 value=\\\u2033\\\u2033>\\n <form>\u2033"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2033<script language=\\\u2033vbscript\\\u2033>\\n\u2033"]},{"entry":[{},"\u2033cert = SecCon.GetCert\\n\u2033"]},{"entry":[{},"\u2033document.CertData.CertVerify.value = cert\\n\u2033"]},{"entry":[{},"\u2033document.CertData.submit( ) <\/script>\\n\u2033"]},{"entry":[{},"\u2033<\/BODY>\\r\\n<\/HTML>\\r\\n\\r\\n\u2033);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"294pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"len = strlen(raw);"},{"entry":"pCtxt \u2014>WriteClient(pCtxt, raw, &len, 0);"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The following code segment enables client to re-submit the request with the security token. The code shown below may be found in the security extension .",{"@attributes":{"id":"p-0052","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"STR64FromData(&digest, pSession\u2014>rdmDigest);"},{"entry":"_tcscpy(raw, _T(\u2033<OBJECT classid=CLSID:B)!B133E-E148-11D2-8757-00C004F72C180"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003\u2003height=1 id=SecCon width=1><\/OBJECT>\\n\u2033)"},{"entry":"\u2002\u2009\u2003\u2003\u2003\u2003\u2003_T(\u2033<script language=\\\u2033vbscript\\\u2033>\\n\u2033)"},{"entry":"\u2002\u2009\u2003\u2003\u2003\u2003\u2003_T(\u2033cipherText = SectCon.GetSignedData(\\\u2033\u2033));"},{"entry":"_tcscat(raw, digest);"},{"entry":"_tcscat(raw, _T(\u2033\\\u2033)\\ndocument,cookie = \\AuthenBlock=KEY=\u2033));"},{"entry":"_tcscat(raw, sessionKey);"},{"entry":"_tcscat(raw, _T(\u2033&CHALLENGE=\\\u2033 + cipherText + \\\u2033;path=\/\\\u2033 <\/script>\\n\u2033));"},{"entry":"if (url)"},{"entry":"{"},{"entry":"_tcscat(raw, _T(\u2033<META HTTP-EQUIV=\\\u2033REFRESH\\\u2033 Conten=\\\u20330; URL=\u2033));"},{"entry":"_tcscat(raw, url);"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"if (param)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"_tcscat(raw, _T(\u2033?\u2033));"]},{"entry":[{},"_tcscat(raw, param);"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"_tcscat(raw, _T(\u2033\\\u2033>\u2033));"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"DWORD len = _tcslen(raw) * sizeof(TCHAR);"},{"entry":"pCtxt \u2014> WriteClient(pCtxt\u2014>ConnID, raw, &len, HSE_IO_SYNC);"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"In some embodiments, an authentication connection may be validated each time the client sends a request to the server. After initial authentication, the client may generate the client response from the server challenge. The response may be sent to the server as a part of security token for connected session validation. In this case, it may be possible for an eavesdropper to get the authentication token by listening to network traffic. The eavesdropper may send requests using the intercepted token.","To prevent this type of attack, the security filter  may generate the server challenge for each request inserting it into the server response header. The security token would then be valid for only one request to the server.","While specific embodiments of the invention have been illustrated and described, other embodiments and variations are possible. For example, even though the present PKI-based client\/server authentication system has been described in terms of client-to-server authentication, the system may be used to perform server-to-client authentication as well.","All these are intended to be encompassed by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Different aspects of the disclosure will be described in reference to the accompanying drawings wherein:",{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIGS. 3A through 3C"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 6A through 6E"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
