---
title: Method and apparatus for providing device compatibility information
abstract: An approach is provided for determining device compatibility using alerts and information spaces. A link redirector receives a request from a device for a required type of service. The link redirector alerts the device compatibility service and the export control interface about the potential request or stores the request information in an information space while searching for a suitable service for the device. Therefore, the device compatibility service and the export control interface can start preparing information about device compatibility and export control before the information is requested by the service determined.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08478812&OS=08478812&RS=08478812
owner: Core Wireless S.a.r.l.
number: 08478812
owner_city: Luxembourg
owner_country: LU
publication_date: 20090929
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SOME EXAMPLE EMBODIMENTS","DESCRIPTION OF SOME EMBODIMENTS"],"p":["Service providers (e.g., wireless, cellular, etc.) and mobile device manufacturers are continually challenged to deliver value and convenience to consumers by, for example, providing compelling network services. With the large variety of operating systems, processor speeds, screen sizes, memory sizes, media capabilities and other characteristics of mobile devices, it is difficult for developers of mobile services and applications to know how many and which devices are able to run effectively the service client or application being developed. Similarly, it is difficult for a user of one mobile device to know what applications and services executing on mobile devices of others will also run effectively on the user's device.","Therefore, there is a need for an approach for determining device compatibility in an efficient manner to ensure effective and timely execution of developed services and applications.","According to one embodiment, a method comprises receiving a first request, from a client, to access a service. The service is adapted according to one or more characteristics of the client and the request includes device identification data associated with the client. The method also comprises determining a service platform corresponding to the requested service. The method further comprises redirecting the first request to the determined service platform. The method further comprises causing at least in part transmission of the device identification data to a device compatibility service to alert the device compatibility service of a potential second request originating from the determined service platform for device compatibility information. The alert triggers preparations by the device compatibility service to respond to the potential second request before receiving the potential second request from the determined service platform.","According to another embodiment, an apparatus comprising at least one processor, and at least one memory including computer program code, that at least one memory and the computer program code configured to, with the at least one processor, cause the apparatus to receive a first request, from a client, to access a service. The service is adapted according to one or more characteristics of the client and the request includes device identification data associated with the client. The apparatus is also caused to determine a service platform corresponding to the requested service. The apparatus is further caused to redirect the first request to the determined service platform. The apparatus is further caused to cause at least in part transmission of the device identification data to a device compatibility service to alert the device compatibility service of a potential second request originating from the determined service platform for device compatibility information. The alert triggers preparations by the device compatibility service to respond to the potential second request before receiving the potential second request from the determined service platform.","According to another embodiment, a computer-readable storage medium carrying one or more sequences of one or more instructions which, when executed by one or more processors, cause an apparatus to receive a first request, from a client, to access a service. The service is adapted according to one or more characteristics of the client and the request includes device identification data associated with the client. The apparatus is also caused to determine a service platform corresponding to the requested service. The apparatus is further caused to redirect the first request to the determined service platform. The apparatus is further caused to cause at least in part transmission of the device identification data to a device compatibility service to alert the device compatibility service of a potential second request originating from the determined service platform for device compatibility information. The alert triggers preparations by the device compatibility service to respond to the potential second request before receiving the potential second request from the determined service platform.","According to yet another embodiment, an apparatus comprises means for receiving a first request, from a client, to access a service. The service is adapted according to one or more characteristics of the client and the request includes device identification data associated with the client. The apparatus also comprises means for determining a service platform corresponding to the requested service. The apparatus further comprises means for redirecting the first request to the determined service platform. The apparatus further comprises means for causing at least in part transmission of the device identification data to a device compatibility service to alert the device compatibility service of a potential second request originating from the determined service platform for device compatibility information. The alert triggers preparations by the device compatibility service to respond to the potential second request before receiving the potential second request from the determined service platform.","Still other aspects, features, and advantages of the invention are readily apparent from the following detailed description, simply by illustrating a number of particular embodiments and implementations, including the best mode contemplated for carrying out the invention. The invention is also capable of other and different embodiments, and its several details can be modified in various obvious respects, all without departing from the spirit and scope of the invention. Accordingly, the drawings and description are to be regarded as illustrative in nature, and not as restrictive.","A method and apparatus for timely providing device compatibility are disclosed. In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the embodiments of the invention. It is apparent, however, to one skilled in the art that the embodiments of the invention may be practiced without these specific details or with an equivalent arrangement. In other instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the embodiments of the invention.","Although various embodiments are described with respect to application developers for mobile communication devices (e.g., wireless devices such as cellular telephones), it is contemplated that the approach described herein may be used in other contexts, such as by network applications, or modules executing as part of a social service, or by individual users or subscribers to a network service.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1"},"Because of the wide variety of communication device characteristics, it is unlikely that any but the most simple service or application is able to execute effectively on all such devices. There are many characteristics of importance to the developer, such as the screen size of the communication device, the operating system of the device, the processing power of the device, the type of media the device can render, and the type of input a user of the device can enter, among many others, described in more detail below.","For example, the client-server model of computer process interaction is widely used. According to the client-server model, a client process sends a message including a service request to a server process, and the server process responds by providing a service. The server process may also return a message with a response to the client process. Often the client process and server process execute on different computer devices, called hosts, and communicate via a network using one or more protocols for network communications. The term \u201cserver\u201d is conventionally used to refer to the process that provides the service, or the host computer on which the process operates. Similarly, the term \u201cclient\u201d is conventionally used to refer to the process that makes the service request, or the host computer on which the process operates. As used herein, the terms \u201cclient\u201d and \u201cserver\u201d refer to the processes, rather than the host computers, unless otherwise clear from the context. In addition, the server process can be broken up to run as multiple processes on multiple hosts (sometimes called tiers) for reasons that include reliability, scalability, and redundancy, among others. A well known client process available on most nodes connected to a communications network is a World Wide Web client (called a \u201cweb browser,\u201d or simply \u201cbrowser\u201d) that interacts through messages formatted according to the hypertext transfer protocol (HTTP) with any of a large number of servers called World Wide Web servers that provide web pages. Some services or applications rely on a web browser on the client. To support small screens available on many mobile communication devices, Web pages are converted to reduced representations and transmitted to mobile communication devices using the Wireless Application Protocol (WAP).","Typically, the developer has a particular device, or family of devices, in mind when the service or application is being developed; and, the developer knows the characteristics of that device or family. However, in trying to promote the service or application, it would be useful to know what other extant or emerging devices can effectively execute the functionality of the service or application. The developer would be interested in a technique to specify the characteristics of the device invoked by the service or application, and determine all other communication devices that possess the invoked characteristics or more.","Furthermore, a user of a particular device may want to know what other services and applications can run effectively on that particular device. For example, the user has a friend who is employing an interesting service or application, and the user is interested in knowing whether the application or service will run on the user's device. In some cases, a user of a particular device is thinking of changing an older device and wants to know what currently available devices can effectively run all the applications and services that the user currently employs or intends to employ.","In yet other applications, a developer might want to adapt a service to perform differently for different device capabilities, running or installing a faster, lighter version of the service (using less memory and CPU) for less capable devices.","Therefore, there is a need to determine device compatibilities. However, the process for determining device compatibility can be relatively time consuming particularly when the device compatibility information is provided by multiple sources that can be physically located in distant locations and over multiple networks. The time delay for responding to a device compatibility request can be particularly problematic for a developer or service provider who relies on timely device compatibility information to tailor services according to device characteristics. It is contemplated that the service provider may provide any service (e.g., a mapping service, a multi-media service, news service, etc.) that can be provided over a communication network. For example, even though a service provider may be capable of responding quickly to a service request from a user, the response may nonetheless be delayed since the service is not be provided until the device compatibility is determined. This delay can degrade the experience the user perceives when using the service.","In one sample use case, for instance, a user may request a streaming video from a multimedia service. To respond to the request, the multimedia service generates a device compatibility request to determine the display characteristics (e.g., screen resolution, available video codes, bandwidth capability, etc.) to determine the type of stream to provide to the user's device. Conventional processes for determining this device compatibility information can result in a delay between the time the user requests the streaming video and the time multimedia service can provide the requested stream, thereby leading to a potentially unsatisfactory user experience.","To address this problem, a system  of  introduces the capability to determine device compatibility in a more efficient manner by alerting or sharing information about a potential device compatibility request with the platforms that provide device compatibility information before the platforms receive the actual request. The early alert or sharing of information provides a warning about the potential upcoming device compatibility request so that the platforms can prepare to respond even before receiving the actual request. In this way, the platforms can respond more quickly when the device compatibility request is finally received at the platforms, thereby reducing or eliminating the delay in providing a response to the requesting service provider. In turn, the service provider can then serve its users more quickly and responsively.","The system  includes a device compatibility service  executing on a node (not shown) of a network  that provides access to the device compatibility service . The device compatibility service  acquires the device characteristics for multiple devices, e.g., from manuals published by the device manufacturers or websites maintained by those manufacturer or some combination, and stores data indicating those characteristics in a database maintained by the device compatibility service . Then, a developer, a process or other user can send queries to the device compatibility service  to obtain information about the devices that have a certain characteristic or combination of characteristics, or to obtain information about the characteristics associated with a particular device. Example queries include queries to list out all the characteristics of a specific device, list out partial characteristics of a specific device, list out all the devices with a specific set of values for one or more characteristics, and list out all the devices which are similar to a specific device (e.g., similar values for operating system or media capabilities or mobile application, alone or in some combination).","As shown in , the system  comprises a user equipment (UE)  having connectivity to a service platform  via a communication network . In addition, the service platform  includes a device compatibility service client process  having connectivity to the device compatibility service  and the export control interface  also via the communication network . In one embodiment, the device compatibility service  and the export control interface  comprise the platforms that respond to device compatibility requests received over the network . It is also contemplated that any number of platforms may be used to provide device compatibility information. For example, the device compatibility service  gathers device compatibility information from a variety of sources for storage in a device database . This information includes specifications and features (e.g., processing capabilities, input methods, display size, memory size, network connections, etc.) for any number of communication devices. The device compatibility service  can then use the stored information to respond to device compatibility requests. This information, for instance, can inform the service provider of what types of services and\/or what format of the services can be supported on a given device.","The export control interface  gathers and stores information about constraints or restrictions on using particular services or devices based on agreements, laws, geographical locations, manufacturers' restrictions, etc. For example, national laws may prevent the use of certain types of services in particular countries. In another example, a music service provider may only have rights to distribute music files in certain countries. Accordingly, the export control interface  records such restrictions and provides any applicable restrictions in response to device compatibility requests. In this way, the export control interface  can supplement the physical compatibility information provided by the device compatibility service  with compatibility information (e.g., regional restrictions, etc.) based on agreements.","As shown in , the UE  may have either direct connectivity to the service platform  or indirect connectivity via the link redirector . Similarly, the device compatibility service client process  may have either direct connectivity to the device compatibility service  and the export control interface  or indirect connectivity via the link redirector . In one embodiment, the link redirector  acts as a proxy service by receiving connection requests and directing the service requests to the appropriate network component. More specifically, the link redirector  can determine which network component should receive a particular service request based on various criteria such as network load, proximity of service providers, number of users, etc. In the example of , the link redirector  can receive service requests from the UE  and direct those service requests to the corresponding service platform . For example, if one particular service platform  is overloaded with service requests, the link redirector  may redirect any subsequent service requests to another service platform  that is providing the requested service. In this way, the link redirector  can perform load balancing to more evenly distribute network traffic among a group of service platforms . By way of example, the link redirector  may either forward the service request directly to the determined service platform  or return an address (e.g., Internet Protocol address) of the determined service platform  to the requesting UE .","In the illustrated embodiment, multiple data sources , , (collectively referenced hereinafter as data sources ) for device manufacturers are also connected to network . These data sources  represent any process executing on a node of network  that presents information about communication devices and their characteristics. For example, in some embodiments, one or more of data sources  is a web page provided by a web server process on a node of network . For example, the device compatibility service  and the export control interface  can gather device compatibility information from the data sources .","As described above, the device compatibility service client process  communicates with the device compatibility service  and the export control interface  to obtain responses to queries about device characteristics about one or more communication devices, such as the UE . In the illustrated embodiment, device compatibility service client process  is included in a service process  that communicates with client process  on the UE . In this arrangement, a user of the UE  can request information about device compatibility from service platform , which uses the device compatibility service client  to obtain that information from the device compatibility service  and the export control interface . Also in this arrangement, a user of the UE  can request service from service platform , which uses the device compatibility service client  to obtain information about the capabilities of UE  from the device compatibility service  and the export control interface , and adapts its response to the client  based on the capabilities of UE  obtained from the device compatibility service  and the export control interface .","By way of example, the communication network  of system  includes one or more networks such as a data network (not shown), a wireless network (not shown), a telephony network (not shown), or any combination thereof. It is contemplated that the data network may be any local area network (LAN), metropolitan area network (MAN), wide area network (WAN), the Internet, or any other suitable packet-switched network, such as a commercially owned, proprietary packet-switched network, e.g., a proprietary cable or fiber-optic network. In addition, the wireless network may be, for example, a cellular network and may employ various technologies including enhanced data rates for global evolution (EDGE), general packet radio service (GPRS), global system for mobile communications (GSM), Internet protocol multimedia subsystem (IMS), universal mobile telecommunications system (UMTS), etc., as well as any other suitable wireless medium, e.g., microwave access (WiMAX), Long Term Evolution (LTE) networks, code division multiple access (CDMA), wideband code division multiple access (WCDMA), wireless fidelity (WiFi), satellite, mobile ad-hoc network (MANET), and the like.","The UE  and the hosts (not shown) for service process  and device compatibility service  are any type of mobile terminal, fixed terminal, or portable terminal including a mobile handset, station, unit, device, multimedia tablet, Internet node, communicator, desktop computer, laptop computer, Personal Digital Assistants (PDAs), or any combination thereof. It is also contemplated that the UE  can support any type of interface to the user (such as \u201cwearable\u201d circuitry, etc.). In the illustrated embodiment, UE  is a mobile communication device connected to network  through wireless link .","Moreover, the service platform , device compatibility service , export control interface , link redirector , data sources , and UE , including the client  and device compatibility service client , communicate with each other and other components of the communication network  using well known, new or still developing protocols. In this context, a protocol includes a set of rules defining how the network nodes within the communication network  interact with each other based on information sent over the communication links. The protocols are effective at different layers of operation within each node, from generating and receiving physical signals of various types, to selecting a link for transferring those signals, to the format of information indicated by those signals, to identifying which software application executing on a computer system sends or receives the information. The conceptually different layers of protocols for exchanging information over a network are described in the Open Systems Interconnection (OSI) Reference Model.","Communications between the network nodes are typically effected by exchanging discrete packets of data. Each packet typically comprises (1) header information associated with a particular protocol, and (2) payload information that follows the header information and contains information that may be processed independently of that particular protocol. In some protocols, the packet includes (3) trailer information following the payload and indicating the end of the payload information. The header includes information such as the source of the packet, its destination, the length of the payload, and other properties used by the protocol. Often, the data in the payload for the particular protocol includes a header and payload for a different protocol associated with a different, higher layer of the OSI Reference Model. The header for a particular protocol typically indicates a type for the next protocol contained in its payload. The higher layer protocol is said to be encapsulated in the lower layer protocol. The headers included in a packet traversing multiple heterogeneous networks, such as the Internet, typically include a physical (layer 1) header, a data-link (layer 2) header, an internetwork (layer 3) header and a transport (layer 4) header, and various application headers (layer 5, layer 6 and layer 7) as defined by the OSI Reference Model.","Although a particular set of nodes, processes, and data structures, such as databases, are shown in  for purposes of illustration, in various other embodiments more or fewer nodes, processes and data structures are involved. Furthermore, although processes and data structures are depicted as particular blocks in a particular arrangement for purposes of illustration, in other embodiments each process or data structure or portions thereof, may be separated or combined or arranged in some other fashion. For example, in some embodiments, the device compatibility service client  is outside of service platform , or the service platform  and client  are omitted. As a further example, in some embodiments, the functions of device compatibility service client  are provided by a Web browser interacting with a web page server included in device compatibility service  and\/or the export control interface .",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 2","b":["107","135","121","135","135","121","135","103","107"]},"In one embodiment, the link redirector  receives information, for example from the user\/agent field of a service request, that contains information about the client  (e.g., information about the device executing the client ). On receipt of the service request, the link redirector  can search for a suitable service provider (server) managed by service platform  and then forward the service request to the determined service platform  to be sent to the provider. In the approach described herein, the link redirector  can also use the information (e.g., device characteristics information) included in the service request to alert the device compatibility service  and export control interface  about a potential device compatibility request arising from the received service request. For example, the link redirector  will have notice that the UE  is requesting a service from the service provider platform  because the link redirector  has received and redirected this service request from the UE . Furthermore, because the link director  is acting as a proxy, the link redirector  receives this notice before the service platform  receives the service request. Consequently, the link redirector  is in a position to alert the device compatibility platforms (e.g., the device compatibility service  and the export control interface ) of the potential device compatibility request from the service platform  as the link redirector is forwarding the service request to the service platform . In this way, the device compatibility platforms will already be alerted of the device compatibility requests before the service platform  has time to receive the service request from the link redirector  and to generate a device compatibility request to the device compatibility platforms.","In one embodiment, these alerts can include identification of requesting device and the service requested to inform the device compatibility service  and the export control interface  of the service request from user client . Upon receiving the alerts, the device compatibility service  and the export control interface  can each start preparing for a response. For example, the device compatibility service  can search the network for information on whether the requested service is compatible with the capabilities of the user equipment  or what solutions are available for the compatibility to be achieved. The export control interface  can, for example, investigate service availability in the geographical location of the user equipment .","The service platform  receives the forwarded service request from the link redirector . In many cases, the service platform  responds to the forwarded service request by generating a device compatibility request to, for instance, the device compatibility service  and the export interface . For example, the service request can retrieve device compatibility information that will enable the service platform  to tailor its service to the requesting device. The service platform  then accesses an export control interface , if applicable, to determine whether the service being requested, e.g. content download, is permitted from the service platform  to the client , given the client's user or geographic location. The export control interface  has already been alerted about this export information request by the link director  and has started preparing a response. By the time the export control interface  receives the device compatibility request from the service platform , the export control interface  may have already prepared the response and, therefore, can send the response to service platform  immediately. Similarly, the service platform  can also determine how to provide service tailored to the UE  by contacting the device compatibility service . Since the device compatibility service  has also received the alert from link director , the device compatibility service  can already have the response to the device compatibility request at least partly ready and, therefore, can provide the service platform  with the response immediately or with a shorter delay. In this way, the approach described herein advantageously reduces the delay associated with responding to the device compatibility request.","Generally, the process of determining device compatibility can be significantly time consuming because of factors such as network delays and client processing power available for performing device compatibility queries. The device compatibility service  and export control interface  are more than likely running on more powerful hardware with faster network connections. For the most part, it might even be typical that these modules along with the link redirector  are installed on the same machine\/cluster. Taking advantage of this locality, the information contained in the service request to the link redirector  can be passed to these modules through alerts such that they can start preloading and caching information pertinent to the request.","Furthermore, the link redirector  can generate a session key that is returned to the client  and is also passed to the device compatibility service  and export control interface . This session key can be used to more quickly and easily associate alerts with their corresponding service requests and device compatibility requests so that when the service platform  contacts these device compatibility modules its service request can received expedited treatment.","The advantage of this approach is that the device compatibility service  and the export control interface  will have the necessary information about the client  and its capabilities already in cache or memory and ready for processing. In addition, analysis of such information can reveal trends about the kinds of interfaces and capabilities that are being used by clients over time. This trend information can then inform the service platform  about what device compatibility information should be cached for future use.","Thus, as depicted in , in network communications indicated by arrows  through , the following actions take place. Per step , client  connects to the link redirector , identifies itself and requests to be redirected to a service such as video stream or music download, software script download, etc. In step A, the link redirector  forwards the service request to the service platform  to be processed. A service request includes information used by the service platform  for processing, for example, user equipment specification, model, built-in sensors, memory size, information about the requested service, etc.","In one embodiment, the link redirector  can pre-process the service request, find a suitable service provider, and forward the service request together with the identification of the provider to the service platform  so that the platform  can forward the service request to the provider. In other embodiments, the link redirector  may send the service request to the service platform  and the search for a suitable provider can be performed at the service platform . Per step B the link redirector  sends the service request including client  identification and requested service to the device compatibility service . Upon receiving the information, the device compatibility service  can start investigating the compatibility features of the client  with device requirements of the requested service. For example if a requested service only runs on equipment with a certain processor speed or needs a certain amount of available memory to run properly, the device compatibility service  investigates whether the requesting client  the requirements. In step C the link redirector  sends the service request including client  identification and requested service to the export control interface . Upon receiving the information, the export control interface  can start investigating the features of the client  with export requirements of the requested service. For example, if a requested service has a copyright restriction for some locations, the export control interface  investigates whether the requesting client  is located in a proper zone where access to the requested service is allowed.","Steps A, B and C can be performed concurrently or in any sequence. In step , client  connects to the service platform  front-end and requests the service. Upon receiving the service request the service platform  sends client  identification (e.g. IP address) to the export control interface  per step , and the export control interface  responds with the results of the investigation (e.g., copyright information). Based on these results the service platform  will make an export control decision. In step , the service platform  sends client  identification (e.g. IP address) to the device compatibility service , which responds with the results of the investigation (e.g., the client  device has proper memory size for requested service, etc.). The device compatibility service  uses information in a device database , or detected by a detect process , or provided by a forum process  of the subscription service, if any, to provide a response to the service platform . The device database  includes information such as the history of device usage, past compatibility issues, device manuals provided by manufacturer, etc. The detect process  is an automated process for detecting device specifications and compatibility through methods such as testing. A forum process  uses the information exchanged among device users during conversations in various online forums and extracts device compatibility information from collected information. The service platform  then provides a response to the UE client  based on the capabilities of the UE  device that is hosting the client . Based on these results the service platform  will provide the suitable service to the client  or alerts the client of incompatibility with the service.","In addition or alternatively, the alerts provided to the device compatibility service  and\/or the export control interface  may be shared using a shared information space without direct communications between the link redirector  and either the device compatibility service  or the export control interface . In the system described in , information is explicitly passed between the modules. The system can be modified to pass or share all information into a common information space such that any of the modules can obtain information from the space as and when necessary. This approach would provide two-way implicit communication between any two modules in the system through a shared medium such as the information space.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 3","b":["107","135"]},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 4","b":["400","401","401","403","405","311","409","411"]},"By way of example, knowledge processor  generally runs on a single device, but may also be distributed across multiple devices. Such a device may be a mobile device\/phone, personal computer, active sensor, Radio Frequency Identification (RFID) tag, etc. User interface  is an optional component that exists in many smaller dashboard type of applications (e.g., NOKIA Widsets, OSX dashboard, etc.) to provide for interaction with and control of the contents of information spaces .","The connectivity component of the knowledge processor  (not shown) contains the logic and functionality to communicate to various information spaces . Connectivity is over some network protocol to a semantic information broker (SIB) . A semantic information broker  contains the logic for parsing messages and pointers to subscription handlers between the knowledge processor  and the information space . A knowledge processor  may potentially connect to more than one information spaces at a time thus distributing and synchronizing the operations across all connected information spaces.","The basic functionality provided by the connectivity protocols at this level for manipulating information and for connection to an information space  is given in Table 1 below:",{"@attributes":{"id":"p-0064","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Insert: insert information in information space 311 (as an RDF graph) "},{"entry":"atomically (e.g., at the level of the smallest information element of the "},{"entry":"information space 311),"},{"entry":"Retract: remove information from information space 311 (as an RDF "},{"entry":"graph) atomically,"},{"entry":"Update: update information on information space 311 (as an RDF graph) "},{"entry":"atomically - often implemented as a retract and insert through the "},{"entry":"transaction system,"},{"entry":"Query: synchronously (blocking) query; retrieve information from "},{"entry":"information space 311,"},{"entry":"Subscribe: asynchronously (persistent, non-blocking) set up a subscription "},{"entry":"to the information space 311 for a given query,"},{"entry":"Unsubscribe: terminate a given subscription to information space 311,"},{"entry":"Join: request initiation of an interaction session between a knowledge "},{"entry":"processor 401 and a given information space 311,"},{"entry":"Leave: terminate the current interaction sessions between a knowledge "},{"entry":"processor 401 and the information space 311."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The information space  is \u201cvirtual\u201d in nature in the sense that its existence is provided by the underlying semantic information brokers , which are elements that \u201cphysically\u201d exist. Within the scope of an information space , capabilities for local reasoning over the information contained in that information space are provided through a deductive closure calculation mechanism (not shown). The mechanisms for managing connections and operations of knowledge processors  and for distributing the information around information spaces  can be implemented by more than one SIB  distributed over different processing elements.","The interaction among knowledge processors  and information spaces  is accomplished by network connections to one or more SIBs  providing or representing the information space. As far as the user or designer of a knowledge processor  is concerned, there are knowledge processors  and information spaces ; and the connectivity layer abstracts away the physical connection to a SIB .","When implemented internally within an information space , knowledge processors can be known as reasoners  and can operate based on a particular scheduling. These reasoners  have the same rights as other knowledge processes  with the additional constraints of restricted membership. The reasoners  do not have the ability to subscribe for information, however, they are given access to the information that they need to process. The reasoners  also receive guaranteed execution quanta, unlike \u2018external\u2019 knowledge processors  which are at the mercy of network and processor latencies, etc.","In one embodiment, the reasoners (internal knowledge processors)  are used for truth maintenance, belief revision, information consistency management, information creation or any other atomic processing required by that information space . They are used for the more expansive reasoning about information and more dynamic customization of the properties of a given information space than the rewrite engine based deductive closure mechanism.","The underlying network protocol typically used by system  is Transmission Control Protocol\/Internet Protocol (TCP\/IP), although messaging may be made over any suitable protocol and medium such as Simple Object Access Protocol (SOAP), Bluetooth, etc.","The information space  has semantic information brokers (SIBs)  equipped with the required \u201clisteners\u201d (components which provide access via any given specified transport protocol) for the given network connectivity protocols. The SIBs  can be provided as a service in service oriented architecture (SOA) domains.","The information spaces  can be represented using Semantic Web standards such as Resource Description Framework (RDF), RDF Schema (RDFS), OWL (Web Ontology Language), FOAF (Friend of a Friend ontology), rule sets in RuleML (Rule Markup Language), etc. For example, RDF is a family of World Wide Web Consortium (W3C) specifications originally designed as a metadata data model. RDF has come to be used as a general method for conceptual description or modeling of information that is implemented in web resources; using a variety of syntax formats. The underlying structure of any expression in RDF is a collection of triples, each includes three disjoint sets of nodes including a subject, a predicate and an object. A subject is an RDF Uniform Resource Identifier (URI) reference (U) or a Blank Node (B), a predicate is an RDF URI reference (U), and an object is an RDF URI reference (U), a literal (L) or a Blank Node (B). A set of such triples is called an RDF graph. Table 2 shows sample RDF triples.",{"@attributes":{"id":"p-0072","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Subject","Predicate","Object"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["uri:\/\/......\/rule#CD-introduction,","rdf:type,","uri:\/\/............\/Rule"]},{"entry":["uri:\/\/......\/rule#CD-introduction,","uri:\/\/......\/rule#assumption,","\u201cc\u201d"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Referring back to , the information space  can have a subscription mechanism  that provides information security by allowing access to the information only to the subscribed entities (modules, devices, etc.). The link redirector , the device compatibility service  and the export control interface  are subscribed to the information space  via subscription mechanism .","In one embodiment, the link redirector  receives information, for example, from the user\/agent field of a service request that contains information about the client  (e.g., information about the device executing the client ). On receipt of the service request, the link redirector  can search for a suitable service provider (server) managed by service platform  and then forward the service request to the service platform  to be sent to the provider (not shown). In the approach described herein, the link redirector  can store the information (e.g., device characteristics information) included in the service request in a information space  which is shared between link redirector , device compatibility service  and export control interface . For example, the link redirector  will have notice that the UE  is requesting a service from the service platform  because the link redirector  has received and redirected this service request from the UE . Furthermore, because the link redirector  is acting as a proxy, the link redirector  receives this notice before the service platform  receives the service request. Consequently, the link redirector  is in a position to store information about the potential device compatibility request from the service platform  in information space  as the link redirector is forwarding the service request to the service platform .","The link redirector  uses a knowledge processor  that may be internal to the link redirector  or externally connected to the link redirector , to insert information of service request from client  into the information space  as per step B of . For the knowledge processor  to be able to insert information into the information space , it first joins the information space . By way of example, the knowledge processor  sends a join request to the information space  via a connectivity component (not shown). Upon receiving the request, the semantic information broker  passes the request to the subscription mechanism  for verification of the knowledge processor 's authority to join the information space . If the join is approved, the knowledge processor  then inserts the information about the service request in the information space . Otherwise, if join is rejected, a warning is issued and communication between the knowledge processor  and the information space  is terminated. This process protects the contents of information space .","The type of subscription of a module to an information space  determines the level of access authority for each subscriber and the sharing restrictions for groups of subscribers. Upon insertion of new information in the information space , the subscription mechanism  can generate signals and send the signals to the device compatibility service  and the export control interface  that are authorized for sharing the information inserted by the link redirector . The signals trigger preparation of responses for the device compatibility request or export control information request. Upon receiving the signals, the device compatibility service  and the export control interface  send queries to the information space  via knowledge processors  requesting information about the newly inserted service request from the link redirector . The information space  verifies the authority of the knowledge processors and if approved, sends query results to the device compatibility service  and the export control interface  via the knowledge processors . Otherwise a warning is issued and communication between the knowledge processors  and the information space  is terminated. In this way, the device compatibility service  and the export control interface  can start preparing responses to device compatibility requests and export control requests before the service platform  has time to receive the service request from the link redirector  and to generate a device compatibility request and an export control request to the device compatibility platforms.","In one embodiment, the signals sent from the information space  can include identification of requesting device and the service requested, to inform the device compatibility service  and the export control interface  of the service request from user client . In another embodiment, the signal may only alert device compatibility service  and the export control interface  of new information in information space  so that the device compatibility service  and the export control interface  can retrieve service request details directly from the information space  via queries as explained above.","Upon receiving the information, the device compatibility service  and the export control interface  can each start preparing for a response. For example, the device compatibility service  can search the network for information on whether the requested service is compatible with the capabilities of the user equipment  or what solutions are available for the compatibility to be achieved. The export control interface  can, for example, investigate service availability in the geographical location of the user equipment .","The service platform  receives the forwarded service request from the link redirector . In many cases, the service platform  responds to the forwarded service request by generating a device compatibility request to, for instance, the device compatibility service  and the export interface . For example, the service request can retrieve device compatibility information that will enable the service platform  to tailor its service to the requesting device. The service platform  then accesses an export control interface , if applicable, to determine whether the service being requested, e.g. content download, is permitted from the service platform  to the client , given the client's user or geographic location. The export control interface  has already been alerted about this service request by the information space  and has started preparing a response. By the time the export control interface  receives the device compatibility request from the service platform , the export control interface  may have already prepared the response and, therefore, can send the response to service platform  immediately. Similarly, the service platform  can also determine how to provide service tailored to the UE  by contacting the device compatibility service . Since the device compatibility service  has also received the alert from information space , the device compatibility service  can already have the response to the device compatibility request at least partly ready and therefore can provide the service platform  with the response immediately or with a shorter delay. In this way, the approach described herein advantageously reduces the delay associated with responding to the device compatibility request.","Thus, as depicted in , in network communications indicated by arrows  through , the following actions take place. Per step , client  connects to the link redirector , identifies itself and requests to be redirected to a service such as video stream or music download, software script download, etc. In step A the link redirector forwards the service request to the service platform  to be processed. A service request includes information needed by the service platform  for processing, for example, user equipment specification, model, built, memory size, and information about requested service.","In one embodiment, the link redirector  can pre-process the service request, find a suitable service provider and forward the service request together with the identification of the provider to the service platform so that the platform can send the service request to that provider. In other embodiments, the link redirector may send the service request to the service platform and the search for a suitable provider can be performed at the service platform . Per step B, the link redirector  stores the service request including client  identification and requested service in an information space. In step C, the information space  sends an alert informing the device compatibility service of a potential device compatibility request. Upon receiving the information, the device compatibility service  can start investigating the compatibility features of the client  with device requirements of the requested service. For example if a requested service only runs on equipments with a certain processor speed or needs a certain amount of available memory to run properly, the device compatibility service  investigates whether the requesting client  has the requirements. In step D the information space  sends an alert informing the export control interface  of a potential export control request. Upon receiving the information, the export control interface  can start investigating the features of the client  with export requirements of the requested service. For example if a requested service has a copyright restriction for some locations, the export control interface  investigates whether the requesting client  is located in a proper zone where access to the requested service is allowed.","Each pair of steps A and B and also C and D can be performed concurrently. In step , client  connects to the service platform  front-end and requests the service. Upon receiving the service request the service platform  sends client  identification (e.g. IP address) to the export control interface  per step , and the export control interface  responds with the results of the investigation (e.g. copyright information). Based on these results the service platform will make an export control decision. In step  the service platform  sends client  identification (e.g. IP address) to the device compatibility service , which responds with the results of the investigation (e.g. the client  device has proper memory size for requested service, etc.). The device compatibility service  uses information in a device database , or detected by a detect , or provided by a forum process  of the subscription service, if any, to provide a response to the service platform . The service platform then provides a response to the UE client  based on the capabilities of the UE device hosting client . Based on these results the service platform will provide the suitable service to the client  or alerts the client  of incompatibility with the service.","The embodiment discussed in  has the advantage that a history of information can be built-up in a declarative manner while also exposing that information to further processing by additional agents (not shown here) and also a natural two-way implicit communication between each of the modules (e.g., device compatibility service  and export control interface ) and devices (e.g., UE ) using the implicit information sharing paradigm.","Communication among platforms in  and  can be conducted using various types of interfaces such as Representational State Transfer (REST) API, Simple Object Access Protocol (SOAP) API, etc.",{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 5A","b":["501","135","107","503","135","121","107","135","121"]},"In step , the link redirector  sends an alert to the device compatibility service  including the service requesting device identification and the service requested. In certain embodiments, the step  may be performed in parallel with step . This alert triggers the device compatibility service  to start preparing compatibility information corresponding to the service requesting device and pertinent to the service requested. In step , the link redirector  sends a similar alert to the export control interface . In certain embodiments, the step  may be performed concurrently with the steps  and . In addition to the service requesting device identification and the requested service, the alerts to the device compatibility service  and the export control interface  may include other information such as the current location of the service requesting device which can be used by the export control interface  for investigating the availability of the requested service in that geographic location or any restrictions that might apply.","In step , the link redirector  forwards the service request to the service platform  determined at step . The forwarding can be either by returning an IP address associated with the service platform  that is providing the service or by relaying the service request which includes client's identification information directly to the service platform .","It is noted that the fact that steps  and  can be performed in parallel with steps  and  means that the alerts can be sent at the same time as service determination, so that the device compatibility service  and the export control interface  can start preparing a response before they receive a device compatibility request or an export control request from a service platform and once they receive the requests, their response can be partially or completely ready.",{"@attributes":{"id":"p-0089","num":"0088"},"figref":["FIG. 5B","FIG. 5B"],"b":["131","137","521","135","523","131","137","525","131","137","121","131","137"]},"When a device compatibility request is received from the service platform, in step , the module determines whether a response to either a potential or actual device compatibility request is ready (e.g., complete) for transmission to the requesting service platform . If the response is ready, the module initiates sending of the response to the service platform  as per step . If the module has not completed preparing its response to a potential device compatibility request before receiving the actual request, there may still be some delay in responding to the actual received request as the module completes its response. However, the delay, if any, will be minimized because the module has already started preparing based on the alert the module received from the link redirector . Furthermore, since device compatibility service  and export control interface  are more than likely running on more powerful hardware with faster network connections, with a high probability by the time the request is received the response can be ready.","In one embodiment, the module can perform the steps , , and  concurrently to further reduce delay and improve response time. As a result, by the time the request is received all or part of the response can be prepared.",{"@attributes":{"id":"p-0092","num":"0091"},"figref":"FIG. 6A","b":["601","135","107","503","121","107"]},"In step , the link redirector stores the service request including the requesting device identification, the service requested, the current location of the requesting device, etc. in a shared information space so that the device compatibility service  and the export control interface  can access the information from the information space. In step , that can be executed concurrently with step , the link redirector forwards the service request to the determined service platform . The redirection can be either by returning an IP address associated with the client  or by relaying the service request which includes client's identification information directly to the service platform .","It is noted that the fact that step  can be performed concurrently with steps  and  means that the service request information can be shared at the same time as service determination and service request redirection, so that the device compatibility service and the export control interface can start preparing a response by accessing shared information before they receive a request.","As explained in the description of , in one embodiment, the information space can be programmed to send signals to subscribed systems such as device compatibility service  and export control interface , informing them about changes in the content and the new service requests received.","Furthermore, existence of a shared information space enables any two subscribed modules to engage in two-way communications through the shared information space, if allowed by their subscription and their predefined level of authority. The two-way communication enables the modules to exchange information regarding request status, response contents and status, the shared information space updates, etc. For example, the device compatibility service  and the export control interface  may be required to alert each other about the completion level of the response preparation. For instance when the process of response preparation by the device compatibility service  is completed, the device compatibility service can send a message through a knowledge processor  to the information space  stating that the response to the compatibility service is ready. This message can be inserted to the information space  by knowledge processor . Additionally, if the export control interfaces  needs information on whether the response providing process by the device compatibility process  is complete, the export control interface  can contact the information space  through a knowledge processor  and make a query regarding the completion of device compatibility process. The query result will be extracted from the information content of the information space  by internal operations such as \u201cprojection\u201d which extract information from an information system while the content of the information system remains intact. The query result is then returned to the export control interface  through the knowledge processor . In this way a two-way communication between a device compatibility service  and an export control interface  can be performed via the information space  and the access authority regulations for various system components can be centralized within the scope of the information space  rather than being distributed among the modules and therefore the regulations can be applied in a more consistent manner.",{"@attributes":{"id":"p-0097","num":"0096"},"figref":["FIG. 6B","FIG. 6B"],"b":["131","137","621","623","311","135","311"]},"In step  the module (device compatibility service or export control interface) starts preparing response to the potential request and stores the prepared information in a memory location such as a cache while as per step  the module is expecting to receive the compatibility request from service platform . According to one embodiment, step  that can be executed concurrently with step , and the device compatibility service  or the export control interface  checks the process of response preparation.","When a device compatibility request or an export control request is received from the service platform, in step , the module determines whether a response to either a potential or actual device compatibility request is ready (e.g., complete) for transmission to the requesting service platform . If the response is ready, the module initiates sending of the response to the service platform  as per step . If the module has not completed preparing its response to a potential request before receiving the actual request, there may still be some delay in responding to the actual received request as the module completes its response. However, the delay, if any, will be minimized because the module has already started preparing based on the alert the module received from the information space . Furthermore, since the device compatibility service  and export control interface  are more than likely running on more powerful hardware with faster network connections, with a high probability by the time the request is received the response can be ready.","In one embodiment, the module can perform the steps , , and  concurrently to further reduce delay and improve response time. As a result, by the time the request is received all or part of the response can be prepared.",{"@attributes":{"id":"p-0101","num":"0100"},"figref":"FIG. 7","b":["311","409","703","313","705","401","707","709","409","711","713","711","709"]},"The rules stored in a SIB's lowest layer RDF store  are usually those which are static in nature, for example RDF rule for transitivity of the sub-class relationship can be represented as following:\n\n","According to certain embodiments, within this framework, these rules may be dynamically changed as the system is running. Moreover, more specific rules may be added depending on the currently stored information or for some ontology to specialize the behavior of the information space as a whole. Subsequent additions to the deductive closure mechanism  can take into consideration non-monotonic logics and specifically default logic. The rule set for deductive closure is maintained across all SIBs  when more than one SIB is representing an information space, thus consistency between the SIBs is preserved when queries are made.","The transaction layer  contains the mechanisms for inserting, retracting and querying information as well as pre-processing the transactions. The subscription mechanism is part of the transaction layer as well. This process effectively calls the query mechanism to check for updated information. Subscriptions fire when there is a difference in query result from the previous firing of a subscription.","The transaction layer  is managed by a scheduling component  which orders the components within this layer according to the following schedule: (1) insertions and retractions; (2) any internal components; and (3) queries and subscriptions. This provides both a mechanism for internal customization of the SIB  through internal knowledge processors and a \u2018sand-boxed\u2019 execution environment as a mechanism for governing network latencies both between knowledge processors  and the SIB  and between individual SIBs when more than one SIB is representing the information space.","The top-most layer the connectivity layer  contains the connectivity components which process the incoming and outgoing requests to and from knowledge processors  specifically implementing the information space protocol. Within this layer are found \u2018listeners\u2019 which support the information space application protocol on various transport protocols such as Transmission Control Protocol\/Internet Protocol (TCP\/IP), HTTP (S), NoTA, Universal Plug and Play (UpNP) and connectivity media such as Ethernet, WLAN, Bluetooth, etc.","NoTA is an open architecture initiative developed with the primary goal to agree on a unified way to integrate, communicate and define module interfaces in embedded devices. This enables different developers to independently innovate, develop, optimize and verify modules that are interoperable. The model resembles the logic behind Internet protocols. A set of common communication protocols and certain rules on how nodes can utilize these protocols are defined. The result is a platform that fosters new independent innovations and provides a basis where innovations can grow and evolve. More details on NoTA initiative can be found on http:\/\/www.notaworld.org.","UPnP forum is an industry initiative of leading companies in computing, printing and networking, consumer electronics, home appliances, automation, control and security, and mobile products. The Forum's goals are to allow devices to connect seamlessly and to simplify network implementation in the home and corporate environments. Toward this end, UPnP forum members work together to define and publish UPnP device control protocols built upon open, Internet-based communication standards. The UPnP architecture offers pervasive peer-to-peer network connectivity of PCs of all form factors, intelligent appliances, and wireless devices. The UPnP architecture is a distributed, open networking architecture that leverages TCP\/IP and the World Wide Web to enable seamless proximity networking in addition to control and data transfer among networked devices in the home, office, and everywhere in between.","Additionally within the auspices of the connectivity component is the management and authentication of knowledge processors  in terms of their rights to utilize and share information within the information space . Knowledge processors  either joins or is invited by the information space , and then pass credentials such that the information space can evaluate their suitability. Information spaces  additionally reserve the rights to revoke any knowledge processor's membership to an information space at any time.","The credentials employed may include information about the knowledge processor 's identity, security keys and even physical location (obtained through some positioning mechanism such as GPS) thus allowing the information space  to take on real-world physical bounds.","The function of information distribution module  is explained hereafter. An information space  is a logical construct, and is represented by one or more SIBs  which internally synchronize their respectively stored information between them. The SIBs  forming an information space  have two key properties: first, connections between SIBs  form a totally routable network, and second, regardless of the SIB  that a knowledge processor  uses to connect to the information space , the full set of information is always available to any connected knowledge processor . These properties mean that the union of the information in the SIBs  accessible over the reflexive transitive closure over the routing graph is the same regardless of the SIB  representing the information space . IF S is the set of SIBs  in a given information space  and I(s) is the information stored in a given SIB , then the information available in the information space  (I SPACE) is the union of informations from each SIB :",{"@attributes":{"id":"p-0112","num":"0112"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mi":["I","SPACE"]},"mo":"=","mrow":{"munder":{"mo":"\u22c3","mrow":{"mi":["s","S"],"mo":"\u2208"}},"mo":"\u2062","mrow":{"mi":"I","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"s"}}}}}},"br":[{},{}],"b":"409","in-line-formulae":[{},{}],"i":["s\u2208S|I","=i","r","s"],"sub":"SPACE","sup":"+"},"The information contained within each individual SIB  is generally overlapping. This can be exploited to provide a significant amount of information redundancy and fault tolerance. SIBs  connected in such a totally routable network can exchange routing information to assist in preserving the connectivity under failure or faulty conditions. Inserts, retracts (also updates) and queries are distributed over all the SIBs  representing the given information space  depending on whatever policies about synchronization of information between the individual SIBs  are in place.","There are several reasons for making the synchronization asymmetric as is implied above. Some of these reasons include: availability of computing resources, particularly storage; bandwidth of network connections available; security and privacy considerations; stability of the SIB  in terms of computing resources available; and legal issues.","In the case of queries, each SIB  returns back as much information pertaining to the query as possible. This information is aggregated and a deductive closure calculation is made over the returned set of information. The invariant over this is that the result of a query under distributed conditions will be the same as a query when all the information is present in a single SIB .","The deductive closure calculator  can be optimized by computing the closure on the most suitable SIB  and then further returning the query to the original requester from there. Suitability depends upon local processing power, memory availability and other resources as necessary. Further optimization can be made in the case of orthogonal components of a query which can be distributed over the SIBs  in their own right.",{"@attributes":{"id":"p-0117","num":"0117"},"figref":["FIG. 8","FIG. 8"],"b":["311","311","401","401","401","401","401","801","401","401","401","401","401","401"],"i":["a ","b ","a","j","e ","f ","c","d ","e ","e","g ","i "]},"Additionally the semantic information brokers -are distributed over a number of different devices. For example, is on device and and are on device . However as seen in  each set of SIBs represent one information space at a time. For example, SIBs -and represent information space while SIBs -represent information space . Some devices can run more than one SIB representing different information spaces concurrently. For example device runs SIB which represents information space and at the same time runs the SIB that represents information space ","The system can be implemented on various platforms including mobile devices, personal computers, etc. The main requirement of such implementation platforms is that the devices support the runtime environments and that enough processing power and storage is available. Given that knowledge processors -can be distributed over devices with more processing power and\/or storage as necessary, usually smaller hand-held devices are adequate for running these knowledge processors.","In one embodiment, the SIB  runs on systems supporting the Python runtime environment and additionally versions for C++ specifically exist for Linux\/Unix and Open-C for Symbian operating system, the most widely used open operating system for mobile phones. Client libraries for knowledge processors  exist in Python, C, C++(Linux\/Unix and Symbian) as well as Java. Other environments based on Web services and Javascript can also be used.","In another embodiment, the system implementations run on Mobile Devices (including: N800\/810, N95) and personal computers (Unix, Linux, Windows). The knowledge processors  can run on sensors, etc. Communication is made over TCP\/IP and HTTP protocols which can be used over Ethernet, GPRS and 3G transports.","Within an information space  and thus within the individual information stores in each SIB  that makes up that information space , information is represented as a graph and conforms to the rules of the Resource Description Framework (RDF). This graph can be stored using Wilbur RDF store.","The basic operations on an information store are insertion of a graph, retraction (deletion) of a graph, querying and subscription for information. Insertion and retractions may be combined into a single transactional structure in order to admit atomic updates through the atomic application of retract and insert. Both insertion and retraction can be based on the simplest semantics as follows:\n\n\u0393,insert(\u03c6)\u2192\u03c6\u2208\u0393\n\n\u0393,retract(\u03c6)\u2192\u03c6\u2209\u0393\n","All other forms of operations are constructions and refinements of the above. For example, update is constructed out of a set of retracts and inserts.","Further rewrite rules can simplify the recurrent application of operations. For example:\n\n\u0393,insert(\u03c6),insert(\u03c6), . . . , insert(\u03c6)\u0393,insert(\u03c6)\u2003\u2003(1)\n\n\u0393,retract(\u03c6),retract(\u03c6), . . . , retract(\u03c6),\u0393,retract(\u03c6)\u2003\u2003(2)\n\n\u0393,insert(\u03c6),retract(\u03c6)\u2192\u0393\u2003\u2003(3)\n","Rule (1) above shows that repeated insertion of a certain information into the information store is equivalent of inserting the information once. The same concept is true for the retraction as seen in rule (2). And rule (3) shows that insertion and retraction of an information would leave the information store unchanged. These rules can be modified based on trust and uncertainty conditions. Usually the rules are applied in specific orders in order to preserve as much of a transaction as possible.","In one embodiment, a query is evaluated based on the current snapshot of the information in the information space . Queries can be performed by Wilbur query language (WQL) or simple RDF triple pattern matching. WQL is a lisp-like path based query language. One important difference between WQL and RDF triple pattern matching is that Wilbur's static reasoning engine only runs with WQL queries. WQL queries return a set of RDF graph nodes, while the pattern queries return an RDF graph. Furthermore, other query languages such as SPARQL are also supported.","In another embodiment, subscriptions are implemented as persistent queries, that is, a given query is evaluated whenever the information in the information space  changes, and thus the same methods are available. The results are transmitted to the knowledge processor  only when they are changed. Depending on parameters, either the full results or a differential is transmitted.","According to the stated ontologies, no attempt is made by the information space  to enforce consistency or integrity of information. However, internal reasoning knowledge processors  may be present which can perform this activity if the information space  has been configured accordingly. Information is explicitly semi-structured and may take on any form that the knowledge processors  insert or retract.","Presence of typing constructs and namespaces does not necessarily mean that a knowledge processor  querying for that information will interpret the information according to the implied ontology. A namespace is an abstract container or environment created to hold a logical grouping of unique identifiers or symbols (e.g. names). The semantics of the information is interpreted by the reader, merely implied by the writer and grounded in the real world context of the knowledge processor . Therefore, any two given knowledge processors may disagree about the semantics. This concept is generally referred to as pragmatic or intentional semantics.","Apart from allowing atomic insertion and retraction of graphs of information and scheduling of the internal reasoners no transaction or other consistency policies are enforced in order to increase possibilities for system use and the expense of leaving the coordination problem to the user. With no atomicity and synchronization enforced, two methods of coordination namely external coordination and ontological coordination can be used.","In the case of external coordination, while knowledge processors  are anonymous inside the system, they are free to publish information about how they might be contacted externally. This is the technique used in constructing agent-based NoTA and UPnP systems. This however has the disadvantage of making the information space in some cases little more than a database of addresses and published functionality; although in the UPnP and NoTA cases the state of the system as a whole is stored and its manipulation is allowed. This solution is particularly useful when augmenting and complimenting legacy systems.","In the case of ontological coordination, all synchronization constructs need to be explicitly specified in an ontological way, that is making events, semaphore\/monitor structures into first-class elements that can be represented in RDF form. A simple example of this is provided through an event hierarchy ontology or by adding temporal constructs to an existing ontology.","The information space  provides further functionality regarding the joining and leaving of knowledge processors  and policy management. Knowledge processors  have a set of credentials which are passed during the \u201cjoin\u201d operation. The counterparts of the knowledge processor  instantiated \u201cleave\u201d and \u201cjoin\u201d operations are the information space  instantiated \u201cinvite\u201d and \u201cremove\u201d operations. These operations are not necessarily provided by every information space  nor understood by every knowledge processor .","These operations are used to provide a limited set of security related functionalities which at least guard the information at the level of granularity of an information space . These options do not protect from instances where one knowledge processor  might be connected to two or more information spaces  and physically copy information nor do they protect from information corruption and other operations on the information space . These kinds of finer leveled granularity of security are provided by other means and are not specifically addressed in the current architecture.","Connectivity is provided through a set of listeners which provide access via any given specified transport protocol. TCP\/IP is the most used transport, but a Bluetooth based listener or one that uses HTTP\/S have also been developed. Listeners can provide pre-processing of the incoming messages if necessary; for example with Bluetooth profiles. Any number of listeners may be provided at any time (at least one is necessary).","Furthermore and in some respects similar to that of the principles of information distribution, the connectivity of an information space can also be seen as a union of all listeners in all SIBs . However, not all listeners may be available on all physical locations (consider Bluetooth or TCP\/IP over WLAN for example).",{"@attributes":{"id":"p-0138","num":"0138"},"figref":["FIG. 9","FIG. 9","FIG. 9"],"b":["311","401","401","311","401","903","905","311","903","401","401","401","905","401","401","401","903","905","401"],"i":["p","s ","p","q ","r ","r ","s","r ","r. "]},"In order for an application to be used by human users, some kind of user interface is needed on at least some of the knowledge processors  of the application. The user interface paradigm for information space based applications is likely to differ from the traditional user interfaces, as it has to be much more modular and dynamic than traditional interfaces and particularly centered around the distributed nature of such knowledge processors.",{"@attributes":{"id":"p-0140","num":"0140"},"figref":["FIG. 10A","FIG. 10A"],"b":"311"},"The ontology of  indicates that a conversation  is made up of 4 components a keyword , at least one participant , a conversation name  and a message . Similarly a participant  will have a name component  and a message  has a time component  and a content .","At any point in time there are a number of instances of knowledge processors theoretically distributed amongst any number of devices. In this chat example each human user would need four knowledge processors, \u201ca message viewer\u201d, \u201ca message writer\/sender\u201d, \u201ca conversation list viewer\u201d and a \u201cknowledge processor to join and leave conversations\u201d. The actual distribution of functionality may vary depending on implementation.","Specifically the viewer knowledge processors would subscribe to particular parts of the information in the information space , for example in Wilbur Query Language (WQL) one might write the following query to obtain the list of current conversations:\n\n","This function would be called every time the set of results returned by the original subscription changes, for example when a knowledge processor  enters a new message into the given conversation.","A meaningful situation for this example occurs when there are more than one active participants, which entails that each participant has enough knowledge processors  in order to fulfill the scenario of having a conversation. This does not mean that each participant in this case would have four knowledge processors, one of each four types mentioned. It is possible, and desirable, that the user might have a number of each knowledge processors distributed amongst their devices to allow for example, viewing of messages to be made in many places. The possibility of not having any knowledge processors of some type is also permissible although this restricts the functionality perceived by that user of the system, situations such as when someone wishes to only view messages.","The fact that the messages persist in the information space  and are visible to all connected knowledge processors  allows easy extension of the system functionality. For example, a weather report gatherer knowledge processor  which inserts weather information into an information space  is considered.",{"@attributes":{"id":"p-0147","num":"0151"},"figref":["FIG. 10B","FIG. 10B","FIG. 10B"],"b":["1021","1023","1025","1027","1029","1031","1033","1035","1037"]},"A knowledge processor  can be added to the conversation system to monitor all or some existing conversations and look for place names in conversations. The new knowledge processor  will make similar subscription as the message viewer and scan the text of each message for known place names.","As mentioned before, communication among knowledge processors  is made indirectly through a shared set of information. Each knowledge processor  has a view of the \u201cworld\u201d based on a given semantic domain that is the set of concepts that the knowledge processor  can reason about. The semantic domain can be provided by some folksonomy or ontology. The knowledge processors also have access to a set of information conforming to that ontology. This is defined by the types of interactions with the information space knowledge processor  can make. The knowledge processors  provide the information with the intent that the information will be read with the same (or similar) semantics to which it was intended.","The knowledge processor  reading the information will only interact if the set of information that it has interested intersects with the set of information by the writing knowledge processor. Sensible communication only results if the semantic domains of the knowledge processors are aligned sufficiently and alignment of the semantic domains can be achieved through agreement by the parties defining the ontologies or folksonomies used. If a weather report for a certain place name is found, the knowledge processor links the relevant parts of the weather report for that place to the relevant conversation as messages.",{"@attributes":{"id":"p-0151","num":"0155"},"figref":["FIG. 11","FIG. 11"],"b":["1100","1100","1100","1100","1110","1100","1100"]},"A bus  includes one or more parallel conductors of information so that information is transferred quickly among devices coupled to the bus . One or more processors  for processing information are coupled with the bus .","A processor  performs a set of operations on information as specified by computer program code related to device attributes acquisition from multiple sources. The computer program code is a set of instructions or statements providing instructions for the operation of the processor and\/or the computer system to perform specified functions. The code, for example, may be written in a computer programming language that is compiled into a native instruction set of the processor. The code may also be written directly using the native instruction set (e.g., machine language). The set of operations include bringing information in from the bus  and placing information on the bus . The set of operations also typically include comparing two or more units of information, shifting positions of units of information, and combining two or more units of information, such as by addition or multiplication or logical operations like OR, exclusive OR (XOR), and AND. Each operation of the set of operations that can be performed by the processor is represented to the processor by information called instructions, such as an operation code of one or more digits. A sequence of operations to be executed by the processor , such as a sequence of operation codes, constitute processor instructions, also called computer system instructions or, simply, computer instructions. Processors may be implemented as mechanical, electrical, magnetic, optical, chemical or quantum components, among others, alone or in combination.","Computer system  also includes a memory  coupled to bus . The memory , such as a random access memory (RAM) or other dynamic storage device, stores information including processor instructions for device attributes acquisition from multiple sources. Dynamic memory allows information stored therein to be changed by the computer system . RAM allows a unit of information stored at a location called a memory address to be stored and retrieved independently of information at neighboring addresses. The memory  is also used by the processor  to store temporary values during execution of processor instructions. The computer system  also includes a read only memory (ROM)  or other static storage device coupled to the bus  for storing static information, including instructions, that is not changed by the computer system . Some memory is composed of volatile storage that loses the information stored thereon when power is lost. Also coupled to bus  is a non-volatile (persistent) storage device , such as a magnetic disk, optical disk or flash card, for storing information, including instructions, that persists even when the computer system  is turned off or otherwise loses power.","Information, including instructions for device attributes acquisition from multiple sources, is provided to the bus  for use by the processor from an external input device , such as a keyboard containing alphanumeric keys operated by a human user, or a sensor. A sensor detects conditions in its vicinity and transforms those detections into physical expression compatible with the measurable phenomenon used to represent information in computer system . Other external devices coupled to bus , used primarily for interacting with humans, include a display device , such as a cathode ray tube (CRT) or a liquid crystal display (LCD), or plasma screen or printer for presenting text or images, and a pointing device , such as a mouse or a trackball or cursor direction keys, or motion sensor, for controlling a position of a small cursor image presented on the display  and issuing commands associated with graphical elements presented on the display . In some embodiments, for example, in embodiments in which the computer system  performs all functions automatically without human input, one or more of external input device , display device  and pointing device  is omitted.","In the illustrated embodiment, special purpose hardware, such as an application specific integrated circuit (ASIC) , is coupled to bus . The special purpose hardware is configured to perform operations not performed by processor  quickly enough for special purposes. Examples of application specific ICs include graphics accelerator cards for generating images for display , cryptographic boards for encrypting and decrypting messages sent over a network, speech recognition, and interfaces to special external devices, such as robotic arms and medical scanning equipment that repeatedly perform some complex sequence of operations that are more efficiently implemented in hardware.","Computer system  also includes one or more instances of a communications interface  coupled to bus . Communication interface  provides a one-way or two-way communication coupling to a variety of external devices that operate with their own processors, such as printers, scanners and external disks. In general the coupling is with a network link  that is connected to a local network  to which a variety of external devices with their own processors are connected. For example, communication interface  may be a parallel port or a serial port or a universal serial bus (USB) port on a personal computer. In some embodiments, communications interface  is an integrated services digital network (ISDN) card or a digital subscriber line (DSL) card or a telephone modem that provides an information communication connection to a corresponding type of telephone line. In some embodiments, a communication interface  is a cable modem that converts signals on bus  into signals for a communication connection over a coaxial cable or into optical signals for a communication connection over a fiber optic cable. As another example, communications interface  may be a local area network (LAN) card to provide a data communication connection to a compatible LAN, such as Ethernet. Wireless links may also be implemented. For wireless links, the communications interface  sends or receives or both sends and receives electrical, acoustic or electromagnetic signals, including infrared and optical signals, that carry information streams, such as digital data. For example, in wireless handheld devices, such as mobile telephones like cell phones, the communications interface  includes a radio band electromagnetic transmitter and receiver called a radio transceiver. In certain embodiments, the communications interface  enables connection to the communication network  for providing device attributes acquisition from multiple sources to the UE .","The term computer-readable medium is used herein to refer to any medium that participates in providing information to processor , including instructions for execution. Such a medium may take many forms, including, but not limited to, non-volatile media, volatile media and transmission media. Non-volatile media include, for example, optical or magnetic disks, such as storage device . Volatile media include, for example, dynamic memory . Transmission media include, for example, coaxial cables, copper wire, fiber optic cables, and carrier waves that travel through space without wires or cables, such as acoustic waves and electromagnetic waves, including radio, optical and infrared waves. Signals include man-made transient variations in amplitude, frequency, phase, polarization or other physical properties transmitted through the transmission media. Common forms of computer-readable media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, any other magnetic medium, a CD-ROM, CDRW, DVD, any other optical medium, punch cards, paper tape, optical mark sheets, any other physical medium with patterns of holes or other optically recognizable indicia, a RAM, a PROM, an EPROM, a FLASH-EPROM, any other memory chip or cartridge, a carrier wave, or any other medium from which a computer can read. The term computer-readable storage medium is used herein to refer to any computer-readable medium except transmission media.","Logic encoded in one or more tangible media includes one or both of processor instructions on a computer-readable storage media and special purpose hardware, such as ASIC .","Network link  typically provides information communication using transmission media through one or more networks to other devices that use or process the information. For example, network link  may provide a connection through local network  to a host computer  or to equipment  operated by an Internet Service Provider (ISP). ISP equipment  in turn provides data communication services through the public, world-wide packet-switching communication network of networks now commonly referred to as the Internet .","A computer called a server host  connected to the Internet hosts a process that provides a service in response to information received over the Internet. For example, server host  hosts a process that provides information representing video data for presentation at display . It is contemplated that the components of system  can be deployed in various configurations within other computer systems, e.g., host  and server .","At least some embodiments of the invention are related to the use of computer system  for implementing some or all of the techniques described herein. According to one embodiment of the invention, those techniques are performed by computer system  in response to processor  executing one or more sequences of one or more processor instructions contained in memory . Such instructions, also called computer instructions, software and program code, may be read into memory  from another computer-readable medium such as storage device  or network link . Execution of the sequences of instructions contained in memory  causes processor  to perform one or more of the method steps described herein. In alternative embodiments, hardware, such as ASIC , may be used in place of or in combination with software to implement the invention. Thus, embodiments of the invention are not limited to any specific combination of hardware and software, unless otherwise explicitly stated herein.","The signals transmitted over network link  and other networks through communications interface , carry information to and from computer system . Computer system  can send and receive information, including program code, through the networks ,  among others, through network link  and communications interface . In an example using the Internet , a server host  transmits program code for a particular application, requested by a message sent from computer , through Internet , ISP equipment , local network  and communications interface . The received code may be executed by processor  as it is received, or may be stored in memory  or in storage device  or other non-volatile storage for later execution, or both. In this manner, computer system  may obtain application program code in the form of signals on a carrier wave.","Various forms of computer readable media may be involved in carrying one or more sequence of instructions or data or both to processor  for execution. For example, instructions and data may initially be carried on a magnetic disk of a remote computer such as host . The remote computer loads the instructions and data into its dynamic memory and sends the instructions and data over a telephone line using a modem. A modem local to the computer system  receives the instructions and data on a telephone line and uses an infra-red transmitter to convert the instructions and data to a signal on an infra-red carrier wave serving as the network link . An infrared detector serving as communications interface  receives the instructions and data carried in the infrared signal and places information representing the instructions and data onto bus . Bus  carries the information to memory  from which processor  retrieves and executes the instructions using some of the data sent with the instructions. The instructions and data received in memory  may optionally be stored on storage device , either before or after execution by the processor .",{"@attributes":{"id":"p-0165","num":"0169"},"figref":["FIG. 12","FIG. 11"],"b":["1200","1200","1200"]},"In one embodiment, the chip set  includes a communication mechanism such as a bus  for passing information among the components of the chip set . A processor  has connectivity to the bus  to execute instructions and process information stored in, for example, a memory . The processor  may include one or more processing cores with each core configured to perform independently. A multi-core processor enables multiprocessing within a single physical package. Examples of a multi-core processor include two, four, eight, or greater numbers of processing cores. Alternatively or in addition, the processor  may include one or more microprocessors configured in tandem via the bus  to enable independent execution of instructions, pipelining, and multithreading. The processor  may also be accompanied with one or more specialized components to perform certain processing functions and tasks such as one or more digital signal processors (DSP) , or one or more application-specific integrated circuits (ASIC) . A DSP  typically is configured to process real-world signals (e.g., sound) in real time independently of the processor . Similarly, an ASIC  can be configured to performed specialized functions not easily performed by a general purposed processor. Other specialized components to aid in performing the inventive functions described herein include one or more field programmable gate arrays (FPGA) (not shown), one or more controllers (not shown), or one or more other special-purpose computer chips.","The processor  and accompanying components have connectivity to the memory  via the bus . The memory  includes both dynamic memory (e.g., RAM, magnetic disk, writable optical disk, etc.) and static memory (e.g., ROM, CD-ROM, etc.) for storing executable instructions that when executed perform the inventive steps described herein to acquire device attributes from multiple sources. The memory  also stores the data associated with or generated by the execution of the inventive steps.",{"@attributes":{"id":"p-0168","num":"0172"},"figref":["FIG. 13","FIG. 1"],"b":"1300"},"Pertinent internal components of the telephone include a Main Control Unit (MCU) , a Digital Signal Processor (DSP) , and a receiver\/transmitter unit including a microphone gain control unit and a speaker gain control unit. A main display unit  provides a display to the user in support of various applications and mobile terminal functions that perform or support the steps of device attributes acquisition from multiple sources. The display unit  includes display circuitry configured to display at least a portion of a user interface of the mobile terminal (e.g., mobile telephone). Additionally, the display unit  and display circuitry are configured to facilitate user control of at least some functions of the mobile terminal. An audio function circuitry  includes a microphone  and microphone amplifier that amplifies the speech signal output from the microphone . The amplified speech signal output from the microphone  is fed to a coder\/decoder (CODEC) .","A radio section  amplifies power and converts frequency in order to communicate with a base station, which is included in a mobile communication system, via antenna . The power amplifier (PA)  and the transmitter\/modulation circuitry are operationally responsive to the MCU , with an output from the PA  coupled to the duplexer  or circulator or antenna switch, as known in the art. The PA  also couples to a battery interface and power control unit .","In use, a user of mobile terminal  speaks into the microphone  and his or her voice along with any detected background noise is converted into an analog voltage. The analog voltage is then converted into a digital signal through the Analog to Digital Converter (ADC) . The control unit  routes the digital signal into the DSP  for processing therein, such as speech encoding, channel encoding, encrypting, and interleaving. In one embodiment, the processed voice signals are encoded, by units not separately shown, using a cellular transmission protocol such as global evolution (EDGE), general packet radio service (GPRS), global system for mobile communications (GSM), Internet protocol multimedia subsystem (IMS), universal mobile telecommunications system (UMTS), etc., as well as any other suitable wireless medium, e.g., microwave access (WiMAX), Long Term Evolution (LIE) networks, code division multiple access (CDMA), wideband code division multiple access (WCDMA), wireless fidelity (WiFi), satellite, and the like.","The encoded signals are then routed to an equalizer  for compensation of any frequency-dependent impairments that occur during transmission though the air such as phase and amplitude distortion. After equalizing the bit stream, the modulator  combines the signal with a RF signal generated in the RF interface . The modulator  generates a sine wave by way of frequency or phase modulation. In order to prepare the signal for transmission, an up-converter  combines the sine wave output from the modulator  with another sine wave generated by a synthesizer  to achieve the desired frequency of transmission. The signal is then sent through a PA  to increase the signal to an appropriate power level. In practical systems, the PA  acts as a variable gain amplifier whose gain is controlled by the DSP  from information received from a network base station. The signal is then filtered within the duplexer  and optionally sent to an antenna coupler  to match impedances to provide maximum power transfer. Finally, the signal is transmitted via antenna  to a local base station. An automatic gain control (AGC) can be supplied to control the gain of the final stages of the receiver. The signals may be forwarded from there to a remote telephone which may be another cellular telephone, other mobile phone or a land-line connected to a Public Switched Telephone Network (PSTN), or other telephony networks.","Voice signals transmitted to the mobile terminal  are received via antenna  and immediately amplified by a low noise amplifier (LNA) . A down-converter  lowers the carrier frequency while the demodulator  strips away the RF leaving only a digital bit stream. The signal then goes through the equalizer  and is processed by the DSP . A Digital to Analog Converter (DAC)  converts the signal and the resulting output is transmitted to the user through the speaker , all under control of a Main Control Unit (MCU) \u2014which can be implemented as a Central Processing Unit (CPU) (not shown).","The MCU  receives various signals including input signals from the keyboard . The keyboard  and\/or the MCU  in combination with other user input components (e.g., the microphone ) comprise a user interface circuitry for managing user input. The MCU  runs a user interface software to facilitate user control of at least some functions of the mobile terminal  to acquire device attributes from multiple sources. The MCU  also delivers a display command and a switch command to the display  and to the speech output switching controller, respectively. Further, the MCU  exchanges information with the DSP  and can access an optionally incorporated SIM card  and a memory . In addition, the MCU  executes various control functions required of the terminal. The DSP  may, depending upon the implementation, perform any of a variety of conventional digital processing functions on the voice signals. Additionally, DSP  determines the background noise level of the local environment from the signals detected by microphone  and sets the gain of microphone  to a level selected to compensate for the natural tendency of the user of the mobile terminal .","The CODEC  includes the ADC  and DAC . The memory  stores various data including call incoming tone data and is capable of storing other data including music data received via, e.g., the global Internet. The software module can reside in RAM memory, flash memory, registers, or any other form of writable storage medium known in the art. The memory device  may be, but not limited to, a single memory, CD, DVD, ROM, RAM, EEPROM, optical storage, or any other non-volatile storage medium capable of storing digital data.","An optionally incorporated SIM card  carries, for instance, important information, such as the cellular phone number, the carrier supplying service, subscription details, and security information. The SIM card  serves primarily to identify the mobile terminal  on a radio network. The card  also contains a memory for storing a personal telephone number registry, text messages, and user specific mobile terminal settings.","While the invention has been described in connection with a number of embodiments and implementations, the invention is not so limited but covers various obvious modifications and equivalent arrangements, which fall within the purview of the appended claims. Although features of the invention are expressed in certain combinations among the claims, it is contemplated that these features can be arranged in any combination and order."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The embodiments of the invention are illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6B"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 10A"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10B"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 13"}]},"DETDESC":[{},{}]}
