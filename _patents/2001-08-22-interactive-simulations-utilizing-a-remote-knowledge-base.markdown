---
title: Interactive simulations utilizing a remote knowledge base
abstract: A system is disclosed that provides a goal based learning system utilizing a rule based expert training system to provide a cognitive educational experience. The system provides the user with a simulated environment that presents a training opportunity to understand and solve optimally. Mistakes are noted and remedial educational material presented dynamically to build the necessary skills that a user requires for success in the business endeavor. The difficulty level is automatically adjusted to the student's skill level. The system utilizes an artificial intelligence engine driving individualized and dynamic feedback with synchronized audio, video, graphics and animation used to simulate real-world environment and interactions. Multiple “correct” answers are integrated into the learning system to allow individualized learning experiences in which navigation through the system is at a pace controlled by the learner. A robust business model provides support for realistic activities and allows a user to experience real world consequences for their actions and decisions and entails realtime decision-making and synthesis of the educational material. A dynamic feedback system is utilized that narrowly tailors feedback and focuses it based on the performance and characteristics of the student to assist the student in reaching a predefined goal.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06993513&OS=06993513&RS=06993513
owner: Indeliq, Inc.
number: 06993513
owner_city: Chicago
owner_country: US
publication_date: 20010822
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application is a continuation of U.S. application Ser. No. 09\/305,877 entitled A System, Method and Article of Manufacture for Creating Interactive Simulations Utilizing a Remote Knowledge Base and filed on May 5, 1999 now abandoned, U.S. application Ser. No. 09\/306,464 entitled System, Method, and Article of Manufacture for Instantiating a Virtual Consultant with Individualized Interactive Guide, U.S. Application and filed on May 5, 1999 now abandoned, U.S. Application Ser. No. 09\/306,465 entitled A System, Method and Article of Manufacture For Creating Collaborative Simulations with Multiple Roles for a Single Student and filed on May 5, 1999 now abandoned, and U.S. Application Ser. No. 09\/306,467 entitled A System, Method, and Article of Manufacture for Creating Chat Rooms with Multiple Roles for Multiple Participants and filed on May 5, 1999 now abandoned. The entire disclosure of each is hereby incorporated by reference.","The present invention relates to education systems and more particularly to a rule based tutorial system that utilizes business simulations of actual environments to teach new skills.","When building a knowledge based system or expert system, at least two disciplines are necessary to properly construct the rules that drive the knowledge base, the discipline of the knowledge engineer and the knowledge of the expert. The domain expert has knowledge of the domain or field of use of the expert system. For example, the domain expert of an expert for instructing students in an automotive manufacturing facility might be a process control engineer while the domain expert for a medical instruction system might be a doctor or a nurse. The knowledge engineer is a person that understands the expert system and utilizes the expert's knowledge to create an application for the system. In many instances, the knowledge engineer and domain expert are separate people who have to collaborate to construct the expert system.","Typically, this collaboration takes the form of the knowledge engineer asking questions of the domain expert and incorporating the answers to these questions into the design of the system. This approach is labor intensive, slow and error prone. The coordination of the two separate disciplines may lead to problems. Although the knowledge engineer can transcribe input from the expert utilizing videotape, audio tape, text and other sources, efforts from people of both disciplines have to be expended. Further, if the knowledge engineer does not ask the right questions or asks the questions in an incorrect way, the information utilized to design the knowledge base could be incorrect. Feedback to the knowledge engineer from the expert system is often not available in prior art system until the construction is completed. With conventional system, there is a time consuming feedback loop that ties together various processes from knowledge acquisition to validation.","Educational systems utilizing an expert system component often suffer from a lack of motivational aspects that result in a user becoming bored or ceasing to complete a training program. Current training programs utilize static, hard-coded feedback with some linear video and graphics used to add visual appeal and illustrate concepts. These systems typically support one \u201ccorrect\u201d answer and navigation through the system is only supported through a single defined path which results in a two-dimensional generic interaction, with no business model support and a single feedback to the learner of correct or incorrect based on the selected response. Current tutorial systems do not architect real business simulations into the rules to provide a creative learning environment to a user.","According to a broad aspect of a preferred embodiment of the invention, a goal based learning system utilizes a rule based expert training system to provide a cognitive educational experience.","A system is disclosed that provides a goal based learning system utilizing a rule based expert training system to provide a cognitive educational experience. The system provides the user with a simulated environment that presents a training opportunity to understand and solve optimally. Mistakes are noted and remedial educational material presented dynamically to build the necessary skills that a user requires for success in the business endeavor. The difficulty level is automatically adjusted to the student's skill level. The system utilizes an artificial intelligence engine driving individualized and dynamic feedback with synchronized audio, video, graphics and animation used to simulate real-world environment and interactions. Multiple \u201ccorrect\u201d answers are integrated into the learning system to allow individualized learning experiences in which navigation through the system is at a pace controlled by the learner. A robust business model provides support for realistic activities and allows a user to experience real world consequences for their actions and decisions and entails realtime decision-making and synthesis of the educational material. A dynamic feedback system is utilized that narrowly tailors feedback and focuses it based on the performance and characteristics of the student to assist the student in reaching a predefined goal.","A preferred embodiment of a system in accordance with the present invention is preferably practiced in the context of a personal computer such as an IBM compatible personal computer, Apple Macintosh computer or UNIX based workstation. A representative hardware environment is depicted in , which illustrates a typical hardware configuration of a workstation in accordance with a preferred embodiment having a central processing unit , such as a microprocessor, and a number of other units interconnected via a system bus . The workstation shown in  includes a Random Access Memory (RAM) , Read Only Memory (ROM) , an I\/O adapter  for connecting peripheral devices such as disk storage units  to the bus , a user interface adapter  for connecting a keyboard , a mouse , a speaker , a microphone , and\/or other user interface devices such as a touch screen (not shown) to the bus , communication adapter  for connecting the workstation to a communication network (e.g., a data processing network) and a display adapter  for connecting the bus  to a display device . The workstation typically has resident thereon an operating system such as the Microsoft Windows NT or Windows\/95 Operating System (OS), the IBM OS\/2 operating system, the MAC OS, or UNIX operating system. Those skilled in the art will appreciate that the present invention may also be implemented on platforms and operating systems other than those mentioned.","A preferred embodiment is written using JAVA, C, and the C++ language and utilizes object oriented programming methodology. Object oriented programming (OOP) has become increasingly used to develop complex applications. As OOP moves toward the mainstream of software design and development, various software solutions require adaptation to make use of the benefits of OOP. A need exists for these principles of OOP to be applied to a messaging interface of an electronic messaging system such that a set of OOP classes and objects for the messaging interface can be provided.","OOP is a process of developing computer software using objects, including the steps of analyzing the problem, designing the system, and constructing the program. An object is a software package that contains both data and a collection of related structures and procedures. Since it contains both data and a collection of structures and procedures, it can be visualized as a self-sufficient component that does not require other additional structures, procedures or data to perform its specific task. OOP, therefore, views a computer program as a collection of largely autonomous components, called objects, each of which is responsible for a specific task. This concept of packaging data, structures, and procedures together in one component or module is called encapsulation.","In general, OOP components are reusable software modules which present an interface that conforms to an object model and which are accessed at run-time through a component integration architecture. A component integration architecture is a set of architecture mechanisms which allow software modules in different process spaces to utilize each others capabilities or functions. This is generally done by assuming a common component object model on which to build the architecture. It is worthwhile to differentiate between an object and a class of objects at this point. An object is a single instance of the class of objects, which is often just called a class. A class of objects can be viewed as a blueprint, from which many objects can be formed.","OOP allows the programmer to create an object that is a part of another object. For example, the object representing a piston engine is said to have a composition-relationship with the object representing a piston. In reality, a piston engine comprises a piston, valves and many other components; the fact that a piston is an element of a piston engine can be logically and semantically represented in OOP by two objects.","OOP also allows creation of an object that \u201cdepends from\u201d another object. If there are two objects, one representing a piston engine and the other representing a piston engine wherein the piston is made of ceramic, then the relationship between the two objects is not that of composition. A ceramic piston engine does not make up a piston engine. Rather it is merely one kind of piston engine that has one more limitation than the piston engine; its piston is made of ceramic. In this case, the object representing the ceramic piston engine is called a derived object, and it inherits all of the aspects of the object representing the piston engine and adds further limitation or detail to it. The object representing the ceramic piston engine \u201cdepends from\u201d the object representing the piston engine. The relationship between these objects is called inheritance.","When the object or class representing the ceramic piston engine inherits all of the aspects of the objects representing the piston engine, it inherits the thermal characteristics of a standard piston defined in the piston engine class. However, the ceramic piston engine object overrides these ceramic specific thermal characteristics, which are typically different from those associated with a metal piston. It skips over the original and uses new functions related to ceramic pistons. Different kinds of piston engines have different characteristics, but may have the same underlying functions associated with it (e.g., how many pistons in the engine, ignition sequences, lubrication, etc.). To access each of these functions in any piston engine object, a programmer would call the same functions with the same names, but each type of piston engine may have different\/overriding implementations of functions behind the same name. This ability to hide different implementations of a function behind the same name is called polymorphism and it greatly simplifies communication among objects.","With the concepts of composition-relationship, encapsulation, inheritance and polymorphism, an object can represent just about anything in the real world. In fact, our logical perception of the reality is the only limit on determining the kinds of things that can become objects in object-oriented software. Some typical categories are as follows:\n\n","With this enormous capability of an object to represent just about any logically separable matters, OOP allows the software developer to design and implement a computer program that is a model of some aspects of reality, whether that reality is a physical entity, a process, a system, or a composition of matter. Since the object can represent anything, the software developer can create an object which can be used as a component in a larger software project in the future.","If 90% of a new OOP software program consists of proven, existing components made from preexisting reusable objects, then only the remaining 10% of the new software project has to be written and tested from scratch. Since 90% already came from an inventory of extensively tested reusable objects, the potential domain from which an error could originate is 10% of the program. As a result, OOP enables software developers to build objects out of other, previously built objects.","This process closely resembles complex machinery being built out of assemblies and sub-assemblies. OOP technology, therefore, makes software engineering more like hardware engineering in that software is built from existing components, which are available to the developer as objects. All this adds up to an improved quality of the software as well as an increased speed of its development.","Programming languages are beginning to filly support the OOP principles, such as encapsulation, inheritance, polymorphism, and composition-relationship. With the advent of the C++ language, many commercial software developers have embraced OOP. C++ is an OOP language that offers a fast, machine-executable code. Furthermore, C++ is suitable for both commercial-application and systems-programming projects. For now, C++ appears to be the most popular choice among many OOP programmers, but there is a host of other OOP languages, such as Smalltalk, Common Lisp Object System (CLOS), and Eiffel. Additionally, OOP capabilities are being added to more traditional popular computer programming languages such as Pascal.","The benefits of object classes can be summarized, as follows:\n\n","Class libraries are very flexible. As programs grow more complex, more programmers are forced to reinvent basic solutions to basic problems over and over again. A relatively new extension of the class library concept is to have a framework of class libraries. This framework is more complex and consists of significant collections of collaborating classes that capture both the small scale patterns and major mechanisms that implement the common requirements and design in a specific application domain. They were first developed to free application programmers from the chores involved in displaying menus, windows, dialog boxes, and other standard user interface elements for personal computers.","Frameworks also represent a change in the way programmers think about the interaction between the code they write and code written by others. In the early days of procedural programming, the programmer called libraries provided by the operating system to perform certain tasks, but basically the program executed down the page from start to finish, and the programmer was solely responsible for the flow of control. This was appropriate for printing out paychecks, calculating a mathematical table, or solving other problems with a program that executed in just one way.","The development of graphical user interfaces began to turn this procedural programming arrangement inside out. These interfaces allow the user, rather than program logic, to drive the program and decide when certain actions should be performed. Today, most personal computer software accomplishes this by means of an event loop which monitors the mouse, keyboard, and other sources of external events and calls the appropriate parts of the programmer's code according to actions that the user performs. The programmer no longer determines the order in which events occur. Instead, a program is divided into separate pieces that are called at unpredictable times and in an unpredictable order. By relinquishing control in this way to users, the developer creates a program that is much easier to use. Nevertheless, individual pieces of the program written by the developer still call libraries provided by the operating system to accomplish certain tasks, and the programmer must still determine the flow of control within each piece after it's called by the event loop. Application code still \u201csits on top of\u201d the system.","Even event loop programs require programmers to write a lot of code that should not need to be written separately for every application. The concept of an application framework carries the event loop concept further. Instead of dealing with all the nuts and bolts of constructing basic menus, windows, and dialog boxes and then making these things all work together, programmers using application frameworks start with working application code and basic user interface elements in place. Subsequently, they build from there by replacing some of the generic capabilities of the framework with the specific capabilities of the intended application.","Application frameworks reduce the total amount of code that a programmer has to write from scratch. However, because the framework is really a generic application that displays windows, supports copy and paste, and so on, the programmer can also relinquish control to a greater degree than event loop programs permit. The framework code takes care of almost all event handling and flow of control, and the programmer's code is called only when the framework needs it (e.g., to create or manipulate a proprietary data structure).","A programmer writing a framework program not only relinquishes control to the user (as is also true for event loop programs), but also relinquishes the detailed flow of control within the program to the framework. This approach allows the creation of more complex systems that work together in interesting ways, as opposed to isolated programs, having custom code, being created over and over again for similar problems.","Thus, as is explained above, a framework basically is a collection of cooperating classes that make up a reusable design solution for a given problem domain. It typically includes objects that provide default behavior (e.g., for menus and windows), and programmers use it by inheriting some of that default behavior and overriding other behavior so that the framework calls application code at the appropriate times.","There are three main differences between frameworks and class libraries:\n\n","Thus, through the development of frameworks for solutions to various problems and programming tasks, significant reductions in the design and development effort for software can be achieved. A preferred embodiment of the invention utilizes HyperText Markup Language (HTML) to implement documents on the Internet together with a general-purpose secure communication protocol for a transport medium between the client and the Newco. HTTP or other protocols could be readily substituted for HTML without undue experimentation. Information on these products is available in T. Berners-Lee, D. Connoly, \u201cRFC 1866: Hypertext Markup Language-2.0\u201d (November 1995); and R. Fielding, H, Frystyk, T. Berners-Lee, J. Gettys and J. C. Mogul, \u201cHypertext Transfer Protocol\u2014HTTP\/1.1: HTTP Working Group Internet Draft\u201d (May 2, 1996). HTML is a simple data format used to create hypertext documents that are portable from one platform to another. HTML documents are SGML documents with generic semantics that are appropriate for representing information from a wide range of domains. HTML has been in use by the World-Wide Web global information initiative since 1990. HTML is an application of ISO Standard 8879; 1986 Information Processing Text and Office Systems; Standard Generalized Markup Language (SGML).","To date, Web development tools have been limited in their ability to create dynamic Web applications which span from client to server and interoperate with existing computing resources. Until recently, HTML has been the dominant technology used in development of Web-based solutions. However, HTML has proven to be inadequate in the following areas:\n\n","Sun Microsystem's Java language solves many of the client-side problems by:\n\n","With Java, developers can create robust User Interface (UI) components. Custom \u201cwidgets\u201d (e.g., real-time stock tickers, animated icons, etc.) can be created, and client-side performance is improved. Unlike HTML, Java supports the notion of client-side validation, offloading appropriate processing onto the client for improved performance. Dynamic, real-time Web pages can be created. Using the above-mentioned custom UI components, dynamic Web pages can also be created.","Sun's Java language has emerged as an industry-recognized language for \u201cprogramming the Internet.\u201d Sun defines Java as: \u201ca simple, object-oriented, distributed, interpreted, robust, secure, architecture-neutral, portable, high-performance, multithreaded, dynamic, buzzword-compliant, general-purpose programming language. Java supports programming for the Internet in the form of platform-independent Java applets.\u201d Java applets are small, specialized applications that comply with Sun's Java Application Programming Interface (API) allowing developers to add \u201cinteractive content\u201d to Web documents (e.g., simple animations, page adornments, basic games, etc.). Applets execute within a Java-compatible browser (e.g., Netscape Navigator) by copying code from the server to client. From a language standpoint, Java's core feature set is based on C++. Sun's Java literature states that Java is basically, \u201cC++ with extensions from Objective C for more dynamic method resolution.\u201d","Another technology that provides similar function to JAVA is provided by Microsoft and ActiveX Technologies, to give developers and Web designers wherewithal to build dynamic content for the Internet and personal computers. ActiveX includes tools for developing animation, 3-D virtual reality, video and other multimedia content. The tools use Internet standards, work on multiple platforms, and are being supported by over 100 companies. The group's building blocks are called ActiveX Controls, small, fast components that enable developers to embed parts of software in hypertext markup language (HTML) pages. ActiveX Controls work with a variety of programming languages including Microsoft Visual C++, Borland Delphi, Microsoft Visual Basic programming system and, in the future, Microsoft's development tool for Java, code named \u201cJakarta.\u201d ActiveX Technologies also includes ActiveX Server Framework, allowing developers to create server applications. One of ordinary skill in the art readily recognizes that ActiveX could be substituted for JAVA without undue experimentation to practice the invention.","A simulation engine in accordance with a preferred embodiment is based on a Microsoft Visual Basic component developed to help design and test feedback in relation to a Microsoft Excel spreadsheet. These spreadsheet models are what simulate actual business functions and become a task that will be performed by a student The Simulation Engine accepts simulation inputs and calculates various outputs and notifies the system of the status of the simulation at a given time in order to obtain appropriate feedback.","The simulation model executes the business function that the student is learning and is therefore the center point of the application. An activity \u2018layer\u2019 allows the user to visually guide the simulation by passing inputs into the simulation engine and receiving an output from the simulation model. For example, if the student was working on an income statement activity, the net sales and cost of goods sold calculations are passed as inputs to the simulation model and the net income value is calculated and retrieved as an output. As calculations are passed to and retrieved from the simulation model, they are also passed to the Intelligent Coaching Agent (ICA). The ICA analyzes the Inputs and Outputs to the simulation model and generates feedback based on a set of rules. This feedback is received and displayed through the Visual Basic Architecture.",{"@attributes":{"id":"p-0125","num":"0148"},"figref":"FIG. 2","b":["210","220","230","200","201","230","234","250","270","240"]},"Feedback is unique for each individual completing the course and supports client cultural messages  \u201cdesigned into\u201d the course. A business simulation methodology that includes support for content acquisition, story line design, interaction design, feedback and coaching delivery, and content delivery is architected into the system in accordance with a preferred embodiment. A large number of \u201cpre-designed\u201d learning interactions such as drag and drop association of information , situation assessment\/action planning, interviewing (one-on-one, one-to-many), presenting (to a group of experts\/executives), metering of performance (handle now, handle later), \u201ctime jumping\u201d for impact of decisions, competitive landscape shift (while \u201ctime jumping\u201d, competitors merge, customers are acquired, etc.) and video interviewing with automated note taking are also included in accordance with a preferred embodiment.","Business simulation in accordance with a preferred embodiment delivers training curricula in an optimal manner. This is because such applications provide effective training that mirrors a student's actual work environment. The application of skills \u201con the job\u201d facilitates increased retention and higher overall job performance.","While the results of such training applications are impressive, business simulations are very complex to design and build correctly. These simulations are characterized by a very open-ended environment, where students can go through the application along any number of paths, depending on their learning style and prior experiences\/knowledge.","A category of learning approaches called Learn by Doing, is commonly used as a solution to support the first phase (Learn) of the Workforce Performance Cycle. However, it can also be a solution to support the second phase (Perform) of the cycle to enable point of need learning during job performance. By adopting the approach presented, some of the benefits of a technology based approach for building business simulation solutions which create more repeatable, predictable projects resulting in more perceived and actual user value at a lower cost and in less time are highlighted.","Most corporate training programs today are misdirected because they have failed to focus properly on the purpose of their training. These programs have confused the memorization of facts with the ability to perform tasks; the knowing of \u201cthat\u201d with the knowing of \u201chow\u201d. By adopting the methods of traditional schools, businesses are teaching a wide breadth of disconnected, decontextualized facts and figures, when they should be focused on improved performance. How do you teach performance, when lectures, books, and tests inherently are designed around facts and figures? Throw away the lectures, books, and tests. The best way to prepare for high performance is to perform; experience is the best teacher! Most business leaders agree that workers become more effective the more time they spend in their jobs. The best approach for training novice employees, therefore, would be letting them learn on the job, acquiring skills in their actual work environment. The idea of learning-by-doing is not revolutionary, yet it is resisted in business and academia. Why is this so, if higher competence is universally desired?","Learners are reluctant to adopt learning-by-doing because they are frightened of failure. People work hard to avoid making mistakes in front of others. Business leaders are hesitant to implement learning-by-doing because novice failure may have dramatic safety, legal and financial implications. Imagine a novice pilot learning-by-doing as he accelerates a large jet plane down a runway; likewise, consider a new financial analyst learning-by-doing as he structures a multi-million dollar financial loan. Few employers are willing to endure such failures to have a more competent workforce.","The concerns of employee and employer can be relieved if the training (and accompanying failure) didn't occur in front of co-workers and clients, if it didn't jeopardize a multi-million dollar aircraft or a multi-million dollar deal. What if the training was performed privately, in a richly modeled simulation of the workers actual job? In a simulated environment, failure would result in dedicated instruction instead of embarrassment, injury, or monetary losses. Simulated environments provide a sense of liberation for exploration that does not exist in the real world. Knowing that the consequences of experimentation will unlikely be dire, learners are able to explore the \u201cwhat if . . . \u201d inherent in us all. In this way, the best way to prepare for high performance is to simulate actual performance. New media technologies utilizing multimedia provide the possibility to create such business simulation experiences.","Even if companies didn't make the mistake of focusing on \u201cwhat\u201d learning vs. \u201chow\u201d learning, they still tend to have the overly narrow view of education\/training as something that only occurs prior to workers being asked to actually perform their job. Learning is something that is constantly occurring, and doesn't cease once \u201creal work\u201d has begun. The closer new lessons occur in time with the application of those lessons, the greater the resultant learning. This fact helps to explain some of the reasoning behind the benefits of business simulation, described in the previous section. In those systems, all new lessons are taught in close relationship to their real world use; everything is in context and, most importantly, are presented at the appropriate time. But as the properly trained worker performs their job, the working environment changes. New demands occur, and new methods and rules are developed. As these events occur, there is a need for new support\/training that, in most cases, must wait to be addressed until the next \u201cpre-performance\u201d training session.","In these cases, the need (or demand) for additional training doesn't match the supply. This lag between a training need and the fulfilling lesson has a dramatic negative impact on productivity, accuracy, and customer satisfaction. Workers need to have the opportunity to learn while they are performing. Just as during pre-performance training, one powerful mechanism for identifying and correcting (simulated) performance problems is to have an expert available at all time to watch your actions and remediate when appropriate. This, obviously, is too costly and time intensive of an approach to be practical with actual experts. But what if workers had access to a support system that provided the majority of the benefits of a real expert, transparently integrated into their work environment? Such a system would provide advice at key moments in the work flow for problem resolution and\/or process improvement, tools to ease task completion, reference material of best practice knowledge, and point of need training courses. With a support system that proactively assists the worker in performance of their job tasks at a higher level of competency, productivity and customer satisfaction (both internal and external) would soar.","The key to such a support system is that it is seamlessly integrated into the business system that the knowledge worker uses to execute their job tasks. Workers don't need to go \u201coff-line\u201d or seek out cryptic information buried within paper manuals and binders for guidance or to find the answer to queries. All the support components are made available through the same applications the worker's use, at the point in which they need them, tailored to the individual to show \u201chow\u201d, not just \u201cwhat\u201d. Learning would be occurring all the time, with little distinction between performing and improving performance.","Establishing that training should focus on performance (how), rather than facts (what), and extending the model of learning to include assistance while performing, rather than only before performance, still leaves us dangerously exposed in preparing to compete in the new, chaotic economy. As was mentioned in the opening of this paper, the pace of change in business today is whiplash fast. Not only are new methods of doing business evolving every 18-24 months, new competitors emerge, dominate, and fade in time periods businesses used to take to perform demographic studies. Now more than ever, those who do not reinvent themselves on a regular basis will be fossilized by the pace of change.","Even the best pre-performance training and the most advanced performance support tools are destined to be outdated if there isn't a fresh supply of real-world requirements and lessons learned being fed back as inputs for the next go 'round. Innovation is a key step in the Workforce Performance Cycle. This step requires business to employ Stephen Covey's famous habit of \u201csharpening the saw\u201d, or \u201ctake time to be fast\u201d.","There is an untold wealth of information buried within the heads of business users responsible for implementing the steps outlined in their pre-performance training and performance support tools. No other group within an organization can more accurately assess the effectiveness of current methods, or project needed changes that will have dramatic future impact. This step of reflecting on the current and past state of affairs, uncovering new approaches by identifying what is working and what is not, and adapting accordingly for the future is the last phase of the learning\/performance cycle.","Innovation to fuel future training and performance support comes directly from the community most closely tied to task performance. Effective businesses need to develop and cultivate a mechanism for communication and collaboration among the experts in these communities to more efficiently benefit from their collective wisdom. In today's business, that which is evident to your business is evident to nearly all your competitors as well. The competitive advantage lies in uncovering that which is unexpected or not immediately apparent, adapting your business processes to exploit the discovery, and quickly, but effectively, educating your workforce on the new policies and procedures, all before the competition catches on or the market changes again.","This innovation process is the critical final step in continuous education of the most effective and up-to-date policies, procedures, and information. Without formalized innovation, companies not only risk being a step behind the ever advancing competition, but compound the problem by continuing to train their personnel with outdated strategies and information. One way to formalize this vital step in the Workforce Performance Cycle is to construct Virtual Learning Communities, where many \u2018experts\u2019 can share experiences, submit ideas for improvements, play out \u201cwhat-if\u201d scenarios, and contribute on complex problems that may be insurmountable without significant collaboration with others. Such Learning Communities could nurture up-to-date discussion of what is actually happening within a business, eliminating the traditional information-passing lag that plagues many business as new data travels through corporate hierarchies. This increased nimbleness would help organizations quickly address new competitive trends and outdated strategies, identify potential solutions, and implement improved processes in the form of updated training and performance support reference materials.","Currently, a typical BusSim engagement takes between one and two years to complete and requires a variety of both functional and technical skills.  depicts the timeline and relative resource requirements for each phase of development for a typical application development in accordance with a preferred embodiment. The chart clearly depicts the relationship between the large number of technical resources required for both the build and test phases of development. This is because the traditional development process used to build BusSim solutions reflects more of a \u201cone off\u201d philosophy, where development is done from scratch in a monolithic fashion, with little or no reuse from one application to the next. This lack of reuse makes this approach prohibitively expensive, as well as lengthy, for future BusSim projects.","The solution to this problem is to put tools in the hands of instructional designers that allows them to create their BusSim designs and implement them without the need for programmers to write code. And to put application architectures that integrate with the tools in the hands of developers, providing them with the ability to quickly deliver solutions for a number of different platforms. The reuse, then, comes in using the tools and architectures from one engagement to another. Both functional and technical resources carry with them the knowledge of how to use the technology, which also has an associated benefit of establishing a best-practice development methodology for BusSim engagements.","The tools and architectures described herein are part of a next-generation Business Simulation delivery framework that will reduce the total effort necessary to build solutions in accordance with a preferred embodiment.  depicts the potential savings in both functional and technical tasks in accordance with a preferred embodiment.","Design Phase","In the Design Phase, instructional designers become oriented to the content area and begin to conceptualize an instructional approach. They familiarize themselves with the subject matter through reading materials and interviews with Subject Matter Experts (SMEs). They also identify learning objectives from key client contacts. Conceptual designs for student interactions and interface layouts also begin to emerge. After the conceptual designs have taken shape, Low-Fi user testing (a.k.a. Conference Room Piloting) is performed. Students interact with interface mock-ups while facilitators observe and record any issues. Finally, detailed designs are created that incorporate findings. These detailed designs are handed off to the development team for implementation.","The design phase has traditionally been fraught with several problems. Unlike a traditional business system, BusSim solutions are not rooted in tangible business processes, so requirements are difficult to identify in a concrete way. This leaves instructional designers with a \u2018blue sky\u2019 design problem. With few business-driven constraints on the solution, shallow expertise in the content area, and limited technical skills, instructional designers have little help in beginning a design. Typically, only experienced designers have been able to conjure interface, analysis, and feedback designs that meet the learning objectives yet remain technically feasible to implement. To compound the problem, BusSim solutions are very open ended in nature. The designer must anticipate a huge combination of student behavior to design feedback that is helpful and realistic.","Build Phase","During the build phase, the application development team uses the detailed designs to code the application. Coding tasks include the interfaces and widgets that the student interacts with. The interfaces can be made up of buttons, grids, check boxes, or any other screen controls that allow the student to view and manipulate his deliverables. The developer must also code logic that analyzes the student's work and provides feedback interactions. These interactions may take the form of text and\/or multimedia feedback from simulated team members, conversations with simulated team members, or direct manipulations of the student's work by simulated team members. In parallel with these coding efforts, graphics, videos, and audio are being created for use in the application. Managing the development of these assets have their own complications.","Risks in the build phase include misinterpretation of the designs. If the developer does not accurately understand the designer's intentions, the application will not function as desired. Also, coding these applications requires very skilled developers because the logic that analyzes the student's work and composes feedback is very complex.","Test Phase","The Test Phase, as the name implies, is for testing the application. Testing is performed to verify the application in three ways: first that the application functions properly (functional testing), second that the students understand the interface and can navigate effectively (usability testing), and third that the learning objectives are met (cognition testing). Functional testing of the application can be carried out by the development team or by a dedicated test team. If the application fails to function properly, it is debugged, fixed, recompiled and retested until its operation is satisfactory. Usability and cognition testing can only be carried out by test students who are unfamiliar with the application. If usability is unsatisfactory, parts of the interface and or feedback logic may need to be redesigned, recoded, and retested. If the learning objectives are not met, large parts of the application may need to be removed and completely redeveloped from a different perspective.","The test phase is typically where most of the difficulties in the BusSim development cycle are encountered. The process of discovering and fixing functional, usability, and cognition problems is a difficult process and not an exact science.","For functional testing, testers operate the application, either by following a test script or by acting spontaneously and documenting their actions as they go. When a problem or unexpected result is encountered, it too is documented. The application developer responsible for that part of the application then receives the documentation and attempts to duplicate the problem by repeating the tester's actions. When the problem is duplicated, the developer investigates further to find the cause and implement a fix. The developer once again repeats the tester's actions to verify that the fix solved the problem. Finally, all other test scripts must be rerun to verify that the fix did not have unintended consequences elsewhere in the application.","This process has inherent difficulty. If the tester is inaccurate in recording his actions, or the developer is inaccurate in repeating them, then the problem may never be duplicated and the defect never found. Furthermore, the problem may be dependent on some condition in the tester's environment that is not readily observable or is not even related to the application. This process has proven to be tedious, time-consuming, and of limited reliability.","For usability testing, test students operate the application as it will be operated in production. Ideally, their progress is only impeded by their lack of mastery of the content. As they gain proficiency, they are able to complete the activities and move on. As is often the case, however, they are impeded by unclear instructions, a non-intuitive interface, or other usability shortcomings. When these difficulties are encountered, the facilitators document the problems and student comments on what is needed to improve usability.","There are two major risks associated with usability testing. First, student action recording is not as rigorous because actual students are performing the testing, so functional problems that don't appear until now are difficult to reproduce. Second, resolutions to usability problems often involve significant modification to the application code and interface which requires repeating of portions of design, build, and test.","For cognition testing, students are surveyed and\/or tested to determine their level of understanding of the material. If results indicate that the learning objectives are not being adequately met, the design is reevaluated. Changes proposed to improve the cognition may include massive redesign and rebuilding.","Execution Phase","The Execution Phase refers to the steady state operation of the completed application in its production environment. For some clients, this involves phone support for students. Clients may also want the ability to track students' progress and control their progression through the course. Lastly, clients may want the ability to track issues so they may be considered for inclusion in course maintenance releases.","One of the key values of on-line courses is that they can be taken at a time, location, and pace that is convenient for the individual student. However, because students are not centrally located, support is not always readily available. For this reason it is often desirable to have phone support for students.","Clients may also desire to track students' progress, or control their advancement through the course. Under this strategy, after a student completes a section of the course, he will transfer his progress data to a processing center either electronically or by physically mailing a disk. There it can be analyzed to verify that he completed all required work satisfactorily. One difficulty commonly associated with student tracking is isolating the student data for analysis. It can be unwieldy to transmit all the course data, so it is often imperative to isolate the minimum data required to perform the necessary analysis of the student's progress.","A Delivery Framework for Business Simulation","As discussed earlier, the traditional development process used to build BusSim solutions reflects more of a \u201cone off\u201d philosophy, where development is done from scratch in a monolithic fashion, with little or no reuse from one application to the next. A better approach would be to focus on reducing the total effort required for development through reuse, which, in turn would decrease cost and development time.","The first step in considering reuse as an option is the identification of common aspects of the different BusSim applications that can be generalized to be useful in future applications. In examination of the elements that make up these applications, three common aspects emerge as integral parts of each:\n\n","Every BusSim application must have a mechanism for interaction with the student. The degree of complexity of each interface may vary, from the high interactivity of a high-fidelity real-time simulation task, to the less complex information delivery requirements of a business case background information task. Regardless of how sophisticated the User Interface (UI), it is a vital piece of making the underlying simulation and feedback logic useful to the end user.","Analysis","Every BusSim application does analysis on the data that defines the current state of the simulation many times throughout the execution of the application. This analysis is done either to determine what is happening in the simulation, or to perform additional calculations on the data which are then fed back into the simulation. For example, the analysis may be the recognition of any actions the student has taken on artifacts within the simulated environment (notebooks, number values, interviews conducted, etc.), or it may be the calculation of an ROI based on numbers the student has supplied.","Interpretation","Substantive, useful feedback is a critical piece of any BusSim application. It is the main mechanism to communicate if actions taken by the student are helping or hurting them meet their performance objectives. The interpretation piece of the set of proposed commonalties takes the results of any analysis performed and makes sense of it. It takes the non-biased view of the world that the Analysis portion delivers (i.e., \u201cDemand is up 3%\u201d) and places some evaluative context around it (i.e., \u201cDemand is below the expected 7%; you're in trouble!\u201d, or \u201cDemand has exceeded projections of 1.5%; Great job!\u201d).  illustrates commonalties in accordance with a preferred embodiment.","Common Features of Business Simulation Applications","There are several approaches to capturing commonalties for reuse. Two of the more common approaches are framework-based and component-based. To help illustrate the differences between the two approaches, we will draw an analogy between building an application and building a house. One can construct a house from scratch, using the raw materials, 2\u00d74s, nails, paint, concrete, etc. One can also construct an application from scratch, using the raw materials of new designs and new code. The effort involved in both undertakings can be reduced through framework-based and\/or component-based reuse.","Framework-Based Reuse","Within the paradigm of framework-based reuse, a generic framework or architecture is constructed that contains commonalties. In the house analogy, one could purchase a prefabricated house framework consisting of floors, outside walls, bearing walls and a roof. The house can be customized by adding partition walls, wall-paper, woodwork, carpeting etc. Similarly, prefabricated application frameworks are available that contain baseline application structure and functionality. Individual applications are completed by adding specific functionality and customizing the look-and-feel. An example of a commonly used application framework is Microsoft Foundation Classes. It is a framework for developing Windows applications using C++. MFC supplies the base functionality of a windowing application and the developer completes the application by adding functionality within the framework. Framework-based reuse is best suited for capturing template-like features, for example user interface management, procedural object behaviors, and any other features that may require specialization.","Some benefits of using a framework include:\n\n","In the paradigm of component-based reuse, key functionality is encapsulated in a component. The component can then be reused in multiple applications. In the house analogy, components correspond to appliances such as dishwashers, refrigerators, microwaves, etc.","Similarly, many application components with pre-packaged functionality are available from a variety of vendors. An example of a popular component is a Data Grid. It is a component that can be integrated into an application to deliver the capability of viewing columnar data in a spreadsheet-like grid. Component-based reuse is best suited for capturing black-box-like features, for example text processing, data manipulation, or any other features that do not require specialization.","Some benefits of using components include:\n\n","Often, the best answer to achieving reuse is through a combination of framework-based and component-based techniques. A framework-based approach for building BusSim applications is appropriate for developing the user interface, handling user and system events, starting and stopping the application, and other application-specific and delivery platform-specific functions. A component-based approach is appropriate for black-box functionality. That is, functionality that can be used as-is with no specialization required.","In creating architectures to support BusSim application development, it is imperative that any assets remain as flexible and extensible as possible or reusability may be diminished. Therefore, we chose to implement the unique aspects of BusSim applications using a component approach rather than a framework approach. This decision is further supported by the following observations.\n\n","Based on these observations, we believe a combined framework\/component approach is optimal for achieving reuse.  illustrates a development architecture approach in accordance with a preferred embodiment.","Delivery Framework for Business Simulation","This diagram illustrates an ideal solution where components are combined with an Application Framework and an Application Architecture to achieve maximum reuse and minimum custom development effort. The Application Architecture is added to provide communication support between the application interface and the components, and between the components. This solution has the following features:\n\n","The next section discusses each of these components in further detail.","The Business Simulation Toolset","We have clearly defined why a combined component\/framework approach is the best solution for delivering high-quality BusSim solutions at a lower cost. Given that there are a number of third party frameworks already on the market that provide delivery capability for a wide variety of platforms, the TEL project is focused on defining and developing a set of components that provide unique services for the development and delivery of BusSim solutions. These components along with a set of design and test workbenches are the tools used by instructional designers to support activities in the four phases of BusSim development. We call this suite of tools the Business Simulation Toolset. Following is a description of each of the components and workbenches of the toolset.","Components","A Component can be thought of as a black box that encapsulates the behavior and data necessary to support a related set of services. It exposes these services to the outside world through published interfaces. The published interface of a component allows you to understand what it does through the services it offers, but not how it does it. The complexity of its implementation is hidden from the user. The following are the key components of the BusSim Toolset.\n\n","The Domain Model component is the central component of the suite that facilitates communication of context data across the application and the other components. It is a modeling tool that can use industry-standard database such as Informix, Oracle, or Sybase to store its data.","A domain model is a representation of the objects in a simulation. The objects are such pseudo tangible things as a lever the student can pull, a form or notepad the student fills out, a character the student interacts with in a simulated meeting, etc.","They can also be abstract objects such as the ROI for a particular investment, the number of times the student asked a particular question, etc. These objects are called entities. Some example entities include:\n\n","An entity can also contain other entities. For example, a personal bank account entity might contain an entity that represents a savings account. Every entity has a set of properties where each property in some way describes the entity. The set of properties owned by an entity, in essence, define the entity. Some example properties include:\n\n","The domain model is created by the instructional designer in a visual editing design tool called the Knowledge Workbench. The designer creates the objects of the domain model using generic entities and properties; that is, not having specific values associated with the entities and properties.","At runtime, an application's domain model is instantiated so that every entity and property is given a particular value that makes it unique. The result of a domain model instantiation is called the domain. The values of a domain's entities and properties can change throughout the course of the simulation based on student actions and updates from other components.  illustrates an instantiated domain model in accordance with a preferred embodiment.","Example Domain","Creating a domain model in data rather than in code facilitates reuse of the components in multiple applications in multiple domains without code changes. For example, a typical application in the Financial Services domain would have to define classes in code such as \u2018Customer\u2019, \u2018Account\u2019, etc. An Insurance Domain application might have classes such as \u2018Customer\u2019, \u2018Incident\u2019, \u2018Prior Policy\u2019, etc. To be able to perform analysis on any of these classes, the analysis logic must be coded to recognize the classes. This requires all logic to be custom-coded for every application; an effort-intensive undertaking that demands a high degree of technical skill.","By modeling the domain in data using generic objects, we can build standard generic analysis capability that can be applied to the domain. This allows implementation of analysis logic with much less effort by people with a low degree of technical skill. Functional experts can create the objects of the domain and apply various types of analysis from a pallet. All of this is accomplished in a visual development environment that supports the designer with visual feedback and only allows valid designs to be created.","Profiling Component","In the simplest terms, the purpose of the Profiling Component is to analyze the current state of a domain and identify specific things that are true about that domain. This information is then passed to the Remediation Component which provides feedback to the student. The Profiling Component analyzes the domain by asking questions about the domain's state, akin to an investigator asking questions about a case. The questions that the Profiler asks are called profiles. For example, suppose there is a task about building a campfire and the student has just thrown a match on a pile of wood, but the fire didn't start. In order to give useful feedback to the student, a tutor would need to know things like: was the match lit?, was the wood wet?, was there kindling in the pile?, etc. These questions would be among the profiles that the Profiling Component would use to analyze the domain. The results of the analysis would then be passed off to the Remediation Component which would use this information to provide specific feedback to the student.","Specifically, a profile is a set of criteria that is matched against the domain. The purpose of a profile is to check whether the criteria defined by the profile is met in the domain. Using a visual editing tool, instructional designers create profiles to identify those things that are important to know about the domain for a given task. During execution of a BusSim application at the point that feedback is requested either by the student or pro-actively by the application, the set of profiles associated with the current task are evaluated to determine which ones are true. Example profiles include:\n\n","A profile is composed of two types of structures: characteristics and collective characteristics. A characteristic is a conditional (the if half of a rule) that identifies a subset of the domain that is important for determining what feedback to deliver to the student. Example characteristics include:\n\n","A characteristic's conditional uses one or more atomics as the operands to identify the subset of the domain that defines the characteristic. An atomic only makes reference to a single property of a single entity in the domain; thus the term atomic. Example atomics include:\n\n","A collective characteristic is a conditional that uses multiple characteristics and\/or other collective characteristics as its operands. Collective characteristics allow instructional designers to build richer expressions (i.e., ask more complex questions). Example collective characteristics include:\n\n","Once created, designers are able to reuse these elements within multiple expressions, which significantly eases the burden of creating additional profiles. When building a profile from its elements, atomics can be used by multiple characteristics, characteristics can be used by multiple collective characteristics and profiles, and collective characteristics can be used by multiple collective characteristics and profiles.",{"@attributes":{"id":"p-0190","num":"0253"},"figref":"FIG. 9"},"Example Profile for Insurance Underwriting","Transformation Component","Whereas the Profiling Component asks questions about the domain, the Transformation Component performs calculations on the domain and feeds the results back into the domain for further analysis by the Profiling Component. This facilitates the modeling of complex business systems that would otherwise be very difficult to implement as part of the application. Within the Analysis phase of the Interface\/Analysis\/Interpretation execution flow, the Transformation Component actually acts on the domain before the Profiling Component does its analysis. The Transformation Component acts as a shell that wraps one or more data modeling components for the purpose of integrating these components into a BusSim application. The Transformation Component facilitates the transfer of specific data from the domain to the data modeling component (inputs) for calculations to be performed on the data, as well as the transfer of the results of the calculations from the data modeling component back to the domain (outputs).  illustrates a transformation component in accordance with a preferred embodiment.","The data modeling components could be third party modeling environments such as spreadsheet-based modeling (e.g., Excel, Formula1) or discrete time-based simulation modeling (e.g., PowerSim, VenSim). The components could also be custom built in C++, VB, Access, or any tool that is ODBC compliant to provide unique modeling environments. Using the Transformation Component to wrap a third party spreadsheet component provides an easy way of integrating into an application spreadsheet-based data analysis, created by such tools as Excel. The Transformation Component provides a shell for the spreadsheet so that it can look into the domain, pull out values needed as inputs, performs its calculations, and post outputs back to the domain.","For example, if the financial statements of a company are stored in the domain, the domain would hold the baseline data like how much cash the company has, what its assets and liabilities are, etc. The Transformation Component would be able to look at the data and calculate additional values like cash flow ratios, ROI or NPV of investments, or any other calculations to quantitatively analyze the financial health of the company. Depending on their complexity, these calculations could be performed by pre-existing spreadsheets that a client has already spent considerable time developing.","Remediation Component","The Remediation Component is an expert system that facilitates integration of intelligent feedback into BusSim applications. It has the following features:\n\n","The Remediation model consists of three primary objects:\n\n","Concepts are objects that represent real-world concepts that the user will be faced with in the interface. Concepts can be broken into sub-concepts, creating a hierarchical tree of concepts. This tree can be arbitrarily deep and wide to support rich concept modeling. Concepts can also own an arbitrary number of Coach Topics.","Coach Topics are objects that represent a discussion topic that may be appropriate for a concept. Coach Topics can own an arbitrary number of Coach Items.","Coach Items are items of feedback that may include text, audio, video, URL's, or updates to the Domain Model. Coach Items are owned by Coach Topics and are assembled by the Remediation Component algorithm.","Details of the Remediation Component algorithm for feedback is discussed in The Intelligent Coaching Agent Tool whitepaper and can be found on the Knowledge Exchange at the Technology Enabled Learning ETA Home Page.","Workbenches","The BusSim Toolset also includes a set of workbenches that are used by instructional designers to design and build BusSim applications. A workbench is a tool that facilitates visual editing or testing of the data that the BusSim Components use for determining an application's run-time behavior. The BusSim Toolset includes the following workbenches:","Knowledge Workbench","The Knowledge Workbench is a tool for the creation of domain, analysis and feedback data that is used by the BusSim Components. It has the following features:\n\n","The Simulated Student Test Workbench is a tool for the creation of data that simulates student's actions for testing BusSim Component behaviors. It has the following features:\n\n","The Regression Test Workbench is a tool for replaying and testing of student sessions to aid debugging. It has the following features:\n\n","The design phase of a BusSim application is streamlined by the use of the Knowledge Workbench. The Knowledge Workbench is a visual editor for configuring the objects of the component engines to control their runtime behavior. The components are based on proven algorithms that capture and implement best practices and provide a conceptual framework and methodology for instructional design.","In conceptual design, the workbench allows the designer to paint a model of the hierarchy of Concepts that the student will need to master in the activity. This helps the designer organize the content in a logical way. The visual representation of the Concepts helps to communicate ideas to other designers for review. The consistent look and feel of the workbench also contributes to a streamlined Quality Assurance process. In addition, standard documentation can be automatically generated for the entire design.","As the design phase progresses, the designer adds more detail to the design of the Concept hierarchy by painting in Coach Topics that the student may need feedback on. The designer can associate multiple feedback topics with each Concept. The designer also characterizes each topic as being Praise, Polish, Focus, Redirect or one of several other types of feedback that are consistent with a proven remediation methodology. The designer can then fill each topic with text, video war stories, Web page links, Authorware links, or any other media object that can be delivered to the student as part of the feedback topic.","As the designer's thoughts for the interface become clearer, she can begin to model the domain objects in the Knowledge Workbench. The student's world is constructed using objects in the Domain Model.","The designer again uses the Knowledge Workbench to configure objects in the Transformation Component. The Transformation Component is used to perform calculations or other analysis of the student's domain. Lastly, the designer uses the workbench to configure objects in the Profiling Component. The Profiling Component examines the student's domain, looking for conditions that indicate what feedback topics are appropriate for delivery.","More importantly, the Student Simulator Test Workbench allows the designer to exercise the designs. It allows the designer to manipulate the domain as if she were a student. The designer can interact with the simulated interface and invoke the component engines to see the feedback that the student would receive. This capability can also be utilized in a usability test such as a Conference Room Pilot. As the test student interacts with screen mock-ups, a facilitator can mimic his actions in the interface simulator and tell the student what the actual feedback will be. This results in much more rigorous testing prior to application construction. A big payoff is realized downstream in the form of reduced redesign after usability and cognition testing.","Throughout all these steps in the initial design, the workbench supports the design process by allowing the designer great flexibility within the framework of a proven methodology. This allows experienced users to design rich, realistic interactions, and inexperienced users to become competent in a shorter time by learning from the best practices embedded in the workbench. This greatly diminishes the \u2018blue sky\u2019 design problem. Also, since the designs can be tested prior to application construction, there is reduced rework after testing. Lastly, the visual knowledge representation enhances communication within the design team and greatly streamlines the QA process.","Build Phase","It is very clear how the tools support the Build Phase. The designs that the designer painted in the Knowledge Workbench drive the components at runtime. The application developer no longer has to write code that analyzes the student's work and provides feedback. The developer only has to build the interface and logic to report any student actions to the domain model. The components do the rest. What used to be the most difficult part of the build phase has been eliminated!","There is no chance for a developer to misinterpret the feedback designs because she never has to interpret them. In fact, the developer doesn't even have to know anything about the feedback behavior as long as she is familiar with the domain model. This also means the skill level required to develop the application can be greatly reduced. It's not hard to teach someone how to paint a screen in Visual Basic or Delphi and call API functions to notify the Domain Model of student actions.","In addition to the economies gained by the components, it is possible to use templates to further streamline design and development of commonly used interactions. We have created templates for several common interactions. For example, Journalizing of Transactions is an interaction that has appeared in several applications. We have built application and Knowledge Workbench templates for Journalization. All one must do to create a new Journalize task is to add graphics for new Transactions and fill in new data into placeholders in the Knowledge Workbench.","Test Phase","The toolset greatly reduces effort during functionality testing. The key driver of the effort reduction is that the components can automatically track the actions of the tester without the need to add code support in the application. Whenever the tester takes an action in the interface, it is reported to the domain model. From there it can be tracked in a database. Testers no longer need to write down their actions for use in debugging; they are automatically written to disk. There is also a feature for attaching comments to a tester's actions. When unexpected behavior is encountered, the tester can hit a control key sequence that pops up a dialog to record a description of the errant behavior.","Of far greater impact is the ability to replay the tester's actions automatically through the Regression Test Workbench. The designer does not need to spend hours trying to duplicate the error. She simply loads the tester's session into the Regression Test Workbench and replays it. In seconds the error is replicated and can be located and fixed using a variety of debugging utilities. After changes have been made, one more pass through the Regression Test Workbench verifies the fix.","The major difficulties of usability and cognition testing are also addressed by the toolset. First, since student tracking is no longer a manual activity, the precision of functional testing can also be applied to usability and cognition testing. Second, because of the increased rigor in the Conference Room Pilot, the risk of significant rework is greatly reduced.","Execution Phase","During the Execution Phase, the components are deployed to the student's platform. They provide simulated team member and feedback functionality with sub-second response time and error-free operation. If the client desires it, student tracking mechanisms can be deployed at runtime for evaluation and administration of students. This also enables the isolation of any defects that may have made it to production.","Scenarios for Using the Business Simulation Toolset","A good way to gain a better appreciation for how the BusSim Toolset can vastly improve the BusSim development effort is to walk through scenarios of how the tools would be used throughout the development lifecycle of a particular task in a BusSim application. For this purpose, we'll assume that the goal of the student in a specific task is to journalize invoice transactions, and that this task is within the broader context of learning the fundamentals of financial accounting. A cursory description of the task from the student's perspective will help set the context for the scenarios. Following the description are five scenarios which describe various activities in the development of this task. The figure below shows a screen shot of the task interface.",{"@attributes":{"id":"p-0219","num":"0307"},"figref":"FIG. 11"},"In this task, the student must journalize twenty-two invoices and other source documents to record the flow of budget dollars between internal accounts. (Note: \u201cJournalizing\u201d, or \u201cJournalization\u201d, is the process of recording journal entries in a general ledger from invoices or other source documents during an accounting period. The process entails creating debit and balancing credit entries for each document. At the completion of this process, the general ledger records are used to create a trial balance and subsequent financial reports.)","In accordance with a preferred embodiment, an Intelligent Coaching Agent Tool (ICAT) was developed to standardize and simplify the creation and delivery of feedback in a highly complex and open-ended environment. Feedback from a coach or tutor is instrumental in guiding the learner through an application. Moreover, by diagnosing trouble areas and recommending specific actions based on predicted student understanding of the domain student comprehension of key concepts is increased. By writing rules and feedback that correspond to a proven feedback strategy, consistent feedback is delivered throughout the application, regardless of the interaction type or of the specific designer\/developer creating the feedback. The ICAT is packaged with a user-friendly workbench, so that it may be reused to increase productivity on projects requiring a similar rule-based data engine and repository.","Definition of ICAT In Accordance with a Preferred Embodiment","The Intelligent Coaching Agent Tool (ICAT) is a suite of tools\u2014a database and a Dynamic Link Library (DLL) run-time engine\u2014used by designers to create and execute just-in-time feedback of Goal Based training. Designers write feedback and rules in the development tools. Once the feedback is set, the run-time engine monitors user actions, fires rules and composes feedback which describes the business deliverable.","I. The ICAT Remediation Model","The remediation model used within ICAT dynamically composes the most appropriate feedback to deliver to a student based on student's previous responses. The ICAT model is based on a theory of feedback which has been proven effective by pilot results and informal interviews. The model is embodied in the object model and algorithms of the ICAT. Because the model is built into the tools, all feedback created with the tool will conform to the model.","II. The Role of ICAT in Student Training","The ICAT plays two roles in student training. First, the ICAT is a teaching system, helping students to fully comprehend and apply information. Second, ICAT is a gatekeeper, ensuring that each student has mastered the material before moving on to additional information.","III. The Functional Definition of the ICAT","The ICAT is a self contained module, separate from the application. Separating the ICAT from the application allows other projects to use the ICAT and allows designers to test feedback before the application is complete. The ICAT Module is built on six processes which allow a student to interact effectively with the interface to compose and deliver the appropriate feedback for a student's mistakes.","IV. The ICAT Development Methodology for Creating Feedback","The ICAT development methodology is a seven step methodology for creating feedback. The methodology contains specific steps, general guidelines and lessons learned from the field. Using the methodology increases the effectiveness of the feedback to meet the educational requirements of the course.","V. Components","The processes each contain a knowledge model and some contain algorithms. Each process has specific knowledge architected into its design to enhance remediation and teaching.","VI. Testing Utilities, Reports and Methodology","There is a suite of testing tools for the ICAT. These tools allow designers and developers test all of their feedback and rules. In addition, the utilities let designers capture real time activities of students as they go through the course.","Expert Remediation Model Within the Tools","The tools and run-time engine in accordance with a preferred embodiment include expert knowledge of remediation. These objects include logic that analyzes a student's work to identify problem areas and deliver focused feedback. The designers need only instantiate the objects to put the tools to work. Embodying expert knowledge in the tools and engine ensures that each section of a course has the same effective feedback structure in place.","Any project which is creating a Goal-Based Scenario (GBS) business simulation or an Integrated Performance Support (IPS) system to help users understand and create business deliverables can profit from technology in accordance with a preferred embodiment. A GBS allows students to learn in a comprehensive simulated environment. Students work in a simulated environment to accomplish real world tasks, and when they make mistakes, remediation is provided to help identify and correct the mistakes. The hands-on experience of the simulated environment and the timely remediation account for the high retention rate from subjects presented utilizing a system in accordance with a preferred embodiment. A system in accordance with a preferred embodiment can be used in conjunction with an IPS to help users develop deliverables. If a customer service representative (CSR) is completing a form while conducting a phone conversation, the ICAT can be used to observe how the task is completed to provide a live analysis of mistakes.","A file structure in accordance with a preferred embodiment provides a standard system environment for all applications in accordance with a preferred embodiment. A development directory holds a plurality of sub-directories. The content in the documentation directory is part of a separate installation from the architecture. This is due to the size of the documentation directory. It does not require any support files, thus it may be placed on a LAN or on individual computers.","When the architecture is installed in accordance with a preferred embodiment, the development directory has an _Arch, _Tools, _Utilities, Documentation, QED, and XDefault development directory. Each folder has its own directory structure that is inter-linked with the other directories. This structure must be maintained to assure consistency and compatibility between projects to clarify project differences, and architecture updates.","The _Arch directory stores many of the most common parts of the system architecture. These files generally do not change and can be reused in any area of the project. If there is common visual basic code for applications that will continuously be used in other applications, the files will be housed in a folder in this directory.","The sub-directories in the _Arch directory are broken into certain objects of the main project. Object in this case refers to parts of a project that are commonly referred to within the project. For example, modules and classes are defined here, and the directory is analogous to a library of functions, APIs, etc . . . that do not change. For example the IcaObj directory stores code for the Intelligent Coaching Agent (ICA). The InBoxObj directory stores code for the InBox part of the project and so on. The file structure uses some primary object references as file directories. For example, the IcaObj directory is a component that contains primary objects for the ICA such as functional forms, modules and classes.","The BrowserObj directory contains modules, classes and forms related to the browser functionality in the architecture.","The HTMLGlossary directory contains code that is used for the HTML reference and glossary component of the architecture.","The IcaObj directory contains ICA functional code to be used in an application. This code is instantiated and enhanced in accordance with a preferred embodiment.","The InBoxObj directory contains code pertaining to the inbox functionality used within the architecture. Specifically, there are two major components in this architecture directory. There is a new .ocx control that was created to provide functionality for an inbox in the application. There is also code that provides support for a legacy inbox application. The PracticeObj directory contains code for the topics component of the architecture. The topics component can be implemented with the HTMLGlossary component as well.","The QmediaObj directory contains the components that are media related. An example is the QVIDctrl.cls. The QVIDctrl is the code that creates the links between QVID files in an application and the system in accordance with a preferred embodiment.","The SimObj directory contains the Simulation Engine, a component of the application that notifies the tutor of inputs and outputs using a spreadsheet to facilitate communication.","The StaticObj directory holds any component that the application will use statically from the rest of the application. For example, the login form is kept in this folder and is used as a static object in accordance with a preferred embodiment.","The SysDynObj directory contains the code that allows the Systems Dynamics Engine (Powersim) to pass values to the Simulation Engine and return the values to the tutor.","The VBObj directory contains common Visual Basic objects used in applications. For example the NowWhat, Visual Basic Reference forms, and specific message box components are stored in this folder.","The _Tools directory contains two main directories. They represent the two most used tools in accordance with a preferred embodiment. The two directories provide the code for the tools themselves. The reason for providing the code for these tools is to allow a developer to enhance certain parts of the tools to extend their ability. This is important for the current project development and also for the growth of the tools.","The Icautils directory contains a data, database, default, graphics, icadoc, and testdata directory. The purpose of all of these directories is to provide a secondary working directory for a developer to keep their testing environment of enhanced Icautils applications separate from the project application. It is built as a testbed for the tool only. No application specific work should be done here. The purpose of each of these directories will be explained in more depth in the project directory section. The TestData folder is unique to the _Tools\/ICAUtils directory. It contains test data for the regression bench among others components in ICAUtils.","The Utilities directory holds the available utilities that a Business Simulation project requires for optimal results. This is a repository for code and executable utilities that developers and designers may utilize and enhance in accordance with a preferred embodiment. Most of the utilities are small applications or tools that can be used in the production of simulations which comprise an executable and code to go with it for any enhancements or changes to the utility. If new utilities are created on a project or existing utilities are enhanced, it is important to notify the managers or developers in charge of keeping track of the Business Simulation assets. Any enhancements, changes or additions to the Business Simulation technology assets are important for future and existing projects.","A Documentation directory is used to store pertinent documentation. The documentation directory is structured as follows. Most of the directories are labeled after the specific information held within them. The following is a list of all the documentation directories and a description of what is contain in each.","Ref Website\u2014This directory contains The Business Simulation Reference website, which is a general reference for many things. If the website has not been set up for users on a LAN or website, all you need to do is go into the root directory of website and double click on index.htm. This is the main page for the site.","Components\u2014This directory contains any documentation on classes and modules that are used in the archtecture. For example there are documents here on the ICAMeeting class, the Inbox class etc.","Database\u2014This directory contains any documents describing the databases that are included and used in the Architecture. For example the ICAObj overview doc contains a description of the model and each element in the database.","HTML Component\u2014This directory contains relevant documentation about the HTML part of the architecture.","Process Models\u2014This directory should contain the documents that describe the process of the application or related information.","ReferenceApp\u2014This directory contains documents with descriptions and views of the reference app. (QED) for explanation and documentation. Testing conditions are stored in the Testing directory.","Standards&Templates\u2014This directory contains any type of architecture relevant coding standard documents or templates that a developer is required to follow.","UserGuides\u2014This directory has 6 sub-directories. Each one of these sub-directories contains user guides for a given tool or component in accordance with a preferred embodiment which include user guides for the architecture, the Tutor Suite, ICA Utilities, the simulation Engine and the System Dynamics Engine. There is also a directory for other documentation that contains user guides for any other tools or code like third party controls etc.","WorkFlows\u2014This directory contains the WF_Develop.doc which includes the workflow documentation for an application.","The sample project directory, QED has the same structure that a real project would be designed after. The QED directory has all custom architecture code, databases, spreadsheets, and any other application specific files stored in it. The QED project directory stores a Design and SrcVB directory. The Design directory contains all relevant files for a designer. The SrcVB directory is used for a developer.","The root directory of the Design and SrcVB directory contain a few important files to note. Both have two .rtf files, a few log files and an .ini file. The .rtf files are the feedback that is output from the tutor, the logs are also output from the tutor and the .ini file is for ICAUtils initialization. The design directory has three subdirectories that contain a data directory, which stores .xls files, sim models, and any other important data like html and video. It also has a database directory that holds any relevant databases for development and application use. The last directory is the icadoc directory which includes all tut files or .ica files, which are both created with the tutor.","The SrcVB directory stores all of the directories previously described. The reason for duplicating the data and database directories is to assure that a developer does not interfere with the designer's files. The developer tends to not do as much design work and can easily corrupt files. This duplication of directories provides a safer environment for the developer to test in. As was mentioned above, the developer tends to have a lot more to do with the application build than the design so there needs to be more content in the SrcVB directory. The SrcVB directory also contains an .exe and .vbp file which are created in a developers visual basic application.","The following are directories found in the SrcVB directory that are not found in the Design directory followed by a short definition:","The _CustomArch directory contains any application specific architecture. Look in the QED folder for an example.","The _CustomDistribution directory contains any files that need to be distributed with the application.","The Default directory contains any backup files that might need to be copied and reused later. Some files occasionally are corrupted and need to be replaced.","The Fonts directory contains application specific font libraries.","The Graphics directory contains any relevant graphics for the application.","The Help directory contains all files for a help reference layer in the application. This can be implemented in many ways but most commonly in an HTML form.","The Saved directory is for saved information that is produced by the application. This can be used for saving student information or saving temporary information for the application steps.","The StudentData directory is for storing any relevant student data, lists of students, their personal information or any relevant student data that needs to be saved.","XDefault Development:","The XDefault Development environment is used to provide a shell for any new project. A developer would rename this directory as an acronym of the project. QED is the default for the installation sample application. The XDefault development directory is a shell and serves as a building block for a startup project. A good idea is to use the QED sample application and build the XDefault Development project with the sample code in QED.","The last directory to be mentioned is the shared development directory which is placed on a LAN or central network area and is shared by all designers and developers of a project to assure that files in the project are up to date, managed properly and appropriately synchronized. There are many databases and files that will be shared in accordance with a preferred embodiment. These files need to be shared and have a location that someone can edit without having to worry about merging files later. A source control program is used to restrict access to a file to one application at a time.","The ICAT has a model of remediation architected into the system in accordance with a preferred embodiment. Feedback should help students complete tasks and learn the underlying concepts. To achieve this goal, the ICAT reviews student's work with the following objectives in mind.","Identify Student Misconceptions","Identifying that a student does not understand a topic and then clearly explaining it is the goal of human and computer tutors alike. Human tutors, however, have many more clues\u2014including facial expressions and body language\u2014to help them identify student misconceptions. The computer tutor is much more limited and can only view the outputs\u2014such as documents and reports\u2014the student produces. If a computer tutor is looking for a misunderstanding about debits and credits, the computer analyzes all the mistakes a student made concerning debits and credits and tries to identify what misunderstanding would account for this pattern of mistakes.","Identify what Students Should Fix","If the coach cannot diagnose a student's misconception, or cannot do it with 100% accuracy, the coach must at least tell the student what he did wrong so that he can correct it. If at all possible, the coach should identify groups or types of problems the student is making so that the student can generalize the solution and answer.","Prompt Students to Reflect on Mistakes","When identifying problems, the tutor needs to prompt the student to reflect on a problem and start to point the student towards the answer. The tutor should not tell the student the answer, but instead should attempt to provide an appropriate answer or give the student a question to think about.","Reinforce Correct Concepts and Ideas","Once a student has gotten the correct answer, it is important to reinforce the learning. Students may feel uncertain about their understanding even after he has gotten the answer correct. To reinforce the student's understanding of the concept and provide a confidence boost, the tutor should walk the student through the answer so that it is completely understood. These goals are not just the goals of a computer tutor, but they are the goals of a human tutor as well. All tutors must look at a student's work to help identify and correct errors as well as learn the material. One of the most difficult tasks facing a tutor is the difficult task of balancing the appropriate amount of assistance provided the student to complete the task with the requirement to help the student learn the material.","Model of Feedback","A preferred embodiment utilizes feedback to address the balancing task. The theory is centered on the idea of severity. Severe errors require severe feedback while mild errors require mild feedback. If a student writes a paper on the wrong subject, a human tutor will spend little time reviewing the paper, but instead, identify it as a serious mistake and ask the student to rewrite the paper. If the student simply misses one paragraph of the argument, then the tutor will focus the student on that paragraph. Finally, if the paper is correct except for a couple of spelling mistakes, the tutor will point out the specific mistakes and ask the student to correct them. The point is that because a tutor and a student do not want to waste each others' time, they will match the severity of the error with the severity of the feedback.","In the ICAT model of feedback, there are four levels of severity of error and four corresponding levels of feedback. The tutor goes through the student's work, identifies the severity of the error and then provides the corresponding level of feedback.",{"@attributes":{"id":"p-0278","num":"0366"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Educational Categories of Feedback"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"center"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"FEEDBACK"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["ERROR","Feedback"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Error Type","Description","Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["1. None","No errors exist.","1. Praise","Confirmation that the"]},{"entry":[{},"The student's",{},"student completed the"]},{"entry":[{},"work is perfect.",{},"task correctly."]},{"entry":[{},{},{},"Example:"]},{"entry":[{},{},{},"Great. You have jour-"]},{"entry":[{},{},{},"nalized all accounts cor-"]},{"entry":[{},{},{},"rectly. I am happy to see"]},{"entry":[{},{},{},"you recognized we are"]},{"entry":[{},{},{},"paying for most of our"]},{"entry":[{},{},{},"bills \u201con account\u201d."]},{"entry":["2. Syntactic","There may be","2. Polish","Tells the student the"]},{"entry":[{},"spelling",{},"specific actions he did"]},{"entry":[{},"mistakes or",{},"incorrectly, and possibly"]},{"entry":[{},"other syntactic",{},"correct them for him."]},{"entry":[{},"errors. As a",{},"Example:"]},{"entry":[{},"designer, you",{},"There are one or two errors"]},{"entry":[{},"should be",{},"in your work. It looks like"]},{"entry":[{},"confident that",{},"you misclassified the pur-"]},{"entry":[{},"the student will",{},"chase of the fax as a cash"]},{"entry":[{},"have mastered",{},"purchase when it is really a"]},{"entry":[{},"the material at",{},"purchase on account."]},{"entry":[{},"this point."]},{"entry":["3. Local","A paragraph of","3. Focus","Focus the student on this"]},{"entry":[{},"a paper is",{},"area of his work. Point out"]},{"entry":[{},"missing or the",{},"that he does not understand"]},{"entry":[{},"student has",{},"at least one major concept."]},{"entry":[{},"made a number",{},"Example:"]},{"entry":[{},"of mistakes all",{},"Looking over your work, I"]},{"entry":[{},"in one area.",{},"see that you do not"]},{"entry":[{},"The student",{},"understand the concept of"]},{"entry":[{},"clearly does not",{},"\u201con account\u201d. Why don't"]},{"entry":[{},"understand this",{},"you review that concept and"]},{"entry":[{},"area.",{},"review your work for"]},{"entry":[{},{},{},"errors."]},{"entry":["4. Global","The student has","4. Redirect","Restate the goal of the ac-"]},{"entry":[{},"written on the",{},"tivity and tell the student to"]},{"entry":[{},"wrong subject",{},"review main concepts and"]},{"entry":[{},"or there are",{},"retry the activity."]},{"entry":[{},"mistakes all",{},"Example:"]},{"entry":[{},"over the stu-",{},"There are lots of mistakes"]},{"entry":[{},"dent's work",{},"throughout your work. You"]},{"entry":[{},"which indicates",{},"need to think about what"]},{"entry":[{},"he does not un-",{},"type of transaction each"]},{"entry":[{},"derstand most",{},"source document repre-"]},{"entry":[{},"of the concepts",{},"sents before journalizing it."]},{"entry":[{},"in the activity."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"Returning to the analogy of helping someone write a paper, if the student writes on the wrong subject, this as a global error requiring redirect feedback. If the student returns with the paper rewritten, but with many errors in one area of the paper, focus feedback is needed. With all of those errors fixed and only spelling mistakes\u2014syntactic mistakes\u2014polish feedback is needed. When all syntactic mistakes were corrected, the tutor would return praise and restate why the student had written the correct paper.","Focusing on the educational components of completing a task is not enough. As any teacher knows, student will often try and cheat their way through a task. Students may do no work and hope the teacher does not notice or the student may only do minor changes in hope of a hint or part of the answer. To accommodate these administrative functions, there are three additional administrative categories of feedback.",{"@attributes":{"id":"p-0281","num":"0369"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Administrative Categories of Feedback"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Error","Description","Feedback","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["No work","The student has made","Mastermind","Tell the student that he has"]},{"entry":["done since","no changes since the",{},"done no work and that a"]},{"entry":["last review","last time he asked for",{},"substantial amount of work"]},{"entry":[{},"the tutor to review his",{},"needs to be completed before"]},{"entry":[{},"work.",{},"review."]},{"entry":[{},{},{},"Example:"]},{"entry":[{},{},{},"You have done no work since I"]},{"entry":[{},{},{},"last reviewed your work."]},{"entry":[{},{},{},"Please try and correct at least"]},{"entry":[{},{},{},"three journal entries before"]},{"entry":[{},{},{},"asking me to review your work"]},{"entry":[{},{},{},"again."]},{"entry":["All work is","If a designer wants to","Incomplete-","State that the student has not"]},{"entry":["not","give an interim report","continue","completed all of the work"]},{"entry":["complete","of how the student is",{},"required, but you will review"]},{"entry":["but a","doing before everything",{},"what the student has done so"]},{"entry":["substantial","is done, they he would",{},"far."]},{"entry":["amount of","use incomplete--",{},"Example:"]},{"entry":["work has","continue.",{},"It looks like you have not"]},{"entry":["been done",{},{},"finished journalizing, but I will"]},{"entry":[{},{},{},"review what you have done up"]},{"entry":[{},{},{},"to this point. The first three"]},{"entry":[{},{},{},"entries are correct."]},{"entry":["All work is","If a user has not","Incomplete-","State that nothing has been"]},{"entry":["not","completed enough","stop","attempted and point to the first"]},{"entry":["complete","work to receive",{},"action to be taken."]},{"entry":["and a","feedback, this category",{},"Example:"]},{"entry":["substantial","is used.",{},"It looks like you have done no"]},{"entry":["amount of",{},{},"work journalizing. Why don't"]},{"entry":["work is not",{},{},"you start by trying to"]},{"entry":["complete",{},{},"journalize the fax purchase."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"The administrative and the educational categories of feedback account for every piece of feedback a designer can write and a student can receive. To provide a better understanding of how the feedback works together, an example is provided below.","Feedback Example","The following example is a GBS training application in which new finance professionals are taught the fundamentals of finance management. A student has a toolbar to navigate and also to access some of the application-level features of the application. The toolbar is the L-shaped object across the top and left of the interface. The top section of the toolbar allows the user to navigate to tasks within the current Activity. The left section of the toolbar allows the student to access other features of the application, including feedback. The student can have his deliverables analyzed and receive feedback by clicking on a team button.","In this task, the student must journalize twenty-two invoices and other source documents to record the flow of budget dollars between internal accounts. (Note: \u201cJournalizing\u201d, or \u201cJournalization\u201d, is the process of recording journal entries in a general ledger from invoices or other source documents during an accounting period. The process entails creating debit and balancing credit entries for each document. At the completion of this process, the general ledger records are used to create a trial balance and subsequent financial reports.) The student has several controls on the screen that must be manipulated to complete the task. The upper left area of the screen shows the current transaction. Each transaction has a corresponding journal entry. The bottom of the screen shows the current journal entry. The Top two lines of the journal entry are for Debits (DR) and the bottom two lines are for Credits (CR). As the student uses the \u2018Back\u2019 and \u2018Next\u2019 buttons to page through the transactions, the journal entry is also paged to stay in sync.",{"@attributes":{"id":"p-0285","num":"0373"},"figref":"FIG. 12"},"A Toolbar  and the first transaction of this Task  appear prominently on the display. The student can move forward and back through the stack of transactions. For each transaction, the student must identify which accounts to debit and which to credit. When the student is done, he clicks the Team button.",{"@attributes":{"id":"p-0287","num":"0375"},"figref":"FIG. 13","b":"13"},{"@attributes":{"id":"p-0288","num":"0376"},"figref":["FIG. 14","FIG. 14","FIG. 15"],"b":"15"},{"@attributes":{"id":"p-0289","num":"0377"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0290","num":"0378"},"figref":"FIG. 17","b":"17"},{"@attributes":{"id":"p-0291","num":"0379"},"figref":"FIGS. 18 and 19"},"As a student attempts to correct transactions one and two unsuccessfully, the tutor starts to provide hints, stating that the student should debit an asset account and credit an equity account. The ICAT continues to focus on the errors in the first three source documents and is giving progressively more specific hints.",{"@attributes":{"id":"p-0293","num":"0381"},"figref":["FIG. 20","FIG. 19","FIG. 20"],"b":"20"},"As mentioned earlier in the Remediation Model section, the tutor plays two roles in any course. First, the tutor reviews the student's work and helps him\/her understand the task and the associate concepts. Second the tutor is gatekeeper between sections. The tutor will not allow students to proceed to the next section of the course until they have gotten the current section correct. To monitor student progress, the course has been broken into two components:","An activity is a business event, such as planning a company's financials or closing the books. Business events set the context of the course. Students learn the content so that they can complete the goals associates with each business event. The power of a GBS is in how it embeds the content a student needs to learn within the context of the business events.","A task is a business deliverable that must be completed as part of a business event. Example tasks include completing journal entries while closing the books. There may be many Tasks in an activity, just as there may be many deliverables required to react to a business event in the real world. Deliverables produced in this application include a break-even analysis, a transaction journal, a cost report, and a ratio analysis. The role of the tutor is to help the students complete the business deliverables associated with any business event. Students can always go backward, but they are limited from going forward, until the ICAT says that the business deliverable meets the required specifications. It is useful to think of the ICAT as a boss who reviews your work. The boss will not let you go on to the next task, or business deliverable, until you have correctly completed the current task. To help explain the concepts of an activity and task, here is a description of an ICAT implementation in accordance with a preferred embodiment.","A training application utilizing ICAT for a large product company is presented as an example. The training application is a revision of the first semester of a two year financial training program. Students learn finance by managing a simulated bicycle company for three years and using finance to solve business problems. At four places in the course, the students come together to present their analyses of the business. These presentations are live presentations to real business executives.","In preparation for the pitches, the students complete computer-based modules. There are two major sections to each module, the accounting concepts and the activities. Students learn the concepts and ideas in the accounting concepts and apply the concepts in the activities. All of the modules together represent the different phases associated with running a business: Start Operations, Analyze Operations and Improve Operations. Each computer-based activity represents a business event, such as closing the books of the company. These business events provide context for the content the students learn in the course. In this way, students not only learn what the concepts are but when, how and why they should use them.",{"@attributes":{"id":"p-0299","num":"0387"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Business Events - Activities"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"1. Financial Planning"]},{"entry":[{},"2. Recording Transactions"]},{"entry":[{},"3. Recording Transactions"]},{"entry":[{},"4. Closing the Books"]},{"entry":[{},"5. Analyze the Books"]},{"entry":[{},"6. Improve Operations"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0300","num":"0388"},"figref":"FIG. 21"},"To show how the business events impact the company on a day to day basis, students complete a set of deliverables associated with each business event. The business deliverables students create in the training application are varied in form and content. Some example business deliverables are listed below in accordance with a preferred embodiment.","1. An Analysis of Proforma Financial Statements","Students perform break-even analysis to determine which of twelve business strategies to pursue.","2. Journal Entries","Student journalize 20 of the transactions which occur in the third year of operations.","3. Summaries of Interviews with Employees about Operating Plan Variances","Students get behind the numbers and figure out what is driving the variances.","Design Scenario","This Scenario illustrates how the tools are used to support conceptual and detailed design of a BusSim application.  illustrates the steps of the first scenario in accordance with a preferred embodiment. The designer has gathered requirements and determined that to support the client's learning objectives, a task is required that teaches journalization skills. The designer begins the design first by learning about journalization herself, and then by using the Knowledge Workbench to sketch a hierarchy of the concepts she want the student to learn. At the most general level, she creates a root concept of \u2018Journalization\u2019. She refines this by defining sub-concepts of \u2018Cash related transactions\u2019, \u2018Expense related Transactions\u2019, and \u2018Expense on account transactions\u2019. These are each further refined to whatever level of depth is required to support the quality of the learning and the fidelity of the simulation.","The designer then designs the journalization interface. Since a great way to learn is by doing, she decides that the student should be asked to Journalize a set of transactions. She comes up with a set of twenty-two documents that typify those a finance professional might see on the job. They include the gamut of Asset, Expense, Liability and Equity, and Revenue transactions. Also included are some documents that are not supposed to be entered in the journal. These \u2018Distracters\u2019 are included because sometimes errant documents occur in real life. The designer then uses the Domain Model features in the Knowledge Workbench to paint a Journal. An entity is created in the Domain Model to represent each transaction and each source document.","Based on the twenty-two documents that the designer chose, she can anticipate errors that the student might make. For these errors, she creates topics of feedback and populates them with text. She also creates topics of feedback to tell the student when they have succeeded. Feedback Topics are created to handle a variety of situations that the student may cause.","The next step is to create profiles that the will trigger the topics in the concept tree (this task is not computational in nature, so the Transformation Component does not need to be configured). A profile resolves to true when its conditions are met by the student's work. Each profile that resolves to true triggers a topic.","To do some preliminary testing on the design, the designer invokes the Student Simulator Test Workbench. The designer can manipulate the Domain Model as if she were the student working in the interface. She drags accounts around to different transactions, indicating how she would like them journalized. She also enters the dollar amounts that she would like to debit or credit each account. She submits her actions to the component engines to see the feedback the student would get if he had performed the activity in the same way. All of this occurs in the test bench without an application interface.","The last step in this phase is low-fi user testing. A test student interacts with a PowerPoint slide or bitmap of the proposed application interface for the Journalization Task. A facilitator mimics his actions in the test bench and tells him what the feedback would be. This simplifies low-fi user testing and helps the designer to identify usability issues earlier in the design when they are much cheaper to resolve.","Build Scenario",{"@attributes":{"id":"p-0311","num":"0399"},"figref":"FIGS. 23 and 24"},"A few passes through these steps will typically be required to get the application communicating correctly with the components. The debug utilities and Regression Test Workbench streamline the process. After the application interface and component communication are functioning as designed, the task is migrated to Usability testing.","Test Scenario","This scenario demonstrates the cycle that the team goes through to test the application. It specifically addresses usability testing, but it is easy to see how the tools also benefit functional and cognition testing. Again, we will use the Journalization Task as an example.  illustrates a test scenario in accordance with a preferred embodiment. The test students work through the journalization activity. One of the students has made it over half way through the task and has just attempted to journalize the sixteenth transaction. The student submits to the Financial Coach, but the feedback comes back blank. The student notifies the facilitator who right-clicks on the Financial Coach's face in the feedback window. A dialog pops up that shows this is the twenty-seventh submission and shows some other details about the submission. The facilitator (or even the student in recent efforts) enters a text description of the problem, and fills out some other fields to indicate the nature and severity of the problem. All the student's work and the feedback they got for the twenty-seven submissions is posted to the User Acceptance Test (UAT) archive database.","The instructional designer can review all the student histories in the UAT database and retrieve the session where the student in question attempted the Journalization Task. The designer then recreates the problem by replaying the student's twenty-seven submissions through the component engines using the Regression Test Workbench. The designer can then browse through each submission that the student made and view the work that the student did on the submission, the feedback the student got, and the facilitator comments, if any. Now the designer can use the debugging tools to determine the source of the problem. In a few minutes, she is able to determine that additional profiles and topics are needed to address the specific combinations of mistakes the student made. She uses the Knowledge Workbench to design the new profiles and topics. She also adds a placeholder and a script for a video war story that supports the learning under these circumstances. The designer saves the new design of the task and reruns the Regression Test Workbench on the student's session with the new task design. After she is satisfied that the new profiles, topics, and war stories are giving the desired coverage, she ships the new task design file to user testing and it's rolled out to all of the users.","This example illustrates how a high effort, uncertain process (that once took days) can be reduced to a few hours using the BusSim Toolset. Cycle time can be reduced dramatically, and complexity, risk and difficulty can be almost eliminated. It shows the sharp contrast with the traditional development approach where new designs and new code can have many unintended consequences that are difficult to test.","Execution Scenario: Student Administration",{"@attributes":{"id":"p-0316","num":"0404"},"figref":"FIG. 25"},"As the student progresses through the course, his performance indicates that his proficiency is growing more rapidly in some areas than in others. Based on this finding, his curriculum is altered to give him additional Tasks that will help him master the content he is having trouble with. Also, Tasks may be removed where he has demonstrated proficiency. While the student is performing the work in the Tasks, every action he takes, the feedback he gets, and any other indicators of performance are tracked in the Student Tracking Database. Periodically, part or all of the tracked data are transmitted to a central location. The data can be used to verify that the student completed all of the work, and it can be further analyzed to measure his degree of mastery of the content.","Execution Scenario: Student Interaction",{"@attributes":{"id":"p-0318","num":"0406"},"figref":"FIG. 26"},"As the student interacts with the interface, all actions are reported to and recorded in the Domain Model. The Domain Model has a meta-model describing a transaction, its data, and what information a journal entry contains. The actions of the student populates the entities in the domain model with the appropriate information. When the student is ready, he submits the work to a simulated team member for review. This submission triggers the Analysis-Interpretation cycle. The Transformation Component is invoked and performs additional calculations on the data in the Domain Model, perhaps determining that Debits and Credits are unbalanced for a given journal entry.","The Profiling Component can then perform rule-based pattern matching on the Domain Model, examining both the student actions and results of any Transformation Component analysis. Some of the profiles fire as they identify the mistakes and correct answers the student has given. Any profiles that fire activate topics in the Remediation Component. After the Profiling Component completes, the Remediation Component is invoked. The remediation algorithm searches the active topics in the tree of concepts to determine the best set of topics to deliver. This set may contain text, video, audio, URLs, even actions that manipulate the Domain Model. It is then assembled into prose-like paragraphs of text and media and presented to the student. The text feedback helps the student localize his journalization errors and understand why they are wrong and what is needed to correct the mistakes. The student is presented with the opportunity to view a video war story about the tax and legal consequences that arise from incorrect journalization. He is also presented with links to the reference materials that describe the fundamentals of journalization.","The Analysis-Interpretation cycle ends when any coach items that result in updates to the Domain Model have been posted and the interface is redrawn to represent the new domain data. In this case, the designer chose to highlight with a red check the transactions that the student journalized incorrectly.","III. The Functional Definition of the ICAT","This section describes the feedback processes in accordance with a preferred embodiment. For each process, there is a definition of the process and a high-level description of the knowledge model. This definition is intended to give the reader a baseline understanding of some of the key components\/objects in the model, so that he can proceed with the remaining sections of this paper. Refer to the Detailed Components of the ICAT for a more detailed description of each of the components within each knowledge model. To gain a general understanding of the ICAT, read only the general descriptions. To understand the ICAT deeply, read this section and the detailed component section regarding knowledge models and algorithms. These processes and algorithms embody the feedback model in the ICAT. There are six main processes in the ICAT, described below and in more detail on the following pages.","Remediation Process Diagram",{"@attributes":{"id":"p-0323","num":"0411"},"figref":"FIG. 27"},"1. Student Interacts with Interface to Create Business Deliverable","Description","The student completes the deliverables of the Task by interacting with the interface objects. These actions may be button clicks, dragging of text, selection of items from a list, etc. An example is the Journalization task shown below.  illustrates a display of journalization transactions in accordance with a preferred embodiment. To interact with the display, the student must journalize the twenty-four transactions presented. To journalize a transaction, the student clicks the \u201cnext\u201d and \u201cprevious\u201d buttons to move between transactions. Once at a transaction, the student clicks and drags an account name from the chart of accounts\u2014which is split into Assets, Liabilities, Revenues and Expenses\u2014onto the debit or credit side of the journal entry. Once the journal entry has been made, the student must type in how much to debit or credit. Each one of these buttons, draggable items, and text fields are interface objects which can be manipulated.","Knowledge Model","Interface Objects","In any GBS Task, the student must manipulate controls on the application interface to complete the required deliverables.  illustrates the objects for the journalization task in accordance with a preferred embodiment.","The following abstract objects are used to model all the various types of interface interactions.","SourceItem","A SourceItem is an object the student uses to complete a task. In the journalization example, the student makes a debit and credit for each transaction. The student has a finite set of accounts with which to respond for each transaction. Each account that appears in the interface has a corresponding SourceItem object. In other words, the items the student can manipulate to complete the task (account names) are called SourceItems.","Source","A Source is an object that groups a set of SourceItem objects together. Source objects have a One-To-Many relationship with SourceItem objects. In the journalization example, there are four types of accounts: Assets, Liabilities and Equity, Revenues, and Expenses. Each Account is of one and only one of these types and thus appears only under the appropriate tab. For each of the Account type tabs, there is a corresponding Source Object.","Target","A Target is a fixed place where students place SourceItems to complete a task. In the journalization example, the student places accounts on two possible targets: debits and credits. The top two lines of the journal entry control are Debit targets and the bottom two lines are Credit targets. These two targets are specific to the twelfth transaction.","TargetPage","A TargetPage is an object that groups a set of Target objects together. TargetPage objects have a One-To-Many relationship with Target objects (just like the Source to SourceItem relationship). In the journalization example, there is one journal entry for each of the twenty-two transactions. For each journal entry there is a corresponding TargetPage object that contains the Debits Target and Credits Target for that journal entry.","2. Reporting Student Actions to the ICAT","Description","As the student manipulates the application interface, each action is reported to the ICAT. In order to tell the ICAT what actions were taken, the application calls to a database and asks for a specific interface control's ID. When the application has the ID of the target control and the SourceItem control, the application notifies the ICAT about the Target to SourceItem mapping. In other words, every time a student manipulates a source item and associates it with a target (e.g., dragging an account name to a debit line in the journal), the user action is recorded as a mapping of the source item to the target. This mapping is called a UserSourceItemTarget.  illustrates the mapping of a source item to a target item in accordance with a preferred embodiment.","3. Student Submits Deliverables to one Team Member","Description","When the student is ready, he submits his work to one of the simulated team members by clicking on the team member's icon. When the ICAT receives the student's work, it calculates how much of the work is correct by concept. Concepts in our journalization activity will include Debits, Credits, Asset Accounts, etc. For each of these concepts, the ICAT will review all student actions and determine how many of the student actions were correct. In order for the ICAT to understand which targets on the interface are associated with each concept, the targets are bundled into target groups and prioritized in a hierarchy.  illustrates target group bundles in accordance with a preferred embodiment. For each target group\u2014or concept, such as debit\u2014a number of aggregate values will be calculated. These aggregate values determine how many student actions were right, wrong or irrelevant.","Knowledge Model","TargetGroup","A TargetGroup object represents a concept being learned. It is a group of Target objects related on a conceptual level. The TargetGroup objects in a Task are arranged in a hierarchy related to the hierarchy of concepts the student must learn. By analyzing the student's responses to the Targets in a TargetGroup, the ICAT can determine how well a student knows the concept. By utilizing the conceptual hierarchy of TargetGroups the ICAT can determine the most appropriate remediation to deliver to help the student understand the concepts.","TargetGroup Hierarchy","The TargetGroup objects in a Task are arranged in a hierarchical tree structure to model the varying specificity of concepts and sub-concepts being learned in the Task. The designer defines the parent-child relationships between the TargetGroups to mimic the relationships of the real world concepts. This hierarchy is used in the determination of the most appropriate feedback to deliver. Concepts that are higher (more parent-like) in the TargetGroup structure are remediated before concepts that are modeled lower (children, grandchildren, etc.) in the tree.  illustrates a TargetGroup Hierarchy in accordance with a preferred embodiment.","In the journalization example, the main concept being taught is journalization. The concept of journalization can be divided into more specific sub-concepts, for example journalizing cash-for-expense transactions and journalizing expense-on-account transactions. These may further be divided as necessary. The designer teaches this conceptual knowledge to the ICAT by creating a TargetGroup called \u201cJournalizing Transactions\u201d with two child TargetGroups \u201cJournalizing Cash for Expense Transactions\u201d and \u201cJournalizing Expense On Account Transactions\u201d. The top-most TargetGroup in the Task, \u201cJournalizing Transactions\u201d contains all of the transactions in the Task. Child target groups will include just the first three transactions and transactions four to twenty.","Therefore when the when the ICAT determines how much of the task is correct, it will calculate values for the first three journal entries and the next sixteen. Calculating these two separate numbers will allow the ICAT to provide specific feedback about the first three and separate feedback about the next sixteen transactions. Here is a section of the target group hierarchy for the journalize task.  illustrates a small section the amount of feedback in accordance with a preferred embodiment. By analyzing the responses to the targets in the each of the targetgroups, we can determine how many of the transactions the student has attempted, whether mistakes were made, what the mistakes were, etc. We can then assemble feedback that is very specific to the way the student completed the deliverables. By analyzing the student's responses to a group of conceptually related requests, we can determine the degree of success with which the student is learning the concept.","4. ICAT Analyzes Deliverables with Rules","Description","After the ICAT has calculated the aggregate values for the student's deliverables, it analyzes the deliverables by attempting to fire all of the Rules for that task. Rules that can fire, activate CoachTopics.  illustrates an analysis of rules in accordance with a preferred embodiment.","5. Select Appropriate Remediation Coach Topics","Description","Once all possible coach topics are activated, a feedback selection analyzes the active pieces of remediation within the concept hierarchy and selects the most appropriate for delivery. The selected pieces of feedback are then assembled into a cohesive paragraph of feedback and delivered to the student.  illustrates a feedback selection in accordance with a preferred embodiment.","Feedback Selection Algorithm","After the ICAT has activated CoachTopics via Rule firings, the Feedback Selection Algorithm is used to determine the most appropriate set of CoachItems (specific pieces of feedback text associated with a CoachTopic) to deliver. The Algorithm accomplishes this by analyzing the concept hierarchy (TargetGroup tree), the active CoachTopics, and the usage history of the CoachItems.  is a flowchart of the feedback logic in accordance with a preferred embodiment. There are five main areas to the feedback logic which execute sequentially as listed below. First, the algorithm looks through the target groups and looks for the top-most target group with an active coach topic in it. Second, the algorithm then looks to see if that top-most coach item is praise feedback. If it is praise feedback, then the student has correctly completed the business deliverable and the ICAT will stop and return that coach item. Third, if the feedback is not Praise, then the ICAT will look to see if it is redirect, polish, mastermind or incomplete-stop. If it is any of these, then the algorithm will stop and return that feedback to the user. Fourth, if the feedback is focus, then the algorithm looks to the children target groups and groups any active feedback in these target groups with the focus group header. Fifth, once the feedback has been gathered, then the substitution language is run which replaces substitution variables with the proper names.","Once the ICAT has chosen the pieces of feedback to return, the feedback pieces are assembled into a paragraph. With the paragraph assembled, the ICAT goes through and replaces all variables. There are specific variables for SourceItems and Targets. Variables give feedback specificity. The feedback can point out which wrong SourceItems were placed on which Targets. It also provides hints by providing one or two SourceItems which are mapped to the Target.","IV. The ICAT Development Methodology for Creating Feedback","The Steps Involved in Creating Feedback","The goal of feedback is to help a student complete a business deliverable. The tutor needs to identify which concepts the student understands and which he does not. The tutor needs to tell the student about his problems and help him understand the concepts.","There are seven major steps involved in developing feedback for an application.","First, creating a strategy\u2014The designer defines what the student should know.","Second, limit errors through interface\u2014The designer determines if the interface will identify some low level mistakes.","Third, creating a target group hierarchy\u2014The designer represents that knowledge in the tutor.","Fourth, sequencing the target group hierarchy\u2014The designer tells the tutor which concepts should be diagnosed first.","Fifth, writing feedback\u2014The designer writes feedback which tells the student how he did and what to do next.","Sixth, writing Levels of Feedback\u2014The designer writes different levels of feedback in case the student makes the same mistake more than once.","Seventh, writing rules\u2014The designer defines patterns which fire the feedback.","Creating a Feedback Strategy","A feedback strategy is a loose set of questions which guide the designer as he creates rules and feedback. The strategy describes what the student should learn, how he will try and create the business deliverable and how an expert completes the deliverable. The goal of the application should be for the student to transition from the novice model to the expert model.","What Should the Student Know After Using the Application?","The first task a designer needs to complete is to define exactly what knowledge a student must learn by the end of the interaction. Should the student know specific pieces of knowledge, such as formulas? Or, should the student understand high level strategies and detailed business processes? This knowledge is the foundation of the feedback strategy. The tutor needs to identify if the student has used the knowledge correctly, or if there were mistakes. An example is the journal task. For this activity, students need to know the purpose of the journalizing activity, the specific accounts to debit\/credit, and how much to debit\/credit. A student's debit\/credit is not correct or incorrect in isolation, but correct and incorrect in connection with the dollars debited\/credited.","Because there are two different types of knowledge\u2014accounts to debit\/credit and amounts to debit\/credit\u2014the feedback needs to identify and provide appropriate feedback for both types of mistakes.","How Will a Novice Try and Complete the Task?","Designers should start by defining how they believe a novice will try and complete the task. Which areas are hard and which are easy for the student. This novice view is the mental model a student will bring to the task and the feedback should help the student move to an expert view. Designers should pay special attention to characteristic mistakes they believe the student will make. Designers will want to create specific feedback for these mistakes. An example is mixing up expense accounts in the journal activity. Because students may mix up some of these accounts, the designer may need to write special feedback to help clear up any confusion.","How Does an Expert Complete the Task?","This is the expert model of completing the task. The feedback should help students transition to this understanding of the domain. When creating feedback, a designer should incorporate key features of the expert model into the praise feedback he writes. When a student completes portion of the task, positive reinforcement should be provided which confirms to the student that he is doing the task correctly and can use the same process to complete the other tasks.","These four questions are not an outline for creating feedback, but they define what the feedback and the whole application needs to accomplish. The designer should make sure that the feedback evaluates all of the knowledge a student should learn. In addition, the feedback should be able to remediate any characteristic mistakes the designer feels the student will make. Finally, the designer should group feedback so that it returns feedback as if it were an expert. With these components identified, a designer is ready to start creating target group hierarchies.","Limit Errors Through Interface","When the designer defines a feedback strategy, the designer defines the skills he wants the student to learn and the mistakes he thinks the student will make. Not all of the mistakes need to be corrected with ICAT generated feedback, some can be limited with or remediated through the interface. Limiting mistakes with the interface simply means that the system pops-up a message as the student works, identifying a mistake. An example interface corrected error is in the journalization activity when the interface points out that debits do not equal credits. Here, this is a low level mistake which is more appropriate to remediate through the interface than through the ICAT. The application simply check to see if the debit number equal the credit number and if they do not then the system message is returned.  illustrates an example of separating out some mistakes for the interface to catch and others for the ICAT to catch has positive and negative impacts in accordance with a preferred embodiment.","Positive","The most obvious reason for eliminating mistakes through the interface is that can be easier for the designer and developer to catch them at this level than to leave them for the ICAT.","Negative","The reason to avoid interface-driven feedback is that it splinters the feedback approach which can make the job of creating a coherent feedback approach more difficult.","Because there are positive and negative repercussions, designers need to select the when to remediate through the interface carefully. The criteria for making the decision is if the mistake is a low level data entry mistake or a high level intellectual mistake. If the mistake is a low level mistake, such as miss-typing data, it may be appropriate to remediate via the interface. If the designer decides to have the interface point out the mistakes, it should look as if the system generated the message. System generated messages are mechanical checks, requiring no complex reasoning. In contrast, complex reasoning, such as why a student chose a certain type of account to credit or debit should be remediated through the ICAT.","System Messages","It is very important that the student know what type of remediation he is going to get from each source of information. Interface based remediation should look and feel like system messages. They should use a different interface from the ICAT remediation and should have a different feel. In the journalization task described throughout this paper, there is a system message which states \u201cCredits do not equal debits.\u201d This message is delivered through a different interface and the blunt short sentence is unlike all other remediation.","The motivation for this is that low level data entry mistakes do not show misunderstanding but instead sloppy work. Sloppy-work mistakes do not require a great deal of reasoning about why they occurred instead, they simply need to be identified. High-level reasoning mistakes, however, do require a great deal of reasoning about why they occurred, and the ICAT provides tools, such as target groups, to help with complex reasoning. Target group hierarchies allow designers to group mistakes and concepts together and ensure that they are remediated at the most appropriate time (i.e., Hard concepts will be remediated before easy concepts). Timing and other types of human-like remediation require the ICAT; other low-level mistakes which do not require much reasoning include:","Incomplete","If the task requires a number of inputs, the interface can check that they have all been entered before allowing the student to proceed. By catching empty fields early in the process, the student may be saved the frustration of having to look through each entry to try and find the empty one.","Empty","A simple check for the system is to look and see if anything has been selected or entered. If nothing has been selected, it may be appropriate for the system to generate a message stating \u201cYou must complete X before proceeding\u201d.","Numbers not Matching","Another quick check is matching numbers. As in the journalization activity, is often useful to put a quick interface check in place to make sure numbers which must match do. Small data entry mistakes are often better remediated at the interface level than at the tutor or coach level (when they are not critical to the learning objectives of the course).","There are two main issues which must be remembered when using the interface to remediate errors. First, make sure the interface is remediating low level data entry errors. Second, make sure the feedback looks and feels different from the ICAT feedback. The interface feedback should look and feel like it is generated from the system while the ICAT feedback must look as if it were generated from an intelligent coach who is watching over the student as he works.","Creating the Target Group Hierarchy","Target groups are sets of targets which are evaluated as one. Returning to the severity principle of the feedback theory, it is clear that the tutor needs to identify how much of the activity the student does not understand. Is it a global problem and the student does not understand anything about the activity? Or, is it a local problem and the student simply is confused over one concept? Using the feedback algorithm described earlier, the tutor will return the highest target group in which there is feedback. This algorithm requires that the designer start with large target groups and make sub-groups which are children of the larger groups. The ICAT allows students to group targets in more than one category. Therefore a debit target for transaction thirteen can be in a target group for transaction thirteen entries as well as a target group about debits and a target group which includes all source documents. Target should be grouped with four key ideas in mind. Target groups are grouped according to:","Concepts taught","Interface constraints","Avoidance of information overload","Positive reinforcement","The most important issue when creating target groups is to create them along the concepts students need to know to achieve the goal. Grouping targets into groups which are analogous to the concepts a student needs to know, allows the tutor to review the concepts and see which concepts confuse the student. As a first step, a designer should identify in an unstructured manner all of the concepts in the domain. This first pass will be a large list which includes concepts at a variety of granularities, from small specific concepts to broad general concepts. These concepts are most likely directly related to the learning objectives of the course.","With all of the concepts defined, designers need to identify all of the targets which are in each target group. Some targets will be in more than one target group. When a target is in more than one target group, it means that there is some type of relationship such as a child relationship or a part to whole relationship. The point is not to create a structured list of concepts but a comprehensive list. Structuring them into a hierarchy will be the second step of the process.","In the journalization activity, the largest concept is the recording a transaction. Other important ideas are debits and credits. Debit and credit targets, however, are included in the overall transaction target group which means that it is either a part-whole relationship or a child relationship.  is a block diagram of the hierarchical relationship of a transaction in accordance with a preferred embodiment.","Concepts Taught: Part-whole Concepts","With all of the target groups laid out, the designer needs to identify the relationships between concepts. One type of relationship is the part-whole relationship. Part-whole relationships\u2014as the name denotes\u2014identified which sub-components make up larger concepts. Identifying these relationships is important because the tutor will want to see if the student does not understand the whole concept or just one part. If there are no major errors in the concept as a whole, then the tutor will look to see if the student made any major errors in one part of the concept.","Example:","In the journalizing activity, there will be a target group called transaction. In transaction, there are two parts: debits and credits. When the tutor reviews the student's work, if there are no problems with the target group transactions, then the tutor will go to the next level and look for errors in the target group debits and credits. Because debits and credits are included in an overall transaction, there is a part-whole relationship to the concept transaction.","Concept Taught: Child Concepts","In addition to part-whole relationships, designers need to identify child-parent relationships. In contrast to part-whole relationships, child-parent relationships define instances of abstract concepts. An example is \u201cThe dictionary is a book\u201d. \u201cDictionary\u201d is a child concept to \u201cbook\u201d. The \u201cdictionary\u201d concept has all of the attributes of the \u201cbook\u201d concept, and it is an instance of the concept which means that it contains extra attributes. Students may understand the concept in general but may be confused about a particular instance.","Example:","In the journalization activity, the concept transaction can be broken down into two sections: the debit and the credit. And each of those can be specialized into specialization categories, such as a credit to \u201cAccounts payable\u201d. Students may not be confused about debits but the instance \u201cAccounts Payable\u201d.","Interface Constraints","Interface Constraint: Business Deliverable","When creating target group hierarchies, designers need to consider the type of deliverable the student is creating. For each of the sections of the deliverable, the designer needs to create a target group. The target groups should contain an orderly structure, such as moving from top to bottom. Reviewing the deliverable in the order it is created structures the critique so that students know where to look next, after receiving feedback. In the current Intelligent Tutoring Agent, this structuring of feedback around the student-created deliverable can be accomplished in two ways. First, the designer can make every section of the deliverable a target. In addition, the designer can make some sections targets and some modifying attributes. Modifying attributes can be remediated on specifically, or in conjunction with the target.","In the journalization activity, the sections of the product\u2014the journal entry\u2014mirrors the concepts involved\u2014debits and credits. But there are a few extra items on the journal which are (in most cases) not involved in the main concepts being taught, and these are the dollar amounts to be journalized. The dollar amounts which are journalized are associated with the journal entry as an attribute. Attributes modify the source item (account name), which makes it possible to tell if the source item is correct alone or with the attribute attached. As a designer, feedback should be created which takes all of this into account. Students should be told if they have the journal entry correct and the amount wrong, or if they have the whole thing wrong.","Interface Constraint: Screen Space","Many times one concept will span many sections of the interface. It is important to group the target groups so that they are interface specific. Therefore, even though one product may span multiple interfaces, the target groups should be centered around the interfaces so that the students receive feedback only about what they can see.","In the journalization activity, the sections of the deliverable\u2014the collection of journal entries in the ledger\u2014span many separate interfaces. Each source document must be seen individually. Therefore, some target groups are organized across all source documents\u2014such as all debits\u2014and others are specific to the individual source documents\u2014such as that source document's debits. The target group's hierarchy must include a section for across source documents\u2014across interfaces\u2014and those within one source document\u2014one interface.","Information Overload","As with any real-life tutor, you do not want to give too much information for the student to digest at once. If there are twenty-five problems, the tutor should not give feedback about all errors simultaneously. Instead, the tutor should give feedback about just two or three things which the student can correct before asking for more feedback.","In the journalization activity, there are a limited number of targets on the interface at one time\u2014one debit and one credit. But if it were the whole General Ledger, it could have too many pieces of feedback for the student to digest at once and could overwhelm the student. In this case, the designer should scale the feedback so that just a handful come back at once. This is best done by having small target groups defined, but can also be done by identifying to the tutor how many different pieces of remediation are appropriate to deliver at one time.","Positive Reinforcement","In addition to creating target groups which are small in size, designers may want to create target groups which evaluate the first few steps a student makes. These early target groups will allow the student to see if he is on track and understand the goal of the interaction. This is, in general, a good remediation strategy, but may not be relevant in all learning situations.","In the journalization activity, there are twenty source documents to journalize. Students should NOT be encouraged to ask for feedback at every step, but when they have completed all of their work. This will ensure that students try and learn all of the information first and not rely completely on the hints of the tutor. But, target groups defined for just the first three entries allow for feedback and hints to be provided at the onset of the task, diminishing once these entries are correct.","Sequencing the Target Group Hierarchy","For feedback to be as effective as possible, it needs to provide the right information at the right time. If feedback is given too early, it is confusing; if feedback is given too late it is frustrating. In the ICAT, feedback is returned according to Target Groups. The tutor will look at the highest target group, if there is no feedback in that target group, the tutor will look at the children target groups in order of priority.",{"@attributes":{"id":"p-0387","num":"0475"},"figref":["FIG. 39","FIG. 39"],"b":["1","1","1"]},"Positive Reinforcement First","Designers should identify the first few components a student will try and complete first and sequences them first. This target group will evaluate just the first few moves a student makes and will tell him how he is doing and how to apply the knowledge gained from the first few steps to the rest of the work he has to do.","In the journalization activity, students need to have reinforcement that they are on the right track before trying all of the journal entries. Therefore, the first three are grouped together and students can feedback on how they completed this sub-group before having to complete the rest. Completing this subsection gives students the positive reinforcement they need to complete the rest.","Easy Before Hard","If all of the target groups are of equivalent size, designers need to sequence easier concepts before more complicated concepts. By placing easier concepts first, a student will gain confidence in their understanding of the domain and in their ability to complete the deliverable. In addition, most complicated concepts are built on easier ones so that presenting easier concepts first will allow the student to gain the experience they need to complete the most complicated concepts. In the journalization activity, two legged journal entries are inherently easier than three legged and four legged journal entries. Therefore when a designer must sequence target groups of equal size, the designer should sequence the two legged journal entries before the three and four legged entries.","First Things First","Besides sequencing easier concepts before hard concepts, another strategy is to sequence target groups in order that they need to be completed. If completing one section of the deliverable is a prerequisite for completing another section of the deliverable, it makes sense to sequence those targets first. In the journalization activity, a source document needs to be journalized in terms of the account name and in terms of the dollar amount. However, the account name must be identified before the amount is entered. It makes no difference whether the dollar figure of the account is right or wrong, until the student has the correct account name.","Writing Feedback","Creating and structuring target group hierarchies determines what is evaluated and the order the feedback is returned. Once the hierarchy has been created and structured, designers need to write feedback which will help the student complete his goal. Going back to the goals of the tutor as educator, feedback needs to accomplish the following goals:","Identify concepts students do not understand","Identify student mistakes","Prompt students to reflect on their mistakes","Reinforce correct concepts and ideas","These goals can be thought of in two sections. The first two are evaluative and the second two are instructive. Evaluation and instruction are two of the three main components of a piece of feedback text. The third component is Scope. These three components are described in more detailed below, beginning with Scope, as it is generally the first portion of a piece of feedback text.","What the Feedback is Evaluating (Scope)","The most important information feedback provides a student is what the tutor is reviewing. In most instances, the student will have completed lots of different actions before asking the tutor to review his work. Because the student has completed a lot of different actions, the tutor first needs to describe what portion of the activity or deliverable is being reviewed. There are generally three ways to scope what the tutor is reviewing.","All Work","The tutor is looking at everything the student did. Some instances when feedback should look at everything the student has done are praise level feedback and redirect level feedback. I looked at all of the journal entries and there are problems in many of them. Why don't you . . . .","A Localized Area of Work","The tutor is looking at a subset of work the student completed. The greatest use of localized scoping if focus feedback. The feedback is focusing the student on one area of difficulty and asking him to correct it. I am looking at the first five journal entries you made, and here are the first three problems I found. The first . . .","A Specific Problem or Error","The tutor is focusing on one error and\/or problem and helping the student understand that error. Specific problem scoping is good for classic mistakes a student may make and the designer may want to remediate. In the first journal entry, you incorrectly debited Accounts Payable. Review that transaction . . .","How the Student Did (Evaluation)","The second section of the feedback text should describe how the student did. This is where the severity principle is applied and the feedback is either redirect, focus, polish or praise.","Redirect","Redirect feedback is appropriate for very severe errors: severe mistake sand misconceptions. This degree of severity can be assessed aggregately by recognizing there are problems throughout the student's work or it can be done specifically by recognizing some basic items are incorrect.","Example:","I am looking at the first five journal entries you made, and there are problems in most of them. Why don't you . . . I am looking at the first five journal entries you made, and you have made some basic mistakes with debits and credits. Why don't you . . .","Focus","Focus feedback is appropriate for localized mistakes or misconceptions. Focus level mistakes can be identified aggregately by identifying an area in which there are a number of mistakes or specifically by identifying that some of the building block ideas are wrong.","Example:","I am looking at the first five journal entries you made, and there are problems in many of the debits. Why don't you . . .","I am looking at the first five journal entries you made, I see problems when transactions are \u201con account\u201d. Why don't you . . .","Polish","Polish level feedback is for syntactic problems. Student understand the main ideas and have no local problems. There may be just one or two mistakes the student has made. Polish feedback should specify where the mistake is.","Example:","I am looking at the first five journal entries you made, and the third journal entry has the debit incorrect. Why don't you . . .","Praise","Praise level feedback is reserved for instances of \u201ccorrectness\u201d; the deliverable is correct and ready to be used in the business.","Example:","I am looking at the first five journal entries you made, and they are all correct. remember . . .","Mastermind","Mastermind feedback is reserved for instances where the student is not trying to learn a topic but trying to cheat his way through by repeatedly asking for feedback. The feedback needs to be written so that the student recognizes that the tutor wants more work completed before providing feedback.","Example:","You have not changed much of your work since the last time you asked me to review it. Review . . .","Incomplete","Incomplete feedback is reserved for instances where the student has not completed all of the required work. It should be remembered that sometimes it is desired to give substantive feedback before everything is complete so the student learns the process and concepts before trying to complete the whole deliverable.","Example:","You have not done all of your work. I would like you to try completing all journal entries before asking for my review.","What the Student Should Do Next (Instruction)","The final piece of information the student needs is what to do next. The student knows what the tutor reviewed and knows how he performed. The only thing the student does not know is what to do next. The type of instruction does not have to correspond with the severity of the error. The instructions can be mixed and matched with the type of error. Some of the actions a student could be asked to perform are as follows.","Review the General Concept","If the tutor recognizes that there are many errors throughout the deliverable, the tutor may suggest that the student go through a review of the supporting materials provided to gain an understanding of the ideas and skills needed to complete the task.","Example:","There are problems in many journal entries, why don't you review how to journalize transactions and then review your journal entries.","Review a Section of the Student's Work","If the student has many errors in one section, then the tutor may suggest that the student go and review that section of their work.","Example:","There are problems in the first five journal entries, why don't you review them.","Review Work with a Hint","If there is a certain idea or concept which the tutor believes the student does not understand, then the tutor may give a hint in the form of a question or statement for the student to think about before trying to fix the problems.","Example:","There are problems in the first five journal entries. It looks like you have made some errors with the expense debits. Remember that expenses are not capitalized. Why don't you review the first five journal entries looking for journal entries which contained incorrect debits to expense accounts.","Review Work Looking for Type of Error","If there is a specific type of error that the student has made throughout his work, then the tutor may tell the student the specific type of error and ask him to go through his work correcting this error.","Example:","There are problems in the first five journal entries. You have switched all of your journal entries on account debits. Why don't you go and fix them.","Review Work Looking for Specific Error","If there is a specific error that the student has committed, the tutor may tell the student the specific error committed and where the error is.","Example:","There is a problem with your third journal entry. The debit should not be \u201cAccounts Payable.\u201d","Review work because it is correct and the student will want to use this analysis technique in the future.","Example:","Your first three journal entries are correct. Remember that the major distinction between paying for something \u201cOn Account\u201d or in cash. This is a distinction you will need to make in the future.","Do More Work","If it can be determined that the student is simply asking for feedback to \u201cCheat\u201d his way through the course, feedback should be provided to tell the student that he needs to try and correct many more entries before receiving substantive feedback.","Example:","You have not changed much of your work since the last time you asked me to review it. Please review all of your journal entries and correct many of them.","Complete Your Work","When it can be determined that all of the work which should be complete is not, the feedback needs to tell the student to complete the work required.","Example:","You have not completed all of your work. I would like you to try completing all journal entries before asking for my review.","Writing Levels of Feedback","Even with effective feedback, students will often make the same types of mistakes again or in different situations. The question is what to tell the student the second time he makes the same or similar mistakes. We assume that telling the student the same thing over and over is not the right answer. Therefore instead of telling the student the same thing, the feedback cycles to a lower, or secondary, level. At this time, we believe that three levels of feedback is appropriate for most instances. If the target group is particularly complex, however, additional levels of feedback may be required.","First Level of Feedback","The first level of feedback should focus more on telling the student what is wrong and letting the student try and figure it out on his own. Therefore using the paradigm described above, the student should be told what the tutor is reviewing, how he did and asked to retry it or referred to some reference which could be used to find the answer.","Example:","There are problems in many journal entries. Why don't you review how to journalize transactions and then review your work.","Second Level of Feedback","The second level of feedback should give hints and provide pieces of the puzzle. I can be assumed that students cannot figure out the problem on their own and need some help. It is appropriate at this point to ask the student to review their work with a specific hint in mind or with a question to think about. Also, if there are specific points in the reference system to review, this is the time to provide them.","Example:","There are problems in the first five journal entries. It looks like you have made some errors with expense debits. Remember that expenses are not capitalized. Why don't you review the first five journal entries looking for journal entries which contain incorrect debits to expense accounts.","Third Level of Feedback","The third level of feedback is appropriate for examples. Use the parameter substitution language to insert an example of an error they made into the feedback. Walk the student through the thought process he should use to solve the problem and provide and example of how they did the work right and how they did the work wrong.","Example:","There are problems in many of your journal entries. It looks like you have made some errors distinguishing between \u201con account\u201d and \u201ccash\u201d credits. In particular, you characterized journal entry # as a cash purchase when in fact it is an \u201con account\u201d purchase. Remember bills which are not paid immediately are paid on account.","Writing Rules","With the hierarchies created and sequenced and the feedback written, the designer is ready to write rules. Rules fire the particular pieces of feedback the student reads. To write effective rules, designers must realize the piece of feedback and the rule are one and the same. The only difference is the language used. The feedback is written in English and the rules are written as patterns.","Example Rule:","If the student has attempted all of the first three journal entries","And they all contain at least one mistake","Then provide feedback \u201cIn the first three journal entries you have made at least one mistake in each. Why don't you review them and see if you can find the mistakes.\u201d","In the above example, the rules has two conditions (attempt all three journal entries and have at least one mistake in each). The feedback is an explicit statement of that rule. The feedback states \u201cIn the first three journal entries you have made at least one mistake in each. Why don't you review them and see if you can find any mistakes.\u201d","The rule and the feedback are exactly the same. Keeping the rules and the feedback tightly linked ensures that the student receives the highest quality feedback. The feedback exactly explains the problem the rules found. If the feedback is more vague than the rule, then the students will not understand the exact nature of the problem. The feedback will simply hint at it. If the feedback is more specific than the rule, students will become confused. The student may not have made the specific error the feedback is referring to under the umbrella rule.","Types of Rules","Because the rules need to map to the feedback, there will be six types of rules associated with the six types of feedback: Praise, Polish, Focus, and Redirect, along with Mastermind and Incomplete.","Praise","Praise rules need to look for one hundred percent correct and NO errors. If the rule does not explicitly look for no errors, the rule will also fire when the student has all of the right answers but also some of the wrong ones.","If 100% of the targets in the first three journal entries are correct","And they all contain no mistakes","Then provide praise feedback","Praise rules can be applied in many places other than the highest task level. Praise rules can fire for instances where a student got an item right. In general, these rules should be written for any instance which poses a difficult problem and a student may need reinforcement as to how to complete the process and complete the deliverable.","Polish","Polish rules need to fire when almost everything in the target group is correct and the student is making small and insignificant mistakes.","If 80%-99% of the targets in the first three journal entries are correct","And the first three journal entries have been tried","Then provide polish feedback","This polish rule shows two things. First, the rule is scoped so that it will not fire when any of the first three journal entries have not been attempted. In addition, the rule will not fire if all of the journal entries are 100% correct. With these boundaries in place the rule will only fire when the student has attempted all of the first three journal entries and they are 80%-99% correct. Note: The determination of the exact percentages which must be correct to receive \u201cpolish\u201d versus \u201cfocus\u201d or \u201credirect\u201d feedback will be determined by the designer, and are most likely specific to the particular task being completed.","Focus","Focus rules are the most common type of rule. Focus rules should fire when the student knows enough to complete the task but not enough to get the task correct.","If 40%-79% of the targets in the first three journal entries are correct","And the first three journal entries have been tried","Then provide focus feedback","This focus rule also shows scoping. The rules are scoped to fire between 40% and 79%. Below 40% is redirect and above 79% is polish. The rule also fires only when all of the required work has been attempted.","Redirect","Redirect rules should fire when it is clear that the student does not have a good understanding of how to complete the task. This is evidenced by a significant number of errors found in the student's work.","If less than 40% of the first three journal entries are correct","And the first three journal entries have been tried.","Then provide redirect feedback","This redirect rule is to catch those who are truly lost. If the student has tried to complete all of the work, and they are less than 40% correct, then they need a great deal of help to continue the task.","Mastermind","Mastermind rules need to track down situations when the student is simply trying to cheat his way through the application.","If less than 40% of the first three journal entries are correct","And the student has made only one change twice in a row.","Then provide mastermind feedback","This mastermind rule catches those who are making one change, asking for feedback over and over. One thing to keep in mind is that as a student gets towards praise they need to make small changes and then ask for feedback. To allow this, the above rule is scoped so that if the student has more than 40% of the work right the rule will not fire.","Incomplete","In many activities the student should try and complete most if not all of the work before asking for feedback. One of the goals of many training applications is to mimic the real world, and it is rare for an employee to ask for a review after every little step they complete. Most employers want to see a significant amount of work done before asking for a review.","If all of journal entries have NOT been tried,","Then provide incomplete feedback","Forcing a student to attempt all of his work first will require him to gain confidence in his ability to complete the work. Therefore, incomplete rules should be used after baby-step feedback so that students feel that they have the tools and ability to complete the whole task before asking for feedback.","Principles of Rule Design","There are a couple of general rules which make rule creation and maintenance easier.","Use Percentages Whenever Possible","It may seem easier at the time to write rules which look for specific numbers of right and wrong items. But when a rule is written which looks for a specific number, it means that if the data ever changes, you will need to get back into that rule and tweak it so that it still fires at the right time. It is far better to write percentage rules which fire whenever a certain percentage of work is either right or wrong. Then if the data ever changes and more right answers are added or some removed, then the rules may not need to be rewritten.","Scope the Rules as Tightly as Possible","As stated previously, it is very important to make the rules mirror the written feedback. If the feedback is vaguer than the rule, then the students will not understand the exact nature of the problem. The feedback will simply hint at it. If the feedback is more specific than the rule, students will become confused. The student may not have made the specific error the feedback is referring to under the umbrella rule.","Data Dictionary In Accordance With","A Preferred Embodiment",{"@attributes":{"id":"p-0480","num":"0568"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Domain Knowledge Model Data Dictionary"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Column","Type","Len","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Source",{},{},{}]},{"entry":["SourceID","Counter",{},"Unique key for this table"]},{"entry":["Source","String","50","Name of this object"]},{"entry":["SourceDesc","String","255","Documentation String that"]},{"entry":[{},{},{},"appears with this object in"]},{"entry":[{},{},{},"auto-documentation reports"]},{"entry":["SourceCaption","String","50","String that can be dynamically"]},{"entry":[{},{},{},"embedded into feedback text"]},{"entry":[{},{},{},"using Parameter Substitution"]},{"entry":[{},{},{},"Language (PSL)"]},{"entry":"SourceItem"},{"entry":["SourceItemID","Counter",{},"Unique key for this table"]},{"entry":["SourceItem","String","50","Name of this Object"]},{"entry":["SourceItemDesc","String","255","Documentation String that"]},{"entry":[{},{},{},"appears with this object in"]},{"entry":[{},{},{},"auto-documentation reports"]},{"entry":["SourceItemText","String","50","String that Can be dynamically"]},{"entry":[{},{},{},"embedded into feedback text"]},{"entry":[{},{},{},"using Parameter Substitution"]},{"entry":[{},{},{},"Language (PSL)"]},{"entry":"TargetPage"},{"entry":["TargetPageID","Counter",{},"Unique key for this table"]},{"entry":["TargetPage","String","50","Name of this object"]},{"entry":["TargetPageDesc","String","255","Documentation String that"]},{"entry":[{},{},{},"appears with this object in"]},{"entry":[{},{},{},"auto-documentation reports"]},{"entry":["TargetPage-","String","50","String that Can be dynamically"]},{"entry":["Caption",{},{},"embedded into feedback text"]},{"entry":[{},{},{},"using Parameter Substitution"]},{"entry":[{},{},{},"Language (PSL)"]},{"entry":"Target"},{"entry":["TargetID","Counter",{},"Unique key for this table"]},{"entry":["Target","String","50","Name of this object"]},{"entry":["TargetDesc","String","255","Documentation String that"]},{"entry":[{},{},{},"appears with this object in"]},{"entry":[{},{},{},"auto-documentation reports"]},{"entry":["TargetCaption","String","50","String that Can be dynamically"]},{"entry":[{},{},{},"embedded into feedback text"]},{"entry":[{},{},{},"using Parameter Substitution"]},{"entry":[{},{},{},"Language (PSL)"]},{"entry":"SourceItem-"},{"entry":"Target"},{"entry":["SourceItemID","Long",{},"SourceItemID of the"]},{"entry":[{},{},{},"association"]},{"entry":["TargetID","Long",{},"TargetID of the association"]},{"entry":["Relevance","Float",{},"Value between \u22121 and 1 that"]},{"entry":[{},{},{},"indicates the relative relevance"]},{"entry":[{},{},{},"of this association between a"]},{"entry":[{},{},{},"SourceItem and a Target. A"]},{"entry":[{},{},{},"negative value indicates that"]},{"entry":[{},{},{},"this association is incorrect. A"]},{"entry":[{},{},{},"positive value indicates that it"]},{"entry":[{},{},{},"is correct. A value of zero"]},{"entry":[{},{},{},"indicates that this association is"]},{"entry":[{},{},{},"irrelevant."]},{"entry":"Attribute"},{"entry":["SourceItemID","Long",{},"SourceItemID of the"]},{"entry":[{},{},{},"association"]},{"entry":["TargetID","Long",{},"TargetID of the association"]},{"entry":["AttributeID","Counter",{},"Unique key for this table"]},{"entry":["Attribute","String","50","Name of this object"]},{"entry":["CorrectInd","Bool",{},"Boolean value that indicates"]},{"entry":[{},{},{},"whether this Attribute is"]},{"entry":[{},{},{},"correct or incorrect for this"]},{"entry":[{},{},{},"association of SourceItem and"]},{"entry":[{},{},{},"Target"]},{"entry":["AttributeMin","Double",{},"The lower bound for the range"]},{"entry":[{},{},{},"of this attribute."]},{"entry":["AttributeMax","Double",{},"The upper bound for the range"]},{"entry":[{},{},{},"of this attribute."]},{"entry":"ControlSource-"},{"entry":"Item"},{"entry":["ModuleName","String","50","Name of module the control is"]},{"entry":[{},{},{},"on"]},{"entry":["ControlName","String","50","Name of Control the"]},{"entry":[{},{},{},"SourceItem is mapped to"]},{"entry":["ItemNo","Integer",{},"A single control may be"]},{"entry":[{},{},{},"mapped to multiple"]},{"entry":[{},{},{},"SourceItems depending on how"]},{"entry":[{},{},{},"it is viewed. If one control is"]},{"entry":[{},{},{},"used on four different tabs to"]},{"entry":[{},{},{},"show four different values, the"]},{"entry":[{},{},{},"ItemNo will change as the tabs"]},{"entry":[{},{},{},"change, but the ControlName"]},{"entry":[{},{},{},"will stay the same."]},{"entry":["SourceItemID","Long",{},"ID of SourceItem that this"]},{"entry":[{},{},{},"control is mapped to"]},{"entry":["Start","Integer",{},"For controls that contain text,"]},{"entry":[{},{},{},"this is the start position of the"]},{"entry":[{},{},{},"text that the SourceItem is"]},{"entry":[{},{},{},"associated with."]},{"entry":["End","Integer",{},"For controls that contain text,"]},{"entry":[{},{},{},"this is the end position of the"]},{"entry":[{},{},{},"text that the SourceItem is"]},{"entry":[{},{},{},"associated with."]},{"entry":["TaskID","Long",{},"This is the TaskID the module"]},{"entry":[{},{},{},"is in"]},{"entry":["Description","Text","255","Comment Information that can"]},{"entry":[{},{},{},"appear in the generated"]},{"entry":[{},{},{},"documentation reports."]},{"entry":"ControlTarget"},{"entry":["ModuleName","String","50","Name of module the control is"]},{"entry":["ControlName","String","50","Name of Control the"]},{"entry":[{},{},{},"SourceItem is mapped to"]},{"entry":["ItemNo","Integer",{},"A single control may be"]},{"entry":[{},{},{},"mapped to multiple Targets"]},{"entry":[{},{},{},"depending on how it is viewed."]},{"entry":[{},{},{},"If one control is used on four"]},{"entry":[{},{},{},"different tabs to show four"]},{"entry":[{},{},{},"different values, the ItemNo"]},{"entry":[{},{},{},"will change as the tabs change,"]},{"entry":[{},{},{},"but the ControlName will stay"]},{"entry":[{},{},{},"the same."]},{"entry":["TargetID","Long",{},"ID of Target that this control is"]},{"entry":[{},{},{},"mapped to"]},{"entry":["Start","Integer",{},"For controls that contain text,"]},{"entry":[{},{},{},"this is the start position of the"]},{"entry":[{},{},{},"text that the Target is"]},{"entry":[{},{},{},"associated with."]},{"entry":["End","Integer",{},"For controls that contain text,"]},{"entry":[{},{},{},"this is the end position of the"]},{"entry":[{},{},{},"text that the Target is"]},{"entry":[{},{},{},"associated with."]},{"entry":["TaskID","Long",{},"This is the TaskID the module"]},{"entry":[{},{},{},"is in"]},{"entry":["Description","Text","255","Comment Information that can"]},{"entry":[{},{},{},"appear in the generated"]},{"entry":[{},{},{},"documentation reports."]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0481","num":"0569"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Student Data Model Data Dictionary"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Column","Type","Len","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Student",{},{},{}]},{"entry":["SourceID","Counter",{},"Unique key for this table"]},{"entry":["Source","String","50","Name of this object"]},{"entry":["SourceDesc","String","255","Documentation String that"]},{"entry":[{},{},{},"appears with this object in"]},{"entry":[{},{},{},"auto-documentation reports"]},{"entry":["SourceCaption","String","50","String that Can be"]},{"entry":[{},{},{},"dynamically embedded into"]},{"entry":[{},{},{},"feedback text using Parameter"]},{"entry":[{},{},{},"Substitution Language (PSL)"]},{"entry":"StudentSubmission"},{"entry":["SourceItemID","Counter",{},"Unique key for this table"]},{"entry":["SourceItem","String","50","Name of this Object"]},{"entry":["SourceItemDesc","String","255","Documentation String that"]},{"entry":[{},{},{},"appears with this object in"]},{"entry":[{},{},{},"auto-documentation reports"]},{"entry":["SourceItemText","String","50","String that Can be"]},{"entry":[{},{},{},"dynamically embedded into"]},{"entry":[{},{},{},"feedback text using Parameter"]},{"entry":[{},{},{},"Substitution Language (PSL)"]},{"entry":"UserSourceItem-"},{"entry":"Target"},{"entry":["SourceItemID","Counter",{},"Unique key for this table"]},{"entry":["SourceItem","String","50","Name of this Object"]},{"entry":["SourceItemDesc","String","255","Documentation String that"]},{"entry":[{},{},{},"appears with this object in"]},{"entry":[{},{},{},"auto-documentation reports"]},{"entry":["SourceItemText","String","50","String that Can be"]},{"entry":[{},{},{},"dynamically embedded into"]},{"entry":[{},{},{},"feedback text using Parameter"]},{"entry":[{},{},{},"Substitution Language (PSL)"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0482","num":"0570"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Rule Model Data Dictionary"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Column","Type","Len","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Rule",{},{},{}]},{"entry":["TaskID","Long",{},"ID of Task for which this"]},{"entry":[{},{},{},"rule is in scope"]},{"entry":["CoachID","Long",{},"ID of Coach for which this"]},{"entry":[{},{},{},"rule is in scope"]},{"entry":["RuleID","Counter",{},"Unique key for this table"]},{"entry":["Rule","String","50","Name of this object"]},{"entry":["RuleDesc","String","255","Documentation String that"]},{"entry":[{},{},{},"appears with this object in"]},{"entry":[{},{},{},"auto-documentation"]},{"entry":[{},{},{},"reports"]},{"entry":["RuleCondCountMin","Integer",{},"Minimum number of"]},{"entry":[{},{},{},"conditions that must be"]},{"entry":[{},{},{},"true for this Rule to fire"]},{"entry":["RuleCondCountMax","Integer",{},"Maximum number of"]},{"entry":[{},{},{},"conditions that must be"]},{"entry":[{},{},{},"true for this Rule to fire"]},{"entry":["CoachTopicID","Long",{},"ID of CoachTopic that is"]},{"entry":[{},{},{},"activated when this rule"]},{"entry":[{},{},{},"fires"]},{"entry":"RuleAggregateAnds"},{"entry":["RuleID","Long",{},"ID of Rule of which this"]},{"entry":[{},{},{},"object is a condition"]},{"entry":["RuleCondID","Counter",{},"Unique key for this table"]},{"entry":["TargetGroupID","Long",{},"ID of TargetGroup whose"]},{"entry":[{},{},{},"aggregate values are"]},{"entry":[{},{},{},"compared to the aggregate"]},{"entry":[{},{},{},"boundaries of this"]},{"entry":[{},{},{},"condition"]},{"entry":["AggRelevanceMin","Float",{},"The TargetGroup's"]},{"entry":["AggRelevanceMax",{},{},"Calculated Aggregate"]},{"entry":[{},{},{},"Relevance must fall"]},{"entry":[{},{},{},"between this Min and Max"]},{"entry":[{},{},{},"for this condition to be"]},{"entry":[{},{},{},"true"]},{"entry":["AggUserCntPosMin","Integer",{},"The positive-relevance"]},{"entry":["AggUserCntPosMax",{},{},"associations the user has"]},{"entry":[{},{},{},"made using Targets in this"]},{"entry":[{},{},{},"TargetGroup are counted"]},{"entry":[{},{},{},"to produce an Aggregate"]},{"entry":[{},{},{},"value called \u2018UserCntPos\u2019."]},{"entry":[{},{},{},"This TargetGroup's"]},{"entry":[{},{},{},"UserCntPos must fall"]},{"entry":[{},{},{},"between this condition's"]},{"entry":[{},{},{},"AggUserCntPosMin and"]},{"entry":[{},{},{},"AggUserCntPosMax for"]},{"entry":[{},{},{},"this condition to be true."]},{"entry":["AggUserCntNegMin","Integer",{},"The negative-relevance"]},{"entry":["AggUserCntNegMax",{},{},"associations the user has"]},{"entry":[{},{},{},"made using Targets in this"]},{"entry":[{},{},{},"TargetGroup are counted"]},{"entry":[{},{},{},"to produce an Aggregate"]},{"entry":[{},{},{},"value called"]},{"entry":[{},{},{},"\u2018UserCntNeg\u2019. This"]},{"entry":[{},{},{},"TargetGroup's"]},{"entry":[{},{},{},"UserCntNeg must fall"]},{"entry":[{},{},{},"between this condition's"]},{"entry":[{},{},{},"AggUserCntNegMin and"]},{"entry":[{},{},{},"AggUserCntNegMax for"]},{"entry":[{},{},{},"this condition to be true."]},{"entry":["AggUserCntZeroMin","Integer",{},"The zero-relevance"]},{"entry":["AggUserCntZeroMax",{},{},"associations the user has"]},{"entry":[{},{},{},"made using Targets in this"]},{"entry":[{},{},{},"TargetGroup are counted"]},{"entry":[{},{},{},"to produce an Aggregate"]},{"entry":[{},{},{},"value called"]},{"entry":[{},{},{},"\u2018UserCntZero\u2019. This"]},{"entry":[{},{},{},"TargetGroup's"]},{"entry":[{},{},{},"UserCntZero must fall"]},{"entry":[{},{},{},"between this condition's"]},{"entry":[{},{},{},"AggUserCntZeroMin and"]},{"entry":[{},{},{},"AggUserCntZeroMax for"]},{"entry":[{},{},{},"this condition to be true."]},{"entry":["AggUserSumPosMin","Float",{},"The relevance values of"]},{"entry":["AggUserSumPosMax",{},{},"the positive-relevance"]},{"entry":[{},{},{},"associations the user has"]},{"entry":[{},{},{},"made using Targets in this"]},{"entry":[{},{},{},"TargetGroup are summed"]},{"entry":[{},{},{},"to produce an Aggregate"]},{"entry":[{},{},{},"value called"]},{"entry":[{},{},{},"\u2018UserSumPos\u2019. This"]},{"entry":[{},{},{},"TargetGroup's"]},{"entry":[{},{},{},"UserSumPos must fall"]},{"entry":[{},{},{},"between this condition's"]},{"entry":[{},{},{},"AggUserSumPosMin and"]},{"entry":[{},{},{},"AggUserSumPosMax for"]},{"entry":[{},{},{},"this condition to be true."]},{"entry":["AggUserSumNegMin","Float",{},"The relevance values of"]},{"entry":["AggUserSumNegMax",{},{},"the negative-relevance"]},{"entry":[{},{},{},"associations the user has"]},{"entry":[{},{},{},"made using Targets in this"]},{"entry":[{},{},{},"TargetGroup are summed"]},{"entry":[{},{},{},"to produce an Aggregate"]},{"entry":[{},{},{},"value called"]},{"entry":[{},{},{},"\u2018UserSumNeg\u2019. This"]},{"entry":[{},{},{},"TargetGroup's"]},{"entry":[{},{},{},"UserSumNeg must fall"]},{"entry":[{},{},{},"between this condition's"]},{"entry":[{},{},{},"AggUserSumNegMin and"]},{"entry":[{},{},{},"AggUserSumNegMax for"]},{"entry":[{},{},{},"this condition to be true."]},{"entry":["AggUserCntPos2Min","Integer",{},"The positive-relevance"]},{"entry":["AggUserCntPos2Max",{},{},"associations the user has"]},{"entry":[{},{},{},"made using Targets in this"]},{"entry":[{},{},{},"TargetGroup where the"]},{"entry":[{},{},{},"user's Attribute are"]},{"entry":[{},{},{},"counted to produce an"]},{"entry":[{},{},{},"Aggregate value called"]},{"entry":[{},{},{},"\u2018UserCntPos2\u2019. This"]},{"entry":[{},{},{},"TargetGroup's"]},{"entry":[{},{},{},"UserCntPos2 must fall"]},{"entry":[{},{},{},"between this condition's"]},{"entry":[{},{},{},"AggUserCntPos2Min and"]},{"entry":[{},{},{},"AggUserCntPos2Max for"]},{"entry":[{},{},{},"this condition to be true."]},{"entry":"RuleSpecificMapping"},{"entry":"Ands"},{"entry":["RuleID","Long",{},"ID of Rule of which this"]},{"entry":[{},{},{},"object is a condition"]},{"entry":["SourceItemID","Long",{},"SourceItemID of the"]},{"entry":[{},{},{},"association"]},{"entry":["TargetID","Long",{},"TargetID of the"]},{"entry":[{},{},{},"association"]},{"entry":["SourceItemID","Long",{},"Unique key for this table"]},{"entry":["AttributeMatchType","Byte"]},{"entry":["AttributeID","Long",{},"Documentation String that"]},{"entry":[{},{},{},"appears with this object in"]},{"entry":[{},{},{},"auto-documentation"]},{"entry":[{},{},{},"reports"]},{"entry":"AttributeMatchType"},{"entry":["AttributeMatchType","Byte",{},"Unique key for this table"]},{"entry":["AttributeMatchType-","String","255","Brief text description of"]},{"entry":["Desc",{},{},"each AttributeMatchType"]},{"entry":[{},{},{},"Type"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0483","num":"0571"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Feedback Model Data Dictionary"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Column","Type","Len","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"char","char":"."}},{"@attributes":{"colname":"4","colwidth":"98pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["CoachTopic",{},{},{}]},{"entry":["TaskID","Long",{},"ID of Task for which this"]},{"entry":[{},{},{},"object is in scope"]},{"entry":["TargetGroupID","Long",{},"ID of TargetGroup which this"]},{"entry":[{},{},{},"topic of remediation relates to"]},{"entry":["CoachTopicID","Counter",{},"Unique key for this table"]},{"entry":["CoachTopic","String","50","Name of this object"]},{"entry":["CoachTopicDesc","String","255","Documentation String that"]},{"entry":[{},{},{},"appears with this object in"]},{"entry":[{},{},{},"auto-documentation reports"]},{"entry":["CoachTopicPriority","String","3","Priority of this CoachTopic"]},{"entry":[{},{},{},"with respect to other"]},{"entry":[{},{},{},"CoachTopics in the same"]},{"entry":[{},{},{},"TargetGroup"]},{"entry":["RemediationType","String","50","Type of remediation that this"]},{"entry":[{},{},{},"CoachTopic is. This"]},{"entry":[{},{},{},"determines how the"]},{"entry":[{},{},{},"CoachTopic is handled at"]},{"entry":[{},{},{},"runtime."]},{"entry":["CoachItemStand-","String","50","When all the Stand Alone"]},{"entry":["AloneReentrySeqID",{},{},"CoachItems in this"]},{"entry":[{},{},{},"CoachTopic have been used,"]},{"entry":[{},{},{},"they are restarted on the"]},{"entry":[{},{},{},"CoachItemStandAloneReentry"]},{"entry":[{},{},{},"SeqID. If the"]},{"entry":[{},{},{},"CoachItemStandAloneReentry"]},{"entry":[{},{},{},"SeqID = 0 the StandAlone"]},{"entry":[{},{},{},"half of the CoachTopic is"]},{"entry":[{},{},{},"expired and no longer used."]},{"entry":["CoachItemChild-","String","50","When all the Child"]},{"entry":["ReentrySeqID",{},{},"CoachItems in this"]},{"entry":[{},{},{},"CoachTopic have been used,"]},{"entry":[{},{},{},"they are restarted on the"]},{"entry":[{},{},{},"CoachItemChildReentrySeqID."]},{"entry":[{},{},{},"If the"]},{"entry":[{},{},{},"CoachItemChildReentrySeq-"]},{"entry":[{},{},{},"ID = 0 the Child half of the"]},{"entry":[{},{},{},"CoachTopic is expired and no"]},{"entry":[{},{},{},"longer used."]},{"entry":"RemediationType"},{"entry":["SourceItemID","Counter",{},"Unique key for this table"]},{"entry":["SourceItem","String","50","Name of this Object"]},{"entry":["SourceItemDesc","String","255","Documentation String that"]},{"entry":[{},{},{},"appears with this object in"]},{"entry":[{},{},{},"auto-documentation reports"]},{"entry":["SourceItemText","String","50","String that Can be"]},{"entry":[{},{},{},"dynamically embedded into"]},{"entry":[{},{},{},"feedback text using Parameter"]},{"entry":[{},{},{},"Substitution Language (PSL)"]},{"entry":"CoachItem"},{"entry":["SourceItemID","Counter",{},"Unique key for this table"]},{"entry":["SourceItem","String","50","Name of this Object"]},{"entry":["SourceItemDesc","String","255","Documentation String that"]},{"entry":[{},{},{},"appears with this object in"]},{"entry":[{},{},{},"auto-documentation reports"]},{"entry":["SourceItemText","String","50","String that Can be"]},{"entry":[{},{},{},"dynamically embedded into"]},{"entry":[{},{},{},"feedback text using Parameter"]},{"entry":[{},{},{},"Substitution Language (PSL)"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0484","num":"0572"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"},{"entry":"\/\/ tutxport.h"},{"entry":"\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"},{"entry":"\/\/ Control Functions"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","    TuResumeStudent"]},{"entry":["* Purpose:","To Resume a Student In progress."]},{"entry":["* Author:","Mike Smialek\/Andersen Consulting"]},{"entry":"* Input"},{"entry":["* Parameters:","long StudentID"]},{"entry":["*","The Unique ID of the Student to load"]},{"entry":"*"},{"entry":["*","long TaskID"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","     The Unique ID of the Task to Load"]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["*","  int fromSubmissionSeqID"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*"," The Submission from which the Student continues the Task"]},{"entry":["*","<0 :Resume Task from latest submission"]},{"entry":["*","=0 :Restart Task"]},{"entry":["*",">0 :Continue from a specific submission"]},{"entry":"*"},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_DB_COULDNT_OPEN_DATABASE"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*"," TUT_ERR_DOC_COULDNT_LOAD_TASK_DOC"]},{"entry":["*","TUT_ERR_LOD_NO_COACHTOPICS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_COACHITEMS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_COACHES_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_SOURCEITEMTARGETS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_SOURCES_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_SOURCEITEMS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_TARGETGROUPS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_TARGETS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_TARGETPAGES_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_TARGETGROUPTARGETS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_RULES_FOUND"]},{"entry":["*","TUT_ERR_DB_COULDNT_OPEN_RECORDSET"]},{"entry":"*"},{"entry":["*","TUT_ERR_OK"]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["* Notes:","Loads from Database or Document based on values"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","      of m_StorageTypeTask and m_StorageTypeStudent"]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long  _export WINAPI TuResumeStudent(long StudentID, long TaskID, int"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"fromSubmissionSeqID); \/\/ Resumes a Student's work for the Task at the specified"},{"entry":"Submission"},{"entry":"}"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuLoadArchivedsubmissions(long StudentID, long"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"TaskID, int fromSubmissionSeqID, int toSubmissionSeqID); \/\/ Loads Archived"},{"entry":"Submissions For a Student's work in a Task"},{"entry":"}"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuUseArchivedSubmissions(int n); \/\/ Replays n"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Archived submissions for debugging"},{"entry":"}"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuSaveCurrentStudent( ); \/\/ Saves Current Student's"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"work to DB"},{"entry":"}"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuSimulateStudent(long StudentID, long TaskID, float"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Intelligence, float Tenacity, int MaxTurns); \/\/ Not operational"},{"entry":"}"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuWriteUserDebugInfo( ); \/\/ writes active CoachTopics"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"to DB for Debugging"},{"entry":"}"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI KillEngine(long 1TaskID); \/\/ Delete all Dynamic"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"objects before shutdown"},{"entry":"}"},{"entry":"*\/"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","   LoadTaskInfo"]},{"entry":["* Purpose:","To load data for a Task only. Student data is not loaded"]},{"entry":["* Author:","Mike Smialek\/Andersen Consulting"]},{"entry":"* Input"},{"entry":["* Parameters:","long TaskID"]},{"entry":["*","The Unique ID of the Task to Load"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_DB_COULDNT_OPEN_DATABASE"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","    TUT_ERR_DOC_COULDNT_LOAD_TASK_DOC"]},{"entry":["*","TUT_ERR_LOD_NO_COACHTOPICS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_COACHITEMS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_COACHES_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_SOURCEITEMTARGETS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_SOURCES_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_SOURCEITEMS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_TARGETGROUPS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_TARGETS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_TARGETPAGES_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_TARGETGROUPTARGETS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_RULES_FOUND"]},{"entry":["*","TUT_ERR_DB_COULDNT_OPEN_RECORDSET"]},{"entry":"*"},{"entry":["*","TUT_ERR_OK"]},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI LoadTasklnfo(long 1TaskID); \/\/ Clear and (re)load info"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"for TaskID"},{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","   TuLoadTaskDoc"]},{"entry":["* Purpose:","Loads a Tutor Document containing Task Data"]},{"entry":["* Author:","Mike Smialek\/Andersen Consulting"]},{"entry":"* Input"},{"entry":["* Parameters:","long 1TaskID"]},{"entry":["*","TaskID To Load"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_DOC_COULDNT_LOAD_TASK_DOC"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","  TUT_ERR_LOD_NO_COACHTOPICS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_COACHITEMS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_COACHES_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_SOURCEITEMTARGETS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_SOURCES_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_SOURCEITEMS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_TARGETGROUPS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_TARGETS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_TARGETPAGES_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_TARGETGROUPTARGETS_FOUND"]},{"entry":["*","TUT_ERR_LOD_NO_RULES_FOUND"]},{"entry":"*"},{"entry":["*","TUT_ERR_OK"]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Notes:","TaskID is used to format the file name of the Document."]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuLoadTaskDoc(long 1TaskID); \/\/ Clear and (re)load"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"info for TaskID from TaskDoc"},{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:"," TuSaveTaskDoc"]},{"entry":["* Purpose:","Saves The Task data as a Tutor Document"]},{"entry":"* Input"},{"entry":["* Parameters:","long 1TaskID"]},{"entry":["*","TaskID To Save"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_DOC_COULDNT_SAVE_TASK_DOC"]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","      TUT_ERR_OK"]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Notes:"," TaskID is currently only used to format the file name of the"]},{"entry":"Document."}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","    If a TaskID is passed in that is different than the loaded Task,"]},{"entry":["*","it will save the loaded data as if it were data for Task ID"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuSaveTaskDoc(long 1TaskID); \/\/ Save info for"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"TaskID into TaskDoc"},{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","   TuGo"]},{"entry":["* Purpose:","Kicks off Submission or Secret Submission"]},{"entry":"* Input"},{"entry":["* Parameters:","long 1CoachID"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","   CoachID submitting to"]},{"entry":["*",">0 :Submit to Specific Coach"]},{"entry":["*","=0 :Secret Submission to all Coaches"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_OK"]},{"entry":"*"},{"entry":"*    Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuGo(long 1CoachID); \/\/ kick off algorithm"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","   TuIsDirty"]},{"entry":["* Purpose:","Gets the Dirty Status of the Task or of an individual Coach"]},{"entry":"* Input"},{"entry":["* Parameters:","long 1CoachID"]},{"entry":["*","CoachID for which to determine Dirty Status"]},{"entry":["*",">0 :Determines Dirty Status for specific Coach"]},{"entry":["*","=0 :Determines Dirty Status for whole Task"]},{"entry":"* Output"},{"entry":["* Parameters:","LPINT IsDirty"]},{"entry":["*","TRUE indicates this Coach or Task is Dirty"]},{"entry":["*","FALSE indicates this Coach or Task is not Dirty"]},{"entry":["*","If one or more Coaches is dirty the Task is Dirty"]},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_LOD_NO_COACHES_FOUND"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*"," TUT_ERR_LOD_COACHID_NOT_FOUND"]},{"entry":["*","TUT_ERR_OK"]},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuIsDirty(long TaskID, long 1CoachID, LPINT IsDirty"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":");"},{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","    TuGetSubmissionSeqID"]},{"entry":["* Purpose:","Returns the current SubmissionSeqID"]},{"entry":["* Author:","Mike Smialek\/Andersen Consulting"]},{"entry":"* Input"},{"entry":["* Parameters:","long TaskID"]},{"entry":["*","The TaskID for which you want the SubmissionSeqID"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"*    Function Return"},{"entry":["* Variables:","SubmisisonSeqID of the current Submission"]},{"entry":"*"},{"entry":"*    Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuGetSubmissionSeqID(long TaskID);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","   TuGetFeedbackPrevCoachID"]},{"entry":["* Purpose:","Returns the CoachID of The Coach That delivered the previous"]},{"entry":"feedback"},{"entry":"*  Function Return"},{"entry":["* Variables:","CoachID of The Coach That delivered the previous feedback"]},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuGetFeedbackPrevCoachID( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","   TuGetApprovalStatus"]},{"entry":["* Purpose:","Gets the Approval Status of the Task or of an individual Coach"]},{"entry":"* Input"},{"entry":["* Parameters:","long 1CoachID"]},{"entry":["*","CoachID for which to determine Approval"]},{"entry":["*",">0 :Determines approval for specific Coach"]},{"entry":["*","=0 :Determines approval for whole Task"]},{"entry":"* Output"},{"entry":["* Parameters:","LPINT ApprovalRequired"]},{"entry":["*","TRUE indicates this Coach or Task requires approval"]},{"entry":["*","FALSE indicates this Coach or Task does not require approval"]},{"entry":["*","(Always TRUE when input CoachID = 0)"]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["*","     LPINT Approved"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","       TRUE indicates this Coach or Task is approved"]},{"entry":["*","FALSE indicates this Coach or Task is not approved"]},{"entry":"*"},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_LOD_NO_COACHES_FOUND"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","TUT_ERR_LOD_COACHID_NOT_FOUND"]},{"entry":"*"},{"entry":["*","TUT_ERR_OK"]},{"entry":"*"},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuGetApprovalStatus(long 1CoachID, LPINT"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"ApprovalRequired, LPINT Approved); \/\/ return approval status for CoachID"},{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","   TuCanProceed"]},{"entry":["* Purpose:","Determines if Task is in state in which user can proceed to"]},{"entry":"another Task"},{"entry":"* Input"},{"entry":["* Parameters:","long 1TaskID"]},{"entry":["*","TaskID to examine"]},{"entry":"* Output"},{"entry":["* Parameters:","LPINT CanProceed"]},{"entry":["*","TRUE indicates user can proceed from this Task"]},{"entry":["*","FALSE indicates user can not proceed from this Task"]},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_LOD_NO_COACHES_FOUND"]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","   TUT_ERR_OK"]},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuCanProceed(long 1TaskID, LPINT CanProceed);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","    TuMenu"]},{"entry":["* Purpose:","Opens Menu Dialog"]},{"entry":["* Author:","Mike Smialek\/Andersen Consulting"]},{"entry":"* Input"},{"entry":["* Parameters:","none"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*    Function Return"},{"entry":["*    Variables:","TUT_ERR_OK"]},{"entry":"*    Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuMenu( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","    TuTesterComment"]},{"entry":["* Purpose:","Opens Tester Comment Dialog"]},{"entry":"* Input"},{"entry":["* Parameters:","none"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_OK"]},{"entry":"*    Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuTesterComment( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"},{"entry":"\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"},{"entry":"\/\/ Notification Functions"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","  TuCreateMap"]},{"entry":["* Purpose:","To Create an association between a SourceItem and a Target"]},{"entry":["*","with a modifying Attribute value"]},{"entry":"* Input"},{"entry":["* Parameters:","long SIID"]},{"entry":["*","SourceItemID of existing association to create"]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["*","     long TID"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","       TargetID of association to create"]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["*","      double Attr"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","     Attribute value of association to create"]},{"entry":"*"},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"*    Function Return"},{"entry":["* Variables:","TUT_ERR_TUF_USIT_TARGET_NOT_FOUND"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","      TUT_ERR_TUF_USIT_DUPLICATE_FOUND"]},{"entry":"*"},{"entry":["*","TUT_ERR_OK"]},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuCreateMap(long SIID, long TID, double Attr);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","   TuModifyMap"]},{"entry":["* Purpose:","To Modify an association between a SourceItem and a Target"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","       with a new modifying Attribute value"]},{"entry":"* Input"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Parameters:","  long SIID"]},{"entry":["*","SourceItemID of existing association to Modify"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["*","        long TID"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["*","      TargetID of existing association to Modify"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["*","        double Attr"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","      New Attribute value for association"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_TUF_USIT_TARGET_NOT_FOUND"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","TUT_ERR_TUF_USIT_DUPLICATE_FOUND"]},{"entry":"*"},{"entry":["*","TUT_ERR_OK"]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Notes:","  This function calls TuDeleteMap\/TuCreateMap"]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuModifyMap(long SIID, long TID, double Attr);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","   TuDeleteMap2"]},{"entry":["* Purpose:","To Delete an association between a SourceItem and a Target"]},{"entry":"* Input"},{"entry":["* Parameters:","long SIID"]},{"entry":["*","SourceItemID of association to delete"]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["*","       long TID"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","     TargetID of association to delete"]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["*","     double Attr"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","    Attribute value of association to delete"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_TUF_USIT_TARGET_NOT_FOUND"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","   TUT_ERR_TUF_USIT_NOT_FOUND"]},{"entry":"*"},{"entry":["*","TUT_ERR_OK"]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["* Notes:","  This function ignores the Attribute value and calls"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["*","    TuDeleteMap(long SIID, long TID)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuDeleteMap2(long SIID, long TID, double Attr);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","   TuDeleteMap"]},{"entry":["* Purpose:","To Delete and association between a SourceItem and a Target"]},{"entry":"* Input"},{"entry":["* Parameters:","long SIID"]},{"entry":["*","SourceItemID of association to delete"]},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["*","       long TID"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","    TargetID of association to delete"]},{"entry":"*"},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_TUF_USIT_TARGET_NOT_FOUND"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","   TUT_ERR_TUF_USIT_NOT_FOUND"]},{"entry":["*","TUT_ERR_OK"]},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuDeleteMap(long SIID, long TID);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"},{"entry":"\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"},{"entry":"\/\/ Configuration Functions"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","  TuSetODBCConnect"]},{"entry":["* Purpose:","To set ODBC Connect String for the Task Data Database"]},{"entry":"* Input"},{"entry":["* Parameters:","LPCSTR ODBCConnect"]},{"entry":["*","ODBC Connect String for the Task Data Database"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_OK"]},{"entry":"*"},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuSetODBCConnect(LPCSTR ODBCConnect);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","    TuSetODBCConnectTrack"]},{"entry":["* Purpose:","To set ODBC Connect String for the Student Tracking Database"]},{"entry":"* Input"},{"entry":["* Parameters:","LPCSTR ODBCCounect"]},{"entry":["*","ODBC Connect String for the Student Tracking Database"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_OK"]},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuSetODBCConnectTrack(LPCSTR ODBCConnect);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","   TuSetTaskDocPathName"]},{"entry":["* Purpose:","To set path and name of the Task Document file"]},{"entry":"* Input"},{"entry":["* Parameters:","LPCSTR fnm"]},{"entry":["*","Path and name of the Task Document file"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_OK"]},{"entry":"*"},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuSetTaskDocPathName(LPCSTR fnm);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:"," TuSetFeedbackFileName"]},{"entry":["* Purpose:","To set path and name of file to use for holding feedback"]},{"entry":"* Input"},{"entry":["* Parameters:","LPCSTR fnm"]},{"entry":["*","Path and name of file to use for holding feedback"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_OK"]},{"entry":"*"},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuSetFeedbackFileName(LPCSTR fnm);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","   TuSetFeedbackPrevFileName"]},{"entry":["* Purpose:","To set path and name of file to use for holding previous feedback"]},{"entry":"* Input"},{"entry":["* Parameters:","LPCSTR fnm"]},{"entry":["*","Path and name of file to use for holding previous feedback"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"*    Function Return"},{"entry":["*    Variables:","TUT_ERR_OK"]},{"entry":"*    Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuSetFeedbackPrevFileName(LPCSTR fnm);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","    TuSetLogFileName"]},{"entry":["* Purpose:","To set path and name of file to use for full logging"]},{"entry":"* Input"},{"entry":["* Parameters:","LPCSTR fnm"]},{"entry":["*","Path and name of file to use for full logging"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_OK"]},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuSetLogFileName(LPCSTR fnm);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","  TuSetLogLoadFileName"]},{"entry":["* Purpose:","To set path and name of file to use for load logging"]},{"entry":"* Input"},{"entry":["* Parameters:","LPCSTR fnm"]},{"entry":["*","Path and name of file to use for load logging"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_OK"]},{"entry":"*"},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuSetLogLoadFileName(LPCSTR fnm);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:"," TuSetLogStudentFileName"]},{"entry":["* Purpose:","To set path and name of file to use for student logging"]},{"entry":"* Input"},{"entry":["* Parameters:","LPCSTR fnm"]},{"entry":["*","Path and name of file to use for student logging"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"*    Function Return"},{"entry":["* Variables:","TUT_ERR_OK"]},{"entry":"*"},{"entry":"*    Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuSetLogStudentFileName(LPCSTR fnm);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","    TuSetLogSubmissionFileName"]},{"entry":["* Purpose:","To set path and name of file to use for submission logging"]},{"entry":"* Input"},{"entry":["* Parameters:","LPCSTR fnm"]},{"entry":["*","Path and name of file to use for submission logging"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_OK"]},{"entry":"*"},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuSetLogSubmissionFileName(LPCSTR fnm);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","    TuSetLogErrFileName"]},{"entry":["* Purpose:","To set path and name of file to use for error logging"]},{"entry":"* Input"},{"entry":["* Parameters:","LPCSTR fnm"]},{"entry":["*","Path and name of file to use for error logging"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_OK"]},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuSetLogErrFileName(LPCSTR fnm);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"*\/"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","    TuSetTrace"]},{"entry":["* Purpose:","To turn Trace on and off"]},{"entry":"* Input"},{"entry":["* Parameters:","int TraceStatus"]},{"entry":["*","TUT_TRACE_ON :Turn Trace On"]},{"entry":["*","TUT_TRACE_OFF :Turn Trace Off"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"* Function Return"},{"entry":["* Variables:","Previous Trace Status Value"]},{"entry":["*","TUT_TRACE_ON"]},{"entry":["*","TUT_TRACE_OFF"]},{"entry":"*"},{"entry":["*","TUT_ERR_INVALID_TRACE_STATUS"]},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuSetTrace(int TraceStatus);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","       TuSetTrack"]},{"entry":["* Purpose:","To turn Tracking on and off. While tracking is on"]},{"entry":["*","all work the user does and all feedback the user receives"]},{"entry":["*","is kept. While Tracking is off only the most recent work is kept."]},{"entry":"* Input"},{"entry":["* Parameters:","int TrackStatus"]},{"entry":["*","TUT_TRACK_ON :Turn Tracking On"]},{"entry":["*","TUT_TRACK_OFF :Turn Tracking Off"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"* Function Return"},{"entry":["* Variables:","Previous Trace Status Value"]},{"entry":["*","TUT_TRACK_ON"]},{"entry":["*","TUT_TRACK_OFF"]},{"entry":"*"},{"entry":["*","TUT_ERR_INVALID_TRACK_STATUS"]},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuSetTrack(int TrackStatus);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","   TuSetShowExceptionPopup"]},{"entry":["* Purpose:","To Exception popups on and off."]},{"entry":"* Input"},{"entry":["* Parameters:","int PopupStatus"]},{"entry":["*","TUT_POPUP_ON :Turn Exception popups On"]},{"entry":["*","TUT_POPUP_OFF :Turn Exception popups Off"]},{"entry":"* Output"},{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"* Function Return"},{"entry":["* Variables:","Previous Exception popup Status Value"]},{"entry":["*","TUT_POPUP_ON"]},{"entry":["*","TUT_POPUP_OFF"]},{"entry":"*"},{"entry":["*","TUT_ERR_INVALID_POPUP_STATUS"]},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuSetShowExceptionPopup(int PopupStatus);"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":"\/*"},{"entry":"*****************************************"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Name:","      TuSetStorageType"]},{"entry":["* Purpose:","To Direct Task and Student data to be loaded and saved"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","       using a Document or Database"]},{"entry":"* Input"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Parameters:","long StorageTypeTask"]},{"entry":["*","TUT_STORAGE_TYPE_DOCUMENT :Load and Save Task"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Data using Document"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","     TUT_STORAGE_TYPE_DATABASE :Load and Save Task Data"]},{"entry":"using Database"},{"entry":"*"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["*","       long StorageTypeStudent"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["*","      TUT_STORAGE_TYPE_DOCUMENT :Load and Save Student"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"Data using Document"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":["*","        TUT_STORAGE_TYPE_DATABASE :Load and Save Student"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Data using Database"},{"entry":"* Output"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["* Parameters:","none"]},{"entry":"*"},{"entry":"* Function Return"},{"entry":["* Variables:","TUT_ERR_INVALID_STORAGE_TYPE_TASK"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"210pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["*","       TUT_ERR_INVALID_STORAGE_TYPE_STUDENT"]},{"entry":"*"},{"entry":["*","TUT_ERR_OK"]},{"entry":"* Notes:"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"*****************************************"},{"entry":"*\/"},{"entry":"extern \u201cC\u201d"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"7pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"long _export WINAPI TuSetStorageType(int StorageTypeTask, int"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"273pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"StorageTypeStudent);"},{"entry":"}"},{"entry":"\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"},{"entry":"\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The idea is for the designer to model the task that he wants a student to accomplish using an Excel spreadsheet. Then, have an algorithm or engine that reads all the significant cells of the spreadsheet and notifies the Intelligent Coaching Agent with the appropriate information (SourceItemID, TargetID and Attribute). This way, the spreadsheet acts as a central repository for student data, contains most of the calculations required for the task and in conjunction with the engine handles all the communication with the ICA. The task is self contained in the spreadsheet, therefore the designers no longer need a graphical user interface to functionally test their designs (smart spreadsheet).  is a block diagram illustrating how the simulation engine is architected into a preferred embodiment of the invention.","Once the model and feedback for it are completely tested by designers, developers can incorporate the spreadsheet in a graphical user interface, e.g., Visual Basic as a development platform. The simulation spreadsheet is usually invisible and populated using functions provided by the engine. It is very important that all modifications that the ICA needs to know about go through the engine because only the engine knows how to call the ICA. This significantly reduced the skill level required from programmers, and greatly reduced the time required to program each task. In addition, the end-product was less prone to bugs, because the tutor management was centralized. If there was a tutor problem, we only had to check on section of code. Finally, since the simulation engine loaded the data from a spreadsheet, the chance of data inconsistency between the tutor and the application was nil.","Object Model",{"@attributes":{"id":"p-0487","num":"0575"},"figref":"FIG. 41"},"Spreadsheet Object","The first object in our discussion is the Spreadsheet object. The Spreadsheet is the support for all simulation models. A control object that is readily integrated with the Visual Basic development plat. The control supports printing and is compatible with Microsoft Excel spreadsheets. With that in mind, designers can use the power of Excel formulas to build the simulation. The different cells contained in the spreadsheet model can be configured as Inputs, Outputs or Lists and belong to a simulation Path.","Input Object","All cells in the spreadsheet that need to be manually entered by the designer or the student via the GBS application are represented by input objects. Every input has the following interface:",{"@attributes":{"id":"p-0490","num":"0578"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Field Name","Data Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["InputID","long","Primary Key for the table"]},{"entry":["TaskID","long","TaskID of the task associated with the"]},{"entry":[{},{},"input"]},{"entry":["PathID","long","PathID of the path associated with the"]},{"entry":[{},{},"input"]},{"entry":["InputName","string*50","Name of the input"]},{"entry":["InputDesc","string*255","Description of the input"]},{"entry":["ReferenceName","string*50","Name of the spreadsheet cell associated"]},{"entry":[{},{},"with the input"]},{"entry":["TutorAware","boolean","Whether the ICA should be notified of"]},{"entry":[{},{},"any changes to the input"]},{"entry":["SourceItemID","long","SourceItemID if input is a distinct input"]},{"entry":[{},{},"0 if input is a drag drop input"]},{"entry":["TargetID","long","TargetID of the input"]},{"entry":["Row","long","Spreadsheet row number of the input \u2192"]},{"entry":[{},{},"speed optimization"]},{"entry":["Column","long","Spreadsheet column number of the"]},{"entry":[{},{},"input \u2192 speed optimization"]},{"entry":["SheetName","string*50","Sheet name were the input is located \u2192"]},{"entry":[{},{},"speed optimization"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"This information is stored for every input in the Input table of the simulation database (ICASim.mdb). Refer to the example below.","When designers construct their simulation model, they must be aware of the fact that there are 2 types of Inputs:","1. Distinct Input","2. Drag & Drop Input","Distinct Input","The Distinct Input consists of a single spreadsheet cell that can be filled by the designer at design time or by the GBS application at run time via the simulation engine object's methods. The purpose of the cell is to provide an entry point to the simulation model. This entry point can be for example an answer to a question or a parameter to an equation. If the cell is TutorAware (all inputs are usually TutorAware), the ICA will be notified of any changes to the cell. When the ICA is notified of a change two messages are in fact sent to the ICA:","1. An ICANotifyDestroy message with the input information i.e., SourceItemID, TargetID and null as Attribute. This message is to advise the ICA to remove this information from its memory.","2. An ICANotifyCreate message with the input information i.e., SourceItemID, TargetID, Attribute (cell numeric value). This message is to advise the ICA to add this information to its memory.","A Distinct Input never requires that a user answer a mathematics question. These are the steps required to configure that simulation.  illustrates the arithmetic steps in accordance with a preferred embodiment.","1. Define a name for cell C2 in Excel. Here we have defined \u201cDistinct_Input\u201d.","2. In the ICA, define a task that will be assigned to the simulation. Ex: a TaskID of 123 is generated by the ICA.","3. In the ICA, define a Target for the input. Ex: a TargetID of 4001 is generated by the ICA.","4. In the ICA, define a SourceItem for the input. Ex: a SourceItemID of 1201 is generated by the ICA.","5. Associate the input to a path (refer to Path object discussion).","6. Add the information in the Input table of the simulation engine database.","A record in an Input table is presented below.",{"@attributes":{"id":"p-0506","num":"0594"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"InputID:","12345"]},{"entry":[{},"TaskID:","123"]},{"entry":[{},"PathID:","1234"]},{"entry":[{},"InputName:","Question 1 input"]},{"entry":[{},"InputDesc:","Distinct input for Question 1"]},{"entry":[{},"ReferenceName:","Distinct_Input"]},{"entry":[{},"TutorAware:","True"]},{"entry":[{},"SourceItemID","1201"]},{"entry":[{},"TargetID:","4001"]},{"entry":[{},"Row:","2"]},{"entry":[{},"Column:","3"]},{"entry":[{},"SheetName:","Sheet1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The Row, Column and SheetName are filled in once the user clicks \u201cRun Inputs\/Outputs\u201d. The simulation engine decodes the defined name (Reference Name) that the designer entered, and populates the table accordingly. This is an important step. We had several occasions when a designer would change the layout of a spreadsheet, i.e., move a defined name location, then forget to perform this step. As such, bizarre data was being passed to the tutor; whatever data happened to reside in the old row and column. Once the configuration is completed, the designer can now utilize the ICA Utilities to test the simulation.","Drag & Drop Input","The drag & drop input consist of two consecutive spreadsheet cells. Both of them have to be filled by the designer at design time or by the GBS application at run time via the simulation engine object's methods. This type of input is used usually when the user must choose one answer among a selection of possible answers. Drag & drop inputs are always TutorAware. The left most cell contains the SourceItemID of the answer picked by the user (every possible answer needs a SourceItemID) and the rightmost cell can contain a numeric value associated to that answer. You need to define a name or ReferenceName in the spreadsheet for the rightmost cell.","ICA will be notified of any changes to either one of the cells. When the ICA is notified of a change two messages are in fact sent to the ICA:","1. An ICANotifyDestroy message with the input information i.e., SourceItemID before the change occurred, TargetID of the input and the Attribute value before the change occurred.","2. An ICANotifyCreate message with the input information i.e., SourceItemID after the change occurred, TargetID of the input and the Attribute value after the change occurred.","Let's demonstrate the use of a drag & drop input building on top of the previous example. Here, the user is asked to answer yet another mathematics question. These are the steps required to configure that section of the simulation.  illustrates a drag & drop input operation in accordance with a preferred embodiment.","1. Define a name for cell C11 in Excel. Here we have defined \u201cDragDrop_Input\u201d.","2. Let's use the same TaskID as before since Question 2 is part of the same simulation as Question 1. Ex: TaskID is 123.","3. In the ICA, define a Target for the input. Ex: a TargetID of 4002 is generated by the ICA.","4. In the ICA, define a SourceItem for every possible answer to the question. Ex: SourceItemIDs 1202 to 1205 are generated by the ICA.","5. Associate the input to a path (refer to Path object discussion).","6. Add the information in the Input table of the simulation engine database.","A record in the Input table in accordance with a preferred embodiment is presented below.",{"@attributes":{"id":"p-0520","num":"0608"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"InputID:","12346"]},{"entry":[{},"TaskID:","123"]},{"entry":[{},"PathID:","1234"]},{"entry":[{},"InputName:","Question 2 input"]},{"entry":[{},"InputDesc:","Drag & Drop input for Question 2"]},{"entry":[{},"ReferenceName:","DragDrop_Input"]},{"entry":[{},"TutorAware:","True"]},{"entry":[{},"SourceItemID","0 \u2003***"]},{"entry":[{},"TargetID:","4002"]},{"entry":[{},"Row:","11"]},{"entry":[{},"Column:","3"]},{"entry":[{},"SheetName:","Sheet1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0521","num":"0609"},"figref":"FIG. 44"},"Every list has the following interface:",{"@attributes":{"id":"p-0523","num":"0611"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Field Name","Data Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ListID","long","Primary Key for the table"]},{"entry":["TaskID","long","TaskID of the task associated with the"]},{"entry":[{},{},"list"]},{"entry":["PathID","long","PathID of the path associated with the"]},{"entry":[{},{},"list"]},{"entry":["ListName","string*50","Name of the list"]},{"entry":["ListDesc","string*255","Description of the list"]},{"entry":["ReferenceName","string*50","Name of the spreadsheet cell associated"]},{"entry":[{},{},"with the list"]},{"entry":["TutorAware","boolean","Whether the ICA should be notified of"]},{"entry":[{},{},"any changes to the list"]},{"entry":["TargetlD","long","TargetlD of the output"]},{"entry":["TotalColumns","long","Total number of data columns"]},{"entry":["Row","long","Spreadsheet row number of the"]},{"entry":[{},{},"output \u2192 speed optimization"]},{"entry":["Column","long","Spreadsheet column number of the"]},{"entry":[{},{},"output \u2192 speed optimization"]},{"entry":["SheetName","string*50","Sheet name were the input is located \u2192"]},{"entry":[{},{},"speed optimization"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Use of a list is demonstrated by continuing our math test. The math question in this example invites the user to select multiple elements to construct the answer. These are the steps required to configure that section of the simulation.  illustrates the steps for configuring a simulation in accordance with a preferred embodiment.","1. Define a name for cell C23 in Excel. Here we have defined \u201cThe_List\u201d.","2. Let's use the same TaskID as before since Question 3 is part of the same simulation as Question 1 and 2. Ex: TaskID is 123.","3. In the ICA, define a Target for the list. Ex: a TargetID of 4006 is generated by the ICA.","4. In the ICA, define a SourceItem for every item that could be placed in the list. Ex: the following SourceItemIDs 1209, 1210, 1211, 1212, 1213, 1214 are generated by the ICA.","5. Associate the list to a path (refer to Path object discussion).","6. Add the information in the List table of the simulation engine database.","A record in the List table in accordance with a preferred embodiment is presented in the table appearing below.",{"@attributes":{"id":"p-0532","num":"0620"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ListID:","12346"]},{"entry":[{},"TaskID:","\u2003123"]},{"entry":[{},"PathID:","\u20021234"]},{"entry":[{},"ListName:","Question 3 list"]},{"entry":[{},"ListDesc:","List for Question 3"]},{"entry":[{},"ReferenceName:","The_List"]},{"entry":[{},"TutorAware:","True"]},{"entry":[{},"TargetID:","\u20024006"]},{"entry":[{},"TotalColumns:","\u2003\u20031"]},{"entry":[{},"Row:","\u2003\u200223"]},{"entry":[{},"Column:","\u2003\u20033"]},{"entry":[{},"SheetName:","Sheet1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"All cells in the spreadsheet that are result of calculations (do not require any external input) can be represented by output objects. Every output has an interface as outlined in the table below.",{"@attributes":{"id":"p-0534","num":"0622"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"126pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Field Name","Data Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["OutputID","long","Primary Key for the table"]},{"entry":["TaskID","long","TaskID of the task associated with the"]},{"entry":[{},{},"output"]},{"entry":["PathID","long","PathID of the path associated with the"]},{"entry":[{},{},"output"]},{"entry":["OutputName","string*50","Name of the output"]},{"entry":["OutputDesc","string*255","Description of the output"]},{"entry":["ReferenceName","string*50","Name of the spreadsheet cell associated"]},{"entry":[{},{},"with the output"]},{"entry":["TutorAware","boolean","Whether the ICA should be notified of any"]},{"entry":[{},{},"changes to the output"]},{"entry":["SourceItemID","long","SourceItemID of the output"]},{"entry":["TargetID","long","TargetID of the output"]},{"entry":["Row","long","Spreadsheet row number of the output \u2192"]},{"entry":[{},{},"speed optimization"]},{"entry":["Column","long","Spreadsheet column number of the"]},{"entry":[{},{},"output \u2192 speed optimization"]},{"entry":["SheetName","string*50","Sheet name were the input is located \u2192"]},{"entry":[{},{},"speed optimization"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"All this information is stored for every output in the Output table of the simulation database (ICASim.mdb). When designers construct their simulation model, they must be aware of the fact that there is only 1 type of Outputs : the Distinct Output.","Distinct Output","A Distinct Output consists of one and only one spreadsheet cell that contains a formula or a result of calculations. The existence of Output cells is the main reason to have a simulation model. If the cell is TutorAware, the ICA will be notified of any changes to the cell when all outputs are processed otherwise the ICA will be unaware of any changes. When the ICA is notified of a change two messages are in fact sent to the ICA:","1. An ICANotifyDestroy message with the output information i.e., SourceItemID, TargetID and null as Attribute. This message is to advise the ICA to remove this information from its memory.","2. An ICANotifyCreate message with the output information i.e., SourceItemID, TargetID, Attribute (cell numeric value). This message is to advise the ICA to add this information to its memory. As opposed to Distinct Inputs and Drag & Drop Inputs which notify the ICA on every change, Distinct Outputs are processed in batch just before asking the ICA for feedback.","To notify the ICA of the total dollar amount of the items in the list. We definitely need a Distinct Output for that. The output will contain a sum formula.  illustrates a distinct output in accordance with a preferred embodiment. The steps required to configure that section of the simulation taking in consideration that the list is already configured are presented below.","1. Define a name for cell C24 in Excel. Here we have defined \u201cDistinct_Output\u201d.","2. Let's use the same TaskID as before since Question 3 is part of the same simulation as Question 1 and 2. Ex: TaskID is 123.","3. In the ICA, define a Target for the output. Ex: a TargetID of 4005 is generated by the ICA.","4. In the ICA, define a SourceItem for the output. Ex: a SourceItemID of 1215 is generated by the ICA.","5. Associate the output to a path (refer to Path object discussion).","6. Add the information in the Output table of the simulation engine database.","A record in an Output table in accordance with a preferred embodiment is presented below.",{"@attributes":{"id":"p-0547","num":"0635"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"OutputID:","12347"]},{"entry":[{},"TaskID:","\u2003123"]},{"entry":[{},"PathID:","\u20021234"]},{"entry":[{},"OutputName:","Question 3 output"]},{"entry":[{},"OutputDesc:","Distinct Output for Question 3"]},{"entry":[{},"ReferenceName:","Distinct_Output"]},{"entry":[{},"TutorAware:","True"]},{"entry":[{},"SourceItemID","\u20021215"]},{"entry":[{},"TargetID:","\u20024005"]},{"entry":[{},"Row:","\u2003\u200224"]},{"entry":[{},"Column:","\u2003\u20036"]},{"entry":[{},"SheetName:","Sheet1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"Paths are used to divide a simulation model into sub-Simulations meaning that you can group certain inputs, outputs and lists together to form a coherent subset or path.","Every path has the following interface:",{"@attributes":{"id":"p-0550","num":"0638"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Field Name","Data Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["PathID","long","Primary Key for the table"]},{"entry":["TaskID","long","TaskID of the task associated with the"]},{"entry":[{},{},"path"]},{"entry":["PathNo","long","Numeric value associated to a path"]},{"entry":["PathName","string*50","Name of the path"]},{"entry":["PathDesc","string*255","Description of the path"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"All this information is stored for every path in the path table of the simulation database (ICASim.mdb).","Simulation Engine","The simulation engine is the interface between the model, the simulation database and the Intelligent Coaching Agent. The simulation engine is of interest to the designer so that he can understand the mechanics of it all. But it is the developer of applications using the engine that should know the details of the interface (methods & properties) exposed by the engine and the associated algorithms.","Once the designer has constructed the simulation model (Excel Spreadsheet) and configured all the inputs, outputs & lists, he is ready to test using the test bench included in the ICA Utilities (refer to ICA Utilities documentation). The developer, in turn, needs to implement the calls to the simulation engine in the GBS application he's building. The following list identifies the files that need to be included in the Visual Basic project to use the simulation workbench:",{"@attributes":{"id":"p-0554","num":"0642"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["wSimEng.cls","Simulation Engine class"]},{"entry":["wSimEng.bas","Simulation Engine module (this module was introduced"]},{"entry":[{},"only for speed purposes because all the code should"]},{"entry":[{},"theoretically be encapsulated in the class)"]},{"entry":["wConst.bas","Intelligent Coaching Agent constant declaration"]},{"entry":["wDeclare.bas","Intelligent Coaching Agent DLL interface"]},{"entry":["wIca.cls","Intelligent Coaching Agent class"]},{"entry":["wIca.bas","Intelligent Coaching Agent module (this module was"]},{"entry":[{},"introduced only for speed purposes because all the code"]},{"entry":[{},"should theoretically be encapsulated in the class)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"To have a working simulation, a developer places code in different strategic areas or stages of the application. There's the Initial stage that occurs when the form containing the simulation front-end loads. This is when the simulation model is initialized. There's the Modification stages that take place when the user makes changes to the front-end that impacts the simulation model. This is when the ICA is notified of what's happening. There's the Feedback stage when the user requests information on the work done so far. This is when the simulation notifies the ICA of all output changes. Finally, there's the Final stage when the simulation front-end unloads. This is when the simulation is saved to disk.","The different stages of creating a simulation, including the Visual Basic code involved, are presented below.","Initial Stage","1. Creating the ICA & the Simulation Engine Objects","Code:","Set moSimEngine=New classSimEngine","Set moICA=New classICA","Description: The first step in using the simulation engine is to create an instance of the class classSimEngine and also an instance of the class classICA. Note that the engine and ICA should be module level object \u201cmo\u201d variables.","2. Loading the Simulation","Code:","lRet=moSimEngine.OpenSimulation(App.Path & DIR_DATA & FILE_SIMULATION, Me.bookSimulation)","lRet=moSimEngine.LoadSimulation(mlICATaskID, App.Path & DIR_DATABASE & DB_SIMULATION, 1)","Description: After the object creation, the OpenSimulation and LoadSimulation methods of the simulation engine object must be called. The OpenSimulation method reads the specified Excel 5.0 spreadsheet file into a spreadsheet control. The LoadSimulation method opens the simulation database and loads into memory a list of paths, a list of inputs, a list of outputs and a list of lists for the specific task. Every method of the simulation engine will return 0 if it completes successfully otherwise an appropriate error number is returned.","3. Initializing and Loading the Intelligent Coaching Agent","Code:","lRet=moICA.Initialize(App.Path & \u201c\\\u201d & App.EXEName & \u201c.ini\u201d, App.Path & DIR_DATABASE, App.Path & DIR_ICADOC, App.Path & \u201c\\\u201d)","lRet=moICA.LoadTask(mlICATaskID, ICAStudentStartNew)","Description: The simulation engine only works in conjunction with the ICA. The Initialize method of the ICA object reads the application .ini file and sets the Tutor32.dll appropriately. The LoadTask method tells the ICA (Tutor32.dll) to load the .tut document associated to a specific task in memory. From that point on, the ICA can receive notifications.","Note: The tut document contains all the element and feedback structure of a task. Ex: SourcePages, SourceItems, TargetPages, Targets, etc . . .","4. Restoring the Simulation","Code:","<<Code to reset the simulation when starting over>>","<<Code to load the controls on the simulation front-end>>","lRet=moSimEngine.RunInputs(sPaths, True)","lRet=moSimEngine.RunOutputs(sPaths, True)","lRet=moSimEngine.RunLists(sPaths, True)","Call moICA.Submit(0)","Call moICA.SetDirtyFlag(0, False)","Description: Restoring the simulation involves many things:\n\n","Running inputs involves going through the list of TutorAware inputs and notifying the ICA of the SourceItemID, TargetID and Attribute value of every input.","Running lists involves going through the list of TutorAware lists and notifying the ICA of the SourceItemID, TargetID and Attribute value of every item in every list. The TargetID is unique for every item in a list.","Running outputs involves going through the list of TutorAware outputs and notifying the ICA of the SourceItemID, TargetID and Attribute value of every output.","Modification Stage","1. Reading Inputs & Outputs","Code:","Dim sDataArray(2) as string","Dim vAttribute as variant","Dim lSourceItemID as long","Dim lTargetID as long","lRet=moSimEngine.ReadReference(\u201cDistinct_input\u201d, vAttribute, lSourceItemID, lTargetID, sDataArray)","Description: The ReadReference method of the simulation object will return the attribute value of the input or output referenced by name and optionally retrieve the SourceItemID, TargetID and related data. In the current example, the attribute value, the SourceItemID, the TargetID and 3 data cells will be retrieved for the input named Distinct_Input.","2. Modifying Distinct Inputs","Code:","Dim vAttribute as variant","Dim lSourceItemID as long","Dim sDataArray(2) as string","vAttribute=9999","sDataArray(0)=\u201cData Cell #1\u201d","sDataArray(1)=\u201cData Cell #2\u201d","sDataArray(2)=\u201cData Cell #3\u201d","lRet=moSimEngine.WriteReference(\u201cDistinct_Input\u201d, vAttribute, sDataArray)","Description: Modifying a distinct input is as simple as calling the WriteReference method of the simulation object passing the input name, the new attribute value and optionally a data array. The simulation engine takes care of notifying the ICA of the change.","3. Modifying Drag & Drop Inputs","Code:","Dim vAttribute as variant","Dim lSourceItemID as long","Dim sDataArray(2) as string","lSourceItemID=1202","vAttribute=9999","sDataArray(0)=\u201cData Cell #1\u201d","sDataArray(1)=\u201cData Cell #2\u201d","sDataArray(2)=\u201cData Cell #3\u201d","lRet=moSimEngine.WriteReference(\u201cDragDrop_Input\u201d, vAttribute, lSourceItemID, sDataArray)","Description: Modifying a drag&drop input is as simple as calling the WriteReference method of the simulation object passing the input name, the new attribute value, the new SourceItemID and optionally a data array. The simulation engine takes care of notifying the ICA of the change.","4. Reading Lists","Code:","lRet=moSimEngine.ListRead(sListName, lListIndex, vAttribute, lSourceItemID, lTargetID, sDataArray)","Description: All list in the simulation model can be read one item at a time using the ListRead method of the simulation engine object. Passing the list name and the index of the item to retrieve, the function will return the Attribute value and optionally the SourceItemID, TargetID and data array of the item specified. Use a looping structure to read entire lists into memory, or to search for and retrieve a particular line item. This will be done quite often as designers generally allow users to manipulate items from lists. For example, if a user begins to drag an element of a list, you will need to retrieve this data from the list item they are dragging.","5. Modifying Lists","Code:","lRet=moSimEngine.ListAdd(sListName, vAttribute, lSourceItemID, sDataArray)","lRet=moSimEngine.ListCount(sListName, lTotalItems)","lRet=moSimEngine.ListModify(sListName, lListIndex, vAttribute, ISourceItemID, sDataArray)","lRet=moSimEngine.ListDelete(sListName, IListlndex)","Description: The simulation engine object provides basic functionality to manipulate lists.","The ListAdd method appends an item(SourceItemID, Attribute, Data array) to the list. Let's explain the algorithm. First, we find the top of the list using the list name. Then, we seek the first blank cell underneath the top cell. Once the destination is determine, the data is written to the appropriate cells and the ICA is notified of the change.","The ListCount method returns the number of items in the specified list. The algorithm works exactly like the ListAdd method but returns the total number of items instead of inserting another element.","The ListModify method replaces the specified item with the provided data. Let's explain the algorithm. First, we find the top of the list using the list name. Second, we calculate the row offset based on the item number specified. Then, the ICA is notified of the removal of the existing item. Finally, the data related to the new item is written to the appropriate cells and the ICA is notified of the change.","The ListDelete method removes the specified item. The algorithm works exactly like the ListModify method but no new data is added and the cells (width of the list set by \u2018Total Columns\u2019) are deleted with the \u2018move cells up\u2019 parameter set to true. Keep this in mind, as designers often enter the wrong number of columns in the Total Columns parameter. When they overestimate the Total Columns, ListDelete will modify portions of the neighboring list, which leads to erratic behavior when that list is displayed.","Feedback Stage","1. Running the Simulation","Code:","lRet=moSimEngine.RunOutputs(sPaths, True)","Description: Inputs and lists notify the ICA when changes happen but not outputs. Therefore, the RunOutputs method must be invoked before submitting the work for feedback.","2. Triggering the ICA Rule Engine","Code:","lRet=moICA.Submit(lCoachID)","Description: Once the simulation has been processed, the Submit method of the ICA object must be called to trigger all the rules and deliver the feedback. This feedback will be written by the Tutor32.dll to two RTF formatted files. One file for previous feedback and one file for the current feedback.","3. Displaying ICA Feedback","Code:","Set oViewer=New CFeedbackViewer","oViewer.CoachID=vlCoachID","Call oViewer.DisplayFeedBack(moApp)","Description: The only thing required to display feedback information is to have an RTF control on a form and read-in the feedback files produced by the Submit method of the ICA object.","Final Stage","1. Saving the Simulation","Code:","lRet=moSimEngine.SaveSimulation(App.Path & DIR_DATA & FILE_SIMULATION)","Description: The SaveSimulation method of the simulation engine object will save the specified Excel spreadsheet to disk.","To use system dynamics models in the architecture, an engine had to be created that would translate student work into parameters for these models. A complex system dynamics model to interact with an existing simulation architecture is discussed below. The system dynamics model provides the following capabilities.","1. Allow designers to build and test their system dynamics models and ICA feedback before the real interface is built.","2. Reduce the programming complexity of the activities.","3. Centralize the interactions with the system dynamics models.","As with the simulation engine, the designer models the task that he\/she wants a student to accomplish using a Microsoft Excel spreadsheet. Here, however, the designer also creates a system dynamics model (described later). The system dynamics engine will read all of the significant cells within the simulation model (Excel) and pass these values to the system dynamics model and the ICA. After the system dynamics model runs the information, the output values are read by the engine and then passed to the simulation model and the ICA.",{"@attributes":{"id":"p-0642","num":"0735"},"figref":["FIG. 47","FIG. 47"]},"It is very important that all modifications that the ICA and system dynamics model need to know about go through the engine because only the engine knows how to call these objects. This significantly reduces the skill level required from programmers, and greatly reduces the time required to program each task. In addition, the end-product is less prone to bugs, because the model and tutor management will be centralized. If there is a problem, only one section of code needs to be checked. Finally, since the engine loads the data from the spreadsheet, the chance of data inconsistency between the ICA, the system dynamics model and the application is insignificant.",{"@attributes":{"id":"p-0644","num":"0737"},"figref":"FIG. 48"},"The different cells in the spreadsheet model can be configured as parameter inputs or parameter outputs for a system dynamics model. This is what the system dynamics engine uses to write and read data from the system dynamics model, pass values to the ICA and update the student's work in the on-line activities. By making the spreadsheet object the central repository for the system dynamics data, we ensure that the system dynamics model, simulation model, activity and ICA are all in synch.","The system dynamics model generates simulation results over time, based on relationships between the parameters passed into it and other variables in the system. A system dynamics object is used to integrate with Visual Basic and the spreadsheet object. The object includes logic that controls the time periods as well as read and write parameters to the system dynamics model. With Visual Basic, we can pass these parameters to and from the model via the values in the simulation object.","The system dynamics object also controls the execution of the system dynamics model. What this means is that after all of the parameter inputs are passed to the system dynamics model, the engine can run the model to get the parameter outputs. The system dynamics object allows for the system dynamics models to execute one step at a time, all at once, or any fixed number of time periods.","When the system dynamics model runs, each step of the parameter input and parameter output data is written to a \u2018backup\u2019 sheet for two reasons. First, the range of data that is received over time (the model playing multiple times) can be used to create trend graphs or used to calculate statistical values. Second, the system dynamics model can be restarted and this audit trail of data can be transmitted into the model up to a specific point in time. What this means is that the engine can be used to play a simulation back in time.","When any event occurs within the system dynamics engine, a log is created that tells the designers what values are passed to the simulation model, system dynamics model and ICA as well as the current time and the event that occurred. The log is called \u201cSysDyn.log\u201d and is created in the same location as the application using the engine. As with the spreadsheet object, the system dynamics object allows a large amount of the calculations to occur in the system dynamics model and not in the activity code, again placing more control with the activity designers.","Model objects are used to configure the system dynamics models with regard to the time periods played. Models are what the parameter inputs and parameter outputs (discussed later) relate to, so these must be created first. Every model has the following application programming interface:",{"@attributes":{"id":"p-0651","num":"0744"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Field Name","Data Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["ModelID","Long","Primary Key for the table"]},{"entry":["TaskID","Long","TaskID of the task associated with the model"]},{"entry":["ModelName","String*50","Name of the model (informational purposes)"]},{"entry":["ModelDesc","String*50","Description of the model (informational"]},{"entry":[{},{},"purposes)"]},{"entry":["SysDynModel","String*50","Filename of the actual system dynamics"]},{"entry":[{},{},"model"]},{"entry":["Start","Long","Start time to play modal"]},{"entry":["Stop","Long","Stop time to play model"]},{"entry":["Step","Long","Interval at which to play one model step and"]},{"entry":[{},{},"record data"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"This information is stored in the model table of the simulation database (ICASim.mdb). All of the values that will need to be manually entered by the student that are passed into the system dynamics model are configured as parameter inputs (PInputs) objects.","Every PInput has an interface as detailed below.",{"@attributes":{"id":"p-0654","num":"0747"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Field Name","Data Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["PinputID","long","Primary Key for the table"]},{"entry":["TaskID","long","TaskID of the task associated with the"]},{"entry":[{},{},"parameter input"]},{"entry":["ModelID","long","ID of the model associated with the"]},{"entry":[{},{},"parameter input"]},{"entry":["InputName","string*50","Name of the parameter input"]},{"entry":[{},{},"(informational purposes)"]},{"entry":["InputDesc","string*255","Description (informational purposes)"]},{"entry":["ReferenceName","string*50","Name of the spreadsheet cell associated"]},{"entry":[{},{},"with the parameter input"]},{"entry":["SimReferenceName","string*50","Name of the associated parameter in the"]},{"entry":[{},{},"system dynamics model"]},{"entry":["TutorAware","boolean","Whether the ICA should be notified of"]},{"entry":[{},{},"any changes to the parameter input"]},{"entry":["SourceItemID","long","SourceItemID of the parameter input"]},{"entry":["TargetID","long","TargetID of the parameter input"]},{"entry":["Row","long","Spreadsheet row number of the"]},{"entry":[{},{},"parameter input"]},{"entry":[{},{},"(used for speed optimization)"]},{"entry":["Column","long","Spreadsheet column number of the"]},{"entry":[{},{},"parameter input"]},{"entry":[{},{},"(used for speed optimization)"]},{"entry":["SheetName","string*50","Sheet name were the parameter input is"]},{"entry":[{},{},"located"]},{"entry":[{},{},"(used for speed optimization)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"All of this information is stored for every parameter input in the PInput table of the simulation database (ICASim.mdb).","PInputs consist of one spreadsheet cell that can be populated by a designer at design time or by the GBS application at run time via the system dynamics engine object's methods. The purpose of the cell is to provide an entry point to the simulation and system dynamics models. An example of an entry point would be the interest rate parameter in the interest calculation example. The ICA is notified of any changes to the cell when an appropriate activity transpires. When the ICA is notified of a change two messages are sent to the ICA. The first is an ICANotifyDestroy message with the parameter input information i.e., SourceItemID, TargetID and null as an attribute. This message is sent to inform the ICA to remove information from its memory. The second message is an ICANotifyCreate message with the parameter input information i.e., SourceItemID, TargetID, Attribute (cell numeric value). This message advises the ICA to add this information to its memory.","To demonstrate the use of a parameter input, the interest rate calculation example is again used as a backdrop to illuminate various features.  is a PInput Cell for a simulation model in accordance with a preferred embodiment.  is a PInput backup cell in a simulation model in accordance with a preferred embodiment. Interest Rate is the parameter input for this model which will then be used to calculate balance and interest accumulations. A defined name will also have to be created for the backup of the PInput as each time interval is played. A requirement for this cell is that it has the same name as the original PInput, but also have the \u201c_BU\u201d extension. The example here would be \u201cInterest_Rate_BU.\u201d This cell will also have to be created in a column where no other data exists, since all of the backups are written below this cell. In the ICA, define a task that will be assigned to the simulation. For example, a TaskID of 123 is generated by the ICA. For this example, we will assume that we want to give feedback on the interest rate selected by the student. In the ICA, define a Target for the parameter input.","A PInput table record in accordance with a preferred embodiment is presented below.",{"@attributes":{"id":"p-0659","num":"0752"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"PinputID:","12345"]},{"entry":[{},"TaskID:","\u2003123"]},{"entry":[{},"ModelID:","\u2003\u20031"]},{"entry":[{},"InputName:","Interest Rate input"]},{"entry":[{},"InputDesc:","Interest Rate input into interest"]},{"entry":[{},{},"calculation model"]},{"entry":[{},"ReferenceName:","Interest_Rate"]},{"entry":[{},"SimReferenceName","Param_Interest Rate"]},{"entry":[{},"TutorAware:","True"]},{"entry":[{},"SourceItemID","\u20021201"]},{"entry":[{},"TargetID:","\u20024001"]},{"entry":[{},"Row:","\u2003\u20036"]},{"entry":[{},"Column:","\u2003\u20033"]},{"entry":[{},"SheetName:","Sheet1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Once the configuration is completed, the designer can also use the ICA Utilities to test the simulation. The Row, Column and SheetName values are automatically populated when the designer runs the parameters in the System Dynamics Workbench in the ICA Utilities. The reason for obtaining the cell coordinates is that the processing of cell data is significantly faster with cell positions than simply using the defined name. The system dynamics engine decodes the defined name (Reference Name) that the designer entered, and populates the table accordingly. This is an important step because there have been occasions when a designer would change the layout of a spreadsheet, i.e., move a defined name location, and then forget to perform this step. As such, bizarre data was being passed to the tutor; whatever data happened to reside in the old row and column. Cells in the spreadsheet that are the output from a system dynamics models can be represented by parameter output objects (POutputs). Every POutput has an interface as detailed below.",{"@attributes":{"id":"p-0661","num":"0754"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Field Name","Data Type","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["PoutputID","Long","Primary Key for the table"]},{"entry":["TaskID","Long","TaskID of the task associated with"]},{"entry":[{},{},"the parameter output"]},{"entry":["ModelID","Long","ID of the model associated with the"]},{"entry":[{},{},"parameter output"]},{"entry":["OutputName","String*50","Name of the parameter output"]},{"entry":[{},{},"(informational purposes)"]},{"entry":["OutputDesc","String*255","Description (informational purposes)"]},{"entry":["ReferenceName","String*50","Name of the spreadsheet cell"]},{"entry":[{},{},"associated with the parameter output"]},{"entry":["SimReferenceName","String*50","Name of the associated parameter in"]},{"entry":[{},{},"the system dynamics model"]},{"entry":["TutorAware","Boolean","Whether the ICA should be notified"]},{"entry":[{},{},"of any changes to the parameter"]},{"entry":[{},{},"output"]},{"entry":["SourceItemID","Long","SourceItemID of the parameter output"]},{"entry":["TargetID","Long","TargetID of the parameter output"]},{"entry":["Row","Long","Spreadsheet row number of the"]},{"entry":[{},{},"parameter output (used for speed"]},{"entry":[{},{},"optimization)"]},{"entry":["Column","Long","Spreadsheet column number of the"]},{"entry":[{},{},"parameter output (used for speed"]},{"entry":[{},{},"optimization)"]},{"entry":["SheetName","String*50","Sheet name were the parameter"]},{"entry":[{},{},"output is located (used for speed"]},{"entry":[{},{},"optimization)"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"All of this information is stored for every output in the Output table of the simulation database (ICASim.mdb). Each POutput object conprises a spreadsheet cell that is an output from the system dynamics model. This is the information that shows the student the results of their choices and is the main reason for using system dynamics. The POutput can be made TutorAware, which will notify the ICA of any changes to the cell when all the POutputs are processed otherwise the ICA will be unaware of any changes. When the ICA is notified of a change, two messages are in fact sent to the ICA:","1. An ICANotifyDestroy message with the parameter output information i.e., SourceItemID, TargetID and null as Attribute. This message is to advise the ICA to remove this information from its memory.","2. An ICANotifyCreate message with the parameter output information i.e., SourceItemID, TargetID, Attribute (cell numeric value). This message is to advise the ICA to add this information to its memory.","As opposed to PInputs which notify the ICA on every change, POutputs are processed in batch just before asking the ICA for feedback.","POutputs use is illuminated below by an example that builds on the previous interest calculation example. Here, we want to notify the ICA of the balance as it results from changes in the interest rate.  is a display illustrating a POutput cell in accordance with a preferred embodiment. The steps required to configure the POutput are presented below.","1. Define a name for cell G4 in Excel. Here we have defined \u201cBalance.\u201d","2. Define the name of the backup cell as \u201cBalance_BU\u201d in a blank column.","3. Let's use the same TaskID as before since the Balance parameter is part of the same simulation as the Interest Rate parameter. Ex: TaskID is 123.","4. In the ICA, define a Target for the parameter output. Ex: a TargetID of 4005 is generated by the ICA.","5. In the ICA, define a SourceItem for the parameter output. Ex: a SourceItemID of 1215 is generated by the ICA.","6. Associate the parameter output to a system dynamics model (refer to Model object discussion).","7. Add the information in the POutput table of the simulation engine database. This configuration can also be done within the ICA Utilities.","The record in the POutput table would look something like this:",{"@attributes":{"id":"p-0675","num":"0768"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"OutputID:","12347"]},{"entry":[{},"TaskID:","123"]},{"entry":[{},"ModelID:","1234"]},{"entry":[{},"OutputName:","Balance Value"]},{"entry":[{},"OutputDesc:","Value of Balance after model has been run"]},{"entry":[{},"ReferenceName:","Balance"]},{"entry":[{},"SimReferenceName","Param_Balance"]},{"entry":[{},"TutorAware:","True"]},{"entry":[{},"SourceItemID","1215"]},{"entry":[{},"TargetID:","4005"]},{"entry":[{},"Row:","4"]},{"entry":[{},"Column:","7"]},{"entry":[{},"SheetName:","Sheet1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The following information provides details describing the interaction components in accordance with a preferred embodiment.",{"@attributes":{"id":"p-0677","num":"0770"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Title","Description"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Procedural tasks","Tasks which require the construction of some kind"]},{"entry":["(w\/drag drop)","of report with evidence dragged and dropped to"]},{"entry":[{},"justify conclusions"]},{"entry":["Procedural tasks","New task designs that are procedural in nature,"]},{"entry":["(w\/o drag drop)","have very little branching, and always have a correct"]},{"entry":[{},"answer."]},{"entry":["Ding Dong task","Tasks that interrupt the student while working on"]},{"entry":[{},"something else. This template includes interviewing"]},{"entry":[{},"to determine the problem, and a simple checkbox"]},{"entry":[{},"form to decide how to respond to the situation."]},{"entry":["Analyze and Decide","Most commonly used for static root cause analysis,"]},{"entry":["(ANDIE) task","or identification tasks. Developed on SBPC as a"]},{"entry":[{},"result of 3 projects of experience redesigning for"]},{"entry":[{},"the same skill."]},{"entry":["Evaluate Options","Used for tasks that require learner to evaluate how"]},{"entry":["(ADVISE)","different options meet stated goals or requirements."]},{"entry":[{},"Developed at SBPC after 4 projects experience"]},{"entry":[{},"redesigning for the same skill. Does not allow drag"]},{"entry":[{},"drop as evidence."]},{"entry":["Run a company task","Time based simulation where student \u201cchooses own"]},{"entry":[{},"adventure\u201d. Each period the student selects from"]},{"entry":[{},"a pre-determined list of actions to take. Developed"]},{"entry":[{},"on SBPC as a simplified version of the"]},{"entry":[{},"BDM manage task."]},{"entry":["Use a model task","When user needs to interact with a quantitative"]},{"entry":[{},"model to perform what if analysis. May be used for"]},{"entry":[{},"dynamic root cause analysis - running tests on a"]},{"entry":[{},"part to analyze stress points."]},{"entry":["ICA Dynamic","Developed on BDM to mimic interaction styles from"]},{"entry":["Meeting Task","Coach and ILS EPA. Supports dynamic-rule based"]},{"entry":[{},"branching - will scale to support interactions"]},{"entry":[{},"like EnCORE defense meetings and YES."]},{"entry":["Manage Task","Time based simulation where student manages"]},{"entry":[{},"resources. Human Resources Management,"]},{"entry":[{},"managing a budget, manage an FX portfolio."]},{"entry":["QVID Static","Developed on Sim2 to support agenda-driven"]},{"entry":["Meeting Task","meetings where user is presented with up to 5"]},{"entry":[{},"levels of follow-up questions to pursue a line of"]},{"entry":[{},"questioning. As they ask each question, it's"]},{"entry":[{},"follow-ups appear."]},{"entry":["Flow Chart Task","Will support most VISIO diagrams. Developed on"]},{"entry":[{},"Sim2 to support simple flow chart decision models."]},{"entry":["QVID Gather Data","Static flat list of questions to ask when interviewing"]},{"entry":["Component","someone. Not used when interviewing skills are"]},{"entry":[{},"being taught (use QVID Static meeting task)."]},{"entry":[{},"Supports hierarchical questions and timed"]},{"entry":[{},"transcripts."]},{"entry":["Journalize Task","Created to support simple journal entry tasks with"]},{"entry":[{},"up to 2 accounts per debit or credit."]},{"entry":["New Complex Task","A new task that requires a simulation component"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"The system dynamics engine is the interface between the simulation model, the system dynamics model, the simulation database and the Intelligent Coaching Agent. The system dynamics engine is of interest to the designer so that she can understand the mechanics of it. Once the designer has constructed the simulation model (Excel Spreadsheet), built the system dynamics model (PowerSim) and configured all of the parameter inputs and parameter outputs, a test can be performed using the workbench included in the ICA Utilities (refer to ICA Utilities documentation). The developers, in turn, need to implement the calls to the system dynamics engine in the GBS application that is being built. The following list identifies the files that need to be included in the Visual Basic project to use the system dynamics engine.",{"@attributes":{"id":"p-0679","num":"0772"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["WSysDynEng.cls","System dynamics Engine class"]},{"entry":["wSysDynEng.bas","System dynamics Engine module (this module was"]},{"entry":[{},"introduced only for speed purposes because all the"]},{"entry":[{},"code should theoretically be encapsulated in the class)"]},{"entry":["wConst.bas","Intelligent Coaching Agent constant declaration"]},{"entry":["wDeclare.bas","Intelligent Coaching Agent DLL interface"]},{"entry":["wIca.cls","Intelligent Coaching Agent class"]},{"entry":["wIca.bas","Intelligent Coaching Agent module (this module was"]},{"entry":[{},"introduced only for speed purposes because all of the"]},{"entry":[{},"code should theoretically be encapsulated in the class)"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"To utilize the system dynamics engine fully, the developer must place code in different strategic areas or stages of the application.","1) Initial stage\u2014the loading of the form containing the simulation front-end. This is when the simulation model and system dynamic engine are initialized.","2) Modification stage\u2014Takes place when the user makes changes to the front-end that impacts the simulation model PInputs). This is when the ICA is notified of what's happening.","3) Run stage\u2014The system dynamics model is run and parameter outputs are received.","4) Feedback stage\u2014The user requests feedback on the work that they have performed. This is when the simulation notifies the ICA of all output changes.","5) Final stage\u2014The simulation front-end unloads. This is when the simulation model is saved.","These stages will be explained by including the Visual Basic code involved as well as a short description of that code.","1. Creating the ICA & the Simulation Engine Objects","Code:","Set moSysDynEngine=New classSysDynEngine","Set moICA=New classICA","Description: The first step in using the system dynamics engine is to create an instance of the classSysDynEngine class and also an instance of the classICA class. Note that the engine and ICA should be module level object \u201cmo\u201d variables.","2. Loading the Simulation","Code:","lRet=moSysDynEngine.OpenSimulation(FILE_SIM, Me.bookSim, True)","lRet=moSysDynEngine.LoadSysDyn(mlICATaskID, DB_SIMULATION, 1)","lRet=moSysDynEngine.LoadModel(MODEL_NAME,mbTaskStarted)","Description: After the object creation, the OpenSimulation, LoadSimulation and LoadModel methods of the system dynamics engine object must be called. The OpenSimulation method reads the specified Excel 5.0 spreadsheet file (FILE_SIM)"],"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION","Relationship of Components","Development Cycle Activities","Utilities","Documentation","Project Directory","Shared Development","The ICAT Model of Remediation","Activity","Task","Simulation Engine","System Dynamics in Accordance with a Preferred Embodiment","System Dynamics Engine","Systems Dynamic Engine","Initial Stage Code In Accordance With A Preferred Embodiment"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":["The foregoing and other objects, aspects and advantages are better understood from the following detailed description of a preferred embodiment of the invention with reference to the drawings, in which:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIGS. 18 and 19"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIGS. 23 and 24"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 25"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 26"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 27"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 28"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 29"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 30"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 31"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 32"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 33"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 34"},{"@attributes":{"id":"p-0042","num":"0041"},"figref":"FIG. 35"},{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 36"},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 37"},{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 38"},{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 39"},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 40"},{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 41"},{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 42"},{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 43"},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 44"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 45"},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 46"},{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 47"},{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 48"},{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 49"},{"@attributes":{"id":"p-0057","num":"0056"},"figref":"FIG. 50"},{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 51"},{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 52"},{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 53"},{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 54"},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 55"},{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 56"},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 57"},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 58"},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 59"},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 60"},{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 61"},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 62"},{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 63"},{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 64"},{"@attributes":{"id":"p-0072","num":"0071"},"figref":"FIG. 65"},{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 66"},{"@attributes":{"id":"p-0074","num":"0073"},"figref":"FIG. 67A"},{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 67B"},{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 68"},{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 69"},{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 70"},{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 71"},{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 72"},{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 73"},{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 74"},{"@attributes":{"id":"p-0083","num":"0082"},"figref":"FIG. 75"},{"@attributes":{"id":"p-0084","num":"0083"},"figref":"FIG. 76"},{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 77"},{"@attributes":{"id":"p-0086","num":"0085"},"figref":"FIG. 78"},{"@attributes":{"id":"p-0087","num":"0086"},"figref":"FIG. 79"},{"@attributes":{"id":"p-0088","num":"0087"},"figref":"FIG. 80"},{"@attributes":{"id":"p-0089","num":"0088"},"figref":"FIG. 81"},{"@attributes":{"id":"p-0090","num":"0089"},"figref":"FIG. 82"},{"@attributes":{"id":"p-0091","num":"0090"},"figref":"FIG. 83"},{"@attributes":{"id":"p-0092","num":"0091"},"figref":"FIG. 84"},{"@attributes":{"id":"p-0093","num":"0092"},"figref":"FIG. 85"},{"@attributes":{"id":"p-0094","num":"0093"},"figref":"FIGS. 86 and 87"},{"@attributes":{"id":"p-0095","num":"0094"},"figref":"FIGS. 88-99"}]},"DETDESC":[{},{}]}
