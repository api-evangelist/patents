---
title: Method and apparatus for secure cross-site scripting
abstract: An approach is provided for providing secure cross-site scripting. A web services platform causes, at least in part, reception of an initiation request from at least a first inline frame of at least one web page. The initiation request specifies a developer identifier associated with a domain of the at least one web page. The web services platform determines a callback resource identifier based on the developer identifier. The web services platform then determines to cause, at least in part, transmission of the callback resource identifier to the at least the first inline frame for use in creation of at least a second inline frame associated with the at least the first inline frame.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08789204&OS=08789204&RS=08789204
owner: Nokia Corporation
number: 08789204
owner_city: Espoo
owner_country: FI
publication_date: 20091222
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SOME EXAMPLE EMBODIMENTS","DESCRIPTION OF SOME EMBODIMENTS"],"p":["Service providers (e.g., wireless, cellular, etc.) and device manufacturers are continually challenged to deliver value and convenience to consumers by, for example, providing compelling network services. One area of development has been the combination or integration of one or more of these services into web pages for creating new and unique services, or for simply providing more convenient access to such services. For example, this integration is commonly implemented as scripts embedded into the web page's source code to access functions or application programming interfaces (APIs) corresponding to the services. However, modern browsers generally limit access for web pages and applications that execute scripts between different domains to, for instance, combine services, application, and\/or content between different websites. The purpose of these limitations is to prevent malicious attackers or hackers from injecting client-side script into web pages viewed by users to prevent security risks. A malicious attacker able to execute a script on the web page may be able to control the same functions that the web page is able to control, including access to cookies and other personal information. However, these restrictions also create technical burdens on providing access to such cross-site (e.g., multi-domain) services or applications while complying the security policies and limitations of modern browsers.","Therefore, there is a need for an approach for secure cross-site scripting.","According to one embodiment, a method comprises causing, at least in part, reception of an initiation request from at least a first inline frame of at least one web page, the initiation request specifying a developer identifier associated with a domain of the at least one web page. The method also comprises determining a callback resource identifier based on the developer identifier. The method further comprises determining to cause, at least in part, transmission of the callback resource identifier to the at least the first inline frame for use in creation of at least a second inline frame associated with the at least the first inline frame.","According to another embodiment, an apparatus comprising at least one processor, and at least one memory including computer program code, the at least one memory and the computer program code configured to, with the at least one processor, cause, at least in part, the apparatus to cause, at least in part, reception of an initiation request from at least a first inline frame of at least one web page, the initiation request specifying a developer identifier associated with a domain of the at least one web page. The apparatus is also caused to determine a callback resource identifier based on the developer identifier. The apparatus is further caused to determine to cause, at least in part, transmission of the callback resource identifier to the at least the first inline frame for use in creation of at least a second inline frame associated with the at least the first inline frame.","According to another embodiment, a computer-readable storage medium carrying one or more sequences of one or more instructions which, when executed by one or more processors, cause, at least in part, an apparatus to cause, at least in part, reception of an initiation request from at least a first inline frame of at least one web page, the initiation request specifying a developer identifier associated with a domain of the at least one web page. The apparatus is also caused to determine a callback resource identifier based on the developer identifier. The apparatus is further caused to determine to cause, at least in part, transmission of the callback resource identifier to the at least the first inline frame for use in creation of at least a second inline frame associated with the at least the first inline frame.","According to another embodiment, an apparatus comprises means for causing, at least in part, reception of an initiation request from at least a first inline frame of at least one web page, the initiation request specifying a developer identifier associated with a domain of the at least one web page. The apparatus also comprises means for determining a callback resource identifier based on the developer identifier. The apparatus further comprises means for determining to cause, at least in part, transmission of the callback resource identifier to the at least the first inline frame for use in creation of at least a second inline frame associated with the at least the first inline frame.","According to one embodiment, a method comprises causing, at least in part, creation of an inline frame within a web page of a first domain associated with a developer identifier. The inline frame is associated with a second domain. The method also comprises determining to cause, at least in part, transmission of the developer identifier to a platform associated with the second domain. The method further comprises causing, at least in part, reception at the inline frame of a callback resource identifier from the platform. The callback resource identifier is determined based, at least in part, on the developer identifier. The method further comprises causing, at least in part, creation of another inline frame within the inline frame. The other inline frame is based, at least in part, on the callback resource identifier.","According to another embodiment, an apparatus comprising at least one processor, and at least one memory including computer program code, the at least one memory and the computer program code configured to, with the at least one processor, cause, at least in part, the apparatus to cause, at least in part, creation of an inline frame within a web page of a first domain associated with a developer identifier. The inline frame is associated with a second domain. The apparatus is also caused to determine to cause, at least in part, transmission of the developer identifier to a platform associated with the second domain. The apparatus is further caused to cause, at least in part, reception at the inline frame of a callback resource identifier from the platform. The callback resource identifier is determined based, at least in part, on the developer identifier. The apparatus is further caused to cause, at least in part, creation of another inline frame within the inline frame. The other inline frame is based, at least in part, on the callback resource identifier.","According to another embodiment, a computer-readable storage medium carrying one or more sequences of one or more instructions which, when executed by one or more processors, cause, at least in part, an apparatus to cause, at least in part, creation of an inline frame within a web page of a first domain associated with a developer identifier. The inline frame is associated with a second domain. The apparatus is also caused to determine to cause, at least in part, transmission of the developer identifier to a platform associated with the second domain. The apparatus is further caused to cause, at least in part, reception at the inline frame of a callback resource identifier from the platform. The callback resource identifier is determined based, at least in part, on the developer identifier. The apparatus is further caused to cause, at least in part, creation of another inline frame within the inline frame. The other inline frame is based, at least in part, on the callback resource identifier.","According to another embodiment, an apparatus comprises means for causing, at least in part, creation of an inline frame within a web page of a first domain associated with a developer identifier. The inline frame is associated with a second domain. The apparatus also comprises means for determining to cause, at least in part, transmission of the developer identifier to a platform associated with the second domain. The apparatus further comprises means for causing, at least in part, reception at the inline frame of a callback resource identifier from the platform. The callback resource identifier is determined based, at least in part, on the developer identifier. The apparatus further comprises means for causing, at least in part, creation of another inline frame within the inline frame. The other inline frame is based, at least in part, on the callback resource identifier.","Still other aspects, features, and advantages of the invention are readily apparent from the following detailed description, simply by illustrating a number of particular embodiments and implementations, including the best mode contemplated for carrying out the invention. The invention is also capable of other and different embodiments, and its several details can be modified in various obvious respects, all without departing from the spirit and scope of the invention. Accordingly, the drawings and description are to be regarded as illustrative in nature, and not as restrictive.","Examples of a method, apparatus, and computer program for providing secure cross-site scripting are disclosed. In the following description, for the purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the embodiments of the invention. It is apparent, however, to one skilled in the art that the embodiments of the invention may be practiced without these specific details or with an equivalent arrangement. In other instances, well-known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the embodiments of the invention.",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1"},"In one sample use case, a web page developer generates a web page that utilizes an application provided by a web services provider (e.g., via an API) associated with a different domain. Because of the same origin policy restrictions, the web page may not be able to directly use or allow use of scripts sourced at the different domain. Thus, the web page may not have direct access to all of the functionalities of the scripts associated with the other domain. Further, because the web page may not have access to the information associated with the application, the web page may not use the information associated with the application to update other parts of the web page. In other words, any other parts of the web page (e.g., referenced to the same service provider or another service provider) that might depend on the information (e.g., user login credentials obtained from the other domain) would be unable to render or otherwise use the information. Historically, other solutions to the same origin policy have been utilized, however, many of these solutions provide little security or limited cross-site messaging. As such, the service providers have only a limited set of options for stopping scripts provided to a domain or keeping certain web pages from retrieving information from the scripts using cross-site messaging.","To address this problem, a system  of  introduces the capability to provide secure cross-site scripting (XSS) by generating a developer key to bind a callback resource identifier (e.g., a callback Uniform Resource Locator (URL)) which is used for passing data, information, resources, and the like between different domains. In one embodiment, a UE  (e.g., any of the UEs -) can retrieve a web page from a web content platform  via a communication network . In certain embodiments, the UE  is connected to the communication network  via a wireless connection (e.g., UE ) or a wired connection (e.g., UE ). All or a portion of the web content platform  may be associated with a particular web developer (e.g., an entity such as a corporation, company, person, etc.) via, for instance, one or more domains. For example, the web developer may develop content, information, services, applications, etc. for use or access as web content. This web content may be referenced or included within one or more web pages provided by the web content platform  and may be stored in a web content database .","A web browser  of the UE  is utilized to present the web content to a user. Further, the web browser  may be utilized to receive input, via the UE . The web browser  can retrieve, present, and traverse information resources over the World Wide Web. By way of example, the web browser  may utilize resource identifiers and resource locators such as uniform resource identifiers (URIs) and uniform resource locators (URLs) to navigate the World Wide Web. Further, the web browser  may utilize a markup language, such as HyperText Markup Language (HTML), to navigate and format web content. Examples of a web browser include Internet Explorer\u00ae, Mozilla Firefox\u00ae, Apple Safari\u00ae, and Opera\u00ae.","In one embodiment, the web browser  may include the browser limitations (e.g., the same origin policy) previously discussed. Accordingly, the developer of the web content platform  may have difficulties providing web content to the user if the web content includes information from another domain, such as a web services platform . The web services platform  may include one or more service APIs  to provide web content to users. Examples of services and information provided by the service API  may include, shopping, digital sound, songs, digital images, digital games, digital maps, point of interest information, digital videos, such as music videos, news clips and theatrical videos, advertisements, program files or objects, any other digital media or content, or any combination thereof that may be utilized in an application, web page, or other content available via the web content platform . A media or other content player associated with the web browser  may be utilized to present the content from the web services platform  via the service API . The service API  may be implemented via libraries provided to the developer by a service provider associated with the web services platform . Further, requests and responses to\/from the web services platform from\/to the web browser  can be via common interfaces (e.g., Extensible Markup Language Hypertext Transfer Protocol Request (XHR)).","To provide access to the user of the web browser  to the content of the services platform , which may include scripts, the developer may include a call to the service API  via an inline frame (iframe). In certain embodiments, an iframe may be part of a web document (e.g., a web page) that can be segmented from the remainder of the web document. The iframe may include another web document (e.g., an HTML document), which may be sourced from another domain (e.g., the web services platform ). The iframe may additionally act as if it was a web document, thus, it may additionally call one or more additional iframes. To provide interactivity between the content of the iframe and the web page and\/or other iframes, nested iframes can be utilized. Further, in certain embodiments when the iframes are used solely for transferring data between the iframes and the web page, one or more of the nested iframes may be presented on the web page in a manner that is not visible (e.g., as a transparent or small iframe) to the user. In this way, iframes for transferring data may be non-visible to the user.","In one embodiment, each web document (e.g., the web page and any iframe) may be referred to as a window. The windows may be organized in a tree-like manner, that is, the web page may call multiple branches of iframes associated with one or more domains, which can each also include other iframes. As such, the developer may wish to provide some or all of the information included in one iframe to another iframe. However, as noted previously, a property of the web browser  (e.g., the same origin policy) may specify that windows may only access the internal state of another window (e.g., the web page window or an iframe window) if the windows belong to the same domain (e.g., the web content platform domain). Thus, the scripts of one iframe may not communicate directly to the scripts of another iframe. Further, any window may refer to another window (e.g., via a handle) in its hierarchy. For example, the iframe may refer to its parent window (the web page) by calling it a parent. Further, a window (e.g., the web page) may refer to a child window (e.g., the iframe) using the handle of window.frames[name]. Name may be a reference to the window (e.g., if the parent window has 3 iframe children, the children may be named 1, 2, and 3). Further, to refer to a sibling, the window may use a handle of parent.frames[sibling]. Further, another property of the web browser  may specify that any window in the hierarchy can set the location of other windows' locations (e.g., URLs). However, a window may not be able to read the location of another window unless the window is associated with the same domain as the other window. Further, another property of a window, in certain embodiments, specifies that when a URL of the window is changed, the web content associated with the window is reloaded. However, the window may include a property that the window is not reloaded if the change to the URL only changes a fragment identifier. In certain embodiments, a fragment identifier includes data placed after a hash mark (e.g., #) of the URL. URLs may be information that may be accessed by other windows in the same domain. As such, fragment identifiers may be utilized to pass information between windows.","Because the purpose of the browser limitations is to provide for additional security, providing XSS on a web page may implement security measures. As such, the web services platform  includes a key repository  for associating an identifier of the developer (e.g., a developer key) with a domain associated with the developer. The developer may register with the service provider of the web services platform  to register as a trusted developer (e.g., a developer that is trusted to utilize XSS associated with the web services platform ). Further, the developer may be assigned the developer key and the key repository  may include a binding of the developer key to a particular domain (e.g., a domain associated with a website of the web content platform ). In certain embodiments, the developer key is an identifier of the developer that is linked to a callback resource identifier in the key repository . Further, the binding may include one or more callback resource identifiers or URLs that may be utilized as a bridge for communication between the web content platform  and the web services platform . In certain embodiments, the callback resource identifier is a modified or unmodified URL associated with the developer key. Optionally, the binding may include a revocation status of the developer. If the services platform  receives information that the developer key has been compromised or complaints about the developer, the revocation status may be set provide information that scripts should not be executed on the developer's website.","In one embodiment, the web browser  loads the web page of the developer from the web content platform . The web page is associated with a first domain. The web page includes source code that causes, at least in part, the web browser  to create an iframe to access content, including scripts, from the web services platform , which is associated with a second domain. Because the web page and the iframe are sourced from two different domains, the iframe may not directly communicate with the web page. The web browser  may setup communications with the service API  using the iframe. The setup process may include providing the web services platform  with the developer key, a user identifier, or a combination thereof. In certain embodiments, the user identifier may be a secure user identifier (e.g., a single sign-on (SSO) hash value). A SSO hash value may include a user identifier and a sign-on key. In certain scenarios, the user of the web content platform  may have pre-authenticated with the web services platform  to receive individualized services.","To securely allow the web services platform  to communicate with the web page of the web content platform , the web services platform  utilizes the callback resource identifier associated with the developer key to cause the web browser  to create another iframe within the iframe sourced using the domain of the callback resource identifier. As noted above, if a revocation status of the developer key provides that scripts should not be executed on the web page, the iframe may be caused to stop execution of scripts. If scripts are allowed and if the developer key callback resource identifier domain matches the web page domain, then, the other iframe may be utilized to send information from the service API  to the web page. As noted above, the scripts of one window may be able to communicate with the scripts of another window if the scripts of the two windows are in the same domain. In this manner, information that the service API  wants to present to the web page may be generated and provided in the other iframe. An exemplary manner of communication may include pseudo code in the other iframe including \u201cwindow.parent.parent.receivePackage,\u201d where the receivePackage identifier includes the information. In certain embodiments, the service API  may include an authentication token. The authentication token may be utilized as a means for the web page to communicate with the service API  based on the created session. Further communications from the web page to the service API  may be performed in the same manner, except utilizing the token as the developer key. With the above approach, an unauthorized web page (e.g., a web page in a different domain than the domain bound to the developer key) cannot access the authentication token or the information associated with the receivePackage identifier because of the security limitations (e.g. the same origin policy) of the web browser  that block direct communication between two windows associated with different domains.","Once the web page has the information (e.g., a user birth day), the web page may utilize the gathered information for use in other applications (e.g., a horoscope application), player, etc. Further, the web page may call another service from another domain and provide the information as a parameter for the service. In one example, the service is a horoscope service that requires a birth date of a user to provide the service. The web page may retrieve the birth date from the service API  via the processes provided above and pass the birth date as a parameter within the horoscope service. Further, the web page may retrieve other information from the horoscope service (e.g., astrological compatibility information) using the approaches provided above and pass the other information to a dating application on another portion of the web page.","In one embodiment, the web content platform  and the web services platform  can be implemented via shared, partially shared, or different computer hardware (e.g., the hardware described with respect to ). For example, the web services platform  may include one or more servers used in conjunction to provide a service.","As shown in , the system  comprises a user equipment (UE)  having connectivity to the web content platform  and the web services platform  via a communication network . By way of example, the communication network  of system  includes one or more networks such as a data network (not shown), a wireless network (not shown), a telephony network (not shown), or any combination thereof. It is contemplated that the data network may be any local area network (LAN), metropolitan area network (MAN), wide area network (WAN), a public data network (e.g., the Internet), or any other suitable packet-switched network, such as a commercially owned, proprietary packet-switched network, e.g., a proprietary cable or fiber-optic network. In addition, the wireless network may be, for example, a cellular network and may employ various technologies including enhanced data rates for global evolution (EDGE), general packet radio service (GPRS), global system for mobile communications (GSM), Internet protocol multimedia subsystem (IMS), universal mobile telecommunications system (UMTS), etc., as well as any other suitable wireless medium, e.g., worldwide interoperability for microwave access (WiMAX), Long Term Evolution (LTE) networks, code division multiple access (CDMA), wideband code division multiple access (WCDMA), wireless fidelity (WiFi), satellite, mobile ad-hoc network (MANET), and the like.","The UE  is any type of mobile terminal, fixed terminal, or portable terminal including a mobile handset, station, unit, device, multimedia computer, multimedia tablet, Internet node, communicator, desktop computer, laptop computer, Personal Digital Assistants (PDAs), or any combination thereof. It is also contemplated that the UE  can support any type of interface to the user (such as \u201cwearable\u201d circuitry, etc.). The web browser  may execute on a runtime module  of the UE  utilize a memory of the UE  to store browser instructions and information. The UE  may include a user interface to present the web browser  (e.g., via a graphical user interface (GUI)) and receive information to utilize the web browser . The user interface can include various methods of communication. For example, the user interface can have outputs including a visual component (e.g., a screen), an audio component, a physical component (e.g., vibrations), and other methods of communication. User inputs can include a touch-screen interface, a scroll-and-click interface, a button interface, a microphone, etc.","By way of example, the UE , web content platform , and web services platform  communicate with each other and other components of the communication network  using well known, new or still developing protocols. In this context, a protocol includes a set of rules defining how the network nodes within the communication network  interact with each other based on information sent over the communication links. The protocols are effective at different layers of operation within each node, from generating and receiving physical signals of various types, to selecting a link for transferring those signals, to the format of information indicated by those signals, to identifying which software application executing on a computer system sends or receives the information. The conceptually different layers of protocols for exchanging information over a network are described in the Open Systems Interconnection (OSI) Reference Model.","Communications between the network nodes are typically effected by exchanging discrete packets of data. Each packet typically comprises (1) header information associated with a particular protocol, and (2) payload information that follows the header information and contains information that may be processed independently of that particular protocol. In some protocols, the packet includes (3) trailer information following the payload and indicating the end of the payload information. The header includes information such as the source of the packet, its destination, the length of the payload, and other properties used by the protocol. Often, the data in the payload for the particular protocol includes a header and payload for a different protocol associated with a different, higher layer of the OSI Reference Model. The header for a particular protocol typically indicates a type for the next protocol contained in its payload. The higher layer protocol is said to be encapsulated in the lower layer protocol. The headers included in a packet traversing multiple heterogeneous networks, such as the Internet, typically include a physical (layer 1) header, a data-link (layer 2) header, an internetwork (layer 3) header and a transport (layer 4) header, and various application headers (layer 5, layer 6 and layer 7) as defined by the OSI Reference Model.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 2","b":["111","111","111","113","115","201","203","205","207"]},"The service portal  may be utilized by the control logic  to provide a means for a user to authenticate with the web services platform  via the account manager . The account manager  may be utilized to store and determine authentication parameters associated with the user. The user account manager , for instance, manages the sharing of login credentials by tracking which of the services share login credentials and then linking the credentials to the user accounts created with the various services a particular user. By way of example, the user account manager  may store the tracking information for the login credentials and the user account information in the memory . Further, the memory  may include one or more processes and one or more data structures that stores information about registered users each of the services, including login credentials and related information as well as data, configurations, user profiles, variables, conditions, and the like associated with using any of the services. The user's web browser  may access a web page associated with the service portal  to provide authentication information (e.g., a user name and password) to the web services platform . The control logic  can then provide the account manager  with the authentication information. The account manager  can then associate the user to an account and further provide an authentication hash as a secure user identifier valid for a certain amount of time to the web browser  via the service portal .","As noted above, the service API  may be utilized to provide services to a web browser  and may be utilized to send and receive messages. In certain embodiments, the service API  may be implemented on one or more platforms (e.g., servers, computers, electronic machines etc.) and utilize a representational state transfer (REST), SOAP, Extensible Messaging and Presence Protocol (XMPP), a JavaScript API, other similar APIs, customized APIs, or a combination thereof. In certain embodiments, functions, constructs, and other information for using the service API  may be provided to website developers to utilize in their web pages. Data associated with the services provided by the service API  may be stored in the memory . As such, the memory  may include volatile memory, non-volatile memory, or a combination thereof. Further, more than one memory  may be utilized.","When a request to utilize the service API  is received, the request may include a developer key, an authentication key, an authentication token, other authentication information (e.g., the secure user identifier or a user name and password), or a combination thereof. As previously noted, the service API  may compare the developer key and\/or authentication key to the key repository  to associate the service to be provided with a domain. As such, the key repository  may include bindings to domains and\/or URLs for the developer key and\/or authentication key. In certain embodiments, when a developer key is used for a session, an authentication key is generated for use during the session. The authentication key can be stored in the key repository  and be associated with the domain of the developer of the developer key utilized to generate the authentication key.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 3","b":["109","111","109","109","103","301","109","103","301","303","113","111","307","309","309","111","303","305","305","301","305","301","301","111","303"]},"In another embodiment, the same processes occur, however, another website of a third domain that is different from the first domain (e.g., hacker.[hacker root]) is called in a second tab web page . This may occur, for example, if an attacker sends an e-mail to the user with the web link and the user clicks on the link. Under this scenario, a first iframe  may be created to communicate with the web services platform , and the second iframe  may be created by the web services platform  to provide information back to the developer's website. In this scenario, however, because the second iframe  is based on the developer key and not the second tab web page  calling the first iframe , the domain of the second iframe  and the domain of the second tab web page  are different. Thus, the [hacker root] website is unable to access the authentication key and utilize more services from the web services platform .",{"@attributes":{"id":"p-0046","num":"0045"},"figref":["FIG. 4","FIG. 8"],"b":["109","400","109","400","101","109","401","109","113"]},"Then, at step , the web browser  causes, at least in part, creation of an iframe within the web page of the first domain associated with a developer identifier (e.g., the developer key). As such, the web browser  provides a means for implementing step . The iframe can be associated with a second domain (e.g., the domain of the service API ). As previously noted, the iframe may be utilized to provide content from the service API in the web page. For example, the web browser  may execute scripts on the iframe and present the content of the iframe. Then, at step , the web browser  determines to cause and causes, at least in part, transmission of the developer identifier to a web services platform  associated with the second domain. The communication may be in the form of utilizing a web URL from the web page to communicate with the second domain. The web URL may include additional information, such as developer identifier, user information, etc. in the URL. This may be utilized to provide the web services platform  with the developer identifier and\/or user information. In certain embodiments, the user may be pre-authenticated with the web services platform  using a single sign-on technique at a web service portal  associated with the second domain. This sign-on information may be stored in a memory associated with the web browser (e.g., a cookie). As such, the iframe is able to retrieve the sign-on information from the web browser  without need to re-authenticate the user. Then, the web services platform  performs processes, as further detailed in  utilizing the information.","The web browser  provides means for determining to cause and causing, at least in part, reception at the iframe of a callback resource identifier from the web services platform  (step ). As mentioned in the processes of , the callback resource identifier is determined based, at least in part on the developer identifier. Further, because the iframe is associated with the second domain, the iframe is unable to directly communicate with the web page using scripts. Thus, the iframe causes, at least in part, creation of another iframe within the iframe to attempt to communicate with the web page (step ). The other iframe is based, at least in part, on the received callback resource identifier. Because the other iframe's domain is based on the developer identifier, it is not guaranteed that the domain of the other iframe is the same domain as the web page. The other iframe may have instructions from the second domain to provide service data to the web page. As noted previously, this provides a measure of security for providing the service API  to provide the service data to the developer domain. While attempting to execute this instruction, the web browser  determines whether the domain is associated with the callback resource identifier matches the first domain (step ).","If the content of the other iframe is associated with a third domain different from the first domain, the web page of the first domain is unable to access the service data from the second domain (step ). In this way, the web browser  may detect an attempt to access the service data at the web page or an attempt to provide the service data to the web page. Then, based on the determination that the domains do not match, the web browser  can return an error message associated with the attempt. In certain embodiments, this error message may be displayed to the user via the web browser  and may further conspicuously notify the user that the error may have been caused by an attempt to hack the user's computer for information. Alternatively or additionally, scripts executing on the first domain may not be provided an error message from the iframe of the third domain. In other scenarios, the error can be handled by scripts of the first domain using a timeout signal or a check to determine connectivity to the API. As such, when the timer expires, an error signal may be produced to trigger an error message to be presented on the web page.","If the content of the other iframe is associated with the first domain, the other iframe may be utilized by the web services platform  to indicate to the web browser  that the service data should be provided to the web page. Thus, the service data can be accessed at the web page of the first domain (step ). Further, the web page may utilize this service data in other portions of the web page (e.g., by calling yet another iframe associated with other content and providing the service data or by displaying the service data on the web page or otherwise using the service data). Moreover, the received service data may include an authentication token generated by the web services platform  as detailed in .","The authentication token may then be utilized to cause, at least in part, sending of data from the web page of the first domain to the second domain (e.g., the web services platform ) using a URL to create a bridge of the second domain including the authentication token (step ). The data can be determined by the web browser  according to instructions from the web page. In certain embodiments, the base URL is the same base URL as used in the initiation of the iframe and augmented based on the authentication token. In other embodiments, the URL may be passed as part of the service data. Further, the base URL may be used to generate another resource identifier based, at least in part, on the authentication token and the data to be sent. The data to be sent may be a call to the API of the web services platform  as well as parameters associated with the call. Thus, the URL may include the call as part of the URL. Then, the web browser  is caused, at least in part, by the web page (e.g., via a script executing on the web page) to update a location identifier of the iframe with the generated other resource identifier. Then, because the location identifier is updated, the web browser  is automatically caused to reload the iframe, causing the content information to be sent to the second domain.","In another embodiment, the iframe may receive an instruction from the second domain to stop execution of scripts on in the iframe. This may be included in the service data and\/or as part of the callback resource identifier. Further, this provides the web services platform  with an option to stop the scripts associated with a developer identifier based on one or more reasons (e.g., information that the web page associated with the developer is misbehaving).",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 5","FIG. 8"],"b":["205","500","111","500","501","205"]},"The control logic  can be a means to associate the initiation request with an account based on the secure user identifier (step ). As noted earlier, the account manager  may provide means for associating the account with the request. Further, information associated with the account may be part of service data to be provided to the web page or may be presented using scripts (e.g., in the iframe).","Additionally, the control logic  and key repository  can be a means for determining a callback resource identifier based on the developer identifier (step ). As previously noted, a callback resource identifier can be associated with the developer identifier in the key repository . Optionally, in certain embodiments, the callback resource modifier is associated with a revocation status (step ). The revocation status may be a status identifier associated with the scripts provided by the API to the web page to indicate to the iframe to stop all scripts.","Thus, the web services platform  reserves the right to revoke access to the scripts. The service API  of the web services platform  and\/or service portal  may be utilized to receive comments about developers. As such, the comments may include information that the scripts executing on the domain of the developer identifier are misbehaving or the developer is otherwise untrustworthy. In certain embodiments, these comments are received using the domain as the identifier. Then, the control logic  can update the key repository  based on the information.","Further, the control logic  can be a means to generate a token based on the secure user identifier as previously mentioned (step ). The secure user identifier and a random element (e.g., a time stamp) may be combined to generate the token. The token can be saved (e.g., to the key repository ) and linked to the developer identifier and a current session with the user. In future communications between the web page and the web services platform , the token may be utilized as part of an authentication key to link the communications to the session. In certain embodiments, the callback resource identifier may be updated with the token and\/or revocation status. Additionally or alternatively, service data may be generated to include the token, revocation status, other information (e.g., account information, content information, etc.), or a combination thereof. In certain embodiments, the control logic  checks the revocation status and determines that the access to scripts on the iframe. Then, the control logic  can send instructions to the iframe to stop all scripts on the iframe.","Next, at step , the control logic  may be a means to determine to cause and cause, at least in part, transmission of the callback resource identifier to the iframe for use in creation of another (e.g., a second) iframe associated with the iframe. As previously noted, the control logic  generates instructions to the iframe to cause the creation of the other iframe to pass information to the web page. Moreover, as previously noted, the callback resource identifier may include the token (e.g., authentication key). Further, the service data can be provided as part of the other iframe (e.g., as part of the callback resource identifier of the other iframe). The, further communications from the web page to the control logic  can be via the iframe with an updated location identifier including the token. As noted above, the updated location identifier may be a URL of the domain of the web services platform  further including the token.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 6","FIG. 6"],"b":["109","111"]},"At step , the user of the web browser  navigates to a service portal web page that includes a sign-on for the web services platform . The service portal web page may be hosted by the service portal . The service portal  provides the user with static content (e.g., content provided to each user that arrives at the service portal web page) (step ). The static content may be provided over a content delivery network. Then, at step , the web browser  provides authentication information to the service portal  associated with the user. The authentication information may include a user name and password the user has with the web services platform . If no account is found for the user, the user may be prompted to create an account and then authenticate access to the account. Then, the service portal  provides the authentication information to an account manager  that has access to a database including the authentication credentials of the user, other user information, and what services the user has access to. Based on the authentication credentials, the account manager  can generate a secure user identifier (e.g., a hash of the user authentication information and a key (e.g., based on a time stamp)) and provide the secure user identifier to the service portal  (step ). Next, the web browser  receives a message that the user has been authenticated (step ). In one embodiment, the message may include the secure user identifier.","Later, the user may navigate to a web page of a developer in another domain from the service portal . The web page may include instructions to access content from the web services platform  and present the content on the web page. The web browser , at step  initiates the creation of an inline frame using a developer key (e.g., a developer identifier). The web browser  then sets up XSS at step . The XSS in the browser  for API use may be the inline frame associated with the domain of the service API . This may be implemented by sourcing information from the service API  of the web services platform . Then, at step , the web browser  sends a request to initiate, with the developer key, a communication channel with the service API . The request may be a web URL executed by the web browser in the iframe, the web URL including the developer key. Further, the iframe may have access to the secure user identifier. Then, the service API  accesses the secure user identifier to associate the initiated session with the user. This may be accomplished by sending the secure user identifier to the account manager  to retrieve sign-on information about the user (step ).","Next, at step , the service API  retrieves information associated with the developer key from the key repository  (step ). The associated information may include one or more callback resource identifiers. Then, at step , the service API  receives the callback resource identifier associated with the developer key. An example of the callback resource identifier may be \u201c[root domain 1]\/bridge.\u201d As mentioned earlier, the callback resource identifier may be associated with a revocation status for disabling scripts executing on the iframe. This may be further appended as additional information.","Further, at step , the service API  generates a token to associate the developer key, user information, and\/or initiated session. This token may additionally include a random element (e.g., based on a time stamp or other selected information) to facilitate, for instance, generation of unique tokens. The token and the callback resource identifier may then be provided to the web browser  at the iframe (step ). The web browser  can then receive an instruction to create another iframe to the callback resource identifier with the token included (step ). The other iframe may be used as a bridge to send information from the service API  to the web browser  and the web page. In one embodiment, the resource identifier may include a [root domain], a bridge, and fragment data to provide the communication information. An example of the resource identifier may be [root domain 1]\/bridge\/#{JSONDATA}. In this example, the JSONDATA may include the service data, the token, and other content that may be transferred from the domain of the service API  to the domain of the web page (the first domain). Further, in some embodiments, the JSONDATA may be split into smaller fragments and sent in multiple data transfers. This can be useful in data transfers because web browsers may have restrictions to the length of URLS. In certain embodiments, the token is provided to the web browser as part of the service data.","With the above approaches, developers of web pages may securely provide content on their web pages while utilizing web services from different domains. Further, the web services can securely provide the web page developer with their content. For example, security features incorporated in the approach described herein include the creation of an iframe from the second domain to communicate with the first domain in the web browser based on a developer key. Because the developer key is independently linked to a developer domain, attempts to access content from the web services of the second domain at the first domain by an attacking entity not associated with the developer domain will fail. Further, additional communications other than the initialization of the service API  between the web page and the service API  cannot occur without an authentication token that cannot be read by the web page in the first domain unless the first domain is also the developer domain. Further, the web services may have the option to stop scripts associated with the web services from executing based on the developer key.","The processes described herein for providing secure cross-site scripting may be advantageously implemented via software, hardware (e.g., general processor, Digital Signal Processing (DSP) chip, an Application Specific Integrated Circuit (ASIC), Field Programmable Gate Arrays (FPGAs), etc.), firmware or a combination thereof. Such exemplary hardware for performing the described functions is detailed below.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 7","FIG. 7"],"b":["700","700","700","700","710","700","700"]},"A bus  includes one or more parallel conductors of information so that information is transferred quickly among devices coupled to the bus . One or more processors  for processing information are coupled with the bus .","A processor  performs a set of operations on information as specified by computer program code related to secure cross-site scripting. The computer program code is a set of instructions or statements providing instructions for the operation of the processor and\/or the computer system to perform specified functions. The code, for example, may be written in a computer programming language that is compiled into a native instruction set of the processor. The code may also be written directly using the native instruction set (e.g., machine language). The set of operations include bringing information in from the bus  and placing information on the bus . The set of operations also typically include comparing two or more units of information, shifting positions of units of information, and combining two or more units of information, such as by addition or multiplication or logical operations like OR, exclusive OR (XOR), and AND. Each operation of the set of operations that can be performed by the processor is represented to the processor by information called instructions, such as an operation code of one or more digits. A sequence of operations to be executed by the processor , such as a sequence of operation codes, constitute processor instructions, also called computer system instructions or, simply, computer instructions. Processors may be implemented as mechanical, electrical, magnetic, optical, chemical or quantum components, among others, alone or in combination.","Computer system  also includes a memory  coupled to bus . The memory , such as a random access memory (RAM) or other dynamic storage device, stores information including processor instructions for providing secure cross-site scripting. Dynamic memory allows information stored therein to be changed by the computer system . RAM allows a unit of information stored at a location called a memory address to be stored and retrieved independently of information at neighboring addresses. The memory  is also used by the processor  to store temporary values during execution of processor instructions. The computer system  also includes a read only memory (ROM)  or other static storage device coupled to the bus  for storing static information, including instructions, that is not changed by the computer system . Some memory is composed of volatile storage that loses the information stored thereon when power is lost. Also coupled to bus  is a non-volatile (persistent) storage device , such as a magnetic disk, optical disk or flash card, for storing information, including instructions, that persists even when the computer system  is turned off or otherwise loses power.","Information, including instructions for secure cross-site scripting, is provided to the bus  for use by the processor from an external input device , such as a keyboard containing alphanumeric keys operated by a human user, or a sensor. A sensor detects conditions in its vicinity and transforms those detections into physical expression compatible with the measurable phenomenon used to represent information in computer system . Other external devices coupled to bus , used primarily for interacting with humans, include a display device , such as a cathode ray tube (CRT) or a liquid crystal display (LCD), or plasma screen or printer for presenting text or images, and a pointing device , such as a mouse or a trackball or cursor direction keys, or motion sensor, for controlling a position of a small cursor image presented on the display  and issuing commands associated with graphical elements presented on the display . In some embodiments, for example, in embodiments in which the computer system  performs all functions automatically without human input, one or more of external input device , display device  and pointing device  is omitted.","In the illustrated embodiment, special purpose hardware, such as an application specific integrated circuit (ASIC) , is coupled to bus . The special purpose hardware is configured to perform operations not performed by processor  quickly enough for special purposes. Examples of application specific ICs include graphics accelerator cards for generating images for display , cryptographic boards for encrypting and decrypting messages sent over a network, speech recognition, and interfaces to special external devices, such as robotic arms and medical scanning equipment that repeatedly perform some complex sequence of operations that are more efficiently implemented in hardware.","Computer system  also includes one or more instances of a communications interface  coupled to bus . Communication interface  provides a one-way or two-way communication coupling to a variety of external devices that operate with their own processors, such as printers, scanners and external disks. In general the coupling is with a network link  that is connected to a local network  to which a variety of external devices with their own processors are connected. For example, communication interface  may be a parallel port or a serial port or a universal serial bus (USB) port on a personal computer. In some embodiments, communications interface  is an integrated services digital network (ISDN) card or a digital subscriber line (DSL) card or a telephone modem that provides an information communication connection to a corresponding type of telephone line. In some embodiments, a communication interface  is a cable modem that converts signals on bus  into signals for a communication connection over a coaxial cable or into optical signals for a communication connection over a fiber optic cable. As another example, communications interface  may be a local area network (LAN) card to provide a data communication connection to a compatible LAN, such as Ethernet. Wireless links may also be implemented. For wireless links, the communications interface  sends or receives or both sends and receives electrical, acoustic or electromagnetic signals, including infrared and optical signals, that carry information streams, such as digital data. For example, in wireless handheld devices, such as mobile telephones like cell phones, the communications interface  includes a radio band electromagnetic transmitter and receiver called a radio transceiver. In certain embodiments, the communications interface  enables connection to the communication network  for to the UE .","The term \u201ccomputer-readable medium\u201d as used herein to refers to any medium that participates in providing information to processor , including instructions for execution. Such a medium may take many forms, including, but not limited to computer-readable storage medium (e.g., non-volatile media, volatile media), and transmission media. Non-transitory media, such as non-volatile media, include, for example, optical or magnetic disks, such as storage device . Volatile media include, for example, dynamic memory . Transmission media include, for example, coaxial cables, copper wire, fiber optic cables, and carrier waves that travel through space without wires or cables, such as acoustic waves and electromagnetic waves, including radio, optical and infrared waves. Signals include man-made transient variations in amplitude, frequency, phase, polarization or other physical properties transmitted through the transmission media. Common forms of computer-readable media include, for example, a floppy disk, a flexible disk, hard disk, magnetic tape, any other magnetic medium, a CD-ROM, CDRW, DVD, any other optical medium, punch cards, paper tape, optical mark sheets, any other physical medium with patterns of holes or other optically recognizable indicia, a RAM, a PROM, an EPROM, a FLASH-EPROM, any other memory chip or cartridge, a carrier wave, or any other medium from which a computer can read. The term computer-readable storage medium is used herein to refer to any computer-readable medium except transmission media.","Logic encoded in one or more tangible media includes one or both of processor instructions on a computer-readable storage media and special purpose hardware, such as ASIC .","Network link  typically provides information communication using transmission media through one or more networks to other devices that use or process the information. For example, network link  may provide a connection through local network  to a host computer  or to equipment  operated by an Internet Service Provider (ISP). ISP equipment  in turn provides data communication services through the public, world-wide packet-switching communication network of networks now commonly referred to as the Internet .","A computer called a server host  connected to the Internet hosts a process that provides a service in response to information received over the Internet. For example, server host  hosts a process that provides information representing video data for presentation at display . It is contemplated that the components of system  can be deployed in various configurations within other computer systems, e.g., host  and server .","At least some embodiments of the invention are related to the use of computer system  for implementing some or all of the techniques described herein. According to one embodiment of the invention, those techniques are performed by computer system  in response to processor  executing one or more sequences of one or more processor instructions contained in memory . Such instructions, also called computer instructions, software and program code, may be read into memory  from another computer-readable medium such as storage device  or network link . Execution of the sequences of instructions contained in memory  causes processor  to perform one or more of the method steps described herein. In alternative embodiments, hardware, such as ASIC , may be used in place of or in combination with software to implement the invention. Thus, embodiments of the invention are not limited to any specific combination of hardware and software, unless otherwise explicitly stated herein.","The signals transmitted over network link  and other networks through communications interface , carry information to and from computer system . Computer system  can send and receive information, including program code, through the networks ,  among others, through network link  and communications interface . In an example using the Internet , a server host  transmits program code for a particular application, requested by a message sent from computer , through Internet , ISP equipment , local network  and communications interface . The received code may be executed by processor  as it is received, or may be stored in memory  or in storage device  or other non-volatile storage for later execution, or both. In this manner, computer system  may obtain application program code in the form of signals on a carrier wave.","Various forms of computer readable media may be involved in carrying one or more sequence of instructions or data or both to processor  for execution. For example, instructions and data may initially be carried on a magnetic disk of a remote computer such as host . The remote computer loads the instructions and data into its dynamic memory and sends the instructions and data over a telephone line using a modem. A modem local to the computer system  receives the instructions and data on a telephone line and uses an infra-red transmitter to convert the instructions and data to a signal on an infra-red carrier wave serving as the network link . An infrared detector serving as communications interface  receives the instructions and data carried in the infrared signal and places information representing the instructions and data onto bus . Bus  carries the information to memory  from which processor  retrieves and executes the instructions using some of the data sent with the instructions. The instructions and data received in memory  may optionally be stored on storage device , either before or after execution by the processor .",{"@attributes":{"id":"p-0080","num":"0079"},"figref":["FIG. 8","FIG. 7"],"b":["800","800","800"]},"In one embodiment, the chip set  includes a communication mechanism such as a bus  for passing information among the components of the chip set . A processor  has connectivity to the bus  to execute instructions and process information stored in, for example, a memory . The processor  may include one or more processing cores with each core configured to perform independently. A multi-core processor enables multiprocessing within a single physical package. Examples of a multi-core processor include two, four, eight, or greater numbers of processing cores. Alternatively or in addition, the processor  may include one or more microprocessors configured in tandem via the bus  to enable independent execution of instructions, pipelining, and multithreading. The processor  may also be accompanied with one or more specialized components to perform certain processing functions and tasks such as one or more digital signal processors (DSP) , or one or more application-specific integrated circuits (ASIC) . A DSP  typically is configured to process real-world signals (e.g., sound) in real time independently of the processor . Similarly, an ASIC  can be configured to performed specialized functions not easily performed by a general purposed processor. Other specialized components to aid in performing the inventive functions described herein include one or more field programmable gate arrays (FPGA) (not shown), one or more controllers (not shown), or one or more other special-purpose computer chips.","The processor  and accompanying components have connectivity to the memory  via the bus . The memory  includes both dynamic memory (e.g., RAM, magnetic disk, writable optical disk, etc.) and static memory (e.g., ROM, CD-ROM, etc.) for storing executable instructions that when executed perform the inventive steps described herein to provide secure cross-site scripting. The memory  also stores the data associated with or generated by the execution of the inventive steps.",{"@attributes":{"id":"p-0083","num":"0082"},"figref":["FIG. 9","FIG. 1"],"b":"900"},"Pertinent internal components of the telephone include a Main Control Unit (MCU) , a Digital Signal Processor (DSP) , and a receiver\/transmitter unit including a microphone gain control unit and a speaker gain control unit. A main display unit  provides a display to the user in support of various applications and mobile terminal functions that perform or support the steps of providing secure cross-site scripting. The display  includes display circuitry configured to display at least a portion of a user interface of the mobile terminal (e.g., mobile telephone). Additionally, the display  and display circuitry are configured to facilitate user control of at least some functions of the mobile terminal. An audio function circuitry  includes a microphone  and microphone amplifier that amplifies the speech signal output from the microphone . The amplified speech signal output from the microphone  is fed to a coder\/decoder (CODEC) .","A radio section  amplifies power and converts frequency in order to communicate with a base station, which is included in a mobile communication system, via antenna . The power amplifier (PA)  and the transmitter\/modulation circuitry are operationally responsive to the MCU , with an output from the PA  coupled to the duplexer  or circulator or antenna switch, as known in the art. The PA  also couples to a battery interface and power control unit .","In use, a user of mobile terminal  speaks into the microphone  and his or her voice along with any detected background noise is converted into an analog voltage. The analog voltage is then converted into a digital signal through the Analog to Digital Converter (ADC) . The control unit  routes the digital signal into the DSP  for processing therein, such as speech encoding, channel encoding, encrypting, and interleaving. In one embodiment, the processed voice signals are encoded, by units not separately shown, using a cellular transmission protocol such as global evolution (EDGE), general packet radio service (GPRS), global system for mobile communications (GSM), Internet protocol multimedia subsystem (IMS), universal mobile telecommunications system (UMTS), etc., as well as any other suitable wireless medium, e.g., microwave access (WiMAX), Long Term Evolution (LTE) networks, code division multiple access (CDMA), wideband code division multiple access (WCDMA), wireless fidelity (WiFi), satellite, and the like.","The encoded signals are then routed to an equalizer  for compensation of any frequency-dependent impairments that occur during transmission though the air such as phase and amplitude distortion. After equalizing the bit stream, the modulator  combines the signal with a RF signal generated in the RF interface . The modulator  generates a sine wave by way of frequency or phase modulation. In order to prepare the signal for transmission, an up-converter  combines the sine wave output from the modulator  with another sine wave generated by a synthesizer  to achieve the desired frequency of transmission. The signal is then sent through a PA  to increase the signal to an appropriate power level. In practical systems, the PA  acts as a variable gain amplifier whose gain is controlled by the DSP  from information received from a network base station. The signal is then filtered within the duplexer  and optionally sent to an antenna coupler  to match impedances to provide maximum power transfer. Finally, the signal is transmitted via antenna  to a local base station. An automatic gain control (AGC) can be supplied to control the gain of the final stages of the receiver. The signals may be forwarded from there to a remote telephone which may be another cellular telephone, other mobile phone or a land-line connected to a Public Switched Telephone Network (PSTN), or other telephony networks.","Voice signals transmitted to the mobile terminal  are received via antenna  and immediately amplified by a low noise amplifier (LNA) . A down-converter  lowers the carrier frequency while the demodulator  strips away the RF leaving only a digital bit stream. The signal then goes through the equalizer  and is processed by the DSP . A Digital to Analog Converter (DAC)  converts the signal and the resulting output is transmitted to the user through the speaker , all under control of a Main Control Unit (MCU) \u2014which can be implemented as a Central Processing Unit (CPU) (not shown).","The MCU  receives various signals including input signals from the keyboard . The keyboard  and\/or the MCU  in combination with other user input components (e.g., the microphone ) comprise a user interface circuitry for managing user input. The MCU  runs a user interface software to facilitate user control of at least some functions of the mobile terminal  to provide secure cross-site scripting. The MCU  also delivers a display command and a switch command to the display  and to the speech output switching controller, respectively. Further, the MCU  exchanges information with the DSP  and can access an optionally incorporated SIM card  and a memory . In addition, the MCU  executes various control functions required of the terminal. The DSP  may, depending upon the implementation, perform any of a variety of conventional digital processing functions on the voice signals. Additionally, DSP  determines the background noise level of the local environment from the signals detected by microphone  and sets the gain of microphone  to a level selected to compensate for the natural tendency of the user of the mobile terminal .","The CODEC  includes the ADC  and DAC . The memory  stores various data including call incoming tone data and is capable of storing other data including music data received via, e.g., the global Internet. The software module could reside in RAM memory, flash memory, registers, or any other form of writable storage medium known in the art. The memory device  may be, but not limited to, a single memory, CD, DVD, ROM, RAM, EEPROM, optical storage, or any other non-volatile storage medium capable of storing digital data.","An optionally incorporated SIM card  carries, for instance, important information, such as the cellular phone number, the carrier supplying service, subscription details, and security information. The SIM card  serves primarily to identify the mobile terminal  on a radio network. The card  also contains a memory for storing a personal telephone number registry, text messages, and user specific mobile terminal settings.","While the invention has been described in connection with a number of embodiments and implementations, the invention is not so limited but covers various obvious modifications and equivalent arrangements, which fall within the purview of the appended claims. Although features of the invention are expressed in certain combinations among the claims, it is contemplated that these features can be arranged in any combination and order."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The embodiments of the invention are illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3","b":"111"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
