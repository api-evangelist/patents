---
title: Method and apparatus for risk identification and mitigation in shift work fatigue
abstract: Method and apparatus for shift work scheduling based upon an optimization of analyzing and managing fatigue primarily in but not limited to aviation occupations. The invention matches workers to shifts in a manner that minimizes fatigue while on shift and maximizes shift worker effectiveness. The invention is adaptable to other occupations where assuring shift work crew rest is critical. Graphical user interfaces (GUIs) allow for the insertion of sleep into crew shift work schedules. Alternative sleep models are used for different modes of sleep. The invention produces as an output an optimized shift work/sleep schedules with an associated effectiveness determination.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08428993&OS=08428993&RS=08428993
owner: The United States of America as represented by the Secretary of the Air Force
number: 08428993
owner_city: Washington
owner_country: US
publication_date: 20110929
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["PRIORITY CLAIM UNDER 35 U.S.C. \u00a7119(e)","RELATED U.S. APPLICATION DATA","STATEMENT OF GOVERNMENT INTEREST","BACKGROUND OF THE INVENTION","OBJECTS AND SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["This patent application claims the priority benefit of the filing date of a provisional application, Ser. No. 61\/572,678, filed in the United States Patent and Trademark Office on Jul. 11, 2011.","This patent application is a continuation-in-part of U.S. patent application Ser. No. 12\/806,259 filed on Jul. 30, 2010 and is incorporated herein by reference.","The invention described herein may be manufactured and used by or for the Government for governmental purposes without the payment of any royalty thereon.","Fatigue has been implicated in 234 Air Force Class A mishaps, 27 of which have fatigue as a causal factor. As the Air National Guard continues to do more with less, it is vital to address the issue of fatigue in aviation operations. Sustained night-time combat operations must take fatigue into account\u2014a single night without sleep with today's sophisticated aircraft can result in the loss of enough higher cognitive function to be fatal.","Between 1974 and 1992, 25% of the Air Force's night tactical fighter Class A accidents were attributed to fatigue. Over 12% of the Navy's total Class A accidents between 1977 and 1990 were thought to be the result of aircrew fatigue. Some reports have put the annual cost of fatigue-related Air Force mishaps as high as $45M, in addition to loss of lives. Note the crash of Korean Air flight 801 in which 228 people died; the near crash of China Airlines flight 006 in which two people were severely injured and other passengers were traumatized; or the accident involving American Airlines 1420 in which 11 people died. In each of these cases, crew fatigue from long duty periods and\/or circadian factors have been implicated. (AFRL 2003-0059) Fatigue has been implicated in the Three Mile Island accident, Exxon Valdez environmental spill, and Chernobyl nuclear plant disaster.","NASA's Michael Mann, on the August 1999 Pilot Fatigue hearing to the Aviation Subcommitee, United States House of Representatives, testified that \u201c . . . pilot fatigue is a significant safety issue in aviation. Rather than simply being a mental state that can be willed away or overcome through motivation or discipline, fatigue is rooted in physiological mechanisms related to sleep, sleep loss, and circadian rhythms.\u201d The FAA has reported that 21% of the error reports in NASA's confidential Aviation Safety Reporting System reference fatigue as a direct or indirect factor.","Fatigue drives breakdowns in crew resource management, shortens attention spans, increases susceptibility to spatial disorientation, and causes deadly microsleep events in crews on final approach and landing. Loss of performance due to sleep deprivation follows extremely closely with loss of performance from blood alcohol content; 24 hours wakefulness approximates to 0.10 BAC, a level considered legally drunk in most states. Yet our crews routinely take off in the evening and head across the Atlantic, landing a complex, multi-million dollar aircraft after being up all night.","A significant step in fatigue management is the introduction of computer-based tools which intend to predict, for example, human aviator performance. These automated tools employ human sleep models and their relationship to cognitive performance. To date, however, such tools' interfaces are difficult to use, time consuming, and do not address specific concerns for different airframes and mission profiles, and ultimately, are only as good as the sleep models employed.","The original implementation of prior art fatigue calculation methods was based on the Warfighter Fatigue Model paper written by Dr. Steven Hursh et al. The paper describes the Sleep, Activity, Fatigue, and Task Effectiveness (SAFTE) model. This can be thought of as a mathematical simulation based on a rising and falling reservoir. When an individual is awake, the reservoir slowly depletes, and when the individual is asleep, the reservoir level rises. In conjunction with this process, biological circadian rhythms are taken into account along with jet lag to determine an individual's effectiveness at any given time. However, the prior art SAFTE model by itself did not provide or consider any methods for automatically adding sleep to work schedule, it did not provide a method for introducing multiple sleep models representative of the different possible modes of sleep, nor did it provide a method for introducing and analyzing the influence of secondary factors such as stimulants, sleep inertia, etc on crew effectiveness.","Another prior art fatigue monitoring system called FAST did not provide any means for accounting the effects of jet lag, time zone shifts, or many other factors today deemed highly relevant.","There exists a great and urgent need for proactive, rather than reactive approaches to aircrew shift fatigue monitoring, allowing the military flight planner the flexibility to not only automatically factor the benefits of the additions of sleep into a shift work schedule so as to optimize worker effectiveness, but also to account for the effects of various sleep modes and other effects associated with travel across multiple time zones and the resultant performance when planning flying operations.","One objective of this present invention is to provide a method and apparatus identifying and mitigating risk due to shift work fatigue by analyzing and modeling shift worker fatigue and effectiveness.","Another objective of this effort is to provide a method and apparatus for adding sleep periods to a crew work schedule.","Yet another object of the present invention is to provide a method and apparatus for modeling various sleep modes.","Still another object of the present invention is to provide a method and apparatus for removing the discontinuities that result from fragmented sleep periods.","Still yet another object of the present invention is to provide a method and apparatus for incorporating the influence of secondary factors such as the use of stimulants (\u201cgo pills\u201d) and sleep inertia on effectiveness.","Yet another object of the present invention is to provide a method and apparatus that displays a work\/sleep schedule indicating crew effectiveness and alerts where effectiveness levels are critically low.","Still yet another object of the present invention is to optimize shift work scheduling based upon an analysis of shift worker fatigue and shift work requirements.","Briefly stated, the present invention provides a method and apparatus for shift work scheduling based upon an optimization of analyzing and managing fatigue primarily in but not limited to aviation occupations. The invention matches workers to shifts in a manner that minimizes fatigue while on shift and maximizes shift worker effectiveness. The invention is adaptable to other occupations where assuring shift work crew rest is critical. Graphical user interfaces (GUIs) allow for the insertion of sleep into crew shift work schedules. Alternative sleep models are used for different modes of sleep. The invention produces as an output an optimized shift work\/sleep schedules with an associated effectiveness determination.","The above, and other objects, features and advantages of the present invention will become apparent from the following description read in conjunction with the accompanying drawings, in which like reference numerals designate the same elements.","The present invention is a method and apparatus for mitigating risk associated with shift work fatigue and its features include the automatic insertion of sleep into a shift work schedule, placing workers into shifts to minimize fatigue and maximize worker effectiveness, and more. While the primary motivation for the present invention is aircrew effectiveness, nothing in the present invention limits its application thereto. It is within the scope and spirit of the present invention and within the means of one skilled in the relevant art to extend the teachings of the present invention to other occupational fields.","Several mathematical methods for fatigue management have been developed over the years taking one of two approaches. The first is a One-Step process where the work schedule is combined with the sleep schedule and the fatigue results are determined. The second is the Two-Step process where sleep\/work timings are inferred based on the parametric performance in the schedule. For example, RoboSleep, a prior art method, works using the One-Step process. Research has shown the value in the Two-Step process, however, it is seldom accurate beyond the scope of a specific occupational study set (ie, locomotive engineers). With regard to the objectives of the Air National Guard's fatigue management systems, it is necessary to have a multi-occupational method that fits not only transport pilots, but also maintenance workers, submarine crew, air traffic controllers, etc.","The present invention is therefore designed to accommodate the need for several to classes of individuals. It is a learning method based on a database of N indirect parameters and several direct parameters. The method works by collecting an infinite amount of schedule data and associated information with that data. With that information, a best fit sleep model can be derived and inserted into an empty work schedule.","The indirect parameters are based primarily on social cues and can include various degrees of information from age and gender to sleeping aids and stimulants. Direct parameters are those that deal with the schedule itself such as effectiveness and circadian value. Because of the use of direct parameters, the present invention falls under the Two-Step paradigm.","One embodiment of the present invention requires a central server database and an active internet connection.","An important aspect of the present invention is the population of the database with existing schedule data. Referring to , these schedules  already contain both work and sleep information. That data is collected from as many sources as possible and inserted manually into the database (see ). Before insertion, it is run through the SAFTE model  to obtain the values of the direct parameters. It is the sleep information from these already existing schedules that is used for the iSleep engine  of the present invention.","Still referring to , a high level depiction of the present invention, to build complete work\/sleep schedule, a work-only schedule  is first created by the user in any number of user interfaces. That work schedule is submitted to a schedule preprocessor  which determines three direct parameters of the schedule: circadian value, daylight, and geographic location. That is then sent to the iSleep engine  and is broken down by work segments. Each work segment is sent through the query engine  for determining the closest match to similar work segments. Sleep times are combined using a weighted average for insertion to the schedule engine . The SAFTE model  is run for that portion of the schedule until the next work segment where the process repeats until the schedule is completed . The schedule output will end on a sleep segment.","Referring to  which depicts a functional-level depiction of a generalized workspace that appears on a user's GUI, data entry in the present invention is performed through a user-friendly graphical user interface or GUI. Through the GUI, the user builds several data bases, specifically, an activity (schedule) table, a parameter table, a base table, a rank table, and an airframe table.","The activity pane holds the activities for the schedule. An activity is either a work period or a sleep period as denoted by the value of the Type column. Activities are inserted by chronological order.","The parameter table houses the different indirect parameters for a schedule. It is expected that this table will evolve over the course of the present invention's development as analysis finds that some of the parameters are inadequate and others unaccounted for are more significant.","The base table maintains a list of military bases, but could be any centralized location such as an airport, hospital, etc.","The rank table maintains a list of military ranks, but could be any other position such as manager, doctor, surgeon, air traffic controller, etc.","The airframe table maintains a list of airframes, but could be any vehicle such as a tank, submarine, carrier, etc.","The GUI workspace graphically depicts the results of the constructed database, specifically, it contains a schedule pane, a results pane having a critical effectiveness zone, and a pane each for active schedules, properties, and sleep performance.","The GUI workspace depicts an actual view specifically of a results pane indicating that on Wednesday, Jul. 27, 2007, for example, the aircrew's effectiveness is only 61%, which is equivalent to a blood alcohol content (BAC) of greater than 0.10!","The GUI provides schedule and activity data entry and display. Mission days can easily be added to the mission timeline from the GUI. Schedule and activity details can be accessed and edited. Time zones may be selected and will cause the schedule to be displayed in local time. A snapshot bar in the GUI will display critical effectiveness information at any point along the schedule timeline, including the display of critical effectiveness \u201czones\u201d.","The present invention's GUI is menu driven. A user may build new missions for multiple crew members or model individual crew members. Mission schedules may be saved and reopened. Data may also be imported from sources including JALIS and AviSource. Crews may be assigned to selected airframes and previous crews utilized in the same airframe are available for subsequent new mission schedule generation. Other crew members not part of a previous mission on that airframe may also be assigned when generating a mission schedule.","The present invention's GUI also allows for the entry of both work and sleep activities. Icon representing work and sleep activities are \u201cdragged\u201d along the displayed mission schedule timeline to the extent that work or activity comprises a corresponding amount of schedule duration. Alternatively, schedule details may be entered in tabular fashion as opposed to graphical entry. Additional mission legs may also be added through the GUI.","The present invention also accommodates the addition of \u201cconstraints\u201d. Typical constraints include (but are not limited to) adding a degree of flexibility to the beginning and ending of work activities, for example. Another example of the present invention's ability to accommodate constraints is the optimum point in the mission schedule for the application of \u201cgo pills\u201d. Jet lag effects can also be accommodated and its effect minimized within the mission schedule. Lastly, mission schedules can be shared with others by submitting e-mail addresses from within the GUI.","The present invention employs sleep modeling based on the SAFTE model\/process. The first part of SAFTE involves calculating the current value of the sleep reservoir. Reservoir capacity, R, is 2880 sleep units. Performance, P, describes the reservoir depletion over time t and applies when an individual is awake. K is the slope constant for the line and is defined as 0.5 units per minute. Performance is given in Equation (1).\n\n\u2003\u2003(1)\n","Additions to reservoir are described by S over time t and only apply when an individual is sleeping. It should be noted that the value of the reservoir remains fixed for the first five minutes of sleep.\n\n=SI*\u2003\u2003(2)\n","Sleep Intensity, SI, varies depending on the time of day and is the weighted sum of the sleep propensity, SP, and the sleep debt, SD.\n\nSI=SP+SD\u2003\u2003(3)\n","Sleep dept is given by a constant factor, f with a default value of 0.00312, multiplied by the current reservoir depletion.\n\nSD=*()\u2003\u2003(4)\n","The sleep propensity incorporates a circadian component and a constant amplitude factor, awith a default value of 0.55 units.\n\n\u2003\u2003(5)\n","Sleep inertia describes the grogginess that one feels once awakened. Sleep inertia lasts for t from 0 to 120 minutes and is given by the following equation. Ihas a value of 5% (note that this translates to 5, not 0.05 in implementation) and i is the inertia time constant set at 0.04.",{"@attributes":{"id":"p-0055","num":"0054"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"I","mo":"=","mrow":{"mrow":{"mo":"-","msub":{"mi":["I","max"]}},"mo":"*","msup":{"mi":"\u2147","mrow":{"mo":"-","mrow":{"mo":["(",")"],"mrow":{"mi":"\u2148","mo":"+","mfrac":{"msub":{"mi":["t","a"]},"mi":"SI"}}}}}}}},{"mrow":{"mo":["(",")"],"mn":"6"}}]}}}}},"The circadian rhythm describes two biological rhythms which consist of different periods and are as such, are out of phase with each other. The two rhythms are the tendency to fall asleep and body temperature. The peak of the rhythm is described as p, also known as the acrophase, and the relative peak of the second rhythm is offset by p\u2032, with a default value of 3 hours. Acrophase p, has a default value of 18, or 18:00 for 6:00 pm as the peak point of alertness. Constant, \u03b2, is 0.5. The circadian equation is given below.",{"@attributes":{"id":"p-0057","num":"0056"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":["c","t"]},"mo":"=","mrow":{"mrow":[{"mi":"cos","mo":"\u2061","mrow":{"mo":["(",")"],"mfrac":{"mrow":{"mn":"2","mo":"\u2062","mrow":{"mi":"\u03c0","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["T","p"],"mo":"-"}}}},"mn":"24"}}},{"mi":"\u03b2","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mi":"cos","mo":"\u2061","mrow":{"mo":["(",")"],"mfrac":{"mrow":{"mn":"4","mo":"\u2062","mrow":{"mi":"\u03c0","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":["T","p","p"],"mo":["-","-"]}}}},"mn":"24"}}}}],"mo":"+"}}},{"mrow":{"mo":["(",")"],"mn":"7"}}]}}}}},"Jet lag is the phenomenon where an individual's circadian rhythm is trying to catch up with a new time zone. In terms of the calculation, this is explained as a shift in acrophase p. In general, eastward travel takes 1.5 days of recovery per hour of phase shift. Westward travel takes 1.0 days of recovery per hour of phase shift. The phase is always determined when the individual goes to sleep and is based on the weighted average of the last three average awake hours. This value is combined with the relative phase, p\u2032, to determine the new goal phase. This is computed algorithmically and does not present a mathematical formula in the Warfighter Fatigue Model paper.","Finally, effectiveness is calculated for each epoch of the simulation. Effectiveness is given by the following equation.",{"@attributes":{"id":"p-0060","num":"0059"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":["E","t"]},"mo":"=","mrow":{"mrow":{"mn":"100","mo":"*","mrow":{"mo":["(",")"],"mfrac":{"msub":[{"mi":["R","t"]},{"mi":["R","c"]}]}}},"mo":["+","+"],"msub":{"mi":["C","t"]},"mi":"I"}}},{"mrow":{"mo":["(",")"],"mn":"8"}}]}}}},"br":{},"sub":["t ","t"]},{"@attributes":{"id":"p-0061","num":"0060"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":["C","t"]},"mo":"=","mrow":{"msub":{"mi":["c","t"]},"mo":"*","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":"a","mn":"1"},"mo":"+","mfrac":{"mrow":{"msub":{"mi":"a","mn":"2"},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["R","c"]},{"mi":["R","t"]}],"mo":"-"}}},"msub":{"mi":["R","c"]}}}}}}},{"mrow":{"mo":["(",")"],"mn":"9"}}]}}}}},"In this equation, ais set to 7%, or 7, and ais set to 5%, or 5.","Referring to , the implementation of the present invention inclusive of the iSleep element  of the present invention is best described as an iterative process that is done epoch by epoch. An epoch is simply a period of time. For purposes of performance, the present invention uses a 10 minute epoch.","The first step in calculating the schedule is to create a baseline. This is necessary so that sleep habits and acrophase can become fixed before diving into the actual schedule. At the onset of every calculation, three days are prepended  to midnight on the first day of the schedule.","After the schedule baseline days are added, the schedule is preprocessed . At this point, the schedule is broken down into an array of separate equal epochs that represent the duration of the schedule. If the schedule has one day, it will have three days prepended . If the epoch is one minute, this means that there are 1440 epochs per day at four days, or 5760 epochs in the collection. Because one embodiment of the present invention called FlyAwake uses a 10 minute epoch, this would total 576 epochs.","Epochs contain vital information for the calculation including the snapshot of the individual at that point in time. This includes geographic location, time zone, acrophase, goal acrophase, reservoir, effectiveness, circadian value, daytime, and whether the individual is awake, asleep, or working. The preprocessor  only handles the geographic location, time zone, and day time. Prior to the calculation beginning, each epoch is evaluated to determine these values. Time zone is determined by finding the geographic location in an ArcGIS Shapefile. Daytime is determined by using a sunrise\/sunset calculation provided by NOAA. Geographic locations are interpreted where activity origin and destinations do not match. In the case of airplane flights, a great circle calculation is performed between the origin and destination airports. The distance at each epoch is determined by the assumed groundspeed of the aircraft using a simple d=r*t calculation, where d is distance traveled at rate r over time t.","As the iteration begins, each epoch must perform the particular activity . This is based upon the type of activity that is happening. If the epoch is working or awake, then the reservoir is depleted, otherwise if sleeping, the reservoir is filled. The epoch is always calculated based on the previous epoch reservoir value. If the previous epoch does not exist, i.e., this is the first epoch. It should be noted that further research has shown that the reservoir does not change within five minutes of falling asleep. The occurrence of the last epoch is continuously determined .","The effectiveness calculation  begins by determining the goal acrophase and hence any jet lag that may apply to the epoch. The goal acrophase is only reset if this is the first epoch asleep. If so, the goal acrophase is adjusted according to the weighted balance of the previous three average awake hours, where awake hour is between 0 and 24. The balance weight is 0.33, 0.66, and 1.0 respectively, giving the largest weight to the closest awake hour.","At this point, the current acrophase is then adjusted by the invention's software program as follows:",{"@attributes":{"id":"p-0070","num":"0069"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FUNCTION calculate_acrophase( current, goal )"]},{"entry":[{},"\u2003IF current < goal"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"IF ABS( goal \u2212current ) > 1 )"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"IF ABS( goal \u2212current ) > 12"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"current += 24 \u2212 2160"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ELSE"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"current += 1440"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"END IF"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ELSE"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"current += ( goal \u2212 current ) * 2160"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"END IF"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003ELSE IF current > goal"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"IF ABS( current \u2212 goal ) > 1"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"IF ABS( current \u2212 goal ) > 12"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"current \u2212= 24 + 1440"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ELSE"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"current \u2212= 2160"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"END IF"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ELSE"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"current += ( goal \u2212 current ) * 1440"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"END IF"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2003END IF"]},{"entry":[{},"\u2003RETURN current"]},{"entry":[{},"END FUNCTION"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The remainder of the effectiveness calculation  fills in the parameters set by the epoch as well as all of the computations associated with it. Within the first 120 minutes of wakefulness, the sleep inertia component is used. The equations above readily translate into computer software programming language.","As a final point on the effectiveness calculation implementation, after several iterations of working with the present invention's process and trying to maximize the effectiveness at 100% after 8 hours of continuous sleep from 23:00 to 07:00, it was found that a constant factor of 3.6031 had to be applied in order to get the values to rise to 100%. This contradicts the prior art Hursh paper and the prior art FAST application. In fact, in comparing values to the FAST application which is based on the same model, some modifications to the equations must be present in order to obtain the same values. Working backwards, the values from the prior art FAST application can be mathematically disproved when compared to the original equations they supposedly represent. This revelation comes as an unexpected beneficial result of the present invention and a testament to its merits.","Referring to  depicts a UML diagram which provides the software model for implementing the effectiveness determination step  depicted in . The actual implementation contains several overloads and additional methods, but this blueprint describes the base from which all other functionality is derived.","Referring to , the present invention was conceived as an improvement over non-dynamic fatigue management processes, specifically, those processes which may have included several parameters to automatically insert into the schedule at fixed intervals\u2014so long as in these prior art methods it did not interfere with work schedules. These non-dynamic fatigue management processes may have allowed for time zone shifts, but would have individuals sleep during the exact same time intervals based on geographic location. Because of this deficiency in the prior art, the present invention (i.e., iSleep) was conceived to dynamically handle sleep insertion.","The original concept for the present invention was based on Bayesian inference that would allow for N parameters to derive a Markov Chain which in turn would be statistically evaluated using Monte Carlo methods to determine sleep at a given epoch. Further, as more data was retrieved from actigraphs, this method would statistically improve at determining sleep. It was thought that using these methods, social and biological factors could be used to determine a static algorithm for sleep prediction. However, in order for that to occur, large sets of data and test subjects are required which were difficult to obtain in a non-research\/non-academic environment.","Because the original concept required too much data, the present invention was modified to be as dynamic as possible and work off of two factors: social night and empirical data. It must be noted that some theoretical work is also done by making assumptions about people's sleep habits. It is extremely difficult to predict sleep, especially during social daylight hours as so many social factors vary individual sleep habits.","Social night describes actual night time at a geographic location. Because the implementation of the present invention's preprocessor can determine social night, this is advantageous to the present invention.","Empirical data was provided by Walter Reed Army Institute of Research in the form of schedules and actigraph data obtained from several flight crews. In addition to this, several schedules were obtained from various military units which provided work and sleep times in the form of Excel and Word documents. The empirical data is not used in the implementation of the static algorithm, rather it helped define the algorithm. The algorithm was originally supposed to be 80% correct in predicting sleep against the actigraph data. That is, when comparing epoch by epoch, a 20% error was allowed.","Still referring to , the basic concept of the present invention is to be able to introduce N smaller models  that can be applied  in different scenarios to determine if sleep is applied without having to write custom code for each different scenario. Therefore, every epoch calculation can have N sleep models applied  to determine if sleep is occurring . The occurrence of the last model is also determined . In conjunction with this, a smoothing algorithm is applied so that periods of sleep given by the varying models does not result in a fragmented pattern, but is continuous.","Layover Sleep is the name given to the sleep model that has individuals primarily sleeping during social night hours. The concept is to maximize continuous sleep to eight hours and have them wake up as close to the commute time of their morning work schedule while going to bed eight hours prior. This model is best explained with a flowchart as shown in .","The present invention also includes Fossil Sleep, which is the name given to a sleep model developed by the Air National Guard to attempt to compensate for crews that complete long missions during the day time. Layover Sleep does not take this into account, so the model determines if the previous work activity was a long haul flight by determining a difference in origin and destination. If so, the effectiveness is evaluated and a determination is made that the individual would sleep for an hour at a time, up to eight hours or when the effectiveness reaches a predefined threshold. In this case, the threshold was arbitrarily selected to be 85%. Because this model can result in sleep stopping prior to social night by a small matter of hours, the iSleep fragmentation process  (see ) is applied to make it one continuous resting period. The present invention's software program to implement this model is described below",{"@attributes":{"id":"p-0082","num":"0081"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"FUNCTION is_sleep( epoch )"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"IF epoch.activity_type == \u2018Awake\u2019 AND"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"epoch.previous_work.is_flight"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"IF epoch.previous_epoch.activity_type ==\u2019Sleep\u2019 AND"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"epoch.cumulative_sleep < 8 AND"]},{"entry":[{},"epoch.previous_epoch.effectiveness < 85"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RETURN true"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"END IF"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"END IF"]},{"entry":[{},"RETURN false"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"END FUNCTION"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"iSleep fragmentation is the phenomenon by which multiple sleep algorithms evaluate sleep differently and the result is a choppy sleep\/wake pattern that does not practically make sense. In order to combat this, the sleep must be lumped together into one fluid period followed, or preceded by the amount of an awake period (see , ). The result is the same net amount of awake and sleep time, only it is grouped together in a logical place in the schedule.","Referring to , The present invention's iSleep software model is given by a UML diagram. Every model is derived from a base interface that has a single method ModelSleep(epoch:Epoch):bool. The method returns true on each epoch if sleep should occur. These are lumped together as an array and sent to the CaclulateEffectiveness(activities:List<IActivity>, sleepModels:ISleepModel[ ]) method for evaluation during the simulation. Sleep fragmentation is handled as an inline process (see , ) that occurs during the simulation process and is not a separate method.","The current implementation of the present invention's fatigue calculation is sufficient for a small sample space. It works well on single individuals over a period of no longer than one month. The epoch interval severely impacts the performance of the algorithm. For instance, setting the epoch increment to one minute requires 1440 calculations for a single day. A minimum of three days is required to baseline the calculation before any schedule data is considered, therefore, 5760 calculations must be performed. To counteract this problem, the FlyAwake embodiment of the present invention set the epoch spacing at 10 minutes. This reduced the number of calculations significantly, but unfortunately does not provide the precision that may be desired over small timeframes. Regardless of changing the epoch increment, Big O analysis is O(n). This does not work well for longer schedules or multiple individuals that need to be calculated in parallel. This is also not an efficient manner for determining the average effectiveness over a period of time which is necessary for quick evaluation.","To compensate for the epoch over epoch problem, the method by which the model is simulated must change. Unfortunately, no method currently exists for calculating each individual epoch in order to graphically display the effectiveness over time, but this can be limited to what is seen on a computer screen. In order to get to that graphical starting point epoch, or to view at a very high level, new techniques must be introduced to optimize the model for several people over very long time intervals. It should be noted that the following solution runs at worse, also on O(n). However, the running time of that scenario would only occur if a different activity type (sleep, work, sleep, work, etc.) occurred every epoch.","One key feature of the present invention is to be able to determine the exact value of effectiveness E(t) for any time t without having to necessarily run through each and every epoch beforehand. Accordingly, the present invention can be run in the timeframes that define each activity, thereby giving the ability to calculate the acrophase goal p.","The key to how the present invention makes this happen is to generate a new jetlag calculation from the current acrophase calculation as a parametric formula given by Equation (10).",{"@attributes":{"id":"p-0089","num":"0088"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"msub":{"mi":["p","t"]},"mo":"=","mrow":{"mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":"p","msub":{"mi":"t","mn":"0"}},"mo":"+","mrow":{"mo":["(",")"],"mfrac":{"mrow":[{"mi":"D","mo":"*","mrow":{"mo":["(",")"],"mrow":{"mi":"t","mo":"-","msub":{"mi":"t","mn":"0"}}}},{"msub":[{"mi":["p","g"]},{"mi":"p","msub":{"mi":"t","mn":"0"}}],"mo":"-"}]}}}},"mo":"\u2062","mi":"%24"}}},{"mrow":{"mo":["(",")"],"mn":"10"}}]}}}},"br":{}},"At this point, sufficient information is available to calculate effectiveness E(t) at any point t depending on the state of the activity, either awake or asleep. Like the previous epoch by epoch simulation, all of the previous information is needed as input to the next epoch. However, this new model is an activity by activity simulation rather than epoch by epoch.","As a result in the change of the fatigue calculation, the iSleep model must also change. However, it is based on the same principles that were introduced in Layover Sleep and Fossil Sleep embodiments of the present invention. Rather than calculating sleep at each epoch, sleep is determined up front and inserted as a block. This is far more efficient than repeating calculations over and over and can be accomplished fairly easily. In the case of the Layover Sleep embodiment of the present invention, it is important to work backwards from the next work activity to determine proper sleep insertion. The same parameters can be utilized. In the case of the Fossil Sleep embodiment, the calculation is executed in one hour intervals instead of each epoch.","In contrast, the prior art methods to date for calculating the average fatigue is to run the entire simulation, sum the effectiveness values, and divide by the interval. This is extremely inefficient and is simplified in the present invention by calculating the average across each activity and dividing by the number of activities as follows.",{"@attributes":{"id":"p-0093","num":"0092"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mi":"Avg","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"E"}},"mo":"=","mfrac":{"mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"n","mo":"=","mn":"0"},"mi":"N"},"mo":"\u2062","mrow":{"mi":"Avg","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["E","n"]}}}},"mi":"N"}}},{"mrow":{"mo":["(",")"],"mn":"11"}}]}}}},"br":{},"sub":"n"},{"@attributes":{"id":"p-0094","num":"0093"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"Avg","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["E","n"]}}},{"mrow":[{"mfrac":{"mn":["1","120"]},"mo":"\u2062","mrow":{"msubsup":{"mo":"\u222b","mi":"t","mrow":{"mi":"t","mo":"+","mn":"120"}},"mo":"\u2062","mrow":{"mn":"100","mo":"*","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["R","t"]},{"mi":["R","c"]}],"mo":"\/"}}}}},{"mi":"I","mo":"\u2062","mrow":{"mo":"\u2146","mi":"t"}}],"mo":["+","+"],"msub":{"mi":["C","t"]}}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"12"}}]}}}},"br":{},"sub":"t "},{"@attributes":{"id":"p-0095","num":"0094"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":{"mi":"Avg","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mi":["E","n"]}}},"mo":"=","mfrac":{"mrow":[{"mrow":[{"msubsup":{"mo":"\u222b","msub":[{"mi":"t","mn":"1"},{"mi":"t","mn":"2"}]},"mo":"\u2062","mrow":{"mn":"100","mo":"*","mrow":{"mo":["(",")"],"mrow":{"msub":[{"mi":["R","t"]},{"mi":["R","c"]}],"mo":"\/"}}}},{"msub":{"mi":["C","t"]},"mo":"\u2062","mrow":{"mo":"\u2146","mi":"t"}}],"mo":"+"},{"msub":[{"mi":"t","mn":"2"},{"mi":"t","mn":"1"}],"mo":"-"}]}}},{"mrow":{"mo":["(",")"],"mn":"13"}}]}}}}},"Shift work optimization is the concept of automatically placing shift workers into shifts to minimize fatigue and maximize the average effectiveness across the entire timeframe. Big O analysis of this problem suggests that it is in the category NP-Complete problems because it is necessary to check every possible scenario before determining a solution. In computer science, this is similar to the traveling salesman problem. It is expected that this disclosed method will see many iterations of algorithmic optimizations over time, all being within the scope of the present invention. As a starting point, a base algorithm is introduced to suggest that the simplest technique to help performance is to limit the number of resources, shifts, and days that can be optimized.","To better understand the solution, it would first be useful to describe the parameters of the problem space. These include the number of days to optimize the shifts for, the number of resources available, and the number of shifts available to be worked on each day. The optimization method is explained as a series of steps: determining the resource combinations for the shifts of a particular day; determining the resource\/shift combinations across all days; and evaluating the effectiveness of each combination to find the maximum. A computer code listing for optimized determination of resource combinations is as follows:",{"@attributes":{"id":"p-0098","num":"0097"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"\/\/\/ <summary>"},{"entry":"\/\/\/ Provides a set of operations for calculating combinations."},{"entry":"\/\/\/ <\/summary>"},{"entry":"\/\/\/ <remarks>"},{"entry":"public class Combination"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/ Chooses all combinations of the given items k at a time."]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"\/\/\/ <typeparam name=\u201cT\u201d>Type of item.<\/typeparam>"]},{"entry":[{},"\/\/\/ <param name=\u201citems\u201d>List of items.<\/param>"]},{"entry":[{},"\/\/\/ <param name=\u201ck\u201d>Number of items per combination.<\/param>"]},{"entry":[{},"\/\/\/ <returns>Set of combinations.<\/returns>"]},{"entry":[{},"public static List<List<T>> Combinations<T>( List<T> items, int k )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/create the set"]},{"entry":[{},"List<List<T>> set = new List<List<T>>( );"]},{"entry":[{},"\/\/create the combination list"]},{"entry":[{},"T[ ] combination = new T[k];"]},{"entry":[{},"\/\/get the combinations"]},{"entry":[{},"GetCombinations<T>( combination, items, 1, 1, k, set );"]},{"entry":[{},"\/\/return the set"]},{"entry":[{},"return set;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/ Recursively determines all of the combinations of a set of items."]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"\/\/\/ <typeparam name=\u201cT\u201d>Type of item.<\/typeparam>"]},{"entry":[{},"\/\/\/ <param name=\u201cv\u201d>The current combination set.<\/param>"]},{"entry":[{},"\/\/\/ <param name=\u201citems\u201d>List of items.<\/param>"]},{"entry":[{},"\/\/\/ <param name=\u201cstart\u201d>Starting position.<\/param>"]},{"entry":[{},"\/\/\/ <param name=\u201ck\u201d>Ending position.<\/param>"]},{"entry":[{},"\/\/\/ <param name=\u201cmaxk\u201d>Number of items per combination.<\/param>"]},{"entry":[{},"\/\/\/ <param name=\u201cset\u201d>The growing set of combinations. This should"]},{"entry":[{},"initially be empty as it is added to.<\/param>"]},{"entry":[{},"\/\/\/ <returns>True if a combination is found, otherwise false.<\/returns>"]},{"entry":[{},"private static bool GetCombinations<T>( T[ ] v, List<T> items, int start,"]},{"entry":[{},"int k, int maxk, List<List<T>> set )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/if this is the end return"]},{"entry":[{},"if( k > maxk )"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return true;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\/\/otherwise, fill the list"]},{"entry":[{},"for( int i = start; i <= items.Count; i++ )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"v[k\u22121] = items[i\u22121];"]},{"entry":[{},"\/\/if a combination was complete, add it to the final set"]},{"entry":[{},"if( GetCombinations( v, items, i + 1, k + 1, maxk, set ) )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"List<T> combination = new List<T>( v );"]},{"entry":[{},"set.Add( combination );"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/\/return false, no combination on this iteration"]},{"entry":[{},"return false;"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/ Finds all combinations, m x n, of multiple sets."]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"\/\/\/ <typeparam name=\u201cT\u201d>Type of item.<\/typeparam>"]},{"entry":[{},"\/\/\/ <param name=\u201csets\u201d>Sets of items to combine.<\/param>"]},{"entry":[{},"\/\/\/ <returns>Set of combined items.<\/returns>"]},{"entry":[{},"public static List<List<T>> AllCombinationsOf<T>( params List<T>[ ] sets )"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002\/\/ need array bounds checking etc for production"]},{"entry":[{},"\u2002var combinations = new List<List<T>>( );"]},{"entry":[{},"\u2002\/\/ prime the data"]},{"entry":[{},"\u2002foreach( var value in sets[0] )"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"combinations.Add( new List<T> { value } );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002foreach( var set in sets.Skip( 1 ) )"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"combinations = AddExtraSet( combinations, set );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002return combinations;"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},"\/\/\/ <summary>"]},{"entry":[{},"\/\/\/ Adds an extra set to the combinations."]},{"entry":[{},"\/\/\/ <\/summary>"]},{"entry":[{},"\/\/\/ <typeparam name=\u201cT\u201d>Type of item.<\/typeparam>"]},{"entry":[{},"\/\/\/ <param name=\u201ccombinations\u201d>Current combinations.<\/param>"]},{"entry":[{},"\/\/\/ <param name=\u201cset\u201d>Set to add.<\/param>"]},{"entry":[{},"\/\/\/ <returns>A new set of combined items.<\/returns>"]},{"entry":[{},"private static List<List<T>> AddExtraSet<T>"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2002( List<List<T>> combinations, List<T> set )"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"{"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"var newCombinations = from value in set"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"from combination in combinations"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"\u2003select new List<T>( combination ) { value };"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"231pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"return newCombinations.ToList( );"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"245pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The present invention accounts for the complexities in selecting the combinations of resources to work a shift on any given day. Each day will have its own set of shifts. As a way to account for more realistic scenarios, resources can be manually assigned to a shift or unable to work a shift on a specific day. Each shift may have a cycle (ie, three on\/three off), and each shift may specify different roles (ie, 1 shift supervisor, 5 controllers). Note that different roles turn this into multidimensional combinatorics problem. Depending on the software requirements, these must all be taken into consideration in the algorithm for selecting the combinations of resources.","The combinations of resources for each role on a single shift can be determined as follows, where n is the available resources in a particular role and k is the number of that role required for shift.",{"@attributes":{"id":"p-0101","num":"0100"},"maths":{"@attributes":{"id":"MATH-US-00009","num":"00009"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":["role","combinations"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},{"munderover":{"mo":"\u220f","mrow":{"mi":"role","mo":"=","mn":"1"},"mi":"R"},"mo":"\u2062","mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":["n","role"]}}},{"mtd":{"msub":{"mi":["k","role"]}}}]}}}],"mo":"="}}},"br":{}},{"@attributes":{"id":"p-0102","num":"0101"},"maths":{"@attributes":{"id":"MATH-US-00010","num":"00010"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":["shift","combinations"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},{"munderover":{"mo":"\u220f","mrow":{"mi":"shift","mo":"=","mn":"1"},"mi":"S"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"munderover":{"mo":"\u220f","mrow":{"mi":"role","mo":"=","mn":"1"},"mi":"R"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":["n","role"]}}},{"mtd":{"msub":{"mi":["k","role"]}}}]}}}}],"mo":"="}}}},"The resource\/shift combinations give all of the different ways the shifts can be organized over the number of days. The process must then be repeated for as many days as the optimizer is required to run. This will result in a set of combinations for each day which must then be combined one final time before evaluating the effectiveness. The following equation gives the formula for evaluating the total number of days.",{"@attributes":{"id":"p-0104","num":"0103"},"maths":{"@attributes":{"id":"MATH-US-00011","num":"00011"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mi":["day","combinations"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}},{"munderover":{"mo":"\u220f","mrow":{"mi":"day","mo":"=","mn":"1"},"mi":"D"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"munderover":{"mo":"\u220f","mrow":{"mi":"shift","mo":"=","mn":"1"},"mi":"S"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"munderover":{"mo":"\u220f","mrow":{"mi":"role","mo":"=","mn":"1"},"mi":"R"},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mrow":{"mo":["(",")"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":["n","role"]}}},{"mtd":{"msub":{"mi":["k","role"]}}}]}}}}}],"mo":"="}}}},"To determine an optimized shift schedule, the maximum effectiveness and the resource\/shift combination that created that maximum must be returned. This procedure runs through the list of combinations determined in the previous steps and selects the combination with the highest average effectiveness.","The best choice selection algorithm is the current individual who is the best choice, meaning highest effectiveness, at the given time. This does not necessarily mean that the best choice is the least disruptive choice over the entirety of the schedule. The algorithm for this runs in O(n) as each available individual must be evaluated. However, the effectiveness only needs to be evaluated to the given point in time, and not beyond. As such, a straightforward approach exists to determine the best choice as in the following computer-executable set of instructions:",{"@attributes":{"id":"p-0107","num":"0106"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FUNCTION best_choice( available_employees )"]},{"entry":[{},"best_employee = null"]},{"entry":[{},"best_value = 0"]},{"entry":[{},"FOR i = 0 to available_employees_count"]},{"entry":[{},"CALL calculate_effectiveness WITH"]},{"entry":[{},"available_employees[i] RETURNING e"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"IF best == null OR best_value < e"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"best_employee = available_employees[i]"]},{"entry":[{},"best_value = e"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"END IF"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"END FOR"]},{"entry":[{},"RETURN best_employee"]},{"entry":[{},"END FUNCTION"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}}],"GOVINT":[{},{}],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
