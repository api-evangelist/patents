---
title: Pattern generation, IDS signature conversion, and fault detection
abstract: A method of testing a target in a network by fault injection, includes: defining a transaction baseline; modifying at least one of an order and a structure of the transaction baseline to obtain a modified transaction with malformed grammar; and transmitting the modified transaction to a target. The method may further include, receiving a feedback from the target to determine fault occurrence. An apparatus for testing a target in a network by fault injection, includes: a driver configured to generate patterns, where a pattern can generate a plurality of packets for transmission to the target, the pattern being represented by an expression with a literal string and a wild character class; and a network interface coupled to the driver and configured to transmit and receive network traffic.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09619651&OS=09619651&RS=09619651
owner: TRUSTWAVE HOLDINGS, INC.
number: 09619651
owner_city: Chicago
owner_country: US
publication_date: 20091104
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATION","TECHNICAL FIELD","BACKGROUND","DETAILED DESCRIPTION OF PREFERRED EMBODIMENTS"],"p":["This application is a continuation of U.S. patent application Ser. No. 11\/701,181, filed Jan. 31, 2007, now U.S. Pat. No. 7,620,851 which is a continuation of U.S. patent application Ser. No. 10\/087,000, filed Feb. 28, 2002 now U.S. Pat. No. 7,185,232. U.S. patent application Ser. No. 11\/701,181 and U.S. Pat. No. 7,185,232, are hereby fully incorporated herein by reference. Benefit of all earlier filing date is claimed for all common subject matter.","This application claims the benefit of and priority to U.S. Provisional Application No. 60\/272,486, by common inventors, Penny C. Leavy, Michael Gregory Hoglund, Jonathan Walter Gary, and Riley Dennis Eller, filed Feb. 28, 2001, and entitled \u201cSYSTEM AND METHOD FOR GENERATING AND ANALYZING NETWORK TRAFFIC\u201d. Application No. 60\/272,486 is fully incorporated herein by reference.","This disclosure relates generally to fault detection and testing methods, and more particularly to an apparatus and methods for detecting and testing vulnerabilities in a system-under-test.","Security attacks are becoming more prevalent and costly. These attacks often lead to losses of critical information, decreases in productivity, and negative effects on corporate reputation. For example, various worms were able to spread through the Internet in 2001 and infect over 850,000 servers, resulting in the disruption of operations of the affected businesses and organizations. While traditional security devices, such as firewalls and intrusion detection systems (IDS), are effective at the network layer, these devices are unable to provide effective security in the application layer.","Additionally, networks have become more critically complex. It is difficult to test the myriad scripts and protocols even on a small business network, let alone on networks that span nationally and globally. Thus, creating tests for extremely complex protocols can be complex, costly, and, in some instances, not feasible.","Additionally, due to security, virus, and other issues critically affecting networks, there is an overwhelming market need for network and software application risk management products.","Accordingly, there is a need for an apparatus and method that provide effective detection and testing of vulnerabilities and that will overcome the deficiencies mentioned above.","In the description herein, numerous specific details are provided, such as examples of components and\/or methods, to provide a thorough understanding of embodiments of the invention. One skilled in the relevant art will recognize, however, that an embodiment of the invention can be practiced without one or more of the specific details, or with other apparatus, systems, methods, components, materials, parts, and\/or the like. In other instances, well-known structures, materials, or operations are not shown or described in detail to avoid obscuring aspects of embodiments the invention.","Reference throughout this specification to \u201cone embodiment\u201d, \u201can embodiment\u201d, or \u201ca specific embodiment\u201d means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, the appearances of the phrases \u201cin one embodiment\u201d, \u201cin an embodiment\u201d, or \u201cin a specific embodiment\u201d in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 1","b":["100","100","105","110","105","115","110","130","105","125","130","105","130","132","134","125","115"]},"Target  can represent a complete collection of code , a partial collection of code , or a combination of components or devices which are effected by code .","Transactions  that occur over network  between network elements (e.g., SUT ) include network layer transactions and application layer transactions . Network layer transactions involve, for example, router information , TCP information , Ethernet information , and\/or other low level transaction information . Application layer transactions involve, for example, web information , file transfer information , electronic mail information , and\/or other information  that is an aggregate of low level transactions. A given application layer transaction may exercise particular systems\/events  such as, for example, database systems , electronic mail systems , and\/or logging events , and\/or other systems\/events .",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 2","b":["200","105","205","200","215","110","220","215"]},"Fault-Inducing Transaction Representation","The precise permutation of a transaction that induces a fault has a concrete form, represented by the current iteration of the overall pattern. The output of the pattern for this iteration produces the associated fault. Thus, the output becomes an important event in the SUT  in that it causes a fault. Thus, there is value in examining the network for the given fault pattern. A pattern describes a set of known strings of data interjected with fault-inducing sub-fields. The precise format of the pattern at a given permutation or iteration can be represented by an expression of the form as shown in Table A.",{"@attributes":{"id":"p-0031","num":"0030"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE A"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"([string literal] | [wildcard character class])"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"The expression, as represented by the pattern, can be used to form a subsequent expression which can be utilized by an intrusion detection system, sniffer, or firewall, to detect and trigger on the above-mentioned network at least one transaction that matches the expression.","Fault Injection Creation","Permutations of grammar and value, when offered as input to runtime software environments, tend to solicit a wide range of responses. Some of these responses are indicative of a software bug. Other responses indicate benign behavior with little environmental effect. Many software bugs have a dangerous impact on the security and\/or reliability of a software system. Certain input permutations are more likely to discover or induce a bug in software, regardless of the target system (e.g., target  in ).","To mutate a network transaction  that is sent to a target  (or code ) in an SUT , a baseline or starting point is typically needed. This starting point is defined as a \u201ctransactional baseline\u201d. Once the transaction baseline is obtained, the transaction baseline can be used to create supplement transactions, which are mutations of the original transaction baseline. These mutations can be used to enable undesired events and are, therefore, used to discover bugs\/viruses and\/or other faults in the SUT . Thus, the mutations are transmitted as modified transactions  to a system-under-test , and feedback  may indicate if a fault occurrence had occurred in response to the modified transactions .","Various methods to mutate a transaction baseline (to cause malformation) include the following as described below: (I) \u201cgrammar injection\u201d, (II) \u201cvalue injection\u201d, and (III) other vulnerability & detection methods.","(I) Grammar Injection\u2014","Grammar is the order and structure to a transaction. Many transactions require value fields that are separated by metacharacters (or delimiters).  shows an example transaction  with value fields through and metacharacters or delimiters  and . The number of value fields and delimiters may vary. In the example of , value fields and are separated by delimiter , and value fields and are separated by delimiter . What determines a value and what determines a delimiter is based on numerical character values.","The trick in the method is to select a numerical range of character values that are to be treated as meta-characters. This range does not have to be continuous. The range may include several smaller sub-ranges which, when combined as a whole, constitute the set of all characters which are to be treated as delimiters.","The order  in which they occur determines if a malformed grammar exists. Malformed grammar on a variety of cleartext protocols, such as HTTP, could induce parser errors.","The following algorithms can be applied for creating malformed grammar. The testing unit  may be configured to create the following strings.","The patterns  represent a template for generating a plurality of transactions  which are delivered as network traffic . The construction of the pattern is particular to a technique for malforming grammar of a transaction.","Patterns consist of sub-fields (or \u201cFunctions\u201d, as they are called in the attached texts) that each have a particular behavior. The sequence of transactions represented by a pattern depend on the combination of sub-fields in the pattern. Sub-fields may be literal data values and some may represent a set of values. Sub-fields that represent sets of data are said to iterate. There are two specific ways to inter-relate subfields within a pattern, (a) Nested, and (b) Non-nested. Nested relationships cause sub-fields that iterate to multiply their results. This is called \u2018nested iteration\u2019. Various examples of pattern iteration and sub-field types are described in further detail below.","1. Remove a Field(s) from a Transaction\u2014","As shown in the example of Table 1, the original transaction includes fields with the characters ABCD and the delimiter (;) between fields. Of course, other value fields and other delimiters may be used. One of the fields (for example, with characters ABCD) is removed as shown in the modified transaction. This modified transaction may confuse a parser. Other characters may also be used besides \u201cABCD\u201d.",{"@attributes":{"id":"p-0045","num":"0044"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["original transaction","ABCD; ABCD; ABCD; ABCD"]},{"entry":["modify transaction by removing a field","ABCD; ABCD; ABCD;"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"2. Duplicate a Field (Cause a Field to Appear More than Once\u2014","A field (with characters ABCD) is duplicated as shown in the modified transaction in Table 2.",{"@attributes":{"id":"p-0048","num":"0047"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"original transaction","ABCD; ABCD;"]},{"entry":[{},"modify transaction by duplicating a field","ABCD; ABCD; ABCD"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"3. Create Double Delimiter (Cause a Delimiter to Appear Twice Between Value Fields)\u2014","A delimiter \u201c;\u201d is duplicated as \u201c;;\u201d as shown in the modified transaction in Table 3. Other delimiters may be used besides the semicolon character \u201c;\u201d.",{"@attributes":{"id":"p-0051","num":"0050"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["original transaction","ABCD; ABCD; ABCD"]},{"entry":["modify transaction by duplicating a delimiter","ABCD;; ABCD; ABCD"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"4. Send all Delimiters in a Transaction\u2014","All characters are changed into a delimiter \u201c;\u201d as shown in the modified transaction in Table 4.",{"@attributes":{"id":"p-0054","num":"0053"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["original transaction","ABCD; ABCD; ABCD"]},{"entry":["modify transaction by changing all characters",";;;;;;;;;;;;;;"]},{"entry":"to delimiters"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"5. Send a Blank Transaction (Transaction with No Values\u2014","Usually, part of a transaction that is considered an atomic unit is removed, as shown below in Table 5.",{"@attributes":{"id":"p-0057","num":"0056"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 5"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"original transaction","ABCD;ABCD;ABCD"]},{"entry":[{},{},"modify transaction by",{}]},{"entry":[{},{},"removing part of",{}]},{"entry":[{},{},"transaction"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},"6. Send a Single Character Delimiter-Value Pair, at a Repeated, Large Buffer\u2014","All characters are changed into a delimiter-value pair (e.g., \u201cW.\u201d or \u201cA;\u201d as shown in the modified transactions in Table 6. These transaction types can cause buffer overflow in parsers.",{"@attributes":{"id":"p-0060","num":"0059"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 6"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"single character","w.w.w.w.w.w.w.w.w."]},{"entry":[{},{},"delimiter-value pair",{}]},{"entry":[{},{},"single character","A;A;A;A;A;A;A;A;A;"]},{"entry":[{},{},"delimiter-value pair"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},"7. Send Unbalanced Pair\u2014","For example, if an open parenthesis character \u201c(\u201d is present in a transaction, then the close parenthesis character \u201c)\u201d is omitted, as shown in Table 7. The same unbalanced pair configuration can apply to other pair-characters such as pipes \u201c|\u201d, quotation marks, and\/or other pair-characters. One of the pair-characters may appear at the end of a field, as, for example, shown by the string \u201cABCD;ABCD;ABCD)\u201d in Table 7. An unbalanced pair may confuse a parser, causing the parser to treat the characters inside the unbalanced pair as special information.",{"@attributes":{"id":"p-0063","num":"0062"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 7"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"original transaction","(ABCD;ABCD;ABCD)"]},{"entry":[{},{},"edit transaction by","(ABCD;ABCD;ABCD"]},{"entry":[{},{},"creating unbalanced pair",{}]},{"entry":[{},{},"edit transaction by","ABCD;ABCD;ABCD)"]},{"entry":[{},{},"creating unbalanced pair",{}]},{"entry":[{},{},"edit transaction by","\u201cABCD;ABCD;ABCD"]},{"entry":[{},{},"creating unbalanced pair"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},"8. Replace delimiters with random ranges that cover the delimiter value. This means using not only the delimiter value, but a range of characters that are near to about the delimiter's original numerical value. For example, not just a \u2018>\u2019 character, but also \u2018<\u2019, \u2018=\u2019, \u2018:\u2019, \u2018;\u2019, etc. which are close to the same value numerically. The example range would be from decimal 58 to decimal 62. The values of characters can be obtained from a standard chart of the ASCII values.","9. Use Alternative Character Encoding Through a Translation Table\u2014","Alternative encoding is one example of a grammar injection method for fault detection.","Many programs accept user data in many different formats. For example, mail programs often accept data in Unicode, ASCII, and\/or other formats. This feature can present a problem when a user can change the data format of the input transaction in such a way that the input passes security checks, and when the input transaction is parsed at the end (e.g., at the target system), the input transaction behaves maliciously.","Alternative encoding involves encoding a transaction field with characters that are equal in nature but different in representation. Table 8 lists some examples of an alternative encoding for a carriage return. These alternative encoding includes, for example, \u201c\/n\u201d and \u201c%2f\u201d.",{"@attributes":{"id":"p-0069","num":"0068"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 8"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},{},{},"alternative","Alternative"]},{"entry":[{},{},"original encoding","encoding","encoding"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Carriage return","\/n","%2f"]},{"entry":[{},{},"target.jsp","target.JSP"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}}},"The technique is to use a character-replacement translation table. This may be a set-of characters replaced by an alternative set-of characters.","As another example, if a Java-Server-Page (JSP) is requested from a web server by a client, the request should be parsed. The web server is case-sensitive and only understands the lowercase \u201c.jsp\u201d. If all caps \u201c.JSP\u201d is requested (see Table 8), then the file is handled via a default text handler, and as a result, the source code becomes visible at, for example, the client side.","This is a specialization of the alternative encoding method, where the character translation table is from lower-case versions of each alphabetic letter to upper-case versions of the alphabetic letter.","As shown in the example in , the parser  (in a system-under-test) interprets the alternative encoding in the transaction  and thus misclassifies the transaction  (since the parser  is looking for a lower case version of .jsp). As a result, state  occurs and the actual Java source code  is shown via a client device such as the testing unit . The showing of the source code  may result in potential breaches of security, since the source code  may, for example, include passwords  or other information such as trade secrets. In contrast, a non-fault state  does not allow the showing of the source code .","Various other alternative encoding methods may be used such as the following:\n\n","The following are other examples of the vulnerabilities made possible by alternative encoding.","(1) Internet Information Server (IIS) 5.0\u2014","Using the string \u201c..% c0% af..\u201d in a certain way in a Uniform Resource Locator (URL) allows a malicious user to execute commands on a remote server. For example, the URL in Table 9 returns the source of default.asp.",{"@attributes":{"id":"p-0078","num":"0081"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 9"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"http:\/\/IPADDRESSTESTED\/scripts\/..%c0%af..\/winnt\/system32\/"]},{"entry":[{},{},"cmd.exe?c+type+c:\\inetpub\\wwwroot\\home\\default.asp"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"(2) IIS 4.0\u2014","Invalid codes are passed on by the testing unit to the file system of the target. For example, the code %0G would be passed on to the filesystem, even though 0G is not a valid hexadecimal value. The sequences are then converted to actual characters by the target system, which allows for specifying some characters that are not permitted.","(3) theBat\u2014","The following attachment name shown in Table 10 is not properly filtered due to the alternative coding in the name. The saved attached file names are indicated in Table 10 also.",{"@attributes":{"id":"p-0083","num":"0086"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 10"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"attachment name","Content-Type: image\/gf"]},{"entry":[{},"with alternative","Content-Transfer-Encoding: base64"]},{"entry":[{},"encoding","Content-Disposition: attachment;"]},{"entry":[{},{},"filename=\u201d=?iso8859-"]},{"entry":[{},{},"1?B?Li5cLi5cLi5cLi5cLi5cV2"]},{"entry":[{},{},"LuZG93clxTdGFyd"]},{"entry":[{},{},"CBNZW51XFByb2dyYW1zXFN0YX"]},{"entry":[{},{},"J0dxBcMTIzLmV4ZQ"]},{"entry":[{},{},"==?=\u201d"]},{"entry":[{},"Saved attached","C:\\Windows\\Start Menu\\Programs\\Startup\\"]},{"entry":[{},"file name","123.exe"]},{"entry":[{},"Saved attached","..\\..\\..\\..\\..\\Windows\\StartMenu\\"]},{"entry":[{},"file name","Programs\\Startup\\123.exe"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"This is a specific example of the ISO-character set alternative encoding. The SUT is performing analysis of attached \u2018filenames\u2019 to ensure that the target is not being saved to an unsafe location. An unsafe location, in this example, is the \u2018windows\u2019 directory. Since the filter does not handle ISO-character sets, the encoded filename looks innocent and thus is allowed to pass. Once decoded, however, we can see that the filename is indeed malicious. The failure of the software-filter to handle all possible decodes of the attached content constitutes the vulnerability.","Use Prefixed Escapes\n\n","This is an algorithm for generating alternative encodings of characters. A character, \u2018A\u2019, will be prefixed with a slash \u2018\/\u2019, if the resulting character sequence is \u2018\/A\u2019. The prefix character can be chosen. A subsequent technique is to allow the prefix of a multi-character sequence. A multi-character prefix could be \u2018^[\u2019, and the character \u2018A\u2019 prefixed would result in the following character sequence, \u2018^[A\u2019.","A specialization of the technique is to prefix delimiter characters which are chosen by numerical range, with a special character known as an \u2018escape\u2019 character, which can be chosen depending on the target system. An example escape character is a backslash \u2018\\\u2019, and a delimiter character \u2018:\u2019 prefixed would result in the following character sequence, \u2018\\:\u2019.","(II) Value Injection\u2014","Value injection does not alter the grammar of a transaction. Instead, as shown in , value injection injects or alters the input fields  in a transaction . Value injection can be useful, for example, to exercise inputs to Application Programming Interface (API) calls and to change the behavior of database transactions. The value injection techniques may be combined with grammar injection to obtain maximum effect.","Ghost Characters\u2014","Ghost characters encoding is one example of a value injection method for fault detection. This method involves encoding a transaction field with characters that do not affect the transaction. Ghost characters may be added to a server-request where the characters do not affect the validity of the request and may be used, for example, to cause misinterpretations by intrusion detection systems (IDS) or firewalls that are detecting network transactions.","This is an example of multiple SUTs, each which respond to the same request. The ghost characters are significant in one SUT, while being ignored in the other SUT. The resulting transactions are thus unique to each SUT and attempts to measure the state of one SUT by the other SUT may become desynchronized.","Additionally, ghost characters can cause logs to not report correct information. Ghost characters are generally stripped out of a request or are completely ignored by the request, and as a result, ghost characters do not cause problems with the request. The testing unit  () can be configured to insert a variety of characters into any request, regardless of protocol. Table 11 lists an example of an encoding for a ghost character.",{"@attributes":{"id":"p-0094","num":"0099"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 11"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},{},"original characters","ghost characters"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"ABCD;ABCD","A.B.\/\/\/\/\/C.D;A.B.C\/\/\/\/\/D"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},{"@attributes":{"id":"p-0095","num":"0100"},"figref":"FIG. 6","b":["600","605","110","610","600","610","615","605","610","620","615","620","625","600","605","600","605"]},"As an example, a filtering and monitoring system is looking for the string \u2018PASSWORD\u2019 and the target SUT accepts ghost characters \u2018|\u2019 and \u2018:\u2019. The subsequently ghosted transaction is sent over the network as \u2018P|A:S:S:W|O|R|D\u2019. The SUT interprets the transaction as \u2018PASSWORD\u2019. The monitoring system interprets that data as \u2018P|A:S:S:W|O|R|D\u2019 and thus fails to trigger on a valid PASSWORD transaction.","Input Field Injection\u2014","System calls are used internally with a program to access the file system or spawn other processes. If a remote user can control the arguments to a system call, the user can often cause commands to be run improperly or private files to be viewed or modified.","This method involves replacing an input field in a transaction field with characters that may cause faults. This input field is typically used in system calls or API calls for enabling an event such as, for example, the opening of a file.","Filenames\u2014","For example, in an effort for a target system in a system-under-test to open a password-protected file (or to open a log file), the characters may be placed in the input field as shown in Table 12.",{"@attributes":{"id":"p-0102","num":"0107"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 12"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},{},"Input field content modification"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"GET \/......\/password"]},{"entry":[{},{},"GET \/..\/..\/..\/etc\/password"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The remote machine (e.g., testing unit ) requests the file \u201c\/ . . . . . . \/\u201d and the contents of the root filesystem will be displayed. In this manner, any file on the system can be accessed.","As also shown in Table 12, a repeatable Relative Path bug allows the web request to traverse upward in the filesystem by inserting \u201c..\/\u201d into the path. The user can view any file on the system by using \u201c..\/\u201d to traverse the filesytem upward.","Another example of using value injection to alter a file path is as follows. A SUT accepts [request][target], i.e., GET \/index.html. The value stored in [target], directly altered to \u2018..\/..\/..\/..\/etc\/passwd\u2019 indicates a target on the system. The target is valid. The subsequent transaction, GET ..\/..\/..\/..\/etc\/passwd is valid in the context of a fileystem. If the server software fails to filter the directly modified value, the SUT will be fooled into returning a file that was not intended as part of the design.","Numerical Ranges\u2014","Typically, if there is a range that may have a limit, then maximum values, mid-point values, minimum values, and\/or signed or unsigned and off-by-one errors may produce a fault. For example, if an input field has the content ABCD, then changing the input field content A*.D may cause a fault in the target system because the character \u201c*\u201d is out of range with the Hexadecimal values for the characters A through Z.","If there is a range restriction on an input, such as the numbers 1-100, then the values 1, 50, and 100 should be attempted. If the SUT expects numbers to be in the range 1-99, the number 100 may cause a fault, even though technically, the number 100 can be supplied.","Signed conversion errors occur because the same number, occupying the same amount of data space, can represent either a zero-based range, i.e., 0-255, or a signed range with zero as a midpoint, i.e., \u2212127 to +127. Supplying a value of 255 may result in a signed representation of \u22121. This may cause arithmetic to be invalidated.","User Identity\u2014","Other value injection techniques include controlling user-identity (fields which indicate resource names or user-identities) and brute force attacks based on dictionary.","If a number is used to represent a user identity, then this number can be iterated throughout a range in an attempt to spoof the identity of another user. If the user ID is AAAA-0000 then a brute force attack would iterate the input values through a range:","AAAA-0001","AAAA-0002\n\n","AAAA-9999","Also, the alphabetical characters can also be iterated throughout a range:","AAAB-0000","AAAC-0000",". . .",". . .","ZZZZ-0000","Passwords\u2014","brute force attacks. This is a simple example of a sub-field that represents a set of data. The set would be a dictionary of possible passwords. The pattern would supply every password from the dictionary.","Cookies\u2014","altered over a range. This is the same as User-identity example above.","Range Injection\u2014","alter input characters over a range that includes the character. This is the same as User-identity example above.","Regular Expression & Globbing \u2014","(a) Replace Field with \u201c*\u201d or \u201c*.Exe\u201d (Many Possibilities):","Some API calls allow the specification of a matching expression, such as \u2018?.exe\u2019\u2014which means match any single character followed by \u2018.exe\u2019\u2014so the expression would match \u2018A.exe\u2019 and \u2018Z.exe\u2019 both. Different systems have different expression formats. The key is to supply expressions and determine if they are being interpreted by the target SUT. Matching expressions may be used to cause the wrong file to be opened or returned.","(b) Can Cause SQL Transaction Problems:","The character and the \u2018%\u2019 character are expressions for matching in SQL transactions. Supplying input fields such as \u2018%\u2019 and \u2018%%\u2019 may cause multiple records to be returned from the database.","Buffer Overflows \u2014","a. This method is described below.","b. This technique can be combined with other methods.","c. This technique allow character-ranges to be controlled.","The buffer overflow technique can be categorized as a value injection method. To create a buffer overflow fault injector, extra characters are inserted into a transaction where the characters are typically separated by a normal command or field separator. This fault injector or mutated transaction is transmitted to, for example, a system-under-test  in order to detect faults in the SUT .","Typically, in software operations, a process is broken into \u201cfunctions\u201d that are called periodically so that the process can manage memory and input\/output operations. When a function is executing, the function needs to store data regarding the operation that is being executed. When a function needs to store a temporary value, the function places the data on a stack, which is a memory region that will grow and shrink as functions use the memory region. A network transaction may be formed by fields, and if a field is made too large, the problem of buffer overflow may occur. Thus, when a program writes past the bounds of a buffer, this buffer overflow condition will cause the next contiguous chunk of memory to be overwritten.","The reading or writing past the end of a buffer can cause a number of diverse (and often unanticipated) behaviors: (1) programs can act in strange ways, (2) programs can fail completely, and\/or (3) programs can proceed without any noticeable difference in execution. As shown in the example in , during a buffer overflow, the buffer  overflows on the stack  and grows toward a saved return address . Thus, the attacker may be able to change the return address . As a result, when the function is finished executing, the return address  is popped off the stack and execution branches to the address. If the attacker can overwrite this return address , then the attacker has control of the processor.","Table 13 lists some of the function calls that commonly lead to buffer overflow conditions. Additional details on buffer overflow conditions are described in, for example, HACK PROOFING YOUR NETWORK: INTERNET TRADECRAFT, Copyright 2000, published by Syngress Media, Inc., 800 Hingham Street, Rockland, Mass. 02370. The above reference, HACK PROOFING YOUR NETWORK: INTERNET TRADECRAFT, is fully incorporated herein by reference.",{"@attributes":{"id":"p-0140","num":"0147"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"56pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 13"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]},{"entry":[{},{},"Function Call","Function Call","Function Call"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"Strcpy","Strcat","Wstrncpy"]},{"entry":[{},{},"Lstrcpy","Lstrcat","Scanf"]},{"entry":[{},{},"lstrcpyA","lstrcatA","Sprintf"]},{"entry":[{},{},"lstrcpyW","lstrcatW","Wscanf"]},{"entry":[{},{},"Lstrcpyn","Wcscat","Strncpy"]},{"entry":[{},{},"lstrcpynA","Strncat","Memmove"]},{"entry":[{},{},"lstrcpynW","Wstrncat","Swprintf"]},{"entry":[{},{},"Wstrcpy","Memcpy","Fgets"]},{"entry":[{},{},"Gets","Fgetws","Getws"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}}},"The following are other examples of the vulnerabilities made possible by input field injection.","(1) Esery 2.50\u2014","A user can view any file on the system by using \u201c..\/\u201d to traverse the filesystem upward. For example, the following (as shown in Table 14) would show all configuration information, including account names.",{"@attributes":{"id":"p-0144","num":"0151"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 14"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"http:\/\/127.1:3128\/..\/..\/..\/conf\/Eserv.ini"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"(2) SYMANTEC Mail-Gear 1.0 Web Interface Server \u2014","Using the \u201c..\/\u201d string, a user can fool a Common Gateway Interface (CGI) script into displaying any file on the system. For example, the following (as shown in Table 15) would display the boot.ini file on an NT system.",{"@attributes":{"id":"p-0147","num":"0154"},"tables":{"@attributes":{"id":"TABLE-US-00016","num":"00016"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 15"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"http:\/\/127.1:8003\/Display?what=..\/..\/..\/..\/..\/boot.ini"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The entire network can also be scanned for problems by inserting a procedural function in place of the destination IP address, and then setting up a Checkpoint to watch for a response that implies that the scan was successfully performed.","III. Other Remote Security Vulnerabilities & Detection Methods","Data Leakage\u2014","Data leakage occurs when an application or network gives away valuable information \u201cfor free\u201d to a potential attacker. For example, data leakage is problematic if the attacker is trying to determine the structure of a filesystem or the contents of an accounts database. A common place where data leakage occurs is within error messages. An attacker may craft special requests causing an error result, and the error message sent to the attacker may contain valuable information such as the status of the application, the existence of a user account, or the topology of a database or file system.","As an example, CGI programs can be scanned for leaked data. Every response to the scans below (Table 16) can be parsed for relevant data or saved to disk. Error conditions can be detected or certain tags can be gathered from the response.",{"@attributes":{"id":"p-0153","num":"0160"},"tables":{"@attributes":{"id":"TABLE-US-00017","num":"00017"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 16"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"CGI program scan for leaked"},{"entry":"data"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"GET \/cgi-bi\/pic.cgi?50000"},{"entry":"GET \/cgi-bi\/pic.cgi?50001"},{"entry":"GET \/cgi-bi\/pic.cgi?50002"},{"entry":"GET \/cgi-bi\/pic.cgi?50003"},{"entry":"GET \/cgi-bi\/pic.cgi?50004"},{"entry":"GET \/cgi-bi\/pic.cgi?50005"},{"entry":"*"},{"entry":"*"},{"entry":"*"},{"entry":"*"},{"entry":"GET \/cgi-bi\/pic.cgi?50999"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"The following are other examples of the vulnerabilities made possible by data leakage technique.","(1) Gathering Process Information from the Auth Service\u2014","By connecting the Auth service, a remote attacker can determine which processes are running as root.","(2) Determine which Accounts Exist\u2014","If the response for a bad password is different than the response for a bad user name, then a remote attacker can determine valid usernames by noting the different responses.","(3) Error Conditions Leak True Path\u2014","Connecting to a CGI script incorrectly can cause the server to return actual filesystem paths. This fault can be tested for by simply noting the return values from the scripts for certain key characters such as \u201cc:\\\u201d, \u201cinetpub\u201d, and\/or the like.","Injection of Unfiltered Metacharacters to Secondary Process\u2014","A server component may call another component with user-supplied input. In this situation, the server component filters certain characters or character sequences to limit the string that is passed to the other component. For example, a CGI script that lists the contents of a download directory might call \u201cIs DIRNAME\u201d, with DIRNAME being supplied by the client. If certain characters are not filtered, then requesting the directory \u201c;rm -rf\/;\u201d would cause the command \u201cIs;rm -rf\/;\u201d to be run on the command line. This particular command would be very destructive.","Table 17 lists at least some the characters that should never be passed to the shell. The target system can be tested to determine which characters are filtered and not filtered. These delimiters and escaped sequences can be stored in a file and directly read from the file by the testing unit  () to simplify testing.",{"@attributes":{"id":"p-0164","num":"0171"},"tables":{"@attributes":{"id":"TABLE-US-00018","num":"00018"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 17"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"characters to avoid passing to the shell"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"; < > * | \u2018 & $ ! # ( ) [ ] { } : \u2019 \u201d \/"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"As shown in the example in , a transaction  may include primary information  followed by a delimiter\u2032  and an additional command . A first parser  (in an SUT ) may allow the delimiter  and additional command  to pass through. The shell in the second parser  will then execute the additional command  to cause a fault condition. As an example, the content in the transaction field may be put in an on-line form on a webpage. The content may be as follows in Table 18. The primary command content is the username \u201cusername\u201d. The delimiter is \u201c;\u201d. The additional command is \u201crm -rf\/\u201d. The username is passed through with the delimiter \u201c;\u201d and additional command \u201crm -rf\/\u201d. When the shell in the second parser  executes the additional command , a fault event  is generated such as the deletion of contents in the hard drive of the system-under-test.",{"@attributes":{"id":"p-0166","num":"0173"},"tables":{"@attributes":{"id":"TABLE-US-00019","num":"00019"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 18"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Transaction field content"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"username;rm -rf\/"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"As shown in , another method is by having a translator  convert a delimiter into a character that should not be passed to the shell. For example, as shown in Table 19, assume that the original transaction content includes primary command  (\u201cusername\u201d), delimiter  (\u201c%3F\u201d), and additional command  (\u201crm -rf\/\u201d). The parser will pass the original content \u201cusername %3Frm -rf\/\u201d. However, the translator  will convert the original delimiter \u201c%3F\u201d into \u201c;\u201d. As a result, the parser  will parse the translated transaction with content \u201cusername;rm -rf\/\u201d, leading to a fault event  of hard drive content deletion.",{"@attributes":{"id":"p-0168","num":"0175"},"tables":{"@attributes":{"id":"TABLE-US-00020","num":"00020"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 19"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]},{"entry":[{},{},"original transaction","translated transaction"]},{"entry":[{},{},"field content","field content"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"username%3Frm -rf\/","username;rm -rf\/"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},"The following are other examples of the vulnerabilities made possible by Injection of Unfiltered Metacharacters to Secondary Process.","(1) Campas CGI\u2014","A remote user can execute any command on the system by executing a CGI script as shown in Table 20. This command would print the password file.",{"@attributes":{"id":"p-0172","num":"0179"},"tables":{"@attributes":{"id":"TABLE-US-00021","num":"00021"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 20"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"GET \/cgi-bin\/campas?%0acat%0a\/etcpasswd%0a."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"(2) fcheck\u2014","The checker \u201cfcheck\u201d is a file integrity checker written in Pen. This checker uses the system( ) call and passes the filename to the shell. If the filename has embedded metacharacters, then arbitrary commands can be run.","Extraneous Meta-Characters for Causing Misclassification\u2014","Classification is performed by many on-line applications. Complex applications often handle multiple types of requests. The application determines which type of request is being submitted and handles the request appropriately. For example, if a request for a graphics file is made to a web server, the image is streamed to the client browser in binary. If a request for a script is made to a web server, then the script is parsed and interpreted by the web server and the result is passed to the web client. Many web servers determine the type of file by examining the file extension (usually three characters following the last period in the file name). If a web server can be fooled into misinterpreting the type of file, security problems may occur. For example, many script files contain sensitive data such as passwords or file structures. If web-server can be tricked, a remote attacker can obtain the source code to the script.","This method involves encoding characters in a transaction that causes misclassification of the transaction. These meta-characters are not alternative encoding because characters are not being converted into equivalent characters. These meta-characters are also not ghost characters because these characters do change the transaction. These characters do not involve input field injection because the input field is not changed or because extraneous meta-characters are added into the original characters in the input field.",{"@attributes":{"id":"p-0178","num":"0185"},"figref":"FIG. 10","b":["1000","1005","1010","1015","1020","1010","1025","1020","1020","1025","1010","1020","1025","1000"]},"The ASP DOT Bug\u2014","If an ASP file is requested on MICROSOFT IIS Servers, then the file should be parsed. However, on some servers, if an additional period (.) is appended to the end of the file name (file.asp.), then IIS will not understand that an ASP file is being requested, and the default text handler will deliver the source code instead.","Table 21 lists an example of modifying a source code based on use of extraneous meta-characters. The source code file \u201ctarget.asp\u201d is changed to \u201ctarget.asp.\u201d and, as a result, the parser  misclassifies the file as a non-asp file because of the modified extension \u201c.asp.\u201d, resulting in result (B)  instead of result (A) . The result (B)  may be, for example, a default action that shows source codes containing passwords. As a result, the revealed passwords will permit security to be compromised.",{"@attributes":{"id":"p-0182","num":"0189"},"tables":{"@attributes":{"id":"TABLE-US-00022","num":"00022"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 21"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"source code file","source code file with"]},{"entry":[{},{},"extraneous meta-characters"]},{"entry":[{},"target.asp","target.asp."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The following are other examples of the vulnerabilities made possible by Extraneous Meta-characters For Causing Misclassification.","(1) Truncating Strings to Webhits.d11\u2014","On MICROSOFT IIS Servers, a problem exists where an Internet Server API (ISAPI) filter may truncate a URL. Table 22 lists a problematic request that is passed to the webhits.d11 because the request ends in (.htw) but the DLL then truncates the URL to about 200 characters.",{"@attributes":{"id":"p-0186","num":"0193"},"tables":{"@attributes":{"id":"TABLE-US-00023","num":"00023"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 22"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"http:\/\/server\/somefile.txt%20...\u2212%20.htw"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Sensitive Dependance Resource Consumption\u2014","If an application spends an undue amount of resources on any particular transaction, then that transaction may be manipulated to create a resource consuming \u201cdenial of service\u201d (DoS) situation. The HTTP GET request may be modified and created into templates for valid and invalid requests.","Additionally, if random garbage content is inserted in a transaction field, the target will parse the content, and the parser will work harder to understand the field content. This condition may result in DoS problems.","The following are other examples of the vulnerabilities made possible by Sensitive Dependance Resource Consumption.","(1) Fragmented & Segmented TCP\/IP\u2014","Transmission Control Protocol\/Internet Protocol (TCP\/IP) packets can be fragmented and segmented. Furthermore, these fragments may overlap. If these fragmentations and segmentations occur, then the server must reconstruct the data. Bombarding servers with this type of traffic can cause the server to stop responding, due to the overhead processing of the TCP\/IP protocol.","(2) ICMP Amplifier (SMURFING)\u2014","Some networks will respond to broadcast Internet Control Message Protocol (ICMP) \u201cping\u201d packets, and given a spoofed source address, the responses will bombard a target with traffic. The overload may cause the target network to fail.","Invalid State\u2014","Almost all programs have a state (i.e., do certain things in a certain order). At each point where a program can make a decision, the program is said to be in a certain state. The program will typically have a different set of choices to make depending on which state the program is at. Problems occur when a program can make invalid decisions. Typically, an invalid decision can lead a program into a processor-loop or can lead a program into simply crashing. An invalid decision may also lead to a resource leak. An invalid decision may lead a program into waiting for input that will never arrive or may lead a program into a deadlock situation. These situations may lead to denial-of-service problems.","In one embodiment, the testing unit  () can replicate TCP sessions. The testing unit  can modify and\/or edit patterns in order to test, for example, a TELNET server for a variety of configuration options in the client-server relationship.","The following are other examples of the vulnerabilities made possible by an invalid state condition.","(1) Real Server Malformed URL\u2014","The following URL in Table 23 can cause a server hang, and only requires an additional question mark (?) at the end of the URL.",{"@attributes":{"id":"p-0200","num":"0207"},"tables":{"@attributes":{"id":"TABLE-US-00024","num":"00024"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 23"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"http:\/\/206.190.42.7viewsource\/template.html?"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"(2) MSDTC.EXE\u2014","The testing unit  () can be connected to a TCP port 1027 on a Windows-NT machine and then disconnected. The MSDTC.EXE begins to consume 100% of CPU utiliztion.","(3) Stream of Zeros\u2014","The testing unit  sends a stream of binary zeros to any number of Windows-2000 TCP or User Datagram Protocol (UDP) ports, and begins to consume 100% of CPU utilization.","(4) HP OpenView OmniBack\u2014","The testing unit  connects multiple times to TCP port 5555 and HP Openview OmniBack goes to 100% CPU usage and becomes locked. As a result, a restart is required.","(5) PCAnywhere\u2014","The testing unit  is connected to TCP port 5631 and sends a large string of garbage characters. PCAnywhere will then hang.","Blind Trust\u2014","A problem with network is blindly trusting data supplied by a client. Often, a piece of client and server software is written in tandem in such a way that the client would never send dangerous data to the server. However, an attacker could re-write portions of the client software in such a way as to break the security.","As an example, assume that a server accepts a username and password from the client. The client calculates the length of the password, and supplies this length value along with the password and the username. If the amount of server-memory allocated for the password was based on the user-supplied value, then the remote-user could easily cause a fault.","The following are other examples of the vulnerabilities made possible by the blind trust technique.","(1) Testing of LOTUS Domino Mailbox\u2014","The testing unit can send a request to a server in order to send or receive electronic mail. This request contains the name of the user's mailbox. The testing unit can be used to sniff and replay this request, and alter the request so that a different user's mailbox is being specified. The current user does not have authority to access the different mailbox being specified. It has been found that LOTUS Domino does not validate the mailbox-name. The mailbox name that is specified in the request is the name that is used. Thus, a client can authorize correctly with the mailbox and then change the mailbox name to access the mailbox of any other user.","(2) Testing Windows 9\u00d7SMB Vulnerability\u2014","In the Windows 9\u00d7SMB, the password length is passed to the server in the same packet as the password, and only the number of characters specified in the length is checked against the real password. Thus, if a length of 1 is passed, less than 255 passwords are possible, and as a result, brute-force attacks are not difficult to carry out.","Below Threshold\u2014","One common type of security bug is due to an attacker performing an attack under the threshold of logging software. The threshold can appear in the logging mechanism of a piece of software or in an IDS system. Testing for this type of vulnerability can involved, for example, inputting an item that normally would be logged in a lesser or less visible manner. In the \u201cdrip\u201d port scanning method, a port is scanned with the requests transmissions spread out over a long period of time. IDS systems often are unable to correlate data over such a long period of time. The problem results from having too much data over that period of time to perform intelligent correlation of all of the data.","The following are other examples of the vulnerabilities made possible by the below threshold technique.","(1) Secure Shell (SSH)\u2014","Earlier versions of SSH had a login bug where if a user had entered a bad password one time or two times, a failed login was not recorded. The failed login was only recorded if the user failed three times.","(2) Snort\u2014","Snort detects unusual fragment usage on a network. However, if the fragments are over 128 bytes, the fragments are not flagged as unusual.","Improper Configuration\u2014","Many systems have the potential to be secure but remain vulnerable due to improper installation and configuration. These improper configuration include improper file and directory permissions, improper rules on how to handle certain commands, and failure to change a default password.","Traversing Methods",{"@attributes":{"id":"p-0226","num":"0233"},"figref":"FIG. 11","b":["105","1100"]},{"@attributes":{"id":"p-0227","num":"0234"},"tables":{"@attributes":{"id":"TABLE-US-00025","num":"00025"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"12"},"colspec":[{"@attributes":{"colname":"1","colwidth":"21pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"4","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"5","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"6","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"7","colwidth":"28pt","align":"center"}},{"@attributes":{"colname":"8","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"9","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"10","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"11","colwidth":"14pt","align":"center"}},{"@attributes":{"colname":"12","colwidth":"14pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE 24"},{"entry":{"@attributes":{"namest":"1","nameend":"12","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["V1","d1","d2","V2","d3","V3","d4","V4","d5","V5","d6","d7"]},{"entry":{"@attributes":{"namest":"1","nameend":"12","align":"center","rowsep":"1"}}}]}}}}},"The delimiters can be parsed out to obtain intermediate representations , , , , and . For intermediate representation , the value V1 is replaced with a buffer (a function) BF. Each buffer BF may have a range of, for example, 1 to 1000, in increments of 100. Thus, in this example, the intermediate representation  will have a total of 10 patterns.","For intermediate representation , the value V2 is replaced with a buffer BF, with the buffer BF having a range of, for example, 1 to 1000, in increment of 100. Thus, intermediate representation  will also have a total of 10 patterns. Similarly, intermediate representations , , and  each have values V replaced by the buffer BF.","Thus,  illustrates a method of converting an original transaction into templates for fault testing.","Generation of Network Traffic Based on Patterns","A \u201cpattern\u201d specifies how a packet is to be generated over a network. Thus, a pattern represents a set of rules for generating packets. A single pattern can be responsible for generating, for example, thousands of packets. A pattern could, for example, generate DNS traffic, HTTP traffic, and\/or denial-of-service attacks.","Various methods are now discussed for building patterns that can be used for different types of injections for purposes of fault testing. Table 25 lists a collection of \u201cfunctions\u201d that may form a pattern. These functions can specify how to build, for example, an Ethernet header, an Internet Protocol (IP) header, a Transmission Control Protocol (TCP) header, and a source port. By using functions together, desired packet sequences can be generated.",{"@attributes":{"id":"p-0233","num":"0240"},"tables":{"@attributes":{"id":"TABLE-US-00026","num":"00026"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"49pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 25"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Function","function","function","function"]},{"entry":[{},"Ethernet header","IP header","TCP header","Source port"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"4","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"The simplest function is static-text, which a user can type in the text character that is sent over a wire of a network. Table 26 lists a generated pattern where a packet is printed over the wire in the network. Every function can be individually edited. Thus, the functions for the Ethernet header, IP header, TCP header, and source port for a pattern will have the values A, A, B, B, respectively.",{"@attributes":{"id":"p-0235","num":"0242"},"tables":{"@attributes":{"id":"TABLE-US-00027","num":"00027"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 26"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"MY PATTERN [A] [A] [B] [B] "]},{"entry":[{},{},"results in the following network output:"]},{"entry":[{},{},"\u2003A A B B"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"More complex functions may include, for example, a sequence through a series of numbers or read values from a file. The file may be in, for example, the memory  () which may be integrated in or accessible to the testing unit  (). Functions can also perform the task of handling activities such as calculating TCP\/IP checksums, packet lengths, and\/or dealing with Ethernet addressing. Functions may also perform repetitive tasking and may be derived objects that use an application program interface (API).","Table 27 lists generated patterns where a packet is printed over a wire in a network with use of a sequence number. Functions that cause more than one packet to be generated are called \u201citerating functions\u201d. A pattern with one or more iterating functions will generate multiple packets over a wire. One type of iterating function is the number sequence. The number sequence iterates through a range of integers. For example, there are number sequences available for 8-bit, 16-bit, and 32-bit numbers.",{"@attributes":{"id":"p-0238","num":"0245"},"tables":{"@attributes":{"id":"TABLE-US-00028","num":"00028"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 27"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"MY PATTERN [A] [A] [B] [B] [sequence 1-5]"]},{"entry":[{},{},"results in the following network output:"]},{"entry":[{},{},"\u2003A A B B 1"]},{"entry":[{},{},"\u2003A A B B 2"]},{"entry":[{},{},"\u2003A A B B 3"]},{"entry":[{},{},"\u2003A A B B 4"]},{"entry":[{},{},"\u2003A A B B 5"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Table 28 lists generated patterns where a packet is printed over a wire in a network, with the source port function using a sequence (e.g., sequence 4 to 6).",{"@attributes":{"id":"p-0240","num":"0247"},"tables":{"@attributes":{"id":"TABLE-US-00029","num":"00029"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 28"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"MY PATTERN [A] [A] [B] [sequence 4-6]"]},{"entry":[{},{},"results in the following network output:"]},{"entry":[{},{},"\u2003A A B 4"]},{"entry":[{},{},"\u2003A A B 5"]},{"entry":[{},{},"\u2003A A B 6"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Table 29 lists generated patterns where a packet is printed over a wire in a network, with the source port function using a sequence number in flat mode.",{"@attributes":{"id":"p-0242","num":"0249"},"tables":{"@attributes":{"id":"TABLE-US-00030","num":"00030"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 29"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"MY PATTERN [1] [2] [3] [sequence 1-2]"]},{"entry":[{},{},"results in the following network output:"]},{"entry":[{},{},"\u20031 2 3 1 1"]},{"entry":[{},{},"\u20031 2 3 2 2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Table 30 lists generated patterns where a packet is printed over a wire in a network, with the source port function using a sequence number in nested mode.",{"@attributes":{"id":"p-0244","num":"0251"},"tables":{"@attributes":{"id":"TABLE-US-00031","num":"00031"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 30"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"MY PATTERN [1] [2] [3] [sequence 1-2]"]},{"entry":[{},{},"results in the following network output:"]},{"entry":[{},{},"\u20031 2 3 1 1"]},{"entry":[{},{},"\u20031 2 3 1 2"]},{"entry":[{},{},"\u20031 2 3 2 1"]},{"entry":[{},{},"\u20031 2 3 2 2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Table 31 lists generated patterns where the source port function is using a sequence (e.g., 1 to 3) in a parent pattern, and the parent pattern is with, for example, two child patterns. A child pattern behaves as a normal pattern, except the child pattern is only generated along with its parent pattern. Packets can occur in a particular order by making them children patterns.",{"@attributes":{"id":"p-0246","num":"0253"},"tables":{"@attributes":{"id":"TABLE-US-00032","num":"00032"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 31"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"PARENT [1] [2] [3] [sequence 1-3]"]},{"entry":[{},{},"\u2003\u2003CHILD [1] [2] [3] [5]"]},{"entry":[{},{},"\u2003\u2003CHILD [1] [2] [3] [6]"]},{"entry":[{},{},"results in the following network output:"]},{"entry":[{},{},"\u20031 2 3 1"]},{"entry":[{},{},"\u20031 2 3 5"]},{"entry":[{},{},"\u20031 2 3 6"]},{"entry":[{},{},"\u20031 2 3 2"]},{"entry":[{},{},"\u20031 2 3 5"]},{"entry":[{},{},"\u20031 2 3 6"]},{"entry":[{},{},"\u20031 2 3 3"]},{"entry":[{},{},"\u20031 2 3 5"]},{"entry":[{},{},"\u20031 2 3 6"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Table 32 lists generated patterns having multiple parent patterns with children patterns.",{"@attributes":{"id":"p-0248","num":"0255"},"tables":{"@attributes":{"id":"TABLE-US-00033","num":"00033"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 32"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"PARENT [A] [A]"]},{"entry":[{},{},"\u2003\u2003CHILD [B] [B] [HELLO]"]},{"entry":[{},{},"\u2003\u2003CHILD [B] [C] [HELLO]"]},{"entry":[{},{},"\u2003\u2003CHILD [B] [D] [HELLO]"]},{"entry":[{},{},"\u2003\u2003CHILD [B] [E] [HELLO]"]},{"entry":[{},{},"PARENT [C] [C]"]},{"entry":[{},{},"\u2003\u2003CHILD [D] [B] [HELLO]"]},{"entry":[{},{},"\u2003\u2003CHILD [D] [C] [HELLO]"]},{"entry":[{},{},"\u2003\u2003\u2003CHILD [D] [D] [HELLO]"]},{"entry":[{},{},"\u2003\u2003\u2003CHILD [D] [E] [HELLO]"]},{"entry":[{},{},"\u2003\u2003PARENT [E] [E]"]},{"entry":[{},{},"\u2002\u2003\u2003\u2003CHILD [F] [B] [HELLO]"]},{"entry":[{},{},"\u2002\u2003\u2003\u2003CHILD [F] [C] [HELLO]"]},{"entry":[{},{},"\u2002\u2003\u2003\u2003CHILD [F] [D] [HELLO]"]},{"entry":[{},{},"\u2002\u2003\u2003\u2003CHILD [F] [E] [HELLO]"]},{"entry":[{},{},"results in the following network output:"]},{"entry":[{},{},"\u2003A A"]},{"entry":[{},{},"\u2003B B HELLO"]},{"entry":[{},{},"\u2003B C HELLO"]},{"entry":[{},{},"\u2003B D HELLO"]},{"entry":[{},{},"\u2003B E HELLO"]},{"entry":[{},{},"\u2003C C"]},{"entry":[{},{},"\u2003D B HELLO"]},{"entry":[{},{},"\u2003D C HELLO"]},{"entry":[{},{},"\u2003D D HELLO"]},{"entry":[{},{},"\u2003D E HELLO"]},{"entry":[{},{},"\u2003E E"]},{"entry":[{},{},"\u2003F B HELLO"]},{"entry":[{},{},"\u2003F C HELLO"]},{"entry":[{},{},"\u2003F D HELLO"]},{"entry":[{},{},"\u2003F E HELLO"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Table 33 lists generated patterns having a parent pattern with an iterating child pattern. Iterating functions are noted with an asterisk [*n] where n indicates the number of times that the function will iterate. Iterating children patterns contain an iterating function within them such as a buffer overflow test or a number-sequence. An iterating child will generate many packets.",{"@attributes":{"id":"p-0250","num":"0257"},"tables":{"@attributes":{"id":"TABLE-US-00034","num":"00034"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 33"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"PARENT [A] [A]"]},{"entry":[{},{},"\u2003\u2003CHILD [B] [*10] (will generate 11 times, starting from 0)"]},{"entry":[{},{},"results in the following network output:"]},{"entry":[{},{},"\u2003A A"]},{"entry":[{},{},"\u2003B 0"]},{"entry":[{},{},"\u2003B 1"]},{"entry":[{},{},"\u2003B 2"]},{"entry":[{},{},"\u2003B 3"]},{"entry":[{},{},"\u2003B 4"]},{"entry":[{},{},"\u2003B 5"]},{"entry":[{},{},"\u2003B 6"]},{"entry":[{},{},"\u2003B 7"]},{"entry":[{},{},"\u2003B 8"]},{"entry":[{},{},"\u2003B 9"]},{"entry":[{},{},"\u2003B 10"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Table 34 lists generated patterns having an iterating parent pattern with an iterating child pattern.",{"@attributes":{"id":"p-0252","num":"0259"},"tables":{"@attributes":{"id":"TABLE-US-00035","num":"00035"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 34"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"PARENT [A] [A] [*3]"]},{"entry":[{},{},"\u2003\u2003CHILD [B] [*2]"]},{"entry":[{},{},"results in the following network output:"]},{"entry":[{},{},"\u2003A A 0"]},{"entry":[{},{},"\u2003B 0"]},{"entry":[{},{},"\u2003B 1"]},{"entry":[{},{},"\u2003B 2"]},{"entry":[{},{},"\u2003A A 1"]},{"entry":[{},{},"\u2003B 0"]},{"entry":[{},{},"\u2003B 1"]},{"entry":[{},{},"\u2003B 2"]},{"entry":[{},{},"\u2003A A 2"]},{"entry":[{},{},"\u2003B 0"]},{"entry":[{},{},"\u2003B 1"]},{"entry":[{},{},"\u2003B 2"]},{"entry":[{},{},"\u2003A A 3"]},{"entry":[{},{},"\u2003B 0"]},{"entry":[{},{},"\u2003B 1"]},{"entry":[{},{},"\u2003B 2"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Table 35 lists generated patterns having a parent pattern with a 3-way handshake Checkpoint. A checkpoint object permits a pattern to react intelligently to responses from a system-under-test. A pattern may be iterating until it hits a checkpoint, and the checkpoint will inform the testing unit  to stop the iteration task until a decision has been made. Checkpoints can be assigned to patterns in order to alter the behavior of the patterns.","The 3-way handshake checkpoint is typically used exclusively for spoofing TCP\/IP sessions to a remote host. When the 3-way handshake is used with a parent pattern, the child patterns are often sent as part of the TCP session.","The 3-way handshake is noted in parenthesis in Table 35 because it is derived from the contents of the parent packet, A A, but it is not a direct dump of A A onto the network; it is only indirectly based on the contents of A A. After the 3-way handshake is complete, A A is handled normally and dumped directly onto the wire along with its children.","The SYNC ACK return packet is received from the system-under-test and is a type of packet that is related to TCP. The information from the return packet is then placed into the PARENT pattern prior to sending the PARENT pattern to the system-under-test. This process permits information to be obtained about the state of the system-under-test.",{"@attributes":{"id":"p-0257","num":"0264"},"tables":{"@attributes":{"id":"TABLE-US-00036","num":"00036"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 35"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"3WAY-PARENT [A] [A] [3]"]},{"entry":[{},{},"\u2003CHILD [B] [HELLO WORLD]"]},{"entry":[{},{},"results in the following network output:"]},{"entry":[{},{},"\u2009(A A) SYNC ->"]},{"entry":[{},{},"\u2009(A A) <- SYNC ACK"]},{"entry":[{},{},"A A"]},{"entry":[{},{},"B HELLO WORLD"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"Table 36 lists generated patterns having a parent pattern with an Auto-TCP-Sequence with multiple children patterns. The 3-way handshake is useful because it automatically sets up the TCP sequence numbers in a session. The TCP sequence numbers are typically required for proper TCP session to be handled. Patterns that are auto-sequencing a TCP session will use the Auto-TCP-Sequence function.","In Table 36, the Auto-TCP-Sequence number keeps count so that each child packet is considered in its proper order on the target device (system-under-test). The first child always has the same sequence as the parent, as typical in the operation of TCP handshakes. If an actual 3-way TCP handshake is performed, the auto-sequence number is typically required for proper TCP session handling.",{"@attributes":{"id":"p-0260","num":"0267"},"tables":{"@attributes":{"id":"TABLE-US-00037","num":"00037"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 36"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"PARENT [A] [A] [AutoTCPSequence]",{}]},{"entry":[{},{},"\u2003CHILD [B] [AutoTCP Sequence]",{}]},{"entry":[{},{},"\u2003CHILD [C] [AutoTCP Sequence]",{}]},{"entry":[{},{},"\u2003CHILD [D] [AutoTCP Sequence]",{}]},{"entry":[{},{},"\u2003CHILD [E] [AutoTCP Sequence]",{}]},{"entry":[{},{},"results in the following network output:",{}]},{"entry":[{},{},"A A 1",{}]},{"entry":[{},{},"B 1",{}]},{"entry":[{},{},"C 2",{}]},{"entry":[{},{},"D 3",{}]},{"entry":[{},{},"E 4"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},"Table 37 lists generated patterns having a parent pattern with a 3-Way Handshake Checkpoint & Auto TCP Sequence function. The first three packets are considered the \u201c3-way handshake\u201d of TCP\/IP. After the 3-way handshake is completed, the actual patterns are dumped onto the wire. The auto-TCP-Sequence is incremented for each packet, correctly indicating the current position in the byte stream for each TCP packet.",{"@attributes":{"id":"p-0262","num":"0269"},"tables":{"@attributes":{"id":"TABLE-US-00038","num":"00038"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"175pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 37"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"3WAY-PARENT [A] [A] [Auto TCP Sequence]",{}]},{"entry":[{},{},"\u2003\u2003CHILD [B] [Auto TCP Sequence] [HELLO WORLD]",{}]},{"entry":[{},{},"\u2003\u2003CHILD [C] [Auto TCP Sequence] [HELLO WORLD]",{}]},{"entry":[{},{},"\u2003\u2003CHILD [D] [Auto TCP Sequence] [HELLO WORLD]",{}]},{"entry":[{},{},"\u2003\u2003CHILD [E] [Auto TCP Sequence] [HELLO WORLD]",{}]},{"entry":[{},{},"results in the following network output:",{}]},{"entry":[{},{},"\u2003(A A) SYNC ->",{}]},{"entry":[{},{},"\u2003(A A) <-SYNC ACK ",{}]},{"entry":[{},{},"\u2003(A A) -> ACK",{}]},{"entry":[{},{},"A A 1",{}]},{"entry":[{},{},"B 1 HELLO WORLD",{}]},{"entry":[{},{},"C 11 HELLO WORLD",{}]},{"entry":[{},{},"D 21 HELLO WORLD",{}]},{"entry":[{},{},"E 31 HELLO WORLD"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},"Table 38 lists generated patterns having a parent pattern with an Auto-TCP-Sequence with iterating child pattern.",{"@attributes":{"id":"p-0264","num":"0271"},"tables":{"@attributes":{"id":"TABLE-US-00039","num":"00039"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 38"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"PARENT [A] [A] [Auto TCP Sequence]",{}]},{"entry":[{},{},"\u2003CHILD [B] [Auto TCP Sequence]",{}]},{"entry":[{},{},"\u2003CHILD [C] [Auto TCP Sequence] [*3]",{}]},{"entry":[{},{},"\u2003CHILD [D] [Auto TCP Sequence]",{}]},{"entry":[{},{},"\u2003CHILD [E] [Auto TCP Sequence]",{}]},{"entry":[{},{},"results in the following network output:",{}]},{"entry":[{},{},"A A 1",{}]},{"entry":[{},{},"B 1",{}]},{"entry":[{},{},"C 2 0",{}]},{"entry":[{},{},"C 2 1",{}]},{"entry":[{},{},"C 2 2",{}]},{"entry":[{},{},"C 2 3",{}]},{"entry":[{},{},"D 3",{}]},{"entry":[{},{},"E 4"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},"Table 39 lists children pattern reference data in a parent pattern. Thus, reference data can be referenced between patterns. A child pattern can, for example, reference data in another child pattern or even in the parent. In Table 39, the parent pattern has a small sequence from 0-3, and Child C references the Z function in the parent. If this were part of a TCP session, each iteration of the parent would be an entirely new TCP handshake\/session.",{"@attributes":{"id":"p-0266","num":"0273"},"tables":{"@attributes":{"id":"TABLE-US-00040","num":"00040"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 39"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"PARENT [A] [A] [Z *3]",{}]},{"entry":[{},{},"\u2003CHILD [B] [H]",{}]},{"entry":[{},{},"\u2003CHILD [C] [PARENT -> Z]",{}]},{"entry":[{},{},"\u2003CHILD [D] [H]",{}]},{"entry":[{},{},"\u2003CHILD [E] [H]",{}]},{"entry":[{},{},"results in the following network output:",{}]},{"entry":[{},{},"A A Z0",{}]},{"entry":[{},{},"B H",{}]},{"entry":[{},{},"C Z0",{}]},{"entry":[{},{},"D H",{}]},{"entry":[{},{},"E H",{}]},{"entry":[{},{},"A A Z1",{}]},{"entry":[{},{},"B H",{}]},{"entry":[{},{},"C Z1",{}]},{"entry":[{},{},"D H",{}]},{"entry":[{},{},"E H",{}]},{"entry":[{},{},"A A Z2",{}]},{"entry":[{},{},"B H",{}]},{"entry":[{},{},"C Z2",{}]},{"entry":[{},{},"D H",{}]},{"entry":[{},{},"E H",{}]},{"entry":[{},{},"A A Z3",{}]},{"entry":[{},{},"B H",{}]},{"entry":[{},{},"C Z3",{}]},{"entry":[{},{},"D H",{}]},{"entry":[{},{},"E H"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}}},"Table 40 lists generated patterns having a parent pattern with a 3-Way Handshake Checkpoint with Auto-TCP-Sequence with Reference. The pattern has a 3-way handshake checkpoint that causes the SYN\/SYN-ACK traffic for each iteration of the parent. Since the parent itself is not live, the parent pattern's data being transmitted over the network is not typically seen. After the TCP handshake is completed, the children are generated with auto-sequence numbers. Note that child C is referencing data in the parent, specifically the Z function.",{"@attributes":{"id":"p-0268","num":"0275"},"tables":{"@attributes":{"id":"TABLE-US-00041","num":"00041"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 40"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"(not live) 3WAY-PARENT [A] [A] [Auto TCP Sequence] [Z *3]",{}]},{"entry":[{},"CHILD [B] [Auto TCP Sequence] [HELLO]",{}]},{"entry":[{},"CHILD [C] [Auto TCP Sequence] [PARENT -> Z]",{}]},{"entry":[{},"CHILD [D] [TCP Sequence] [WORLD]",{}]},{"entry":[{},"results in the following network output:",{}]},{"entry":[{},"(A A) SYNC ->",{}]},{"entry":[{},"(A A) <- SYNC ACK",{}]},{"entry":[{},"(A A) -> ACK",{}]},{"entry":[{},"\u2003\u2003\u2003B 1 HELLO",{}]},{"entry":[{},"\u2003\u2003\u2003C 6 Z0",{}]},{"entry":[{},"D 8 WORLD",{}]},{"entry":[{},"\u2003\u2003(A A) SYNC ->",{}]},{"entry":[{},"\u2003\u2003(A A) <- SYNC ACK",{}]},{"entry":[{},"\u2003\u2003(A A) -> ACK",{}]},{"entry":[{},"\u2003B 1 HELLO",{}]},{"entry":[{},"\u2003C 6 Z1",{}]},{"entry":[{},"D 8 WORLD",{}]},{"entry":[{},"\u2003\u2003(A A) SYNC ->",{}]},{"entry":[{},"\u2003\u2003(A A) <- SYNC ACK ",{}]},{"entry":[{},"\u2003\u2003(AA) -> ACK",{}]},{"entry":[{},"\u2003B 1 HELLO",{}]},{"entry":[{},"\u2003C 6 Z2",{}]},{"entry":[{},"D 8 WORLD",{}]},{"entry":[{},"\u2003\u2003(A A) SYNC ->",{}]},{"entry":[{},"\u2003\u2003(A A) <- SYNC ACK",{}]},{"entry":[{},"\u2003\u2003(A A) -> ACK",{}]},{"entry":[{},"\u2003B 1 HELLO",{}]},{"entry":[{},"\u2003C 6 Z3",{}]},{"entry":[{},"D 8 WORLD"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"Table 41 lists generated patterns having a parent pattern with a 3-Way Handshake with Buffer Test with Reference.",{"@attributes":{"id":"p-0270","num":"0277"},"tables":{"@attributes":{"id":"TABLE-US-00042","num":"00042"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 41"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"(not live) 3WAY-PARENT [A] [A] [Auto TCP Sequence] ",{}]},{"entry":[{},"[BUFFER_TEST 5-10]",{}]},{"entry":[{},"CHILD [B] [Auto TCP Sequence] [PARENT->BUFFER_TEST]",{}]},{"entry":[{},"CHILD [C] [Auto TCP Sequence] [WORLD]",{}]},{"entry":[{},"results in the following network output:",{}]},{"entry":[{},"\u2003(A A) SYNC ->",{}]},{"entry":[{},"\u2003(A A) <- SYNC ACK",{}]},{"entry":[{},"\u2003(A A) -> ACK",{}]},{"entry":[{},"B 1 HELLOAAAAA",{}]},{"entry":[{},"C 11 WORLD",{}]},{"entry":[{},"\u2003(A A) SYNC ->",{}]},{"entry":[{},"\u2003(A A) <- SYNC ACK",{}]},{"entry":[{},"\u2003(A A) -> ACK",{}]},{"entry":[{},"B 1 HELLOAAAAAA",{}]},{"entry":[{},"C 12 WORLD",{}]},{"entry":[{},"\u2003(A A) SYNC ->",{}]},{"entry":[{},"\u2003(A A) <- SYNC ACK",{}]},{"entry":[{},"\u2003(A A) -> ACK",{}]},{"entry":[{},"B 1 HELLOAAAAAAA",{}]},{"entry":[{},"C 13 WORLD",{}]},{"entry":[{},"\u2003(A A) SYNC ->",{}]},{"entry":[{},"\u2003(A A) <- SYNC ACK ",{}]},{"entry":[{},"\u2003(A A) -> ACK",{}]},{"entry":[{},"B 1 HELLOAAAAAAAA",{}]},{"entry":[{},"C 14 WORLD",{}]},{"entry":[{},"\u2003(A A) SYNC ->",{}]},{"entry":[{},"\u2003(A A) <- SYNC ACK",{}]},{"entry":[{},"\u2003(A A) -> ACK",{}]},{"entry":[{},"B 1 HELLOAAAAAAAAA",{}]},{"entry":[{},"C 15 WORLD",{}]},{"entry":[{},"\u2003(A A) SYNC ->",{}]},{"entry":[{},"\u2003(A A) <- SYNC ACK",{}]},{"entry":[{},"\u2003(A A) -> ACK",{}]},{"entry":[{},"B 1 HELLOAAAAAAAAAA",{}]},{"entry":[{},"C 16 WORLD"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0271","num":"0278"},"figref":["FIG. 1200","FIG. 1"],"b":["1200","1205","105","1210","1210","1215","1220","1215","1225","105","1225"]},"If the non-fault condition of state  occurs, then the target system will be in a no-fault state , before the target system resets as shown in state .","Typically, for fault injection methods based on extraneous meta-characters and buffer-overflow fault injector, detection is made for a reset to determine fault occurrence.",{"@attributes":{"id":"p-0274","num":"0281"},"figref":"FIG. 13","b":["1300","1305","1310","1310","1335","1320","1325","1315","105","1330","1335","1340"]},"A fault occurrence in state  may also result in a non-reset by the target system, as shown in state . This non-reset condition allows the testing unit  to detect a fault occurrence.","A fault occurrence in state  may also result in a non-response by the target system, as shown in state . This non-response condition allows the testing unit  to detect a fault occurrence.","Creating IDS Signature & Conversion to Regular Expression",{"@attributes":{"id":"p-0277","num":"0284"},"figref":"FIG. 14","b":["1400","105","115","1405","1400","1410","105","1405"]},"In one embodiment, based on the fault condition , the testing unit  can create an IDS signature  based on, for example, at least some of the following known information: (1) test pattern ; (2) direction  of the transaction that caused the fault condition ; (3) transaction source identity ; (4) transaction destination identity ; (5) Protocol  (e.g., TCP). A parser  in the testing unit  can then translate () the IDS signature  into a regular expression . The regular expression  is useful by being able to provide a more generic expression or broader definition of strings of data that define the parameters that caused a fault condition  or problematic transaction. Regular expressions can be a powerful tool for manipulating text and data. For example, regular expressions can play a vital role in constructing a World Wide Web CGI script, which can involve text and data of all sorts. Additional details on regular expression may be found in, for example, Jeffrey E. F. Friedl, MASTERING REGULAR EXPRESSIONS: POWERFUL TECHNIQUES FOR PERL AND OTHER TOOLS, 1st Edition, (O'Reilly Books January 1997). The reference, MASTERING REGULAR EXPRESSIONS: POWERFUL TECHNIQUES FOR PERL AND OTHER TOOLS, is fully incorporated herein by reference.","Conversion of a Pattern to Arbitrary Expression for Intrusion Detection","The pattern from the testing unit  represents an abstract description of a network transaction . An intrusion detection equipment that operate on \u201csignatures\u201d are driven by expressions that describe network transactions . Thus, there is a conversion possible between a pattern from the testing unit  and a \u201csignature\u201d expression.","The format of an IDS signature expression is typically proprietary\u2014but is usually very similar to a standard regular expression. For example, a signature expression to detection of the character-string \u201c\/etc\/passwd\u201d in a network transaction might look like as shown in Table 42:",{"@attributes":{"id":"p-0281","num":"0288"},"tables":{"@attributes":{"id":"TABLE-US-00043","num":"00043"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 42"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"MATCH: TCP, *\/etc\/passwd*",{}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"A pattern describes all portions of a transaction in the context of a network protocol. A pattern may be using the substring \u201c\/etc\/passwd\u201d. The pattern is a TCP transaction, and this fact can be used to generate the network-protocol specific information for the IDS signature as shown in Table 43:",{"@attributes":{"id":"p-0283","num":"0290"},"tables":{"@attributes":{"id":"TABLE-US-00044","num":"00044"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 43"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"MATCH: TCP",{}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0284","num":"0291"},"tables":{"@attributes":{"id":"TABLE-US-00045","num":"00045"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 44"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"GET \/cgi-bin\/campas?%0A\/etc\/passwd\/%0A",{}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0285","num":"0292"},"tables":{"@attributes":{"id":"TABLE-US-00046","num":"00046"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"42pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 45"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"GET",{}]},{"entry":[{},{},"GET \/cgi-bin\/campas",{}]},{"entry":[{},{},"\/cgi-bin\/campas",{}]},{"entry":[{},{},"\/etc\/passwd\/"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},{"@attributes":{"id":"p-0286","num":"0293"},"tables":{"@attributes":{"id":"TABLE-US-00047","num":"00047"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"126pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"35pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 46"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"MATCH: TCP, GET*",{}]},{"entry":[{},{},"MATCH: TCP, GET \/cgi-",{}]},{"entry":[{},{},"bin\/campas*",{}]},{"entry":[{},{},"MATCH: TCP, *\/cgi-bin\/campas*",{}]},{"entry":[{},{},"MATCH: TCP, *\/etc\/passwd\/*"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":[{},{},{},{},{}]},"The patterns encode the knowledge about which portions of the transaction are being injected with fault and which portions are string literals\u2014not actually part of the fault injection but required for a valid transaction.","The pattern encodes several text fields and a special field that is labeled \u201cBUFFER\u201d. The \u2018BUFFER\u2019 field is a part of the pattern and it has a position in relation to the text fields around it. The transactions produced by this pattern will contain the following strings as shown in Table 47:",{"@attributes":{"id":"p-0289","num":"0296"},"tables":{"@attributes":{"id":"TABLE-US-00048","num":"00048"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"189pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"14pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 47"},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"GET \/cgi-bin\/test?AAAAAAAAAAA HTTP\/1.1",{}]},{"entry":[{},"GET \/cgi-bin\/test?AAAAAAAAAAAAA HTTP\/1.1",{}]},{"entry":[{},"GET \/cgi-bin\/test?AAAAAAAAAAAAAAA HTTP\/1.1",{}]},{"entry":[{},"GET \/cgi-bin\/test?AAAAAAAAAAAAAAAAAA HTTP\/1.1",{}]},{"entry":[{},"GET \/cgi-bin\/test?AAAAAAAAAAAAAAAAAAAAA HTTP\/1.1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0290","num":"0297"},"tables":{"@attributes":{"id":"TABLE-US-00049","num":"00049"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 48"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"MATCH: TCP, *\/cgi-bin\/test? [A X 11]*",{}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"Since the letter \u201cA\u201d is chosen arbitrarily, the IDS signature can be generated based on character-class, such as the following:",{"@attributes":{"id":"p-0292","num":"0299"},"tables":{"@attributes":{"id":"TABLE-US-00050","num":"00050"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"140pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 49"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"MATCH: TCP, *\/cgi-bin\/test?[. X 11]*",{}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"The pattern encodes data for all fields and the delimiters between fields. That is, the pattern encodes spaces and special characters that mark the boundary between fields. To restrict an IDS signature to match only a given field, the delimiter characters around a field can be included in the expression:",{"@attributes":{"id":"p-0294","num":"0301"},"tables":{"@attributes":{"id":"TABLE-US-00051","num":"00051"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"28pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 50"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},{},"MATCH: TCP, *\u2018 \/cgi-bin\/test?[. X 11] \u2019*",{}]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"3","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"Other variations and modifications of the above-described embodiments and methods are possible in light of the foregoing teaching.","Further, at least some of the components of an embodiment of the invention may be implemented by using a programmed general purpose digital computer, by using application specific integrated circuits, programmable logic devices, or field programmable gate arrays, or by using a network of interconnected components and circuits. Connections may be wired, wireless, by modem, and the like.","It will also be appreciated that one or more of the elements depicted in the drawings\/figures can also be implemented in a more separated or integrated manner, or even removed or rendered as inoperable in certain cases, as is useful in accordance with a particular application.","It is also within the scope of the present invention to implement a program or code that can be stored in a machine-readable medium to permit a computer to perform any of the methods described above.","Additionally, the signal arrows in the drawings\/Figures are considered as exemplary and are not limiting, unless otherwise specifically noted. Furthermore, the term \u201cor\u201d as used in this disclosure is generally intended to mean \u201cand\/or\u201d unless otherwise indicated. Combinations of components or steps will also be considered as being noted, where terminology is foreseen as rendering the ability to separate or combine is unclear.","As used in the description herein and throughout the claims that follow, \u201ca\u201d, \u201can\u201d, and \u201cthe\u201d includes plural references unless the context clearly dictates otherwise. Also, as used in the description herein and throughout the claims that follow, the meaning of \u201cin\u201d includes \u201cin\u201d and \u201con\u201d unless the context clearly dictates otherwise.","The above description of illustrated embodiments of the invention, including what is described in the Abstract, is not intended to be exhaustive or to limit the invention to the precise forms disclosed. While specific embodiments of, and examples for, the invention are described herein for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as those skilled in the relevant art will recognize.","These modifications can be made to the invention in light of the above detailed description. The terms used in the following claims should not be construed to limit the invention to the specific embodiments disclosed in the specification and the claims. Rather, the scope of the invention is to be determined entirely by the following claims, which are to be construed in accordance with established doctrines of claim interpretation."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Non-limiting and non-exhaustive embodiments of the present invention are described with reference to the following figures, wherein like reference numerals refer to like parts throughout the various views unless otherwise specified.",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 14"}]},"DETDESC":[{},{}]}
