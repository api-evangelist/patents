---
title: Interest graph-powered search
abstract: A method, which identifies information of interest within an organization, determines use data that characterizes relationships among information items within the organization, where the information items include user data and collections of information items. The method generates interest data indicating affinities among the information items based on the determined use data. After receiving a query for data regarding the information items, the method responds to the query by providing one or more results based on the generated interest data. More details are provided herein.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09497277&OS=09497277&RS=09497277
owner: Highspot, Inc.
number: 09497277
owner_city: Seattle
owner_country: US
publication_date: 20131220
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","DETAILED DESCRIPTION"],"p":["This application claims the benefit U.S. Patent Provisional Application No. 61\/745,365 filed on Dec. 21, 2012, entitled \u201cINTEREST GRAPH-POWERED SEARCH\u201d, which is herein incorporated by reference in its entirety. This application is related to U.S. Provisional Patent Application No. 61\/800,042, filed Mar. 15, 2013, entitled \u201cINTEREST GRAPH-POWERED FEED\u201d, U.S. Provisional Patent Application No. 61\/800,322, filed Mar. 15, 2013, entitled \u201cINTEREST GRAPH-POWERED BROWSING\u201d, U.S. Provisional Patent Application No. 61\/800,497, filed Mar. 15, 2013, entitled \u201cINTEREST GRAPH-POWERED SHARING, and U.S. Provisional Patent Application No. 61\/914,266, filed Dec. 10, 2013, entitled \u201cSKIM PREVIEW,\u201d all of which are herein incorporated by reference in their entireties.","Currently, it is often very difficult inside of an organization to find the information that employees need to do their jobs. This is in contrast to consumer-targeted search such as Google or Amazon, where users can typically find the answer to their question or product of interest easily. As one motivating example, there are over 400 Million web documents containing the word \u201cVolkswagen\u201d. Nevertheless Google returns www.volkswagen.com as the first result for the query {volkswagen}. The typical experience in enterprise search is far worse. A user may type the query {sql} and see thousands of documents containing the term \u201csql\u201d in no particular order.","Both for public web search and for Amazon catalog search, term matching is only a single component of relevance. Google and Bing use document popularity (as determined by clicks and incoming web links) to boost the position of volkwagen.com to the top. Amazon similarly has product sales figures, manufacturer reputation, and ratings that can be combined with term matching.","In contrast search within and across organizations (when it exists at all) is implemented as a text retrieval problem, where each document exists only as a collection of text, and does not have popularity, rating, or activity information. In particular, these search systems have very limited data about user behavior. Due in large part to this lack of what is called \u201cuser signal\u201d, search systems rely heavily on content indexing. Indexing does a good job of identifying potentially relevant pieces of information, but a very poor job of ranking it. As a result, searches routinely come back with hundreds or thousands of results, with the desired information buried somewhere inside them. Employees within organizations, especially larger ones, routinely give up entirely on search systems and rely on alternative means to find the information they need (such as email, private repositories that they maintain, and the like).","It would be helpful to have a system that overcomes the above problems, as well as one that provides additional benefits. Overall, the examples herein of some prior or related systems and their associated limitations are intended to be illustrative and not exclusive. Other limitations of existing or prior systems will become apparent to those of skill in the art upon reading the following Detailed Description.","Various examples of the invention will now be described. The following description provides certain specific details for a thorough understanding and enabling description of these examples. One skilled in the relevant technology will understand, however, that the invention may be practiced without many of these details. Likewise, one skilled in the relevant technology will also understand that the invention may include many other obvious features not described in detail herein. Additionally, some well-known structures or functions may not be shown or described in detail below, to avoid unnecessarily obscuring the relevant descriptions of the various examples.","The terminology used below is to be interpreted in its broadest reasonable manner, even though it is being used in conjunction with a detailed description of certain specific examples of the invention. Indeed, certain terms may even be emphasized below; however, any terminology intended to be interpreted in any restricted manner will be overtly and specifically defined as such in this Detailed Description section.","This disclosure describes the creation and use of an interest graph within an organization, such as a company, and between companies, to search for information. The organization may include a structured body of users with associated roles, each having access to a set of information items. In some cases, the organization includes a group of users on a private network sharing an internet domain. An interest graph expresses the affinity between people and information\u2014the likelihood that a particular piece of information is of interest to a particular person. The information might be a document, a presentation, a video, an image, a web page, a report, or the like, typically referred to herein as \u201citems\u201d or \u201cdata items.\u201d Users' information needs can include collections of items, sections of an item, or a person.","The interest graph represents many kinds of relationships, including: between users and other users, users and items, and users and collections. The interest graph is computed using data both from the set of items and from user behavior. In some examples, there are three steps for computing the interest graph. The first step is to generate the data; the system provides mechanisms for the user to quickly browse, share, and organize items. By using those features, the users create a large amount of usage data, much of which is currently unavailable to existing information management and retrieval software. The next step is to gather the data, where the system logs user activities in a set of data structures. The third step is to compute the graph. By running a series of computations over the data gathered from users, the system computes data structures that are used for a variety of search operations. The disclosed techniques honor access restrictions that users specify for each item, so that only authorized people will see any item.","Searching","One of the most common ways that users look for information online is to type a query into a search box. The system uses the query to identify a candidate set of items, collections, and people that match it, attempt to rank order those candidates based on what is most likely to satisfy that user's request, and present the results. The system uses the interest graph to support search across items within a particular company and between multiple companies.  is a display page  illustrating a query and results page in accordance with some embodiments of the disclosed technology. In this example, a search and the set of results that have been returned by the system are displayed. In this example, a user has performed a search for \u201cvpn\u201d and the system has identified 31 results, including \u201cDaewoo Engineering and Construction Deploy's Korea's Largest SSL VPN\u201d  and \u201cJuniper Networks Enables Secure Remote Access For the Thai Technology Institute\u201d . The results are ranked based on how likely they are to interest the user, as explained below. For each result, the system highlights the elements of the search phrase that matched text associated with the item.","Basic Search","In a basic search, the user provides a string, and the system identifies items that the user has access to and that match the string. The items may include information which has been created by another user within the same organization (which will be referred to as an internal item) or by a user from elsewhere (an external item). The system allows items to be shared within and across organizations, and for their access to be restricted to particular sets of people.","In some examples, basic search is implemented in the system as follows:\n\n","Search completion is a feature that shows possible search queries while the user is typing in the search box (see  for an example).  is a display page  illustrating a search completion feature in accordance with some embodiments of the disclosed technology. In this example, a user has typed \u201cse\u201d in the search box  and the system has shown \u201csecure remote,\u201d \u201csecure services gateway,\u201d \u201csecurity gateway,\u201d and \u201csecurity standards\u201d as possible search queries . Search completion is a very useful shortcut for users, showing them search queries that are likely to be relevant and that have a good probability of yielding useful results.","In some examples, search completion is implemented in the system as follows:\n\n","Additionally the set of the completions can include information about the number of results that would be returned by each query. This information can help the user to formulate a query that will return a satisfactory number of results. Additionally some of the completions can include a speculative scoping of the search to a user specified collection, such as a spot. For example for the query {vision}, one suggestion could be {vision in the Benefits Spot (5 docs)}. Selecting this suggestion will return the 5 documents that are contained in this spot. Similarly the scope can a single user or group of users. For example {sql} could yield {sql by Robert Wahbe (20 docs)}. Selecting this would show the 20 docs uploaded by Robert that contain the term sql.  is a display page  illustrating a search completion and \u201cnumber of results\u201d feature in accordance with some embodiments of the disclosed technology. In this example, a user has typed \u201cpaul\u201d into search box  and the system has shown \u201cpaul's or textteaser,\u201d \u201cpaul feed,\u201d \u201cpaul viola,\u201d and \u201cpaul roe\u201d as possible search queries and their corresponding number of results (i.e., 96, 30, 7, and 2) . The system has also shown the number of results of \u201cpaul\u201d in various collections, such as \u201cMusic\u201d {12}, \u201cSystems\u201d {12}, \u201cUX Design\u201d {10}, and \u201cMarket Intelligence\u201d {9} .","De-Duplicate Search Results","For business information, it is common that the same item appear many times in many different collections of items. For example, a particularly useful presentation might be placed in an official repository, downloaded and emailed to many people, and then posted to a variety of different collections. The system identifies cases where an item has been duplicated, combines those into a single item in the results presented to the user, and uses the interest graph to choose the one most likely to interest that user.  is a display page  illustrating de-duplication of identified search results in accordance with some embodiments of the disclosed technology.  shows a search that has found at least two duplicated items (\u201cChina's Ministry of Railways Secures Information Management System\u201d  and \u201cSoutheast University Builds a \u2018University Without Walls\u2019\u201d ) and combined each set of duplicated items into a single instance.",{"@attributes":{"id":"p-0025","num":"0030"},"figref":["FIG. 4","FIG. 4"],"b":["400","410","420"]},"In some examples, the system implements de-duplication as follows:\n\n","There are a number of other ways that the interest graph can power improved search behavior:\n\n","The operations above rely on the interest graph.  is a block diagram  illustrating processing of the system for creating an interest graph in accordance with some embodiments of the disclosed technology. In some examples, the process of building the interest graph includes generating the data, gathering the data, and computing the interest graph.","Step 1: Generating the Data","In some examples, an interest graph is computed from a number of different data sources and benefits greatly from having additional data to analyze. Machine learning research and practice consistently shows that accuracy improves as the number of data sources and the amount of data increases. This is referred to as user signal.","Therefore, step 1 is generating the data, which means encouraging users to engage in activities that generate signal. Historically, activities that provide the most useful data have been overly complex inside of companies, and hence have not occurred as often as they otherwise might.","For example, sharing files with others in a rich online experience (like a web site that offers a structured view, supports search, and enables browsing) has been cumbersome to set up. As a result, people often settle for simple sharing solutions, such as relying on email attachments or on keeping their files in a shared disk drive. The disclosed system provides a simple and easy-to-use sharing solution that encourages users to interact more heavily with each other's information and hence to generate more signal.","Browsing files on a web site generally involves downloading them to the local computer and viewing them in a program like Microsoft Word or PowerPoint, which is quite slow. Accordingly, users are discouraged from browsing as many items as they might otherwise do. The disclosed system provides a much faster way to browse (called \u201cskim\u201d preview), which offers very fast viewing of items and collections of items. Skim allows users to explore information online without requiring them to download anything or launch any applications on their machine, encouraging far more browsing. Skim preview works by tracking the way that the user slides their mouse across the item's thumbnail. Based on how far the mouse has moved horizontally across the thumbnail, a preview of that part of the item is shown. For example, if the user is running the mouse over the thumbnail for a presentation, as the mouse moves left to right, each slide of the presentation is shown in succession. By sliding the mouse back and forth, at any desired speed, the user can quickly view all the slides. Similarly, for a document, the thumbnails show each page of the document. There is an equivalent browsing experience for each type of information supported by the system. In seconds, the user can see every part of the item\u2014it is much faster than the traditional method of downloading the file to a client application.","Another example is organizing information. The traditional approach is to use a directory structure, which provides a limited way to establish a taxonomy and to associate related files. Another approach is to use metadata tagging, where items are assigned a set of properties. These systems have been deployed extensively within companies and are generally felt to be rigid and awkward\u2014most users resist them and the vast majority of information is never put into them. The disclosed system offers lists and folders that support dragging and dropping items into multiple places, a model that is familiar to users from other domains like organizing music into playlists. The system offers three levels of hierarchy: (1) spots, which are collections of items that can be found via a directory or search, (2) folders, which exist within a spot and optionally allow users to group a set of lists together, and (3) lists, which are simple groups of items. An item can be in zero, one, or many different lists. Users can place individual items into lists or can drag a group into a list. This is a much simpler structuring model than is traditionally used by systems like enterprise content managers. Each user can create their own hierarchy, if they wish, and can take an item from one spot and put it into another one (using an operation called respot). So users might create a spot called \u201cWidget Marketing\u201d, which contains the marketing material for widgets. Within that spot, they might have a folder called \u201cvertical markets\u201d containing lists, such as \u201cmanufacturing\u201d, \u201cmedia\u201d, etc. They might have another folder called \u201csales stage\u201d with lists, such as \u201cpre-sale\u201d, \u201cproof-of-concept\u201d, \u201cpost-sale\u201d. Any piece of information can be put into any number of lists, allowing for a flexible browsing experience based on spots, folders, and lists.","The first step towards creating an effective interest graph is to provide an information management environment that makes it much easier and faster for users to engage in useful data-generating activities and generate user signal to be analyzed.","Step 2: Gathering the Data","The next step is to gather the data. Producing an accurate interest graph relies on detailed analysis of data from a variety of sources. Table 1, at the bottom of this section, lists and defines input data structures used by the system.","User Behavior","A source of data is the way that users interact with each piece of information. The system tracks actions that a user performs on any item (share, download, copy from one collection to another, recommend, comment, etc) and monitors how much time they spend looking at each part of a document, presentation, video, training program, or the like.","Traditional content systems invoke other programs when users wish to view the contents of a document\u2014for example, such an environment might download a presentation and invoke Microsoft PowerPoint to let the user read it. What users do inside of a program like PowerPoint is usually opaque to the content manager. And, most such editing programs (e.g. word processors or presentation programs) do not track and report which parts of the file users spend time on, and how much time. Therefore user engagement with each piece of information does not generate any signal that can be analyzed.","The disclosed system presents high resolution previews and views of various document types that are available online and can be quickly browsed using skim preview\u2014no download is required, and no software applications need to be installed or invoked on the user's machine. The system monitors views and previews, tracking how often they happen and how long the user spends looking at any part of the item.","The actions that users have taken on items and their viewing behavior are captured in the ItemScore, CollectionScore, and RecentActivity data structures. In addition, the system creates a feedback loop\u2014whenever it presents items that might be of interest to the user, the click-through behavior is tracked in ClickThroughs.","Item Analysis","The system extracts data by analyzing each item of information:\n\n","Another valuable clue to user interest is the set of people to whom they are connected. The system computes the social graph, which captures the connections between people. Such connections can take many different forms; for example:\n\n","The system examines the social graph, distilling it into UserConnectedness.","Information Graph","The system has a variety of ways that information can be categorized\u2014it provides a hierarchy of collections and any piece of information can be in any number of those collections. One collection may have a link to another. As a result, there is also an information graph capturing the relationships between items of information. The system stores that graph in the ItemConnectedness data structure. Different types of collections imply different levels of relationship between the items.","Similarly, the system aggregates these individual relationships between items into a measure of connectedness between collections, stored in CollectionConnectedness.","Queries","The system offers search, both within a collection and across many of them. There is valuable information in the phrases that users search on, and their subsequent decisions whether or not to click through on the results presented. The system keeps track of queries that have been performed in QueryCount, the ones that are most popular (e.g., top 10, top 20%, top 15 in the past 24 hours) in PopularQueries, and the subsequent click-through decisions by users in ClickThroughs.",{"@attributes":{"id":"p-0047","num":"0069"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Input Data Structures"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"266pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"ItemScore - total activity applied to an item by each user"},{"entry":"ItemScore is an array [U, I] of tuples, where U is the number of users in the system and"},{"entry":"I is the number of items."},{"entry":"Each tuple = <weightedsum, <action, action, . . . , action>, views, <preview, preview,"},{"entry":". . . , preview>>"},{"entry":"The tuple contains a count of each allowed type of action for an item (e.g."},{"entry":"\u201cdownloaded\u201d), a count of the number of times it is viewed, and a count of the amount"},{"entry":"of time each part of it (e.g. a page of a document) was previewed. The tuple also"},{"entry":"contains a weighted sum of these counts; weights are adjusted depending on the"},{"entry":"relative importance of each of the counts."},{"entry":"CollectionScore - total activity applied to a collection of items by each user"},{"entry":"CollectionScore is an array [U, C] of element, where U is the number of users in the"},{"entry":"system and C is the number of collections. Each element is the same tuple as for"},{"entry":"ItemScore."},{"entry":"RecentActivity - a log of recent activities each user has done with every item"},{"entry":"RecentActivity is an array [U, I] of tuples, where U is the number of users and I is the"},{"entry":"number of items."},{"entry":"Each tuple = <<action, timestamp>, <action, timestamp>, . . . <action, timestamp>>"},{"entry":"The tuple is the set of recent actions performed by the user on the item, each with a"},{"entry":"time stamp."},{"entry":"ClickThroughs - a log of the result when each item was presented to each user"},{"entry":"Clickthroughs is an array [U, I] of tuples, where U is the number of users and I is the"},{"entry":"number of items."},{"entry":"Each tuple = <<context, position, click_number>, . . .>"},{"entry":"The tuple contains the set of times this item was presented to this user. The system"},{"entry":"records the context (e.g. \u201csearch query\u201d), the position of the item in the presented list"},{"entry":"(e.g. \u201cthe item was the third result\u201d), and which of the selected items from that result set"},{"entry":"it was (e.g. \u201cthe item was selected second\u201d or \u201cthe item was never selected\u201d)."},{"entry":"ContentVectors - a representation of the content of every document. In some"},{"entry":"examples, the system uses the Mahout software package developed by the Apache"},{"entry":"Software Foundation to create a normalized vector space model (VSM) representation"},{"entry":"for every item, using term-frequency inverse document frequency (TF-IDF) weighting to"},{"entry":"compute the values in each vector. Collocation-based n-gram analysis with log-"},{"entry":"likelihood ratio test improves the accuracy of the weighting. There are other algorithms"},{"entry":"for vectorizing content that would also serve."},{"entry":"ContentVectors is an array [I, T] of values, where I is the number of items and T is the"},{"entry":"number of n-gram terms that appear in any of those items. The value is a weighted"},{"entry":"count of the number of times that term appears in that item."},{"entry":"InvertedIndex - an index of a set of documents"},{"entry":"In some examples, the disclosed system uses the Lucene indexing package to create"},{"entry":"an inverted index from a set of documents. This index contains every lexeme that"},{"entry":"appears in any item. For each lexeme, Lucene enumerates the set of documents that"},{"entry":"contain the lexeme. Each document is also annotated to reflect the set of individuals"},{"entry":"who are allowed to access it, and the Lucene search contains a mask to choose those"},{"entry":"items that are visible to the user."},{"entry":"ItemHashCodes - a pointer to the items corresponding to any hash code present in the"},{"entry":"system"},{"entry":"The system computes a cryptographic hash value of the contents of every item. In"},{"entry":"some examples, the system uses SHA-256, but there are a variety of other algorithms"},{"entry":"that similarly compute a value for any item that has a very low probability of colliding"},{"entry":"with the value for any other."},{"entry":"ItemHashCodes is an array [H] of item lists, where H is the number of unique hash"},{"entry":"values present across all items. List contains the set of items that correspond to that"},{"entry":"hash value."},{"entry":"UserConnectedness - the degree to which each user is connected to every other user"},{"entry":"in the social graph"},{"entry":"UserConnectedness is an array [U, U] of tuples, where U is the number of users."},{"entry":"Each tuple = <weightedsum, <<strength, type>, <strength, type>, . . .>>"},{"entry":"The tuple enumerates the strength and type of each connection between this pair of"},{"entry":"users (from X \u2212> Y, if the tuple is element [X, Y] of the array). The type might be"},{"entry":"\u201cappear in the same access control list\u201d or \u201cX invited Y to join the community and that"},{"entry":"invitation was accepted\u201d. The strength can be the same for every connection of a"},{"entry":"particular type or it can be weighted (e.g. \u201cthe value is one divided by the number of"},{"entry":"people on the shared access control list\u201d). The system computes a weighted sum"},{"entry":"across the connections, factoring in their strengths."},{"entry":"ItemConnectedness - the degree to which every item is connected in the information"},{"entry":"graph to every other item."},{"entry":"ItemConnectedness is an array [I, I] of tuples, where I is the number of items. The tuple"},{"entry":"has the same form as the one for UserConnectedness."},{"entry":"CollectionConnectedness - the degree to which each collection of information is"},{"entry":"connected to every other collection."},{"entry":"CollectionConnectedness is an array [C, C] of tuples, where C is the number of"},{"entry":"collections. The tuple has the same form as the one for UserConnectedness."},{"entry":"QueryCount - the queries that have been executed"},{"entry":"QueryCount is an array [Q, U] of tuples, where Q is the number of queries that have"},{"entry":"been executed on the system and U is the number of users."},{"entry":"Each tuple = <querystring, count, <<clickeditem, click>, <clickeditem, click>, . . .>"},{"entry":"The tuple expresses the number of times that user U has executed query Q."},{"entry":"querystring is the text of the query, count is the number of times the query was"},{"entry":"executed, and the next value is the set of results from those queries. Each item in the"},{"entry":"set is a pair - the item that was clicked, and its position in the clickstream of user"},{"entry":"choices (e.g. \u201cfirst item clicked\u201d, \u201csecond item clicked\u201d, etc)."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"In some examples, the system computes the interest graph by taking the raw user signal (captured in the input data structures described in the previous section) and processing that data through a series of intermediate computations.","Each of the intermediate computations is called \u201cCompute <X>\u201d, where <X> is the name of the output that it generates. For example, \u201cCompute UserUserAffinity\u201d produces the UserUserAffinity data structure. The system runs these intermediate computations at periodic intervals and the outputs are updated over time as additional user data is gathered. Table 2 enumerates the intermediate data structures that are produced by these algorithms.",{"@attributes":{"id":"p-0050","num":"0072"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Intermediate Data Structures"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"UserInfluence - measure of how much social influence each user has on others"},{"entry":"UserInfluence [U] is an array of real numbers representing the influence of each of the"},{"entry":"U users in the system."},{"entry":"<X><Y>Affinity - a measurement of the affinity for every X to every Y"},{"entry":"These are a family of data structures that represent affinity - the likelihood of a user to"},{"entry":"be interested in another user, an item, or a collection, or the likelihood that an interest in"},{"entry":"one item implies an interest in another. In each case, affinity can be represented as a"},{"entry":"real number from 0 to 1 on a logarithmic scale, where 1 represents extremely strong"},{"entry":"predicted affinity and 0 represents none. Note that an alternative model is to make zero"},{"entry":"represent \u201cno information,\u201d negative numbers represent negative affinity (the belief that"},{"entry":"an item of not likely to be of interest), and positive numbers represent positive affinity."},{"entry":"UserUserAffinity is an array [U, U] with affinity from every user to every other"},{"entry":"user"},{"entry":"UserItemAffinity is an array [U, I] with affinity from every user to every item"},{"entry":"UserCollectionAffinity is an array [U, C] with affinity from every user to every"},{"entry":"collection"},{"entry":"ItemItemAffinity is an array [I, I] with affinity from every item to every other item"},{"entry":"ItemClusters - divides the items in the system into clusters whose content is related"},{"entry":"ItemClusters is an array [I] of tuples, where I is the number of items."},{"entry":"Each tuple = <<cluster, membershipweight>, <cluster, membershipweight>, . . .>"},{"entry":"The tuple enumerates the clusters that the item is in and the weight of the item's"},{"entry":"membership to each cluster. In some examples, the system uses a non-uniform weight"},{"entry":"(so called \u201cfuzzy clustering\u201d), though it is also possible to make membership boolean."},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"When the system displays a set of values to the user, it invokes one of the ranking computations. In some examples, the names of these ranking computations takes the form \u201c<Y> Ranker\u201d, depending on what kind of values they are ranking, where <Y> represents the kind of values being ranked (e.g., RelatedItemRanker ranks related items). Ranking computations are given an argument and then compute a set of ranked results based on that argument and on a set of other inputs.",{"@attributes":{"id":"p-0052","num":"0074"},"figref":["FIG. 5","FIG. 5"],"b":["510","515"]},"The system uses the ranking computations to produce output that users can see. For example, suppose the user is looking at an item, and the system wants to display a set of related items next to it. The goal is to identify the items that are most likely to interest the user. For example, if a salesperson is looking at a presentation about a particular product, they might also be interested in a price sheet for the product, white papers on how to use that product most effectively, presentations and documents about related products that work with it, etc.","The system uses the ranking computation called RelatedItemRanker  to identify and rank related items. When the user pulls up a particular item on a web site, the system hands that item to RelatedItemRanker, which returns the ranked set of items (in a RankedItems data structure) that it has identified as being most likely to be of interest to the user. The computation relies on one input data structure\u2014the popularity of items (ItemScore) and the results from two intermediate computations\u2014the likelihood that the current user would be interested in any particular item (UserItemAffinity) and the degree of similarity between any two items (ItemItemAffinity).","The following data structures are used to hold groups of different types.",{"@attributes":{"id":"p-0056","num":"0078"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Group Data Structures"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<value>Set - a set of <values>"},{"entry":"This family of data structures holds an unordered set of items of type"},{"entry":"<value>."},{"entry":"ItemSet is an array [I] of items, PeopleSet is an array [P] of people, and"},{"entry":"CollectionSet is an array [C] of collections"},{"entry":"Ranked<value> - a set of <values>, with an associated ranking"},{"entry":"This family of data structures holds a set of items of type <value> with an"},{"entry":"associated rank that represents an ordering. Note that ranks are real"},{"entry":"numbers, allowing the structure to both establish an ordering and to"},{"entry":"measure the \u201cdistance\u201d between two items in terms of their rank."},{"entry":"RankedItems is an array [I] of ranked items, RankedPeople is an array [P]"},{"entry":"of ranked people, RankedCollections is an array [C] of collections,"},{"entry":"RankedQueries is an array [Q] of ranked queries, and RankedActivities is"},{"entry":"an array [A] of ranked activities"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}},"br":{}},"These computations operate on input data structures and on the results produced by other intermediate computations. In each case, they produce a data structure as output with the results.","These functions or algorithms compute the degree of affinity between pairs of things. \u201cAffinity\u201d means the likelihood that interest in one of those items means interest in the other. Note that affinity is not symmetrical; a salesperson who is looking at a particular product description might be highly likely to look at the price sheet containing that product (among hundreds of others), but somebody looking at the price sheet is much less likely to care about any particular product's description.","Compute ItemClusters","This algorithm operates on ContentVectors, applying a clustering algorithm to compute ItemClusters that represent groups of items that have related textual content. In some examples, the system uses the Mahout software package to perform this computation, applying canopy generation to identify cluster centroids, then using k-means clustering based on the cosine of the Euclidean distance between documents as a similarity metric. One of ordinary skill in the art will recognize that other clustering algorithms can be used.","Compute ItemItemAffinity","This algorithm computes the degree of affinity between pairs of items in the system.","The inputs are ItemConnectedness (the degree to which the items are \u201cclose\u201d in the information graph), ItemScore (the amount of interactions users have had with items), and ItemClusters (the degree to which the contents of items are related). Here is the algorithm:",{"@attributes":{"id":"p-0062","num":"0084"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Compute_ItemItemAffinity(ItemConnectedness, ItemScore, ItemClusters)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"FrequentGroups = AssociationRuleAnalysis(ItemScore)"]},{"entry":[{},"For every pair of items (I, J)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ItemItemAffinity[I, J] =","A * ItemConnectedness [I, J] +"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"B * ItemScore [*, J].weightedsum +"]},{"entry":[{},"C * number of appearances of I & J"]},{"entry":[{},"in FrequentGroups"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"AssociationRuleAnalysis determines which pairs of items are frequently viewed together. In some examples, the system uses the algorithm known as Apriori to determine these pairs. One of ordinary skill in the art will recognize that there are a variety of similar algorithms that could also be used. The weighting parameters A, B, and C allow the system to balance the importance of items being placed in related collections, the popularity of particular items with users, and the degree to which other users have viewed both items.","Compute UserUserAffinity ","This algorithm computes the degree of affinity between pairs of users\u2014the likelihood that each user is interested in what the other one does. The inputs are ItemScore (which captures how users have interacted with items) and UserConnectedness (the degree to which they are connected in the social graph). The algorithm is:",{"@attributes":{"id":"p-0065","num":"0087"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Compute_UserUserAffinity(ItemScore, UserConnectedness)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UserBehaviorSimilarity = PearsonCorrelation(ItemScore)"]},{"entry":[{},"For every pair of users (I, J)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"UserUserAffinity[I, J] =","A * UserBehaviorSimilarity [I, J] +"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"112pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"B * tanh(UserConnectedness [I, J])"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The system uses, for example, the Mahout software to compute the Pearson correlation of behavior across the weighted sum of item scores. The user connectedness value is normalized into the range 0-1 using hyperbolic tangent. Then the values are weighted, to reflect the relative importance of behavior vs. the social graph. The weighting parameters A and B allow the system to balance the importance of these values. Note that one of ordinary skill in the art will recognize that numerous other algorithms can be used to compute behavioral similarity (e.g Euclidean distance or the Tanimoto Coefficient) and normalization (e.g. the logistic function or Z-scores).","Computer UserItemAffinity ","This algorithm computes the degree of affinity between every user and every item in the system. The inputs are UserUserAffinity (from above), ItemScore, and ItemConnectedness. The algorithm is:",{"@attributes":{"id":"p-0068","num":"0090"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Compute_UserItemAffinity(UserUserAffinity, ItemScore,"},{"entry":"ItemConnectedness)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For every item I, for every user U {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ActivitySum = UserInterest = 0"]},{"entry":[{},"For every user U2"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ActivitySum += UserUserAffinity[U, U2] * ItemScore[I,"]},{"entry":[{},"U2].weightedsum"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For every item I2"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UserInterest += ItemScore[I2, U] *"]},{"entry":[{},"tanh(ItemConnectedness [I, I2])"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"UserItemAffinity[U,I] = A * ActivitySum + B * UserInterest"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The system computes the sum of the activity that other users have performed on the item (weighted by affinity to those users) and the sum of item activities that the current user has performed (weighted by the affinity of the current item to those other items). Those two values are combined in a weighted sum, based on the relative importance of behavior vs. item connectivity. In some examples, connectedness is normalized using hyperbolic tangent, but one of ordinary skill in the art will recognize that other algorithms could be used.","Compute UserCollectionAffinity ","This algorithm computes the degree of affinity between every user and every collection, where a collection is a grouping of items. Note that collections can overlap, can be organized into a hierarchy, or can be disjoint\u2014the model works in any of those cases. The inputs are UserUserAffinity (from above), CollectionConnectedness (the degree to which collections are connected), ItemHashCodes (the hash values of every item), and CollectionScore (the activities user have performed on each collection). The algorithm is:",{"@attributes":{"id":"p-0071","num":"0093"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Compute_UserCollectionAffinity(UserUserAffinity,"},{"entry":"CollectionConnectedness,"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"ItemHashCodes, CollectionScore)"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":"{"}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For every collection C, for every collection C2 {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For every item I in C, for every item I2 in C2"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (ItemHashCode[I] = ItemHashCode[I2])"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"CollectionSimilarity [C, C2] += SharedItemWeight"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For every collection C, for every user U {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ActivitySum = UserInterest = 0"]},{"entry":[{},"For every user U2"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ActivitySum += UserUserAffinity[U, U2] *"]},{"entry":[{},"CollectionScore[C, U2].weightedsum"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For every collection C2"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"UserInterest += CollectionScore[C2, U] *"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"(tanh(CollectionConnectedness [C, C2]) +"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"98pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"119pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"CollectionSimilarity [C, C2])"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UserCollectionAffinity[U,C] = A * ActivitySum + B *"]},{"entry":[{},"UserInterest"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The system computes the frequency with which the same item appears in every pair of collections, using a constant weight. The system then computes the sum of the activity other users have performed on the collection (weighted by the affinity to those users) and the sum of collection activities that the current user has performed (weighted by the affinity of the current collection to those collections based on both behavior and similarity of content). Note that connectedness is normalized using hyperbolic tangent, but other algorithms could be used. These values are then combined in a weighted sum, where the weights reflect the relative importance of user behavioral similarity vs. structural relationships and similarity of content.","Compute UserQueryAffinity ","This algorithm computes the degree of affinity between every user and every query that has been executed on the system. The inputs are UserUserAffinity (from above) and QueryCount (a summary of the queries that have been executed by each user). The algorithm is:",{"@attributes":{"id":"p-0074","num":"0096"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Compute_UserQueryAffinity(UserUserAffinity, QueryCount)"]},{"entry":[{},"{"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For every query Q, for every user U {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ActivitySum = 0"]},{"entry":[{},"For every user U2"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"ActivitySum += UserUserAffinity [U, U2] *"]},{"entry":[{},"QueryCount[Q, U2].count"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"UserQueryAffinity[Q, U] = A * ActivitySum"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"}"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"The system computes the sum of the number of times other users have executed this particular query, weighted by the affinity with that other user. The result is then multiplied by a weight to compute affinity for this user and the query.","Compute UserInfluence ","This algorithm computes the amount of influence that each User has within the community of users on the system. Its inputs are UserConnectedness (the degree of connectivity in the social graph), and ItemScore. The algorithm is:",{"@attributes":{"id":"p-0077","num":"0099"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"Compute_UserInfluence(UserConnectedness, ItemScore)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For every user U, for every user U2"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"UserInfluence[U] += A * UserConnectedness.weightedsum[U,"]},{"entry":[{},"U2]"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"For every user U, for every item I that user U was responsible for"]},{"entry":[{},"creating"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For every user U2"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"UserInfluence[U] += B * ItemScore[I, U2].weightedsum"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The system computes a weighted sum of how connected other users are to a particular user, and for how much activity has been generated by the items that the particular user created.","Ranking Computations","The ranking computations produce ranked lists of items; a typical use for the ranking computations is to produce lists that are displayed to users in various contexts. For example, ItemRanker is used in deciding which items to display to users as the result of a search query. ItemRanker takes candidate items that might match the query, and orders them appropriately.","Each ranking computation is invoked on an input. Using that input and data structures that are passed to it (per the workflow in ), the computation produces a ranked set as the output.","Related Item Ranker ","This algorithm is invoked on an item and also gets ItemScore, ItemItemAffinity, and UserItemAffinity. The algorithm is:",{"@attributes":{"id":"p-0082","num":"0104"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"RelatedItemRanker(Item, ItemScore, ItemItemAffinity, UserItemAffinity)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For each item I"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Score = 0"]},{"entry":[{},"For each user U"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"Score += ItemScore[I, U].weightedsum"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RankedItems[I].rank = (A * Score) * (1 +"]},{"entry":[{},"ItemItemAffinity[Item, I]) +"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"133pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{}," (B * UserItemAffinity[CurrentUser, I])"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The system finds the items most related to Item by computing a weighted sum. The factors are the total amount of user activity against other items, weighted by the affinity of those other items to this one, and the current user's affinity to the item.","Activity Ranker ","When this algorithm is invoked, it is optionally given an item and also gets RecentActivity (the set of activities that have recently been performed on the system, such as the set of activities performed during the last year, month, week, day, hour, or portion thereof), UserUserAffinity, and UserItemAffinity. If an item is provided, it returns the set of activities that have been performed on that item, ranked in terms of how likely they are to interest the current user. If no item is provided, it returns the list of activities on any item in the system, ranked in terms of how likely they are to interest the current user. The algorithm is:",{"@attributes":{"id":"p-0085","num":"0107"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"ActivityRanker(optional; Item, RecentActivity, UserUserAffinity,"},{"entry":"UserItemAffinity)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if Item was provided"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RankedActivities = set of activities in RecentActivity performed"]},{"entry":[{},"on Item"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"else"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RankedActivities = RecentActivity"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For each activity A in RankedActivities"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RankedActivities[A].rank = B * ActivityValue(A) *"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"(C * (1 + UserUserAffinity[CurrentUser,"]},{"entry":[{},"A.user])) *"]},{"entry":[{},"(D * (1 + UserItemAffinity[CurrentUser,"]},{"entry":[{},"A.item]))"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The system chooses a candidate set of activities. For each activity in the candidate set of activities, the system computes a ranking using a weighted product of the intrinsic interest for that type of activity, the affinity of the current user with the user who performed the activity, and the affinity of the current user for the item on which the activity was performed.","Item Ranker ","This algorithm is invoked on a set of items, which is either unranked (an ItemSet) or already ranked with a preliminary ranking (a RankedItems set) and also gets ItemScore, ItemHashCodes, and UserItemAffinity. The algorithm is:",{"@attributes":{"id":"p-0088","num":"0110"},"tables":{"@attributes":{"id":"TABLE-US-00012","num":"00012"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"ItemRanker(InputSet, ItemScore, ItemHashCodes, UserItemAffinity,"},{"entry":"UserUserAffinity)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Remove duplicate items from InputSet (using ItemHashCodes)"]},{"entry":[{},"For every item I in InputSet"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For every user U"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Score += A * ItemScore[I, U] * (1 +"]},{"entry":[{},"UserUserAffinity[CurrentUser,U])"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RankedItems[I].rank = (B * Score) * (C * (1 +"]},{"entry":[{},"UserItemAffinity[I, CurrentUser]))"]},{"entry":[{},"If InputSet is ranked"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RankedItems[I].rank *= D * InputSet[I].rank"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The system computes the sum of user actions against each item in the set, weighted by the affinity of the current user to the other users and then computes the weighted product of that sum, the affinity of the user to the item, and the existing rank of each item (if it was provided). The weights reflect the relative importance of user behavior directly against the items vs. the predictability of user interest vs. the effectiveness of the original input ranking. The output is a ranking for each unique item in the set.","Collection Ranker ","This algorithm is invoked on a set of collections, which is either unranked (a CollectionSet) or ranked (a RankedCollections set) and also gets CollectionScore. The algorithm is:",{"@attributes":{"id":"p-0091","num":"0113"},"tables":{"@attributes":{"id":"TABLE-US-00013","num":"00013"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"CollectionRanker(InputSet, CollectionScore, UserUserAffinity,"},{"entry":"UserCollectionAffinity)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For every collection C in InputSet {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Score = 0"]},{"entry":[{},"For every user U"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"Score += A * CollectionScore[C, U] * (1 +"]},{"entry":[{},"UserUserAffinity[CurrentUser, U])"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RankedCollections[C].rank =","(B * Score) *"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"(D * (1 +"]},{"entry":[{},"UserCollectionAffinity[I,"]},{"entry":[{},"CurrentUser))"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if InputSet is ranked"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RankedCollections[C].rank *= E *"]},{"entry":[{},"InputSet[C].rank"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The system computes the sum of user actions against each collection, weighted by the affinity of the current user to the other users and then computes the weighted product of that sum, the affinity of the user to the collection, and the existing rank of each collection (if it was provided). The weights reflect the relative importance of user behavior directly against the collections vs. the predictability of user interest vs. the effectiveness of the original collection ranking. The output is a ranking for each collection in the input set.","People Ranker ","This algorithm is invoked on a set of people, which is either unranked (a PeopleSet) or ranked (a RankedPeople set) and also gets UserUserAffinity and UserInfluence. The algorithm is:",{"@attributes":{"id":"p-0094","num":"0116"},"tables":{"@attributes":{"id":"TABLE-US-00014","num":"00014"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"PeopleRanker(InputSet, UserUserAffinity, UserInfluence)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"For every user U in InputSet"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RankedPeople[U].rank = (A * UserInfluence[U]) *"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"112pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"105pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"(B * (1 +"]},{"entry":[{},"UserUserAffinity[CurrentUser,"]},{"entry":[{},"U]))"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"If InputSet is ranked"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"RankedPeople[U].rank *= C * InputSet[U].rank"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"For each of the users being ranked, the system computes the weighted product of their influence on other users, the affinity of the current user to the other users, and the existing rank of that user (if it was provided). The weights reflect the relative importance of influence, affinity, and the effectiveness of the original ranking. The output is a ranking for each user in the input set.","Query Completion Ranker ","This algorithm is invoked on a partial query string, and computes the set of completions for it (suggested full queries the user might have in mind) and also gets QueryCount, UserQueryAffinity, and the InvertedIndex. This algorithm returns up to COMPLETION_MAX ranked query completions. COMPLETION_MAX may be defined by a user or an administrator of the system. The algorithm is:",{"@attributes":{"id":"p-0097","num":"0119"},"tables":{"@attributes":{"id":"TABLE-US-00015","num":"00015"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"QueryCompletionRanker(QueryPrefix, QueryCount, InvertedIndex)"},{"entry":"{"}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"RankedQueries = set of queries in QueryCount that begin with"]},{"entry":[{},"QueryPrefix"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"rank for query Q =","(A *"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"133pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"84pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"QueryPrefix[Q].count) +"]},{"entry":[{},"(B * (1 +"]},{"entry":[{},"UserQueryAffinity[Q,"]},{"entry":[{},"CurrentUser]))"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"if (number of queries in RankedQueries < COMPLETION_MAX) {"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"QueryLexemes = set of lexemes in InvertedIndex that begin with"]},{"entry":[{},"QueryPrefix"]},{"entry":[{},"Sort QueryLexemes by the number of times the lexeme appears"]},{"entry":[{},"in the index"]},{"entry":[{},"Copy from QueryLexemes into RankedQueries until you reach"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"175pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"COMPLETION_MAX or have copied them all. Assign"]},{"entry":[{},"each the rank"]},{"entry":[{},"A * (count of appearances of lexeme in index)"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":{"entry":[{},"}"]}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"}"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}},"The system computes query completions from the set of queries that have already been executed and from textual analysis of the inverted index. In some cases, the system biases towards the former, but fills out the potential query list from the latter as needed to reach the desired number of completions. The rank for previously executed queries is a weighted sum of the number of times the query has been executed and the affinity of the current user to each query. The rank for matching lexemes is the count of that lexeme's appearances, weighted accordingly. The output is a ranked set of query completions.",{"@attributes":{"id":"p-0099","num":"0121"},"figref":"FIG. 6","b":["600","601","602","603","604","605"]},"The following discussion provides a brief, general description of a suitable computing environment in which the invention can be implemented. Although not required, aspects of the invention are described in the general context of computer-executable instructions, such as routines executed by a general-purpose data processing device, e.g., a server computer, wireless device or personal computer. Those skilled in the relevant art will appreciate that aspects of the invention can be practiced with other communications, data processing, or computer system configurations, including: Internet appliances, hand-held devices (including personal digital assistants (PDAs)), wearable computers, all manner of cellular or mobile phones (including Voice over IP (VoIP) phones), dumb terminals, media players, gaming devices, multi-processor systems, microprocessor-based or programmable consumer electronics, set-top boxes, network PCs, mini-computers, mainframe computers, and the like. Indeed, the terms \u201ccomputer,\u201d \u201cserver,\u201d \u201chost,\u201d \u201chost system,\u201d and the like are generally used interchangeably herein, and refer to any of the above devices and systems, as well as any data processor.","Aspects of the invention can be embodied in a special purpose computer or data processor that is specifically programmed, configured, or constructed to perform one or more of the computer-executable instructions explained in detail herein. While aspects of the invention, such as certain functions, are described as being performed exclusively on a single device, the invention can also be practiced in distributed environments where functions or modules are shared among disparate processing devices, which are linked through a communications network, such as a Local Area Network (LAN), Wide Area Network (WAN), or the Internet. In a distributed computing environment, program modules may be located in both local and remote memory storage devices.","Aspects of the invention may be stored or distributed on tangible computer-readable media, including magnetically or optically readable computer discs, hard-wired or preprogrammed chips (e.g., EEPROM semiconductor chips), nanotechnology memory, biological memory, or other data storage media. Alternatively, computer implemented instructions, data structures, screen displays, and other data under aspects of the invention may be distributed over the Internet or over other networks (including wireless networks), on a propagated signal on a propagation medium (e.g., an electromagnetic wave(s), a sound wave, etc.) over a period of time, or they may be provided on any analog or digital network (packet switched, circuit switched, or other scheme).","Unless the context clearly requires otherwise, throughout the description and the claims, the words \u201ccomprise,\u201d \u201ccomprising,\u201d and the like are to be construed in an inclusive sense, as opposed to an exclusive or exhaustive sense; that is to say, in the sense of \u201cincluding, but not limited to.\u201d As used herein, the terms \u201cconnected,\u201d \u201ccoupled,\u201d or any variant thereof means any connection or coupling, either direct or indirect, between two or more elements; the coupling or connection between the elements can be physical, logical, or a combination thereof. Additionally, the words \u201cherein,\u201d \u201cabove,\u201d \u201cbelow,\u201d and words of similar import, when used in this application, refer to this application as a whole and not to any particular portions of this application. Where the context permits, words in the above Detailed Description using the singular or plural number may also include the plural or singular number respectively. The word \u201cor,\u201d in reference to a list of two or more items, covers all of the following interpretations of the word: any of the items in the list, all of the items in the list, and any combination of the items in the list.","The above Detailed Description of examples of the invention is not intended to be exhaustive or to limit the invention to the precise form disclosed above. While specific examples for the invention are described above for illustrative purposes, various equivalent modifications are possible within the scope of the invention, as those skilled in the relevant art will recognize. For example, while processes or blocks are presented in a given order, alternative implementations may perform routines having steps, or employ systems having blocks, in a different order, and some processes or blocks may be deleted, moved, added, subdivided, combined, and\/or modified to provide alternative or subcombinations. Each of these processes or blocks may be implemented in a variety of different ways. Also, while processes or blocks are at times shown as being performed in series, these processes or blocks may instead be performed or implemented in parallel, or may be performed at different times. Further any specific numbers noted herein are only examples: alternative implementations may employ differing values or ranges.","The teachings of the invention provided herein can be applied to other systems, not necessarily the system described above. The elements and acts of the various examples described above can be combined to provide further implementations of the invention. Some alternative implementations of the invention may include not only additional elements to those implementations noted above, but also may include fewer elements.","Any patents and applications and other references noted above, including any that may be listed in accompanying filing papers, are incorporated herein by reference. Aspects of the invention can be modified, if necessary, to employ the systems, functions, and concepts of the various references described above to provide yet further implementations of the invention.","These and other changes can be made to the invention in light of the above Detailed Description. While the above description describes certain examples of the invention, and describes the best mode contemplated, no matter how detailed the above appears in text, the invention can be practiced in many ways. Details of the system may vary considerably in its specific implementation, while still being encompassed by the invention disclosed herein. As noted above, particular terminology used when describing certain features or aspects of the invention should not be taken to imply that the terminology is being redefined herein to be restricted to any specific characteristics, features, or aspects of the invention with which that terminology is associated. In general, the terms used in the following claims should not be construed to limit the invention to the specific examples disclosed in the specification, unless the above Detailed Description section explicitly defines such terms. Accordingly, the actual scope of the invention encompasses not only the disclosed examples, but also all equivalent ways of practicing or implementing the invention under the claims. In some cases, various steps in the algorithms discussed herein may be added, altered, or removed without departing from the disclosed subject matter. Those skilled in the art will appreciate that features described above may be altered in a variety of ways. For example, the order of the logic may be rearranged, sublogic may be performed in parallel, illustrated logic may be omitted, other logic may be included, etc.","To reduce the number of claims, certain aspects of the invention are presented below in certain claim forms, but the applicant contemplates the various aspects of the invention in any number of claim forms. For example, while only one aspect of the invention is recited as a means-plus-function claim under 35 U.S.C sec. 112, sixth paragraph, other aspects may likewise be embodied as a means-plus-function claim, or in other forms, such as being embodied in a computer-readable medium. (Any claims intended to be treated under 35 U.S.C. \u00a7112, \u00b66 will begin with the words \u201cmeans for\u201d, but use of the term \u201cfor\u201d in any other context is not intended to invoke treatment under 35 U.S.C. \u00a7112, \u00b66.) Accordingly, the applicant reserves the right to pursue additional claims after filing this application to pursue such additional claim forms, in either this application or in a continuing application."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
