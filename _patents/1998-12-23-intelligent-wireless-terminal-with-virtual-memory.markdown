---
title: Intelligent wireless terminal with virtual memory
abstract: A wireless terminal with virtual memory for use in a wireless communications network and a method of using such a wireless terminal is provided. The wireless terminal comprises a transceiver for receiving and transmitting information over an active wireless link with the communications network, virtual memory to store information received over the wireless link with the communications network and display means to view the information stored in the virtual memory without requiring the active wireless link with the communications network. The method of using the wireless terminal with virtual memory comprises the steps of downloading data from a server over an active wireless link to the virtual memory of the wireless terminal and accessing the data stored in the virtual memory at the wireless terminal without requiring the active wireless link.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06973300&OS=06973300&RS=06973300
owner: Nortel Networks Limited
number: 06973300
owner_city: St. Laurent
owner_country: CA
publication_date: 19981223
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["This invention relates to a wireless terminal and in particular, to a wireless terminal and method of using the wireless terminal which reduce the wireless resources required.","Wireless handsets (e.g. wireless telephones) for use in a building wireless communications network allow users (e.g. employees) to work away from their desks without the worry associated with missing incoming callers. The wireless handsets provide users with increased freedom and accessibility in the workplace.","A typical building wireless communications network typically comprises a central controller, base stations connected to the central controller, and wireless handsets. The central controller manages all incoming calls for the individual wireless handsets from other wireless handsets or from an in building telecommunication network. The central controller also manages all outgoing calls from the individual wireless handsets to other wireless handsets or to other called parties via the in building telecommunication network.","The building wireless communications network typically uses a pico-cellular architecture. That is, the typical building wireless communications network is divided into cells which service the wireless handsets in a defined area. Each cell contains a base station which communicates with each wireless handset located within the cells coverage area over an active wireless link, such as a radio channel. When a call arrives for a particular wireless handset, the central controller determines the cell location of the requested wireless handset and alerts the user with a notification alarm on the wireless handset. Once the call is answered, the central controller connects the wireless handset to the calling party. Many conventional building wireless communications networks only carry voice traffic.","As aforementioned, one key advantage of this system is the ability of an employee to work away from their work area while not missing incoming calls. A problem results from the fact that this inevitably increases the time the employee is away from his\/her computer (e.g. a Personal Computer (PC)) and its associated applications and databases. This reduction in access to valuable resources can harm productivity and limit the true freedom gained by the use of the building wireless communications network.","There are presently available digital building wireless communications networks systems that carry not only voice traffic but also data traffic. A typical digital building wireless communications network typically comprises not only a central controller, base stations connected to the central controller and wireless handsets but also a server (e.g. a personal computer (PC)) connected to the central controller. The server runs one or more applications. A data session between a wireless handset and the server over an active wireless link allows a user of the wireless handset to access applications and related data located on the server remotely with the wireless handset. A data session may be initiated by the user or by one of the applications running on the server connected to the central controller. Samples of these systems include the Companion 200 and Meridian Companion Mobility Option (MCMO) produced by Northern Telecom Limited and the Pocket Communication Systems (PCS) PCS50E, PCS150E, and PCS2000E produced by SpectraLink Corporation. While the user is away from a PC, these digital building wireless communications networks allow for the activating and running of computer programs (i.e. applications) that may be required without prescribing that the user be situated at the same location as the computer (e.g. PC). This increases the accessibility of data to the user while away from a computer.","However, with existing communications systems, the data associated with an application is only stored at the server. The user must always establish a data session with the application over an active wireless link in order to access the data. Consequently, existing systems use up valuable radio resources which could ultimately lead to reduced system capacity and service degradation.","It is an object of the present invention to overcome the disadvantage of the prior art and, in particular, to provide a technique whereby a user is able to access data locally at a wireless handset for one or more software applications without requiring a wireless link.","In accordance with one aspect of the present invention, there is provided a method of accessing data at a wireless terminal having virtual memory. The method comprises the steps of (a) downloading data from a server over an active wireless link to the virtual memory of the wireless terminal and (b) accessing the data stored in the virtual memory of the wireless terminal at the wireless terminal without requiring the active wireless link.","In accordance with another aspect of the present invention, there is provided a wireless terminal for use in a communications network. The wireless terminal comprises a transceiver for receiving and transmitting information over an active wireless link with the communications network, virtual memory to store information received over the active wireless link with the communications network and display means to view the information stored in the virtual memory without requiring the active wireless link with the communications network.","In accordance with another aspect of the present invention, there is provided a wireless communications network. The wireless communications network comprises at least one display based wireless handset with virtual memory, at least one base station with which the wireless handset communicates over an active wireless link, a central switching controller coupled to the base station for controlling the base station and connectable to an external switched telephone network for selective switching of the wireless handset to the external switched network and a server connected to the central switching controller. The server controls operation of the central switching controller by means of server software running on the server and provides at least one software application to the wireless handset by means of application software and related data located on the server. The server software permits data related to an application to be downloaded over the active wireless link to the virtual memory of the display based wireless handset. The data stored in the virtual memory of the wireless handset can be accessed without the active wireless link.","The preferred embodiment of the present invention requires the use of the Companion Applications Toolkit (CAT) Application Programming Interface (API) produced by Northern Telecom Limited of Montreal, Canada. This CAT API corresponds to Northern Telecom part number A0674796 and is publicly offered for sale by Northern Telecom. The software manual for this API is the CAT Version 1.1 help file using Microsoft Windows Help Application 4.00.950 and is incorporated herein by reference.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":["100","100","100","102","104","106","108","110","112","114","116","118","120","122","124"]},"Software created using the CAT API controls the writing to the LCD  and the turning on or off of the softkey icons , ,  and the navkey icons . The process of turning on or off the softkey icons , ,  and navkey icons  includes activation and deactivation of the corresponding softkey buttons , ,  and navkey buttons . The softkey icons , ,  include a first softkey icon (left) , a second softkey icon (middle) , and a third softkey icon (right)  that correspond respectively to a first softkey button (left) , a second softkey button (middle) , and a third softkey button (right)  located below the softkey icons , ,  on the wireless handset . Typically the second display line  of the LCD  is used to label the softkey icons , ,  that are activated by writing the appropriate labels directly above the particular softkey icons , , . (These labels may be called softkey labels). The navkey buttons  consist of an up navkey button , a down navkey button , a left navkey button  and a right navkey button .",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 2","b":["200","100","202","204","206","204","208","206","204","202","100","200"]},"The central switching controller  connects the building wireless communications network  to an external telephone system  through telephone lines . In the embodiment described above with the Companion , the external telephone system  consists of a Private Branch Exchange (PBX) which is further connected to a public switched telephone network and\/or connected to PBXs of other telephone systems. In the embodiment described above with the MCMO, the central switching controller  is included within the PBX and the external telephone system  connected to the central switching controller  consists of a public switched telephone network and\/or PBXs for other telephone systems.","The central switching controller  is connected to the wireless handsets  through Time Compressed Multiplexing (TCM) telephone lines  between the controller  and the base stations , and active wireless links  between the base stations  and the wireless handsets . The active wireless links  are typically active radio channels. The wireless handsets  include transceivers for communicating with the base stations  over the active wireless links .","The interface device  is used to translate data information and requests in the TCM form to the RS form that the server  can process and translate data information and requests in the RS form to the TCM form that the central switching controller  can process. In the preferred embodiment, the interface device  is a Computer Telephony Adaptor (CTA) which consists of either a serial box CTA100 external to the server  with Northern Telecom part number A0646509 or a PC interface card CTA150 internal to the server  with Northern Telecom part number A0363108.","The server  runs server software comprising Companion Applications Toolkit (CAT) server software  and application software. The Companion Applications Toolkit (CAT) server software  communicates with and has the capability to control the central switching controller  and the wireless handsets  through the interface device  and regulates the operation of the application software. The application software comprises a plurality of software application programs  programmed with the CAT API.","An example of a possible software application program  generated with the CAT API is a personal directory look up application selectively initiated by the user of one of the wireless handsets  that allows the user to search a personal directory database located within the server  for information on specific individuals.","Another example of a possible software application program  generated with the CAT API is a To-Do list selectively initiated by the user of one of the wireless handsets  that allows the user of a wireless handset  to search a To-Do list database located at the server  for activities or work that needs to be performed by the user.","An additional example of a possible software application program  is a nurse call system application which initiates a data session with one or more of the wireless handsets  carried by the nurses within a hospital ward in the event of an emergency request by a patient and provides additional information about the particular patient such as his\/her room number to the wireless handsets  in such an occurrence.","A further example of a software application program  is a stock inventory control application selectively initiated by the user of one of the wireless handsets  that allows the user to access inventory databases located in at the server  to determine if a product is in stock in a stock room or a warehouse.","The CAT server software  is 16 bit software which operates under Microsoft WINDOWS versions 3.1, 3.11, Win95 and Win98. This server software  is capable of being upgraded to 32 bit software which can be operated under Microsoft WINDOWS versions Win95, Win98, and WinNT.","Similarly, the software application programs  are 16 bit software which operates under Microsoft WINDOWS versions 3.1, 3.11, Win95 and Win98. The software application programs  are capable of being upgraded to 32 bit software which can be operated under Microsoft WINDOWS versions Win95, Win98, and WinNT.","Referring to , whenever a user wishes to access a software application program  and related data at the server , the user typically initiates a data session for the software application program  over an active wireless link  by pressing a softkey button , , or  on a wireless handset  for the software application program  as shown in step . If the wireless handset  is unable to establish a data session with the software application program  over an active wireless link , the wireless handset  typically displays a failure message (e.g. \u201cconnection failed\u201d) as shown at decision step  and step . For example, the wireless handset  will not be able to establish a data session if the wireless handset  is out of range or if the server  is down. If the wireless handset  is able to establish a data session with the software application program  over an active wireless link , the software application program  typically sends a message over the active wireless link  which is displayed on the wireless handset  as shown at decision step  and step . The content of the message is dependent on the software application program .","The software application program  then sends softkey labels for the softkey buttons ,  and  over the active wireless link  which are displayed on the second line  of the LCD display  of the wireless handset  at step . The software application program  then turns on the softkey icons ,  and  (which are displayed on the LCD ) and activates the corresponding softkey buttons ,  and  at step .","The wireless handset  then monitors whether a softkey button ,  or  has been pressed as shown at decision step . If a softkey button ,  or  has been pressed, then the wireless handset  sends a softkey event (i.e. a command) associated with the softkey button ,  or  over the active wireless link  to the software application program  on the server  at steps  and . The softkey event associated with the first softkey button (left)  is typically called a first softkey event. The softkey event associated with the second softkey button (middle)  is typically called a second softkey event. The softkey event associated with the third softkey button (right)  is typically called a third softkey event. The software application program  then sends an appropriate response for the softkey event to the wireless handset  over the active wireless link  at step .","If the response notifies the wireless handset  that the data session be ended (e.g. the user requested the data session be ended at steps  and ), then the data session is ended and the wireless link  is torn down as shown at decision step  and step . If the software application program  sends a response, other than a response to end the data session, the wireless handset  displays the response on the LCD  of the wireless handset  as shown at step . Next, the wireless handset  monitors the softkey buttons ,  and  as shown at decision step .","For example, the software application program  may provide a To-Do list application. The To-Do list application informs each user of a wireless handset  of the activities that need to be performed by that user. The activities for each user are stored in a To-Do list stored at the server .","The user initiates a data session for the To-Do list application over an active wireless link at step  by pressing the appropriate softkey button ,  or  on a wireless handset . Once the data session is established, the software application program  for the To-Do list application sends a message to the wireless handset  over the active wireless link  which is displayed on the wireless handset  as shown at steps  and . The message is typically a description of an activity to be performed first from the To-Do list stored on the server .","The To-Do list application then sends over the active wireless link  the following softkey labels for the softkey buttons ,  and : \u201cNext\u201d, \u201cPrev\u201d and \u201cQuit\u201d. These soft key labels are displayed on the second line  of the LCD  of the wireless handset  at step . The To-Do list application then instructs the wireless handset  to turn on the softkey icons ,  and  (and activates the corresponding softkey buttons ,  and ) at step .","The wireless handset  then monitors the softkey buttons ,  and  at step . If the user presses the softkey button  (labelled \u201cNext\u201d), the wireless handset  sends the first softkey event to the software application program  (for the To-Do list application) over the active wireless link  at steps  and . The software application program  for the To-Do list application then interprets the first softkey event as a request to send the description for the next activity to be performed. The software application program  then sends the description for the next activity to be performed in the To-Do list at step . The description is then displayed on the LCD  at steps  and .","If the user presses the softkey button  (labelled \u201cPrev\u201d), the wireless handset  sends the second softkey event to the software application program  for the To-Do list application over the active wireless link  at steps  and . The software application program  for the To-Do list application then interprets the softkey event as a request to send the description for the previous activity in the To-Do list. The software application program  for the To-Do list application then sends over the active wireless link  the description for the previous activity to be performed in the To-Do list at step . The description is then displayed on the LCD  at steps  and .","If the user presses the softkey button  (labelled \u201cQuit\u201d), the wireless handset  sends the third softkey event to the software application program  for the To-Do list application over the active wireless link  at steps  and . The To-Do list software application then interprets the third softkey event as a request to end the data session. The software application program  then sends a response over the active wireless link  confirming that the data session be ended at step . The data session is then ended and the active wireless link  is torn down at steps  and .","As shown in , whenever the user wishes to access data related to a software application program , the user must establish a data session over an active wireless link  between a wireless handset  and the software application program . For many software applications, this method needlessly wastes radio resources.","In accordance with a preferred embodiment of the present invention, each wireless handset  has memory, called virtual memory, for one or more software application programs . (i.e. The software application programs  treat the memory in each wireless handset as virtual local memory). The virtual memory stores data related to one or more software application programs . Consequently, if a user wishes to access data for a software application program , the user typically does not typically need to establish a data session over an active wireless link  with the software application program . The user can simply access the data stored locally at the wireless handset  in the virtual memory. In the preferred embodiment, each handset  has 32 KB of RAM for the virtual memory. Alternatively, more or less than 32 KB can be used. Furthermore, other types of memory can be used such as EEPROM's, floppy disks, etc.","The data for a software application program  is typically stored as a plurality of items in a list in the virtual memory and depending on the software application program  may be stored as a respective plurality of items in a mirror list maintained on the server  for the software application program . For many software applications programs , the list in the virtual memory and the mirror list are identical. However, for some software application programs , the list and the mirror list may not always be identical. For example, some software application programs  may allow the user to add, modify or delete an item in the list stored in the virtual memory without requiring a data session over an active wireless link  to update the mirror list. Depending on the software application program , once a data session over the active wireless link  is established the data in the list and the data in the mirror list on the server  may or may not be synchronized.","Before the virtual memory in a wireless handset  can be used for a service or a software application (associated with a software application program ), the software application must be added to the wireless handset  by the software application program . When the software application is added, the virtual memory is also configured. The user of the wireless handset  need not even be aware that the software application is being added by the software application program .","Referring to , assuming there isn't an existing data session over an active wireless link , the server  attempts to establish a data session for the software application program  over an active wireless link  with the wireless handset  at step . If a data session for the software application program  over an active wireless link  cannot be established, the server  keeps trying to establish a data session for the software application program  over an active wireless link  with the wireless handset  at periodic time intervals or whenever the server  hears a response from the wireless handset  to a beacon sent by a base station  (which typically indicates that the wireless handset  is within range of one of the base stations ) as shown at steps  and .","If a data session for the software application program  has been established at step , then the software application program  in the server  requests that the associated software application be added to the wireless handset  at step . At step , the software application program  typically sends an application feature code identifying the software application, a name (or description) of the software application and a size for the list to be stored in the virtual memory for the software application.","The size of the list is simply the number of items (or entries) in the list. The size of the list depends on the software application (associated with the software application program ). Each entry in the list can hold up to a maximum number of characters (including numerals). Preferably, the maximum number of characters is 64 characters (or 64 bytes). If a larger LCD  is used, the maximum number of characters for each entry may be larger.","Alternatively, the size for the list may be specified by the software application program  as not only the number of items (or entries) in the list but also the maximum number of characters in each item (or entry).","At decision step , the wireless handset  determines whether it has enough free (or available) virtual memory in the wireless handset  to satisfy the needs of the software application. If there is not enough available virtual memory, the wireless handset  notifies the software application program  at step . If there is enough free virtual memory, the software application program  sends an applet list containing a number of applet identifiers and a respective number of associated softkey labels to the wireless handset  at step .","Each wireless handset  is preprogrammed with a fixed number of applets. Each applet is identified with a unique applet identifier. Each software application added by a software application program  uses at least one applet.","Alternatively, the software application program  sends the actual applets (i.e. programs) and associated softkey labels over an active wireless link  to the handset .","There are two types of applets\u2014Type \u201cA\u201d and type \u201cB\u201d applets. Type \u201cA\u201d applets are programs which perform local functions that do not require a data session with a software application program  over an active wireless link . Most of the type \u201cA\u201d applets access the virtual memory in the wireless handset . Type \u201cB\u201d applets are programs which perform functions that require a data session over an active wireless link . At minimum, it is envisioned that each wireless handset  be preprogrammed with the following type \u201cA\u201d applets:",{"@attributes":{"id":"p-0056","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"98pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"TYPICAL",{}]},{"entry":["APPLET","SOFTKEY"]},{"entry":["IDENTIFIER","LABEL","DESCRIPTION\/FUNCTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["A1","Local Delete","Delete an item in the"]},{"entry":[{},{},"list in the Virtual Memory."]},{"entry":["A2","Quit","Quit list and return to"]},{"entry":[{},{},"main menu."]},{"entry":["A3","Connect","Establish a data session"]},{"entry":[{},{},"with the software"]},{"entry":[{},{},"application program 222 over"]},{"entry":[{},{},"a wireless link 216."]},{"entry":["A4","Display Next","Display next item in the"]},{"entry":[{},{},"list in the Virtual Memory."]},{"entry":["A5","Display Previous","Display previous item in"]},{"entry":[{},{},"the list in the Virtual"]},{"entry":[{},{},"Memory."]},{"entry":["A6","Dial Number","Dial telephone number"]},{"entry":[{},{},"which is contained"]},{"entry":[{},{},"within the item displayed"]},{"entry":[{},{},"from the list"]},{"entry":[{},{},"in the Virtual Memory."]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},"At minimum, it is envisioned that each wireless handset  be preprogrammed with the following type \u201cB\u201d applets:",{"@attributes":{"id":"p-0058","num":"0057"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]},{"entry":[{},"APPLET",{}]},{"entry":[{},"IDENTIFIER","DESCRIPTION\/FUNCTION"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"B1","Establish data session"]},{"entry":[{},{},"with software application"]},{"entry":[{},{},"222 program;"]},{"entry":[{},{},"Send first softkey Event."]},{"entry":[{},"B2","Establish data session with"]},{"entry":[{},{},"the software application"]},{"entry":[{},{},"222 program;"]},{"entry":[{},{},"Send second softkey event."]},{"entry":[{},"B3","Establish data session with"]},{"entry":[{},{},"software application program"]},{"entry":[{},{},"222;"]},{"entry":[{},{},"Send third softkey event."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}}},"The softkey events depend on the service or software application (associated with the software application program ). Examples of possible softkey events are as follows:\n\n","Once the applet list has been sent to the wireless handset  at step  or once the software application program  has been notified at step , the data session is ended and the active wireless link  is torn down at step .","Data stored in the virtual memory of the wireless handset  for a software application may be added, modified or deleted without any user intervention by a software application program . An operator at the server  (or a client PC connected to the Server ) may want to add, modify or delete data stored in the virtual memory of the wireless handset . For example, an operator at the server  may want to add a description for a new activity to the virtual memory of a wireless handset  for a To-Do list software application. Some software application programs  may even add, modify or delete data stored in the virtual memory of a wireless handset  on its own accord (i.e. without any intervention by an operator at the Server  (or at a client PC connected to the Server )).","Referring to , assuming there isn't an existing data session over an active wireless link , the server  attempts to establish a data session for a software application program  over an active wireless link  with the wireless handset  at step . If a data session for the software application program  over an active wireless link  cannot be established, the server  keeps trying to establish a data session for the software application program  over an active wireless link  with the wireless handset  at periodic time intervals or whenever the server  hears a response from the wireless handset  to a beacon sent by a base station  (which typically indicates that the wireless handset  is within range of one of the base stations ) as shown at steps  and .","If a data session has been established at step , then the software application  in the server  sends a command to the wireless handset  requesting that an item be added, modified or deleted in the respective list in the virtual memory of the wireless handset  at step . The virtual memory is updated accordingly in step . Next, the software application  determines whether of not there are any other items to be added, modified or deleted in the respective list in the virtual memory at decision step . If there are other items to be added, modified or deleted, then steps  and  (and decision step ) are repeated. If there aren't any other items to be added, modified or deleted, then the data session is ended and the active wireless link is torn down at decision step .","Whenever the user of a wireless handset  invokes a software application (associated with a software application program ) that has been already added to the wireless handset , the wireless handset  displays the softkey labels provided in the applet list on the second line  of the LCD , displays the respective softkey icons ,  and  and activates the respective softkey buttons ,  and . Whenever the user presses the first softkey button , the user invokes the first applet provided in the applet list. Whenever the user presses the second softkey button , the user invokes the second applet provided in the applet list, etc. If the applet list contains more than three applet identifiers with respective softkey labels, the wireless handset displays the navkey icons  and activates the navkey buttons . By pressing the left navkey button  and the right navkey button , the user can scroll through the softkey labels for the other applets in the applet list and invoke the other applets if desired.","Referring to , the wireless handset  monitors whether a softkey button ,  or  has been pressed at decision step . Once a softkey button ,  or  has been pressed, the wireless handset  determines whether or not the associated applet performs a local function (i.e. a type \u201cA\u201d applet) or requires a data session over an active wireless link  (i.e. a type \u201cB\u201d applet) at step . If a type \u201cA\u201d applet was invoked, then the wireless handset  runs the applet at step . If the applet adds, modifies or deletes data in the virtual memory, then the virtual memory is updated accordingly at step . Then the wireless handset  monitors the softkey buttons ,  and  at decision step  as previously described. If the wireless handset  determines that a type \u201cB\u201d applet was invoked at step , then the wireless handset  determines whether there is an existing data session for the associated software application  over the active wireless link  at step . If there isn't an existing active data session, then the wireless handset  attempts to establish a data session for the associated software application  over an active wireless link  at step . At step , the wireless handset  determines whether or not a data session for the software application program  has been established. If not, the wireless handset  continues to attempt to establish a data session for the associated software application program  over an active wireless link  at steps  and .","If a data session is established at step  or if there was already an existing data session at decision step  for the software application program , then the wireless handset  sends a softkey event (associated with the applet) to the software application  (e.g. a softkey event that would be interpreted by the software application program as \u2018delete an item\u2019) at step . The Software application then sends a response to the wireless handset  (e.g. display \u201citem deleted\u201d or end data session) at step . If the response to the wireless handset  indicates that the data session be ended, then the data session is ended and the active wireless link  is torn down. If the response does not indicate that the data session be ended, then the wireless handset displays the response, if applicable (e.g. item deleted) at step . Typically, a response is displayed. The response may display data sent from the server  for the associated software application  or may simply just confirm that a softkey event has been processed (e.g. item deleted). Next, the virtual memory is updated if applicable at step . For example, if an item is deleted, the item is not only deleted in the mirror list at the server  but is also typically deleted in the list in the virtual memory. Next, the wireless handset  monitors the softkey buttons ,  and  at step  as previously described.","If an item from the virtual memory cannot be displayed all at once on the LCD , the wireless handset displays the navkey icons  and activates the navkey buttons . By pressing the up navkey button  and the down navkey button , the user can scroll through data for the item.","Persons skilled in the art will appreciate that there are alternative implementations and modifications possible to allow data to be stored and manipulated in virtual memory in a wireless handset  and that the above method is only an illustration of this embodiment of the invention.","In addition, the active wireless link  may not only be active radio channels but also may be any other type of active wireless link  such as an active infrared wireless link .","Furthermore, the wireless terminal with virtual memory and the method of using the wireless terminal  may be used in any type of wireless communications network such as a cellular phone wireless communications network.","Moreover, the wireless handset  is just one type of wireless terminal that can be used. Other types of wireless terminals can be used such as a wireless terminal comprising a personal computer with terminal software connected to a cellular telephone."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The preferred embodiment of the present invention will now be described with reference to the following figures, in which:",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
