---
title: Interactive voice response data collection object framework, vertical benchmarking, and bootstrapping engine
abstract: A method, a system, and computer readable medium comprising instructions for analyzing data of a speech application are provided. The method comprises defining a set of data collection objects for a call flow in a speech application, collecting data using the set of data collection objects during execution of the speech application, and analyzing the data using a benchmarking and bootstrapping engine, storing the data in a repository, and presenting the data for analysis.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08868424&OS=08868424&RS=08868424
owner: West Corporation
number: 08868424
owner_city: Omaha
owner_country: US
publication_date: 20080208
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","FIELD OF THE DISCLOSURE","BACKGROUND OF THE DISCLOSURE","SUMMARY OF THE DISCLOSURE","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The present application is related to commonly assigned U.S. patent application Ser. No. 12\/028,082 entitled OPEN FRAMEWORK DEFINITION FOR SPEECH APPLICATION DESIGN filed on even date herewith, the entire contents of which are incorporated by reference herein.","The present disclosure relates generally to an interactive voice response system. More particularly, the present disclosure provides a method, a system, and a computer readable medium comprising instructions for a data collection object framework for interactive voice response, and a vertical benchmarking and bootstrapping engine within such framework.","In today's environment, data from a speech application is logged in a variety of formats and is often difficult to retrieve for analysis. The process for retrieving and analyzing such data is lengthy and time-consuming. By the time the data is retrieved from the repository and analyzed, it is often outdated. Currently, analysts gather data from multiple sources and link them together within a database before analysis is performed. Even though data may be collected for a variety of industry verticals, it is often difficult to categorize data, identify critical key performances indices, or compare performance metrics in a cross-vertical and intra-vertical manner. Therefore, what is needed is a framework that provides the ability to collect data in a standardized manner, such that cross-vertical and intra-vertical data may be easily retrieved and analyzed.","In one embodiment, a method for analyzing data of a speech application is provided. The method comprises defining a set of data collection objects for a call flow in a speech application, collecting data using the set of data collection objects during execution of the speech application, and analyzing the data using a benchmarking and bootstrapping engine, storing the data in a repository, and presenting the data for analysis.","In one embodiment, the set of objects comprise an application init interactive voice response data collection object (IDCO), a call init IDCO, a dialog state entry IDCO, a dialog state exit IDCO, a point of decision IDCO, a call transfer IDCO, a play message init IDCO, a play message exit IDCO, an integration point IDCO, a call termination IDCO, and a call completion IDCO. The shape and weight of each of the set of objects vary from one another based on the purpose of each object.","In another embodiment, a system for analyzing data of speech application is provided. The system comprises a data processing system accessible by at least one stakeholder involved in the speech application, a server comprising an interactive voice response data collection object framework for collecting and analyzing data during execution of the speech application, and a data repository for storing the data.","With reference to the figures and in particular with reference to , a diagram of current process for speech application design and development is depicted in accordance with an embodiment of the disclosure. In this exemplary design project, stakeholders involved include grammar developers , designers , project managers , testing analysts , and application developers . Each of the stakeholders may generate one or more derivable .","In this example, design process  begins when project managers  kicks off a project . The kickoff  generates a statement of work (SOW)  and the context of the project is then realized  through the SOW  to the stakeholders. The statement of work (SOW)  also helps designers  to generate functional requirements . With functional requirements , designers further develop a high level design  and design documents  reflecting the high level design .","A high level design review  is then conducted among project managers , designers , and grammar developers . During the review , designers  and grammar developers  select one or more design strategies . Based on the selected strategies, designers  develop a detailed design  and design documents . Grammar developers  then develop grammar and perform grammar testing  for the speech application based on the design documents . The developed grammar is stored in a grammar file . Also based on the design documents , testing analysts  develop various test cases  for the design and the developed test cases  are stored. At the time grammar and test cases are developed, a detailed design review  is conducted among testing analysts , project managers , designers , and grammar developers  to ensure that the developed grammar and test cases work with the detailed design as intended.","After detailed design review  is conducted and satisfactory results are achieved, application developers  develop the speech application  based on the detailed design  and application code  is generated by application developers . After the speech application is developed, application testing  is performed among application developers , testing analysts , project managers , designers , and grammar developers . To conduct application testing , the grammar file  and test cases  are used. If application testing  is successful, project managers  approve the speech application to be deployed .","In design process , each derivable  may be generated by different stakeholders and thus is independent from one another. For example, design documents  and  generated by designers  are independent from grammar file  and test cases , even though grammar file  and test cases  are generated based on information in design documents  and . Derivable of the next process step in process  cannot be generated from the derivable generated in the previous process step. This affects coordination and communication among the design team as well as sharing of work products that may affect later design process steps.","Aspects of the present disclosure provide an open framework definition for speech application design that define how elements of speech application design are presented for modification, storage, and interpretation, such that different stakeholders involved may interact with these elements throughout the entire design process. With this open framework, the time-to-market of the speech application is reduced. In addition, coordination and communication among the design team and sharing of information are improved, because derivable of one process step may be used to generate derivable of the next process step with these common design elements.","In one embodiment of the present disclosure, elements of speech application design may be divided into three main groups: data presentation elements, data repository elements, and data generate elements. Data presentation elements define information on how data is presented for modification, analysis, and use in a speech application design. Data repository elements define a structure in which data is stored. Data generation elements define how aggregated data and information are generated based on design elements at hand. Data generation elements enable next process step derivables to be generated from previous process step derivables.","Referring to , a diagram illustrating an exemplary architecture of the open framework for speech application design is depicted in accordance with one embodiment of the present disclosure. In open framework , stakeholders develop documents for their own portion of the design process using common design elements. For example, UI designer  developed the user interface in a text or Word document  or other design documents  and stores the document in a repository based on the structure defined in the data repository elements. The open framework  then takes the text or Word document  and generates a user interface creation modification document  using data presentation elements.","Because common design elements are defined in extensible markup language (XML) format, open framework  comprises an XML wrapper  for wrapping and unwrapping design elements provided by different stakeholders. Upon receiving the user interface creation modification document  in XML, XML wrapper  unwraps the information in the document. If other derivable can be generated from this document, open framework  provides an integration engine  that integrates the information and generates the derivable using data generation elements for the next process step. For example, based on the user interface creation modification document , application code  may be generated using the data generation elements in the integration engine . Once application code  is generated, the code may be wrapped in XML using the XML wrapper  and presented to the application developer .","Using common design elements, open framework  may provide automatic change notification  and grammar testing  to grammar developers . In turn, grammar developers  may create and modify the grammar using the grammar creation and modification document  provided by open framework  in XML format. Other stakeholders may also use common design elements to share their information and perform their tasks in the design process. For example, speech analysts  may receive an analysis of the speech application design and send a change request  to designers for modification. Also with common design elements, project managers  may communicate project status  with other stakeholders using common design elements, other managers  may monitor status of their project portfolios , and other analysts  may analyze collected data using data repository elements in the data collection framework .","In order to collect and analyze data collected from a variety of stakeholders or processes in open framework , one aspect of the present disclosure provides an interactive voice response data collection object framework  and vertical benchmarking and bootstrapping engine. The objective of IVR data collection object framework  is to collect and store data generated during execution of the speech application for later analysis. In addition, the framework  is capable to provide analysis even with continuous changes of business goals by clients of speech applications.","Referring to , a diagram illustrating an exemplary architecture for the interactive voice response data collection object framework and vertical benchmarking and bootstrapping engine is depicted in accordance with one embodiment of the present disclosure. Vertical benchmarking and bootstrapping engine  is communicably coupled to integration engine  in  to collect data generated by speech application utilizing open framework . In this exemplary embodiment, vertical benchmarking and bootstrapping engine  comprises an IVR data collection connector  that communicates with an IVR data collection object framework  for storing and analyzing data.","In analyzing data, the vertical benchmarking and bootstrapping engine  uses bootstrapping techniques on the collected data to make predictions on the effectiveness of certain technology changes. In making predictions, vertical benchmarking and bootstrapping engine  discerns patterns within the collected data and make analysis on the patterns.","When collecting and analyzing data, the IVR data collection object framework  stores and retrieves the data in a data repository . The IVR data collection object framework  provides analysts and executives the ability to view and analyze data stored in data repository  based on key performance indices and other performance metrics in a cross-vertical and intra-vertical manner. In addition, IVR data collection object framework  presents the cross-vertical and intra-vertical data analysis to analysts and executives in a variety of formats. For example, the IVR data collection object framework  may present the analysis to analysts in a virtual automatic call distribution (VACD) platform, in a proprietary platform, or in a voice extensible markup language (VXML) platform.","In order to provide a cross-vertical and intra-vertical analysis of collected data, IVR data collection object framework  comprises a set of IVR data collection objects that provide basic structures for collecting meaningful and complete data during execution of speech applications for later analysis. Each of IVR data collection objects varies in shape and weight based on the object's purpose. Referring to , a diagram illustrating a set of IVR data collection objects is depicted in accordance with one embodiment of the present disclosure.","In this exemplary embodiment, IVR data collection objects  comprise an application init IVR data collection object (IDCO). Application init IDCO  signals the initiation of the speech application. IVR data collection objects  also comprise a call init IDCO . Call init IDCO  signals the initiation of a particular call by a caller. IVR data collection objects  further comprise a dialog state entry IDCO . Dialog state entry IDCO  signals an initiation of a state of interaction between the speech application and the caller. This object only indicates that a dialog state is initiated.","IVR data collection objects  further comprise a dialog state exit IDCO . Dialog state exit IDCO  indicates the completion of a state of interaction between the speech application and the caller. In addition to indicating delivery of data such as informative prompts, menus, information pertinent to a specific dialog state, by the speech application, this object also indicates the caller's response or the lack thereof and how the specific dialog state handles the caller's response. For example, the specific dialog state may transition to another dialog state, another application or agent, or an end of application.","IVR data collection objects  further comprise a point of decision IDCO . Point of decision IDCO  indicates a bifurcation in the application flow based on the defined business rules. For example, a caller is being transferred to an agent because the customer's balance has reached a certain threshold and interaction with the speech application is denied as a result, a point of decision IDCO  may be used to indicate such a transfer.","IVR data collection objects  further comprise a call transfer IDCO . Call transfer IDCO  indicates that the current application no longer services the call. As a result, the call will be automatically transferred to another application or live operator for further treatment. IVR data collection objects  further comprise a play message init IDCO . Play message init IDCO  indicates the initiation of a state in which the application will provide caller with information but will not expect a response from the caller.","IVR data collection objects  further comprise a play message exit IDCO . Play message exit IDCO  indicates the completion of the state in which the application provides the caller with information. IVR data collection objects  further comprise an integration point IDCO . Integration point IDCO  indicates a point in the application in which the application is connecting to an external entity, for example, legacy systems or other databases, to perform operations that are pertinent and meaningful for control of the call flow.","IVR data collection objects  further comprise call termination IDCO . Call termination IDCO  indicates termination of the call and the reason for termination or reason for disconnecting one or more parties. IVR data collection objects  further comprise call completion IDCO . Call completion IDCO  indicates that a particular task which determines a call completion has been executed.","Referring to , a diagram illustrating attributes and an example of application init IDCO is depicted in accordance with one embodiment of the present disclosure. The attributes of an application init IDCO include date and time  of initiation of the application, server  on which the application is running, client identification  indicating name of the client, and application identification  indicating the name or the identification string for the application.","In this example, the identifier  of application init IDCO  is \u201cClient.Application.ApInit.001\u201d. It has a time stamp  of \u201c20070806101702\u201d. The server  on which the application is running on is identified by its Internet protocol address of \u201c192.139.29.33\u201d. The name of the client  is \u201cClient Name\u201d, and the name of the application  is \u201cMain Menu\u201d.","Referring to , a diagram illustrating attributes and an example of call init IDCO is depicted in accordance with one embodiment of the present disclosure. The attributes of an call init IDCO include data and time  of the initiation of the call, server  on which the application is running, the line  from which the call came in, the application identification  indicating the name or the identification string for the application, an automatic name identifier (ANI) indicating the origination point identification number from which the call is originated, and a call identification for the call.","In this example, the identifier  of call init IDCO  is \u201cClient.Application.CallInit.001\u201d. It has a time stamp  of \u201c20070806101702\u201d. The server  on which the application is running on is identified by its Internet protocol address of \u201c192.192.192.192\u201d. The line  from which the call came in is \u201c34\u201d. The name of the application  is \u201cMain Menu\u201d. The origination point identification ANI  is \u201c402-555-3212\u201d, and the call identification  is \u201cc.384302.aax.393\u201d.","Referring to , a diagram illustrating attributes and an example of dialog state entry IDCO is depicted in accordance with one embodiment of the present disclosure. The attributes of a dialog state entry IDCO include a date and time stamp  and a dialog state identification . In this example, dialog state entry IDCO  has an identifier  of \u201cClient.Application.DSEntry.001\u201d. It has a time stamp  of \u201c20070806101702\u201d and a dialog state identification  of \u201ccc_number_ltry\u201d.","Referring to , a diagram illustrating attributes and an example of dialog state exit IDCO is depicted in accordance with one embodiment of the present disclosure. The attributes of a dialog state exit IDCO include a date and time ; a dialog state identifier ; an exit type  which includes an enumeration of maximum time out, maximum error, hang up, recognition achieved, and maximum DTMF collected; a sequential  indicating a successive iteration number; a prompt list , which include a list of concatenate prompts to be played to the caller; a caller action , which includes a enumeration of DTMF collected or recognition result; recognition confidence ; and a platform log , which indicates an address of where to find the recognition log generated by the recognition platform.","In this example, dialog state exit IDCO  has an identifier  of \u201cClient.Application.DSExit.001\u201d and a time stamp  of \u201c20070806101702\u201d. The dialog state identifier  is \u201ccc_number_ltry\u201d and the sequential  is \u201c1\u201d. Prompt list  comprises a list of prompts including \u201cp1.wav\u201d, p2.wav\u201d, and \u201cp3.wave\u201d to be played to the caller. The exit type  is \u201crecognitionAchieved\u201d and the caller action  is \u201cRecognition Result\u201d. The recognition confidence  is \u201c78\u201d and the platform log address  is \u201c\/unix\/directory\/nuance\/logs\/today\u201d.","Referring to , a diagram illustrating attributes and an example of point of decision IDCO is depicted in accordance with one embodiment of the present disclosure. The attributes of a point of decision IDCO include a date and time , a dialog state identifier , a data label  identifying data to be analyzed, a data value  identifying value of the data, and a next state  indicating a target state based on the data value .","In this example, point of decision IDCO  has an identifier  of \u201cClient.Application.DSExit.001\u201d. The time stamp  is \u201c20070806101702\u201d and the dialog state identifier  is \u201ccc_number_ltry\u201d. The data label  is \u201caccount balance\u201d and the data value  is \u201c0.00\u201d. The next state  is \u201cDCO.DSTransfer.034\u201d, which means that the target state is dialog state transfer.","Referring to , a diagram illustrating attributes and an example of call transfer IDCO is depicted in accordance with one embodiment of the present disclosure. The attributes of a call transfer IDCO include a date and time , a state identifier , a transfer destination , which indicates the type of transfer to either an operator or an application, and a destination address , which may either be an extension or phone number of the operator or an application identification.","In this example, call transfer IDCO  has an identifier  of \u201cClient.Application.CallTxn.001\u201d and a time stamp  of \u201c20070806101702\u201d. The transfer destination  is \u201coperator\u201d and the transfer destination address  is \u201c1003246\u201d.","Referring to , a diagram illustrating attributes and an example of play message init IDCO is depicted in accordance with one embodiment of the present disclosure. The attributes of a play message init IDCO include a date and time  and a state identifier . In this example, play message init IDCO  has an identifier  of \u201cClient.Application.PlayMsgInit.001\u201d and a time stamp  of \u201c20070806101702\u201d. The state identifier  is \u201ccc_play_total_balance\u201d.","Referring to , a diagram illustrating attributes and an example of play message exit IDCO is depicted in accordance with one embodiment of the present disclosure. The attributes of a play message exit IDCO include a date and time  and a state identifier . In addition, attributes include a prompt list , which is a list of concatenate prompts to be played to the caller. In this example, play message exit IDCO  has an identifier  of \u201cClient.Application.PlayMsgExit.001\u201d and a time stamp  of \u201c20070806101702\u201d. The state identifier  is \u201ccc_play_total_balance\u201d. The list of prompts to be played to caller  includes \u201cp1.wav\u201d, \u201cp2.wav\u201d, and \u201cp3.wav\u201d.","Referring to , a diagram illustrating attributes and an example of integration point IDCO is depicted in accordance with one embodiment of the present disclosure. The attributes of a integration point IDCO include a date and time ; an external entity type  indicating the nature of the external entity or system, including a database, an application programming interface (API); an external entity identifier  identifying the external entity or system; submitted data  indicating data sent to the external entity or system; a returned status ; and a returned value .","In this example, integration point IDCO  has a time stamp  of \u201c20070806101702\u201d and an identifier  of \u201cClient.Application.IntPoint.001\u201d. The external entity type  is a \u201cdatabase\u201d and the external entity identifier  is \u201coracle.unixmachine.server:port\u201d. The submitted data  includes a query of \u201cSELECT amount_txn_WHERE_custid=\u201834324\u2019. The returned status  is \u201cQUERY_EXEC_OK\u201d and the returned value  is \u201c283.99\u201d. Thus, in this example, the integration point is a database and data is retrieved from the application to the database by sending a query for a value.","Referring to , a diagram illustrating attributes and an example of call termination IDCO is depicted in accordance with one embodiment of the present disclosure. The attributes of a call termination IDCO include a date and time  and a reason  for disconnection. In this example, call termination IDCO  has an identifier  of \u201cClient.Application.CallTerm.001\u201d and a time stamp  of \u201c20070806101702\u201d. The reason  for disconnection is \u201cCALLER_HANG_UP\u201d.","Referring to , a diagram illustrating attributes and an example of call completion IDCO is depicted in accordance with one embodiment of the present disclosure. The attributes of a call completion IDCO include a date and time . In this example, call completion IDCO  has an identifier  of \u201cClient.Application.CallComp.001\u201d and a time stamp  of \u201c20070806101702\u201d.","Referring to , a diagram illustrating an exemplary call flow of a speech application with IVR data collection objects is depicted in accordance with one embodiment of the present disclosure. Call flow  enters dialog state entry IDCO DSEntry.001 and the caller is prompted to say either a phone number or activate a new phone at step . If the caller's response is recognized by the speech application, dialog state exit IDCO DSExit.001 defines how to handle such response and exits the caller to a different dialog state. But if the caller's response is not recognized by the speech application, dialog state exit IDCO DSExit.002 defines the maximum number of errors the caller may make before the caller is exited from the speech application. If the caller reached the maximum number of errors, call flow  transfers the caller to an operator in a manner defined in call transfer IDCO CallTxn.001.","If the caller is recognized, call flow  enters a point of decision at step  to determine the recognition confidence of the caller's response. The point of decision is represented by point of decision IDCO POD.001, which defines the data to be analyzed and the target state of the call based on the data value.","If the recognition confidence is high, call flow  transfers the caller to an operator in a manner defined in call transfer IDCO CallTxn.002. If the recognition confidence is medium, call flow  enters a dialog state entry IDCO DSEntry.002 and the caller is prompted to repeat the response to the caller and to respond whether the recognized response is correct at step .","If the recognized response is correct, dialog state exit IDCO DSExit.002 defines how the caller is exited if recognition is achieved. In this case, the caller is transferred to operator in a manner defined in call transfer IDCO CallTxn.002. But if the recognized response is incorrect, dialog state exit IDCO DSExit.003 defines how the caller is exited if recognition is not achieved. In this case, call flow  enters a dialog state entry IDCO DSEntry.003 and the caller is prompted to restate the phone number or \u201cactivate me\u201d or enter the phone number on the keypad at step . Call flow  then returns to point of decision IDCO POD.001 to determine recognition confidence.","Referring to , a flowchart of a process for collecting and analyzing data from a speech application is depicted in accordance with one embodiment of the present disclosure. In this example, process  may be implemented as computer readable medium comprising instructions executing within IVR data collection object framework . Process  begins at step  to define a set of interactive voice response data collection objects for a call flow in a speech application.","Next, process  continues to step  to collect data using defined IDCOs during execution of the call flow in the speech application. Process  then continues to analyze collected data in the vertical benchmarking and bootstrapping engine. For example, data patterns of the collected data may be analyzed. Process  then continues to step  to store the collected and analyzed data in a repository. Process  then continues to step  to present the data to analysts and executives in a variety of formats, for example, VXML or other proprietary formats. Process  completes at step  when the analysts and executives retrieve the data and analyze the data in a cross-vertical and intra-vertical manner.","Referring to , a diagram of a system for IVR data collection object framework and vertical benchmarking and bootstrapping engine is depicted in accordance with one embodiment of the present disclosure. System  comprises an open framework , a data repository , data processing system  through which different stakeholders communicate with the open framework .","In one embodiment, open framework  may be implemented in a computer readable medium comprising instructions executing within a server . Systems  and  may be a data processing system, such as a desktop computer, a laptop computer, a server or any other type of device capable of sending and receive information via a wired or wireless protocol. The transfer of information or data between data processing system , server , and data repository  may be accomplished via at least one of a wireless protocol, a wired protocol and a combination of a wireless protocol and a wired protocol. The steps performed in this figure are performed by software, hardware, firmware, and\/or the combination of software, hardware, and\/or firmware.","Open framework  comprises an XML wrapper for wrapping and unwrapping design elements provided by different stakeholders. These stakeholders include user interface designer , grammar developer , speech analyst , project manager , application developer , other analysts , and other managers . In addition, open framework  comprises an integration engine  that integrates information provided by these stakeholders and generates derivables or speech application design and status  using design elements.","Open framework  further comprises a vertical benchmarking and bootstrapping engine  that communicates with integration engine  for collecting data during execution of speech application. Vertical benchmarking and bootstrapping engine  also performs analysis on the collected data based on the IDCOs defined in the IDCO framework  and stores the data in data repository . IDCO framework  presents the data from the data repository to analysts and executives, such as other analysts  and managers , for cross-vertical and intra-vertical analysis.","In summary, the present disclosure provides an interactive voice response data collection object framework and benchmarking and bootstrapping engine for collecting and analyzing data from a speech application. The set of objects are defined based on their purposes and collected data may be presented to analysts and executives in a variety of formats to perform intra-vertical and cross-vertical analysis. Based on the presented data, analysts and executives may categorize data, identify critical key performance indices, and compare performance metrics in a cross-vertical and intra-vertical manner. In addition, by providing a common set of data collection objects for the speech application, different stakeholders may analyze the data even with continuous changing business requirements.","Although the above descriptions set forth preferred embodiments, it will be understood that there is no intent to limit the embodiment of the disclosure by such disclosure, but rather, it is intended to cover all modifications, substitutions, and alternate implementations falling within the spirit and scope of the embodiment of the disclosure. The embodiments are intended to cover capabilities and concepts whether they be via a loosely coupled set of components or they be converged into one or more integrated components, devices, circuits, and\/or software programs."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 18"}]},"DETDESC":[{},{}]}
