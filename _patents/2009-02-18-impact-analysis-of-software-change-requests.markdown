---
title: Impact analysis of software change requests
abstract: In one example, a system is provided to determine the impact of implementing a change request on a software program. The system may include an architecture model of the software program that includes components. Each of the components may have attributes that may be used by the system to determine a degree of effort to modify each respective one of the components. Components may be associated with keywords. The system may search the change request for the keywords to identify components that may be impacted by the change request. The system may determine the degree of effort to modify any impacted component based on the architecture model. The system may determine the overall impact on the software program based on the degree of effort determined for the impacted components.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08352914&OS=08352914&RS=08352914
owner: Accenture Global Services Limited
number: 08352914
owner_city: Dublin
owner_country: IE
publication_date: 20090218
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"p":["This application claims priority under 35 U.S.C. \u00a7119 to Indian Patent Application No. 2621\/MUM\/2008, filed Dec. 15, 2008, the entire contents of which are hereby incorporated herein by reference.","The present disclosure relates generally to software and specifically to software maintanence.","Software programs may be modified over time. For example, functionality may be added to, removed from, or altered in a software program. The modifications may be to correct programmatic errors in the software program or to implement enhancements to the software program. Requests to modify the software program may be written in a document called a change request.","Software developers may analyze the change request and modify the software program accordingly. One or more software developers may first estimate the degree of effort that may be expanded in order to modify the software program. The degree of effort may be useful, for example, to schedule the implementation of the change request. The degree of effort may also be useful, for example, to provide a customer with a cost estimate for implementing the change request.","To determine the degree of effort, the impact on the software program caused by implementing the change request may be analyzed. The process of determining the impact on the software program is known as impact analysis.","However, the software developer estimating the degree of effort may be inexperienced, unfamiliar with the source code of the software program, only familiar with a limited portion of the source code, or any combination thereof. The software program may have hundreds of thousands of lines of code or even millions of lines of code. Consequently, the estimation of the degree of effort to modify the software program may be difficult to accurately determine.","According to a first aspect, a system may determine an impact of an implementation of a change request on a software program. The system may include an architecture model of the software program that includes components, such as functional components. The system may determine one or more identified changes from the change request, where each of the identified changes identifies a corresponding change in the software program that may be made in order to implement the change request. The system may determine component impacts based on the identified changes. Each of the component impacts corresponds to a respective one of the components to be impacted in the implementation of the change request, where each of the component impacts includes a degree of effort to be expended by a developer in order to implement at least a portion of a corresponding one of the identified changes.","In a second aspect, a method may be provided to determine an impact of an implementation of a change request on a software program. An architecture model of the software program may be provided that includes components, such as functional components. A keyword may be associated with a component. In one example, the keyword may be associated with the component in the architecture model. Alternatively or in addition, the keyword may be associated with the component in a keyword database. An identified change requested in the change request may be determined that includes a change type, which indicates a type of change requested in the identified change. The keyword may be found in the change request. A component impact may be determined based on the identified change and based on the architecture model of the software program. The component impact may correspond to the component and may include a degree of effort to implement at least a portion of the identified change.","In a third aspect, a computer readable medium may be provided to determine an impact of an implementation of a change request on a software program. Computer executable instructions may be included on the computer readable medium. The instructions may retrieve a component included in an architecture model of the software program, where the component is associated with a keyword. The instruction may determine a component type of the component. The component type may be one of multiple component types included in a type system used to model the software program. The instructions may find the keyword in the change request. The instructions may determine a component impact based on the component and the component type, where the component impact includes a degree of effort to modify the component in order to implement the change request.","The present invention is defined by the following claims, and nothing in this section should be taken as a limitation on those claims. Further aspects and advantages of the invention are discussed below in conjunction with the example embodiments.","In one example, a computer includes an architecture model of a software program that is under consideration for estimating the impact of modification. The architecture model may include an abstract, coarse-grained model of the software program. The architecture model may include components that have attributes. The attributes may describe properties of a component such as the number of lines of code included in the component and a list of components that depend on that component. A user may enter a change request into the computer. The computer may search the text of the change request for relevant keywords. The keywords may be associated with one or more components that are included in the architecture model. The computer may determine a degree of effort to implement the change request based a comparison of the attributes of the components with predetermined threshold values, where the components are associated with the keywords. For example, making a change to a component with no other components that depend on the component may be easier than making a change to a component with more than 5 dependent components. In other examples, the computer may determine the degree of effort to implement the change request based on alternative and\/or additional factors.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 1","b":["100","100","102","104","100","100","102","104","100","102","104"]},"The impact estimator  may be any device or combination of devices that determines the degree of effort to implement the change request. The impact estimator  may include a processor , a memory , a display , and an input device . The impact estimator  may include more, fewer, or different components. For example, the impact estimator  may include a web browser client and web server, where the web browser client is in communication with the web server over a network. In different examples, the impact estimator  may be a computer, a server, a laptop computer, a desktop computer, or a Personal Digital Assistant.","The processor  may be in communication with the memory . The processor may also be in communication with additional components, such as the display  and the input device . The processor  may be a general processor, central processing unit, server, application specific integrated circuit (ASIC), digital signal processor, field programmable gate array (FPGA), digital circuit, analog circuit, or combinations thereof. The processor  may be one or more devices operable to execute computer executable instructions.","The memory  may be any now known, or later discovered, data storage device. The memory  may be a non-volatile and\/or volatile memory, such as a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM), or flash memory. The memory  may include an optical, magnetic (hard-drive) or any other form of data storage device.","The display  may be any electro-optical device for displaying data, such as a liquid crystal display (LCD), a cathode ray tube (CRT), an electro-luminescent display, a plasma display panel (PDP), a vacuum florescent display (VFD), or any other display device. The input device  may be any electro-mechanical device, electro-optical device, or any other type of device, now known or later discovered that is configured to convert user inputs into electrical signals such as a mouse, joystick, trackball, camera, keyboard, keypad, wireless device, microphone for voice commands, scroll wheel, button, or touch-screen display.","The memory  may include computer code. The computer code may include instructions executable with the processor . The computer code may include logic embedded in the instructions. The computer code may be written in any computer language now known or later discovered, such as C++, C#, Java, Pascal, Visual Basic, Perl, HyperText Markup Language (HTML), JavaScript, assembly language, and any combination thereof. The functionality of the impact estimator  may be implemented with the computer executable instructions in conjunction with the components included in the impact estimator .","The keyword database  may include a memory, such as the memory  included in the impact estimator , with any electronic collection of information stored therein. The information may be organized so that the information may be accessed, managed, and updated. Examples of the keyword database  include but are not limited to a Relational Database Management System (RDBMS), an object-oriented database, an extensible markup language (XML) database, a file system, memory structures, or other now known or later developed data organization and storage mechanism. The keyword database  may use any type of memory and structure, such as a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM), flash memory, optical memory, magnetic (hard-drive or tape) memory or other memory device.","The memory  may include a change request . The change request  may be text that describes a request to modify the software program.","An architecture model  may be provided in the memory . In a different example, the architecture model  may accessed over a network. The architecture model  may be generated from the source code of the software program to be analyzed, manually entered, or a combination thereof. The architecture model  describes the architecture of a software system using a modeling language. The Institute of Electrical and Electronics Engineers (IEEE) has put forth a standard definition of the architecture of a software system, namely IEEE 1471. According to the IEEE definition, the architecture of a software system is the fundamental organization of the software system embodied in components, the relationships between the components, the relationship with the environment of the software system and the principles governing the design and evolution of the software system. The software system may include the software program or multiple software programs to be analyzed by the impact Estimator .","The architecture of the software system may be described using a set of views or perspectives. Examples of views may include an application view and an execution view. The application view describes the software system from a functional perspective by describing functional subsystems and the interaction of the functional subsystems. The execution view describes the system from a runtime or execution perspective by describing the technology and supporting software infrastructure on which the software program or software programs run. Examples of supporting software infrastructure include an application server, a web server, and a database server. The architecture model  may contain one or more architecture views.","The architecture model  of the software system may be described using an architecture description language (ADL). An example of an ADL is Acme, developed at Carnegie Mellon University. The architecture model  may include one or more components and connectors. Each one of the components may model any computation and may offer one or more services to other components. The component may include ports. The component may offer the services through the ports. Each one of the connectors may model communication between two or more components. The connector may establish rules to govern component interaction. For example, the connector may include rules that determine the type of component ports with which the connector may be attached. In one example, the connector may include an identification of a protocol and an identification of a connector type.","Each of the components may be associated with a component type. The component type describes the type of the component. Examples of the component type include a \u201cUser Interface Component,\u201d a \u201cProxy Component,\u201d a \u201cBusiness Logic Component,\u201d a \u201cDatabase Component,\u201d an \u201cApplication Server Component,\u201d and a \u201cCustomer Relationship Management Component.\u201d The component may model functionality at any desired level of abstraction. Furthermore, any one of the components may include additional components that model functionality at a lower level of abstraction than the component.","Each of the connectors may be associated with a connector type. The connector type describes the type of the associated connector. Examples of the connector type include a database call connector, an asynchronous messaging connector, a remote procedure call connector, a Hypertext Transfer Protocol (HTTP) connector, and an HTTP-SOAP (Simple Object Access Protocol) connector.","In one example, the system  may additionally include a commercial off-the-shelf software (COTS) product library . The COTS product library  may include a database that includes descriptions of one or more commercial off-the-shelf software products and\/or software libraries that may be available to the software program under maintenance. For example, the COTS product library  may include a description of a Java application server, an RDBMS, a web server, and\/or an asynchronous messaging service. A product described in the COTS product library  may be described with product attributes. Examples of products attributes include the name of the product, a COTS product type, a manufacturer name, a version number, and a list of services provided by the product. The COTS product type may describe what type of the product. Examples of the COTS product type include \u201cApplication Server,\u201d \u201cDatabase,\u201d \u201cAdapter,\u201d and \u201cMessage Bus.\u201d The COTS product type may be stored as a String or as a more complex data structure used to model COTS software products and\/or libraries.","In one example, the COTS product library  may be included in the architecture model . In another example, the COTS product library  may be included in the keyword database . In still another example, the COTS product library  may be a separate component as illustrated in .","During operation, the impact estimator  may analyze the software program based on the architecture model  to determine the degree of effort to implement the change request . First, the impact estimator  may store the change request  in the memory . For example, the change request  may be received in an e-mail. In response to a user selection made with the input device , the impact estimator  may store the received change request  in the memory . In another example, the change request  may be received from a Web Service, using a protocol such as Simple Object Access Protocol (SOAP). In yet another example, a user may enter the change request  into the memory  using the input device , such as with a keyboard. One example of an architecture modeling approach is described in the paper entitled \u201cFormal Architecture Modeling of Business Applications-A Software Maintenance Case Study,\u201d by Santonu Sarkar and Arun Panayappan, and published at IEEE Tencon Conference, November 2008.","The impact estimator  may determine which of the components in the architecture model  may be impacted in an implementation of the change request  using keyword matching. A keyword or term may be a word, a phrase, a symbol, any other identifier, or any combination thereof.","In one example, components in the architecture model  may be directly associated with keywords. The association may be in the architecture model  and\/or in the keyword database . If the keyword is found in the change request , then each of the components that are associated with the keyword may potentially be impacted.","Alternatively or additionally, the keyword may be associated with one or more business scenarios. Each of the business scenarios may describe a use of the software program. The business scenarios may be referred to as business use cases, or use cases. Each of the business scenarios may be implemented by one or more of the components. Examples of the business scenarios include changing a customer address, identifying products to purchase, ordering the products, billing for orders placed, provisioning of sold products, and managing customer relationships. In one example, one or more keywords associated with the business scenarios may be stored in the architecture model . The one or more keywords may be stored as one or more attributes of the business scenarios in the architecture model. In another example, keywords associated with the business scenarios may be stored in the keyword database . The association may be in the architecture model  and\/or in the keyword database .","If the keyword is found in the change request , then the impact estimator  may determine the business scenario or business scenarios that are associated with the keyword. The impact estimator  may determine that each of the components implementing the associated business scenario(s) are impacted. Therefore, these components may be considered to be indirectly associated with the keyword.","In one example, the impact estimator  may determine an identified change  or a set of identified changes based on the keyword search of the change request . The identified change  may identify a change type  and at least one of the keywords  that are included in change request . The change type  may describe a type of change requested in the change request . For example, the impact estimator  may parse the change request  to find each of the sentences included in the change request . The impact estimator  may analyze each of the sentences separately. In analyzing a sentence, if keywords indicating that the sentence relates to a change are found in the sentence, or the number found exceeds a predetermined threshold, then the sentence may include a request to change the software program. Alternatively or additionally, the impact estimator  may search the sentence for keywords that indicate the type of change requested in the sentence. For example, the keywords may indicate that the sentence requests one or more of the following types of changes: a business logic\/flow change, a database change, an external system integration change, a user interface change, or an infrastructure change. The impact estimator  may store the identified change  corresponding to each respective one of the types of the changes requested in the sentence. The identified change  may include the change type  and the keywords  included in the sentence. In one example, the keywords  included in the identified change  may be the words in the sentence. In another example, the keywords  included in the identified change  may include keywords in the sentence that are associated directly or indirectly with components in the architecture model . In still another example, the keywords included in the identified change  may be all of the words in the change request . The keywords  included in the identified change  may or may not include the keywords that identified the sentence as requesting a change or that identified the type of change requested in the sentence. In one example, the identified change  may include a pointer to the sentence.","The impact estimator  may use the identified change  or set of identified changes to determine which of the components in the architecture model  may be impacted by an implementation of the change request . For example, instead of just matching the keywords  in the identified change  with associated components in the architecture model , the impact estimator  may further limit the impacted components to those components to which the change type  is applicable. For example, if the component is a \u201cDatabase Component\u201d component and the change type  is a user interface change, the component may not be impacted when implementing the identified change even if the component is associated with one of the keywords .","The impact estimator  may determine a component impact  corresponding to a respective one of the components that may be impacted when implementing the change request . The component impact  may represent an impact on the corresponding component when implementing the change request . The component impact  may include a degree of effort  to implement at least a portion of the change request  with respect to the corresponding component. For example, the degree of effort  may include a level of difficulty , such as \u201ceasy,\u201d \u201cmedium difficulty,\u201d and \u201chard.\u201d In other examples, the level of difficulty  may be \u201cSimple,\u201d \u201cMedium,\u201d and \u201cComplex.\u201d The impact estimator  may determine the degree of effort  using heuristics as described later.","Alternatively or additionally, the degree of effort  may include a number of hours a developer would expend to implement the change request  with respect to the corresponding component. In one example, the component impact  may include a component identifier  and\/or a component type identifier . The component identifier  may be any identifier to identify the component corresponding to the component impact . The component type identifier  may be any identifier to identify the component type of the component.","In one example, the component impact  may include a component change type . The component change type  may indicate the type of change to be made to the component. For example, the component change type , may be to affect a User Interface (UI) field, to add a complex UI, to drop a database field, or any other type of change that may be made to the component.","The impact estimator  may also determine more than one component impact  for each of the components that may be impacted. In one example, the impact estimator  may determine the component impact  based on the component identified by the component identifier . For example, the component impact  may be based on attributes of the component. The attributes are discussed later in reference to . In a second example, the impact estimator  may determine the component impact  based on the component and the change type . The change type  may, for example, be included in the identified change . Alternatively, the change type  may be determined from the component type of the component. For example, there may be a mapping between change types  and component types. The mapping may be one to many, many to one, one to one, or many to many. The impact estimator  may use the mapping to determine which change type  or change types are applicable to the component type identified by the component type identifier . The determination of the component impact  or component impacts is described later.","After determining the component impacts, the impact estimator  may determine an overall impact of implementing the change request . For example, the impact estimator  may determine the overall impact by summing the hours included in the degree of effort  of each of the component impacts.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 2","FIG. 2"],"b":["116","202","204","206","208","210","212","202","204","204","206","208","208","210","210","212"]},"Each of the component types may identify attributes of components of the respective one of the component types. For example, the component of the type database base component  may include the following attributes: tables, relationships between the tables, a count of the columns on each of the tables, and a data volume count that indicates the amount of data in each of the tables. The component of type \u201cExternal System\u201d  may include the following attributes: a list of business scenarios that use the component, a complexity metric, and a technology identifier. The complexity metric may be any now known or later discovered measurement of complexity, such as Cyclomatic Complexity or Maintainability Index (MI). For example, the complexity metric may indicate the degree of complexity involved in programmatically interacting with the component. The technology identifier may identify the type of technology provided by the \u201cExternal System\u201d. For example, the technology identifier may be \u201casynchronous messaging.\u201d The component of the type business logic subsystem  may include the following attributes: a list of business scenarios that use the component, a list of source code files associated with the component, the number of lines of code included in the source code files, a complexity metric, a technology identifier, and a list of internal dependencies between services provided by the component. The component of the type \u201cUI Component\u201d  may include following attributes: a list of business scenarios that use the component, page navigations between components of the type \u201cUI Screen Component\u201d , and a technology identifier. The component of the type \u201cUI Screen Component\u201d  may include the following attributes: a list of business scenarios that use the component, a list of source files used to implement the display page represented by the component, the number of lines of code included in the source files, a complexity metric, a technology identifier, a number of static fields included on the display page, a number of dynamic fields included on the display page, and a number of field validations performed in connection with the display page. The component of the \u201cProxy Component\u201d  may include the following attributes: a list of source files used to implement the component, the number of lines of code included in the source files, and a technology identifier. In different examples, the architecture model  may include more, fewer, or different component types and each of the component types may include more, fewer, or different attributes.",{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 3","b":["114","102","124","114"]},"In step , the impact estimator  may determine a set of identified changes  as described earlier. In step , the impact estimator  may display the identified changes . The user may optionally modify the set of identified changes  by making selections with the input device .","The impact estimator  may iterate through each of the identified changes  starting in step . Depending on the change type  of the identified change , the impact estimator  may use a different methodology to determine one or more component impacts  from the identified change . Each of the different methods is represented by a corresponding one of the steps , , , , and . Examples of such methods are described later.","In step , the impact estimator  may determine an overall degree of effort based on the degree of effort  included in each of the component impacts . Where the degree of effort  includes the level of difficulty , the impact estimator  may use an estimation model to calculate, for example, a number of developer hours that correspond to the level of difficulty .","In one example, the impact estimator  may display the component impacts  or a portion of the component impacts . For example, the impact estimator  may display an output on the display  similar to the example display screen illustrated in .","The impact estimator  may make further use of the information included in the component impacts . For example, in step , the impact estimator  may query a project server for relevant resources and create relevant tasks of a project plan in the project server. For example, one of the relevant resources may be a developer whose expertise is on the component identified by the component identifier  of one of the identified changes . The impact estimator  may create a task for the developer for the appropriate length of time, where the task corresponds to the identified change . Additionally, or alternatively, the impact estimator  may create tasks corresponding to one or more of the component impacts , where the tasks conform to a predetermined standard, such as a naming standard or a standard delivery methodology. The impact estimator  may query the project server for any matching tasks, where the matching tasks have common names or share one or more other common attributes such as a resource assigned to the tasks. If one of the tasks does not have a corresponding matching task, the user may be prompted to determine whether the task should be manually modified or whether the task should added as a new task without further modification. The project server may prompt the user to re-baseline the project plan after the tasks are created and\/or matched with existing tasks.","In step , a project plan may be published based on the tasks created by the impact estimator  in the project server.","The project server may be any software program that creates and modifies a project plan, where the project plan includes tasks associated with determined time frames and the tasks may be directed to an overall goal of the project plan. An example of the project server includes Microsoft\u00ae Project Server from Microsoft Corporation of Redmond, Wash. In one example, the project server may be in communication with the impact estimator  over a network. In another example, the project server may be included in the impact estimator .",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 4","FIG. 4"],"b":["124","120"]},"The operation may reflect a heuristic solution. For example, the operation may begin in step  with the impact estimator  searching the architecture model  for components that are the type \u201cUI Component\u201d  and that are associated with one or more of the keywords  in the identified change . In step , the impact estimator  may display the matching components or the attributes of the matching components in the display . The user may selectively modify a list of the components or leave the list of the components unchanged.","Each of the matching components may be separately processed starting in step . Each of the components is the type \u201cUI Component\u201d . Therefore, each of the components may include screen components that are the type \u201cUI Screen Component\u201d . The impact estimator  may obtain the list of screen components in step . The user may selectively modify the list of screen components in step . The user may indicate which screen components may be changed or removed. The user may further specify whether one or more new screen components should be added to the list of screen components. The new screen components may not have previously been in the architecture model .","Starting in step , each of the screen components may be separately processed. If the screen component is to be removed, then the operation may proceed to step . In step , the impact estimator  may read the model to determine whether the screen component includes any fields that add data to a web session, to a database, or to an HTTP request. For each one of these kinds of fields, the impact estimator  may create a new component impact . The component impact  may include the component identifier  to identify the screen component, the component change type  of an affected state field, and the level of difficulty  of medium difficulty. The appropriate level of difficulty  may determined based on past experiences and may be configurable. The method may include different and\/or additional steps to process the screen component to be removed.","Alternatively, if screen component is to be changed or is new, then the operation may proceed to step . In step , the impact estimator  may determine whether the screen component is a new screen component without any existing UI. If so, then the impact estimator  may create a new component impact . The component impact  may include the component identifier  to identify the screen component, the component change type  of an addition of a new UI, and the level of difficulty  of difficult.","From step , the operation may proceed to step . In step , the impact estimator  may determine whether the screen component is new. If so, the impact estimator  may search the architecture model  for available technologies. The impact estimator  may display the list of technologies. The user may either select a technology from among the list of technologies or specify a new one. If the user selects a new technology, the impact estimator  may create a new component impact . The component impact  may include the component identifier  to identify the screen component, the component change type  of a new technology change, and the level of difficulty  of difficult. However, if the user selects a technology from the list of existing technologies, the impact estimator  may create a new component impact  with different values. For example, the component impact  may include the component identifier  to identify the screen component, the component change type  of a technology change, and the level of difficulty  of medium.","The operation may include different and\/or additional steps to analyze a new or modified screen component. For example, in one step, the impact estimator  may determine whether a navigation change would occur based on user input and based on the attribute of the parent \u201cUI Component\u201d  that describes navigations between components of the type \u201cUI Screen Component\u201d . A corresponding new component impact  may be created if the navigation change would occur. If the number of navigation changes exceeds a threshold amount, the level of difficulty  may increase. Additionally or alternatively, in one step, the impact estimator  may compare the number of fields on the screen component that require validation with a threshold value. If the threshold value is exceeded, then the impact estimator  may create a new component impact  that indicates an impact to the screen component may be a difficult field validation change. By using various attributes on the screen component and\/or the parent UI component, the impact estimator  may create component impacts  that include various component change types  and various levels of difficulty .","In step , the operation may return to step  to repeat for each of the screen components of the parent UI component. In step , the operation may return to step  to repeat for each of the matching components that are UI components .",{"@attributes":{"id":"p-0083","num":"0082"},"figref":["FIG. 5","FIG. 5"],"b":["124","120"]},"The operation may begin in step  by the impact estimator  searching the architecture model  for components that are the type \u201cDatabase Component\u201d  and that are associated with the keywords  in the identified change . In step , the impact estimator  may display the matching components. Additionally the user may specify whether a change to the component impacts data, whether the change impacts the schema of the database, or both for each of the matching components.","Starting in step , each of the matching components may be processed separately. If the data of the matching component is impacted, the operation may proceed to step . In step , the impact estimator  may determine, based on the attribute of the component that identifies tables and based on the attribute that identifies the amount of data in each of the tables, whether the total amount of data in the tables exceeds a predetermined threshold. If so, the impact estimator  may create a new component impact  that includes the component identifier  that identifies the component, the component change type  of a data volume change, and the level of difficulty  of difficult.","In step , if the change impacts the schema, then the impact estimator  may determine whether the number of impacted columns in the tables exceeds a predetermined threshold. If so, the impact estimator  may create a new component impact  that includes the component identifier  that identifies the component, the component change type  of a schema change, and the level of difficulty  of difficult. For example, where the number of columns is less than a lower predetermined threshold, the level of difficulty  may be easy.","In step , the operation may return to step  until all of the matching components are processed. At that time the operation may complete.","Referring again to , operations corresponding to the business logic\/flow change, the external system integration change, and the infrastructure change in steps , , and  respectively may be similarly performed. The impact estimator  may create one or more component impacts  based on the matched components, the architecture model , attributes of components in the architecture model , user input received from the input device , or any combination thereof.",{"@attributes":{"id":"p-0089","num":"0088"},"figref":["FIG. 6","FIG. 6"],"b":"114"},"The method may begin in step  by providing the architecture model  of the software program. The architecture model  may include multiple components. The method may continue in step  by associating the keyword with the impacted component that is included among the components. For example, the keyword may be a property of the impacted component in the architecture model . In a different example, the keyword may be associated with the impacted component in the keyword database . In another example, the method may include steps to associate additional keywords with one or more of the components.","In step , the method may continue by determining the identified change  requested in the change request . The identified change  may include the change type  that indicates the type of change requested in the identified change .","In step , the method may continue by finding the keyword in the change request . If the keyword is found, the method may continue to step . If the keyword is not found, the method may complete. In a different example, if the keyword is not found, the method may search for the additional keywords that are associated with one or more of the components.","In step , the method may proceed by determining the component impact  based on the identified change  and based on the architecture model  of the software program. The component impact  may include the degree of effort  to implement at least a portion of the identified change .","In step , the method may include determining an overall impact based on the component impact . Additionally, determining the overall impact may include determining the overall impact based on multiple component impacts.","A set of keywords in the keyword database  may be indicative of a concept such as a technology domain, a functional concept, or some other concept. Additional sets of keywords may be indicative of additional technology domains, functional concepts, and\/or other concept. The keyword database  may include the concepts, the sets of keywords, and associations between each of the sets of keywords and any one or more of the concepts.","The technology domain may indicate a concept related to technology. For example, the technology domain \u201cDatabase,\u201d may be associated with keywords such as \u201cdb,\u201d \u201ctransaction,\u201d \u201crecord,\u201d \u201ctable,\u201d \u201ccommit,\u201d or with any other keyword used in connection with databases. Similarly, \u201cUI\u201d may be a technology domain concept associated with a set of keywords including \u201cjsp,\u201d \u201caspx,\u201d \u201chtml,\u201d \u201cuserinterface,\u201d \u201ccombobox,\u201d or any other keyword used in connection with user interfaces.","The functional concept may indicate a concept related to functionality in one or more software programs. For example, a set of keywords that includes \u201cuser,\u201d \u201ccustomer,\u201d and \u201cgold-customer\u201d may be indicative of a customer. A second example set of keywords may include \u201caccount,\u201d \u201csavings,\u201d and \u201cchecking\u201d and be indicative of the functional concept of a bank account in the context of a banking application.","A relationship may exist between two or more concepts. For example, the concept \u201cCustomer\u201d may be related to the concept \u201cAccount.\u201d The concepts, relationships between the concepts, keywords, and associations between the keywords and the concepts may be stored in any now known or later discovered format in the keyword database . Additionally, ontology may be used to model concepts more formally. The resulting model of the concepts may be stored in the keyword database .","The keyword database  may be divided into multiple databases. For example, the keyword database  may include a technology domain database to store information about technology domains and a functional concept database to store information about functional concepts.","The technology domain database may be independent of the functional concept database. For example, the technology domain database may be used in the context of a Telecom, or a Banking or a Retail application. For example, the technology domain database may be created for \u201cUI\u201d, \u201cBusinessLogic\u201d, \u201cDatabase\u201d, \u201cExternalIntegration\u201d component types and used with any software program modeled using such component types.","The functional concept database may be constructed for a predetermined application domain, such as Telecom, Banking or Retail. For example, in the domain of Telecom, functional concepts may include \u201cBilling\u201d, \u201cCustomer\u201d, \u201cDSL\u201d and any other Telecom related keyword. Similarly, in the domain of Banking, functional concepts may include \u201cInterest\u201d, \u201cAccount\u201d, \u201cLoan\u201d and any other Banking related keyword. For each domain, functional concepts may be associated with relevant keywords.","The keyword database  may be created manually or semi-automatically. For example, the keyword database  may be generated by processing documents such as use case specifications and requirement specifications.","The architecture model  may include components that represent functional concepts. For example, the architecture model  may include a \u201cBillingManagment\u201d component that handles various types of billing. The \u201cBillingManagement\u201d component may be linked to a set of source code files that implements the functionality of \u201cBillingManagement.\u201d The impact estimator  may use the keywords stored in the functional concept database to determine how closely the keywords match the \u201cBillingManagment\u201d component. Multiple techniques may be used to determine the closeness. For example, the impact estimator  may determine how frequently one of the keywords appears in the set of source code files linked to the component. If the frequency exceeds a determined threshold, such as a user-determined threshold, the keyword may be associated with the component.","The change request  may be parsed into a set of sentences. For each of the sentences, the impact estimator  may identify verbs that denote a change instruction. For example, the verbs may indicate whether the sentence indicates a change is to add, modify, or retire a feature. Sentences such as \u201cAdd a new feature to the Email-Module\u201d, \u201cModify the DSL Billing\u201d, \u201cRetire application X\u201d indicates \u201cadd,\u201d \u201cmodify,\u201d and \u201cretire\u201d respectively.","To determine the change type  of the identified change  in the sentence, the impact estimator  may use the technology domain database. Determining the change type  may be manual, automated, or semi-automated. For example, keyword matching may determine whether the sentence refers to a technology domain associated with one of the change types . For example, if one of the keywords  is associated with user interface related technologies, then the change type  may be the user interface change. When analyzing the identified change  with the change type  of the user interface change, the impact estimator may limit analysis to components in the architecture model  that are user interface type components.","Furthermore, to identify a potential set of components that may be impacted by the identified change , the impact estimator  may use a text-processing approach and keyword search. For example, keywords  that are nouns may be identified. Next, the impact estimator  may determine whether the identified keywords  are in a list of keywords associated with one of the components or with one of the connectors in the architecture model . The matching component and\/or connector may be impacted by the change request .","In one example, the change request  may follow a template instead of using free-form text. Analysis of the change request  may be more precise and accurate if fields in the template identify the change type  and\/or the identified changes .",{"@attributes":{"id":"p-0108","num":"0107"},"figref":"FIG. 7","b":["124","102","124","118"]},{"@attributes":{"id":"p-0109","num":"0108"},"figref":["FIG. 8","FIG. 8","FIG. 3"],"b":["124","120","312"]},"The operation may begin in step  by searching the architecture model  for components of the type \u201cExternal System\u201d  and that are associated with the keywords  in order to determine the impacted \u201cExternal System\u201d components. In step , operation may include searching the architecture model  for components immediately connected to the impacted \u201cExternal System\u201d components in order to determine which components are connected components. One of the components may be immediately connected to another one of the components if both are connected to each other in via the one of the connectors in the architecture model .","In step , the impact estimator  may create an integration impact list. Each of the items in the integration impact list may identify one of the impacted \u201cExternal System\u201d components, one of the connected components that is connected to the corresponding one of the impacted \u201cExternal System\u201d components, and the connector connecting the two components.","From step  to step , each of the items in the integration impact list may be processed separately. For example, in step , the connector identified in the item being processed may be the subject of an integration technology analysis operation to determine component impacts . An example of such an operation is illustrated in . In another example, in step , each of the services associated with the \u201cExternal System\u201d component identified in the item may be the subject of an integration service analysis operation. An example of such an operation is illustrated in .",{"@attributes":{"id":"p-0113","num":"0112"},"figref":"FIG. 9","b":["124","102","136"]},{"@attributes":{"id":"p-0114","num":"0113"},"figref":"FIG. 10","b":["124","116"]},{"@attributes":{"id":"p-0115","num":"0114"},"figref":["FIG. 11","FIG. 4"],"b":["124","418"]},{"@attributes":{"id":"p-0116","num":"0115"},"figref":["FIG. 12","FIG. 4"],"b":["124","416"]},{"@attributes":{"id":"p-0117","num":"0116"},"figref":["FIG. 13","FIG. 4"],"b":["124","416"]},{"@attributes":{"id":"p-0118","num":"0117"},"figref":["FIG. 14","FIG. 4"],"b":["124","416"]},{"@attributes":{"id":"p-0119","num":"0118"},"figref":["FIG. 15","FIG. 4"],"b":["124","416"]},{"@attributes":{"id":"p-0120","num":"0119"},"figref":["FIG. 16","FIG. 4"],"b":["124","416"]},{"@attributes":{"id":"p-0121","num":"0120"},"figref":["FIG. 17","FIG. 17","FIG. 3"],"b":["124","120","308"]},"The operation may begin at step  by searching the architecture model  to identify business scenarios, or use cases, potentially impacted by the business logic\/flow change. For example, in step , the impact estimator  may search for uses cases associated with the keywords  of the identified change . In step , the user may modify the identified use cases. For example, the user may create a new use case, add one of the existing use cases that was not identified, and\/or remove one of the use cases identified by the impact estimator .","Starting in step , the identified use cases may be separately analyzed. For example in step , the operation may include evaluating the type of impact on the use case being analyzed. For example, the use case may be a new use case created by the user in step . In another example, the change request  may indicate that the use case is to be removed from the software program. In yet another example, the change request  may indicate that the use case is to be modified in some way. In still another example, the user may identify the type of impact on the use case with the user input device .","If the use case is a new use case, then in step , the user identify the degree of effort  involved in add such a use case. For example, the user may select easy, medium, or hard as the level of difficulty  from a list box control displayed on the display .","In step , the operation may include searching all of the components in the architecture model  that are both associated with the use case and that are internal components. The matching components may be identified as use case components. Internal components are those components that are not external components and that implement the use case. Internal components may be components included in the application under maintenance. External components may be third party components and\/or applications with which the application under maintenance integrates. In step , the operation may separately analyze each of the use case components.","For example, in step , the operation may include performing a component change impact analysis operation on the use case currently being analyzed. One such operation is illustrated in .","For example, in step , the operation may include performing a dependency impact analysis operation on the use case currently being analyzed. One such operation is illustrated in .","For example, in step , the operation may include performing a service impact analysis operation on the use case currently being analyzed. One such operation is illustrated in .",{"@attributes":{"id":"p-0129","num":"0128"},"figref":"FIG. 18","b":"124"},{"@attributes":{"id":"p-0130","num":"0129"},"figref":"FIG. 19","b":"124"},{"@attributes":{"id":"p-0131","num":"0130"},"figref":"FIG. 20","b":"124"},{"@attributes":{"id":"p-0132","num":"0131"},"figref":["FIG. 21","FIG. 5"],"b":["124","508"]},{"@attributes":{"id":"p-0133","num":"0132"},"figref":["FIG. 22","FIG. 5"],"b":["124","510"]},{"@attributes":{"id":"p-0134","num":"0133"},"figref":["FIG. 23","FIG. 24","FIGS. 23 and 24","FIG. 3"],"b":["124","120","124","120","316"]},"The operation may begin in step  by searching the change request  to identify whether the change request  involves any cross cutting concerns and whether the change request  involves any non-functional requirements. Cross cutting concerns relate to matters common to two or more components. For example, logging is an example of a cross cutting concern. Non-functional requirements may be desired qualities that include criteria that may be used to judge the operation of the software program, rather than specific behaviors. Non-functional requirements may be contrasted with functional requirements, which specify specific desired behavior or functions. In general, functional requirements describe what the software program is supposed to do, whereas non-functional requirements describe how the software program is supposed to be. Examples of non-functional requirements include desired performance and\/or scalability characteristics. In one example, searching for cross cutting concerns and non-functional requirements may include searching for keywords indicative of a cross cutting concern or a non-functional requirement respectively.","At step , the operation may include determining whether the change request  involves any cross cutting concerns. If not, the operation may continue to step . Otherwise, the operation may continue by checking for any one of the types of cross cutting concerns.","For example, in step , the operation may include checking whether the change request  involves logging. If the change request  does involve logging, then the operation may include, at step , adding a new component impact  with the component change type  being a \u201ccomplex logging requirement.\u201d","In another example, the operation may include checking whether the change request  involves an impact to instrumentation and\/or to database connection pooling. Accordingly, the operation may includes steps  and  respectively to add new component impacts  with a corresponding component change type .","At step , the operation may continue to step  as illustrated in . In step , the operation may include determining whether the change request  involves any non-functional requirements. If not, the operation may proceed to step , where the operation completes. Otherwise, the operation may continue by checking for any one of the non-functional requirements.","For example, the operation may include, at step , determining whether the change request  involves desired performance requirements. If so, then the operation, at step , may add a new component impact . The component change type  of the new component impact  may be \u201cadd performance requirement.\u201d The level of difficulty  may be, for example, \u201ccomplex\u201d or \u201cdifficult.\u201d","Different components may provide different functions for implementing the functionality of the various embodiments. The respective logic, software or instructions for implementing the processes, methods and\/or techniques discussed above are provided on computer-readable storage media or memories or other tangible media, such as a cache, buffer, RAM, removable media, hard drive, other computer readable storage media, or any other tangible media or any combination thereof. The tangible media include various types of volatile and nonvolatile storage media. The functions, acts or tasks illustrated in the figures or described herein are executed in response to one or more sets of logic or instructions stored in or on computer readable storage media. The functions, acts or tasks are independent of the particular type of instructions set, storage media, processor or processing strategy and may be performed by software, hardware, integrated circuits, firmware, micro code and the like, operating alone or in combination. Likewise, processing strategies may include multiprocessing, multitasking, parallel processing and the like. In one embodiment, the instructions are stored on a removable media device for reading by local or remote systems. In other embodiments, the logic or instructions are stored in a remote location for transfer through a computer network or over telephone lines. In yet other embodiments, the logic or instructions are stored within a given computer, central processing unit (\u201cCPU\u201d), graphics processing unit (\u201cGPU\u201d), or system.","Any of the devices, features, methods, and\/or techniques described may be mixed and matched to create different systems and methodologies.","While the invention has been described above by reference to various embodiments, it should be understood that many changes and modifications can be made without departing from the scope of the invention. It is therefore intended that the foregoing detailed description be regarded as illustrative rather than limiting, and that it be understood that it is the following claims, including all equivalents, that are intended to define the spirit and scope of this invention."],"heading":["TECHNICAL FIELD","BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The components and the figures are not necessarily to scale, emphasis instead being placed upon illustrating the principles of the invention. Moreover, in the figures, like-referenced numerals designate corresponding parts throughout the different views.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 24"}]},"DETDESC":[{},{}]}
