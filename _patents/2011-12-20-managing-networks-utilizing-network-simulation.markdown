---
title: Managing networks utilizing network simulation
abstract: Systems and methods are disclosed which facilitate the management of changes to a hosted network. In one aspect, a resource optimization manager obtains an identification of one or more changes to be implemented on a hosted network. The network validation manager component simulates the implementation of the identified changes and records state information associated with the monitored simulation. The network validation manager component generates a network change template that includes the information recorded from the simulation of the change to the hosted network. In another aspect, the network validation manager component can utilize network change templates to monitor the implementation of changes to the hosted network. The network change templates can then be utilized to determine whether to proceed with implementation of the change to the hosted network or whether to revert the hosted network to a condition prior to the implementation of the identified change.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09137121&OS=09137121&RS=09137121
owner: Amazon Technologies, Inc.
number: 09137121
owner_city: Seattle
owner_country: US
publication_date: 20111220
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"p":["Generally described, computing devices utilize a communication network, or a series of communication networks, to exchange data. Companies and organizations operate computer networks that interconnect a number of computing devices to support operations or provide services to third parties. The computing systems can be located in a single geographic location or located in multiple, distinct geographic locations (e.g., interconnected via private or public communication networks). Specifically, data centers or data processing centers, herein generally referred to as a \u201cdata center,\u201d may include a number of interconnected computing systems to provide computing resources to users of the data center. The data centers may be private data centers operated on behalf of an organization or public data centers operated on behalf, or for the benefit of, the general public.","In operation, a data center may need to configure, update, or modify components of an active network. For example, a data center may need to modify routing information utilized by one or more components or make modifications to the network topology. For purposes of scaling, however, data centers often would like to utilize automated tools to implement the configurations, updates, or modifications. However, such automated tools typically do not have an ability to monitor and assess state information associated with components of a hosted network, often referred to as the health of the network.","Generally described, aspects of the present disclosure relate to the management of hosted networks. Specifically, systems and methods are disclosed which facilitate the management of changes to a hosted network. Generally described, the changes to the hosted network can include a variety of modifications, additions, configurations to one or more components of hosted network. For purposes of the present application, such modifications, additions, configurations to one or more components of hosted network will be generally referred to as changes to the hosted network. Additionally, the hosted network can correspond to one or more configured physical computing devices, one or more host computing devices having configured virtual machine instances, and a combination thereof.","In one aspect, a resource optimization manager obtains an identification of one or more changes to be implemented on a hosted network. The network validation manager component then generates or obtains a model of the hosted network, such as through a modeling tool or simulation tool. The network validation manager component can simulate the implementation of the identified changes to the modeled network. During such a simulation, the network validation manager component can record state information associated with the at least some of the components associated with the simulated network. Additionally, the network validation manager component can conduct validation testing to determine whether the simulated change is likely to generate a fault condition in any of the components of the modeled network. Based on the monitored simulation, the network validation manager component generates a network change template that includes the information recorded from the simulation of the change to the modeled, hosted network.","In another aspect, the network validation manager component can utilize network change templates to monitor the implementation of changes to the hosted network. Illustratively, the network validation manager component receives an identification of one or more changes and obtains a corresponding network change template. During the implementation of the change on the hosted network, the network validation manager component records state information associated with at least some of the components associated with the hosted network. The network validation manager component then compares the state information with state information included in the network change template. The network change templates can then determine whether to proceed with implementation of the change to the hosted network or whether to revert the hosted network to a condition, or state, prior to the implementation of the identified change.","While specific embodiments and example applications of the present disclosure will now be described with reference to the drawings, these embodiments and example applications are intended to illustrate, and not limit, the present disclosure. Specifically, while various embodiments and aspects of the present disclosure will be described with regard to virtual machine instances running applications, one or more aspects of the present disclosure can be applied with physical computing devices or combinations of physical computing devices and virtual machine instances.",{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1","b":["100","100","102","104","104","108","108"]},"Illustratively, the virtual machine instances  may be configured to provide specific functionality associated with the components of the hosted network or simulation of the components of the hosted network. Examples of the types of desired functionality, include but are not limited to: database management, serving or distributing data or content (e.g., Web servers), managing load balancing or network resources, managing network connectivity or security, providing network addressing information, managing client or server redirection, or any other functionality associated with a data center. Additionally, one or more virtual machine instances  may be provisioned generically when a desired functionality is not specified or is otherwise not available. One skilled in the relevant art will appreciate that the virtual network  is logical in nature and can encompass physical computing devices  from various geographic regions.","The virtual network  also includes a network validation manager component  for managing the implementation of changes to a hosted network based on generated network change templates. As will be explained in greater detail below with regard to , in one aspect, the network validation manager component  may simulate at least portions of a hosted network and generate one or more network change templates based on observations\/testing of the simulated components of the hosted network. In another aspect, the network validation manager component  can utilize generated network change templates to monitor the implementation of changes to a hosted network and identify potential fault or error conditions. Illustratively, the network validation manager component  can include various components for implementing the functions of the network validation manager component, such as client interface component(s), network simulation interface(s), and data processing component(s). Still further, the network validation manager component  can also incorporate additional modules for generating the hosted network simulation. For example, the network validation manager component  can include an interface for causing the generation of a network simulation by a third party network service. In another example, the network validation manager component  can include modules or components for generating the model of hosted network or simulating changes to a modeled, hosted network.","It should be appreciated that, although the network validation manager component  is depicted for the purpose of example as a single logical component in illustrative , the routines and steps performed by the resource optimization manager component  may be distributed among any number of components and executed in hardware or software. Additionally, although the network validation manager component  is illustrated as logically associated with virtual network , the resource optimization manager component  may be implemented in a separate networked environment or in conjunction with client computing devices .","With continued reference to , the virtual network  can further include a network change data store  for maintaining state information and simulated network validation information generated, or otherwise obtained, by the network validation manager component . The network change data store  may correspond to network attached storage (NAS), database servers, which may be implemented in a centralized or distributed manner.","Connected to the virtual network  via a network  are multiple client computing devices . The network  may be, for instance, a wide area network (WAN), a local area network (LAN), or a global communications network. In some instances, the client computing devices  may interact with the virtual network  to request the resource optimizations for virtual machine instance types based on a definition of one or more applications associated with the virtual machine instance type. Still further, in some embodiments, the hosted network managed by the network validation manager component  may be separate from the virtual network , as illustrated in hosted network . As previously described, the hosted network, such as hosted network , may be made up of a number of physical computing devices, virtual machines hosted on a physical computing devices, or a combination thereof.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIGS. 2A and 2B","FIG. 1","FIG. 2A"],"b":["106","106","1","114","116"]},"Based on the received request for implementation of a network change, the network validation manager component  generates or obtains a model of at least a portion of the hosted network (). Illustratively, the network validation manager component  can utilize any one of a variety of network modeling and simulation tools. The network validation manager component  can include such modeling functionality or alternatively utilize a network-based modeling service. Additionally, in some embodiments, the network validation manager component  may already utilize pre-generated network models.","After generating, or otherwise obtaining, the network model, the network validation manager component  identifies one or more changes to the modeled hosted network. The network validation manager component  then simulates the implementation of the identified changes to the hosted network (). As described above, the network validation manager component  can utilize a variety of network modeling and simulation tools that provide such simulation functionality. During the simulation of the implementation of the changes, the network validation manager component  can collect various types of information associated with the implementation of the change (). In one aspect, the network validation manager component  collects state information associated with one or more of the simulated components of the hosted network. Examples of state information include routing table information and topological information, such as component relationship information, communication paths and routes, and the like. For example, the topological information can specify information related to the connectivity between two or more components of a modeled, hosted network. In another example, the topological information can also specify various communication mechanisms utilized between components of the modeled, hosted network, such as one or more communication protocols or configurations associated with a specific communication protocol.","In another aspect, the network validation manager component  conducts and collects information related to network validity information related to an assessment of the availability of one or more components of the hosted network, such as determining communication availability or conducting a communication path mapping. Illustratively, the network validation manager component  can store at least a subset of the information collected during the simulation of the change. Additionally, in the event that the simulation of a change results in a deterioration of the hosted network or a fault condition, the network validation manager component  generate additional notifications, such as an alarm.","In the event that the implementation of the identified change is successful, the network validation manager component  then generates a network change template that captures at least a portion of the state information or network validity information (). Illustratively, the network change template can corresponds to an array of state information that identifies various expected state values for an identified component of the hosted network. The network validation manager component  can then store the generated network change templates. Additionally, in other embodiments, the network validation manager component  can publish or transmit the network change templates. For example, the network validation manager component  can transmit the network change templates to a requesting entity or a network-based service.","With reference now to , upon the generation of the network change template(s) or upon some indication to implement a change in the hosted network, the network validation manager component  obtains the identification of changes to be implemented in the hosted network. In one embodiment, the network validation manager component  causes the initiation of the change in the hosted virtual or receives confirmation from a management component that network changes will be implemented (). For example, the network validation manager component  can interact with a change deployment tool that actually implements the identified change.","As the one or more changes are being implemented on the hosted network, the network validation manager component  obtains and records state information associated with one or more of the components of the hosted network (). The state information may be directly collected by the network validation manager component  or transmitted to the network validation manager component. In one embodiment, the network validation manager component  can collect the same state information, or a subset thereof, of the state information utilized to generate the network change template. In other embodiments, the network validation manager component  may omit the collection of some portion of the information, such as the network validity information.","In response to the collection of the state information, the network validation manager component  can then compare the collected state information with state information associated with the network change templates (). In one embodiment, the network validation manager component  can extract relevant state information from network change template. In another embodiment, the network validation manager component  can derive one or more values of state information based on information included in the network change template.","With the appropriate information from the network change template, the network validation manager component  can determine whether the collected state information matches, or is within an acceptable range of, the state information from the network change template. If so, the implementation of the change in the hosted network proceeds as expected. If there is a different (absolute or significant), the network validation manager component  can determine that there is an error or fault in the implementation of the change on the hosted network.","Based on the comparison, the network validation manager component  can generate an appropriate processing result (). For example, the network validation manager component  can generate one or more notifications or log entries. In another example, the network validation manager component  can initiate various mitigation techniques, such as a roll back, in the event non-matching state information is indicative of a fault condition. The network validation manager component  can implement additional or alternative mitigation techniques as well.","Turning now to , a routine  implemented by the network validation manager component  for generating network change template information will be described. Although routine  will be described with regard to implementation by the network validation manager component , one skilled in the relevant art will appreciate that alternative components may implement routine  or that one or more of the blocks may be implemented by a different component or in distributed manner.","At block , the network validation manager component  obtains topology and configuration information for at least a portion of a hosted network. Based on the topology and configuration information, the network validation manager component  then generates a model of at least a portion of the hosted network at block . Illustratively, the network validation manager component  can utilize any one of a variety of network modeling and simulation tools. The network validation manager component  can include such modeling functionality or alternatively utilize a network-based modeling service. Additionally, in some embodiments, the network validation manager component  may already utilize pre-generated network model. For example, the hosted network topology information may be included as part of the request to implement a change to the hosted network. Still further, the network validation manager component  can also utilize additional tools to obtain the topology or configuration information.","At block , the network validation manager component  identifies a set of changes to be implemented on the hosted network. Illustratively, the network validation manager component  obtains a request for implementation of a network change can instantiate a number of instances of a virtual machine instance type, or cause the instantiation of the instances. In one aspect, the request for a change to the hosted network can be received from a client computing device . Alternatively, the request for change to the hosted network device may be generated by, or on behalf of, the hosted network, such as hosted network . Illustratively, the request for change can be transmitted in accordance with an Application Programming Interface (API). By way of non-limiting example, the set of changes can include modification of a configuration of one or more components of the modeled hosted network, modifications to the topology or relationships between components of the modeled hosted network, substitution or replacement of one or more components of the hosted, modeled network, and the like. For example, the requested change to a modeled network can include the substitution of a component (e.g., a router) that has different performance attributes or capabilities, than the component in the currently modeled, hosted network. Also, as previously described, the request for change can include or identify information utilized to obtain or generate models of the hosted network.","At block , the network validation manager component  then simulates the implementation of the identified changes to the hosted network. As described above, the network validation manager component  can utilize a variety of network modeling and simulation tools that provide such simulation functionality. During the simulation of the implementation of the changes, at block , the network validation manager component  can collect various types of information associated with the implementation of the change. In one aspect, the network validation manager component  collects state information associated with one or more of the simulated components of the hosted network. Examples of state information include routing table information and topological information, such as component relationship information, communication paths and routes, and the like.","In another aspect, the network validation manager component  conducts and collects information related to network validity information related to an assessment of the availability of one or more components of the hosted network, such as determining communication availability or conducting a communication path mapping. Illustratively, the network validation manager component  can store at least a subset of the information collected during the simulation of the change. Additionally, in the event that the simulation of a change results in a deterioration of the hosted network or a fault condition, the network validation manager component  generate additional notifications, such as an alarm. In such an event, the network validation manager component  may terminate the simulation of the implementation of the change.","At decision block , a test is conducted to determine whether there are additional changes to implemented (or modeled). If so, the routine  returns to block . Alternatively, once all the changes have been simulated, at block , the network validation manager component  then generates a network change template that captures at least a portion of the state information or network validity information. Illustratively, the network change template can corresponds to an array of state information that identifies various expected state values for an identified component of the hosted network. The network validation manager component  can then store the generated network change templates. Additionally, in other embodiments, the network validation manager component  can publish or transmit the network change templates. For example, the network validation manager component  can transmit the network change templates to a requesting entity or a network-based service.","Turning now to , a routine  for network change monitoring implemented by the network validation manager component  will be described. As discussed with regard to routine  (), although routine  will be described with regard to implementation by the network validation manager component , one skilled in the relevant art will appreciate that alternative components may implement routine  or that one or more of the blocks may be implemented by a different component or in distributed manner. At block , the network validation manager component  obtains a hosted network change request. At block , the network validation manager component  obtains one or more network change templates corresponding to the requested network change. Illustratively, the network validation manager component  can obtain previously generated network change template information from the network change template data store  ().","At block , the network validation manager component  identifies one or more changes to be implemented on the hosted network. At block , the network validation manager component  causes the initiation of the change in the hosted virtual or receives confirmation from a management component that network changes will be implemented. For example, the network validation manager component  can interact with a change deployment tool that actually implements the identified change. As previously described, the change to the hosted network can occur within the virtual network  or in a network independent of the virtual network.","As the one or more changes are being implemented on the hosted network, the network validation manager component  obtains state information associated with one or more of the components of the hosted network and records the information at block . The state information may be directly collected by the network validation manager component  or transmitted to the network validation manager component. In one embodiment, the network validation manager component  can collect the same state information, or a subset thereof, of the state information utilized to generate the network change template. In other embodiments, the network validation manager component  may omit the collection of information, such as the network validity information.","In response to the collection of the state information, at decision block , a test is conducted by the network validation manager component  to determine whether the collected state information matches the state information associated with the network change templates. In one embodiment, the network validation manager component  can extract relevant state information from network change template. In another embodiment, the network validation manager component  can derive one or more values of state information based on information included in the network change template. Illustratively, the network validation manager component  may utilize any one of a variety of techniques for determining matches, such as a determination whether an exact match occurs. In another example, the network validation manager component  may determine whether differences between the compared state information are above a threshold.","One skilled in the relevant art will appreciate that in the event the state information does not match, or otherwise exceeds a threshold, an error or fault condition is likely occurring in the implementation of the change on the hosted network. Accordingly, if the collected state information does not match, at block , the network validation manager component  processes the fault condition and the routine  terminates at block . In one embodiment, the processing of the fault condition can include the generation of notifications, alarms, messages, and the like. In another embodiment, the processing of the fault condition can also include the initiation of a mitigation technique, such as restoration of one or more components of hosted network to a previously known state.","Returning again to decision block , if the collected state information matches, at decision block , a test is conducted to determine whether additional changes are to be implemented. If so, the routine  returns to block . Alternatively, the routine  terminates at block .","With the appropriate information from the network change template, the network validation manager component  can determine whether the collected state information matches, or is within an acceptable range of, the state information from the network change template. If so, the implementation of the change in the hosted network is likely proceeding as expected and no fault condition exists. If there is a different (absolute or significant), the network validation manager component  can determine that there is an error or fault in the implementation of the change on the hosted network. Based on the comparison, the network validation manager component  can generate an appropriate processing result. For example, the network validation manager component  can generate one or more notifications or log entries. In another example, the network validation manager component  can initiate various mitigation techniques, such as a roll back, in the event non-matching state information is indicative of a fault condition. The network validation manager component  can implement additional or alternative mitigation techniques as well.","It will be appreciated by those skilled in the art and others that all of the functions described in this disclosure may be embodied in software executed by one or more processors of the disclosed components and mobile communication devices. The software may be persistently stored in any type of non-volatile storage.","Conditional language, such as, among others, \u201ccan,\u201d \u201ccould,\u201d \u201cmight,\u201d or \u201cmay,\u201d unless specifically stated otherwise, or otherwise understood within the context as used, is generally intended to convey that certain embodiments include, while other embodiments do not include, certain features, elements, and\/or steps. Thus, such conditional language is not generally intended to imply that features, elements and\/or steps are in any way required for one or more embodiments or that one or more embodiments necessarily include logic for deciding, with or without user input or prompting, whether these features, elements and\/or steps are included or are to be performed in any particular embodiment.","Any process descriptions, elements, or blocks in the flow diagrams described herein and\/or depicted in the attached figures should be understood as potentially representing modules, segments, or portions of code which include one or more executable instructions for implementing specific logical functions or steps in the process. Alternate implementations are included within the scope of the embodiments described herein in which elements or functions may be deleted, executed out of order from that shown or discussed, including substantially concurrently or in reverse order, depending on the functionality involved, as would be understood by those skilled in the art. It will further be appreciated that the data and\/or components described above may be stored on a computer-readable medium and loaded into memory of the computing device using a drive mechanism associated with a computer readable storing the computer executable components such as a CD-ROM, DVD-ROM, or network interface further, the component and\/or data can be included in a single device or distributed in any manner. Accordingly, general purpose computing devices may be configured to implement the processes, algorithms, and methodology of the present disclosure with the processing and\/or execution of the various data and\/or components described above.","It should be emphasized that many variations and modifications may be made to the above-described embodiments, the elements of which are to be understood as being among other acceptable examples. All such modifications and variations are intended to be included herein within the scope of this disclosure and protected by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The foregoing aspects and many of the attendant advantages of this disclosure will become more readily appreciated as the same become better understood by reference to the following detailed description, when taken in conjunction with the accompanying drawings, wherein:",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":["FIG. 2A","FIG. 1"]},{"@attributes":{"id":"p-0007","num":"0006"},"figref":["FIG. 2B","FIG. 1"]},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
