---
title: Audio/video content synchronization and display
abstract: In one embodiment, a method is illustrated as including generating tagging data using a computer system to tag certain portions of digital content for playing at a normal rate and inserting the tagging data into a field of a data packet to create tagged digital content. In another embodiment, a further method is illustrated as including generating a metadata file using a computer system to denote certain portions of digital content for playing at a normal rate and inserting the metadata file into a media stream containing the certain portions of digital content. Additionally, in a further embodiment, a system is illustrated as including a generator residing on a device to generate tagging data to tag certain portions of digital content for playing at normal rate and an inserter residing on the device to insert the tagging data into a field of a data packet to create tagged digital content.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08958483&OS=08958483&RS=08958483
owner: Adobe Systems Incorporated
number: 08958483
owner_city: San Jose
owner_country: US
publication_date: 20070227
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS REFERENCE TO RELATED APPLICATIONS","COPYRIGHT","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This is a non-provisional patent application which is related to the United States Patent Application titled: \u201cAGGREGATING CHARACTERISTIC INFORMATION FOR DIGITAL CONTENT\u201d (application Ser. No. 11\/444,642, now issued as U.S. Pat. No. 8,001,143), and to the United States Patent Application titled: \u201cAUTOMATIC VIDEO HIGHLIGHTS USING A RATING SYSTEM\u201d (application Ser. No. 11\/669,002) both of which are incorporated by reference in their entirety.","A portion of the disclosure of this document contains material that is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure, as it appears in the Patent and Trademark Office patent files or records, but otherwise reserves all copyright rights whatsoever. The following notice applies to the software, data, and\/or screenshots that may be described below and in the drawings that form a part of this document: Copyright \u00a92007, Adobe Systems Incorporated, All Rights Reserved.","The present application relates generally to the technical field of algorithms and programming and, in one specific example, to the use of indicia to tag data.","While a portion of digital content (e.g., a video and\/or audio) is being reviewed using a fast-forward mode, or reverse mode, the audio associated with this digital content may not be able to be heard at its normal rate. Also, while using one of these modes, the ability to determine the specific location of certain portions of video or audio digital content is limited to certain visual or temporal cues (e.g., observing, at a high rate of Frames Per Second (FPS), video digital content that appears similar to the desired video or audio digital content).","According to an embodiment, a system and method for marking or for creating tagged digital content (e.g., audio or video) is described. In some embodiments, a tag in the form of a bit flag is inserted into the field of a data packet containing digital content to denote that the data packet is to be reviewed (e.g., played by a media player application) at a normal rate during the application of a fast-forward or reverse mode. Some example embodiments may include a range of values corresponding to Temporal Reference (TR) values, frame numbers, or other values differentiating packets of digital content stored into a field of a data packet containing digital content. Still further embodiments may include a metadata file, written in, for example, an Extensible Mark Up Language (XML), inserted into the beginning of a media stream or digital content file (e.g., a Motion Picture Experts Group (MPEG) formatted media stream or digital content file) to denote which data packets of the media stream or digital content file are to be played at a normal rate during the fast-forward or reverse mode. In some cases, this mode may be a one or more methods implemented in software. In some cases, a presentation file written using a Real-Time Streaming Protocol (RTSP) may be used to instruct, for example, a media player application that the media stream or digital content file may have data packets that are to be viewed at a normal rate during a fast-forward or reverse method or mode.","Other features may be apparent from the accompanying drawings and from the detailed description that follows.","Embodiments of methods and systems to view discrete portions of video and audio digital content during a fast-forward or reverse mode are described. In the following description, for purposes of explanation, numerous specific details are set forth to provide a thorough understanding of some embodiments. It may be evident, however, to one skilled in the art that some embodiments may be practiced without these specific details.","As used herein, the term \u201ccontent\u201d refers to electronic data that is consumed by viewers on displays, devices, automated services, print-based media, or page\/display-based media. So, content may refer to data associated with readable text, data associated with graphics, data associated with images, data associated with spreadsheets, data associated with video, programmatic content, scripts, or data associated with various combinations of each or all of these. Some media may be page\/display or view-based, such as World-Wide web (WWW) formatted or paged media embodied in browsers and accessible over the Internet or modified via editors. Content that is logically related to form a topic, a website, a presentation, or a publication may be referred to as a \u201cdocument\u201d or a \u201cfile.\u201d","A \u201cportion\u201d of content may refer to some subset of a particular digital content file. For example, a digital content file represented by an MPEG file may be broken up into discrete sections of portions wherein each portion is contiguous or non-contiguous, such that a portion of an MPEG file may be represented by MPEG data packets -, or a portion may be represented by MPEG data packets -, -, and -. The order of these MPEG data packets is not important, and may be organized sequentially or non-sequentially.","The term \u201cmetadata\u201d may refer to data about data or digital content such as an MPEG file. As will be more fully described below, this metadata may be stored as a metadata file that is associated with a particular portion of digital content, but not necessarily part of the digital content. The metadata may describe characteristics or attributes about digital content without actually being part of the content.","With this context, the description of various techniques and systems for generating tagging data, associating this tagging data with digital content (e.g., an MPEG file) to create tagged digital content, and playing this tagged digital content using some type of player application are now described.","A viewer of audio and\/or video digital content may desire to hear and\/or view certain portions of this digital content at a normal rate during a fast-forward or reverse operation. This desire may be based upon enhancing the efficiency of the viewing experience where, for example, a viewer would like subsequent viewers to be able to more efficiently review a portion of digital content (e.g., audio or video) without having to take into account certain audio or video cues. One way this efficiency may be increased is through distinguishing certain relevant digital content, in the form of data packets, from other digital content. Through distinguishing this digital content, subsequent users may be able to, for example, fast-forward through a portion of digital content and yet still be able to view and hear certain portions of this digital content deemed important by the viewer.","In some embodiments, a system is described that implements a method to insert tagging data (e.g., a tag such as a bit flag) into the bit field of a data packet used to deliver video or audio digital content. This system and method may, for example, utilize a Graphical User Interface (GUI) in the form of a user tagging interface to generate tagging data associated with the a particular portion of digital content. Once generated, this tagging data may be inserted into the digital content and stored, and\/or may be stored separately from the digital content to which it relates. This user tagging interface may form the Interface level of a software application written in a three-tier architecture format. Further, this software application may manifest certain functionality similar to, for example, a media player application such as, the Adobe FLASH PLAYER\u2122, Microsoft WINDOWS MEDIA PLAYER\u2122, RealNetworks REALPLAYER\u2122, or some other suitable media player application. This functionality may include the ability to generate or receive an encoded data packet, decode or encode (e.g., format the video or audio data using a codec such as MPEG) this data packet as the case may be, store the decoded data packet into a buffer, and play the buffered data packet as video and\/or audio data. In some cases, these functionalities may include the initiation of a media session with a media server using RTSP and\/or the downloading of a video and\/or audio digital content from a remotely located web server. Further, these functionalities may include the ability to view video and audio content in a fast-forward or reverse mode. This software application may reside as a native application, while, in some embodiments, it may reside as a remote application. In some embodiments, an existing media player application may have its functionality enhanced by the method and system described herein.","Some embodiments may include a method to insert a range of values corresponding to TR values, frame numbers, or other values differentiating packets of digital content stored into a field of a data packet containing digital content. This system and method may, for example, utilize a GUI in the form of a user tagging interface to generate a range of values associated with the TR values for a particular portion of digital content. Once generated, this range of values may be inserted into the digital content and stored, and\/or may be stored separately from the digital content to which it relates. This user tagging interface may form the Interface level of a software application written in a three-tier architecture format. Further, this software application may manifest certain functionality (see above) similar to, for example, a media player application such as, the Adobe FLASH PLAYER\u2122, Microsoft WINDOWS MEDIA PLAYER\u2122, RealNetworks REALPLAYER\u2122, or some other suitable media player application. These functionalities may include the ability to view video and audio content in a fast-forward or reverse mode. In some embodiments, this software application may reside as a native application, while, in some embodiments, it may reside as a remote application.","Example embodiments may include a metadata file, written in, for example, an XML file, inserted into the beginning of a media stream or digital content file (e.g., an MPEG formatted media stream or digital content file) to denote which data packets of the media stream or digital content file are to be played at a normal rate during the fast-forward or reverse mode. For example, this metadata file may contain information relating to the TR value or range of TR values that are to be played at a normal rate during a fast-forward or reverse mode. This system and method may, for example, utilize a GUI in the form of a user tagging interface to generate a range of values associated with the TR values for a particular portion of digital content. Once generated, this range of values may be inserted into the digital content and stored, and\/or may be stored separately from the digital content to which it relates. This user tagging interface may form the Interface level of a software application written in a three-tier architecture format. Further, this software application may manifest certain functionality (see above) similar to, for example, a media player application such as, the Adobe FLASH PLAYER\u2122, Microsoft WINDOWS MEDIA PLAYER\u2122, RealNetworks REALPLAYER\u2122, or some other suitable media player application. These functionalities may include the ability to view video and audio content in a fast-forward or reverse mode. In some embodiments, this software application may reside as a native application, while, in some embodiments, it may reside as a remote application.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 1","b":["100","101","112","112","112","101","107","107","111","112","102","103","104","105","106","102","111"]},{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 2","b":["200","201","112","201","111","102","101"]},"In some embodiments, the digital content to be tagged is located on a device remote from the user generating the tagging data and\/or metadata file. For example in some cases, a user may want to generate tagging data and\/or a metadata file for a portion of digital content that is located on a media server accessed across a network connection by a user using a user tagging interface. In such circumstances, a user may, for example, generate tagging data (e.g., tags to be associated with a particular portion of digital content, and, for example, its TR values), or a metadata file and transmit this tagging data across a network to a web server and\/or media server. Once received, this media server will store the tagging data into a database. In some embodiments, it will be tagged digital content itself (e.g., digital content with a tag inserted into the field of the data packets, a range of TR values inserted into the data packets fields, or a metadata file inserted into the beginning of the digital content stream or file) that is transmitted over a network connection to the web server and\/or media server for storage into a database.",{"@attributes":{"id":"p-0046","num":"0045"},"figref":"FIG. 3","b":["300","101","112","301","301","102","308","309","310","310","311","308"]},{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 4","b":["400","401","112","401","308","310","311","401","309","310","311"]},"Some embodiments may include a user implementing a user selection interface to select tagged digital content located natively to the user selection interface, or located remotely from the user selection interface. In certain cases, this selection may be form a native or remote database. In response to this selection or query, tagged digital content and\/or tagging data may be returned to the software application implementing the user selection interface. Further, this software application may manifest certain functionality similar to, for example, a media player application such as, the Adobe FLASH PLAYER\u2122, Microsoft WINDOWS MEDIA PLAYER\u2122, RealNetworks REALPLAYER\u2122, or some other suitable media player application. Some embodiments may include the software application selecting the tagging data or tagged digital content from a web server  and\/or media server .","Further, in some cases, this user selection interface may be used as apart of a player, such as a media player, to play tagged digital content at an expedited rate, to read the digital content (e.g., using a reader such as a decoder, a parser, and interpreter) looking for tagged digital content, and to play the digital content at a normal rate where a tag is read by the reader. In certain cases, this selection may be from a native or remote database. Moreover, in some cases, the user selection interface and player may reside on one or more of the devices , wherein the devices  may have a receiver to receive tagged digital content, an extractor (e.g., a extractor such as a decoder, parser and interpreter) to extract tagging data from this tagged digital content, and an inserter (e.g., a register to maintain values in persistent or non-persistent memory) to insert the extracted tagging data into a lookup table to assist with determining which data packets are to be viewed at a normal rate. In some cases, only the video portion or only the audio portion of tagged digital content, and its associated data packets, will be played at a normal rate, while in other cases both portions will be played at a normal rate.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 5","b":["500","101","503","501","503","102","102","102","111","503","101","501","111","111"]},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 6","b":["600","601","603","601","603","601","102","102","601","602","602","603","111","102"]},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 7","b":["700","503","102","503","101","701","701","503","308","309","311","701","310","702","308","102","101","503","309","310","308"]},{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 8","b":["800","101","603","801","801","308","310","310","802","310","309","308","102","310","802","308","309","802","102","603","101"]},"In some embodiments, audio (e.g., dialog) may be played at a normal rate during the execution of a fast-forward mode. For example, in one case, the sub-title file of an MPEG file is read so as to provide the dialog portion of a specific section of the MPEG file being played at an expedited rate. In another case, the dialog may be extracted from the MPEG file itself and played at a normal rate during the course of playing a corresponding video portion at an expedited rate. In one case, a user may chose to play a section of an MPEG file corresponding to the time T through T, where T and T correspond to, for example, TR values. Once selected, using some type of user selection interface or suitable GUI, the dialog corresponding to this selected section may be played at a normal rate, while the video portion may be played at an expedited rate. This dialog may continue to be played at a normal rate until T is reached through using the fast-forward mode.","Moreover, in some embodiments, a series of sections, that is serial or noncontiguous in nature, can be selected and played using a fast-forward mode such that the dialog portion is played at a normal rate for each section. For example, if a user, using a user selection interface or other suitable GUI, selects T-T, T-T, and T-T, then the fast-forward mode may be applied to these selections and the corresponding dialogue may be played at a normal rate so long as the fast-forward mode is processing the selection. Once a different selection is processed, the dialogue from the previous section may cease to be played, and the beginning of the dialogue corresponding to next selection may be played. As previously described, this dialog may be taken from a sub-title file, or the audio portion of an MPEG file.","A Three-Tier Architecture","In some embodiments, one implementation may be as a distributed or non-distributed software application designed under a three-tier software architecture paradigm, whereby the various modules of computer code that make up the one implementation can be categorized as belonging to one or more of these tiers. A three-tier architecture is well known in the art. The first tier is an Interface level that is relatively free of application processing. The second tier is a Logic level that performs processing in the form of logical\/mathematical manipulations (Logical Manipulations) of data inputted through the Interface level and communicates the results of these Logical manipulations with the Interface and\/or backend or Storage level. Some example embodiments may include these Logical Manipulations relating to certain business rules or tasks that govern the application as a whole. These logical manipulations and associated business rules may be used to tag digital content, generate tagging data for such digital content and\/or generate a metadata file to be associated with the digital content. The third tier or Storage level is a persistent storage medium, or, some example embodiments may include non-persistent storage medium. One or more of these tiers may be collapsed into one another, resulting in a two-tier architecture, or one-tier architecture. For example, the Interface and Logic levels may be consolidated, or the Logic and Storage level may be consolidated, as in the case of an application with an embedded database. This three-tier architecture may be implemented using one technology, or as will be discussed below, a variety of technologies. These technologies may include one or more object-oriented programming languages such as, for example, JAVA\u2122, C++, DELPHI\u2122, C#, or the like. Additionally, structured programming languages such as, for example, C, may also be used. Moreover, scripting languages such as, for example, Perl, Python, PHP, JAVASCRIPT\u2122 or VBSCRIPT\u2122 may also be used. This three-tier architecture, and the technologies through which it is implemented can be implemented in two or more computers organized in a server-client relationship, as is well known in the art, such that an Interface level resides on a client computer, whereas a Logic level resides on the application server (see below) and the Storage level resides on a database server (see below). As will be discussed more fully below, in such a relationship these three tiers can be implemented as various software components that communicate via distributed programming protocols. Some example embodiments may include these three tiers being implemented in a peer-to-peer configuration, with centralized or decentralized file and data sharing, or some other suitable file sharing paradigm, such that all three tiers reside on one or more computers and each computer retrieves files and data from one another. Peer to peer configurations are well known in the art.","An Interface Level","An example embodiment uses a client-based browser application, whereas other embodiments may be implemented via a command line interface. Some example embodiments of a client based browser application may include an Application Programming Interface (API) implemented to allow one application to communicate with another. Some well-known client-based browser applications include NETSCAPE\u2122, INTERNET EXPLORER\u2122, MOZILLA FIREFOX\u2122, OPERA\u2122, or some other suitable browser application. Common to these browser applications is the ability to use a Hyper-Text Transfer Protocol (HTTP) or Secured Hyper-Text Transfer Protocol (HTTPS) to get, upload (e.g., PUT) or delete web pages and interpret these web pages that are written in HTML and\/or XML. HTTP and HTTPS are well known in the art, as are HTML and XML. HTTP and HTTPS are used in conjunction with a Transmission Control Protocol\/Internet Protocol (TCP\/IP) protocol as described in the Open Systems Interconnection Reference Model (OSI) model, or the TCP protocol stack model, both of which are well known in the art. The practical purpose of the client-based browser application is to enable a user to interact with the application through the display of plain text, and\/or interactive, dynamic functionality in the form of buttons, text boxes, scroll down bars or other objects, widgets contained on one or more web pages constructed using the aforementioned HTML and\/or XML.","Some embodiments may include web pages that are typically static or dynamic in nature. Those that are static typically display text as one would see it on a printed, physical page. Dynamic web pages, however, are interactive and allow for a user to input data, query data, and\/or modify data just to name a few of the functionalities associated with dynamic web pages. The dynamic nature of web pages is a product of the use of the other technologies in combination with HTML and\/or XML.","Some example embodiments may include using Java Server Page (JSP\u2122), or Active Server Pages (ASP\u2122 or ASP.NET\u2122) (collectively server pages) to provide a user with dynamic web pages or content via their web browser. Additional technology may be implemented in the form of an additional program (e.g., routine) written in another programming language that is embedded into the HTML and\/or XML code, allowing for web pages to become dynamic. Some of these additional technologies include, for example, embedded routines written in the Java programming language, the JAVASCRIPT\u2122 language, or the VBSCRIPT\u2122 programming language, or some other suitable programming language. These embedded routines are used to execute the aforementioned HTTP, and\/or HTTPS requests (e.g., GET, PUT, and DELETE) for web pages. In some embodiments, asynchronous webpage access is provided using JAVASCRIPT\u2122 in combination with XML (collectively known as AJAX). For example, a web page or server page may allow a user to make tagging data, or to get tagging data, or even to retrieve tagged digital content.","Some example embodiments may include, for example, a GUI used and implemented via a Java Servlet, Applet, or VBSCRIPT\u2122 or C# form, or some other suitable programming language. This form may reside on one or more of the devices  as a client application. Moreover, this form may contain objects such as text boxes, buttons, scroll-down bars, widgets, or some other suitable dynamic interface object. These objects, and the routines governing them, allow a user to retrieve, input, or delete content, just to name few of the functions. For example, a form may allow a user to generate tagging data, or even to review digital content in at normal rate or fast forward or reverse speeds.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 9","b":["112","901","902","904","101","904","905","904","905","101","904","905","906","101","910","909","908","907","906","906"]},{"@attributes":{"id":"p-0062","num":"0061"},"figref":"FIG. 10","b":["503","1001","101","101","1002","1003","1002"]},{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 11","b":["603","1101","101","101","1101","1101","101","1102","1102","1103"]},"Logic Level","Some example embodiments may include the above described GUIs (e.g., user tagging interface  and user selection interface  and ) being implemented via web pages, and\/or server pages that are stored on one or more remote server computers connected to a client device (e.g., one or more of the devices ) via an network connection. These remote servers can be a web server  and\/or application server. web servers running JSP\u2122 can include the APACHE\u2122\/APACHE TOMCAT\u2122 web server. web servers running ASP\u2122 can include a Microsoft WINDOW WEB SERVER 2003\u2122 utilizing Internet Information Services (IIS). Application servers running JSP\u2122 can include the Orion Application Server or other J2EE\u2122 certified application servers. Application servers running ASP\u2122 can include WINDOWS SERVER 2003\u2122. For example, a web server  may serve a web page over a network, a web page that allows a user to generate tagging data and\/or insert this data into a media stream or portion of digital content. In some cases, this web page has an interface similar to those described above (e.g., ,  and\/or ). This tagging data or tagged digital content may then be passed to an application server for storage or further processing.","In some embodiments, the Logic level may be governed by a rule set written in a scripting language that controls how and when certain web pages, server pages, or portions of content are provided to, or made accessible to, a particular user. This scripting language can be in the form of Java, Perl, Python, or some other general purpose scripting language. For example, once the logic of a JSP\u2122 determines that a particular object (e.g., a scroll bar) on a web page has been executed (e.g., tagging data has been generated that corresponds to a portion of digital content or a media stream), the data from this object is inputted, and sent to a web and\/or application server. Some example embodiments may further include a routine written in a scripting language to retrieve data from a storage (e.g., database ), data structure, or Storage level. The Storage level may be run by a separate database application, while, in other embodiments, a database embedded with a Logic level may be implemented (e.g., a native database such as database ).","In some embodiments, a client software application may be written that may include the above described GUIs (e.g., user tagging interface  and user selection interface  and ). This application may be written using a form such as a C# form. In contrast to a screen objects and widgets existing as a part of a web page displayed using a web browser, client application, and its respective objects and widgets may perform functionality similar to that of the screen objects and widgets associated with a web page. For example, a C# form may take in data (e.g., the selection of a portion of a media stream for tagging) from a user  and pass it to one of the above described web and\/or application servers. Once passed to one of these servers via a network connection, various methods as described below may be applied to the data.",{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 12","b":["1200","1201","1206","102","1201","101","112","1202","1202","1203","1203","1204","1203","1206","1206","1202","1205","111"]},"In some embodiments, these various modules - may be located on a web server , and\/or media server  and the functionality of each module implemented by the web server , media server  and\/or one or more of the devices . For example, as described above, a web page served by a web server  may contain screen objects or widgets (e.g., a scroll bar) that allows for the selection of content to be tagged (see module ). Once the content is selected, than the modules - may be executed. These modules may be written using certain principles of socket based or component based programming so as to identify these modules when they are located remotely.","Additionally described in  under the generating tagging stream are various modules residing on, for example, the media server . These various modules include modules -. In some cases a module  is implemented that receives encoded tagging data or tagged digital content. This tagging data or tagged digital content is transmitted from, for example, a device  over a network  to the media server . In some cases, a web server  may act as an intermediary between the media server  and one of the devices . Whereas in other cases, this web server  may not exist as an intermediary between the media server  and one of the devices . Once the encoded tagging data or tagged digital content is received using the module , a module  is implemented that parses the tagging data or tagged digital content and passes this parsed data to a module  that stores this parsed tagging data or tagged digital content into the previously described database .","Further, illustrated in  is a second stream titled \u201cReceive and Play Tagged Digital Content\u201d that describes a variety of modules (e.g., -) residing on one of the devices . In some embodiments, a module  is implemented to select a starting point in a media stream where the media stream may be viewed (see e.g., user selection interface ). Once this selection is made, a decisional module  is implemented that determines whether or not the digital content is located remotely. Where decisional module  evaluates to \u201ctrue\u201d, a module  is implemented that retrieves the remotely stored tagging data or tagged digital content residing on, for example, a media server . This retrieving may be by way of, for example, a remote Structured Query Language (SQL) call, and may involve the actual extracting or parsing of the retrieved data. In cases where decisional module  evaluates to \u201cfalse\u201d, a second decisional module  is implemented that determines whether or not only tagging data has been requested. In cases where decisional module  evaluates to \u201cfalse\u201d, a further module  is implemented that retrieves tagged digital content from the database , and provided to the module  for playing. In cases where decisional module  evaluates to \u201ctrue\u201d, a module  is implemented that retrieves only tagging data. Once module  is executed, then a module  is implemented that actually plays the retrieved tagged digital content. In cases where the module  is implemented, then tagging data is provided to the module  for the purposes of being used to play certain portions of a media stream as denoted by the tagging data supplied by the module .","Some embodiments may include receiving tagged digital content at a device such as one of the devices , extracting the tagging data from this tagged digital content, and inserting the tagging data into a lookup table to be used to determine which data packets are entitled to be viewed at the normal rate. In such an embodiment, module  may act to extract the tagging data by parsing the tagging data based upon some grammar dictated by, for example, a protocol. Once extracted, the tagging data may be placed into a lookup table such that where a user  selects a particular potions of the tagged digital content for viewing, a lookup of every packet, and, for example, the TR value contained therein, will occur (see e.g., module  and decisional module  described below) to determine whether the packet is entitled to viewing at a normal rate.","Some embodiments may include a method including generating tagging data (e.g., applying module ) using a computer system (e.g., one of the devices ) to tag certain portions of digital content for playing at a normal rate as tagged digital content, wherein the playing is conducted by a media player reading the portions of digital content at a certain number of FPS considered to be the normal rate, and inserting the tagging data into a field of a data packet, that is a part of the certain portions of digital content, to create tagged digital content. Further, this method may include receiving tagged digital content (e.g., , or ) at a device, extracting the tagging data (e.g., ) from this tagged digital content, and inserting the tagging data into a lookup table to be used to determine which of the data packets are to be viewed at the normal rate. Additionally, the method may further include playing the tagged digital content at an expedited rate, wherein the playing is conducted by the media player (e.g., a media player residing on one of the devices ) reading the portions of the tagged digital content at a certain number of FPS considered to be the expedited rate, reading the tagged digital content to determine whether a specific TR value has been encountered, and playing the tagged digital content at the normal rate, where a specific TR value is encountered, wherein the tagging data is one of a group of data types selected from the group consisting of a bit flag, and a range of TR values, and the data packet contains a header type that is selected from the group of header types consisting of a RTP header, a MPEG video specific header, and a MPEG audio specific header. In addition, the method may include storing the tagged digital content and\/or tagging data into a database (e.g., database ).","In some embodiments, a method is described as including generating a metadata file using a computer system to denote certain portions of digital content for playing at a normal rate (see e.g., module ), wherein the playing is conducted by a media player (e.g., that resides on one of the devices ) reading the portions of digital content at a certain number of FPS considered to be the normal rate, and inserting the metadata file into a media stream containing the certain portions of digital content. Additionally, the method further includes receiving the media stream at a device (e.g., devices ), reading the TR values in the metadata file to determine which portions of the digital content are to be played at the normal rate, extracting TR values from the metadata file, and inserting the TR values into a lookup table. Additionally, this method may include playing the media stream at an expedited rate, wherein the playing is conducted by a media player reading portions of the digital content at a certain number of FPS considered to be the expedited rate, reading both the metadata file and the certain portions of digital content contained within the media stream, and comparing the TR values contained within this metadata file to TR values contained in the certain portions of digital content, and playing the media stream at the normal rate, where there is a correspondence between the TR values in the metadata file and the TR values contained in the certain portions of digital content contained in the media stream. Moreover, the method may further include playing only an audio portion of the media stream at a normal rate, where a specific TR value is encountered. In addition, the method may include playing only a video portion of the media stream at a normal rate, where a specific TR value is encountered.","Some embodiments may include a computer-readable medium (e.g., some type of persistent or non-persistent storage) embodying instructions, the instructions including a first set of instructions to generate tagging data using a computer system to tag certain portions of digital content for playing at a normal rate as tagged digital content, wherein the playing is conducted by a media player reading the portions of digital content at a certain number of Frames Per Second (FPS) considered to be the normal rate, and a second set of instructions to insert the tagging data into a field of a data packet, that is apart of the certain portion of digital content, to create tagged digital content. These instructions may be written in one or more object-oriented programming languages such as, for example, JAVA\u2122, C++, DELPHI\u2122, C#, or other suitable programming language.","Example Case: Insertion of Tagging Data into a Data Packet",{"@attributes":{"id":"p-0075","num":"0074"},"figref":"FIG. 13","b":["1201","1301","101","1302","1303"]},{"@attributes":{"id":"p-0076","num":"0075"},"figref":"FIG. 14","b":["1204","1401","1402","1202","1404","1402","1403","1403","1405","1403","1404"]},{"@attributes":{"id":"p-0077","num":"0076"},"figref":"FIG. 15","b":["1500","1500","1501","1502","1508","1503","1502","1502","1504","1505","1508","1509","1501","1506","1507"]},{"@attributes":{"id":"p-0078","num":"0077"},"figref":"FIG. 16","b":["1404","1601","1602","1603"]},{"@attributes":{"id":"p-0079","num":"0078"},"figref":"FIG. 17","b":["1404","1701","1702"]},{"@attributes":{"id":"p-0080","num":"0079"},"figref":"FIG. 18","b":["1404","1801","1802","1803","1802","1803","1802","1803","1802","1803"]},{"@attributes":{"id":"p-0081","num":"0080"},"figref":"FIG. 19","b":["1405","1901","1902","1501","1502","1503"]},{"@attributes":{"id":"p-0082","num":"0081"},"figref":"FIG. 20","b":["1216","2001","2002","2003","2004","2003","2002","2004","2005","2005","2004","2005","2006","2002","1216"]},"In some embodiments, a data structure (e.g., an array, list, stack queue, hash table, or radix tree) is generated to serve as a lookup table into which is stored the range of values described in, for example, fields ,  and . These TR values may be taken from a metadata file . Once stored, various TR values are extracted from data packets in a media stream and compared to the TR values looked up in the lookup table (see e.g., module ). Where a matching value is found in the lookup table, the media stream is played at a non-expedited rate (see e.g., module ). The following is an example lookup table:",{"@attributes":{"id":"p-0084","num":"0083"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"154pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"00000000000000000000001"]},{"entry":[{},"00000000000000000000010"]},{"entry":[{},"00000000000000000000011"]},{"entry":[{},". . ."]},{"entry":[{},"11111111111111111111111"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{},"b":"111"},{"@attributes":{"id":"p-0085","num":"0084"},"figref":"FIG. 21","b":["1216","2101","2102","2103","2103","2102","2103","2104","2105","2105","2104","2105","2212"]},"In some embodiments, both the audio and video portion of the media stream may play at a normal rate where the tagging data or certain TR values are encountered, while, in some embodiments, only the audio or video portion may play at a normal rate. The determination of whether only the audio or video portion or both may play at a normal rate may be based upon where the tagging data is encountered (e.g., in an MPEG specific audio header , or an MPEG specific video header ), or may be based upon an instruction set provided by a metadata file. In cases where a range of TR values (see e.g., fields  and ) is used as the basis for determining what portion of an media stream may play at a normal rate during, for example, a fast-forward operation, a default to audio and video, or only audio, or only video may be set.","Example Case: Generation of Metadata File and Insertion into a Media Stream","In some embodiments, a metadata file is used to provide tagging data for a portion of digital content. This tagging data may be one or more TR values reflecting those video frames or other portions of digital content (e.g., RTP payloads) not entitled to expedited reviewing via, for example, a fast-forward mode. In some cases, this metadata file is written in XML and has the following example format:",{"@attributes":{"id":"p-0088","num":"0087"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"168pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<Tagging>"]},{"entry":[{},"<TimeBegin>1<\/TimeBegin>"]},{"entry":[{},"<TimeEnd>32534<\/TimeEnd>"]},{"entry":[{},"<TimeBegin>32567<\/TimeBegin>"]},{"entry":[{},"<TimeEnd>435667<\/TimeEnd>"]},{"entry":[{},"<TimeBegin>667865<\/TimeBegin>"]},{"entry":[{},"<TimeEnd>756777<\/TimeEnd>"]},{"entry":[{},"..."]},{"entry":[{},"..."]},{"entry":[{},"<\/Tagging>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"In some embodiments, a flat file may be used to provide tagging data for a portion of digital content. Where a flat file is used, a delimiter may be implemented to distinguish different types of data. This delimiter may be any type of Universal Character Set (Unicode) or American Standard Code for Information Interchange (ASCII) character. For example, the tagging data in a flat file could have the form: 1 32534; 32567 435667; 667865 756777, where the delimiter between ranges of tagging data is a semicolon (\u201c;\u201d). As with the XML implementation, this flat file may be placed at the beginning of a media stream. In some embodiments, the tagging data contain in the metadata file (e.g., an XML file or flat file) is inserted into a lookup table such as that described above.","In cases where tagging data and\/or tagged digital content is transported across a network (see e.g., , , , and ), a media session is initiated using either HTTP alone or using HTTP in combination with a Real Time Streaming Protocol (RTSP). In cases where HTTP alone is used, an HTTP call is made to web server  to retrieve (e.g., to GET), for example, a tagged digital content file from the media server . Once retrieved, the tagged digital content file may be played on one or more of the devices .","Some embodiments may include the use of HTTP and RTSP together to obtain tagged digital content or tagging data. In such an embodiment, HTTP would be used to set up a media streaming session between, for example, the web server  and media server , and one or more of the devices . Once the session was established, a presentation description file would be sent from the web server  to one of the devices . This file may have the following format:",{"@attributes":{"id":"p-0092","num":"0091"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<title>HOME MOVIES<\/title>"},{"entry":"<session>"},{"entry":"\u2003\u2003<group language=en lipsync>"},{"entry":"\u2003\u2003\u2003\u2003<switch>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<track type=audio"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003e=\u201cPCMU\/8000\/1\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003src = \u201crtsp:\/\/audio.example.com\/homemovies\/audio.en\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003lofi\u201d>"},{"entry":"\u2003\u2003\u2003\u2003\u2003<track type=audio"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003e=\u201cDVI4\/16000\/2\u201d pt=\u201c90 DVI4\/8000\/1\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003src=\u201crtsp:\/\/audio.example.com\/homemovies\/audio.en\/"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003hifi\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<\/switch>"},{"entry":"\u2003\u2003\u2003<track type=\u201cvideo\/mpeg\u201d"},{"entry":"\u2003\u2003\u2003\u2003\u2003\u2003\u2003src=\u201crtsp:\/\/video.example.com\/homemovies\/video\u201d>"},{"entry":"\u2003\u2003\u2003<tagging= yes>"},{"entry":"\u2003\u2003<\/group>"},{"entry":"<\/session>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":[{},{}],"figref":"FIGS. 16-18"},"In some embodiments, a system is described as including a generator residing on a computer system to generate tagging data to tag certain portions of digital content to be played at a normal rate as tagged digital content, wherein a certain number of FPS is considered to be the normal rate, and an first inserter residing on the computer system (e.g., one of the devices ) to insert the tagging data into a field of a data packet to create tagged digital content. Moreover, system may further include a receiver residing on the computer system to receive tagged digital content, an extractor residing on the computer system to extract the tagging data from the tagged digital content, and an second inserter residing on the computer system to insert the extracted tagging data into a lookup table to be used to determine which tagged digital content is entitled to be played at the normal rate. Additionally, the system may further include a player residing on the computer system to play the tagged digital content at an expedited rate, wherein the player is a media player that reads the tagged digital content at a certain number of FPS considered to be an expedited rate, and a reader residing on the computer system to read the tagged digital content to determine whether a specific TR value has been encountered, and where a TR value is encounter the player plays the portion of the tagged digital content at a normal rate, wherein the tagging data is one of a group of data types selected from the group consisting of a bit flag, and a range of TR values. Further, the data packet contains a header type that is selected from the group of header types consisting of a RTP header, a MPEG video specific header, and a MPEG audio specific header. Moreover, the system may further comprising a database (e.g., database ) operatively coupled to the computer system to store the tagged digital content. In addition, the system may further comprising a database (e.g., database ) operatively coupled to the computer system to store the tagging data.","Some embodiments may include a system including a generator residing on a computer system to generate a metadata file to denote certain portions of digital content to be played at a normal rate, wherein a certain number of FPS is considered to be the normal rate, and an inserter residing on the computer system to insert the metadata file into a media stream containing the certain portions of digital content. Moreover, the system may further include a receiver residing on the computer system to receive the media stream, a reader residing on a computer system to read TR values from the metadata file to determine which portions of the digital content are to be played at a normal rate, an extractor residing on the computer system to extract the TR values from the metadata file, and an insertor residing on the computer system to insert the TR values into a lookup table. Additionally, the system may further include a player to play the media stream at an expedited rate, wherein the player is a media player and the expedited rate is considered to be certain number of FPS, a reader to read both the metadata file and the certain portions of digital content contained within the media stream, and comparing the TR values contained within this metadata file to TR values contained in the certain portions of digital content, wherein the reader is apart of the media player, and playing the media stream at the normal rate, where there is a correspondence between the TR values in the metadata file and the TR values contained in the certain portions of digital content. Further, the system may include the player configured to play only an audio portion of the digital content at a normal rate, where a specific TR value is encountered. The system may also include the player configured to play only a video portion of the digital content at a normal rate, where a specific TR value is encountered.","Some embodiments may include an apparatus that includes means for generating tagging data using a computer system to tag certain portions of digital content for playing at a normal rate as tagged digital content, wherein the playing is conducted by a media player reading the portions of digital content at a certain number of FPS considered to be the normal rate, and means for inserting the tagging data into a field of a data packet, that is apart of the certain portion of digital content, to create tagged digital content.",{"@attributes":{"id":"p-0096","num":"0095"},"figref":["FIG. 22","FIGS. 20 and 21","FIG. 12"],"b":["2200","102","2201","2202","2201","2202","2206","2208","2210","102","310","2202","112","201","2201","107","2204","2203","2204","102","2206","2206","2207","2205","2204","111","111","2209","111","2210"]},{"@attributes":{"id":"p-0097","num":"0096"},"figref":["FIG. 23","FIG. 19","FIG. 12"],"b":["2300","2301","2302","102","2301","2302","310","2301","1902","2304","2302","2304","2303","2305","102","2305","2306","2310","310","2305","2304","2306","2306","2307","2308","111","2309","2310"]},"Storage Level","Some embodiments may include a Storage level wherein tables of data are created and data is inserted into or selected from these tables using a SQL or some other database-related language known in the art. These tables of data can be managed using a database application such as, for example, MYSQL\u2122, SQLServer\u2122, Oracle 8I\u2122 or 10G\u2122, or some other suitable database application. These tables are organized into a RDS or Object-Relational-Database Schemas (ORDS), as is known in the art. These schemas can be normalized using certain normalization algorithms so as to avoid abnormalities such as non-additive joins and other problems. Additionally, these normalization algorithms include Boyce-Codd Normal Form or some other normalization, optimization algorithm known in the art. Some embodiments may include creating a series of database tables containing data related to digital content.",{"@attributes":{"id":"p-0099","num":"0098"},"figref":"FIG. 24","b":["2400","2401","2402","2403","2401","2403","2404","2401","2402","2403","2404"]},"Component Design","Some example embodiments may include the above described three tiers or levels being written as one or more software modules with each module contributing to the functionality of each level or tier. Common too many of these modules is the ability to generate, use, and manipulate the above-described tagging data and\/or sets of data sets. These modules and associated functionality may be used by the client, server, or peer applications. These various modules can be implemented into the system on an as-needed basis. These modules may be written in an object-oriented computer language such that a component oriented or object-oriented programming technique can be implemented using a Visual Component Library (VCL), Component Library for Cross Platform (CLX), Java Beans (JB), Java Enterprise Beans (EJB), Component Object Model (COM), or Distributed Component Object Model (DCOM) or other suitable technique. These modules are linked to other modules via various APIs and then compiled into one complete server and\/or client application. The process for using modules in the building of client and server applications is well known in the art. Further, these modules and the tiers that they make up are linked together via various distributed programming protocols as distributed computing modules.","Distributed Computing Modules","Some example embodiments may include remote procedure calls being used to implement one or more of the above described levels of the three-tier architecture across a distributed programming environment. For example, a Logic level resides on a first computer system that is remotely located from a second computer system containing an Interface or Storage level. These first and second computer systems can be configured in a server-client, peer-to-peer, or some other configuration. These various levels can be written using the above described component design principles and can be written in the same programming language or a different programming language. Various protocols are implemented to enable these various levels and components contained therein, to communicate regardless of the programming language used to write these components. For example, a module written in C++ using the Common Object Request Broker Architecture (CORBA) or Simple Object Access Protocol (SOAP) can communicate with another remote module written in JAVA\u2122. These protocols include SOAP and CORBA or some other suitable protocol. These protocols are well-known in the art.","A Computer System",{"@attributes":{"id":"p-0102","num":"0101"},"figref":"FIG. 25","b":["2500","102","2500"]},"The example computer system  includes a processor  (e.g., a Central Processing Unit (CPU), a Graphics Processing Unit (GPU) or both), a main memory , and a static memory , which communicate with each other via a bus . The computer system  may further include a video display unit  (e.g., a Liquid Crystal Display (LCD) or a Cathode Ray Tube (CRT)). The computer system  also includes an alphanumeric input device  (e.g., a keyboard), a user interface (UI) cursor controller  (e.g., a mouse), a disk drive unit , a signal generation device  (e.g., a speaker) and a network interface device (e.g., a transmitter) .","The disk drive unit  includes a machine-readable medium  on which is stored one or more sets of instructions and data structures (e.g., software) embodying or used by any one or more of the methodologies or functions described herein. The software may also reside, completely or at least partially, within the main memory  and\/or within the processor  during execution thereof by the computer system , the main memory  and the processor  also constituting machine-readable media.","The instructions  may further be transmitted or received over a network  via the network interface device  using any one of a number of well-known transfer protocols (e.g., HTTP, Session Initiation Protocol (SIP)).","The term \u201cmachine-readable medium\u201d should be taken to include a single medium or multiple medium (e.g., a centralized or distributed database, and\/or associated caches and servers) that store the one or more sets of instructions. The term \u201cmachine-readable medium\u201d shall also be taken to include any medium that is capable of storing, encoding, or carrying a set of instructions for execution by the machine and that cause the machine to perform any of the one or more of the methodologies described herein. The term \u201cmachine-readable medium\u201d shall accordingly be taken to include, but not be limited to, solid-state memories, optical and magnetic medium, and carrier wave signals.","Marketplace Applications","In some embodiments, the method described herein may be added as a plug-in feature to an existing media player application, while in other embodiments this method may be a part of an existing media player application. In some cases, a user may tag certain portions of digital content that the user deems important for others when viewing such that these portions of the digital content should not be passed when viewing and\/or listening to the digital content using a fast-forward mode. Further, in some cases, a viewer may want to only hear the audio or only the video at normal rate when using the fast-forward mode. Such viewing may be facilitated by the method and system described herein. Moreover, as previously alluded to, a user need not be reliant upon certain visual cues when reviewing digital content in a fast-forward mode.","The Abstract of the Disclosure is provided to comply with 37 C.F.R. \u00a71.72(b), requiring an abstract that may allow the reader to quickly ascertain the nature of the technical disclosure. It is submitted with the understanding that it may not be used to interpret or limit the scope or meaning of the claims. In addition, in the foregoing Detailed Description, it can be seen that various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather, as the following claims reflect, inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description, with each claim standing on its own as a separate embodiment."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Some embodiments are illustrated by way of example and not limitation in the figures of the accompanying drawings in which:",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 18"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 19"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 20"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 21"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 22"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 23"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 24"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 25"}]},"DETDESC":[{},{}]}
