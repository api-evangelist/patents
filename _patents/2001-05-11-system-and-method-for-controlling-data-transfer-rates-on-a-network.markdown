---
title: System and method for controlling data transfer rates on a network
abstract: Data transfer rates on a network are controlled in conjunction with TCP/IP protocols by limiting the available space in a receive buffer located on the receiver. Limits are generated by either moderating the rate that data is removed from the receive buffer or changing the receive buffer's size. Transfer rates are reduced to decrease the impact large transfers have on other network traffic and to reduce the total number of lost data packets. Reduced rates and priorities can be managed by scheduling systems.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07142508&OS=07142508&RS=07142508
owner: Radiance Technologies, Inc.
number: 07142508
owner_city: Los Altos
owner_country: US
publication_date: 20010511
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE DRAWINGS"],"p":["This application claims the priority benefit of U.S. Provisional Patent Application No. 60\/257,651, entitled \u201cSystem and Method For Rate Controlled Data Transfer Over A Network,\u201d filed Dec. 22, 2000; and U.S. Provisional Patent Application No. 60\/257,654, entitled \u201cSystem and Method for Scheduling Data Transfers Through a Network,\u201d filed Dec. 22, 2000, the disclosures of which are hereby incorporated by reference. This application is related to co-pending U.S. patent application Ser. No. 09\/935,016, entitled \u201cSystem and Method for Scheduling Data Transfers Through a Network,\u201d filed Aug. 21, 2001 and co-pending U.S. patent application Ser. No. 09\/852,464 entitled \u201cSystem and Method for Automated and Optimized File Transfers Among Devices in a Network,\u201d filed May 9, 2001.","1. Field of the Invention","The invention relates to network communications and more specifically to the management of data transfer rates under TCP\/IP protocols.","2. Background of the Invention","As illustrated in prior art , a computer network, generally designated , includes a plurality of receivers , each connected through communications channels  to a network . Network  is also connected through communications channels  to a sender  and an intermediary . Intermediary  serves as a transmission node or cache system between various parts of network , sender , or receivers . In some cases, receiver  and sender  are a network client and network server respectively.","Communications between the elements of computer network  are typically managed using a layered series of software and hardware systems. Prior art  illustrates some of the various layers involved when computer network  includes the World Wide Web. A top layer includes FTP\/HTTP  (File Transfer Protocol and Hypertext Transfer Protocol). These standard components serve as the interface between lower levels of the communication system and application programs such as browsers. FTP\/HTTP  operates above a TCP (Transmission Control Protocol)  layer that facilitates the delivery and reception of data packets to and from devices in computer network . IP (Internet Protocol)  layer, data link  layer, and physical network  perform well known standard operations enabling the transfer of data.","TCP  includes software running on both sender and receiver  devices. TCP  hides the details pertaining to the network and its characteristics from FTP\/HTTP  and communicates with FTP\/HTTP  through a simple TCP application programming interface (API). TCP  has three roles: (a) it prevents congestion at the receiver, (b) it prevents congestion in the network along the path used from source to destination, and (c) it guarantees a reliable data transfer.","At sender , buffers in TCP  receive data to be transferred from applications at FTP\/HTTP . These buffers are referred to as the \u201cTCP Send Buffers.\u201d Likewise, at receiver , there are \u201cTCP Receive Buffers\u201d associated with each sender , from which applications on receiver  read data transferred over network . A pair of send and receive buffers exists for each TCP connection. Data are written to and read from the send and receive buffers in blocks of various sizes.",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3","b":["310","220","110","310","320","330","220","110","310","110","330","130","130","330"]},"To prevent congestion along a communications path, TCP  follows a congestion control algorithm that limits the amount of outstanding data. The congestion control algorithm contends with the fact that no information is available regarding the available bandwidth of the path from sender  to receiver . The congestion control algorithm starts by allowing a small amount of outstanding data and then increases the amount of outstanding data allowed as acknowledgements are received from receiver . The amount of outstanding data allowed by the congestion control algorithm is referred to as the congestion window (Wc). The actual amount of data that can be sent is the send window (Ws), which is equal to the minimum of Wr  and Wc.","To illustrate the dynamics of the congestion window W, one may momentarily assume that there is an abundance of data to send and that receive window Wr  is very large, and therefore does not place any limitation on the size of the send window Ws. The congestion control algorithm starts with a small congestion window (Wc) equal to the maximum size of a single TCP segment. The first transmission includes only one TCP segment, carrying at most an amount of data equal to the maximum segment size (MSS). When an acknowledgement of the first segment is returned from receiver , the congestion window Wc is increased by another MSS to two times MSS. Since, for this illustration, Wr  is assumed to be very large, the send window Ws also becomes two times MSS. The maximum amount of data that can be sent in the next transmission (Ws) is now two times MSS. When two segments are sent, each is acknowledged independently by receiver  and as each acknowledgement is received the congestion window Wc is increased by MSS. After both acknowledgements are received from a two-segment transmission, Wc (and Ws) will equal four times MSS. By increasing the size of the congestion window by one MSS for each acknowledgement received, the number of segments in each transmission doubles as each previous transmission is fully acknowledged. This increase continues until the congestion window Wc reaches a certain value called the \u201cthreshold.\u201d Beyond the threshold, the congestion window Wc is incremented by only one MSS for each set of transmissions. This phase of the congestion control algorithm is referred to as the congestion avoidance phase. The congestion window Wc keeps increasing, albeit at a smaller (linear) rate instead of an exponential rate, until the size of the congestion window Wc reaches a preset maximum. This maximum is a predetermined system parameter. Since the congestion window Wc increases over time, the likelihood of congestion and, therefore, loss of a packet on the network also increases over time. If a TCP segment is lost in the network, the lack of acknowledgement from receiver  within a timeout period triggers the retransmission of the lost segment and all segments following it and also resets the size of congestion window Wc (and Ws) to MSS. The process described above is then repeated. TCP , therefore, does not maintain a constant transmission rate, but rather transmits data using a congestion window that increases according to first an exponential rule and then a linear rule until a transmission loss occurs and Wc is reset.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4","b":["410","430","440","450","450","480","120","480","120","420"]},"When Wr  is finite the send window, Ws, is determined by Wr  if Wr  is less than Wc. Ws is always the minimum of the current value of Wc and the most recently declared value of Wr .","A method of controlling the rate of data transfer is to limit the rate at which the application at sender  writes data to the send buffer. This is accomplished by limiting the size and frequency of data blocks written to the send buffer. Writing blocks of small size and high frequency can represent a high overhead at sender . Since sender  is typically a server serving a large number of clients, the preference of sender  is to use large blocks, and to control the rate by controlling the frequency of writes. However, writing large size blocks gives TCP  an opportunity to send large batches. Large batches generate traffic of a bursting nature and thus are more likely than traffic of a steady nature to cause congestion in network .","The prior art systems described above have a number of disadvantages. The variable send window Ws implies that an optimal transmission rate is never maintained. The average transmission rate also varies as a function of total traffic on the network. This variability makes scheduling of large data transfers difficult and allows large transfers to have a significant impact on other data. To be practical any solutions to these problems must be made utilizing the current standardized protocols.","Two prior art methods of regulating transfer rates involve intercepting the acknowledgement sent from receiver  to sender . In the first method the acknowledgement is delayed for a period of time and in the second the value of Wr reported within the acknowledgement is modified by inserting a new value. Both of these approaches have significant disadvantages, including the necessity of intercepting packets in the network.","Further information about TCP\/IP and the state of the art in data transfer methods is found in the following references:","W. Richard Stevens, \u201cTCP\/IP Illustrated. Vol I\u2014The Protocols,\u201d Addison-Wesley, 1994;","Comer, Douglas, \u201cInternetworking with TCP\/IP. Vol. I.,\u201d Prentice Hall, 1991;","Comer, Douglas, and Stevens, David, \u201cInternetworking with TCP\/IP. Vol. II.,\u201d Design, Implementation, and Internals. Prentice Hall, 1991; and","Packer, Robert L., \u201cMethod for Explicit Data Rate Control in a Packet Communication Environment Without Data Rate Supervision\u201d, U.S. Pat. No. 6,038,216.","The invention includes methods of regulating the rate of transmission on a computer network employing TCP. The methods involve moderating the amount of available space in a receive buffer by either reducing the rate at which data is removed from the receive buffer or changing the size of the receive buffer. By moderating the available space in the receive buffer, the size of data blocks sent by a sender is controlled and the average transmission rate is regulated.","Embodiments of the system for regulating an average rate of transmission on a computer network include a rate control software module, running on the receiver, that monitors the actual transmission rate, the number of lost packets, and the size of the receiver's receive window (Wr). In an embodiment of the invention the rate control module regulates the rate at which data is removed from the receive buffer. In another embodiment the rate control module adjusts the size of the receive buffer. In both of these embodiments, the rate control module moderates the size of the receiver's receive window, which controls the rate at which the sender transmits data.","The rate control module optionally operates in response to a priority or schedule associated with a data transmission. For example, the receiver attempts to achieve a transmission rate that is determined by a priority assigned to the data. Computer code operating on either the sender or the receiver optionally manages a schedule for a plurality of transmissions.","The invention allows the transfer of large data files in the \u201cbackground\u201d with controlled effects on other network traffic.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 5","FIG. 5"],"b":["510","520","510","220","210","510","210","520","530","540","540","210","220","550","540","520","540"]},"Rate control module  controls data transmission rates by manipulating the reported size, Wr , of the receive window. The send window and thereby the transmission rate is limited by changing the size of the receive window as reported to sender  by TCP . Limiting the transmission rate of low priority data reduces the impact that low priority transmissions have on higher priority transmissions.","In one embodiment of the invention, rate control module  manipulates the size of receive window W by controlling the rate at which data are read from receive buffer . Manipulating this rate does not require modification of standard protocols and is, therefore; non-intrusive. When data is removed from receive buffer  in increments of a relatively small size, the declared available space Wr  sent back with each acknowledgement remains small, and thus limits send window Ws and the rate of data transmitted by sender .","Locating rate control module  on receiver  provides a number of advantages. Software on receiver  is capable of measuring an actual transfer rate more accurately than software located elsewhere. Rate control module  interrogates the TCP API and obtains the number of total bytes and free bytes in receive buffer . Rate control module  is thus able to monitor the absolute rates at which data are delivered to and read out of receive buffer . Rate control module  actively adapts the rate at which data are read from receive buffer , so as to control Wr  and thereby the rate at which sender  transmits data. Rate control module  can adapt the rate at a variety of times, e.g., just before a read operation. Through the two steps of (1) reading data from receive buffer  in increments of a certain size and frequency, and (2) examining the amount of data in receive buffer , many further methods of dynamic rate control, through the parameter Wr, are possible. This embodiment of rate control module  does not require modification of standard protocols such as TCP  or IP .","In an alternative embodiment, rate control module  manipulates the size of receive window W by modifying the size of receive buffer . Since TCP  uses the size of receive buffer  to calculate Wr , changing the size of receive buffer  influences the size of the send window Ws. The size of receive buffer  is changed using standard techniques. Modifying the size of receive buffer  has an advantage in that the rate that data is read from receive buffer  by FTP\/HTTP  is not reduced. Controlling the transmission rate by modifying the size of receive buffer  is also used to prevent an initial burst of traffic during an initial phase of a transmission, when the congestion window Wis increasing exponentially.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 6","FIG. 5"],"b":["550","550","610","620","630","550","520","520","540","520"]},"Schedule\/priority manager  manages scheduling of data transfers and allows users to designate a level of priority for a data transfer. For example, data is scheduled to be transferred to receiver  before a specific deadline, or alternatively, the transfer is given a priority such that it does not interfere with other traffic on network . In one embodiment of transfer manager , a user selects a priority level for the data transfer. The selected priority level results in an absolute transfer rate or is responsive to other factors such as the total amount of traffic receiver  is receiving or the number of dropped packets experienced in the transfer. The rate of data transfer to receiver , for data transferred using the methods of the invention, is varied as a function of the amount of other traffic on network  or traffic receiver  is receiving. For example, receiver  begins a real-time video conference and as a result the transfer rate of a continuing low priority data transfer is reduced to regulate the effect that the low priority transfer has on the video conference. When the video conference is complete the transfer rate of the low priority data transfer is again adjusted.","Priority data  includes data provided by a user or supervisor that allows schedule\/priority manager  to determine the relative priority of data transfers. Priority data  is used for determining transfer rates and transfer schedules. Transfer history data  is used to monitor the performance of transfer manager  and to estimate total transfer times.","In one embodiment, transfer manager  and receiver  first exchange information such as target transfer rates, transmission priority, historic transmission rates, reception rates, Wc, Ws, buffer information, or the like. Rate control module  at receiver  then uses this information to control the transmission such that it meets priority and schedule requirements while also having a regulated impact on network . Other shared data and factors, such as time of day, network load, and the like, are also optionally considered.","In another embodiment, transfer manager  regulates communications to a plurality of receiver . In this embodiment, transfer manager  is located on a router acting as an intermediary between the Internet and a local area network that includes a plurality of receiver . Transfer manager  assigns different priorities to data transfers as a function of the identity of receiver  or optionally assures that a data transfer to one receiver  does not significantly affect data transfers to a second receiver .",{"@attributes":{"id":"p-0045","num":"0044"},"figref":"FIG. 7","b":["710","720","740","510","330","480","720","710","220","540","780","220","540","510","520","310","310"]},"As shown in , implementing rate control module  at receiver  reduces the frequency of dropped data packets (segments) relative to the prior art of . The reduced frequency of dropped packets is a result of limiting the send window size Ws. Transfer manager  in conjunction with rate control module  optionally uses feedback and optimization routines to achieve goals determined by priority and transmission schedules. Feedback involves the transfer of performance (transmission rate) data from receiver  to transfer manager  and optimization routines optionally include queuing of tasks as a function of observed transmission rates. Parameters, including threshold levels, window sizes, buffer sizes, read sizes, and read frequency, are dynamically varied in response to the performance of network . For example, the regulation of the transfer rate by rate control module  can be dependent on the frequency of lost data packets and rate control module can become proactive only when it detects a certain frequency of lost data packets.","In alternative embodiments, rate control module  is present at receiver  and sender , and rate control module  adjusts the size of the TCP buffers of both sender  and receiver . In one embodiment, the receive window Wr  on receiver  is dynamically controlled by changing the size of receive buffer . A large initial burst of traffic is avoided during the initial period  () by starting with a small receive buffer, . Slow growth in the initial transmission rate allows a better estimate of the traffic that can be supported without losing segments.","Reducing the number of lost data packets in a transmission reduces the quantity of segments lost by other traffic on the network and the impact that the transmission has on that traffic. This is important when a goal is to reconcile the effect the transmission has on other network traffic with the priority of the transmission. For example, in some instances it is desirable to send a large file in the \u201cbackground\u201d without affecting other traffic on the network. In these instances, transfer manager  initially sets a low priority for a transmission and later adjusts the priority as a function of a delivery schedule. Rate control module  enables the delivery of large files without causing a significant increase in lost data packets.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 8","b":["810","520","550","540","820","540","550","520","530","820","810","550"]},"In step , TCP  on receiver  receives a requested data segment from sender  and places the data segment in receive buffer . In step , TCP  calculates the receive window Wr  and places the result within an acknowledgement of the last data transmission. The acknowledgement is then sent to sender  in step . In a step , rate control module  running on receiver  decides how much data, if any, should be removed from receive buffer . The decision is based, in part, on a comparison of an actual transmission rate with the target transfer rate. The decision is also optionally based on other data such as historical transmission rates, a frequency of dropped data packets, or a time since data was last removed from receive buffer . For example, if the actual transmission rate is higher than the target transfer rate, removal of data from receive buffer  is sometimes delayed such that the receive window size Wr  is decreased and the average transmission rate is thereby reduced. If data is not removed, after a delay step , then the method returns to step . If in step  rate control module  decides that data should be removed from receive buffer , a determined amount is read out in a step . In step , rate control module  determines whether there is more data to be removed from receive buffer . If there is more data, the method returns to step . If there is not more data, the method returns to step .","In another embodiment of the method of the invention, the removal of data in step  is replaced by or combined with a step of adjusting the size of receive buffer . Both of these actions are used to regulate the value of Wr  and thereby control the rate at which data is sent from sender  to receiver .","Embodiments of rate control module  adapted to function in accordance with communication protocols other than TCP that use buffered transmission, for example, those used in systems such as advanced digital telephone networks, video distribution networks, or for the delivery of streaming media, are within the scope of the invention. In these systems a much higher priority is optionally applied to live voice data transmissions than to other data. The transmission of non-voice data is controlled using methods of the invention in a manner that minimizes losses of the higher priority voice data. The invention provides significant advantages when real-time and non-real-time data share a network by providing a method that is able to reduce the impact of the non-real-time data on the transmission of the real-time data.","The invention is optionally used to optimize the scheduling of data transmissions among computer systems. For example, if many large files are to be transmitted, their transmission rate and sequence are optionally adjusted in response to priority criteria and schedules. Files with a lower priority are sent at a lower transmission rate so that files with a higher priority can utilize a higher proportion of available bandwidth. An embodiment of the invention includes a scheduling utility that delivers files to a plurality of receivers according to required delivery dates. The scheduling utility sequences and manages deliveries to have minimum impact on a receiver's other activities."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 6","FIG. 5"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
