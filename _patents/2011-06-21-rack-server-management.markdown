---
title: Rack server management
abstract: Techniques presented herein provide approaches for managing rack servers. In one embodiment, a message is received from a management controller of a rack server and via a switch port, where the message requests a lease for a network address under a first protocol. Upon determining that the management controller is a supported device, the switch port is configured to allow network traffic under at least a second protocol.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08751675&OS=08751675&RS=08751675
owner: Cisco Technology, Inc.
number: 08751675
owner_city: San Jose
owner_country: US
publication_date: 20110621
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","DETAILED DESCRIPTION","Overview","DESCRIPTION OF EXAMPLE EMBODIMENTS"],"p":["Embodiments presented in this disclosure generally relate to techniques for managing rack servers and, more particularly, to techniques for establishing communication between a management application and one or more rack servers.","As the number of computer servers used by businesses has substantially increased, a number of techniques have been developed to remotely manage the operation of such servers. For example, large data centers are frequently managed using a variety of different remote management tools, including, e.g., simple terminal connections, remote desktop applications and sophisticated software tools used to configure, monitor, and troubleshoot both computer hardware and software. The remote management tools are often configured to communicate using one or more standardized protocols.","Embodiments presented in this disclosure provide a method, logic encoded in one or more tangible media, and system for performing an operation that includes receiving a message from a management controller of a rack server. The message requests a lease for a network address under a first protocol. Further, the message stores one or more parameters characterizing the management controller in one or more fields defined by the first protocol as being reserved for vendor-specific extensions. Further, the message is received via a switch port configured to allow only network traffic under the first protocol. The operation also includes providing the lease for the network address to the management controller via the switch port. The operation also includes, upon determining that the management controller is a supported device based on the one or more parameters and an indication of one or more supported devices, configuring the switch port to allow network traffic under at least a second protocol.","Embodiments presented in this disclosure provide techniques for managing rack servers. One embodiment provides an application that manages the rack servers by communicating with management controllers in the rack servers using predefined protocols. In this regard, the application and the management controllers may perform operations configured to monitor and control the health and performance of components of the rack servers. The operations may include monitoring elements such as temperatures, voltages, power supplies, fans, bus errors, etc. For example, the application (or management controller) may receive a reading from a temperature sensor indicating that system temperature in a rack server is rising, and in response, send a command to increase fan speed in the rack server. Further, the application may also log the temperature reading. The application (or management controller) may also be configured to detect indications of a failed hardware component and generate an alert when a hardware component fails.","To this end, the management controller may communicate with components of the rack server using messages composed according to the Intelligent Platform Management Interface (IPMI) specification. IPMI refers to monitoring, system control and communication interfaces implemented directly in platform management hardware and firmware (e.g., the hardware and firmware of the host computer). Further, the management controller of the rack server may run on standby power, even when the host processors of the rack server are powered down. Examples of a management controller include a baseboard management controller (BMC) and a lights out management system. Using the techniques disclosed herein, the application identifies, authenticates, authorizes and\/or manages the rack servers without requiring any user intervention. Accordingly, the application may manage the rack servers more conveniently and\/or efficiently at least in some cases.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1","b":["100","160","100","102","102","130","160","102","130","130"]},"The computer  generally includes a processor  connected via a bus  to a memory , a network interface device , a storage , an input device , and an output device . The computer  is generally under the control of an operating system. Examples of operating systems include UNIX, versions of the Microsoft Windows\u00ae operating system, and distributions of the Linux\u00ae operating system. More generally, any operating system supporting the functions disclosed herein may be used. The processor  is included to be representative of a single CPU, multiple CPUs, a single CPU having multiple processing cores, and the like. Similarly, the memory  may be a random access memory. While the memory  is shown as a single identity, it should be understood that the memory  may comprise a plurality of modules, and that the memory  may exist at multiple levels, from high speed registers and caches to lower speed but larger DRAM chips. The network interface device  may be any type of network communications device allowing the computer  to communicate with other computers via the network .","The storage  may be a persistent storage device. Although the storage  is shown as a single unit, the storage  may be a combination of fixed and\/or removable storage devices, such as fixed disc drives, solid state drives, floppy disc drives, tape drives, removable memory cards or optical storage. The memory  and the storage  may be part of one virtual address space spanning multiple primary and secondary storage devices.","The input device  may be any device for providing input to the computer . For example, a keyboard and\/or a mouse may be used. The output device  may be any device for providing output to a user of the computer . For example, the output device  may be any conventional display screen or set of speakers. Although shown separately from the input device , the output device  and input device  may be combined. For example, a display screen with an integrated touch-screen may be used.","As shown, the memory  of the computer  includes an application , and each rack server  includes a respective management controller . The application  is configured to manage the rack servers  by communicating with the management controllers  via the network , using one or more predefined protocols. The application  may also provide a command-line interface (CLI), a graphical user interface (GUI), and\/or an application programming interface (API) for managing the rack servers . In some embodiments, the computer  is configured to provide a switch fabric for the rack servers . In this regard, the computer  may be configured to provide some or all functionality typically provided by a network switch. As used herein, a switch fabric refers to a network topology where network nodes connect with each other via one or more network switches. In this regard, the computer  may be regarded as a fabric interconnect device, or fabric interconnect for short. Further, the storage  of the computer  stores supported device data  and an inventory .","In one embodiment, the supported device data  characterizes which management controllers  are deemed to be valid devices by the application . Put another way, the supported device data  includes indications of which management controllers  are deemed to be valid or supported by the application . The supported device data  may store one or more fields identifying different devices and\/or device types and an associated flag indicating whether each device and\/or device type is supported. In one embodiment, a valid or supported device refers to a device that is compatible with the functionality of the application  for identifying, authenticating, authorizing and\/or managing the rack servers  as disclosed herein. The application  uses the supported device data  in managing the rack servers , such as in authorizing and\/or authenticating the management controllers  of the rack servers . For example, the application  may compare parameters received from and characterizing the management controller  with the fields stored in the supported device data , to determine whether the management controller  is a supported device. The application  also maintains the inventory  of the rack servers  and\/or management controllers .",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2","b":["200","160","200","202","206","160","200","216","216","216","160","216","160","160","216","160","216","216","160"],"sub":["1 ","2","1 ","2 ","1","1 ","1"]},"In one embodiment, configuring the networked system  to include two fabric interconnects  and\/or two fabric extenders  provides redundant network paths for both management traffic and data traffic. Each fabric interconnect  corresponds to the computer  of . Further, each fabric extender  is configured to extend a switch fabric provided by a respective fabric interconnect  and may include one or more switch ports. In this regard, each fabric extender  serves as remote line cards for an associated fabric interconnect . In one embodiment, a line card refers to a card or assembly that contains data interfaces (e.g., optical fibers) and which may be inserted into a network device, such as a switch or router. Each fabric interconnect  may also manage configurations of the associated fabric extender .","As shown, each rack server  is connected to the in-band network via cabling from a network adapter port  to a switch port  of the fabric interconnect . Further, each rack server  is connected to the out-of-band network via cabling from a LAN on motherboard (LOM) port  to the fabric extender  and cabling from the fabric extender  to another switch port  of the fabric interconnect . In an alternative embodiment, each rack server  is connected to the out-of-band network via cabling from the LOM port  to the fabric interconnect  and not through any fabric extender . In a particular embodiment, each fabric interconnect  may be a Cisco\u00ae UCS 6100 series fabric interconnect, each fabric extender  may be a Cisco\u00ae Nexus 2000 series fabric extender, and the application executing on each fabric interconnect  may be a Cisco\u00ae Unified Computing System Manager (UCSM).","In one embodiment, each management controller  maintains a state, where the state stores an operating mode of the respective management controller . Each management controller  operates in either a \u201cstand-alone\u201d operating mode or a \u201cUCSM\u201d operating mode. The stand-alone operating mode indicates that the management controller  is not currently attempting to parse any commands from the application . The UCSM operating mode indicates that the management controller  is currently attempting to parse commands from the application . The application  may instruct the management controller  to transition between the two operating modes.","In one embodiment, the application  configures each management controller  with a respective network address for the out-of-band network using a predefined protocol. Depending on the embodiment, the predefined protocol may either be vendor-specific or vendor-independent. A vendor-independent protocol refers to a protocol that is not specific to any vendor. In one embodiment, each network address is an Internet Protocol (IP) address, and the predefined protocol is Dynamic Host Configuration Protocol (DHCP). Further, the application  may also provide a DHCP service for the management controllers . Depending on the embodiment, some or all of the functionality of the DHCP service may be provided by a separate program associated with and\/or managed by the application , and vice versa. By default, each management controller  may be configured to send, to the DHCP service, one or more DHCP messages requesting an IP address from the DHCP service. The DHCP messages include a field storing a client identifier. The client identifier may be composed according to a predefined format that is customizable by a vendor of the application , to suit the needs of a particular case. Table I shows an example of a predefined format for the client identifier.",{"@attributes":{"id":"p-0023","num":"0022"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE I"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example format for a client identifier in a DHCP message"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<VENDOR>|+|<MODEL>|+|<SERIAL>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"As shown, the predefined format for the client identifier includes three sub-fields separated by a predefined delimiter (\u201c|+|\u201d). The three sub-fields include a vendor identifier, a model identifier, and a serial identifier. In one embodiment, the application  uses the vendor identifier and the model identifier to identify a source of the DHCP messages as a valid device, where the source is a rack server  and\/or a management controller . The application  uses the serial identifier to maintain the inventory  of identified devices. The inventory  is maintained for audit and\/or authentication purposes. In particular, the application  uses the inventory  to associate features and\/or configurations to a particular rack server . For instance, suppose that a rack server , having an associated configuration, is decommissioned for maintenance and is subsequently reconnected to the switch fabric following a maintenance cycle. The application  may then identify the rack server  and re-associate the configuration with the rack server . In some embodiments, the inventory is stored in a database system, and the serial identifier may be used as a unique key in the database system. In other embodiments, the serial identifier is combined with an additional field, such as a product identifier field, to form the unique key.","In one embodiment, the DHCP messages sent by the management controller  further contain one or more parameters characterizing the management controller . The parameters may be stored in one or more fields that are reserved for vendor-specific extensions. For example, the fields may correspond to one or more options within the range of DHCP options -, which is designated by the DHCP specification as being reserved for vendor-specific extensions.","In one embodiment, the DHCP messages sent by the application  and\/or DHCP service may also store data in one or more fields that are reserved for vendor-specific extensions. For example, suppose the management controller  sends a message requesting DHCP option . In response, the application  and\/or DHCP service sends one or more messages having a field corresponding to DHCP option  and storing data in a predefined format, such as shown in Table II.",{"@attributes":{"id":"p-0027","num":"0026"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE II"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example data stored in DHCP option 251 by the application"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<ucsmdata version=\u201d1 0\u201d>"]},{"entry":[{},"\u2003\u2002<action name=\u201dchange-mode\u201d val=\u201ducsm\u201d\/>"]},{"entry":[{},"\u2003\u2002<auth hashval=\u201d123\u201d count=\u201d23\u201d\/>"]},{"entry":[{},"<\/ucsmdata>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"As shown in Table II, the data stored in DHCP option  includes a protocol version, a command and an authentication token. The protocol version specifies a version of the protocol being used by the DHCP server for identifying the management controllers . As shown, the protocol version is specified in the <ucsmdata> tag as being version 1.0. The <ucsmdata> tag additionally identifies the DHCP server as the source of the message. The command, specified in an <action> tag, instructs the management controller  to transition to the UCSM operating mode. The authentication token is specified in an <auth> tag. Other commands are broadly contemplated. For example, the other commands may specify to reset the management controller , to restore a configuration of the management controller  to a factory default configuration, etc.","In one embodiment, the management controller  parses the data to retrieve the commands, authentication tokens, etc. The management controller  may also execute the retrieved commands. In one embodiment, the format for data stored in the DHCP option  may be proprietary to a vendor of the application  or of the fabric interconnect . Because the DHCP specification does not mandate the use of DHCP option , applications and\/or DHCP services from other vendors will likely either not populate the data or populate the data incorrectly. In such cases, the management controller  will not successfully parse any commands from the DHCP option .","In one embodiment, the management controllers  may respond to messages sent from the DHCP service. For example, the management controllers  may send additional messages that store data in one or more options within the range of DHCP options -. The DHCP service may parse the data in the additional messages to complete a process of discovering and\/or maintaining an inventory for the rack servers .","For example, suppose that the management controller  sends a message to the DHCP service, where the message requests to the DHCP service to populate DHCP option . Table III shows an example of the message sent to the DHCP service.",{"@attributes":{"id":"p-0032","num":"0031"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE III"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example data stored in DHCP option 250 by the management controller"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<bmcdata version \u201c1 0\u201d mode=\u2033stand-alone\u2033 source=\u2033lom\u2033>"]},{"entry":[{},"\u2003\u2002<auth hashval=\u203310023\u2033 count=\u203367\u2033\/>"]},{"entry":[{},"<\/bmcdata>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}]}}},"As shown in Table III, the data stored in DHCP option  includes a protocol version, an operating mode, a source interface and an authentication token. The protocol version is specified in the <bmcdata> tag as being version 1.0. The <bmcdata> tag additionally identifies the management controller  as being the source of the message. The operating mode, specified in the <mode> tag, indicates that the management controller  is currently operating in the stand-alone mode. The source interface, specified in the <source> tag, identifies the physical interface being used to connect the rack server  to the fabric interconnect . In this particular example, the physical interface is the LOM. By configuring the DHCP service according to the techniques disclosed herein, the DHCP service may parse the DHCP option  in the message, to retrieve the hash value contained in the message. A DHCP service not so configured will likely ignore the DHCP option , without any impact to functionality to the DHCP service. Accordingly, a level of compatibility with other DHCP services is maintained.","In one embodiment, responsive to messages requesting an IP address, the DHCP service provides, to the management controller , a lease for the IP address for the out-of-band network . Additionally, the DHCP service may also update an entry for the management controller, in the inventory . Further, the DHCP service may also monitor a state of the management controller  and\/or rack server . In one embodiment, the duration of a lease may be a predefined number of seconds. Having a relatively short lease duration\u2014such as one of several seconds\u2014results in the management controller  requesting a new lease more frequently. Increasing a frequency which a management controller  communicates with the DHCP service is advantageous at least in some cases, because doing so allows the management controller  to communicate any change of state of the management controller  and\/or of rack server  more frequently.","In one embodiment, the application  is further configured to manage the switch ports  and\/or the switch ports of the fabric extenders . To this end, the application  may maintain a state for each switch port, where the state is either an \u201cuntrusted\u201d state or a \u201ctrusted\u201d state. For instance, the application  may designate a switch port  as being in an untrusted state. In the untrusted state, the switch port  is configured to allow only DHCP packets to and\/or from the management controller . Upon identifying the management controller  as a valid device, the application  may additionally designate the switch port  as being in a trusted state. In the trusted state, the switch port  is configured to allow packets of one or more predefined protocols other than DHCP\u2014in addition to allowing DHCP packets to and\/or from the management controller . The one or more predefined protocols may include Secure Shell (SSH), Telnet, Hypertext Transfer Protocol (HTTP), HTTP Secure (HTTPS), Trivial File Transfer Protocol (TFTP) and Intelligent Platform Management Interface (IPMI), etc.","In some embodiments, in the trusted state, the switch port  allows all types of network traffic to and\/or from the management controller . Once the switch port  is in the trusted state, the application  may further authenticate and\/or authorize the management controller  using one or more additional protocols. The additional protocols may be proprietary to the vendor of the application  and may be tailored to suit the needs of a particular case. For instance, the application  may issue one or more commands via a mctools protocol. The mctools protocol refers to a proprietary protocol configured to support commands such as retrieving sensor readings from the management controller , retrieving logs from the management controller , executing power operations via the management controller , etc.","In one embodiment, the switch port  may also revert from a trusted state to an untrusted state. For example, the application  may revert the switch port  from the trusted state to the untrusted state upon detecting that a user has removed, from the switch fabric, the rack server  previously connected to the switch port . As another example, the application  may revert the switch port  from the trusted state to the untrusted state upon detecting an indication that a topology change has occurred in the switch fabric. For instance, the indication may be a port flap for a switch port. Accordingly, by using the techniques disclosed herein, the application  may manage the rack servers  more securely at least in some cases.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 3","b":["300","160","150","300","310","150","204","162","216","204","162"],"sub":"2"},"At step , the application  provides the management controller  with the lease for the network address, responsive to the message and via the predefined protocol. At step , the application  determines whether the management controller  is a valid device, based on one or more of the parameters received in the request (and a predefined set of valid devices). At step , upon determining that the management controller  is a valid device, the application  configures the switch port to further allow network traffic under at least one protocol other than the predefined protocol.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 4","b":["400","160","150","160","150","400","410","162","160","410","162","250","251","420"]},"At step , the DHCP service identifies the rack server  by using the client identifier and updates the database with a unique key and a state of the management controller . At step , the DHCP service sends a response message to the management controller , to provide a lease to the management controller . The response message populates DHCP option  with one or more commands. At step , the management controller  parses the response message from the DHCP service. At step , the management controller  determines whether the response message includes DHCP option  data. If so, the management controller  executes the one or more commands in the DHCP option  (step ). Otherwise, at step , the management controller  and the application  complete the authentication process. At step , the application  converts the switch port  connected to the management controller  from an untrusted state to a trusted state, allowing other non-DHCP traffic through the switch port .","Advantageously, embodiments described above provide approaches for managing rack servers. In one embodiment, an application receives a message from a management controller of a rack server and via a switch port, where the message requests a lease for a network address under a first protocol. Upon determining that the management controller is a valid device, the application configures the switch port to allow network traffic under at least a second protocol. Accordingly, the application may manage the rack servers more conveniently and\/or securely at least in some cases.","For example, the rack servers may be managed more conveniently and\/or securely, relative to some alternative embodiments, which are further described below. In particular, the application may support automatic discovery of rack servers, relative to such alternative embodiments, where automatic discovery refers to identifying the rack servers without requiring user input and without requiring agents to be installed on the rack servers, when compared to such alternative embodiments. The application may also support asynchronous discovery of rack servers, relative to such alternative embodiments, where asynchronous discovery refers to identifying rack servers being added to the switch fabric, without requiring user input and without requiring agents to be installed on the rack servers. In this regard, the application identifies the rack server without requiring any user intervention or scheduling mechanism. Merely the rack server being added to the switch fabric may be sufficient for prompting the application to identify the rack server, and no other synchronization is required between the application and the operation of adding the rack server to the switch fabric.","An example of one such alternative embodiment includes installing an agent on each rack server, where the agent is a Simple Network Management Protocol (SNMP) agent or a vendor-specific agent. The alternative embodiment may also include having a user provide a range of network addresses in the switch fabric. The alternative embodiment may also include scanning the range of network addresses to identify all rack servers having the agent installed. The alternative embodiment may also include having a user manually provide authentication information for configuring the rack server and the application, such that the rack server may communicate with the application via a secure protocol.","Additionally or alternatively, the application may also manage one or more blade servers in a blade system. In the case of blade servers, however, a fixed relationship may be established between each chassis slot of a blade system and an IP address of a management controller of the blade server disposed within the respective chassis slot. For example, the IP address of the management controller may be determined from a chassis identifier and a slot identifier for the chassis slot in which the blade server is disposed. Accordingly, the IP address of the management controller cannot be changed unless the blade server is moved to a different chassis slot of the blade system. This is in contrast to the rack server environment, where no such relationship exists that establishes the IP address for the management controller. Consequently, the application may manage the blade servers more conveniently than managing the rack servers at least in some cases.","In the preceding, reference is made to embodiments presented in this disclosure. However, it should be understood that the present disclosure is not limited to specific, described embodiments. Instead, any combination of the following features and elements, whether related to different embodiments or not, is contemplated to implement and practice the present disclosure, and moreover the disclosure is to be accorded the widest scope consistent with the principles and features described herein. Furthermore, although embodiments may achieve advantages over other possible solutions and\/or over the prior art, whether or not a particular advantage is achieved by a given embodiment is not limiting of the disclosure.","As will be appreciated by one skilled in the art, embodiments presented in this disclosure be embodied as a system, method or computer program product. Accordingly, embodiments may take the form of an entirely hardware embodiment, an entirely software embodiment (including firmware, resident software, micro-code, etc.) or an embodiment combining software and hardware aspects that may all generally be referred to herein as a \u201ccircuit,\u201d \u201cmodule\u201d or \u201csystem.\u201d Furthermore, embodiments may take the form of a computer program product embodied in one or more computer readable medium(s) having computer readable program code embodied thereon.","Any combination of one or more computer readable medium(s) may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be, for example, but not limited to, an electronic, magnetic, optical, electromagnetic, infrared, or semiconductor system, apparatus, or device, or any suitable combination of the foregoing. More specific examples (a non-exhaustive list) of the computer readable storage medium would include the following: an electrical connection having one or more wires, a portable computer diskette, a hard disk, a random access memory (RAM), a read-only memory (ROM), an erasable programmable read-only memory (EPROM or Flash memory), an optical fiber, a portable compact disc read-only memory (CD-ROM), an optical storage device, a magnetic storage device, or any suitable combination of the foregoing. In the context of this document, a computer readable storage medium may be any tangible medium that can contain, or store a program for use by or in connection with an instruction execution system, apparatus or device.","Further, embodiments may be provided to end users through a cloud computing infrastructure. Cloud computing generally refers to the provision of scalable computing resources as a service over a network. More formally, cloud computing may be defined as a computing capability that provides an abstraction between the computing resource and its underlying technical architecture (e.g., servers, storage, networks), enabling convenient, on-demand network access to a shared pool of configurable computing resources that can be rapidly provisioned and released with minimal management effort or service provider interaction. Thus, cloud computing allows a user to access virtual computing resources (e.g., storage, data, applications, and even complete virtualized computing systems) in \u201cthe cloud,\u201d without regard for the underlying physical systems (or locations of those systems) used to provide the computing resources.","Typically, cloud computing resources are provided to a user on a pay-per-use basis, where users are charged only for the computing resources actually used (e.g., an amount of storage space consumed by a user or a number of virtualized systems instantiated by the user). A user can access any of the resources that reside in the cloud at any time, and from anywhere across the Internet. In context of the present disclosure, the application and\/or the management controllers may operate in the cloud. Doing so allows the user to manage execution of the rack servers from any computing system attached to a network connected to the cloud (e.g., the Internet).","The flowchart and block diagrams in the Figures illustrate the architecture, functionality and operation of possible implementations of systems, methods and computer program products according to various embodiments presented in this disclosure. In this regard, each block in the flowchart or block diagrams may represent a module, segment or portion of code, which comprises one or more executable instructions for implementing the specified logical function(s). In some alternative implementations, the functions noted in the block may occur out of the order noted in the figures. For example, two blocks shown in succession may, in fact, be executed substantially concurrently, or the blocks may sometimes be executed in the reverse order, depending upon the functionality involved.","In view of the foregoing, the scope of the present disclosure is determined by the claims that follow."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["To facilitate understanding of embodiments presented in this disclosure, the appended drawings are provided, which illustrate only typical embodiments presented in this disclosure and are therefore not to be considered limiting of its scope, and which are briefly described as follows.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
