---
title: Coded filter
abstract: A method and apparatus for estimating and compensating for a broad class of non-Gaussian sensor and process noise. In one example, a coded filter combines a dynamic state estimator (for example, a Kalman filter) and a non-linear estimator to provide approximations of the non-Gaussian process and sensor noise associated with a dynamic system. These approximations are used by the dynamic state estimator to correct sensor measurements or to alter the dynamic model governing evolution of the system state. Examples of coded filters leverage compressive sensing techniques in combination with error models based on concepts of compressibility and the application of efficient convex optimization processes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09007260&OS=09007260&RS=09007260
owner: The Charles Stark Draper Laboratory, Inc.
number: 09007260
owner_city: Cambridge
owner_country: US
publication_date: 20110623
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY OF INVENTION","DETAILED DESCRIPTION","Example 1","Example 2","Example 3","Example 4","Example 5"],"p":["1. Field of Invention","The present invention relates to estimation techniques, and more particularly, to methods and apparatus for estimating and compensating for certain types of non-Gaussian noise.","2. Discussion of Related Art","There are numerous applications that use Kalman filtering principles to estimate the state variables of dynamic systems. For example, many existing navigation systems combine GPS (global positioning system) and INS (inertial navigation system) measurements using Kalman filtering principles to achieve relatively accurate navigation. The Kalman filter is a mathematical method that estimates the state of a dynamic system, using a sequence of sensor measurements observed over time, by specifying the state transition model of the system, the observation model, and a representation of the noise in the system. When performing calculations for a Kalman filter, the state estimates and covariances are coded into matrices to handle the multiple dimensions in a single set of calculations. This allows for representation of linear relationships between different state variables (such as position, velocity, and acceleration) in any of the transition models or covariances. Noise in the sensor measurements, approximations in the system model, and\/or unaccounted for external factors may all introduce uncertainty into predicted values for the state. The Kalman filter produces an estimate of the state by predicting a value of the state, estimating the uncertainty in the predicted value, and computing a weighted average of the predicted value and a new measured value of the state, with the most weight given to the value with the least uncertainty. This process is repeated over time to track the state. For example, in a navigation system to continuously provide the position of the navigator. The estimates produced by the Kalman filter lie between the measured values and the predicted values, and tend to be closer to the true values than the original measurements because the weighted average has a better estimated uncertainty than either the measured or predicted values alone.","In the navigation context, while these systems are sufficient for environments with good satellite visibility, complex environments (such as dense urban environments, for example) challenge existing Kalman-filter based systems due to the presence of significant unmodeled, non-Gaussian errors caused by phenomena such as multi-path. Multi-path occurs because the RF (radio frequency) signals are not travelling in free space between the source and destination and may be encountering reflective barriers, such as a building or topographic feature. Referring to , there is illustrated a diagram demonstrating the multi-path effect. A navigator  receives direct (non-reflected) signals  (solid lines) from sources  (e.g., GPS satellites), but also receives reflected signals  (dotted lines) that have reflected off buildings  or other obstructions. In some circumstances, the reflected signal  may be stronger (higher in amplitude) than the direct signal, resulting in errors in positional calculations in a navigation system; The Kalman filter model assumes that the noise in the system is Gaussian. However, errors in pseudo-ranges due to multipath are poorly approximated using Gaussian assumptions. To overcome these limitations in navigation systems, aiding information may be provided using sensors (e.g., magnetometers, Doppler radars, or cameras), databases (e.g., image databases), additional infrastructure (e.g., RF beacons), and signals of opportunity (e.g., television signals). While such approaches can provide useful aiding information, they can also experience errors that are not well modeled with Gaussian assumptions.","In addition, navigation systems using a Kalman filter in the position estimation process assume that the navigator's motion, and therefore change in position of the navigator from one estimation to the next, is smooth. However, in the presence of severe multi-path, the filtering process can compound the above-mentioned errors because the assumed relatively smooth motion becomes \u201cjumpy,\u201d that is, the navigator appears to move dramatically between successive estimations. As a result, there can be significant error in the estimated position of the navigation, as illustrated for example in . In , trace  represents the actual movement of an example receiver, and trace  represents the estimated movement of the example receiver using a Kalman filter, in a multi-path environment.","There are a large number of methods for dealing with non-Gaussian noise. For example, some methods include thresholding based on measurement statistics, Gauss-Markov model-based approaches, particle filters (also known as successive Monte-Carlo methods), and iterative estimators such as RANSAC (RANdom SAmple Consensus). These methods suffer from several disadvantages. For example, practical methods accounting for non-Gaussian noise are often heuristic in nature and only partially effective. Thresholding methods discard potentially useful information and require estimation of the thresholds. Methods such as the particle filter and RANSAC can be computationally expensive for realistic systems.","Aspects and embodiments are directed to methods and apparatus for providing a filter that enables estimation of a broad class of non-Gaussian noise in using computationally tractable processes.","According to one embodiment, a processor-implemented method of estimating a state variable of a dynamic system comprises receiving from at least one sensor measurements of the state variable, the measurements being corrupted by compressible non-Gaussian noise, estimating the compressible non-Gaussian noise to provide an estimated non-Gaussian error, correcting the measurements based on the estimated non-Gaussian error to provide corrected measurements, and estimating the state variable based on the corrected measurements.","In one example of the method, estimating the state variable based on the corrected measurements includes providing the corrected measurements as an input to a dynamic state estimator, and running the dynamic state estimator to estimate state variable. The state variable may be the position, velocity or acceleration of a navigator, for example. The dynamic state estimator may be a Kalman filter, for example. In another example, estimating the state variable based on the corrected measurements further includes reconfiguring the dynamic state estimator based on the estimated non-Gaussian error to provide a reconfigured dynamic state estimator, and running the reconfigured dynamic state estimator with the corrected measurements to estimate the state variable. In another example, estimating the compressible non-Gaussian noise includes determining a basis in which the compressible non-Gaussian noise is compressible, and calculating coefficients of the basis in which the compressible non-Gaussian noise is compressible to provide a coefficient vector. Estimating the compressible non-Gaussian noise may further include determining an annihilation matrix which annihilates a portion of the measurements corresponding to the state variable, and applying a minimum l1 estimator to the coefficient vector subject to constraints based on the coefficient vector, the measurements and the annihilation matrix.","According to another embodiment, a processor-implemented method of estimating position of a navigator comprises receiving from a global positioning system (GPS) sensor GPS measurements of the position of the navigator, the GPS measurements being corrupted by multipath errors, estimating the multipath errors to provide an estimated error, correcting the GPS measurements based on the estimated error to provide corrected measurements, and estimating the position of the navigator based on the corrected measurements.","In one example of the method, estimating the position of the navigator based on the corrected measurements includes providing the corrected measurements as an input to a Kalman filter, and running the Kalman filter with the corrected measurements to estimate the position of the navigator. In another example, estimating the multipath errors includes calculating a coefficient vector of Haar wavelet coefficients that together approximate the multipath errors. Estimating the multipath errors may further include determining an annihilation matrix which annihilates a portion of the measurements corresponding to the position of the navigator, and applying a minimum l1 estimator to the coefficient vector subject to constraints based on the coefficient vector, the measurements and the annihilation matrix.","Another embodiment is directed to a position estimation device configured to estimate the position of a navigator, the device comprising an error estimator configured to receive sensor measurements corrupted by non-Gaussian noise, to estimate the non-Gaussian noise, and to provide corrected measurements based on the estimate of the non-Gaussian noise, and a position estimator coupled to the error estimator and configured to receive the corrected measurements and to estimate position of the navigator based on the corrected measurements.","In one example, the position estimator includes a Kalman filter. In another example, the error estimator is configured to determine a coefficient vector including coefficients of a basis in which the non-Gaussian noise is compressible. The error estimator may be further configured to determine an annihilation matrix which annihilates a portion of the sensor measurements corresponding to the position of the navigator based on an equation that defines a relationship between the sensor measurements, the position of the navigator and the non-Gaussian noise. In another example, the error estimator is configured to apply a minimum l1 estimator to the coefficient vector subject to constraints based on the coefficient vector, the measurements and the annihilation matrix, to provide the estimate of the non-Gaussian noise.","Still other aspects, embodiments, and advantages of these exemplary aspects and embodiments, are discussed in detail below. Any embodiment disclosed herein may be combined with any other embodiment in any manner consistent with at least one of the principles disclosed herein, and references to \u201can embodiment,\u201d \u201csome embodiments,\u201d \u201can alternate embodiment,\u201d \u201cvarious embodiments,\u201d \u201cone embodiment\u201d or the like are not necessarily mutually exclusive and are intended to indicate that a particular feature, structure, or characteristic described in connection with the embodiment may be included in at least one embodiment. The appearances of such terms herein are not necessarily all referring to the same embodiment.","Non-Gaussian errors or noise occur in a number of environments of interest. For example, in dense urban environments, sometimes referred to as \u201curban canyons,\u201d GPS pseudo-ranges can become corrupted by non-Gaussian noise due to multipath. In another example, non-Gaussian process noise such as wind gusts can degrade estimation accuracy. Conventional estimators such as particle filters discussed above can compensate for such non-Gaussian noise, but at the cost of significant increases in computational complexity, making their use impractical in many applications. Aspects and embodiments are directed to methods and apparatus for estimating and compensating for a broad class of non-Gaussian sensor and process noise in a computationally efficient manner. The techniques discussed below can be applied to dynamic filtering problems where both the measurements and the underlying process are disturbed by additive non-Gaussian noise. Certain examples discussed below demonstrate the advantages of these techniques applied to multipath-corrupted GPS-based navigation.","According to one embodiment, a \u201ccoded filter\u201d combines a standard filter (such as a Kalman filter, for example) and a non-linear estimator to provide approximations of the non-Gaussian process and sensor noise associated with a dynamic system. These approximations are used by the filter to correct sensor measurements (e.g., to subtract multipath from pseudo ranges) or to alter the dynamic model governing evolution of the system state, as discussed further below. This method may provide improved performance, particularly reduced errors in the estimations of state in a dynamic system, as discussed and demonstrated below. The coded filter leverages compressive sensing techniques in combination with error models based on concepts of compressibility and the application of efficient convex optimization processes, as discussed in more detail below.","Embodiments of a coded filter may be used in connection with a variety of navigation sensors or components including, for example, GPS, radar, sonar, and\/or magnetometers (particularly, estimating field disturbances in magnetometers), as well with integrated multi-sensor multi-modal navigation systems comprising any of the above-mentioned components. For example, as discussed above, one application of the coded filter is in navigation systems where, in the presence of non-Gaussian structured noise, such as multi-path, an improvement may be obtained in estimating the position of a navigator. The coded filter may also be used in connection with Doppler radar for navigation and vision aided, navigation. The following examples may refer primarily to navigation systems; however, embodiments of the coded filter and estimation methods discussed herein may be used in a variety of applications, not limited to navigation, including, for example, calibration in sensors, failure detection (for example, in a machine or process where an unexpected or unmodeled \u201cjump\u201d occurs); accounting for the impact of wind gusts on aircraft; radar and\/or sonar applications other than navigation, modeling orbit paths for spacecraft or satellites, and\/or other applications in which there anomalous, non-Gaussian errors are present, as discussed further below.","It is to be appreciated that embodiments of the methods and apparatuses discussed herein are not limited in application to the details of construction and the arrangement of components set forth in the following description or illustrated in the accompanying drawings. The methods and apparatuses are capable of implementation in other embodiments and of being practiced or of being carried out in various ways. Examples of specific implementations are provided herein for illustrative purposes only and are not intended to be limiting. In particular, acts, elements and features discussed in connection with any one or more embodiments are not intended to be excluded from a similar role in any other embodiments. Also, the phraseology and terminology used herein is for the purpose of description and should not be regarded as limiting. Any references to embodiments or elements or acts of the systems and methods herein referred to in the singular may also embrace embodiments including a plurality of these elements, and any references in plural to any embodiment or element or act herein may also embrace embodiments including only a single element. The use herein of \u201cincluding,\u201d \u201ccomprising,\u201d \u201chaving,\u201d \u201ccontaining,\u201d \u201cinvolving,\u201d and variations thereof is meant to encompass the items listed thereafter and equivalents thereof as well as additional items. References to \u201cor\u201d may be construed as inclusive so that any terms described using \u201cor\u201d may indicate any of a single, more than one, and all of the described terms.","According to one embodiment, a random process to be estimated includes a sequence of states xwhere t\u03b5{1, . . . , T}. The evolution of the state over time may be modeled as a time varying linear or non-linear dynamic system. Equation (1) below specifies the linear case, and Equation (2) specifies the non-linear case:\n\n+\u03bd\u2003\u2003(1)\n\n()+\u03bd\u2003\u2003(2)\n\nIn Equations (1) and (2), xis an n dimensional state vector, F(for the linear case) and g(x) (for the non-linear case) are n\u00d7n state transition model matrices which are applied to the previous state, and \u03bdis the process noise which is assumed to be Gaussian with a zero mean, according to Equation (3) below.\n\n\u03bd(0)\u2003\u2003(3)\n\nIn Equation (3), Qis the covariance matrix of the process noise. In Equations (1) and (2), eis a non-Gaussian process error vector defined by Equation (4):\n\n\u2003\u2003(4)\n\nThe initial state xis assumed to be observed directly as xby sampling from a Gaussian distribution with mean xand a known covariance P. A linear observation of this process at time t is specified by:\n\n\u2003\u2003(5)\n\nIn Equation (5), His an m\u00d7n state observation model matrix which maps the true state space into the observed space, and wis the observation noise which is assumed to be zero-mean Gaussian white noise with covariance R, given by Equation (6) below:\n\n(0)\u2003\u2003(6)\n","Similarly, a non-linear observation of this process at time t is governed by a function h(t):\n\n()+\u2003\u2003(7)\n\nAlso in Equations (5) and (7), each entry ein the non-Gaussian sensor noise or error vector e, where i\u03b5{1, . . . , m} corresponds to a non-Gaussian error associated with sensor i. In one example, the error vectors are defined as follows:\n",{"@attributes":{"id":"p-0042","num":"0041"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"msup":{"mi":["e","p"]},"mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msubsup":{"mi":["e","p"],"mn":"1"}}},{"mtd":{"msubsup":{"mi":["e","p"],"mn":"2"}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"msubsup":{"mi":["e","T","p"]}}}]}}},{"msubsup":{"mi":["e","i","s"]},"mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msubsup":{"mi":["e","s"],"mrow":{"mi":"i","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"1"}}}},{"mtd":{"msubsup":{"mi":["e","s"],"mrow":{"mi":"i","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"2"}}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"msubsup":{"mi":["e","s"],"mrow":{"mi":["i","T"],"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}}}}]}}},{"msup":{"mi":["e","s"]},"mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msubsup":{"mi":["e","s"],"mn":"1"}}},{"mtd":{"msubsup":{"mi":["e","s"],"mn":"2"}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"msubsup":{"mi":["e","T","s"]}}}]}}},{"mi":"e","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msup":{"mi":["e","p"]}}},{"mtd":{"msup":{"mi":["e","s"]}}}]}}}],"mo":[",",",",","]}},{"mrow":{"mo":["(",")"],"mn":"8"}}]}}}}},"As discussed above, in one embodiment the coded filter uses concepts of compressibility, and specifically is configured to estimate a broad class of non-Gaussian errors termed \u201ccompressible errors.\u201d As used herein, the term \u201ccompressible vector\u201d refers to a vector that can be well approximated by few coefficients in some basis. Under certain conditions, compressible vectors can be recovered using very few linear measurements, as discussed further below. The vector e is considered compressible if its sorted coefficient magnitudes in a given basis decay rapidly according to a power-law. For a basis \u03a8, the associated coefficient vector is \u03b1=\u03a8e. Using \u03b1, i=1, . . . , T(n+m) to denote the coefficients of a sorted from largest to smallest, e is compressible when, for a constant R,\n\n|\u03b11\u2003\u2003(9)\n\nMany signals of interest, including a broad set of navigation errors, are approximately sparse or compressible, with few large coefficients and many small coefficients.\n","There exist compressible errors that are poorly described by Gaussian assumptions. Furthermore, non-Gaussian errors of several sensors used in navigation and other applications are compressible. For example, GPS multipath is well approximated in a properly chosen wavelet basis. Referring to , there is illustrated an example of a GPS multipath signal  () that is compressible in a Haar wavelet () basis.  illustrates that the signal  is well approximated by the Haar wavelet coefficients as the resulting estimated signal  closely tracks the original signal . Accordingly, aspects and embodiments use this compressibility of certain non-Gaussian errors to obtain accurate estimates of errors that are difficult to estimate using conventional approaches.","In navigation scenarios where the non-Gaussian errors are compressible, measurements are a function of the state, which is not necessarily compressible, as well as the errors. As a result, the compressive sensing techniques discussed above may not be applied to navigation directly (e.g., as a replacement for the Kalman filter). However, for an over-determined set of linear equations, estimating the compressible error vector and estimating the state are related problems. Accordingly, aspects and embodiments exploit the duality between compressive sensing and error correction of a channel code in communications theory, as explained below. This approach is referred to herein as coded filtering. According to certain embodiments, the navigation problem is formulated as a channel coding problem where the propagation and measurement equations encode the state (position of the navigator), and the decoder estimates the channel errors. This approach leverages the redundancy provided in the sensor measurements, together with the compressibility of the non-Gaussian errors, to first estimate the non-Gaussian errors e and then to estimate the state x using the corrected measurements and process noise model as discussed further below.","The channel coding problem can be represented as follows:\n\n\u2003\u2003(10)\n\nIn Equation (10), z is the observation (or measurement), x is the vector representing the state being estimated, A is defined as an overdetermined matrix having M rows and N columns with M>N, u is the Gaussian noise vector, and e represents the compressible non-Gaussian errors. In the channel coding context, these quantities have known interpretations. The variable x is the message being sent, the matrix A is the encoding matrix that maps the message to a codeword, and the sum of the compressible errors and Gaussian noise corresponds to the channel noise.\n","To gain observability of the non-Gaussian errors e, a matrix is computed that annihilates the portion of the observations z that are caused by the state x. This annihilation matrix B can be defined having dimensions (M\u2212N)\u00d7M, with rows that span the null space of A, such that BA=0. The conventional QR numeric algorithm may be used to compute the eigenvalues and eigenvectors of the annihilation matrix B. In the channel coding context, the matrix B acts as a parity check matrix in the linear channel code. B can be applied to Equation (10) to obtain:\n\n\u2003\u2003(11)\n\nSince it is the non-Gaussian errors e that are of interest, Equation (9) can be reformulated as follows:\n\n\u2003\u2003(12)\n\nThe matrix B eliminates x by projecting the measurements z onto a space orthogonal to the range of A. Equations (11) and (12) define an underdetermined system of linear equations corrupted by Gaussian noise. Since B is underdetermined, there are an infinite number of solutions to Equation (11), even in the noiseless case. As a result, direct least squares estimation techniques, as may be applied to estimate Gaussian noise, do not lead to an accurate estimate of e. However, developments in the field of compressive sensing have shown that if a signal has a sparse or compressible representation in one basis then it can be recovered from a small number of linear projections (see, Candes, E. J., Romberg, M., Tao, T., \u201cStable signal recovery from incomplete and inaccurate measurements,\u201d ., Vol. 59, 2005, pp. 1207-1223; and Donoho, D., \u201cCompressed sensing,\u201d , Vol. 52(4), 2006, pp. 1289-1306).\n","According to one embodiment, the connection between error correction (channel coding) and compressive sensing is recognized and applied to dynamic estimation problems by constructing them in the form of Equation (10) above. Applying the concepts of compressive sensing in the context of Equation (11) demonstrates that if e is compressible, and assuming B satisfies certain conditions and that M-N is sufficiently large, e can be accurately estimated from the measurements Bz by solving an associated convex optimization problem. Embodiments of the coding filtering methods discussed below exploit the structure of several dynamic estimation problems of interest to efficiently compute the matrix B. Using B to annihilate the contribution of the state to the measurements, the following convex optimization problem (in this example, a second order cone program) can be solved to estimate the error e:",{"@attributes":{"id":"p-0049","num":"0048"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"munder":{"mi":"minimize","mover":{"mi":"\u03b1","mo":"~"}},"mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"msub":{"mrow":{"mo":["\uf605","\uf606"],"mover":{"mi":"\u03b1","mo":"~"}},"msub":{"mi":"l","mn":"1"}}},{"mrow":{"mi":["subject","to"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"1.1em","height":"1.1ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"msub":{"mrow":[{"mo":["\uf605","\uf606"],"mrow":{"mo":["(",")"],"mrow":{"mi":"Bz","mo":"-","mrow":{"mi":"B","mo":["\u2062","\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"msub":{"mi":["\u03a8","i"]},"mover":{"mi":"\u03b1","mo":"~"}}}}},{"mover":{"mo":"\u2211","mrow":{"mo":"-","mn":"1"}},"mo":"\u2062","mrow":{"mo":",","msub":{"mi":"l","mn":"2"}}}]}},"mo":"\u2264","mi":"\u03b5"}],"mo":["\u2062","\u2062"],"mstyle":{"mtext":{}}}},{"mrow":{"mo":["(",")"],"mn":"13"}}]}}}},"br":[{},{},{}],"sup":["T","\u22121 ","T","th "],"sub":["i{tilde over (\u03b1)}","S,l2","1 ","i","\u03a3","l2"],"in-line-formulae":[{},{}],"i":"S\u03bd"},"In some embodiments, the estimate of e obtained by solving Equation (13) is corrupted by Gaussian noise. Therefore, there may be non-zero entries of \u03b1* that are zeros in the true \u03b1. To mitigate this problem, statistical hypothesis testing may be used to choose the entries of \u03b1 that arise due to the compressible process and sensor noise. In one example, the following set is defined:\n\n\u03b1\u2225\u2267\u03c4}\u2003\u2003(15)\n\nIn Equation (15), \u03a8corresponds to the column i of \u03a8. The formulation of Equation (15) uses a statistical hypothesis test to select the entries of a that were not generated by Gaussian noise, with a confidence defined by \u03c4. In one example, the quantities can be selected such that t=E. This process augments the state to facilitate obtaining a better estimate of the state.\n","Embodiments of the coded filtering methods discussed below exploit the fact that many non-Gaussian errors are sparse in some basis (and therefore compressible) to obtain an accurate estimate using a minimum l1 estimator, and then apply the estimated errors in the original state estimation problem (e.g., estimating the position, velocity, acceleration, etc. of a navigator) to obtain more accurate results. In one embodiment, following the error estimation process discussed above, a conventional least squares estimator is applied to obtain an unbiased estimate of the augmented state and the associated covariance matrix. In one example, \u03b1is defined as a vector of length |I|, and \u03a8as the M\u00d7|I| matrix formed by selecting only the columns of \u03a8 indexed by I. Accordingly, performing a least squares estimation includes solving the following optimization problem:",{"@attributes":{"id":"p-0052","num":"0051"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"munder":{"mi":"minimize","mrow":{"mi":"x","mo":",","msub":{"mi":"\u03b1","mn":"1"}}},"mo":"\u2062","msub":{"mrow":[{"mo":["\uf605","\uf606"],"mrow":{"mi":"y","mo":"-","mrow":{"mrow":[{"mo":["[","]"],"mrow":{"mi":"A","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"msub":{"mi":["\u03a8","I"]}}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mi":"x"}},{"mtd":{"msub":{"mi":["\u03b1","I"]}}}]}}],"mo":"\u2061"}}},{"mrow":{"mi":"S","mo":"-","mn":"1"},"mo":",","msub":{"mi":"l","mn":"2"}}]}}},{"mrow":{"mo":["(",")"],"mn":"16"}}]}}}},"br":{}},"Referring to  there is illustrated a block diagram of one example of a system incorporating a coded filter according to one embodiment. As discussed above, according to one embodiment, the coded filter  operates in conjunction with a state estimator employing a dynamic estimation algorithm , such as a Kalman filter, for example, to provide improved estimations of the state. The coded filter  receives as inputs the measurements  of the state, which are also input to the state estimator , and a description of the model  used by the state estimator to estimate the state. The output  of the coded filter  is used to correct the original measurements, this correction being represented by function block , to provide improved\/corrected measurement data  to the state estimator . This improved measurement data is then used by the state estimator  to estimate the state, and these state estimates form the output  of the state estimator. Thus, the coded filter  is \u201cwrapped around\u201d the underlying state estimator and implements a smoothing technique that improves the state estimates provided by the state estimator through improving the measurement data used by the state estimator. In particular, in one embodiment, the coded filter  is configured to estimate compressible non-Gaussian noise or errors in the measurements  and correct the measurements based on the estimated compressible non-Gaussian errors.","Thus, referring to , in the navigation context, the coded filter  replaces estimation of the position of the navigator (x) with estimation of the error in the measurement of the navigator's position (step ). The estimated error is then used to correct the measurements (step ), and the corrected measurements can be used by the state estimator  to estimate the position of the navigator (step ).","The following examples illustrate the application of coded filtering methods to various dynamic state estimators, include the Kalman filter and L1 smoother.","In this example, a coded filter is applied to a Kalman filter state estimator. The coded filter modifies the dynamic state estimation algorithm used by the Kalman filter by estimating the vectors e(non-Gaussian process noise) and e(non-Gaussian sensor noise) at each time step, and using these estimates to correct the Kalman filter update and propagation steps, as discussed further below. The following formulation is accurate when the error vectors are compressible at each time step. Examples include sensor measurements where at any point in time only a small fraction of the sensors experience non-Gaussian noise, and propagation disturbances that affect only a small subset of the state variables.","According to one embodiment, for this example, the linear dynamic and measurement model of Equation (1) above can be rewritten in matrix form as follows:",{"@attributes":{"id":"p-0058","num":"0057"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mn":"0"}},{"mtd":{"msub":{"mi":["y","t"]}}}]}},{"mrow":[{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mo":"-","msub":{"mi":"F","mrow":{"mi":"t","mo":"-","mn":"1"}}}},{"mi":"I"}]},{"mtd":[{"mn":"0"},{"msub":{"mi":["H","t"]}}]}]}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"x","mrow":{"mi":"t","mo":"-","mn":"1"}}}},{"mtd":{"msub":{"mi":["x","t"]}}}]}}],"mo":"\u00b7"},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mo":"-","msub":{"mi":"v","mrow":{"mi":"t","mo":"-","mn":"1"}}}}},{"mtd":{"msub":{"mi":["w","t"]}}}]}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mo":"-","msubsup":{"mi":["e","p"],"mrow":{"mi":"t","mo":"-","mn":"1"}}}}},{"mtd":{"msubsup":{"mi":["e","t","s"]}}}]}}],"mo":["+","+"]}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"17"}}]}}}},"br":{},"sub":["t\u22121","t\u22121","t\u22121","t\u22121 ","t\u22121 ","t\u22121","t\u22121","t\u22121","t\u22121","t\u22121","t\u22121","t\u22121"]},{"@attributes":{"id":"p-0059","num":"0058"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mn":"0"}},{"mtd":{"msub":{"mi":["y","t"]}}}]}},{"mrow":[{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mo":"-","msub":{"mi":"F","mrow":{"mi":"t","mo":"-","mn":"1"}}}},{"mi":"I"}]},{"mtd":[{"mn":"0"},{"msub":{"mi":["H","t"]}}]}]}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"u","mrow":{"mi":"t","mo":"-","mn":"1"}}}},{"mtd":{"msub":{"mi":["x","t"]}}}]}}],"mo":"\u00b7"},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mo":"-","msubsup":{"mi":["v","\u2032"],"mrow":{"mi":"t","mo":"-","mn":"1"}}}}},{"mtd":{"msub":{"mi":["w","t"]}}}]}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mo":"-","msubsup":{"mi":["e","p"],"mrow":{"mi":"t","mo":"-","mn":"1"}}}}},{"mtd":{"msubsup":{"mi":["e","t","s"]}}}]}}],"mo":["+","+"]}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"18"}}]}}}},"br":{}},{"@attributes":{"id":"p-0060","num":"0059"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"msub":[{"mi":"F","mrow":{"mi":"t","mo":"-","mn":"1"}},{"mi":"u","mrow":{"mi":"t","mo":"-","mn":"1"}}],"mo":"\u2062"}}},{"mtd":{"msub":{"mi":["y","t"]}}}]}},{"mrow":[{"mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mi":"I"}},{"mtd":{"msub":{"mi":["H","t"]}}}]}},"mo":"\u2062","msub":{"mi":["x","t"]}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mo":"-","msubsup":{"mi":["v","\u2032"],"mrow":{"mi":"t","mo":"-","mn":"1"}}}}},{"mtd":{"msub":{"mi":["w","t"]}}}]}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mo":"-","msubsup":{"mi":["e","p"],"mrow":{"mi":"t","mo":"-","mn":"1"}}}}},{"mtd":{"msubsup":{"mi":["e","t","s"]}}}]}}],"mo":["+","+"]}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"19"}}]}}}},"br":{}},{"@attributes":{"id":"p-0061","num":"0060"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"z","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"msub":[{"mi":"F","mrow":{"mi":"t","mo":"-","mn":"1"}},{"mi":"u","mrow":{"mi":"t","mo":"-","mn":"1"}}],"mo":"\u2062"}}},{"mtd":{"msub":{"mi":["y","t"]}}}]}}},{"mi":"A","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mi":"I"}},{"mtd":{"msub":{"mi":["H","t"]}}}]}}},{"mi":"u","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mo":"-","msubsup":{"mi":["v","\u2032"],"mrow":{"mi":"t","mo":"-","mn":"1"}}}}},{"mtd":{"msub":{"mi":["w","t"]}}}]}}},{"mi":"e","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mo":"-","msubsup":{"mi":["e","p"],"mrow":{"mi":"t","mo":"-","mn":"1"}}}}},{"mtd":{"msubsup":{"mi":["e","t","s"]}}}]}}}],"mo":[",",",",","]}},{"mrow":{"mo":["(",")"],"mn":"20"}}]}}}},"br":[{},{}],"in-line-formulae":[{},{}],"i":["B=[\u2212H","I]"],"sub":"t"},"In this example, the non-Gaussian error vector e can be estimated by solving Equation (13) using the matrices defined in Equations (17)-(21). For this example, \u03a3 is the following m\u00d7m positive definite matrix:\n\n\u03a3==()\u2003\u2003(22)\n\n\u03a3 is the true covariance of the Gaussian errors projected onto the null space of A. The coefficients of \u03b1* that solve Equation (13) may be used to estimate the non-Gaussian errors as e*=\u03a8\u03b1*, as discussed above. As also discussed above, once the non-Gaussian errors have been estimated, thresholding as specified in Equation (13) above may be used to define support for the state, namely the set I of indices of entries in the state vector that are non-zero. A conventional least squares approach may then be used to obtain an unbiased estimate (and covariance) of the state by solving Equation (16).\n","Referring to , there is illustrated a flow diagram of one embodiment of a coded filtering process applied to a Kalman filter state estimator. Given known quantities known u(given by Equation (20) above), P(covariance from the prior time step), and y(the current measurement) at each time step the non-Gaussian process noise eand sensor noise ein the measurement applied to the Kalman filter can be estimated (step ) by solving Equation (13) using the matrices defined in Equations (17)-(21). In step , the support set I is identified by solving Equation (14) using the matrices defined in Equations (21) and (22). The support set I may be used to augment the state variables, and a least squares estimator may then be used to obtain an unbiased estimate (and covariance) of the state by solving Equation (16). This process may be repeated for successive time steps to obtain updated estimates of the state over time.","The Kalman filter assumes linear propagation and measurements. The above-discussed process for the Kalman filter example (Example 1) may be extended to non-linear propagation and measurement functions by applying conventional linearization techniques used in the derivation of the extended Kalman filter. As discussed above, the evolution of the state of a non-linear dynamic system over time is governed by a non-linear function gand can be modeled according to Equation (2) above. Equation (2) may be approximated by using a first order Taylor series around the current estimate of the mean \u00fb:\n\n()+()+\u03bd+err\u2003\u2003(23)\n\nIn Equation (23) the matrix Gis the Jacobian of gat \u00fband the error vector err, is the difference between the approximation (using the first order Taylor series) and the actual value of the non-linear function (i.e., the linearization error). As discussed above, a non-linear observation of this process at time t is governed by a function h(t), and may be modeled according to Equation (7). Equation (7) similarly may be approximated using a first order Taylor series expansion around \u016b=g(\u00fb) as follows:\n\n()+()++err\u2003\u2003(24)\n\nIn Equation (24) the matrix His the Jacobian of hat \u016b, and the error vector erris the linearization error.\n","Combining these linearized Equations (23) and (24) provides:",{"@attributes":{"id":"p-0066","num":"0065"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mn":"0"}},{"mtd":{"msub":{"mi":["y","t"]}}}]}},{"mrow":[{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mrow":{"mo":"-","msub":{"mi":"G","mrow":{"mi":"t","mo":"-","mn":"1"}}}},{"mi":"I"}]},{"mtd":[{"mn":"0"},{"msub":{"mi":["H","t"]}}]}]}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"x","mrow":{"mi":"t","mo":"-","mn":"1"}}}},{"mtd":{"msub":{"mi":["x","t"]}}}]}}],"mo":"\u00b7"},{"mo":["[","\u2062","]"],"mstyle":{"mspace":{"@attributes":{"width":"0.em","height":"0.ex"}}},"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":{"msub":[{"mi":"G","mrow":{"mi":"t","mo":"-","mn":"1"}},{"mover":{"mi":"u","mo":"\u22d2"},"mrow":{"mi":"t","mo":"-","mn":"1"}}],"mo":"\u2062"},"mo":"-","msub":{"mover":{"mi":["u","_"]},"mi":"t"}}}},{"mtd":{"mrow":{"mrow":[{"msub":{"mi":["h","t"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mover":{"mi":["u","_"]},"mi":"t"}}},{"msub":[{"mi":["H","t"]},{"mover":{"mi":["u","_"]},"mi":"t"}],"mo":"\u2062"}],"mo":"-"}}}]}},{"mo":["[","\u2062","]"],"mstyle":{"mspace":{"@attributes":{"width":"0.em","height":"0.ex"}}},"mtable":{"mtr":[{"mtd":{"mrow":{"mo":"-","msub":{"mi":"v","mrow":{"mi":"t","mo":"-","mn":"1"}}}}},{"mtd":{"msub":{"mi":["w","t"]}}}]}},{"mo":"\u2003","mrow":{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mo":"-","msubsup":{"mi":["e","p"],"mrow":{"mi":"t","mo":"-","mn":"1"}}}}},{"mtd":{"msubsup":{"mi":["e","t","s"]}}}]}},{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mo":"-","msubsup":{"mi":["err","g"],"mrow":{"mi":"t","mo":"-","mn":"1"}}}}},{"mtd":{"msubsup":{"mi":["err","t","h"]}}}]}}],"mo":"+"}}],"mo":["+","+","+"]}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"25"}}]}}}},"br":{},"sub":["t\u22121 ","t\u22121","t\u22121","t\u22121","t\u22121","t\u22121","t\u22121","t\u22121","t\u22121","t\u22121","t","t","t"],"sup":["g","h"]},{"@attributes":{"id":"p-0067","num":"0066"},"maths":{"@attributes":{"id":"MATH-US-00009","num":"00009"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msub":{"mover":{"mi":["u","_"]},"mi":"t"}}},{"mtd":{"mrow":{"msub":{"mi":["y","t"]},"mo":["-","+"],"mrow":[{"mi":"h","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mover":{"mi":["u","_"]},"mi":"t"}}},{"msub":[{"mi":["H","t"]},{"mover":{"mi":["u","_"]},"mi":"t"}],"mo":"\u2062"}]}}}]}},{"mrow":[{"mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mi":"I"}},{"mtd":{"msub":{"mi":["H","t"]}}}]}},"mo":"\u2062","msub":{"mi":["x","t"]}},{"mo":["[","\u2062","]"],"mstyle":{"mspace":{"@attributes":{"width":"0.em","height":"0.ex"}}},"mtable":{"mtr":[{"mtd":{"mrow":{"mo":"-","msubsup":{"mi":["v","\u2032"],"mrow":{"mi":"t","mo":"-","mn":"1"}}}}},{"mtd":{"msubsup":{"mi":["w","t","\u2032"]}}}]}},{"mo":"\u2003","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mo":"-","msubsup":{"mi":["e","p"],"mrow":{"mi":"t","mo":"-","mn":"1"}}}}},{"mtd":{"msubsup":{"mi":["e","t","s"]}}}]}}}],"mo":["+","+"]}],"mo":"="}},{"mrow":{"mo":["(",")"],"mn":"26"}}]}}}},"br":{}},{"@attributes":{"id":"p-0068","num":"0067"},"maths":{"@attributes":{"id":"MATH-US-00010","num":"00010"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"z","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msub":{"mover":{"mi":["u","_"]},"mi":"t"}}},{"mtd":{"mrow":{"msub":{"mi":["y","t"]},"mo":["-","+"],"mrow":[{"mi":"h","mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mover":{"mi":["u","_"]},"mi":"t"}}},{"mi":"H","mo":"\u2062","msub":{"mover":{"mi":["u","_"]},"mi":"t"}}]}}}]}}},{"mi":"A","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mi":"I"}},{"mtd":{"msub":{"mi":["H","t"]}}}]}}},{"mi":"u","mo":"=","mrow":{"mo":["[","\u2062","]"],"mstyle":{"mspace":{"@attributes":{"width":"0.em","height":"0.ex"}}},"mtable":{"mtr":[{"mtd":{"mrow":{"mo":"-","msubsup":{"mi":["v","\u2032"],"mrow":{"mi":"t","mo":"-","mn":"1"}}}}},{"mtd":{"msubsup":{"mi":["w","t","\u2032"]}}}]}}},{"mi":"e","mo":"=","mrow":{"mo":"\u2003","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"mrow":{"mo":"-","msubsup":{"mi":["e","p"],"mrow":{"mi":"t","mo":"-","mn":"1"}}}}},{"mtd":{"msubsup":{"mi":["e","t","s"]}}}]}}}}],"mo":[",",",","\u2062",","],"mstyle":{"mtext":{}}}},{"mrow":{"mo":["(",")"],"mn":"27"}}]}}}},"br":[{},{},{}],"in-line-formulae":[{},{}],"i":["H","Q","+G","P","G","H","+R"],"sub":["t","t\u22121","t\u22121","t\u22121","t\u22121","t","t"],"sup":["T","T"]},"The process discussed above with reference to  may similarly be applied in this example for the extended Kalman filter case, using the matrices defined in this Example. The process may be repeated for successive time steps to obtain updated estimates of the state over time.","The Kalman filter (Example 1) and extended Kalman filter (Example 2) coded filtering processes discussed above may apply in cases where the non-Gaussian errors are compressible at each time step. However, there exist cases where the non-Gaussian errors are compressible across time, but necessarily at each point in time. Some examples include sensor measurements where a significant fraction of sensors experience non-Gaussian noise that is structured over time. For example, in the navigation context, this situation may exist where a majority of the GPS channels are corrupted by multipath, but the environmental geometry causing the multipath reflections does not vary too rapidly.","Therefore, according to one embodiment, a batch formulation of the estimation problem for the linear dynamic system defined by Equations (1) and (4) is used. The batch formulation groups together measurements over a predetermined time frame to create a collection of measurements that can be analyzed together. Using the batch formulation, the portion of the measurements over time that are determined by the state can be annihilated, allowing direct estimation of the non-Gaussian noise vector. In one embodiment, this new estimation problem is under-determined, and as a result a direct least-squares estimation approach does not lead to an accurate solution, as demonstrated below. However, other estimators such as the minimum lestimator or a combination minimum land minimum lestimator discussed above may provide very accurate estimation of a compressible non-Gaussian noise vector.","Analogizing the batch formulation of the estimation problem to the channel coding example defined by Equation (10), at time T, the T(n+m)\u00d7Tn a batch matrix A may be defined by Equation (29) below, and batch vectors maybe defined according to Equation (30):",{"@attributes":{"id":"p-0073","num":"0072"},"maths":{"@attributes":{"id":"MATH-US-00011","num":"00011"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":[{"mtd":[{"mrow":{"mi":"A","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mi":"I"},{"mn":"0"},{"mn":"0"},{"mi":"\u2026"},{"mn":"0"}]},{"mtd":[{"msub":{"mi":"H","mn":"1"}},{"mn":"0"},{"mn":"0"},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mn":"0"}]},{"mtd":[{"mrow":{"mo":"-","msub":{"mi":"F","mn":"1"}}},{"mi":"I"},{"mn":"0"},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"msub":{"mi":"H","mn":"2"}},{"mn":"0"},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mrow":{"mo":"-","msub":{"mi":"F","mn":"2"}}},{"mi":"I"},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mn":"0"}]},{"mtd":[{"mi":"\u22ee"},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mi":"\u22f1"},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mi":"\u22ee"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mi":"I"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mi":"\u2026"},{"mn":"0"},{"msub":{"mi":["H","T"]}}]}]}}}},{"mrow":{"mo":["(",")"],"mn":"29"}}]},{"mtd":[{"mrow":{"mrow":[{"mi":"z","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msub":{"mover":{"mi":"x","mo":"^"},"mn":"1"}}},{"mtd":{"msub":{"mi":"y","mn":"1"}}},{"mtd":{"mn":"0"}},{"mtd":{"msub":{"mi":"y","mn":"2"}}},{"mtd":{"mn":"0"}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"msub":{"mi":["y","m"]}}}]}}},{"mi":"x","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"x","mn":"1"}}},{"mtd":{"msub":{"mi":"x","mn":"2"}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"msub":{"mi":["x","T"]}}}]}}},{"mi":"u","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"w","mn":"0"}}},{"mtd":{"msub":{"mi":"w","mn":"1"}}},{"mtd":{"msub":{"mi":"v","mn":"1"}}},{"mtd":{"msub":{"mi":"w","mn":"2"}}},{"mtd":{"msub":{"mi":"v","mn":"2"}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"msub":{"mi":["w","T"]}}}]}}},{"mi":"e","mo":"=","mrow":{"mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msubsup":{"mi":["e","s"],"mn":"0"}}},{"mtd":{"msubsup":{"mi":["e","s"],"mn":"1"}}},{"mtd":{"msubsup":{"mi":["e","p"],"mn":"1"}}},{"mtd":{"msubsup":{"mi":["e","s"],"mn":"2"}}},{"mtd":{"msubsup":{"mi":["e","p"],"mn":"2"}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"msubsup":{"mi":["e","T","s"]}}}]}},"mo":"."}}],"mo":[",",",",","]}},{"mrow":{"mo":["(",")"],"mn":"30"}}]}]}}}},"As in Examples 1 and 2 discussed above, an embodiment of the coded filter can be configured to first estimate the compressible error vector e, and then use those estimates to modify the underlying dynamic state estimator, for example, an L1 smoother. In one example, the matrix B is directly computed by taking a full QR factorization of A. However, this approach may be computationally intensive. Accordingly, in another example, one may take advantage of the structure of the batch formulation by defining B as:",{"@attributes":{"id":"p-0075","num":"0074"},"maths":{"@attributes":{"id":"MATH-US-00012","num":"00012"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"B","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"msub":{"mi":"H","mn":"1"}},{"mrow":{"mo":"-","msub":{"mi":["I","m"]}}},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mi":"\u2026"},{"mn":"0"}]},{"mtd":[{"mrow":{"msub":[{"mi":"H","mn":"2"},{"mi":"\u03d5","mn":"1"}],"mo":"\u2062"}},{"mn":"0"},{"msub":{"mi":"H","mn":"2"}},{"mrow":{"mo":"-","msub":{"mi":["I","m"]}}},{"mn":"0"},{"mn":"0"},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mn":"0"}]},{"mtd":[{"mrow":{"msub":[{"mi":"H","mn":"3"},{"mi":"\u03d5","mn":"2"},{"mi":"\u03d5","mn":"1"}],"mo":["\u2062","\u2062"]}},{"mn":"0"},{"mrow":{"msub":[{"mi":"H","mn":"3"},{"mi":"\u03d5","mn":"2"}],"mo":"\u2062"}},{"mn":"0"},{"msub":{"mi":"H","mn":"3"}},{"mrow":{"mo":"-","msub":{"mi":["I","m"]}}},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mn":"0"}]},{"mtd":[{"mi":"\u22ee"},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mi":"\u22f1"},{"mi":"\u22ee"}]},{"mtd":[{"mrow":{"msub":{"mi":["H","T"]},"mo":"\u2062","mrow":{"munderover":{"mo":"\u220f","mrow":[{"mi":"i","mo":"=","mn":"1"},{"mi":"T","mo":"-","mn":"1"}]},"mo":"\u2062","msub":{"mi":["\u03d5","i"]}}}},{"mn":"0"},{"mrow":{"msub":{"mi":["H","T"]},"mo":"\u2062","mrow":{"munderover":{"mo":"\u220f","mrow":[{"mi":"i","mo":"=","mn":"2"},{"mi":"T","mo":"-","mn":"1"}]},"mo":"\u2062","msub":{"mi":["\u03d5","i"]}}}},{"mn":"0"},{"mrow":{"msub":{"mi":["H","T"]},"mo":"\u2062","mrow":{"munderover":{"mo":"\u220f","mrow":[{"mi":"i","mo":"=","mn":"3"},{"mi":"T","mo":"-","mn":"1"}]},"mo":"\u2062","msub":{"mi":["\u03d5","i"]}}}},{"mi":"\u2026"},{"msub":{"mi":["H","T"]}},{"mrow":{"mo":"-","msub":{"mi":["I","m"]}}}]}]}}}},{"mrow":{"mo":["(",")"],"mn":"31"}}]}}}},"br":{}},"Referring to , there is illustrated an example of using an embodiment of the coded filtering method of Example 3 with a minimum lestimator to estimate multipath error.  illustrates the original signal, which is a wavelet transform of a multipath signal. The original signal is estimated using an underdetermined 500 by 2048 matrix A in Equation (29) above.  illustrates the resulting estimated signal using a minimum lestimator as given above in Equation (11). As can be seen from comparison of  and , the minimum lestimator provides a very good estimation of the original signal. By contrast, as shown in , a conventional least squares estimation (A(A\u00b7A)) of the original signal directly provides a very poor result in which almost all detail of the original signal is lost. These comparisons demonstrate that where the non-Gaussian noise is sufficiently compressible in some basis, for example, in a wavelet basis as illustrated above, the minimum lestimator may provide a very accurate result whereas the least squares estimator does not provide a good solution.","Example 3 applied coded filtering to an L1 smoother for a linear time-varying system. In this example, the batch formulation discussed in Example 3 is extended to describe a batch formulation of the estimation problem for non-linear dynamic and measurement models over T time steps. This example is referred to as an extended L1 smoother. In this example, the formulation is based on an existing set of estimates of the state {\u0169, . . . , \u0169} for linearization. Such estimates may be obtained through a filter, or if an accurate dynamics model is available (as in certain space applications, for example), through propagation of the initial state.","In this example, the evolution of the state over time is governed by a non-linear function g, as in Example 2, and the linearized system equation is given by Equation (23) above. As in Example, 2, G, is the Jacobian of gat \u00fb, and the error vector erris the associated linearization error. The linearized observation at time t is given by Equation (24) above, and the following variables are defined: \u016b=g(\u0169); His the Jacobian of hat and the error vector erris the associated linearization error. Applying the batch formation from Example 3 to the linearized system, and analogizing to the channel coding problem defined in Equation (10), at time T, the T(n+m)\u00d7Tn batch matrix A may be defined as follows:",{"@attributes":{"id":"p-0079","num":"0078"},"maths":{"@attributes":{"id":"MATH-US-00013","num":"00013"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mi":"A","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mi":"I"},{"mn":"0"},{"mn":"0"},{"mi":"\u2026"},{"mn":"0"}]},{"mtd":[{"msub":{"mi":"H","mn":"1"}},{"mn":"0"},{"mn":"0"},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mn":"0"}]},{"mtd":[{"mrow":{"mo":"-","msub":{"mi":"G","mn":"1"}}},{"mi":"I"},{"mn":"0"},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"msub":{"mi":"H","mn":"2"}},{"mn":"0"},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mrow":{"mo":"-","msub":{"mi":"G","mn":"2"}}},{"mi":"I"},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mn":"0"}]},{"mtd":[{"mi":"\u22ee"},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mi":"\u22f1"},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mi":"\u22ee"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}},{"mrow":{"mrow":{"mo":"-","msub":{"mi":"G","mrow":{"mi":"T","mo":"-","mn":"1"}}},"mo":"\u2062","mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}}}},{"mi":"I"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mi":"\u2026"},{"mn":"0"},{"msub":{"mi":["H","T"]}}]}]}}}},{"mrow":{"mo":["(",")"],"mn":"32"}}]}}}},"br":{}},{"@attributes":{"id":"p-0080","num":"0079"},"maths":{"@attributes":{"id":"MATH-US-00014","num":"00014"},"math":{"@attributes":{"overflow":"scroll"},"mtable":{"mtr":{"mtd":[{"mrow":{"mrow":[{"mi":"y","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msub":{"mover":{"mi":"x","mo":"^"},"mn":"1"}}},{"mtd":{"mrow":{"msub":{"mi":"y","mn":"1"},"mo":["-","+"],"mrow":[{"msub":{"mi":"h","mn":"1"},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mover":{"mi":"x","mo":"^"},"mn":"1"}}},{"msub":[{"mi":"H","mn":"1"},{"mover":{"mi":"x","mo":"^"},"mn":"1"}],"mo":"\u2062"}]}}},{"mtd":{"mrow":{"msub":{"mover":{"mi":["\u03bc","_"]},"mn":"2"},"mo":"-","mrow":{"msub":[{"mi":"G","mn":"1"},{"mover":{"mi":"x","mo":"^"},"mn":"1"}],"mo":"\u2062"}}}},{"mtd":{"mrow":{"msub":{"mi":"y","mn":"2"},"mo":["-","+"],"mrow":[{"msub":{"mi":"h","mn":"2"},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mover":{"mi":["\u03bc","_"]},"mn":"2"}}},{"msub":[{"mi":"H","mn":"2"},{"mover":{"mi":["\u03bc","_"]},"mn":"2"}],"mo":"\u2062"}]}}},{"mtd":{"mrow":{"msub":{"mover":{"mi":["\u03bc","_"]},"mn":"3"},"mo":"-","mrow":{"msub":[{"mi":"G","mn":"3"},{"mover":{"mi":["\u03bc","_"]},"mn":"2"}],"mo":"\u2062"}}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"mrow":{"msub":{"mi":["y","T"]},"mo":["-","+"],"mrow":[{"msub":{"mi":["h","T"]},"mo":"\u2061","mrow":{"mo":["(",")"],"msub":{"mover":{"mi":["\u03bc","_"]},"mi":"T"}}},{"msub":[{"mi":["H","T"]},{"mover":{"mi":["\u03bc","_"]},"mi":"T"}],"mo":"\u2062"}]}}}]}}},{"mi":"x","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"x","mn":"1"}}},{"mtd":{"msub":{"mi":"x","mn":"2"}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"msub":{"mi":["x","T"]}}}]}}},{"mi":"u","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msub":{"mi":"w","mn":"0"}}},{"mtd":{"mrow":{"msub":{"mi":"v","mn":"1"},"mo":"+","msubsup":{"mi":["err","h"],"mn":"1"}}}},{"mtd":{"mrow":{"msub":{"mi":"w","mn":"1"},"mo":"+","msubsup":{"mi":["err","g"],"mn":"1"}}}},{"mtd":{"mrow":{"msub":{"mi":"v","mn":"2"},"mo":"+","msubsup":{"mi":["err","h"],"mn":"2"}}}},{"mtd":{"mrow":{"msub":{"mi":"w","mn":"2"},"mo":"+","msubsup":{"mi":["err","g"],"mn":"2"}}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"mrow":{"msub":{"mi":["w","T"]},"mo":"+","msubsup":{"mi":["err","t","h"]}}}}]}}},{"mi":"e","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":{"msubsup":{"mi":["e","s"],"mn":"0"}}},{"mtd":{"msubsup":{"mi":["e","p"],"mn":"1"}}},{"mtd":{"msubsup":{"mi":["e","s"],"mn":"1"}}},{"mtd":{"msubsup":{"mi":["e","p"],"mn":"2"}}},{"mtd":{"msubsup":{"mi":["e","s"],"mn":"2"}}},{"mtd":{"mi":"\u22ee"}},{"mtd":{"msubsup":{"mi":["e","T","s"]}}}]}}}],"mo":[",",",",",","\u2062"],"mstyle":{"mtext":{}}}},{"mrow":{"mo":["(",")"],"mn":"33"}}]}}}},"br":{}},"This example demonstrates an embodiment of the coded filtering method applied to a simulation of a navigation system with significant multipath errors.  illustrates a block diagram of the simulation. The simulation elements include a trajectory generator  that generates true changes in the direction (\u0394\u03b8) and velocity (\u0394V) of the navigator , an inertial measurement unit (IMU) model , an RF beacon model  which models sensors that detect the navigator's position, a multipath model , and a simulation of the navigator . In this example, the multipath model includes the model described in Farrell, J. A. and Givargis, T., Differential GPS Reference Station Algorithm (Design and Analysis), IEEE Transactions on Control Systems, Vol. 8, No. 3, May 2000. The simulation of the navigator  includes a 39 state Kalman filter. The Kalman filter  generates estimates of the navigator's position, and thus over time outputs a signal representative of the navigator's trajectory . The RF beacon model  outputs simulated measurements  of the navigator's position which are subject to the multipath errors or noise. The coded filter  receives the noisy measurements  from the RF beacon and the multipath model , and generates estimates  of the multipath errors in the noisy measurements , using the batch formulation discussed in Example 3 above. These estimates  are used to correct the noisy measurements  to account for the multipath errors, and the corrected data  is input to the Kalman filter  that simulates the moving navigator.","Referring to , there is illustrated the estimated Haar wavelet coefficients of the multipath signal. As can be seen with reference to , the multipath signal  is well estimated by the Haar wavelet coefficients , and the multipath signal can therefore be considered a compressible vector, as discussed above.  illustrates the example coded filter's estimation of the multipath signal using the estimation techniques discussed above. That is, the example coded filter. As can be seen with reference to , the estimation  of the multipath signal produced by the coded filter closely tracks the true multipath signal , demonstrating that the coded filter can very accurately estimate the compressible non-Gaussian noise vector, in this case, the simulated multipath signal.",{"@attributes":{"id":"p-0083","num":"0082"},"figref":["FIG. 11","FIG. 11","FIG. 11"],"b":["850","1110","1120","860","1130","880","860","830","890","1130","1110","870","1120"]},{"@attributes":{"id":"p-0084","num":"0083"},"figref":["FIG. 12A","FIG. 12A","FIG. 12B","FIG. 12B"],"b":["1210","1220","1230","1210","1220","1230","870"]},"In summary, according to one embodiment, the coded filter uses the fact that certain non-Gaussian noise vectors, such as multipath in a navigation system, are compressible in some basis, along with well-defined, computationally efficient estimators, to provide an accurate estimate the non-Gaussian noise vector which can then be used to correct measurements of state variables in a dynamic system. Embodiments exploit the duality between compressive sensing and error correction of a channel code to compute a coding matrix that annihilates the portion of the measurements\/observations that are caused by the state, to gain observability of the non-Gaussian errors. In one example, a coded filter formulation includes estimating the non-Gaussian noise vector using a combination of sparse error models and recursive filter-based estimation together with l(and\/or l) minimization, as discussed above.","Embodiments of the coded filter may be applied to numerous dynamic systems where there are non-Gaussian errors that can be modeled as sparse signals. For example, as discussed above, a coded filter can be used to estimate GPS multipath signals, which can then be used to correct positional, velocity, acceleration or other data supplied to a recursive filter, such as a Kalman filter, in a navigation system. In another example, a coded filter may be applied to overcome GPS spoofing by modeling the spoofing signal as a sparse (compressible) phenomenon that can be detected and tracked. A coded filter may also be applied to field disturbances in magnetometers, where the non-Gaussian errors of magnetometers can be modeled as sparse signals. A coded filter may also be applied to failure detection in machines or processes where the failures occur as non-Gaussian phenomena. For example, a coded filter may be applied to fault detection\/identification, where the non-Gaussian errors represent broken sensors, unwanted plant dynamics etc. Still other applications include vision aided navigation where feature extraction may challenge conventional systems, as features may be modeled as a sparse signal to be tracked using a coded filter; multipath estimation and mitigation in RF beacon- and\/or sonar-based navigation systems; modeling wind gusts in aircraft systems, orbit modeling for spacecraft, and Doppler radar for navigation.","Various aspects and embodiments described herein may be implemented as specialized hardware or software components executing in one or more computer systems. There are many examples of computer systems that are currently in use. These examples include, among others, network appliances, personal computers, workstations, mainframes, networked clients, servers, media servers, application servers, database servers and web servers. Other examples of computer systems may include mobile computing devices, such as cellular phones and personal digital assistants, and network equipment, such as load balancers, routers and switches. Further, aspects may be located on a single computer system or may be distributed among a plurality of computer systems connected to one or more communications networks.","For example, various aspects and embodiments may be distributed among one or more computer systems configured to provide a service to one or more client computers, or to perform an overall task as part of a distributed system. Additionally, aspects may be performed on a client-server or multi-tier system that includes components distributed among one or more server systems that perform various functions. Consequently, examples are not limited to executing on any particular system or group of systems. Further, aspects and functions may be implemented in software, hardware or firmware, or any combination thereof. Thus, aspects and functions may be implemented within methods, acts, systems, system elements and components using a variety of hardware and software configurations, and examples are not limited to any particular distributed architecture, network, or communication protocol.","Referring to , there is illustrated a block diagram of a computer system  in which various aspects and functions of embodiments of the coded filter may be practiced. The computer system  may be connected to a communication network , and via the communication network exchange information with one or more additional computer systems , as shown in . The plurality of computer systems  interconnected by the communication network  may together form a distributed computer system. The communication network  may include any communication network through which computer systems may exchange data. To exchange data using the network , the computer systems  and the network  may use various methods, protocols and standards, including, among others, Fibre Channel, Token Ring, Ethernet, Wireless Ethernet, Bluetooth, IP, IPV6, TCP\/IP, UDP, DTN, HTTP, FTP, SNMP, SMS, MMS, SS7, JSON, SOAP, CORBA, REST and Web Services. To ensure data transfer is secure, the computer systems  may transmit data via the network  using a variety of security measures including, for example, TLS, SSL or VPN. While  illustrates three networked computer systems , a distributed computer system is not so limited and may include any number of computer systems and computing devices, networked using any medium and communication protocol.","As illustrated in , in one embodiment the computer system  includes a processor , a memory , a bus , an interface  and data storage . To implement at least some of the aspects, functions and processes disclosed herein, the processor  performs a series of instructions that result in manipulated data. The processor  may be any type of processor, multiprocessor, data processing engine, logic device, programmable logic device, or controller. Some examples of processors include commercially available processors such as an Intel Xeon, Itanium, Core, Celeron, or Pentium processor, an AMD Opteron processor, a Sun UltraSPARC or IBM Power5+ processor and an IBM mainframe chip. The processor  is connected to other system components, including one or more memory devices , by the bus .","The memory  stores programs and data during operation of the computer system . Thus, the memory  may be a relatively high performance, volatile, random access memory such as a dynamic random access memory (DRAM) or static memory (SRAM). However, the memory  may include any device for storing data, such as a disk drive or other non-volatile storage device. Various examples may organize the memory  into particularized and, in some cases, unique structures to perform the functions disclosed herein. These data structures may be sized and organized to store values for particular data and types of data.","Components of the computer system  are coupled together by an interconnection element such as the bus . The bus  may include one or more physical busses, for example, busses between components that are integrated within a same machine, but may include any communication coupling between system elements including specialized or standard computing bus technologies such as IDE, SCSI, PCI and InfiniBand. The bus  enables communications, such as data and instructions, to be exchanged between system components of the computer system .","The computer system  also includes one or more interface devices  such as input devices, output devices and combination input\/output devices. Interface devices  may receive input or provide output. More particularly, output devices may render information for external presentation. Input devices  may accept information from external sources. Examples of interface devices include keyboards, mouse devices, trackballs, microphones, touch screens, printing devices, display screens, speakers, network interface cards, etc. Interface devices  allow the computer system  to exchange information and to communicate with external entities, such as users and other systems.","The data storage  includes a computer readable and writeable nonvolatile, or non-transitory, data storage medium in which instructions are stored that define a program or other object that is executed by the processor . The data storage  also may include information that is recorded, on or in, the medium, and that is processed by the processor  during execution of the program. More specifically, the information may be stored in one or more data structures specifically configured to conserve storage space or increase data exchange performance. The instructions may be persistently stored as encoded signals, and the instructions may cause the processor  to perform any of the functions described herein, for example to perform calculations to determine the matrices and solve the equations discussed above. The medium may, for example, be optical disk, magnetic disk or flash memory, among others. In operation, the processor  or some other controller causes data to be read from the nonvolatile recording medium into another memory, such as the memory , that allows for faster access to the information by the processor  than does the storage medium included in the data storage . The additional memory may be located in the data storage  or in the memory , however, the processor  manipulates the data within the memory, and then copies the data to the storage medium associated with the data storage  after processing is completed. A variety of components may manage data movement between the storage medium and other memory elements and examples are not limited to particular data management components. Further, examples are not limited to a particular memory system or data storage system.","Although the computer system  is shown by way of example as one type of computer system upon which various aspects and functions may be practiced, embodiments of the coded filter are not limited to being implemented on the computer system  as shown in . Various aspects and functions may be practiced on one or more computers having a different architectures or components than that shown in . For example, the computer system  may include specially programmed, special-purpose hardware, such as an application-specific integrated circuit (ASIC) tailored to perform a particular operation disclosed herein. While another example may perform the same function using a grid of several general-purpose computing devices running an operating system (for example, MAC OS System X) with processors (for example, Motorola PowerPC processors) and several specialized computing devices running proprietary hardware and operating systems.","The computer system  may be a computer system including an operating system that manages at least a portion of the hardware elements included in the computer system . In some examples, a processor, data processing engine, or controller, such as the processor , executes an operating system. Examples of a particular operating system that may be executed include a Windows-based operating system, such as, Windows NT, Windows 2000 (Windows ME), Windows XP, Windows Vista or Windows 7 operating systems, available from the Microsoft Corporation, a MAC OS System X operating system available from Apple Computer, one of many Linux-based operating system distributions, for example, the Enterprise Linux operating system available from Red Hat Inc., a Solaris operating system available from Sun Microsystems, or a UNIX operating systems available from various sources. Many other operating systems may be used, and examples are not limited to any particular operating system.","The processor  and operating system together define a computer platform for which application programs in high-level programming languages are written. These component applications may be executable, intermediate, bytecode or interpreted code which communicates over a communication network, for example, the Internet, using a communication protocol, for example, TCP\/IP. Similarly, aspects may be implemented using an object-oriented programming language, such as .Net, SmallTalk, Java, C++, Ada, or C# (C-Sharp). Other object-oriented programming languages may also be used. Alternatively, functional, scripting, or logical programming languages may be used.","Additionally, various aspects and functions may be implemented in a non-programmed environment, for example, documents created in HTML, XML or other format that, when viewed in a window of a browser program, can render aspects of a graphical-user interface or perform other functions. Further, various examples may be implemented as programmed or non-programmed elements, or any combination thereof. For example, a web page may be implemented using HTML while a data object called from within the web page may be written in C++. Thus, the examples are not limited to a specific programming language and any suitable programming language could be used. Accordingly, the functional components disclosed herein may include a wide variety of elements, e.g. specialized hardware, executable code, data structures or objects, that are configured to perform the functions described herein.","In some examples, the components disclosed herein may read parameters that affect the functions performed by the components. These parameters may be physically stored in any form of suitable memory including volatile memory (such as RAM) or nonvolatile memory (such as a magnetic hard drive). In addition, the parameters may be logically stored in a propriety data structure (such as a database or file defined by a user mode application) or in a commonly shared data structure (such as an application registry that is defined by an operating system). In addition, some examples provide for both system and user interfaces that allow external entities to modify the parameters, such as sponsor types and sectors, and thereby configure the behavior of the components.","Having thus described several aspects of at least one embodiment, it is to be appreciated various alterations, modifications, and improvements will readily occur to those skilled in the art. Such alterations, modifications, and improvements are intended to be part of this disclosure and are intended to be within the scope of the invention. Accordingly, the foregoing description and drawings are by way of example only, and the scope of the invention should be determined from proper construction of the appended claims, and their equivalents."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various aspects of at least one embodiment are discussed below with reference to the accompanying figures, which are not intended to be drawn to scale. Where technical features in the figures, detailed description or any claim are followed by references signs, the reference signs have been included for the sole purpose of increasing the intelligibility of the figures, detailed description, and claims. Accordingly, neither the reference signs nor their absence are intended to have any limiting effect on the scope of any claim elements. In the figures, each identical or nearly identical component that is illustrated in various figures is represented by a like numeral. For purposes of clarity, not every component may be labeled in every figure. The figures are provided for the purposes of illustration and explanation and are not intended as a definition of the limits of the invention. In the figures:",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 3B","FIG. 3A"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 3C","FIG. 3A","FIG. 3B"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 7B","FIG. 7A"],"sub":"1 "},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 7C","FIG. 7A"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 9","FIG. 8"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 10","FIG. 8"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 11","FIG. 8"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 12A"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 12B","FIG. 8"]},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 13"}]},"DETDESC":[{},{}]}
