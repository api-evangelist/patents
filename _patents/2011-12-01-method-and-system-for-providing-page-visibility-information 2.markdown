---
title: Method and system for providing page visibility information
abstract: A method and system for providing page visibility information are provided herein. Aspects of this disclosure provide an interface by which a browser may make the visibility state of a particular page available to the page itself. The browser may track the visibility state of the page as it changes and store the state in a variable associated with the page. Code executing within the page may query this variable to determine the visibility state and take appropriate action. The browser may provide an application programming interface (API) to allow the page to request the visibility state.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09584579&OS=09584579&RS=09584579
owner: Google Inc.
number: 09584579
owner_city: Mountain View
owner_country: US
publication_date: 20111201
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","BRIEF SUMMARY","DETAILED DESCRIPTION"],"p":["As more and more users have access to high-speed Internet, website developers have been free to add increased interactivity to their works. Today, it is common for web pages to have a variety of elements that enhance the browsing experience, including complex interface controls, multimedia elements, website analytic capturing tools, and more. Advances in browser technology have also resulted in the ability to render multiple web pages using a single application. For example, a user may have multiple browser tabs to allow for simultaneous browsing.","In the current environment, interactive page elements may execute as soon as the page is rendered, even if the page is not visible to the user. Sites that feature embedded audio or video may begin to play as soon as the page is loaded. Pages that host games that include timers may continue to run these timers even when the user is unable to interact with the host page. Web sites that use polling to fetch dynamic content continue to poll whether or not the user is viewing the page.","A method and system for providing page visibility information are provided herein. Aspects of this disclosure provide an interface by which a browser may make the visibility state of a particular page available to the page itself. The browser may track the visibility state of the page as it changes and store the state in a variable associated with the page. Code executing within the page may query this variable to determine the visibility state and take appropriate action. The browser may provide an application programming interface (API) to allow the page to request the visibility state.","Aspects of the disclosure describe a computer-implemented method for determining the visibility status of a set of network content. The method may include accessing the network content using a processor, loading the set of network content in a browser, monitoring one or more interface features of the browser to determine a visibility state of the document within the browser, and providing the visibility state of the network content to the network content such that the executable instructions take into account the visibility state during execution. The network content may include instructions for performing at least one function. The visibility state may include one or more values that indicate whether the network content is visible to the user. The method may further include monitoring the one or more interface features to identify a change in visibility state based on a change in the one or more interface features, and sending a notification to the network content that the visibility state has changed. The notification may include at least one of a new visibility state and a visibility state transitional pair. The method may also include storing the visibility state in a document object model associated with the network content. The visibility state may be at least one of visible, hidden, prerender, cache, and preview. The visibility state may be provided to the set of network content in response to a request from the network content for the visibility state. The visibility state may be provided to the set of network content via an application programming interface. The one or more features may be at least one of a window focus, an active browser tab, an inactive browser tab, a browser history, a prerender status, whether a first window is minimized, whether the first window is partially obscured by a second window, whether the first window is fully obscured by the second window, whether a display device is turned off, and whether a screen saver is active on the display device.","Aspects of the disclosure may also provide a non-transitory computer-readable storage medium containing instructions that, when executed by a processor, cause the processor to perform a method. The method may include accessing the network content, loading the set of network content in a browser, monitoring one or more interface features of the browser to determine a visibility state of the document within the browser, and providing the visibility state of the network content to the network content such that the executable instructions take into account the visibility state during execution. The network content may include executable instructions for performing at least one function. The visibility state may include one or more values that indicate whether the network content is visible to the user. The method may further include monitoring the one or more interface features to identify a change in visibility state based on a change in the one or more interface features, and sending a notification to the network content that the visibility state has changed. The notification may include at least one of a new visibility state and a visibility state transitional pair. The method may include storing the visibility state in a document object model associated with the network content. The visibility state may be at least one of visible, hidden, prerender, cache, and preview. The visibility state may be provided to the set of network content in response to a request from the network content for the visibility state. The visibility state may be provided to the set of network content via an application programming interface. The one or more features may be at least one of a window focus, an active browser tab, an inactive browser tab, a browser history, a prerender status, whether a first window is minimized, whether the first window is partially obscured by a second window, whether the first window is fully obscured by the second window, whether a display device is turned off, and whether a screen saver is active on the display device.","Aspects of the disclosure also provide a processing system for determining the visibility status of a set of network content. The processing system may include at least one processor. The at least one processor may be configured to access network content using a processor. The network content may include executable instructions for performing at least one function. The processor may be further configured to load the set of network content in a browser, to monitor one or more interface features of the browser to determine a visibility state of the document within the browser, and to provide the visibility state of the network content to the network content such that the executable instructions take into account the visibility state during execution. The visibility state may include one or more values that indicate whether the network content is visible to the user. The processor may be further configured to monitor the one or more interface features to identify a change in visibility state based on a change in the one or more interface features, and to send a notification to the network content that the visibility state has changed. The notification may include at least one of a new visibility state and a visibility state transitional pair. The processor may be further configured to store the visibility state in a document object model associated with the network content. The visibility state may be at least one of visible, hidden, prerender, cache, and preview. The visibility state may be provided to the set of network content in response to a request from the network content for the visibility state. The visibility state may be provided to the set of network content via an application programming interface. The one or more features may be at least one of a window focus, an active browser tab, an inactive browser tab, a browser history, a prerender status, whether a first window is minimized, whether the first window is partially obscured by a second window, whether the first window is fully obscured by the second window, whether a display device is turned off, and whether a screen saver is active on the display device.","A method and system for providing page visibility information are described. Aspects of this disclosure provide an interface by which a web page may query a web browser for the current visibility state of the page. The term \u201cvisibility state\u201d is broadly understood to refer to the status of the web page within the browser and the accessibility relationship between the page and the user. By querying the visibility state, code executing within the web page may determine whether the page is rendered in an active browser tab, rendered in a background browser tab, cached in a browser history, prerendered in a hidden browser environment, displayed in a reduced resolution preview, or any other visibility state. The interface may also provide alerts to code executing within the web page in response to changes in the visibility state, such as when a user changes the active browser tab.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 1","FIG. 1"],"b":["100","102","104","100","102","104","132","102","114","116","104","116","118","114"]},"The client  may include a processor , a memory  and other components typically present in general purpose computers. The memory  may store instructions  and data  that are accessible by the processor . The processor  may execute the instructions  and access the data  to control the operations of the client .","The processor  may be any suitable processor, such as various commercially available general purpose processors. Alternatively, the processor  may be a dedicated controller such as an application-specific integrated circuit (\u201cASIC\u201d) or a field-programmable gate array (\u201cFPGA\u201d).","The memory  may be any type of tangible memory operative to store information accessible by the processor , including a computer-readable medium, or other medium that stores data that may be read with the aid of an electronic device, such as a hard-drive, memory card, read-only memory (\u201cROM\u201d), random access memory (\u201cRAM\u201d), digital versatile disc (\u201cDVD\u201d) or other optical disks, as well as other write-capable and read-only memories. The system and method may include different combinations of the foregoing, whereby different portions of the instructions and data are stored on different types of media.","Although  functionally illustrates the processor  and memory  as each being within a single block respectively, it should be understood that the processor  and memory  may actually comprise multiple processors and memories that may or may not be stored within the same physical housing. Accordingly, references to a processor, computer or memory will be understood to include references to a collection of processors, computers or memories that may or may not operate in parallel.","The instructions  may be any set of instructions to be executed directly (such as machine code) or indirectly (such as scripts) by the processor . For example, the instructions  may be stored as computer code on a non-transitory computer-readable medium. In that regard, the terms \u201cinstructions\u201d and \u201cprograms\u201d may be used interchangeably herein. The instructions  may be stored in object code format for direct processing by the processor , or in any other computer language including scripts or collections of independent source code modules that are interpreted on demand or compiled in advance. Functions, methods and routines of the instructions are explained in more detail below (see ).","In order to facilitate the operations of the client , the instructions  may comprise a browser . The browser  may provide an interface for viewing and interacting with network content. In particular, the browser  may provide for the rendering of network content, such as the visibility-enhanced web page . The browser  may display network content according to a variety of formats, including but not limited to text files, hyper-text markup language (HTML) documents, multimedia content such as WAV and MP3 files, images such as JPEG, BMP, and GIF files, extensible markup language (XML) files, spreadsheets, or any other kinds of data formats.","The browser  may also provide a visibility API  for providing visibility state information to the visibility-enhanced web page . The visibility API  may monitor the visibility state of one or more of the pages accessed by the web browser. As the one or more pages are active, background rendered, cached, previewed, etc., the visibility API  may alter the visibility state for the page in accordance with the updated states.","Although the present examples describe the visibility state as associated with a particular state variable maintained by the browser, the visibility state may also be dynamically queried and\/or generated based on a request from a visibility-enhanced web page. In other words, the visibility API  may track the visibility state, or the state may be determined on-demand. For example, the state variable may be maintained within a document object model associated with the visibility-enhanced web page . Code associated with the visibility-enhanced web page  may execute to query the state variable, such as by accessing a document property (e.g., document.visibilityState), or calling an API function, which returns a string value corresponding to the particular visibility state. The visibility API  may interface with one or more scripts or executable code associated with the web page, such as via JAVASCRIPT, ADOBE FLASH, or any other programming language.","The data  may be retrieved, stored or modified by the processor  in accordance with the instructions . For instance, although the architecture is not limited by any particular data structure, the data may be stored in computer registers, in a relational database as a table having a plurality of different fields and records, Extensible Markup Language (\u201cXML\u201d) documents or flat files. The data may also be formatted in any computer readable format such as, but not limited to, binary values or Unicode. The data may comprise any information sufficient to identify the relevant information, such as numbers, descriptive text, proprietary codes, references to data stored in other areas of the same memory or different memories (including other network locations) or information that is used by a function to calculate the relevant data.","Although a number of discrete modules and data sets (e.g., , ) are identified in connection with the client , the functionality of these modules and data may overlap and\/or exist in a fewer or greater number of modules than what is shown, with such modules residing at one or more processing devices, which may be geographically dispersed. The data  may include the visibility-enhanced web page  as described above. The visibility-enhanced web page  may include one or more code elements that execute based on the visibility state of the visibility-enhanced web page . For example, the visibility-enhanced web page  may include code that pauses multimedia content when the visibility-enhanced web page  is not visible to the user. Further examples of operations that may be performed by the visibility-enhanced web page  are described below (see ).","The client  may be at one node of network , such as the Internet, and be operative to directly and indirectly communicates with other nodes of the network. For example, the client  may comprise a network client that is operative to communicate with the server  via the network  such that the client  receives the visibility-enhanced web page  from the server . The visibility-enhanced web page  may include code that transmits data to or from the server in response to the visibility state of the visibility-enhanced web page . For example, the visibility-enhanced web page  may notify the server  when the visibility-enhanced web page  becomes visible to ensure the server  maintains accurate website analytics for the visibility-enhanced web page .","The server  may comprise a personal computer, a personal digital assistants (\u201cPDA\u201d), a tablet PC, a netbook, a rack mounted server, a laptop, a mobile phone, a smart phone etc. Indeed, the server  in accordance with the systems and methods described herein may comprise any device operative to process instructions and transmit data to and from humans and\/or other computers including general purpose computers, network computers lacking local storage capability, etc.","The server  may be similarly configured to the client  as described above. For example, the server  may comprise a processor  coupled to a memory . As described above with respect to the memory , the memory  may include instructions  and data . The instructions  may include a hosting application .","The hosting application  operates to provide the visibility-enhanced web page  to the client . The hosting application  may also be operative to receive signals from the visibility-enhanced web page , such as a notification that the content of the visibility-enhanced web page  has been viewed.","The network , and the intervening nodes between the client  and the server  may comprise various configurations and use various protocols including the Internet, World Wide Web, intranets, virtual private networks, local Ethernet networks, private networks using communication protocols proprietary to one or more companies, cellular and wireless networks (e.g., Wi-Fi), instant messaging, hypertext transfer protocol (\u201cHTTP\u201d) and simple mail transfer protocol (\u201cSMTP\u201d), and various combinations of the foregoing. It should be appreciated that a typical system may include a large number of connected computers.","Although certain advantages are obtained when information is transmitted or received as noted above, other aspects of the system and method are not limited to any particular manner of transmission of information. For example, in some aspects, information may be sent via a medium such as an optical disk or portable drive. In other aspects, the information may be transmitted in a non-electronic format and manually entered into the system.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 2"},"The present example describes a first browser state  and a second browser state . The first browser state  depicts a web browser with two tabs, tab one  and tab two . In the first browser state, tab one  is the active browser tab, with the associated content displayed in the main browser window. Tab two  is an inactive tab, with the associated content hidden from the user. The corresponding visibility states for these tabs are displayed in block , with tab one having the visibility state of visible, and tab two having the visibility state of hidden. Tab two  may be selected using a cursor .","Upon selection of tab two , the content associated with tab one  is hidden and the content associated with tab two  is displayed in the main browser window. This change in visibility state may result in a visibility change event, as described in block . The visibility change event may be used to notify code executing in one or more sets of content that the visibility state of that content has changed. In the present example, the visibility event may notify tab one that tab one's visibility state has changed from visible to hidden, and tab two that tab two's visibility state has changed from hidden to visible. The API may allow for each page to separately register for visibility change events and\/or register for events associated with a particular status or status change. The visibility state events may indicate both the start and finish status of a given state change, or only the finish status.","The second browser state  depicts the browser after tab two has been made active. As with the first browser state, the second browser state  depicts tab one  and tab two , but tab two  is now active and the associated content displayed in the main browser window. Block  describes the visibility state of each tab, which is now the inverse of the states described in block .",{"@attributes":{"id":"p-0034","num":"0033"},"figref":["FIG. 3","FIG. 4"],"b":"300"},"At action , the browser receives a set of network content, such as the visibility-enhanced web page  received from the server  (see ). Although a visibility-enhanced web page  is used in the present example, any sort of network content that can be displayed in a browser could be used, as the network content does not necessarily need to include visibility-enhanced features. For example, the browser may proactively take action on the network content based on the visibility state even if the network content does not explicitly include code to do so, such as pausing multimedia presentations when the page is not visible to the user.","At action , the network content may be registered for visibility state change events. For example, the network content may wish to execute particular code in response to a particular visibility state change. The method  may provide the network content the ability to register for visibility change events generated by the browser when the visibility state change occurs. As described above, the visibility change events may include a notification of the state transition (e.g., a previous state and an updated state), or just an updated state (see ).","At action , a default visibility state variable is set for the network content. The default visibility state may set based on the way in which the network content was accessed. For example, if the user typed the content address into an address bar and the content was immediately rendered, the default state may be identified as \u201cvisible.\u201d If the content was prerendered in response to a predicted user navigation event, the default state may be identified as \u201cprerender.\u201d If the content was accessed in response to opening a new background browser tab, then the default visibility state may be identified as \u201chidden.\u201d If the content is previewed in a lower resolution thumbnail, the default visibility state may be identified as \u201cpreview.\u201d In some aspects, the visibility state variable may be associated with a document object model of the network content.","At action , the browser monitors for changes to the content visibility state. As described above, visibility state changes may include, but are not limited to, changing the active browser tab, prerendering of network content, caching network content (e.g., navigating to a new link and storing a cached version of the network content in the \u201cback-forward\u201d cache), minimizing the active browser window, previewing of network content, etc. The visibility state may be monitored by a variety of actions, including interface and callback hooks or other monitoring of user input actions. For example, the state \u201cvisible\u201d may be triggered when the network content is rendered in the active browser window, and the active browser window is not minimized. The state \u201chidden\u201d may be triggered when the network content is displayed in an inactive tab or the containing window is minimized. Aspects of the disclosure may include a framework for defining different visibility states based on various interface features. Interface states may be determined in a variety of manners, including but not limited to determining whether the network content is present in a window that has focus, determining whether the network content is present in an active browser tab, determining whether the network content is present in an inactive browser tab, determining whether the network content is present in a browser history, determining whether the network content is prerendered, determining whether the window with the network content is minimized, determining whether network content is present in a window that is fully or partially obscured by another window, determining whether a display device attached to the computer executing the browser is turned off, or determining whether screen saver is active on the display device.","At action , the browser identifies whether a visibility state change has occurred based on the monitoring action . If no visibility state change has occurred, the monitoring action  may continue until such a state change occurs or the browser is closed. If a visibility state change occurs, the variable associated with the visibility state of the network content is updated at action .","At action , the visibility state variable is updated depending upon the visibility state change that has occurred. In response to a change in the visibility state variable, a visibility change event may be sent to content that is registered for such an event at action . The method may end after firing the visibility change event, or it may return to action  to monitor for further state changes.",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 4","b":"400"},"At action , a set of network content is rendered within a browser and default processing for the content is enabled. The network content may include executable code, scripted code, or any other data that may enable the rendered instance of the network content to communicate with the browser. For example, default processing actions may include beginning to buffer a video, requesting one or more resources from a server, displaying a user interface for an application, etc.","At action , the network content queries the visibility state of the content. As described above, the network content may request the visibility state using an API provided by the browser. In a specific example, the API may provide a document property such as document.hidden, which returns a value of true if the visibility state of the document is hidden. Other API functions may be provided for specific statuses, such as visible, hidden, prerender, cache, or preview. API functions may also be provided that test for multiple states. For example, the document.hidden property may return true if the network content is in any non-visible state. The visibility state may also be stored as an entry within a document object model associated with the network content.","At action , the network content performs visibility state specific processing depending upon the current state. The visibility state specific processing may be any appropriate processing executed in response to a particular visibility state, including but not limited to the following specific examples:","A web page with one or more advertisements may wish to maintain accurate website analytics in a prerendering situation. When the page is displayed with a status of prerendering, the page may notify the hosting server that the page is a prerender, and advertisement impressions should not be registered. When the visibility state changes to visible, the page may notify the server indicating that a valid advertisement impression has been recorded.","A puzzle game may include a timer that keeps track of how long the user has taken to solve the puzzle. The game may pause the timer when the content associated with the game is not in a \u201cvisible\u201d state, and start the timer when the content returns to a visible state.","A web application that hosts dynamic content may poll a hosting server at a particular interval to detect updates to the dynamic content. The web application may pause polling operations when the content is not in a \u201cvisible\u201d state to ensure that bandwidth is not wasted. When the content returns to a visible state, polling operations may resume.","A streaming video site may not wish to enable playback of an embedded video until the user opens a browser tab containing the site, to avoid beginning playback of the video before the user is ready to watch.","A communication application or collaborative editing environment may allow multiple users to interact. When the application or editing environment is not visible to the user (e.g., a visibility state other than \u201cvisible\u201d), the application or editing environment may mark the user's status as \u201caway\u201d or \u201cunavailable.\u201d","At action , the network content may receive a visibility state change event, such as described above (see ). The network content may include explicit instructions for processing such an event. Various implementations may monitor for specific states and\/or specific state transition pairs. In response to the state change event, new state specific processing may occur at action . The method  may proceed as long as the execution of the network content continues.","The actions of the illustrated methods are not intended to be limiting. The functionality of the methods can exist in a fewer or greater number of actions than what is shown and, even with the depicted methods, the particular order of events may be different from what is shown in the figures.","The systems and methods described herein advantageously provide an interface by which network content may determine the current visibility state of the network content. Developers may use the visibility state information in a variety of manners to improve the user experience and the host experience, allowing for accurate website analytics, improvement of the hosting of multimedia content, conservation of bandwidth, and a variety of other uses.","As these and other variations and combinations of the features discussed above can be utilized without departing from the disclosure as defined by the claims, the foregoing description of the embodiments should be taken by way of illustration rather than by way of limitation of the disclosure as defined by the claims. It will also be understood that the provision of examples of the disclosure (as well as clauses phrased as \u201csuch as,\u201d \u201ce.g.\u201d, \u201cincluding\u201d and the like) should not be interpreted as limiting the disclosure to the specific examples; rather, the examples are intended to illustrate only some of many possible embodiments."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
