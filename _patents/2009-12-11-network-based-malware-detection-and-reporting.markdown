---
title: Network based malware detection and reporting
abstract: An apparatus, system and method are described for use in detecting the presence of malware on subscribers computers. The apparatus, system and method are network based and may be deployed within an Internet Service Provider (ISP) network. The system may include a plurality of network sensors for receiving and analyzing network traffic to determine the presence of malware. An aggregating apparatus receives alerts of the presence of malware and translates a network identifier of the alert to a subscriber identifier. The aggregating apparatus aggregates alert information and forwards it to a reporting infrastructure that can generate notifications in order to notify a subscriber that malware has been detected on a computer associated with the subscriber.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08578491&OS=08578491&RS=08578491
owner: Alcatel Lucent
number: 08578491
owner_city: Paris
owner_country: FR
publication_date: 20091211
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This application claims priority, under 35 U.S.C. \u00a7119(e), to U.S. Provisional Patent Application Ser. No. 61\/121,896, filed on Dec. 11, 2008. U.S. Provisional Patent Application Ser. No. 61\/121,896 is hereby incorporated by reference in its entirety.","The present disclosure relates to the field of malicious software (a.k.a. malware) detection. In particular, the present disclosure relates to a network based malware detection system.","Malware infection is a major problem for users of Internet connected network devices, such as for example computers, cell-phones, iPod\u2122, personal digital assistants (PDA). Malware comes in a number of forms such as, for example, virus, worm, spyware, adware, Trojan, bot, root-kit, and other similar forms of malware. Infection by malware can cause a device to malfunction, reveal personal information, participate in illegal activities, reinfect others and cause embarrassment and liability to the owners of the infected devices.","Various intrusion-detection system (IDS) mechanisms have tried to address this threat. Typically each of the known IDS mechanisms has implementation drawbacks. For example, host based detection systems require detection software on the host system. Some users object to having to run invasive, and potentially performance impacting, software on their computing device. Existing network based systems typically focus on who and what are being attacked rather than detecting evidence of infection and are not designed to inform the end-user that an infection has been detected","Although intrusion detection system that can be used to detect malware based on traffic on a network, these systems are typically intended for deployment on a single computer or small network. The current intrusion detection systems cannot scale to a large enough deployment in order to effectively determine malware infections of computers attached to a large network, such as an Internet Service Provider's (ISP) network. These networks may commonly have millions or tens of millions of subscribers connected.","It is therefore desirable to have a system that can detect the presence of malware on computers connected to a large network.","In accordance with an illustrative embodiment of the present disclosure there is provided a system for network based detection of malware on a plurality of client computers connected to a network. The system comprises a network sensor coupled to the network for generating detailed alerts based on one or more received packets associated with a client computer of the plurality of client computers. The network sensor comprises a detection engine for detecting the presence of malware on the client computer by comparing data provided within the one or more packets to an alert signature to identify malware behaviour, an alert generation module for generating an alert when the detection engine detects the presence of malware on the client computer. The alert comprises a network identifier associated with the client computer; and an identifier associated with the detected malware. The system further comprises an aggregator coupled to the network, the aggregator for translating network identifiers in one or more alerts associated with the client computer to corresponding subscriber identifiers and generating alert summaries based on the alerts and corresponding subscriber identifier and a reporting infrastructure for receiving the one or more alert summaries and generating one or more subscriber malware notifications.","In accordance with a further illustrative embodiment of the present disclosure there is provided an apparatus for aggregating a plurality of alerts associated with one or more client computers coupled to a network. The apparatus comprises a computer readable memory for storing instructions; and a processing unit for executing the instructions stored in the computer readable memory, when executed by the processing unit, the instructions configuring the apparatus to provide a subscriber identification translator for receiving an alert of the plurality of alerts, the alert comprising a network identifier associated with one of the plurality of client computers and a malware identifying a malware detected in network traffic associated with the client computer, the subscriber identification translator further for replacing the network identifier in the alert with a subscriber identifier associated with the network identifier, and an alert aggregator for determining one or more summary alerts, each summary alert corresponding to one or more alerts each having the same subscriber identifier and comprising the subscriber identifier and an indication of the number of alerts associated with the subscriber, the alert aggregator further for reporting the one or more summary alerts.","In accordance with a still further illustrative embodiment of the present disclosure there is provided a network based method of detecting the presence of malware on a plurality of client computers connected to a network. The method comprises receiving one or more packets at a network sensor, each packet associated with a client computer of the plurality of client computers, detecting at the network sensor the presence of malware on the client computer by comparing the one or more packets to an alert signature to identify malware behaviour; generating at the network sensor a detailed alert when the detection engine detects the presence of malware on the client computer. The detailed alert comprises an identifier associated with the client computer; a malware identifier indicating the detected malware; and a time stamp. The method further comprises sending one or more detailed alerts generated at the network sensor to an aggregator; receiving at the aggregator the one or more detailed alerts; replacing the identifier associated with the client computer in each of the received one or more detailed alerts with a subscriber identifier associated with the identifier; aggregating one or more detailed alerts having the same subscriber identifier into a single alert summary associated with the subscriber identifier; and sending one or more alert summaries associated with different subscriber identifiers to a reporting infrastructure.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1","b":["102","102","104","104","104","104","104","106","112","112"],"i":["a","b "]},"The ISP network  comprises a plurality of routers or switches for directing network traffic between two endpoints, such as a subscriber computer and a web site provided by a web server  on the public Internet . The system , or parts thereof as described further below, is deployed within the ISP network in order to capture and analyze the network traffic. Using the analyzed traffic, the system  can determine if a subscriber's computer  is infected with malware. If the system  determines that a subscriber's computer  is infected, it can provide a notification to the subscriber directing them to remedy the infection.","The system  helps to ensure that computers  connected to the ISP network are not infected with malware. This aides in the safe and reliable functioning of the ISP network . Furthermore, since the system  is network based, it is not necessary to have the subscriber download, install or update software. This can help ensure that all of the components in the system are utilizing the most current malware detection means as possible.",{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 2","b":["102","112","202","112","202","202","202","202","202","204"]},"The network sensor  comprises a detection engine  that analyzes the received packets using signature based matching. The signatures used by the detection engine  may be stored in a repository, such as a local database. The signatures specify the characteristics that the malware network traffic will have. This includes data patterns that may be present in network packets, state information associated with the network protocols, and sequences of events that may be considered anomalous network behaviour. These signatures are expressed as detection engine rules. When the detection engine  detects a packet or sequence of packets that matches a specific rule it generates an alert event using the alert generation module . The detection engine rule includes a signature for detecting malware in the network traffic as well as an action to take when the rule is matched. The action instructs the alert generation module  to generate an alert event. The rule also includes a signature identifier that can be used to determine which signature caused an alert event to be generated.","The alert events generated by the alert generation module  are typically small in size, in order to reduce the amount of input\/output (JO) processing that must be done by the detection engine . Reducing the amount of JO processing done by the detection engine  helps the detection engine  to compare packets and signatures quicker. The alert events may be stored to memory, or other local storage, for further processing, either by the network sensor  or other components of the system .","The network sensor  may further comprise an alert spooler  which reads the alert events generated by the alert generation module  stored in the memory and processes them and forwards them to other components of the system . The forwarded alert may comprise the IP addresses of the packet that generated the alert event. For example if the packet that caused the alert event to be generated is an HTTP event the IP addresses may include a source IP address of a subscriber's computer that requested a web page, and a destination IP address of the web page or web site requested. The detailed alert may comprise details on the generated alert event, such as an identifier of the signature that resulted in the match, the packet that was matched, header information of the packet that was matched, flags relating to the context in which the alert event was generated and\/or a time stamp indicating the time the alert event was generated. Additionally the forwarded alerts may comprise additional information not contained in the alert generated by the detection engine .","In an illustrative embodiment, the detection engine  and alert generation module  may be implemented using SNORT\u00ae, which provides a rules-based detection engine that compares packets to signatures of rules and generates alert events when a packet matches a signature. The rules used by SNORT\u00ae define an action to take when a match to the signature occurs. The signature defines matching information including, for example, the protocol of the packet, source IP address, source port, direction of the packet, destination IP address, destination port and optionally one or more option keyword\u2014argument pairs. One skilled in the art will appreciate the use of SNORT\u00ae and signatures as described in the SNORT\u00ae User Manual 2.8.4 published Sep. 18, 2008 may be replaced for other detection engines that are capable of comparing rules to packets and generating alert event. SNORT\u00ae may generate the alert events using unified output, which reduces the amount of IO processing done by SNORT\u00ae.","In an illustrative embodiment the alert spooler  may be implemented as a Barnyard plug-in which is capable of reading the unified alert logs written by SNORT\u00ae and forwarding corresponding alerts.","In the illustrative embodiment, once SNORT\u00ae generates an alert event it may store it in a local alert repository . An alert spooler , which in an illustrative embodiment may be provided by a Barnyard plug-in, may then access the local alert repository  and retrieve a plurality of alert events to be forwarded to other components in the system . In an illustrative embodiment the alert spooler  forwards alerts upon reading the corresponding alert event from the local alert repository . Alternatively the alert spooler  may be configurable to forward a plurality of alerts at regular intervals, such as every hour, twice a day, once a day, etc. Additionally or alternatively, the alert spooler  may be configured to forward the alerts once a threshold number of new, or un-forwarded, detailed alerts have been generated by the alert generation module  and stored in the local alert repository .","The alert spooler  of the network sensor  may forward the alerts, using the ISP network , to an aggregator . The aggregator  comprises an ID translator  that is capable of translating a network identifier, such as an IP address, to an associated subscriber identifier, such as a user name or account number of a subscriber, a media access control (MAC) address assigned to the subscriber, network access server (NAS) port number, etc. The ID translator  may modify the received alerts that were forwarded from the network sensor  in order to replace the network identifier (ID) with the corresponding subscriber ID. Alternatively, the ID translator  may not replace network ID with the subscriber ID but may instead associate the subscriber ID with the alert. The ID translator  may retrieve the subscriber ID associated with the network ID from a subscriber identification component .","The subscriber identification component  may comprise a network ID to subscriber ID repository  that stores the subscriber IDs and the current network ID associated with the subscriber ID. As will be appreciated, the network ID assigned to a particular subscriber ID may change, and as such a mechanism is needed in order to keep track of the current network ID to subscriber ID associations. Two possible mechanisms are depicted in . The subscriber identification component  may comprise an IP monitor  that receives messages forwarded from the network tap\/filter device . The messages forwarded to the IP monitor  may include messages that may modify the current network ID\/subscriber ID association, such as for example dynamic host configuration protocol (DHCP) messages or remote authentication dial in user service (RADIUS) messages. The IP monitor  analyzes the messages to determine if the messages provide a new network ID to subscriber ID association and updates the network ID to subscriber ID repository with any new associations as appropriate.","Additionally, or alternatively, the network ID to subscriber ID repository  may be populated using an ISP application programming interface (API) . The ISP API may return the current associations from the ISP. Additionally, or alternatively the ID translator  may make use of the ISP API  directly in order to request the subscriber ID of the network ID that is to be translated if no current association is stored in the repository , or the association is out of date. New associations retrieved using the ISP API  may be stored in the network ID to subscriber ID repository .","Once the ID translator  has modified the detailed alert with the subscriber ID, it is passed to an alert aggregator . The alert aggregator  reduces the amount of alert information in order to allow the system  to scale to large deployments. The alert aggregator  aggregates the alerts on a per subscriber basis to generate a summary alert for each subscriber that has at least one associated alert. In an illustrative embodiment there will be a single summary alert for each unique malware instance as identified by the signature ID) associated with a specific subscriber. The summary alert for a subscriber may provide a counter for the number of alerts generated from a particular signature. For example if a subscriber has a computer infected with two pieces of malware, a large number of detailed alerts may be generated based on the traffic generated by each piece of malware. The subscriber's summary alert may indicate the number of detailed alerts generated from a signature for the first piece of malware as well as the number of detailed alerts generated from the signature for the second piece of malware. Additional information may also be aggregated by the aggregator  including a total number of detailed alerts generated for a subscriber, as well as a number of detailed alerts generated by all subscribers for a particular piece of malware, and a total number of detailed alerts generated by all subscribers for all malware. The alert aggregator  may forward the generated summary alerts, and optionally the additional summary information, to other components of the system .","It will be appreciated that the alert aggregator  may periodically forward the generated summary alerts, for example every hour, twice a day, once a day, etc. The alert aggregator  may also be configured to forward the summary alerts as soon as possible. It will also be appreciated that the frequency at which the alert aggregator  forwards the summary alerts may differ from the frequency at which the network sensor forwards detailed alerts to the aggregator . Additionally, the alert aggregator  may reset the detailed alert counts used for tracking the number of detailed alerts generated for subscribers, as well as for the network, once the summary alerts, and additional summary information has been forwarded. The alert aggregator  may also forward the detailed alerts to additional components of the system . Although the detailed alerts are not required for further processing by the system, it may be desirable to store them.","The alert aggregator  may forward the summary alerts to a reporting infrastructure . The reporting infrastructure  comprises a summary alert repository  for storing the summary alerts received from the aggregator . Although the specific summary alerts received may be saved in the summary alert repository ; the received summary alerts are combined with the summary alerts currently stored for a corresponding subscriber, if any. For example, if the aggregator  had previously forwarded, and the summary alert repository  stored, a summary alert indicating that a particular subscriber had generated ten detailed alerts for a particular piece of malware, and subsequently forwards another summary alert for the particular subscriber indicating that they have generated twelve detailed alerts for the particular piece of malware, the summary alert repository  would update the currently stored summary alert to indicate that the particular subscriber has generated twenty two detailed alerts for the particular piece of malware. It will be appreciated that if there is no current summary alert for the subscriber, or for the particular malware, the summary alert repository  would store the new information.","In an alternative embodiment, the reporting infrastructure may provide functionality to the aggregator  that allows the aggregator to update the summary alert repository  directly. For example the summary alert repository may provide a service such as updateSubscriberCount(SubscriberID, SignatureID) that can be called by the alert aggregator  each time an alert for a subscriber is processed. If an aggregator makes use of such functionality it may not be necessary to generate and forward a summary alert. As such, the alert aggregator  may call the update functionality provided by the reporting infrastructure  when it processes a received alert. The update functionality may perform checks to determine if a record for the subscriber ID already exists, and if it does update the particular malware counters stored in the summary alert repository . If no record is found the update functionality may add a new record for the subscriber.","It will be appreciated that the summary alert information may be stored in the summary alert repository  in various ways. In one illustrative example, a record may be stored for each unique subscriber ID and signature ID combination. The record may include a counter for the number of alerts generated from the signature associated with the signature ID for the subscriber ID. The record may store additional information for each record, for example if a notification has been sent to the subscriber, as described further below, if the alert summary record is new. Other information may be stored in the summary alert repository . The information stored in the summary alert repository  may also be stored in various different forms as will be appreciated by one skilled in the art.","The reporting infrastructure  may further comprise a subscriber notification generator . The subscriber notification generator  generates a notification to a subscriber once the subscriber's summary alerts have passed a threshold value. The threshold value may vary depending on the configuration of the system . For example, if the detection engine  used to detect malware infection provides the malware detection with a very low false-positive rate; the threshold value may be set so that if the summary alert indicates that a single detailed alert has been generated for the user a corresponding notification is generated. Alternatively, if the detection engine  has a higher false-positive rate the threshold may be raised in order to account for potential false positives. Additionally, the threshold may be set for the particular malware or type of malware. For example, the threshold may be set to generate a notification if a single detailed alert was generated for a particular piece of malware that is considered to be a significant threat, and also generate a notification if, for example, ten detailed alerts have been generated for a particular piece of malware that is considered to be a medium threat.","When the notification is generated, additional information associated with the signature ID of the alert, or alerts, the notification is being generated for may be retrieved. This additional information may be associated with a signature ID for the various malware signatures. The additional information may include, for example, a name of the malware, the type of malware associated with the signature ID, the severity of the malware or malware type. The notification generated by the subscriber notification generator  may be provided in various ways. For example, the notification may be an email sent to the subscriber, a text message sent to a phone number associated with the subscriber ID, a voicemail sent to a phone number associated with subscriber ID or as a domain name server (DNS) redirect for future traffic of the subscriber, or as a walled garden or web interstitial.","Once a notification is sent to the subscriber, the notification generator  may not send additional notifications for new alerts. Alternatively, if a new alert indicates infection by a different piece of malware then the malware the previous notifications was sent for, the notification generator  may send a new notification to the subscriber. The notification generator , may send periodic reminder notifications to the subscriber if the detected malware has not been remedied. Alternatively the notification generator  may escalate notifications if detected malware has not been remedied by the subscriber. For example, an initial notification may be sent to the subscriber, followed by a voicemail if no action is taken by the user, and then by redirecting the subscriber's web traffic through DNS redirection.","The notifications sent to a subscriber include an indication for accessing a remediation portal . For example, if the notification is an email, the indication may include a hypertext link, if the notification is a voicemail it may include instructions for accessing the remediation portal. If the notification is a DNS redirect, the indication may be a landing page of the remediation portal .","The remediation portal  provides the subscriber with instructions to follow in order to remove or quarantine the particular malware detected. The remediation portal may provide a dynamically generated instructions based on the specific malware that was detected on the subscriber's computer. The remediation process provided by the portal may include automated processes for automatically removing the malware from the computer. Additionally, or alternatively, the remediation process may comprise instructions for actions to be performed by the subscriber such as deleting a file, modifying configuration settings of the computer, etc.","Once the user has accessed the remediation portal , and completed the remediation process, the remediation portal resets the summary alerts stored in the summary alert repository  for the subscriber associated with the remedied malware. As such, once the subscriber has performed the remediation process, no further notifications will be received, unless a further malware infection is detected.","In addition to the remediation portal , the reporting infrastructure  may further comprise an administration portal  for administration of the system . For example the administration portal  may provide an administrator with various functionality such as modifying the configuration of network components, such as the forwarding frequency of the network sensor  and the aggregator , as well as the notification thresholds of the subscriber notification generator , and updating the alert signatures used by the detection engine  of the network sensor .",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 3","FIG. 2","FIG. 3","FIG. 2"],"b":"102"},"As shown in , the illustrative implementation comprises a network sensor device , an aggregation server , an alert reporting cluster  and a portal . As further described below, the network sensor device  implements the functionality of both the network sensor  and the network tap\/filter ; the aggregation server  implements the functionality of the aggregator  and the subscriber identification component ; and the functionality of the reporting infrastructure  is implemented by a combination of the alert reporting cluster  and the portal .","The network sensor device  comprises a packet capture interface card  that receives packets from the ISP network . The packet capture interface card  comprises a filter component  that identifies packets used by the malware detection engine and sends them to the detection engine. The packet capture interface card  further comprises a forwarding component  that can forward the packets to different components, such as a further data filter for additional filtering and forwarding. The filter  may send the filtered packets to the detection engine by copying the packets to a computer readable memory , such as for example random access memory (RAM), of the network sensor device . In order to improve performance of the network sensor device , the packet capture interface card may perform a zero-copy write of the events to the memory . The memory  further stores instructions, for execution by the multi core CPUs . The instructions provide the network sensor device  with an operating system , such as for example CentOS (Linux), a detection engine  such as for example SNORT\u00ae, and an alert stack , for example using a Barnyard plug-in, for spooling and forwarding the alerts. The network sensor device  may further comprise a network interface card  for forwarding the alerts to the aggregation server .","The aggregation server  comprises a memory  for storing instructions for execution by the multi-core CPUs . The instructions provide an operating system , an structured query language (SQL) stack  for providing database functionality to the aggregation server  for storing the network ID to subscriber ID information; and an aggregator stack  for translating the network ID to a subscriber ID, aggregating the alerts into summary alerts and forwarding the summary alerts, or the information of the summary alerts such as the subscriber ID and signature ID associated with an alert. The alerts may be forwarded to the alert reporting cluster  using a network interface card .","The alert reporting cluster comprises a memory  for storing instructions for execution by the multi-core CPUs . The instructions provide an operating system , a SQL stack  for providing database functionality for storing the summary alerts and a notification stack  for generating the subscriber notifications. The SQL stack may include functionality for updating the counts associated with a particular subscriber ID and signature ID. The alert reporting cluster  includes a network interface card  for sending the subscriber notifications.","The portal  comprises a memory  for storing instructions for execution by the multi-core CPUs . The instructions provide an operating system  and a portal stack . The portal stack may comprise for example a web server, a SQL server and a server side script processing engine. The portal  includes a network interface card for accessing the portal from a subscriber's computer.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":"FIG. 4","b":["234","402","406","112","412","410","206","412","414"]},"The associations stored in the subscriber ID translation table  may be populated by a network sensor device , coupled to the ISP network in a location where it will see network traffic including the DHCP or RADIUS messages as well as additional network traffic. The network sensor device  may forward the DHCP and RADIUS messages to a data filter . The network sensor device  may forward detailed alerts to an aggregator . The data filter further processes the received DHCP\/RADIUS messages in order to filter out, and forward, the messages that provide a new network ID to subscriber ID association. The messages are forwarded to the subscriber ID database server  which updates the ID translation table  with the new association.","Additionally or alternatively, a data filter , which functions in the same manner as described above with respect to data filter , may be located in front of the DHCP or RADIUS server so that it will only see the DHCP or RADIUS messages, and so no filtering of the network traffic needs to be done in order to identify the DHCP or RADIUS messages. The data filter forwards network ID to subscriber ID associations to the subscriber ID database server .","The subscriber ID database server  may receive associations from an ISP subscriber management infrastructure  using an appropriate API implementation on the subscriber ID database server . The API may allow the subscriber ID database server  to request the current network identifier associated with a particular subscriber ID. The subscriber ID database server  may request a network ID associated with a current subscriber. For example, if the network ID associated with the subscriber ID in the ID translation table  is reassigned to a different subscriber, the subscriber ID database server may request a new network ID that is associated with the subscriber ID. Additionally or alternatively, if the aggregator requests a subscriber ID associated with a network ID that is not currently stored in the ID translation table , the subscriber ID database server  may request the subscriber ID from the ISP subscriber management infrastructure using the API, and store the association in the ID translation table .",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 5","FIG. 5"],"b":["112","104","106","112","506","506","301","510","301","104","104","102"]},"Additionally or alternatively, network sensor devices  may deployed within the core of the ISP network at location where each network sensor device may be able to see, and so process, more network traffic. This may reduce the capital expenditures and operating expenses for deploying the system . As depicted in  the upstream traffic from a subscriber's computer may take a different path to a web server  than the return downstream traffic. As depicted the upstream traffic may pass through an network device on the upstream path; while it passes through a network device on the downstream path. A network sensor device  may be deployed at the location of either, or both, network device or . However, a network sensor device  deployed in location may not be able to see both directions of traffic. Similarly a network sensor device  deployed at location may not be able to see both directions of traffic. The detection engine of network sensor devices deployed in these locations may use rules that do not require the session state information.","Alternatively, the detection engines of the network sensor devices deployed in these locations may attempt to reconstruct the session state information using the one sided traffic flow information available. By reconstructing the session state information, the network sensor devices may use signatures that are based on the session state information.","The signature set used in the network sensors may rely on the ability of the network sensor to maintain the session state of a TCP\/IP connection. This includes the ability to determine if the session is in the process of being set up, is established or is being torn down. It also includes the ability to determine whether a particular packet has been transmitted by the client or the server end of the connection and the ability to reassemble sections of the TCP stream so successful pattern matching can occur.","Carrier\/ISP networks may be configurations such that the data path followed by upstream traffic (coming from the client) is different from the downstream traffic (going to the client). This is known as asymmetric routing. In these cases it may not be economically feasible to position the network sensors in a location where they can see both sides of the data stream. To use the signature set that includes signatures that use the session state information, the network sensor must be able to maintain session state and reassemble the data stream while having access to traffic from one side of the bi-directional communication. This may be done using the flags in the TCP header (SYN, ACK, RST, FIN), the sequence numbers (SEQ) and the acknowledgement numbers (ACK).","The TCP header flags provide information about the state of the connection and identify the client or server in the communication. The client and server roles can be identified in the initial session setup. This is described in detail in the IETF document RFC793\u2014Transmission Control Protocol. The client end is identified by the presence of a SYN flag set on its own. A server is identified by the SYN flag being set in combination with the ACK flag. If for some reason the sensor missed the packet flow of the initial session setup and has to pick up the flow in mid-session, the identity of the client and server may be deduced from the port numbers used in the communication. Servers are usually identified by \u201cwell known\u201d port numbers. For example a web server uses port 80; ftp 21; telnet 23; ssh 22; etc. In cases where random or non-standard ports are used the system defaults to assuming the flow is coming from the client side, since most of the signatures are looking for content coming from the client. A TCP data stream is split into packets for transmission. In order for the network sensor to successfully match signatures that may span packets, the network sensor needs to reassemble the original data stream from the transmitted packets. In a normal TCP implementation that sees both sides of the communication, the SEQ and ACK values from the packet headers in both the transmitted and received packets are used to reconstruct the data stream. However in the case of asymmetric routing the reconstruction must be done with information from only one side of the conversation between a subscriber's computer and an end point of the communication such as a web site . To achieve this, the SEQ values from packets are seen may be used to predict the corresponding ACK values that would have been received in the half of the flow that isn't seen. Similarly, ACK values can be used to predict the SEQ values in the invisible half of the flow. With this information it is possible to reconstruct the session state information from one side of a traffic flow and so use alert signatures that rely on the session state in network sensors that are deployed in locations that may only see half of the traffic flow.","For complete coverage in an asymmetric routing configuration, two sensors would be deployed, one covering upstream traffic, for example at location and the other downstream, for example at location . In this case one sensor would be able to match signatures in traffic coming from the client end and the other in traffic coming from the server end.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 6","FIG. 6"],"b":["102","102","202","202"]},{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 7","FIG. 7"],"b":["102","204","204","204","206","206","206"],"i":["a","b ","c","a","b ","c"]},"As will be appreciated from the above description, the use of a plurality of network sensors -that report to a smaller number of aggregators -, which in turn report to a single reporting infrastructure  allow the system  to easily scale to the size required to process the traffic of large ISP networks.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 8","b":["800","802","204","804","806","806","808","808","804","808","802","806","810","812","814","816","818","820"]},{"@attributes":{"id":"p-0069","num":"0068"},"figref":"FIG. 9","b":["900","902","904","906","908","908","910"]},{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 10","b":["1000","1002","1004","1006","1008","1008","1008","1004"]},{"@attributes":{"id":"p-0071","num":"0070"},"figref":"FIG. 11","b":["1102","1104","1106","1108","1108","1110","1112","1112","1114","1112"]},"Although the above description has described various embodiments of a network based malware detection system, one skilled in the art will appreciate that changes and modifications may be made to the described illustrative embodiments. For example, although the above has described copying network traffic in order to analyze it, it is possible to have the network sensor act inline on the network traffic.","The above description provides a network based malware detection system and method. The components of the system, as well as their functioning have been described using various means, including flow charts specifying methods that the components of the system may implement. It is understood that the system may comprise hardware components that can be incorporated into a communication network. The hardware components may combine hardware, firmware and software in order to implement the system described herein. Alternatively, the system components may be implemented on hardware components by software expressed as a series of computer executable instructions that configure the hardware components to implement the system described herein."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Various embodiments of a network based malware detection system will be described with reference to the figures in which:",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 11"}]},"DETDESC":[{},{}]}
