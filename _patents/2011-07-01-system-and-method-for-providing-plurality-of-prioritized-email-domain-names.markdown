---
title: System and method for providing plurality of prioritized email domain names
abstract: The system and method are for provisioning an electronic mail (email) account for allowing access to an electronic mailbox to retrieve email. A mobile office platform includes a configuration module and a communications module which are operative for accessing an electronic mailbox. The communications module is to receive email address parameters of the user and transmit a domain name system (DNS) query to the Internet for returning mail exchange (MX) records, including email domain names, corresponding to the email address parameters of the user. The configuration module is to process returned MX records to determine candidate configuration parameters for accessing the email account of the user to retrieve user email. The configuration module is to determine candidate configuration parameters based upon expanding a plurality of prioritized email domain names of the returned MX records.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09083669&OS=09083669&RS=09083669
owner: BlackBerry Limited
number: 09083669
owner_city: Waterloo
owner_country: CA
publication_date: 20110701
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["The present disclosure relates to the field of communications systems, and, more particularly, to electronic mail (email) communications systems and related methods.","Electronic mail (email) has become an integral part of business and personal communications. As such, many users have multiple email accounts for work and home use. Moreover, with the increased availability of mobile cellular and wireless local area network (LAN) devices that can send and receive emails, many users wirelessly access emails from mailboxes stored on different email storage servers (e.g., corporate email storage server, Yahoo, Hotmail, AOL, etc.).","Yet, email distribution and synchronization across multiple mailboxes and over wireless networks can be quite challenging, particularly when this is done on a large scale for numerous users. For example, different email accounts may be configured differently and with non-uniform access criteria. Moreover, as emails are received at the wireless communications device, copies of the emails may still be present in the original mailboxes, which can make it difficult for users to keep their email organized.","The foregoing system usefully provides great convenience to users of wireless email communication devices for organizing and managing their email messages. Yet, further convenience and efficiency features may be desired in email distribution and synchronization systems as email usage continues to grow in popularity. For example, in new user accounts, an email provisioning and authentication system can run through a series of possible email server configurations to determine how to access an electronic mailbox for a user email account. The user can supply email address parameters such as an email address and password, but often becomes frustrated if the wrong email address parameter is typed. The user typically must wait a relatively long time to determine if something is wrong, or worse, the user may be given an advanced configuration screen and asked to provide difficult to know IP address numbers, ports and other entries because of the mistake. Some prior art systems have parsed emails and tried to provision, and as a subsequent step after failure, used MX records to aid in the process for accessing email.","In prior approaches, a system may run through a series of possible email server configurations to determine access to a source mailbox. For example, if a user provided an email address of Sally@somedomain.com, the system would try a series of possible server domain names, for example, mail.somedomain.com, pop.somedomain.com, etc. until the system finds one that works. If the system goes through the entire list of possibilities to validate an account, this can result in significant delays. Also, with the increase in \u201cvanity\u201d domains, using the ending of the email address might not lead to the actual server where the account is hosted. In addition, certain email actually resolves to other service provider email systems, e.g., a Verizon.com addresses resolved to mail.yahoo.com. Thus, such approaches may not always find the appropriate address of the mail server, and the user may have to wait a significant time while this process takes place only to have the process fail in the end.","United States Patent Application 2007\/0073818 to Gardner et al. (which is assigned to the present Assignee) entitled \u201cSystem and method for provisioning an email account using mail exchange records\u201d discloses a system that provisions an electronic mail (email) account of a user for allowing access to an electronic mailbox from a remote device to retrieve email. A communications module receives email address parameters of the user and transmits a domain name system (DNS) query to the Internet for returning mail exchange (MX) records corresponding to the email address parameters of the user. A configuration module processes any returned MX records as a starting point for determining configuration parameters for accessing the email account of the user to retrieve user email.","Also, United States Patent Application 2007\/0073819 to Gardner et al. (which is also assigned to the present Assignee) entitled \u201cSystem and method for provisioning an email account using mail exchange and address records\u201d teaches the use of a system for provisioning an electronic mail (email) account of a user for allowing access to an electronic mailbox from a remote device to retrieve email. A communications module receives email address parameters entered by the user and transmits a domain name system (DNS) query to the Internet for returning mail exchange (MX) and address (A) records corresponding to the entered email address parameters of the user. A configuration module processes any returned MX and A records to determine whether the email address parameters entered by the user are valid before attempting to provision the email account of the user.","The present disclosure will now be described more fully hereinafter with reference to the accompanying drawings, in which example embodiments are shown. The present disclosure may, however, be embodied in many different forms and should not be construed as limited to the example embodiments set forth herein. Rather, these example embodiments are provided so that this disclosure will be thorough and complete, and will fully convey the scope of the present disclosure to those skilled in the art. Like numbers refer to like elements throughout.","Features in accordance with the example embodiments may be provided by a system for provisioning an electronic mail (email) account of a user for allowing access to an electronic mailbox from a wireless communication device to retrieve email including a mobile office platform on which a communications module and a configuration module are operative for accessing the electronic mailbox. The communications module may be configured to receive email address parameters of the user and transmit a domain name system (DNS) query to the Internet for returning mail exchange (MX) records, including email domain names, corresponding to the email address parameters of the user. Also, the configuration module may be configured to process returned MX records to determine candidate configuration parameters for accessing the email account of the user to retrieve user email, and the configuration module may be configured to determine candidate configuration parameters based upon expanding a plurality of prioritized email domain names of the returned MX records.","The prioritized email domain names may include multiple parts respectively defining at least a user ID, email protocol and email server name pattern, and the configuration module may be configured to determine candidate configuration parameters by expanding the multiple parts of the plurality of prioritized email domain names of the returned MX records. The configuration module may be configured to attempt access to the email account of the user based upon the determined candidate configuration parameters. The configuration module may be configured to attempt access to the email account of the user based upon five or less candidate configuration parameters. The configuration module may be configured to prioritize the email domain names based upon relative geographic proximity. The configuration module may be configured to update heuristics used for determining candidate configuration parameters based upon successful candidate configuration parameters.","Features in accordance with the example embodiments may be provided by a method of provisioning an electronic mail (email) account of a user for allowing access to an electronic mailbox from a wireless communication device to retrieve email, the method including receiving email address parameters of the user and transmitting a domain name system (DNS) query to the Internet for returning mail exchange (MX) records, including email domain names, corresponding to the email address parameters of the user, processing returned MX records to determine candidate configuration parameters for accessing the email account of the user to retrieve user email, and determining candidate configuration parameters based upon expanding a plurality of prioritized email domain names of the returned MX records.","Also, a computer program product including a non-transitory computer-readable medium may have a computer-readable program code embedded therein and configured to be executed to implement provisioning an electronic mail (email) account of a user for allowing access to an electronic mailbox from a remote device to retrieve email, as set forth in the described method.","Referring initially to , a direct access (DA) email distribution and synchronization system  allows direct access to different mail sources, allowing messages to be transferred directly to a mobile wireless communication device from a source mailbox. As a result, different mail stores need not be used for integrated external source mail accounts, and a permanent copy of an email in a local email store is not required.","Although this diagram depicts objects as functionally separate, such depiction is merely for illustrative purposes. It will be apparent to those skilled in the art that the objects portrayed in this figure can be arbitrarily combined or divided into separate software, firmware or hardware components. Furthermore, it will also be apparent to those skilled in the art that such objects, regardless of how they are combined or divided, can execute on the same computing device or can be arbitrarily distributed among different computing devices connected by one or more networks.","The direct access system  enables email users or subscribers to have email from third party email services pushed to various mobile wireless communications devices . Users need not create a handheld email account to gain direct access to an existing external email account. The direct access system  may operate without performing aggregation as used in some prior art systems, in which emails are aggregated from multiple different source mailboxes to a single target mailbox. In other words, email need not be stored in an intermediate target mailbox, but instead may usefully be accessed directly from a source mail store.","As illustrated in , the direct access system  illustratively includes a Web client (WC) engine  and a mobile office platform (MOP) . These Web client engine  and mobile office platform  operate together to provide users with direct access to their email from mobile wireless communications devices (also referred to herein as a device, remote device, wireless communication device, handheld or handheld device)  via one or more wireless communications networks , for example. Both the Web client engine  and the mobile office platform  may be located at the same location or at separate locations, and implemented in one or more servers. The web client engine  illustratively includes a port agent  for communicating with the wireless communications devices  via the wireless communications network(s) , a worker , a supervisor , and an attachment server , which will be discussed further below. An alert server  is shown in dashed lines, and in one example embodiment, is not used, but could be part of the system in yet other example embodiments.","The mobile office platform  illustratively includes a DA proxy , and a proxy application programming interface (API)  and a cache  cooperating with the DA proxy. The mobile office platform  also illustratively includes a load balance and cache (LBAC) module , an event server , a universal proxy (UP) Serylet , an AggCron module , a mobile office platform (MOP) engine , and a database (DB) engine , which will be discussed in further detail below. The Least Recently Used (LRU) cache  caches new messages, and can release messages and objects that were least recently used.","The supervisor  processes new mail notifications that it receives from the direct access proxy . It then assigns a job, in the form of a User Datagram Protocol (UDP) packet, to the least-loaded worker , according to the most recent UDP heartbeat the supervisor  has received. For purposes of this description, heartbeat is a tool that monitors the state of the server. Additionally, the supervisor  will receive a new service book request from the direct access proxy  to send service books to the mobile wireless communication device for new or changed accounts. A service book can be a class that could contain all service records currently defined. This class can be used to maintain a collection of information about the device, such as connection information or services, such as an email address of the account.","The worker  is an intermediary processing agent between the supervisor  and the port agent , and responsible for most processing in the Web client engine . It will retrieve e-mail from a universal proxy , via a direct access proxy, and format e-mail in Compressed Multipurpose Internet Mail Extension (CMIME) as a type of Multipurpose Internet Mail Extension, and send it to the port agent , for further processing. Its responsibilities include the following tasks: (1) messages sent to and received from the handheld; (2) message reply, forward and more requests; (3) Over The Air Folder Management operation (OTAFM); (4) attachment viewing; and (5) service book.","The port agent  acts as a transport layer between the infrastructure and the rest of the Web client engine . It is responsible for delivering packets to and from the mobile wireless communications device. To support different integrated mailboxes with one device, more than one service book can be used, and each service book can be associated with one integrated mailbox. A port agent  can include one Server Relay Protocol (SRP) connection to a relay, but it can also handle multiple SRP connections, and each connection may have a unique Globally Unique Identifier (GUID) associated with a service book. The attachment server  provides service for document\/attachment conversion requests from workers .","The direct access proxy  provides a Web-based Distributed Authoring and Versioning (WebDAV) interface that is used by the worker  to access account and mailbox information. This provides functionality to create, change and move documents on a remote server, e.g., a Web server. The direct access proxy  typically will present an asynchronous interface to its clients. The LBAC module  is used by a notification server and the Web client engine  components to locate the proper DA proxy for the handling of a request. The universal proxy Servlet  abstracts access to disparate mail stores into a common protocol. The event server  responds to notifications of new messages from corporate servers  and\/or mail service providers , which may be received via the Internet , for example. The notifications are communicated to the direct access proxy  by the AggCron module  and the event server  so that it may initiate checking for new mail on source mailboxes ,  of the mail service providers  and\/or corporate servers . The proxy API can be a Simple Object Access Protocol (SOAP) Daemon  and is the primary interface into a database , which is the primary data store for the mobile office platform . The AggCron module  may also periodically initiate polling for new messages as well.","The example embodiments as described usefully set forth a system and method in which the system can send a domain name system (DNS) query to the Internet upon receipt of a user email that contains email address parameters entered by the user. In one example embodiment, MX records corresponding to the email address parameters of the user can be returned, which are used as a starting point for determining configuration parameters for accessing the email account of the user and retrieving user email. In prior approaches, a system may run through a series of possible email server configurations to determine access to a source mailbox. For example, if a user provided an email address of Sally@somedomain.com, the system would try a series of possible server domain names, for example, mail.somedomain.com, pop.somedomain.com, etc. until the system finds one that works. If the system goes through the entire list of possibilities to validate an account, this can result in significant delays. Also, with the increase in \u201cvanity\u201d domains, using the ending of the email address might not lead to the actual server where the account is hosted. In addition, certain email actually resolves to other service provider email systems, e.g., a Verizon.com addresses resolved to mail.yahoo.com. Thus, the current approach may not always find the appropriate address of the mail server, and the user may have to wait a significant time while this process takes place only to have the process fail in the end.","The MX records can be used as a starting point for determining configuration parameters for accessing a user email account. The MX records can also be used to aid in the \u201cguessing\u201d logic, which is described later. A user domain name can be checked against the MX record list to see if there is a match, and if not, then the system declares a failure without trying to authenticate.","In one non-limiting example embodiment, when provisioning a new email account, the mail exchange (MX) and address (A) records corresponding to the entered email address parameters of the user are returned. A configuration module processes MX or A records to determine whether any email address parameters entered by the user are valid before attempting to provision the email account of the user. The email address parameters could be an email address, or email address and password as non-limiting examples.",{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 2","FIG. 1"],"b":["24","24","24","50","25","24","50","24","24"],"i":["a ","b","a ","b "]},"A mail exchange (MX) record can be an entry in a domain name database that identifies a mail server that is responsible for handling electronic mail for the domain name. Different MX records can be entered for any single domain name that is using more than one mail server. Priority can be obtained by a preference number, indicating the order in which the mail servers could be used. This would allow primary and back-up mail servers. Thus, an MX record maps a domain name to a list of mail exchange servers for that domain.","Another type of mapping from a name to an IP address is an address (A) record, for example, the host name to an IP address mapping. Typically, in the priority of MX records, the smallest preference number has the highest priority.","It should be understood that although the DNS system supports different types of record systems, the A record is typically a straight mapping between a name and one or more IP addresses. The MX record is usually used for routing email traffic, for example, routing emails of a particular domain name to a particular server that can be different from what is in the A records. Typically, the MX record is a good indicator for where the email domain name server is routing mail and can be used not only to check a user domain name against the MX record to see if a match occurs, but also to improve the guessing logic as will be explained below. If the MX record does not match, there could be a failure and the system may not try to authenticate, but would ask a user to re-enter the particular email address parameters. The system and method could take a portion after the \u201c@\u201d and do a DNS query on the internet for MX and A records. A number of MX records can be pulled and the best one is picked to accomplish the provisioning and determine which server to pull mail from, especially when a company has several servers with different MX records acting as back-ups. This is important for vanity domain names. If there is an A record, there may or may not be additional insight on provisioning, yet in some instances, the A record can be used for determining a valid address. It is also possible to make several educated guesses as explained below. Otherwise, the user is told it is not a valid address.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":"FIG. 3"},"As shown at block , a user inputs email address parameters during a provisioning process for typical remote access capabilities as described above. Upon receipt of the email address parameters, such as an email address and log-in password, the communications module transmits a DNS query to the internet for returning MX records corresponding to the email address parameters of the user. The MX records are returned and used as a starting point for determining configuration parameters for accessing the email account of the user to retrieve user email (block ). If MX records or A records are returned for the user domain, a failure could occur and provisioning may not continue. The MX records can also be used with guessing logic, if necessary or desired (block ).","It should be understood that in one example embodiment of an example and illustrated embodiment, there are two steps. In a first step, the user domain is used to retrieve a list of MX records. If a list of MX records comes back empty, then the user domain is used to retrieve a list of A (\u201caddress\u201d) records as a second step. If the list of A records for the domain is also empty, the system could declare a failure without trying to authenticate. A database could include a table having a row for each ISP, operative with the guessing and other logic explained below.","Typically, the configuration module is operative for determining from the MX records a mail exchange server for an email domain name to which email is routed for the user email account. A prioritized list of possible mail servers can be obtained from the MX records to which the user email account is to be accessed and access to an email account can be based on priority. Configuration parameters could include the mail host, port, log-in name or password.","The configuration module is operative for generating a subset of possible configuration parameters by using heuristics of likelihood that a set of configuration parameters would be valid for accessing an electronic mailbox. A database can contain relevant configuration conventions that are sets of email expressions formed by symbols that symbolically represent the conventions used by email service providers for a set of configuration parameters. The configuration module can be operative for generating sets of possible configuration parameters that can be tried for accessing an electronic mailbox of a user.",{"@attributes":{"id":"p-0048","num":"0047"},"figref":"FIG. 4","b":["120","24","122","124","126","128"]},"Typically, the configuration module will process any returned MX or A records to determine whether any email address parameters entered by the user are valid before attempting to provision the email account of the user.","The configuration module is operative for determining that if no MX or A records exist, email cannot be delivered or retrieved from the email account based on the entered email address parameters. Typically the configuration module can inform the user that incorrect data has been entered and provisioning of the email account cannot begin until correct email address parameters are entered. Similarly with the MX record example set forth above, a different mail exchange server can be determined and a prioritized list of possible mail servers obtained. There now follows details of an example of guessing logic that can be used.","Guessing logic as will be described can be used as an aid for provisioning an account.  illustrates a system for automatically learning conventions used by mail domains. The system is part of the intelligent server , which includes a validator module  that determines a valid set of configuration parameters . The server includes a learner module , which accepts the valid set of configuration parameters  and generates configuration conventions . A configuration conventions store  is operative as a database preferably part of the server, but could be separate. It stores the conventions for each mail domain. The learner module  is operative with a rules store  as a database of different rules.","The validator module  determines a valid set of configuration parameters  for a respective mailbox based on a limited number of configuration parameters provided by the user. In an example embodiment, the validator module  may try to access the respective mailbox using a set of best guesses (estimates) for the configuration parameters as provided by the service that invokes the validator module . In the example embodiment, if the access attempt fails, the validator module  may request additional information from the user until the validator module  has a valid set of configuration parameters. The validator module  accesses the mailbox being configured by using the access protocol relevant to the mailbox.","In an example embodiment, the validator module  would use POP (or other e-mail protocol) to access a POP (or other e-mail protocol) enabled mailbox to verify that the configuration parameters  are valid. In other example embodiments, the validator module  may use IMAP to access IMAP enabled mailboxes. As is obvious to those skilled in the art, there are many access protocols that may be used to access mailboxes. After attempting to validate the configuration parameters , the validator module  returns status information and the valid set of configuration parameters .","The learner module  accepts the configuration parameters  and generates the configuration convention  for the configuration parameters . The configuration convention  is a manner of formatting the conventions used for configuration parameters for storage in the configuration convention store . In an example embodiment, if the users email address is \u201cjohn.smith@foo.com\u201d, and the login name parameter required by the relevant mail host is \u201cjsmi\u201d, an expression within the configuration convention  for the login name parameter may be <FirstName(1)><LastName(3)>.","A variety of formats could be used in implementing a configuration convention . The learner module  may apply certain tests to the configuration parameters  to ensure that the configuration parameters  are credible. In an example embodiment, the learner module  will only learn conventions in cases where the mail host is in the same mail domain as the email address of the user, to avoid attempts by \u201chackers\u201d to pollute the learned configuration conventions . Other tests are envisioned to ensure the integrity of the learned configuration conventions . The learner module  may also apply rules that are stored in the rules store . These rules may be based on business criteria or other relevant criteria. In an example embodiment, the rules may indicate that certain conventions are not to be learned for security reasons.","Configuration conventions  that are deemed acceptable by the learner module  are then stored in the configuration conventions store . In an example embodiment, the configuration conventions store  may include standard configuration conventions applicable to all domains, as well as one or more of the automatically learned configuration conventions  for each mail domain. Mail domains may have more than one associated configuration convention, as there may be multiple ways and protocols in which the mailbox on the mail domain may be accessed.","Services may then access the configuration conventions  from the configuration convention store  to generate a list of potential sets of configuration parameters when configuring access to one or more of the user mailboxes.","Based on empirical evidence, the vast majority of email providers adhere to a number of conventions when it comes to the configuration parameters used to access mailboxes. Almost all of the POP mail hosts in existence today are prefixed with \u201cmail.\u201d, \u201cpop.\u201d, or \u201cpop3.\u201d. It is likely that a user with an email address of \u201cjohn.smith@foo.com\u201d would be able to access their POP-enabled mailbox through the host named \u201cmail.foo.com\u201d, \u201cpop.foo.com\u201d or \u201cpop3.foo.com\u201d. These conventions can be captured in a data store and it is possible for the service that requires access to the user's mailbox to use the conventions to generate potentially valid sets of configuration parameters. The server can then attempt to determine a valid set of configuration parameters that can be used to access the user's mailbox. The set of configuration parameters for the user's mailbox can be determined when the user only provides an email address and password. The system can also successfully determine the configuration parameters in most cases. As new conventions are introduced or are discovered, they may be easily added to the data store.","A determination module  () is part of the server  () and operative as the mailbox interface module and generates possible sets of configuration parameters  based on user supplied configuration information , coupled with configuration conventions  stored in the configuration conventions data store . Services may then use the sets of configuration parameters  to determine the correct set of configuration parameters required to access the user's mailbox.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 7","b":["216","216","216","218","216","218"]},"The determination module  generates the sets of possible configuration parameters  based on user-supplied information , and relevant configuration conventions  from the configuration conventions data store . In many cases, the users email address provides sufficient information to be able to generate an accurate set of configuration parameters. In the example embodiment, given the email address \u201cjane.doe@foo.com\u201d, the determination module  would use the configuration conventions  to generate the possible configuration parameters  \u201cjdoe\u201d for the login name, and \u201cmail.foo.com\u201d for the server name.","Email providers use many conventions when determining configuration parameters, and as a result, the determination module  generates many sets of possible configuration parameters . To reduce the number of sets generated, the determination module  may only generate a subset of the sets of possible configuration parameters  based on additional user information, or based on heuristics of likelihood  that a given set of configuration parameters  may be successful under a given scenario. In an example embodiment, the user may indicate that only configuration conventions  with a protocol expression  of \u201cIMAP\u201d should be considered. In the example, the heuristics  could include tracking statistics about the number of attempts and percentage of successes using a given configuration convention , and thereby only generate possible configuration parameters  based on this configuration convention  if certain conditions are met.","Although many email providers adhere to fairly standard conventions for configuration parameters, such as naming the mail host \u201cmail.<MailDomain>\u201d and matching the login name to the email address, there are many other email providers that employ less obvious conventions, such as setting the login name to be <FirstName(1)><LastName(3)>, which in the case of the user with e-mail address of \u201cjohn.smith@foo.com\u201d would translate to the login name of \u201cjsmi\u201d. In the case of protocols that use uniform resource locators (URL) to indicate the location of the mailbox, the conventions are even less standard, since the login names are often embedded in the middle of the URL.","By capturing these conventions in the data store, it is possible for the service that requires access to the user's mailbox to use the conventions to generate potentially valid sets of configuration parameters, and then attempt to determine a valid set of configuration parameters that can be used to access the user's mailbox. Therefore, it is possible to determine the set of configuration parameters for the user's mailbox even if the user is unable to provide all of the necessary configuration information. All that may be required from the user is an email address and password, from which the system may be able to successfully determine the configuration parameters in most cases. As new conventions are introduced or are discovered, they may be easily added to the data store.","The configuration parameters could be represented using symbolic expressions, which may then be retained in the configuration conventions data store  for use by the service. This allows the service to draw configuration conventions from the data store, and using context data, to construct a valid set of configuration parameters that can be used to access mailboxes.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 8","FIG. 5"],"b":["254","252","211","216","218","254","250"]},{"@attributes":{"id":"p-0067","num":"0066"},"figref":"FIG. 9","b":["216","216","216","239","257","216","216","257","257","239","239","250","252"]},"The configuration conventions data store  stores the configuration conventions . As new conventions are introduced or discovered, they may be easily added to the configuration conventions data store .","The transformer module  expands the individual expressions  into configuration parameters by expanding each symbol  into its corresponding value using context data . In an example embodiment, a configuration convention  may include the mail protocol expression , \u201cPOP\u201d, the server name expression \u201cmail.<MailDomain>\u201d and the login name expression \u201c<FirstName(1)><LastName(3)>\u201d, for example, as shown in  for a plurality of expressions. If the transformer module  were provided with the context data  including the email address \u201cjohn.smith@foo.com\u201d, the transformer module  would infer the mail domain as \u201cfoo.com\u201d from the email address. It would then generate the configuration parameters  of \u201cPOP\u201d for the mail protocol, \u201cmail.foo.com\u201d for the server name, and \u201cjsmi\u201d for the login name.","In integrating\/setting up a user's email account with the email source, it is useful to allow the mobile office platform to do almost all of the work for the user, such that the user likely only needs to enter his\/her email address and password to set up his\/her account. It is useful to add to the integration methods, the use of MX (mail exchange) record mail domain information to \u201cguess\u201d the parameters to integrate\/set up a user's email account.","Specifically, from information extracted from DNS (through a query for MX records based on the email domain), the approach is able to generate additional candidate email access configurations (mostly through an expansion of mail server names) that standard guessing of industry conventions alone would never have yielded. This is primarily relevant in the case of a mail provider that hosts various mail domains that have no apparent connection to the provider through basic naming conventions. For example, Google (which is commonly known to host gmail.com) could host a mail domain named \u201cmyemail.com\u201d. So, given an email address of \u201cjoe@myemail.com\u201d, in the absence of a data store that mapped the \u201cmyemail.com\u201d mail domain to one or more of Google mail servers, it may be extremely difficult (if not impossible) to determine that mail access is accomplished through Google. But by querying DNS for the MX records of the \u201cmyemail.com\u201d mail domain, the method would be made aware of Google's involvement, and could then construct high-quality \u201cguesses\u201d as to what the mail server name might be based on that.","When integrating\/setting up a user's email account with the mobile office platform and the email source, the mobile office platform may maintain a \u201cguessing logic\u201d table (Guess table) of possible parameters for correctly setting up the account, as discussed above. Also, the mobile office platform may include in the Guess table, guesses derived from MX record mail domain information as possible parameters.","The discovery of the MX records is dynamic (i.e. at run-time, as opposed to a preconfigured table). In addition to the additional guesses, the approach may include a first preference mail domain from the MX record (as a result of a return by a DNS call that results in a unique guess configuration). An example first preference is the MX server value: mx1.foo.barcom. The mobile office platform may also include a second-preference mail domain from the MX record (as a result of a return by a DNS call). An example second preference is the MX server value: mx2.foo.barapple.sauce.com.","From the first and second preference server values, possible parameters may be generated, in a multi-part expansion of the server values, e.g.: pop.foo.bar.com (using mx1server server domain); pop.bar.com (using mx1 server remaining last two domain parts); pop.foo.bar.apple.sauce.com (using mx2server server domain); pop.bar.apple.sauce.com (using mx2server substring after first domain prefix); pop.apple.sauce.com (using mx2server substring after second domain prefix); pop.sauce.com (using mx2server substring after the second domain prefix).","In an example embodiment, the mobile office platform will not include more than a predetermined number (e.g. five (5)) total mail domains from the MX record (e.g. combination of first- and second-preference) as result of a return by a DNS call. In using a limitation of e.g. 5, it may be possible to find a \u201csweet spot\u201d for providing a useful number of mail domains.","In an example embodiment, the relative geographic proximity of the MX DNS may be used to help determine the first and second preference email server values. In an example embodiment, once logs are obtained from using the described methods, heuristics can be updated using historical information in the logs to improve the \u201cguessing\u201d of possible parameters.","Referring to ,  and , example embodiments of a system and method for provisioning an electronic mail (email) account of a user for allowing access to an electronic mailbox from a remote device to retrieve email will be described. The mobile office platform  includes a configuration module and a communications module which are operative for accessing an electronic mailbox. The communications module receives email address parameters of the user and transmit a domain name system (DNS) query to the Internet for returning mail exchange (MX) records, including email domain names, corresponding to the email address parameters of the user. The configuration module processes returned MX records to determine candidate configuration parameters for accessing the email account of the user to retrieve user email. The configuration module determines candidate configuration parameters based upon expanding a plurality of prioritized email domain names of the returned MX records.","As illustrated in , a transformer module , which is a part of the configuration module , processes returned MX records  to determine candidate configuration parameters  for accessing the email account of the user to retrieve user email. Candidate configuration parameters  are determined based upon expanding a plurality of prioritized email domain names  of the returned MX records.","A method of provisioning an electronic mail (email) account of a user for allowing access to an electronic mailbox from a remote device to retrieve email is described with reference to the flowchart in . The method includes (block ) receiving email address parameters of the user and (block ) transmitting a domain name system (DNS) query to the Internet for returning mail exchange (MX) records, including email domain names, corresponding to the email address parameters of the user. At block , the method includes processing returned MX records to prioritize email domain names, and at block , determining candidate configuration parameters based upon expanding a plurality of prioritized email domain names of the returned MX records. As discussed above, the prioritized email domain names may include multiple parts respectively defining at least a user ID, email protocol and email server name pattern, and determining candidate configuration parameters may include expanding the multiple parts of the plurality of prioritized email domain names of the returned MX records. The method also may include, (Block ) attempting to access the email account of the user based upon the determined candidate configuration parameters.","Another example embodiment is directed to a computer program product including a non-transitory computer-readable medium having a computer-readable program code embedded therein, and configured to be executed to implement provisioning an electronic mail (email) account of a user for allowing access to an electronic mailbox from a remote device to retrieve email, as set forth in the disclosed method(s).","The described approaches are intended to make the integration method from the \u201cSimple Integration\u201d screen as effective as possible and therefore to help minimize the number of times a user is presented with the \u201cAdvanced Integration\u201d screen. The advanced screen requests information from the user such as the name of the mail server, which most users won't know. This screen is almost certainly responsible for many calls to carriers' help desks. In addition to, or possibly in place of, the current set of \u201craw guesses\u201d (mail domain-based Guess table rows), the approach may configure additional \u201cguesses\u201d (MX record-based Guess table rows) using the mail domains returned in the MX record set and attempt to achieve integration.","When the mobile office platform issues the raw guesses (mail domainbased Guess table row), the approach may also use the server domain(s) (e.g. first and second prioritized) of the MX record returned for the mail domain of the user's email address (MX recordbased Guess table row). The main use case is to allow dynamic detection of hosted domains, i.e. where the mail server is NOT a derivative of the mail domain in the user's email address. An example: user@primomoda.com hosts mail at 1and1 so the mail server name is imap.1and1.com, however when using only a raw guessing mechanism the mobile office platform may only guess mail servers that are derivatives of the mail domain in the email address like the following examples: pop.primomoda.com, imap.primomoda.com, mail.primomoda.com.","Current approaches may not ever try imap.1and1.com, however since the MX record for primomoda.com returns as mx00.1and1.com the present approach would be able to \u201cguess\u201d the mail server if it used the server domain from the MX record lookup.","To determine a set of patterns that will be used to attempt integration for each MX record mail server, there may be a variety of possible patterns which can be used to attempt to connect to a mail server and to validate the user's credentials. These patterns include various combinations of the user identifier (e.g., user ID in front of the \u201c@\u201d sign vs. the entire address), the protocol (e.g., POP, NAP), server pattern (e.g., mail pop.maildom), use or not of SSL, port, etc.","It may also be useful to determine what level of the MX record mail server domain will yield the greatest chance of achieving integration. Mail domain names are expressed as hierarchical domain levels separated by periods, with the top level on the right side and increasing levels of granularity moving left: e.g., mx1.comcast.com, smtp.embarq.synacor.com. It is possible to attempt integration at any level greater than the first level\u2014i.e., comcast.com or mail.comcast.com, but not just .com. Not all levels will result in connection with the mail server. In order to create a reusable pattern, it may be determined at what level integration should be attempted for the majority of situations.","It may be useful to create the ability to capture first and second (if present) preference mail servers from MX record lookup, and to determine which mail domain(s) to use in case of multiple possibilities. Multiple MX records are often returned in a DNS look-up, and there may be more than one MX record with the same preference score: e.g., mx1.comcast.net and mx2.comcast.net, both with preference number of 5. The approach may determine whether to use mx1, mx2 or both.","It may also be useful to implement the use of the MX record mail server domains as part of the mailbox integration method guessing logic. This may include creating any code, variables, additional database tokens, etc. necessary to implement this example embodiment. Furthermore, the approach may implement logging of successful integrations, i.e. to be able to determine what worked or why integration failed.","An effect of the above described approaches may be to enlarge the number of possible guesses by including mail server domains from the MX record of the user's email address (i.e., add MX record-based rows to the Guess table). By adding MX record-based guesses to the mail domain-based guesses, the mobile office platform will achieve more successful integrations from the simple integration screen and less presentations of the advanced integration screen.","An example of a mobile wireless communications device  that may be used in example embodiments disclosed herein (e.g. as the mobile wireless communications devices  of ) is further described in the example below with reference to . The device  illustratively includes a housing , a keypad  and an output device . The output device shown is a display , which is preferably a full graphic LCD. Other types of output devices may alternatively be utilized. A processor  is contained within the housing  and is coupled between the keypad  and the display . The processor  controls the operation of the display , as well as the overall operation of the mobile device , in response to actuation of keys on the keypad  by the user.","The housing  may be elongated vertically, or may take on other sizes and shapes (including clamshell housing structures). The keypad may include a mode selection key, or other hardware or software for switching between text entry and telephony entry.","In addition to the processor , other parts of the mobile device  are shown schematically in . These include a communications subsystem ; a short-range communications subsystem ; the keypad  and the display , along with other input\/output devices , ,  and ; as well as memory devices ,  and various other device subsystems . The mobile device  is preferably a two-way RF communications device having voice and data communications capabilities. In addition, the mobile device  preferably has the capability to communicate with other computer systems via the Internet.","Operating system software executed by the processor  is preferably stored in a persistent store, such as the flash memory , but may be stored in other types of memory devices, such as a read only memory (ROM) or similar storage element. In addition, system software, specific device applications, or parts thereof, may be temporarily loaded into a volatile store, such as the random access memory (RAM) . Communications signals received by the mobile device may also be stored in the RAM .","The processor , in addition to its operating system functions, enables execution of software applications A-N on the device . A predetermined set of applications that control basic device operations, such as data and voice communications A and B, may be installed on the device  during manufacture. In addition, a personal information manager (PIM) application may be installed during manufacture. The PIM is preferably capable of organizing and managing data items, such as e-mail, calendar events, voice mails, appointments, and task items. The PIM application is also preferably capable of sending and receiving data items via a wireless network . Preferably, the PIM data items are seamlessly integrated, synchronized and updated via the wireless network  with the device user's corresponding data items stored or associated with a host computer system.","Communication functions, including data and voice communications, are performed through the communications subsystem , and possibly through the short-range communications subsystem. The communications subsystem  includes a receiver , a transmitter , and one or more antennas  and . In addition, the communications subsystem  also includes a processing module, such as a digital signal processor (DSP) , and local oscillators (LOs) . The specific design and implementation of the communications subsystem  is dependent upon the communications network in which the mobile device  is intended to operate. For example, a mobile device  may include a communications subsystem  designed to operate with the Mobitex\u2122, Data TAC\u2122 or General Packet Radio Service (GPRS) mobile data communications networks, and also designed to operate with any of a variety of voice communications networks, such as AMPS, TDMA, CDMA, PCS, GSM, etc. Other types of data and voice networks, both separate and integrated, may also be utilized with the mobile device .","Network access requirements vary depending upon the type of communication system. For example, in the Mobitex and DataTAC networks, mobile devices are registered on the network using a unique personal identification number or PIN associated with each device. In GPRS networks, however, network access is associated with a subscriber or user of a device. A GPRS device therefore requires a subscriber identity module, commonly referred to as a SIM card, in order to operate on a GPRS network.","When required network registration or activation procedures have been completed, the mobile device  may send and receive communications signals over the communication network . Signals received from the communications network  by the antenna  are routed to the receiver , which provides for signal amplification, frequency down conversion, filtering, channel selection, etc., and may also provide analog to digital conversion. Analog-to-digital conversion of the received signal allows the DSP  to perform more complex communications functions, such as demodulation and decoding. In a similar manner, signals to be transmitted to the network  are processed (e.g. modulated and encoded) by the DSP  and are then provided to the transmitter  for digital to analog conversion, frequency up conversion, filtering, amplification and transmission to the communication network  (or networks) via the antenna .","In addition to processing communications signals, the DSP  provides for control of the receiver  and the transmitter . For example, gains applied to communications signals in the receiver  and transmitter  may be adaptively controlled through automatic gain control algorithms implemented in the DSP .","In a data communications mode, a received signal, such as a text message or web page download, is processed by the communications subsystem  and is input to the processor . The received signal is then further processed by the processor  for an output to the display , or alternatively to some other auxiliary I\/O device . A device user may also compose data items, such as e-mail messages, using the keypad  and\/or some other auxiliary I\/O device , such as a touchpad, a rocker switch, a thumb-wheel, or some other type of input device. The composed data items may then be transmitted over the communications network  via the communications subsystem .","In a voice communications mode, overall operation of the device is substantially similar to the data communications mode, except that received signals are output to a speaker , and signals for transmission are generated by a microphone . Alternative voice or audio I\/O subsystems, such as a voice message recording subsystem, may also be implemented on the device . In addition, the display  may also be utilized in voice communications mode, for example to display the identity of a calling party, the duration of a voice call, or other voice call related information.","The short-range communications subsystem enables communication between the mobile device  and other proximate systems or devices, which need not necessarily be similar devices. For example, the short-range communications subsystem may include an infrared device and associated circuits and components, or a Bluetooth\u2122 communications module to provide for communication with similarly-enabled systems and devices.","Many modifications and other example embodiments of the present disclosure will come to the mind of one skilled in the art having the benefit of the teachings presented in the foregoing descriptions and the associated drawings. Therefore, it is understood that the invention is not to be limited to the specific example embodiments disclosed, and that modifications and example embodiments are intended to be included within the scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Other features of the present disclosure will become apparent from the detailed description which follows, when considered in light of the accompanying drawings in which:",{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 12","FIG. 1"]}]},"DETDESC":[{},{}]}
