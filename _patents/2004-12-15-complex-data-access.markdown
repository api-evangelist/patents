---
title: Complex data access
abstract: Methods, systems, and computer-readable media implementing various aspects of complex data in a conceptual table are disclosed which enable complex data in the form of tables to be added to a conceptual table. The complex data can map to scalar values in a plurality of data tables. Complex data may be entered via data modeling methods, accessed via cursoring methods, and queried via query expansion methods.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07890532&OS=07890532&RS=07890532
owner: Microsoft Corporation
number: 07890532
owner_city: Redmond
owner_country: US
publication_date: 20041215
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The present invention relates generally to the field of software applications. More particularly, the present invention relates to software applications that store data and report data, such as databases. More particularly still, aspects of the present invention relate to storing and querying data in such software applications.","In order to manage large quantities of data, computer software applications, such as spreadsheet and database applications, have been developed to organize and store the data in a logical manner. Typical spreadsheet and database applications comprise a large number of records of information, wherein each record comprises a predetermined number of fields. In the context of a database, a database management system is typically used to provide the software tools to manipulate the database more simply. Example database management systems include Microsoft\u00ae Access and Microsoft\u00ae SQL Server, among others. Databases generally allow users to establish complex data interrelationships that are not available in spreadsheets, which increases their power while also making database applications even more difficult for new users to master.","A typical database management system provides the user the ability to add, modify or delete data, query data using filters, and the ability to report records in the database. Data in databases is typically represented using rows and columns. A field is an intersection of a row and a column. In general, any given field may only contain a single, scalar data value. Data queries typically take the form of a query language, such as Structured Query Language (SQL). Such queries may be performed on locally held data, or submitted to a database server for execution.","In some cases, a database may contain a hierarchy of data rather than a flat table of values. For example, in an issue tracking application, each issue may be assigned to one or more people. A user must therefore model this type of hierarchy using multiple linked tables, and query such tables using relatively complex queries that join data from multiple tables. More specifically, there might be one table of issues, and another table of people containing all the possible people who could have an issue assigned to them, and finally, a junction table where issues are assigned to people. Setting up such a hierarchy of tables can be both cumbersome and confusing to a user, especially a user new to database applications. Querying across such a hierarchy can be similarly problematic due the complex nature of multi-table queries, especially if a user lacks in-depth knowledge of the query language.","It is with respect to these considerations and others that the present invention has been made.","In accordance with the present invention, a computer-implemented method and computer-readable medium are provided for adding complex data to a conceptual table. A conceptual table is a table that contains at least one complex data type. A complex data type is one or more scalar columns and\/or other complex types that are \u201cgrouped\u201d together to form a single, new data type. First, a signal is received to add a complex data type to a table. One or more data tables are created. Additionally, links to the one or more data tables are created in the conceptual table.","In accordance with other aspects, the present invention relates to a computer-implemented method and computer-readable medium for modeling data in a conceptual table. First, a signal to store one or more data values is received. The structure of the conceptual table is analyzed, and one or more mappings to one or more data tables are determined. Finally, data is stored in the one or more data tables.","In accordance with yet other aspects, the present invention relates to a computer-implemented method and computer-readable medium for the expansion of a query of a conceptual table. First, a query of a conceptual table is received. Next, the structure of the conceptual table is analyzed, and one or more expansion rules are applied to the query. Finally, the expanded query is issued.","In accordance with still other aspects, the present invention relates to a computer-implemented method and computer-readable medium for cursoring in a conceptual table. First, a signal to access complex data in the conceptual table is received. One or more mappings associated with the complex data are read. Finally, scalar data from one or more data tables is read using the mappings.","In accordance with additional, other aspects, the present invention relates to a system for conceptual table modeling. A data modeling module adds complex data to the table, and stores complex data to one or more data tables. A query expansion module expands conceptual table queries to include one or more data table queries. A cursoring module retrieves complex data in a conceptual table.","The invention may be implemented as a computer process, a computing system or as an article of manufacture such as a computer program product or computer readable media. The computer readable media may be a computer storage media readable by a computer system and encoding a computer program of instructions for executing a computer process. The computer program readable media may also be a propagated signal on a carrier readable by a computing system and encoding a computer program of instructions for executing a computer process.","These and various other features as well as advantages, which characterize the present invention, will be apparent from a reading of the following detailed description and a review of the associated drawings.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1","b":["102","102","104","106","108","102"]},"Given that the present invention may be implemented as a computer system,  is provided to illustrate an example of a suitable computing system environment on which embodiments of the invention may be implemented. In its most basic configuration, system  includes at least one processing unit  and memory . Depending on the exact configuration and type of computing device, memory  may be volatile (such as RAM), non-volatile (such as ROM, flash memory, etc.) or some combination of the two. This most basic configuration is illustrated in  by dashed line .","In addition to the memory , the system may include at least one other form of computer-readable media. Computer-readable media can be any available media that can be accessed by the system . By way of example, and not limitation, computer-readable media might comprise computer storage media and communication media.","Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Memory , removable storage , and non-removable storage  are all examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EPROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can accessed by system . Any such computer storage media may be part of system .","System  may also contain a communications connection(s)  that allow the system to communicate with other devices. The communications connection(s)  is an example of communication media. Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media.","In accordance with an embodiment, the system  includes peripheral devices, such as input device(s)  and\/or output device(s) . Exemplary input devices  include, without limitation, keyboards, computer mice, pens, or styluses, voice input devices, tactile input devices and the like. Exemplary output device(s)  include, without limitation, devices such as displays, speakers, and printers. For the purposes of this invention, the display is a primary output device. Each of these devices is well know in the art and, therefore, not described in detail herein.","With the computing environment in mind, the following figures are described with reference to logical operations being performed to implement processes embodying various embodiments of the present invention. These logical operations are implemented (1) as a sequence of computer implemented steps or program modules running on a computing system and\/or (2) as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance requirements of the computing system implementing the invention. Accordingly, the logical operations making up the embodiments of the present invention described herein are referred to variously as operations, structural devices, acts or modules. It will be recognized by one skilled in the art that these operations, structural devices, acts and modules may be implemented in software, in firmware, in special purpose digital logic, and any combination thereof without deviating from the spirit and scope of the present invention as recited within the claims attached hereto.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 3","b":["304","306","308","302","304","306","308","302"]},"User interface  passes table hierarchy parameters to data modeling module , and may, additionally, receive feedback from data modeling module  to aid a user with further table definition or modification. User interface module  passes queries supplied by a user to query expansion module , and likewise receives query results from query expansion module . User interface module  passes requests from a user for data to cursoring module  for data retrieval, and likewise receives retrieved data from cursoring module .","In one embodiment, user interface module  directly renders data returned from one or more of modules ,  and  on a display. In an alternate embodiment, user interface module  uses Application Programming Interfaces (APIs) to update a display.","Data modeling module  allows creation and modification of a conceptual table. A conceptual table is a data table which may contain complex (non-scalar) data in the form of another table, as well as complex data. A data table typically includes only scalar data, and may include numbers, alphanumeric strings, fractions, and the like. Complex data may include one or more nested tables, which may themselves include additional levels of nested tables. A conceptual table can contain arbitrarily many such hierarchically related tables. A given field in a conceptual table may therefore be physically mapped to a field in another table altogether. Further, this physical mapping and its consequences may be entirely transparent to a user. Data modeling module  may receive parameters specified by a user for a conceptual table from user interface .","In one embodiment, a conceptual table is stored as one or more data tables containing scalar data. Scalar data values that exist only in the conceptual table are stored in a data table specifically allocated for non-mapped scalar values. One or more data values that physically map to a data table are \u201cshredded\u201d by data modeling module  such that those data values are physically stored in that data table . As a result, the user need only deal with a single conceptual table, while the complexities of translating the conceptual table to multiple hierarchical tables for storage are transparent to the user. Likewise, the implementation of shredding does not necessarily involve any added complexity in the database storage engine or database query processor.","In an embodiment, data values in a conceptual table are shredded to the appropriate data tables when a complex column is added to a table. In an alternative embodiment, data values in a conceptual table are shredded to the appropriate data tables when a save command is received from a user. In yet another embodiment, data values in a conceptual table are shredded to the appropriate data tables whenever a value change is detected.","Query expansion module  receives a conceptual table query from user interface module  and expands the query based on the hierarchical structure of the conceptual table. In one embodiment, query expansion module  expands a query based on the hierarchical structure of the conceptual table, using a set of rules defined by a developer. An exemplary set of query expansion rules is set forth below in Tables 1-11.","In an alternate embodiment, query expansion module  expands a query by joining (a term of art in the database field, analogous to combining) a subset of relevant data tables together into a single data table, and then executes the conceptual table query on that single data table. In another alternate embodiment, query expansion module  expands a query by joining all data tables  linked by a conceptual table, regardless of relevance, into a single data table, and then executes the conceptual table query on that single data table.","In an embodiment, query expansion module  performs queries directly on data tables . In an alternate embodiment, query expansion module  submits the expanded query to a database server for execution. Such an embodiment does not necessarily require any changes to the query processor or database server.","Cursoring module  enables reading and navigation of a conceptual table. When a signal is received via user interface  to open a conceptual table, cursoring module  analyzes any mappings to data tables that exist. Scalar data values from those data tables are retrieved using the mappings, and the scalar data values are returned to user interface  for display.","If a user selects a conceptual table field containing a data table, the table mapping in the field is referenced. A snapshot of the mapped-to data tables is taken, and the results are displayed in the conceptual table. In one embodiment, the mapped-to data tables are also locked for editing so that their contents cannot change. In an alternate embodiment, the mapped-to data tables are not locked, and instead, the mapped-to data tables are periodically checked for updates to be propagated to the displayed conceptual table.","One skilled in the art will recognize that while the exemplary embodiments presented in conjunction with  involve a conceptual table that may include data tables, arbitrarily many levels of indirection may be used without departing from the scope of the claimed invention. For example, a conceptual table may include one or more conceptual tables, which may themselves include still other conceptual tables. In this situation, care must be taken to prevent an infinite loop, namely a conceptual table referring (either directly or indirectly) to itself, thus creating an infinite number of levels of indirection.","In an embodiment, data modeling module  may perform data stores atomically. This means that in any given data store attempt, either all or none of the data tables are updated. As such, reading data while the data tables are in a transitional state may be avoided. Atomic data table writes may be performed via semaphore, file locking, or other method known to those skilled in the art, and may additionally incorporate rollback (undoing one or more pending writes).",{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 4","b":["402","404"]},"Creation operation  creates at least one data table to contain any scalar values associated with the complex data. Data entered into the complex data field will be shredded into the corresponding data table when the conceptual table is stored. In one embodiment, each created data table takes the form of one or more database files. In another embodiment, each created data table takes the form of a data structure within one or more database files. In yet another embodiment, creation operation  additionally initializes one or more scalar values to a default value within each created data table. In one embodiment where a suitable data table already exists, create operation  may be omitted and the data table may simply be linked to.","Following create operation , link operation  adds one or more links to the conceptual table, corresponding to the one or more data tables created by creation operation . A link may be used to locate a data table when a complex data field is selected via cursoring (described above, in conjunction with , and below, in conjunction with ). A link may also be used to locate a data table when a scalar value within a complex data field is added or modified (described above, in conjunction with ).","Determine operation  determines whether additional tables are required to accommodate the complex data. If more tables are needed, flow branches YES back to create operation . If no more tables are needed, flow branches NO to end of flow .","Once end of flow  has been reached, complex data may be viewed or manipulated using cursoring (discussed above in conjunction with , and below in conjunction with ), and stored via shredding (discussed above in conjunction with , and below in conjunction with ).","In an embodiment, an existing data table may be inserted into a conceptual table. In such an embodiment, a verification operation (not pictured) would verify the existence of the data table, and creation operation  would be omitted.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":"FIG. 5"},"Receive operation  receives a signal to store one or more complex data values associated with a conceptual table. The signal may be the result of a user explicitly saving data within a database management application. Alternatively, the signal may be received from an automated process that synchronizes modified data. Receipt of a signal by receive operation  triggers analyze operation .","Analyze operation  analyzes the conceptual table through which the complex data values are stored, and determines the structure of the conceptual table. Based on this structural data, determine operation  determines one or more mappings to locations in data tables. These mappings may be in the form of a set of data table coordinates, a pointer to a memory location containing a data table, a data table file name, unique record identification number, or other means by which data may be addressed, or any combination thereof.","Store operation  stores one or more data values from the conceptual table into the data value's respective data table using these mappings, at which time the conceptual table data has been successfully shredded. The data may later be \u201cunshredded\u201d via cursoring (described above, in conjunction with  and below, in conjunction with ). In an embodiment, store operation  performs data stores atomically. In another embodiment, store operation  can roll back incomplete stores.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 6","b":"602"},"Analyze operation  analyzes the conceptual table through which the complex data is to be queried, and determines the structure of the conceptual table along with any associated mappings to data tables. These mappings may take on any of several different forms (as discussed previously in conjunction with ).","Determine operation  uses the structural data and mappings from analyze operation , in conjunction with a set of expansion rules, to determine if any rules are appropriate for the query and whether those rules call for an expansion. If no rules are appropriate for the query, or if an applicable rule dictates that the expansion is complete, flow branches NO to issue operation . If one or more rules are appropriate for the query, flow branches YES to apply operation .","If one or more expansion rules are appropriate to apply to a query, apply operation  expands the query according to those rules. In one embodiment, apply operation may create a new query as part of expanding the query. Some exemplary expansion rules are set forth below in Tables 1-11, including expanding using such SQL terms as JOIN to combine data tables together before evaluating data. One skilled in the art will appreciate that determine operation  and apply operation  may take place repeatedly before a query is fully expanded and thus ready to be issued by issue operation . More than one rule can be applied in a variety of orders, and a single rule may be applied more than once in the expansion of a query. In an embodiment implementing incremental expansion of a query, query expansion rules may be kept orthogonal to each other, and thus kept relatively simple. In an embodiment performing incremental expansion of a query, a data structure may be necessary to store intermediate results of incremental expansion rule application. In an alternative embodiment, a plurality of query expansion rules may be applied by apply operation .","Issue operation  issues a query expanded by determine and apply operations  and . In an embodiment, issue operation  queries database data directly. In an alternative embodiment, issue operation  sends the query to a database server.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 7","b":"702"},"Read operation  reads one or more mappings to locations in data tables that are associated with the conceptual table. As discussed previously, these mappings may take a variety of forms. Retrieve operation  then retrieves scalar data values from the data tables indicated by the mappings. The scalar values retrieved by retrieve operation  are used to populate a conceptual table, which is displayed by display operation .","Display operation  displays the conceptual table containing the scalar values retrieved by retrieve operation . Display operation  may directly render the conceptual table on the screen in one embodiment, may rely on Application Programming Interfaces (APIs) to perform rendering in another embodiment, or may use other methods for displaying data known to those skilled in the art in still other envisioned embodiments.","One skilled in the art will appreciate that the embodiments claimed herein may be used not only in the context of database and spreadsheet applications which use complex data types, but also in the context of collaborative service suites such as Microsoft\u00aeV Sharepoint. Such suites may incorporate their own complex data types containing multiple values (e.g., multiple choices, attached files, etc). These complex data types may be handled substantially the same as in the exemplary embodiments discussed herein.","In one particular embodiment, a set of SQL query expansion rules is used by query expansion module  (), and by determine operation  and apply operation  (). An exemplary set of several SQL query expansion rules is presented in Tables 1-11. These rules deal with situations of varying complexity. In an example (Table 1), a relatively simple SELECT query is expanded. A simple SELECT query is defined as a query that has no grouping or aggregates. When there are no restrictions on complex scalar fields, only the parent table needs to be referenced in the expanded query. When there is a restriction on a complex scalar in the WHERE clause of a query, a join between a table and complex data type must be performed (see Table 1 for a basic example). Filters in the WHERE clause must be modified as necessary to reference a complex data type instead of a complex column in a table. Fields in SELECT clauses must be similarly modified using proper table references. When a non-left join on a complex scalar must be performed between a table and another table, the expanded query will include a subquery to join the parent table and its complex table (see Table 4 for a basic example). If a NOT appears in the WHERE clause of an unexpanded query, the NOT will be translated into [Table].[Complex Column] NOT IN (SELECT [Complex Column] FROM [Table]JOIN [Flat Table] ON [Table].[Complex Column]=[Flat Table].[Foreign Key] WHERE [Flat Table].[Complex Scalar]=value).","Tables 4-11 illustrate expansion rules for queries with aggregates. One such rule is that aggregates of complex types are executed against a LEFT JOIN of the table and complex data type. Another such rule is that when there are aggregates of different complex types in the unexpanded query, each aggregate will be computed using a subquery. Also, occurrences of the HAVING clause (Table 10) will be converted to a WHERE clause in an outer query. If a HAVING clause references a complex type that is not otherwise referenced in an aggregate SELECT list, a new subquery may be created to join the table and the complex type.",{"@attributes":{"id":"p-0062","num":"0061"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Filter on a Complex Scalar"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["User-written Query","SELECT IssueName"]},{"entry":[{},"FROM Issues"]},{"entry":[{},"WHERE AssignedTo.PersonID = 1"]},{"entry":["Expanded Query","SELECT DISTINCTROW Issues.IssueName"]},{"entry":[{},"FROM Issues LEFT OUTER JOIN f_AssignedTo"]},{"entry":[{},"ON Issues.AssignedToID = f_AssignedTo."]},{"entry":[{},"AssignedToID"]},{"entry":[{},"WHERE f_AssignedTo.PersonID = 1"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0063","num":"0062"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Filter on multiple Complex Scalars"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["User-written Query","SELECT IssueName"]},{"entry":[{},"FROM Issues"]},{"entry":[{},"WHERE AssignedTo.PersonID = 1 OR"]},{"entry":[{},"ResolvedBy.PersonID = 2"]},{"entry":["Expanded Query","SELECT DISTINCTROW Issues.IssueName"]},{"entry":[{},"FROM (Issues LEFT OUTER JOIN f_AssignedTo"]},{"entry":[{},"ON Issues.AssignedToID = f_AssignedTo."]},{"entry":[{},"AssignedToID)"]},{"entry":[{},"LEFT OUTER JOIN f_ResolvedBy ON"]},{"entry":[{},"Issues.ResolvedByID = f_ResolvedBy."]},{"entry":[{},"ResolvedByID"]},{"entry":[{},"WHERE f_AssignedTo.PersonID = 1 OR"]},{"entry":[{},"f_ResolvedByID = 2"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0064","num":"0063"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 3"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Subqueries when joining on a Complex Scalar"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"63pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["User-Written Query","SELECT Issues.IssueName, X.PersonName"]},{"entry":[{},"FROM Issues INNER JOIN Persons X ON"]},{"entry":[{},"Issues.AssignedToID = X.PersonID"]},{"entry":[{},"WHERE AssignedTo.PersonID = 1"]},{"entry":["Expanded Query","SELECT DISTINCTROW Y.IssueName,"]},{"entry":[{},"X.PersonName"]},{"entry":[{},"FROM (SELECT Issues.IssueName,"]},{"entry":[{},"f_AssignedTo.PersonID FROM Issues LEFT"]},{"entry":[{},"OUTER JOIN f_AssignedTo ON Issues."]},{"entry":[{},"AssignedToID ="]},{"entry":[{},"f_AssignedTo.AssignedToID) AS Y INNER JOIN"]},{"entry":[{},"Persons X ON X.PersonID = Y.PersonID"]},{"entry":[{},"WHERE Y.PersonID = 1"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0065","num":"0064"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 4"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Aggregate on a Complex Type"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["User-Written Query","SELECT IssueName, COUNT(AssignedTo)"]},{"entry":[{},"FROM Issues"]},{"entry":[{},"GROUP BY IssueName"]},{"entry":["Expanded Query","SELECT Issues.IssueName,"]},{"entry":[{},"COUNT(f_AssignedTo.PersonID) AS"]},{"entry":[{},"CountOfPersonID FROM Issues LEFT OUTER"]},{"entry":[{},"JOIN f_AssignedTo ON"]},{"entry":[{},"Issues.AssignedTo=f_AssignedTo.AssignedTo"]},{"entry":[{},"GROUP BY Issues.IssueName"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0066","num":"0065"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 5"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Aggregate on a Complex Type with a Restriction on the same"},{"entry":"Complex Scalar"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["User-Written Query","SELECT IssueName, COUNT(AssignedTo)"]},{"entry":[{},"FROM Issues"]},{"entry":[{},"WHERE AssignedTo.PersonID =3"]},{"entry":[{},"GROUP BY IssueName"]},{"entry":["Expanded Query","SELECT x.IssueName,"]},{"entry":[{},"COUNT(f_AssignedTo.PersonID) AS"]},{"entry":[{},"CountOfPersonID"]},{"entry":[{},"FROM"]},{"entry":[{},"(SELECT DISTINCTROW Issues.IssueName,"]},{"entry":[{},"Issues.AssignedTo"]},{"entry":[{},"FROM Issues LEFT JOIN f_AssignedTo ON"]},{"entry":[{},"Issues.AssignedTo=f_AssignedTo.AssignedTo"]},{"entry":[{},"WHERE f_AssignedTo.PersonID = 3) AS X"]},{"entry":[{},"INNER JOIN f_AssignedTo ON x.AssignedTo ="]},{"entry":[{},"f_AssignedTo.AssignedTo"]},{"entry":[{},"GROUP BY Issues.IssueName"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0067","num":"0066"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 6"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Aggregate on a Complex Type with a Restriction on a different"},{"entry":"Complex Scalar"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["User-Written","SELECT IssueName, COUNT(AssignedTo)"]},{"entry":["Query","FROM Issues"]},{"entry":[{},"WHERE ResolvedBy.PersonID = 3"]},{"entry":["Expanded","SELECT x.IssueName,"]},{"entry":["Query","COUNT(f_AssignedTo.PersonID) AS CountOfPersonID"]},{"entry":[{},"FROM"]},{"entry":[{},"(SELECT DISTINCTROW Issues.IssueName,"]},{"entry":[{},"Issues.AssignedTo, Issues.ResolvedBy"]},{"entry":[{},"FROM Issues LEFT JOIN f_ResolvedBy ON"]},{"entry":[{},"Issues.ResolvedBy=f_ResolvedBy.ResolvedBy"]},{"entry":[{},"WHERE f_ResolvedBy.PersonID = 3) AS X"]},{"entry":[{},"INNER JOIN f_AssignedTo ON x.AssignedTo ="]},{"entry":[{},"f_AssignedTo.AssignedTo"]},{"entry":[{},"GROUP BY Issues.IssueName"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0068","num":"0067"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 7"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Aggregate Complex Type 1 with a Restriction on Complex"},{"entry":"Scalar 1 and Complex Scalar 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["User-Written","SELECT IssueName, COUNT(AssignedTo)"]},{"entry":["Query","FROM Issues"]},{"entry":[{},"WHERE AssignedTo.PersonID = 2"]},{"entry":[{},"OR ResolvedBy.PersonID = 3"]},{"entry":["Expanded","SELECT x.IssueName,"]},{"entry":["Query","COUNT(f_AssignedTo.PersonID) AS CountOfPersonID"]},{"entry":[{},"FROM"]},{"entry":[{},"(SELECT DISTINCTROW Issues.IssueName,"]},{"entry":[{},"Issues.AssignedTo, Issues.ResolvedBy"]},{"entry":[{},"FROM (Issues LEFT JOIN f_AssignedTo ON"]},{"entry":[{},"Issues.AssignedTo = f_AssignedTo.AssignedTo) LEFT"]},{"entry":[{},"JOIN f_ResolvedBy ON"]},{"entry":[{},"Issues.ResolvedBy=f_ResolvedBy.ResolvedBy"]},{"entry":[{},"WHERE f_AssignedTo.PersonID = 2 OR"]},{"entry":[{},"f_ResolvedBy.PersonID = 3) AS X"]},{"entry":[{},"INNER JOIN f_AssignedTo ON x.AssignedTo ="]},{"entry":[{},"f_AssignedTo.AssignedTo"]},{"entry":[{},"GROUP BY Issues.IssueName"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0069","num":"0068"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 8"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Aggregates on Complex Type 1 and Complex Type 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["User-Written","SELECT IssueName, COUNT(AssignedTo),"]},{"entry":["Query","COUNT(ResolvedBy)"]},{"entry":[{},"FROM Issues"]},{"entry":[{},"GROUP BY IssueName"]},{"entry":["Expanded","SELECT [Count of AssignedTo Per Issue]. IssueName,"]},{"entry":["Query","[Count of AssignedTo Per Issue].CountOfATPersonID,"]},{"entry":[{},"[Count of ResolvedBy Per Issue].CountOfRBPersonID"]},{"entry":[{},"FROM"]},{"entry":[{},"(SELECT Issues.IssueName,"]},{"entry":[{},"COUNT(f_AssignedTo.PersonID) AS"]},{"entry":[{},"CountOfATPersonID"]},{"entry":[{},"FROM Issues LEFT JOIN f_AssignedTo ON"]},{"entry":[{},"Issues.AssignedTo=f_AssignedTo.AssignedTo"]},{"entry":[{},"GROUP BY Issues.IssueName) AS [Count of"]},{"entry":[{},"AssignedTo Per Issue]"]},{"entry":[{},"INNER JOIN"]},{"entry":[{},"(SELECT Issues.IssueName,"]},{"entry":[{},"Count(f_ResolvedBy.PersonID) AS"]},{"entry":[{},"CountOfRBPersonID"]},{"entry":[{},"FROM Issues LEFT JOIN f_ResolvedBy ON"]},{"entry":[{},"Issues.ResolvedBy=f_ResolvedBy.ResolvedBy"]},{"entry":[{},"GROUP BY Issues.IssueName) AS [Count of"]},{"entry":[{},"ResolvedBy Per Issue]"]},{"entry":[{},"ON [Count of AssignedTo Per Issue].IssueName ="]},{"entry":[{},"[Count of ResolvedBy Per Issue].IssueName"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0070","num":"0069"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 9"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Aggregates on Complex Type 1 and Complex Type 2 with"},{"entry":"Restrictions on Complex Scalar 1 and Complex Scalar 2"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"168pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["User-Written","SELECT IssueName, COUNT(AssignedTo),"]},{"entry":["Query","COUNT(ResolvedBy)"]},{"entry":[{},"FROM Issues"]},{"entry":[{},"GROUP BY IssueName"]},{"entry":[{},"WHERE (AssignedTo.PersonID = 1 AND"]},{"entry":[{},"ResolvedBy.PersonID = 3) OR (AssignedTo.PersonID ="]},{"entry":[{},"3 AND ResolvedBy.PersonID = 5)"]},{"entry":["Expanded","SELECT [Count of AssignedTo Per Issue].IssueName,"]},{"entry":["Query","[Count of AssignedTo Per Issue].CountOfATPersonID,"]},{"entry":[{},"[Count of ResolvedBy Per Issue].CountOfRBPersonID"]},{"entry":[{},"FROM"]},{"entry":[{},"(SELECT Issues.IssueName,"]},{"entry":[{},"COUNT(f_AssignedTo.PersonID) AS"]},{"entry":[{},"CountOfATPersonID FROM (SELECT"]},{"entry":[{},"DISTINCTROW Issues.IssueName, Issues.AssignedTo,"]},{"entry":[{},"Issues.ResolvedBy"]},{"entry":[{},"FROM (Issues LEFT OUTER JOIN f_AssignedTo ON"]},{"entry":[{},"Issues.AssignedTo = f_AssignedTo.AssignedTo) LEFT"]},{"entry":[{},"OUTER JOIN f_ResolvedBy ON Issues.ResolvedBy ="]},{"entry":[{},"f_ResolvedBy.ResolvedBy WHERE"]},{"entry":[{},"(f_AssignedTo.PersonID = 1 AND"]},{"entry":[{},"f_ResolvedBy.PersonID = 3) OR"]},{"entry":[{},"(f_AssignedTo.PersonID = 3 AND"]},{"entry":[{},"f_ResolvedBy.PersonID = 5)) AS X LEFT JOIN"]},{"entry":[{},"f_AssignedTo ON"]},{"entry":[{},"X.AssignedTo=f_AssignedTo.AssignedTo"]},{"entry":[{},"GROUP BY X.IssueName) AS [Count of AssignedTo"]},{"entry":[{},"Per Issue]"]},{"entry":[{},"INNER JOIN"]},{"entry":[{},"(SELECT Issues.IssueName,"]},{"entry":[{},"COUNT(f_ResolvedBy.PersonID) AS"]},{"entry":[{},"CountOfRBPersonID"]},{"entry":[{},"FROM (SELECT DISTINCTROW Issues.IssueName,"]},{"entry":[{},"Issues.AssignedTo, Issues.ResolvedBy"]},{"entry":[{},"FROM (Issues LEFT OUTER JOIN f_AssignedTo ON"]},{"entry":[{},"Issues.AssignedTo = f_AssignedTo.AssignedTo) LEFT"]},{"entry":[{},"OUTER JOIN f_ResolvedBy ON Issues.ResolvedBy ="]},{"entry":[{},"f_ResolvedBy.ResolvedBy WHERE"]},{"entry":[{},"(f_AssignedTo.PersonID = 1 AND"]},{"entry":[{},"f_ResolvedBy.PersonID = 3) OR"]},{"entry":[{},"(f_AssignedTo.PersonID = 3 AND"]},{"entry":[{},"f_ResolvedBy.PersonID = 5)) AS Y"]},{"entry":[{},"LEFT JOIN f_ResolvedBy ON"]},{"entry":[{},"Y.ResolvedBy=f_ResolvedBy.ResolvedBy"]},{"entry":[{},"GROUP BY Y.IssueName) AS [Count of ResolvedBy"]},{"entry":[{},"Per Issue] ON [Count of AssignedTo Per"]},{"entry":[{},"Issue].IssueName = [Count of ResolvedBy Per"]},{"entry":[{},"Issue].IssueName"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},{"@attributes":{"id":"p-0071","num":"0070"},"tables":{"@attributes":{"id":"TABLE-US-00010","num":"00010"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 10"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Complex Type in the HAVING Clause"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"154pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"User-Written","SELECT IssueName"]},{"entry":[{},"Query","FROM Issues"]},{"entry":[{},{},"GROUP BY IssueName"]},{"entry":[{},{},"HAVING COUNT(AssignedTo) = 4"]},{"entry":[{},"Expanded","SELECT Issues.IssueName"]},{"entry":[{},"Query","FROM Issues LEFT JOIN f_AssignedTo ON"]},{"entry":[{},{},"Issues.AssignedTo=f_AssignedTo.AssignedTo"]},{"entry":[{},{},"GROUP BY Issues.IssueName"]},{"entry":[{},{},"HAVING COUNT(f_AssignedTo.PersonID)=4"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}}},{"@attributes":{"id":"p-0072","num":"0071"},"tables":{"@attributes":{"id":"TABLE-US-00011","num":"00011"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"center"}},"thead":{"row":[{"entry":"TABLE 11"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"Example Aggregate on Complex Type 1 with"},{"entry":"Complex Type 2 in the HAVING Clause"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"161pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["User-Written","SELECT IssueName, COUNT(ResolvedBy)"]},{"entry":["Query","FROM Issues"]},{"entry":[{},"GROUP BY IssueName"]},{"entry":[{},"HAVING Count(AssignedTo) = 4"]},{"entry":["Expanded Query","SELECT [Count of ResolvedBy Per Issue].IssueName,"]},{"entry":[{},"[Count of ResolvedBy Per Issue].CountOfRBPersonID"]},{"entry":[{},"FROM"]},{"entry":[{},"(SELECT Issues.IssueName,"]},{"entry":[{},"Count(f_ResolvedBy.PersonID) AS"]},{"entry":[{},"CountOfRBPersonID"]},{"entry":[{},"FROM Issues LEFT JOIN f_ResolvedBy ON"]},{"entry":[{},"Issues.ResolvedBy=f_ResolvedBy.ResolvedBy"]},{"entry":[{},"GROUP BY Issues.IssueName) AS [Count of"]},{"entry":[{},"ResolvedBy Per Issue]"]},{"entry":[{},"INNER JOIN"]},{"entry":[{},"(SELECT Issues.IssueName,"]},{"entry":[{},"COUNT(f_AssignedTo.PersonID) AS"]},{"entry":[{},"CountOfATPersonID"]},{"entry":[{},"FROM Issues LEFT JOIN f_AssignedTo ON"]},{"entry":[{},"Issues.AssignedTo=f_AssignedTo.AssignedTo"]},{"entry":[{},"GROUP BY Issues.IssueName) AS [Count of"]},{"entry":[{},"AssignedTo Per Issue]"]},{"entry":[{},"ON [Count of AssignedTo Per Issue].IssueName ="]},{"entry":[{},"[Count of ResolvedBy Per Issue].IssueName"]},{"entry":[{},"WHERE [Count of AssignedTo Per"]},{"entry":[{},"Issue].CountOfATPersonID = 4"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}]}}},"The various embodiments described above are provided by way of illustration only and should not be construed to limit the invention. Those skilled in the art will readily recognize various modifications and changes that may be made to the present invention without following the example embodiments and applications illustrated and described herein, and without departing from the true spirit and scope of the present invention, which is set forth in the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
