---
title: Border property validation for named data networks
abstract: One embodiment provides a system for distributing packets within a trust domain. During operation, the system receives, by an ingress node in the trust domain, a message. The system creates a property vector for the message, where the property vector indicates a number of properties that have been determined for the message. The system generates a first authenticator for the message based on the property vector and a secret key shared by a plurality of nodes in the trust domain. The system transmits the message, the property vector, and the first authenticator to another node in the trust domain, thereby facilitating secure and efficient distribution of messages within the trust domain without requiring intermediate nodes to determine the properties indicated in the property vector.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09276922&OS=09276922&RS=09276922
owner: PALO ALTO RESEARCH CENTER INCORPORATED
number: 09276922
owner_city: Palo Alto
owner_country: US
publication_date: 20140521
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["1. Field","This disclosure is generally related to the distribution of digital content. More specifically, this disclosure is related to pre-calculating and verifying properties of a message in a named data network, and delegating the burden of this property validation to border routers within a trust domain.","2. Related Art","The proliferation of the Internet and e-commerce continues to fuel revolutionary changes in the network industry. Today, a significant number of information exchanges, from online movie viewing to daily news delivery, retail sales, and instant messaging, are conducted online. An increasing number of Internet applications are also becoming mobile. However, the current Internet operates on a largely location-based addressing scheme. The two most ubiquitous protocols, the Internet Protocol (IP) and Ethernet protocol, are both based on location-based addresses. That is, a consumer of content can only receive the content by explicitly requesting the content from an address (e.g., IP address or Ethernet media access control (MAC) address) closely associated with a physical object or location. This restrictive addressing scheme is becoming progressively inadequate for meeting the ever-changing network demands.","Recently, content centric network (CCN) and named data network (NDN) architectures have been proposed in the industry. CCN brings a new approach to content transport. Instead of having network traffic viewed at the application level as end-to-end conversations over which content travels, content is requested or returned based on its unique name, and the network is responsible for routing content from the provider to the consumer. Note that content includes data that can be transported in the communication system, including any form of data such as text, images, video, and\/or audio. A consumer and a provider can be a person at a computer or an automated process inside or outside the CCN. A piece of content can refer to the entire content or a respective portion of the content. For example, a newspaper article might be represented by multiple pieces of content embodied as data packets. A piece of content can be associated with meta-data describing or augmenting the piece of content with information such as authentication data, creation date, content owner, etc.","In a CCN or NDN, content objects and interests are identified by their names, which are typically hierarchically structured variable-length identifiers (HSVLI). Generally, interests and content objects travel through a number of links before they can reach their destination. In CCN, specialized hardware might be required to calculate and verify certain properties potentially at line rate. These operations include, but are not limited to, a hash of a content object, signature verification when an embedded key is present, a hash of an interest, and other properties that can communicate state information within a trust domain. While some routers (such as border routers) in a CCN trust domain are designed for these computationally expensive line rate calculations, other routers (such as backbone core routers) in the same domain could experience significant delay if required to calculate and verify these various properties.","One embodiment provides a system for distributing packets within a trust domain. During operation, the system receives, by an ingress node in the trust domain, a message. The system creates a property vector for the message, where the property vector indicates a number of properties that have been determined for the message. The system generates a first authenticator for the message based on the property vector and a secret key shared by a plurality of nodes in the trust domain. The system transmits the message, the property vector, and the first authenticator to another node in the trust domain, thereby facilitating secure and efficient distribution of messages within the trust domain without requiring intermediate nodes to determine the properties indicated in the property vector.","In some embodiments, the message is an interest in a piece of content, and the property vector includes a similarity hash value of the interest based on a name of the interest and one or more fields of the interest.","In some embodiments, the message is a content object, and the property vector includes one or more of: a hash value of the content object; a hash value of a public key associated with the content object; and an indication of whether a digital signature of a sender of the message has been verified.","In some embodiments, the property vector indicates one or more of: a scheduling priority of the message; information related to billing; information related to quality of service; information relating to auditing; and a path-switching label.","In some embodiments, the property vector comprises an egress policy of the message, which specifies operations to perform upon departure of the message from the trust domain.","In some embodiments, the system removes, by an egress node in the trust domain, the property vector associated with the message upon departure of the message from the trust domain.","In some embodiments, the system receives, by a node in the trust domain other than the ingress node, the message, the property vector, and the first authenticator for the message. The system generates a second authenticator for the message based on the shared secret key and the property vector. Responsive to determining that the first authenticator is the same as the second authenticator, the system authenticates the message.","In some embodiments, the system performs one or more of: modifying the property vector for the message; and creating an additional property vector for the message. The system generates a third authenticator for the message based on the shared secret key and one or more of the modified property vector and the additional property vector for the message. The system forwards the message, one or more of the modified property vector and the additional property vector, and the third authenticator to another node in the trust domain.","In the figures, like reference numerals refer to the same figure elements.","The following description is presented to enable any person skilled in the art to make and use the embodiments, and is provided in the context of a particular application and its requirements. Various modifications to the disclosed embodiments will be readily apparent to those skilled in the art, and the general principles defined herein may be applied to other embodiments and applications without departing from the spirit and scope of the present disclosure. Thus, the present invention is not limited to the embodiments shown, but is to be accorded the widest scope consistent with the principles and features disclosed herein.","Overview","Embodiments of the present invention provide a computer network environment for efficiently distributing packets within a trust domain by pre-calculating and verifying various properties upon ingress into the trust domain, and including a proof within the message such that intermediate routers in the trust domain do not need to repeat the validation procedures. The computer network environment can include a content-centric network (CCN) and a named-data network (NDN). In CCN and NDN, interests and content objects are identified by their names, which are typically hierarchically structured variable-length identifiers (HSVLI). Generally, interests and content objects travel through a number of links before they can reach their destination. The network devices that couple these links are referred to and used interchangeably herein as routers, devices, nodes, and routers or devices at a node.","Upon receiving a message, a border router at an ingress node within a trust domain performs property validation, which can include pre-calculation and verification of various properties, such as computationally expensive verification of the digital signature of the sender. Property validation for an interest can include: calculating a similarity hash value of the interest based on a name of the interest and one or more fields of the interest; and verifying a property related to the state of the message, including scheduling priorities, egress policies, billing, auditing, quality of service, and path switching labels. Property validation for a content object can include: verifying a digital signature of a sender of the message; calculating a hash value of the content object; calculating a hash value of a public key associated with the content object; and verifying properties related to the state of the message, as for the interest message described above.","The border router then creates a property vector for the message, which can be a single serialized vector such as a set of Type Length Value (TLV) fields. Each entry in the property vector represents a validated property. For example, one entry can include the hash value of the requested content object. Another exemplar entry can include a signature field with a Boolean value that indicates whether the digital signature of the sender has been verified. If a content object includes a public key in the object, the border router can calculate a hash value of the public key and determine whether the key matches a stated KeyId field. If there is no match, the border router can drop the packet. If there is a match, the border router can indicate the results in the signature field. If a content object includes a public key certificate, the border router can validate properties of the certificate, such as expiration and revocation.","The border router then generates an authenticator based on the property vector, using a secure mechanism such as a symmetric key signature. The authenticator can include the identity of the border router, the key being used, and replay prevention such as a sequence number. In some embodiments, the shared secret key is distributed to a number of intermediate nodes by a trusted central key distribution authority. In further embodiments, the nodes can use a peer-to-peer secret key exchange protocol to share a secret key. The authenticator authenticates the property vector for the message. In some embodiments, the authenticator is a hash of the property vector based on a secret cryptographic key (e.g., the shared secret key). The shared secret key can be included in the header of the packet, as in the Password Authentication Protocol (PAP). In some embodiments, the system can perform an Exclusive Or (XOR) operation on the property vector and the shared secret key. The system can also use the shared secret key in an XOR-based hash mechanism (e.g., shift-add-xor or Fowler\/Noll\/Vo (FNV)). However, for some validated properties such as the hash of the content object, which any observer may calculate, using an XOR approach may leak the shared secret key. Because many of the properties are either globally calculable or result in only a limited set of outcomes, mechanisms such as PAP or XOR could be less secure against eavesdroppers.","In some embodiments, the authenticator includes a summary of the message body, such as the digest of the message. This is to prevent an insider attack where the authenticator from one packet is put on a different packet, and its use depends on the trust model within the domain.","In some embodiments, the border router appends the authenticator to the property vector. The border router transmits the message, the property vector, and the authenticator to an intermediate router in the trust domain.","Upon receiving the message, the intermediate router authenticates the message by generating its own authenticator based on the property vector and the shared secret key. The intermediate router determines if its own generated authenticator is the same as the received one. If they are not the same, the intermediate router can drop the packet and send feedback to the sending node. If they are the same, the intermediate router forwards the message, property vector, and received authenticator to another node in the trust domain. Thus, the intermediate router need only authenticate the already created and signed property vector, which may be a fast hash operation, and does not need to perform any expensive calculations or verifications. This mechanism facilitates efficient and secure distribution of messages within the trust domain.","In some embodiments, if the intermediate router's own generated authenticator is the same as the received authenticator, the intermediate router can modify the property vector and\/or create an additional property for the message. The intermediate router then generates a third authenticator based on the modified property vector and the secret key, and transmits the message, the modified property vector, and the third authenticator to another node. For example, if the intermediate router experiences congestion, it can add an entry in the property vector that notes the congestion with an indication to back off. In another example, if the property vector includes a virtual local area network (VLAN) label and an indication that the label must be swapped at the intermediate router, then the intermediate router can modify the property vector accordingly for the respective entry.","Upon ingress to or egress from the trust domain, the system removes any existing pre-calculated properties or verification indicators. In some embodiments, the system removes the property vector upon egress from the trust domain. A property vector can contain an entry corresponding to an egress policy, which can be a statement in a policy language or a policy index known throughout the trust domain via a policy dissemination protocol. A border router at an egress node can perform the specified egress policy operations upon departure of the message from the trust domain. For example, in a virtual private network (VPN) or a VLAN, an inbound interest may only be satisfied by a content object on the same VPN or VLAN. This property can be accounted for by including a VPN or VLAN identifier in the property vector. The VPN or VLAN identifier is thus asserted by one device upon ingress and enforced by another device upon egress.","In some embodiments, an ingress device can determine, based on routing or other knowledge, that a specific message should follow a well-known switched path, such as in Multi-Protocol Label Switching (MPLS), where data packets are each assigned labels and packet-forwarding decisions are made solely based on the contents of the label, thus obviating the need to examine the packet itself. As with the VPN or VLAN identifier, this MPLS path identifier can be included in the signed property vector. Other examples of property vector entries include various properties discussed herein, such as information relating to scheduling priorities, billing, auditing, and quality of service.","The following terms describe elements of an NDN or CCN architecture:","Content Object:","A piece of named data, which is bound to a unique name. Content Objects are \u201cpersistent,\u201d which means that a Content Object can move around within a computing device, or across different computing devices, but does not change. If any component of the Content Object changes, the entity that made the change creates a new Content Object that includes the updated content, and binds the new Content Object to a new unique name.","Unique Names:","A name in a CCN is typically location independent and uniquely identifies a Content Object. A data-forwarding device can use the name or name prefix to forward a packet toward a network node that generates or stores the Content Object, regardless of a network address or physical location for the Content Object. In some embodiments, the name may be a hierarchically structured variable-length identifier (HSVLI). The HSVLI can be divided into several hierarchical components, which can be structured in various ways. For example, the individual name components parc, home, ndn, and test.txt can be structured in a left-oriented prefix-major fashion to form the name \u201c\/parc\/home\/ndn\/test.txt.\u201d Thus, the name \u201c\/parc\/home\/ndn\u201d can be a \u201cparent\u201d or \u201cprefix\u201d of \u201c\/parc\/home\/ndn\/test.txt.\u201d Additional components can be used to distinguish between different versions of the content item, such as a collaborative document.","In some embodiments, the name can include a non-hierarchical identifier, such as a hash value that is derived from the Content Object's data (e.g., a checksum value) and\/or from elements of the Content Object's name. A description of a hash-based name is described in U.S. patent application Ser. No. 13\/847,814 (entitled \u201cORDERED-ELEMENT NAMING FOR NAME-BASED PACKET FORWARDING,\u201d by inventor Ignacio Solis, filed 20 Mar. 2013), which is hereby incorporated by reference. A name can also be a flat label. Hereinafter, \u201cname\u201d is used to refer to any name for a piece of data in a name-data network, such as a hierarchical name or name prefix, a flat name, a fixed-length name, an arbitrary-length name, or a label (e.g., a Multiprotocol Label Switching (MPLS) label).","Interest:","A packet that indicates a request for a piece of data, and includes a name (or a name prefix) for the piece of data. A data consumer can disseminate a request or Interest across an information-centric network, which CCN\/NDN routers can propagate toward a storage device (e.g., a cache server) or a data producer that can provide the requested data to satisfy the request or Interest.","The methods disclosed herein are not limited to CCN networks and are applicable to other architectures as well. A description of a CCN architecture is described in U.S. patent application Ser. No. 12\/338,175 (entitled \u201cCONTROLLING THE SPREAD OF INTERESTS AND CONTENT IN A CONTENT CENTRIC NETWORK,\u201d by inventors Van L. Jacobson and Diana K. Smetters, filed 18 Dec. 2008), which is hereby incorporated by reference.","Exemplary Network and Communication",{"@attributes":{"id":"p-0049","num":"0048"},"figref":"FIG. 1","b":["100","102","104","106","108","110","112","114","100","102","114","102","114","102","120","122","124","114","100","130","132","134","102","114","104","112","100"]},"For example, a user of device  can generate an interest in a piece of content, which passes through node  in network . Border router  in network  receives the interest (hence acting as an ingress node), performs various validations (including verification of the digital signature of the sender and pre-calculation of message properties), creates a property vector indicating the validations, generates an authenticator based on a shared secret key, and transmits the message with the property vector and authenticator to node . Intermediate router  receives the message and in turn generates its own authenticator.","Intermediate router  then determines whether its own generated authenticator matches the received authenticator, and if so, transmits the message, property vector, and its authenticator to border router . Border router  authenticates the message in the same manner as intermediate router , executes any egress policies specified in the property vector, and removes the property vector from the message before forwarding the message out of the trust domain to network  (hence acting as an egress node).","Node  in network  receives the message and passes it to a content producer device , which contains the requested content and passes the content object back along the same reverse path as the interest (e.g., border router  to intermediate router  to border router ). As the data passes back through network , border router  performs the role of an ingress node, while border router  performs the role of an egress node. In this manner, content flows efficiently through the trust domain of network  without requiring an intermediate node to perform additional verifications or calculations.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":"FIG. 2A","b":["200","102","108","114","102","108","114","102","108","114","102","202","102","206"]},"Next, ingress node  generates an authenticator (denoted as AUTH) for the message based on the shared secret key and the property vector (operation ). In some embodiments, the authenticator is a hash based message authentication code (HMAC). Ingress node  then transmits the message, property vector, and AUTHto intermediate node  (operation ).","Intermediate node  receives the message, property vector, and AUTHand generates an authenticator (denoted as AUTH) for the message based on the shared secret key and the property vector (operation ). Intermediate node  then authenticates the message to determine whether AUTHis the same as AUTH(operation ). If they are not the same, intermediate node  can drop the packet and send feedback to the sending node. If they are the same, intermediate node  transmits the message, property vector, and AUTHto egress node  (operation ). Note that the authenticator transmitted in operation  can be either of AUTHor AUTH, as operation  only occurs upon determining that they are the same. Alternatively, if AUTHmatches AUTH, intermediate node  can perform the procedures , , , , , , and  as depicted in  and described below. Note that intermediate node  does not need to verify the digital signature or perform the same validations performed by ingress node .","Egress node  receives the message, property vector, and AUTH. Egress node generates an authenticator and authenticates the message (as described above for intermediate node ), and then executes any egress policies included in the property vector (operation ). The egress policy can include enforcing a specific VLAN or VPN identifier, or other policy index via a policy dissemination protocol. Egress node  removes the property vector from the message (operation ) and forwards the message out of the trust domain (operation ).",{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 2B","FIG. 2A"],"b":["250","102","108","114","202","204","206","208","210","212","214","108","214","216","218","108","108","220","114","222"],"sub":["2","1","3","3 "]},"Egress node  receives the message, the modified property vector, and AUTH. As discussed above in relation to , egress node  generates an authenticator, authenticates the message, and executes any egress policies included in the property vector (operation ). Egress node  removes the property vector from the message (operation ) and forwards the message out of the trust domain (operation ).","Ingress Node Operation",{"@attributes":{"id":"p-0059","num":"0058"},"figref":"FIG. 3","b":["300","302","306","308","310","312"]},"Intermediate Node Operation",{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 4A","FIG. 5","FIG. 4B"],"b":["400","402","404","408","410","408","412","408","412","414","408","412","414","416","416"]},{"@attributes":{"id":"p-0061","num":"0060"},"figref":["FIG. 4B","FIG. 4A"],"b":["450","408","420","422","424","426"]},"Egress Node Operation",{"@attributes":{"id":"p-0062","num":"0061"},"figref":["FIG. 5","FIG. 4A","FIG. 4A"],"b":["500","408","412","502","504","506","508","504","508","510"]},"Exemplary Format of Packets and Property Vectors",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 6A","FIG. 4B"],"b":["600","600","602","604","606","602","600","602","602","604","600","604","602","604","602"]},{"@attributes":{"id":"p-0064","num":"0063"},"figref":"FIG. 6B","b":["650","650","656","652","650","600","604","600","652"]},{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 7A","b":["700","700","700","702","702","1","702","704","704","1","704","706","706","1","706","700","702","1","704","1","706","1","702","2","704","2","706","2","702","3","704","3","706","3","702","704","706"],"i":["n","n","n","n ","n ","n "],"sub":"1"},{"@attributes":{"id":"p-0066","num":"0065"},"figref":"FIG. 7B","b":["750","750","750","752","752","1","752","754","754","1","754","756","756","1","756","750","752","1","754","1","756","1","752","2","754","2","756","2","752","3","754","3","756","3","752","4","754","4","756","4","752","5","754","5","756","5","752","754","756"],"i":["n","n","n","n ","n ","n "],"sub":["1","2"]},"Note that exemplary property vectors  and  in , respectively, can also include entries representing various properties relating to state, including information relating to message scheduling priorities, billing, auditing, and quality of service. Property vectors  and  can also include properties relating to a secure network, including, as determined by an ingress device, that a specific message should follow a well-known switched path, such as in Multi-Protocol Label Switching (MPLS) as shown in the entry with a value . of \u201cLabel\u201d in . Furthermore, property vectors  and  can include other properties not explicitly mentioned herein which indicate validation by border routers of various properties relating to a message or packet received by an ingress node in a trust domain.","Exemplary Computer and Communication System",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 8","b":["802","802","804","806","808","806","802","810","812","814","808","816","818","832"]},"Content-processing system  can include instructions, which when executed by computer and communication system , can cause computer and communication system  to perform methods and\/or processes described in this disclosure. Specifically, content-processing system  may include instructions for receiving a message by an ingress node in a domain of trust (communication mechanism ). Content-processing system  can include instructions for creating a property vector for the message, where the property vector indicates a number of properties that have been determined for the message (property vector mechanism ). Content-processing system  can also include instructions for transmitting and receiving the message, the property vector, and an authenticator (communication mechanism ). Content-processing system  can also include instructions for verifying the digital signature of the sender of a message based on a public key of the sender (property calculation mechanism ). Content-processing system  can include instructions for generating an authenticator for the message based on the property vector and a shared secret key (authenticator mechanism ).","Content-processing system  can further include instructions for creating a property vector for the message, where the property vector indicates a number of properties for the message, and where the property vector corresponds to an interest or a content object (property vector mechanism ). Content-processing system  can include instructions for calculating a similarity hash value of the interest based on the name of the interest and one or more fields of the interest, calculating a hash value of the content object, and calculating a hash value of a public key associated with the content object (property calculation mechanism ). Content-processing system  can also include instructions for verifying information relating to a scheduling priority of the message, a path switching label, billing, quality of service, and auditing (property verification mechanism ).","Content-processing system  can also include instructions for indicating an egress policy in the property vector, which specifies operations to perform upon departure of the message from the trust domain (egress mechanism ). Content-processing system  can include instructions for removing, by an egress node, the property vector associated with the message upon departure of the message from the trust domain (egress mechanism ).","Content-processing system  can further include instructions for determining whether a first authenticator is the same as a second authenticator (authenticator mechanism ). Content-processing system  can also include instructions for modifying the property vector for the message and for creating an additional property vector for the message (property vector mechanism ), and for generating an authenticator for the message based on the shared secret key and the modified and\/or newly created property vector (authenticator mechanism ). Content-processing system  can include instructions for transmitting the message, the modified and\/or newly created property vector, and the appropriate authenticator (communication mechanism ).","Data  can include any data that is required as input or that is generated as output by the methods and\/or processes described in this disclosure. Specifically, data  can store at least: a message that corresponds to an interest in a piece of content; a message that corresponds to a content object; a digital signature of a sender of a message that is based on a private key of the sender; a public key of the sender; a property vector that indicates a number of properties for the message; a shared secret key; an authenticator based on the shared secret key and the property vector; a similarity hash value of the interest based on a name of the interest and one or more fields of the interest; a hash value of the content object; a hash value of a public key associated with the content object; a public key certificate; a scheduling priority of the message; information relating to billing, auditing, or quality of service for the message; a path switching label; and an egress policy.","The data structures and code described in this detailed description are typically stored on a computer-readable storage medium, which may be any device or medium that can store code and\/or data for use by a computer system. The computer-readable storage medium includes, but is not limited to, volatile memory, non-volatile memory, magnetic and optical storage devices such as disk drives, magnetic tape, CDs (compact discs), DVDs (digital versatile discs or digital video discs), or other media capable of storing computer-readable media now known or later developed.","The methods and processes described in the detailed description section can be embodied as code and\/or data, which can be stored in a computer-readable storage medium as described above. When a computer system reads and executes the code and\/or data stored on the computer-readable storage medium, the computer system performs the methods and processes embodied as data structures and code and stored within the computer-readable storage medium.","Furthermore, the methods and processes described above can be included in hardware modules or apparatus. The hardware modules or apparatus can include, but are not limited to, application-specific integrated circuit (ASIC) chips, field-programmable gate arrays (FPGAs), dedicated or shared processors that execute a particular software module or a piece of code at a particular time, and other programmable-logic devices now known or later developed. When the hardware modules or apparatus are activated, they perform the methods and processes included within them.","The foregoing descriptions of embodiments of the present invention have been presented for purposes of illustration and description only. They are not intended to be exhaustive or to limit the present invention to the forms disclosed. Accordingly, many modifications and variations will be apparent to practitioners skilled in the art. Additionally, the above disclosure is not intended to limit the present invention. The scope of the present invention is defined by the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":[{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 4A"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4B"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 6B"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 7B"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
