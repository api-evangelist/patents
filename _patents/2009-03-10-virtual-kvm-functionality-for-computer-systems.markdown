---
title: Virtual KVM functionality for computer systems
abstract: A method, system, and computer program product for implementing virtual keyboard video mouse (KVM) switching functionality using a processing device in communication with a memory device is provided. Keyboard, video, and mouse signals for a first computer are redirected to be carried over a standardized serial bus connecting the first computer to a second computer. Each of the keyboard, video, and mouse signals are carried at predetermined frequencies. The keyboard, video, and mouse signals on the second computer are identified and separated. The keyboard, video, and mouse signals are passed to an operating system on the second computer. The keyboard, video, and mouse signals are used by the operating system to manage the first computer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08028108&OS=08028108&RS=08028108
owner: International Business Machines Corporation
number: 08028108
owner_city: Armonk
owner_country: US
publication_date: 20090310
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE DRAWINGS"],"p":["1. Field of the Invention","The present invention relates in general to computers, and more particularly to apparatus, method and computer program product embodiments for implementing virtual keyboard video mouse (KVM) functionality for a target computer system using a portable computer.","2. Description of the Related Art","Computers and computer systems are found in a variety of settings in today's society. Computing environments and networks may be found at home, at work, at school, in government, and in other settings. Computing environments increasingly manage data in one or more datacenter environments apart from the interface that computer users typically associate. In many cases, the storage environments are located across wide area networks (WANs), in which data is sent to\/received from the data system located remotely from the host. Datacenters are facilities used to house computer systems and associated components, such as telecommunications and storage subsystems. They generally include redundant or backup power supplies, redundant data communications connections, environmental controls, and security devices.","A datacenter may occupy one room of a building, one or more floors, or an entire building. Most of the equipment is often in the form of servers mounted in 19-inch rack cabinets, which are usually placed in single rows forming corridors between them. This allows personnel to access to the front and rear of each cabinet. In a typical data center environment, each of the rack mount servers shares a connection to a keyboard video mouse (KVM) switch. The user toggles the switch in order to connect to a desired server.","Use of traditional KVM switches presents occasional challenges, however. For example, if more than one person needs to use the console to which the KVM switch is connected, however, the first user must finish his\/her task first. Only then may the second user toggle the switch and connect to a second server or system. In addition to the foregoing, each system must be connected via a dongle and cable form factor, and daisy-chained and connected to the shared KVM switch. This situation leads to disorganization among the server cables at the back of the rack. One false connection may lead to losing a connection to the other servers daisy-chained to that particular connector. Finally, the user must implement a separate KVM switch (including an attached keyboard, video, and mouse) for each rack in the datacenter environment.","Alternatives to conventional KVM functionality may reduce these issues, such as use of a virtual network computing (VNC) protocol for remote connection to a particular server. However, VNC also poses challenges on occasion. For example, if a particular server is booting into an operating system, it is impossible to remotely connect to the server using VNC in order for a user to determine what is happening in that server during the boot cycle. In those situations, only a physically connected keyboard, video display, and mouse allow the user visibility into the server and the ability to take an appropriate action.","In view of the above, a need exists for a mechanism to better provide KVM-type functionality to computer systems such as rack mount servers in a datacenter environment, without the drawbacks previously described. Accordingly, in one embodiment, by way of example only, a method for implementing virtual keyboard video mouse (KVM) switching functionality using a processing device in communication with a memory device is provided. Keyboard, video, and mouse signals for a first computer are redirected to be carried over a standardized serial bus connecting the first computer to a second computer. Each of the keyboard, video, and mouse signals are carried at predetermined frequencies. The keyboard, video, and mouse signals on the second computer are identified and separated. The keyboard, video, and mouse signals are passed to an operating system on the second computer. The keyboard, video, and mouse signals are used by the operating system to manage the first computer.","In another embodiment, again by way of example only, a system for implementing virtual keyboard video mouse (KVM) switching functionality between at least two computers using a processing device in communication with a memory device is provided. At least one device driver is operable on a first computer. The device driver is adapted for redirecting keyboard, video, and mouse signals for a first computer to be carried over a standardized serial bus connecting the first computer to a second computer. Each of the keyboard, video, and mouse signals are carried at predetermined frequencies. An application operable on the second computer. The application is adapted for identifying and separating the keyboard, video, and mouse signals on the second computer, and passing the keyboard, video, and mouse signals to an operating system on the second computer. The keyboard, video, and mouse signals are used by the operating system to manage the first computer.","In still another embodiment, again by way of example only, a computer program product for implementing virtual keyboard video mouse (KVM) switching functionality between at least two computers using a processing device in communication with a memory device is provided. The computer program product comprises a computer-readable storage medium having computer-readable program code portions stored therein. The computer-readable program code portions include a first executable portion for redirecting keyboard, video, and mouse signals for a first computer to be carried over a standardized serial bus connecting the first computer to a second computer. Each of the keyboard, video, and mouse signals are carried at predetermined frequencies. A second executable portion identifies and separates the keyboard, video, and mouse signals on the second computer. A third executable portion passes the keyboard, video, and mouse signals to an operating system on the second computer, wherein the keyboard, video, and mouse signals are used by the operating system to manage the first computer.","Turning to , following, a flow chart of a prior art method  for implementing KVM functionality for a target computer system. Method  begins (step ) with a decision  to use either a physical KVM switch or VNC as previously described. If a KVM switch is utilized, the KVM switch toggles connections to access the desired target system (step ). If VNC or a similar solution is used, the user may only connect following boot into the target system's operating system (step ). The method  then ends (step ). Implementation of KVM and\/or VNC-type functionality has accompanying potential drawbacks as previously described.","In contrast, the illustrated embodiments below provide mechanisms for implementing virtual keyboard video mouse (KVM) functionality for a target computer system without the potential for the previously described drawbacks. In one embodiment, these mechanisms are facilitated through the use of a portable computer. The illustrated embodiments leverage two facets of the present invention. The first facet is a device driver application operable on the target system that redirects KVM signals from the typical communications paths of the target system to a standardized serial bus, such as a universal serial bus (USB) communications path. The KVM signals are each routed through the serialized communication path at predetermined frequencies. The second facet is an application operable on the portable computer that detects the redirected KVM signals, separates them from the combined serialized communication path, and passes the signals to the local operating system on the portable computer in order for the portable computer to manage the target system. The illustrated embodiments incorporate additional characteristics and perform additional functionality as will be further described, following.","Again, use of the mechanisms described in the illustrated embodiments serves to alleviate the issues described previously. For example, the mechanisms eliminate the dependency on a physical KVM switch, including the wiring, harnesses, and connections required to implement. The mechanisms allow the use of a portable computer, such as a laptop computer or personal desktop assistant to be used to manage the target system. The administrator is able to view activities occurring during boot cycles, such as power on self-test (POST) operations, and is able to take necessary action required using the personal computer. The mechanisms alleviate the need for additional skills expertise to implement KVM functionality. Any administrator may manage a target system using a portable computer.",{"@attributes":{"id":"p-0020","num":"0019"},"figref":["FIG. 2","FIG. 2","FIG. 2"]},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2","b":["100","102","104","106","102","119","118","102","116","120","128","102"]},"Generally, the computer  operates under control of an operating system (OS)  (e.g. z\/OS, OS\/2, LINUX, UNIX, WINDOWS, MAC OS) stored in the memory , and interfaces with the user to accept inputs and commands and to present results, for example through a GUI module . Although the GUI module  is depicted as a separate module, the instructions performing the GUI functions can be resident or distributed in the operating system , the computer program , or implemented with special purpose memory and processors.","The computer  also includes a basic input output system  (BIOS) acting as boot firmware on the computer  to identify, test, and initialize system devices. Device driver  is operable on BIOS . Device driver  is adapted for redirecting keyboard, video, and mouse signals normally routed to\/from the GUI , the pointing device , and the keyboard  through communications port  and socket  over standardized serial communications path  to the portable computer . In one embodiment, the standardized serial communications path  is a universal serial bus (USB) link, such as a USB link compatible with version 3.0 of the communications protocol. In the depicted embodiment, the USB 3.0 link uses a standardized USB connector , which is inserted, for example, into USB communications port . As the skilled artisan will appreciate, a variety of communications protocols utilizing standardized serialized communications paths may be realized. The functionality provided by device driver  over the communications path  will be further described, following. Portable computer  includes a keyboard , a display , and mouse . When properly configured, a user may use the keyboard , display , and mouse  to perform management functions of the computer  normally provided by the GUI , pointing device , and keyboard .","The computer  also implements a compiler  that allows an application program  written in a programming language such as COBOL, PL\/1, C, C++, JAVA, ADA, BASIC, VISUAL BASIC or any other programming language to be translated into code that is readable by the processor . After completion, the computer program  accesses and manipulates data stored in the memory  of the computer  using the relationships and logic that was generated using the compiler .","Data storage device  is a direct access storage device (DASD) , including one or more primary volumes holding a number of datasets. DASD  may include a number of storage media, such as hard disk drives (HDDs), tapes, and the like. Data storage device  may also include a number of storage media in similar fashion to device . The device  may be designated as a backup device  for holding backup versions of the number of datasets primarily stored on the device . As the skilled artisan will appreciate, devices  and  need not be located on the same machine. Devices  may be located in geographically different regions, and connected by a network link such as Ethernet. Devices  and  may include one or more volumes, with a corresponding volume table of contents (VTOC) for each volume.","In one embodiment, instructions implementing the operating system , the computer program , and the compiler , as well as the bios  and the device driver  are tangibly embodied in a computer-readable medium, e.g., data storage device , which may include one or more fixed or removable data storage devices, such as a zip drive, disc , hard drive, DVD\/CD-ROM, digital tape, etc., which are generically represented as the disc . Further, the operating system  and the computer program  comprise instructions which, when read and executed by the computer , cause the computer  to perform the steps necessary to implement and\/or use the present invention. Computer program  and\/or operating system  instructions may also be tangibly embodied in the memory  and\/or transmitted through or accessed by the data communication device . As such, the terms \u201carticle of manufacture,\u201d \u201cprogram storage device\u201d and \u201ccomputer program product\u201d as may be used herein are intended to encompass a computer program accessible and\/or operable from any computer readable device or media.","Embodiments of the present invention may include one or more associated software application programs  that include, for example, functions for managing a distributed computer system comprising a network of computing devices, such as a storage area network (SAN). Accordingly, processor  may comprise a storage management processor (SMP). The program  may operate within a single computer  or as part of a distributed computer system comprising a network of computing devices. The network may encompass one or more computers connected via a local area network and\/or Internet connection (which may be public or secure, e.g. through a virtual private network (VPN) connection), or via a fibre channel SAN or other known network types as will be understood by those skilled in the art. (Note that a fibre channel SAN is typically used only for computers to communicate with storage systems, and not with each other.) As one skilled in the art will appreciate, however, various additional components of the environment  may work individually or in concert to define, initialize, and perform the functionality for implementing virtual KVM functionality as will be further described.","Turning to , a block diagram of exemplary electronic components  of portable computer  is shown. Computer  is connected over communications path  the target computer system  (see also  previously) as described above via communication port . Computer  includes a processor , memory , and a mass storage device . An application program  is operable on the computer  as will be further described. Finally, computer  is connected to a display  having a GUI , a pointing device  such as a mouse, and a keyboard .","Application program  as operable on computer  is adapted for performing functionality relating to identifying and separating the KVM signals redirected from the target computer system . In one embodiment, these signals are provided over the communications path  (e.g., the USB 3.0 communications path depicted in ) to\/from the target computer system  at certain predetermined frequencies, such as 27.195 MHz for the keyboard, 27.145 MHz for the mouse, and between 150 and 200 MHz for video signals.","In one embodiment, application program  includes plug-ins or \u201chooks\u201d to the native operating system's keyboard, video, and mouse controlling application programming interfaces (APIs). In this way the program  may substitute other KVM signals for those normally provided to the computer 's operating system. These KVM signals are redirected from the target computer system  over the communications path . Application program  identifies the redirected signals, separating each of the signals from the serialized communication path. The redirected, separated signals are then provided or passed to the computer 's APIs responsible for keyboard, video and mouse control, effectively overriding control of the keyboard, video, and mouse of the personal computer, and allowing the keyboard, video, and mouse of the personal computer to be used to manage the target computer system .","Turning to , an exemplary method  is depicted for implementing virtual KVM functionality for a target computer system using the mechanisms of the present invention. As one skilled in the art will appreciate, various steps in the method  may be implemented in differing ways to suit a particular application. In addition, the described method may be implemented by various means, such as hardware, software, firmware, or a combination thereof operational on or otherwise associated with the storage environment. For example, the method may be implemented, partially or wholly, as a computer program product including a computer-readable storage medium having computer-readable program code portions stored therein. The computer-readable storage medium may include disk drives, flash memory, digital versatile disks (DVDs), compact disks (CDs), and other types of storage mediums.","Method  begins (step ) with parallel processes executed on both the target system (step ) and the portable computer, in this case a personal laptop (step ). On the target system, a device driver is installed to be operable in conjunction with the target system's BIOS as previously described (step ). The device driver functions to divert or redirect the KVM signals to the target system's USB 3.0 port at the depicted frequencies (27.195 MHz for keyboard signals, 27.145 MHz for mouse signals, and 105-200 MHz for video signals) (step ). Of course, the skilled artisan will appreciate that additional frequencies may be implemented.","On the personal laptop side, an application program is installed (step ). The application has hooks connected to APIs of the personal laptop's OS using objective linking and embedding (OLE). These hooks correspond to native keyboard, mouse, and video signals of the personal laptop (step ). As a next step, the personal laptop is connected to the target system via a USB 3.0 communications port (step ). The user starts the application by invoking the application's executable file (step ).","Once the application program is operational, the signals carried from the target system over the USB cable are identified and separated (step ). The application then passes each of the keyboard, video, and mouse signals to the native OS APIs, effectively overriding the local KVM controls and allowing the local keyboard, local mouse, and local video of the personal laptop to be used to manage the target system (step ). The method  then ends (step ). While method  describes one exemplary methodology, the skilled artisan will appreciate that variations to the depicted methodology may be performed. For example, several possible communications schemes may be implemented between the personal laptop and the target system. In one embodiment, upon termination of the application, the connection of the keyboard, video, and mouse signals for the first computer with the API of the operating system of the second computer is terminated.","Some of the functional units described in this specification have been labeled as modules in order to more particularly emphasize their implementation independence. For example, a module may be implemented as a hardware circuit comprising custom VLSI circuits or gate arrays, off-the-shelf semiconductors such as logic chips, transistors, or other discrete components. A module may also be implemented in programmable hardware devices such as field programmable gate arrays, programmable array logic, programmable logic devices, or the like.","Modules may also be implemented in software for execution by various types of processors. An identified module of executable code may, for instance, comprise one or more physical or logical blocks of computer instructions which may, for instance, be organized as an object, procedure, or function. Nevertheless, the executables of an identified module need not be physically located together, but may comprise disparate instructions stored in different locations which, when joined logically together, comprise the module and achieve the stated purpose for the module.","Indeed, a module of executable code may be a single instruction, or many instructions, and may even be distributed over several different code segments, among different programs, and across several memory devices. Similarly, operational data may be identified and illustrated herein within modules, and may be embodied in any suitable form and organized within any suitable type of data structure. The operational data may be collected as a single data set, or may be distributed over different locations including over different storage devices, and may exist, at least partially, as electronic signals on a system or network.","While one or more embodiments of the present invention have been illustrated in detail, the skilled artisan will appreciate that modifications and adaptations to those embodiments may be made without departing from the scope of the present invention as set forth in the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["In order that the advantages of the invention will be readily understood, a more particular description of the invention briefly described above will be rendered by reference to specific embodiments that are illustrated in the appended drawings. Understanding that these drawings depict embodiments of the invention and are not therefore to be considered to be limiting of its scope, the invention will be described and explained with additional specificity and detail through the use of the accompanying drawings, in which:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
