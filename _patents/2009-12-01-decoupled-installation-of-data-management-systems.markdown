---
title: Decoupled installation of data management systems
abstract: Systems and methods for providing decoupled installation of data management systems used in conjunction with computer networks are disclosed. The method comprises installing data storage software in order to facilitate communication with a second computer in order to perform data storage operations. The software may be installed without knowledge of the second computer and/or the ability to communicate with the second computer. During the installation process, configuration parameters are obtained by the first computer and stored in a data structure. At least a portion of the configuration parameters recorded in the data structure is also provided to the second computer. The first and second computers subsequently communicate in order to register the first computer for use with the second computer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08943183&OS=08943183&RS=08943183
owner: CommVault Systems, Inc.
number: 08943183
owner_city: Tinton Falls
owner_country: US
publication_date: 20091201
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATION","BACKGROUND","SUMMARY","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS","EXAMPLES","Example 1","Server is Unknown to Client","Example 2","Server Configuration","Example 3","OEM Client Pre-Imaging"],"p":["This application claims the benefit of priority under 35 U.S.C. \u00a7119(e) of U.S. Provisional Patent Application No. 61\/121,456, entitled \u201cDecoupled Installation of Data Management Systems,\u201d filed Dec. 10, 2008, which is hereby incorporated herein by referenced in its entirety to be considered part of this specification.","1. Field of the Invention","Embodiments of the invention relate to systems and methods for installing software in data management systems and, in particular, in data storage systems.","2. Description of the Related Art","Data management systems are routinely utilized in computer networks to perform data storage and other operations on electronic data stored within the network. In general, primary data, comprising a production copy or other \u201clive\u201d version in a native format used by a first computer, is generally stored in local memory, or another high speed storage device, of the first computer that allows for relatively fast access. Such primary data is generally intended for short term retention, on the order of hours or days. After this retention period, some or all of the data is stored as one or more secondary copies, for example, to prevent loss of data in the event that a problem occurs with the data stored in primary storage. Secondary copies are generally intended for longer-term storage, on the order of weeks to years, prior to being moved to other storage or discarded. Secondary copies may be indexed so that a user may browse and restore the data at a later point in time. In some embodiments, application data moves from more expensive, quick access storage to less expensive, slower access storage over its lifetime. An example of a data migration system which performs data migration operations on electronic data is the QINETIX storage management system by CommVault Systems of Oceanport, N.J.","In order to perform these data storage functions, data storage software is installed on a plurality of first computers. The data storage software on the first computers communicates with at least one second computer which coordinates data storage operations amongst the plurality of first computers in order to ensure the orderly migration of data from short term, primary storage devices to long term, secondary storage.","During the installation process, configuration parameters are communicated between the first computers and the second computers in order to \u201cregister\u201d the first computers for use with the second computers. This registration process, in one aspect, establishes that the first computers are authorized to share information with the second computers. In another aspect, the registration process also establishes hardware and software parameters that allow each of the computers to perform data storage operations with each other.","In conventional systems, these configuration parameters are provided to the first and second computers during installation of the data storage software. Conventional installations such as this are problematic, however. In one aspect, the configuration parameters are typically entered in each computer manually. Significant time and effort is required to gather this information and to travel to the location of the first and second machines. This requirement complicates scheduling the installation of the software, as it often requires the availability of a computer professional. In another aspect, this requirement drives up the cost of installing the software, as information technology (IT) professionals are skilled labor whose time is valuable.","In a further aspect, some of the configuration parameters may be unavailable when the data storage software is installed. For example, the installation may require information regarding the second computer which is unknown to the IT professional. Alternatively, last minute changes in the configuration parameters may occur, impeding the software installation until the correct parameters are determined. In each case, the IT professional must expend time and energy obtaining the proper configuration information before the software installation may be completed. These problems, as well as those described above, are further magnified as the number of first machines upon which software is to be installed increases.","The above-described deficiencies in the installation of software, particularly data storage systems, illustrate the need for improved systems and methods for software installation.","In certain embodiments, a method of decoupled software installation for a first computer which communicates with a second computer that coordinates data storage operations with the first computer is provided. The method comprises installing data storage software on the first computer. A plurality of first computer configuration parameters are discovered by the first computer during software installation and the second computer does not communicate with the first computer during the software installation. The method further comprises recording at least a portion of the first computer configuration parameters within a data structure. The method additionally comprises communicating at least a portion of the first computer configuration parameters to the second computer. The method also comprises comparing first computer configuration parameters stored by the first and second machines.","In certain embodiments, a method of deploying a first computer for use with a second computer within a data storage system is provided. The method comprises recording a plurality of first computer configuration parameters within a data structure. The method further comprises transmitting at least a portion of the data structure to each of the first and second computers such that, upon receiving the data structure, at least one of the first and second computers possesses sufficient information so as to communicate with the other. The method also comprises configuring at least one of the first and second computers to automatically discover the other machine after transmission of the data structure. The method additionally comprises comparing the first computer configuration parameters stored by the first and second computers.","In further embodiments, a system for decoupled installation of data storage software is provided. The system comprises a first computer possessing installed data storage software, a second computer, wherein the first computer does not substantially communicate with the server computer during the software installation, and a data structure containing a plurality of first computer configuration parameters which are necessary for communication between the first and the second computers. At least a portion of the first computer configuration parameters are provided to the second computer and wherein the first and second computers communicate after software installation in order to register the first computer for use in performing data storage operations with the second computer.","Embodiments of the invention relate to systems and methods for decoupled installation of software on a first computer which communicates with a second computer for purposes which may include, but are not limited to, licensing, control, and data. In one embodiment, the first and second machines may comprise computers. In general, the data migration software is configured such that it may be installed on the first computer without communication with the second machine during the installation process. Advantageously, as discussed below, the decoupled installation ability provides IT professionals with significant flexibility in the deployment of the software, reducing the time and cost to install the data storage software.","Embodiments of the invention are discussed below in the context of data storage software for use in performing selected data storage operations within a data storage system. However, it may be understood that the embodiments may be utilized in conjunction with any software product which communicates with a computer for the purposes of licensing, control, or data.","In one embodiment, data storage systems include combinations of hardware, software, and firmware programs, as well communications links, necessary for performing data storage operations on electronic data within a computer network. Embodiments of data storage systems are disclosed in U.S. Provisional Patent No. 60\/567,178, filed Apr. 30, 2004 and U.S. Pat. No. 7,343,453, issued Mar. 11, 2008, each of which is incorporated herein by reference in its entirety.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 1","b":["102","102","106","106","130","106","106","106","106"]},"In one embodiment, the storage operation cells A, B may comprise combinations of elements such as storage managers A, B, client computers , management components , and primary and secondary storage devices A, B, as discussed in greater detail below. It may be understood that this list is not exhaustive and that the number of these and other elements present or absent within the cells A, B may be provided as necessary for performance of data storage operations by the cells A, B. In some embodiments, certain elements reside and execute on the same computer, while in alternate embodiments, the some or all of the elements reside and execute on different computers.","In general, decoupled software installation allows the storage management software to be installed on first machines, such as the client computers  and management components , without communication with a second machine, such as the storage managers A, B. In the discussion below, the first machine upon which the software is installed may be referred to as the client computer ; however, the first computer may comprise client computers , management components , or combinations thereof. Furthermore, the second computer may be referred to as the storage manager A, B or server below; however, the second computer may comprise any device which coordinates data storage operations amongst the plurality of first computers in order to ensure the orderly migration of data from short term, primary storage devices to long term, secondary storage.","In certain embodiments, discussed in greater detail below, the data storage software may be installed on the client computer  without knowledge regarding the storage manager A, B and\/or the ability to communicate with the storage manager A, B. In one embodiment, when the data storage software is installed, the configuration parameters of the client computer  are provided to the client computer  in a data structure. For example, the data structure may be provided, at least in part, by the software installation, discovered by the client computer  through an auto-discovery process, provided by an external source, or combinations thereof. In one embodiment, after the data storage software is installed, the storage manager A, B may read at least a portion of the configuration parameters from the data structure from the client computer  or be provided with the configuration parameters from a source which is not the client computer . Subsequently, the storage manager A, B may communicate with the client computer  to register the client computer  to work with the storage manager A, B to perform data storage operations.","Advantageously, this software design significantly reduces the time required to deploy the data storage system. In one example, by configuring the data migration software to automatically discover and\/or receive pre-generated configuration parameters, the decoupled installation significantly automates the installation process, while still providing for the customization of the configuration parameters necessary for proper operation of the data migration software. In further examples, by configuring at least one of the first and second computers to initiate contact with the other upon installation of the software, further configuration parameters of the first and second computers may be automatically discovered, updated, and verified, with little to no human intervention. These and other objects and advantages of the disclosed embodiments are discussed in greater detail below.","The storage managers A, B comprise computers configured with a software module or other application which coordinates and controls storage operations performed by the storage operation cells such as cells A, B. These operations may include, but are not limited to, initiation and management of production data copies, production data migrations, production data recovery, and backup operations. To perform these operations, the storage managers A, B may communicate with some or all elements of the storage operation cells A, B. The storage managers A, B may also maintain a database  or other data structure to indicate logical associations between elements of the cells A, B, for example, the logical associations between management components  and storage devices A, B as discussed below.","In one embodiment, the management component  is an element that provides instructions to a plurality of associated storage devices, such as devices A, B, to perform storage operations which subsequently archive, migrate, or restore data to or from the storage devices A, B as directed by the storage managers A, B. For example, the management component  may be implemented as a software module that conveys data, as directed by the storage manager , between a first machine, such as client computer , and one or more storage devices A, B, such as a tape library, a magnetic media storage device, an optical media storage device, or other suitable storage device. In one embodiment, management components  may be communicatively coupled with, and control, a plurality of storage devices A, B associated with that particular management component . A management component  may be considered to be associated with a particular storage device A, B if that management component  is capable of routing and storing data to that storage device.","In one example, in operation, the management component  associated with particular storage devices A, B, may instruct the storage devices A, B to use a robotic arm or other retrieval mechanism to load or eject certain storage media, and to subsequently archive, migrate, or restore data to or from that media. Management components  may communicate with a storage device A, B via a suitable communications link , such as SCSI, fiber channel, LAN, WAN, SAN, or other communication methods known in the art.","The management component  may also maintain an index cache, database, or other data structure A which stores index data generated during data storage, restoration and other data storage operations that may generate index data. The data structure A provides the management component  with a fast and efficient mechanism for performing any combination of locating, tracking, and processing data stored or archived. Thus, in some embodiments, the storage manager database  may store data associating a client , with a particular management component  or storage device A, B while database A associated with the management component  may indicate specifically where client data is stored in the storage device , what specific files are stored, and other information associated with the storage of client data. In alternative embodiments, a single storage manager database  may perform both of the function of the databases , A described above.","In one embodiment, a first storage operation cell A may be configured to perform a particular type of storage management operation, such as storage resource management operations (SRM). SRM may comprise operations include monitoring the health, status, and other information associated with primary copies of data (e.g. live or production line copies). Thus, for example, the storage operation cell A may monitor and perform SRM related calculations and operations associated with primary copy data. The first storage operation cell A may include the client computer  in communication with a primary storage device A for storing data directed by the storage manager  associated with the cell A.","For example, the client  may be directed using Microsoft Exchange data, SQL data, oracle data, or other types of production data used in business applications or other applications stored in the primary volume. The client  may contain SRM modules or other logic directed to monitor or otherwise interact with the attributes, characteristics, metrics, and other information associated with the data stored in the primary volume.","In another implementation, a storage operation cell B may also contain a management component  and secondary storage volume B configured to perform SRM-related operations on primary copy data. The storage manager  may also track and store information associated with primary copy storage. In some embodiments, the storage manager  may also track where primary copy information is stored, for example in secondary storage.","In alternative implementations, the storage operation cell B may be directed to another type of data storage operation, such as hierarchical storage management (HSM) data storage operations. For example, the HSM storage cell may perform production data storage, snapshots or other types of HSM-related operations known in the art. For example, in some embodiments, data is migrated from faster and more expensive storage such as magnetic storage (i.e., primary storage) to less expensive storage such as tape storage (i.e., secondary storage).","The storage managers A, B may further monitor the status of some or all data storage operations previously preformed, currently being performed, or scheduled to be performed by the storage operation cells A, B, respectively. In one embodiment, the storage managers A, B may monitor the status of all jobs in the storage cells A, B under their control as well as the status of each component of the storage operation cells A, B. The storage manager may monitor operations, such as SRM or HSM operations as discussed above, to track information which may include, but is not limited to: file type distribution, file size distribution, distribution of access\/modification time, distribution by owner, capacity and asset reporting (by host, disk, or partition), availability of resources, disks, hosts, and applications. Thus, for example, the storage manager  may track the amount of available space, congestion, and other similar characteristics of data associated with the primary and secondary volumes A, B.","The storage manager A of a first storage cell A may also communicate with a storage manager B of another cell, such as B. In one example, a storage manager A in a first storage cell A communicates with a storage manager B in a second cell B to control the storage manager B of the second cell B. Alternatively, the storage manager A of the first cell A may bypass the storage manager B of the second cell B and directly control the elements of the second cell B.","In further embodiments, the storage operation cells A, B may be hierarchically organized such that hierarchically superior cells control or pass information hierarchically to subordinate cells and vice versa. For example,  illustrates one example in which storage operation cell A is hierarchically superior to cell B. In one embodiment, a storage manager A of the hierarchically superior cell A may be associated with, communicate with, and direct data migration operations for a plurality of storage operation cells, such as cell B. In one embodiment, the storage manager A may be part of a storage operation cell, such as cell A. In alternative embodiments, the storage manager A may reside in its own storage operation cell.","In other embodiments, hierarchically superior storage manager A may track the status of associated, subordinate storage operation cells B, such as the status of jobs, system elements, system resources, and other items by communicating with cell B. Moreover, the storage manager A may track the status of its associated, subordinate storage operation cells, such as B by receiving periodic status updates from the subordinate cells regarding jobs, elements, system resources, and other items. For example, a storage manager A may use methods to monitor network resources such as mapping network pathways and topologies to, among other things, physically monitor the data migration operations of its associated, subordinate storage operation cells, B.","A hierarchically superior storage manager A may further comprise programming or other logic directed toward analyzing the storage patterns and resources of its associated, subordinate storage cells, such as cell B. Thus, for example, the storage manager A may monitor or otherwise keep track of the amount of resources available, such as storage media, in its subordinate cells B. This allows the storage manager A to determine when the level of available storage media, such as magnetic or optical media, fall below a selected level, so that an alert may be issued that additional media may be added or removed as necessary to maintain a desired level of service.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 2","b":["200","202","200","206","210","216","200","212","214","220","202","220"]},"As illustrated in , the data storage software is installed on the client machine in step . In one embodiment, the software installation is conducted according to the manufacturer's instructions. For example, the software may be provided using portable media such as CD-ROMs or DVD. Alternatively, the software may be downloaded from a hard-disk drive or other fixed media that may be local to the client machine or accessed through a network. Such network communication may be performed over wired or wireless communications devices. In further embodiments, an automated installation program may guide the user through the installation process, where operations including, but not limited to, decompression, copying, and system registration of selected files are performed. The installation may be completely automated, without user intervention or may employ user intervention at selected portions of the installation process.","In steps , , and  of the method , the data storage software is populated with at least a portion of the configuration parameters required for operation. In one embodiment, the configuration parameters comprise combinations of optional and required parameters for registration of the data storage software installed on the client machine with a second machine, such as a server machine. Registration establishes the authorization of the data storage software to communicate with the server, as well as configures the server to work in conjunction with the data storage software on the client machine.","In certain embodiments, the required information comprises configuration parameters that are necessary for the registration of the data storage software with the server. In contrast, the optional parameters are not necessary for registration. Embodiments of the required and optional configuration parameters are listed below. It may be understood that the parameters described are examples and that these and other parameters may be employed, as necessary, in any combination, added to, or omitted, without departing from the spirit of the disclosure.","Examples of the required parameters comprise one or more of the following: a client display name, a client hostname, a client operating system name, a plurality of client hardware identifiers, such as IA 32 bit, 64 bit, and x64 bit, other software installation management (SIM) information pertaining to the client, such as folder locations, software version, and client time, a plurality of installed platforms on the client (e.g. software applications such as MICROSOFT EXCHANGE, LOTUS NOTES, NOVEL GROUPWISE), and a data storage software installation folder of the client.","Examples of the optional client configuration parameters comprise the client time zone, a job results folder, an index cache folder, a selection of physical or virtual machine (physical machine), a plurality of port numbers, an original equipment manufacturer (OEM) ID, a globally unique identifier (GUID) of the client, a hostname, a storage policy for one or more default subclients, a clock skew, a physical client ID of a virtual machine, and patch cache location. Examples of port numbers may include, but are not limited to, a CommVault Daemon (CVD) port number, and an event manager port number.","The data storage software may obtain the client configuration parameters through a variety of mechanisms, described in greater detail below with respect to . In one embodiment, the client configuration parameters may be provided to the client and the server. In other embodiments, the client configuration parameters may be discovered. In further embodiments, the client configuration parameters may comprise a combination of provided and discovered parameters.","In one embodiment, the client may discover the client parameters in steps  and . As discussed in greater detail below, discovered client parameters may subsequently be stored in an XML file for registration of the client machine with the server.","In one embodiment, a portion of the client configuration parameters comprising \u201cstock\u201d parameters may be discovered, step . These stock parameters comprise configuration parameters which do not vary with the local environment in which the client machine operates, and therefore, may be known prior to deployment of the client machine. In one example, a data structure containing the stock parameters may be provided with the data installation files and read in by the client during the installation of the data storage software.","In another embodiment, at least a portion of the remaining client configuration parameters may be discovered in step . For example, the data storage software may be configured with an application programming interface (API, , ) which facilitates auto-discovery of at least a portion of the non-stock client configuration parameters. Examples of these non-stock parameters may include, but are not limited to, digital rights management (\u201cDRM\u201d) and network information, such as the client's hardware and IP address.","In further alternative embodiments, the user may be prompted for entry of a registration key during the installation process. As understood in the art, registration keys, in one aspect, provide authorization to install the software. In another aspect, registration keys may allow access to selected features of software. The registration key may be provided by the manufacturer or distributor of the software to purchasers of the software.","In one embodiment, the software may be configured such that entry of a selected registration key provides the user an option to respond to a series of questions regarding the remaining configuration parameters of the client in step . The answers provided to the software by a user are recorded in a data structure. In one embodiment, the answers are recorded in an XML file. This process will be referred to herein as \u201cpre-imaging.\u201d In certain embodiments, a dialog box may further warn the user that the installation is not completed until the client machine has registered with the server.","In further alternative embodiments, the discovery of stock configuration parameters in step  is bypassed. In these embodiments, the method moves directly to step , where substantially all of the client configuration parameters are discovered by the client, either automatically or through user entry, as discussed above.","Once the client is populated with its configuration parameters, the method moves to either of step  or , where the client and server discover one another (). As discussed below, in one embodiment, the client may discover the server (step ), while in another embodiment, the server may discover the client (step ).","In step , the server  discovers the client . In one embodiment, an administrator of the data storage system may employ a user interface of the server  to select an option to add a new client machine. In one embodiment, the administrator may be prompted to provide at least one of the client machine name, hostname, and port number in order to allow the server to connect to the client machine. The port is a virtual data connection used by programs to exchange information directly, instead of going through a file or other temporary storage location. For example, the port number may comprise a special number present in the header of a data packet which is used to map data to a particular process running on a computer, such as instances of the data storage software. In the case of the data storage software, the port number corresponds to the port number of the data storage application residing on the client machine. In certain embodiments, where a port number is not provided, a default number may be assumed by the server.","In an alternative embodiment, the client  may discover the server  in step . For example, the software installation may provide the client  with one or more listening processes  which listen for network traffic indicating that the server  is present. Upon verifying that the server  is reachable across the network, such as through use of a ping, the client  may provide its IP and port information to the server  so as to allow client-server communication.","After the IP and port information of the client  is provided to the server, the server machine subsequently communicates with the client machine in step . The server  first contacts the appropriate processes on the client machine , as specified by the port number. Upon contacting the processes, the corresponding control set on the client machine  is determined, based upon information stored on the client machine during the parameter discovery process. In general, the control set is a set of the configuration data required to start devices and system services. For example, in MICROSOFT WINDOWS SERVER, at least two control sets are maintained in the registry, identified as CurrentControlSet and LastKnownGood control set. The current control set is that most recently used to start the client. Each control set is stored in the Select subkey of the Windows registry. In other embodiments, control sets are maintained in a data object and used by other devices such as servers and network devices.","During communication between the client  and server , the server  further locates the data structure  containing the configuration parameters. Upon discovery of the data structure, a copy of the data structure , or a selected portion thereof, may be sent back to the server . At least a portion of the configuration parameters contained within this data structure  are used as input for registration of the client machine  with the server .","In one embodiment, selected configuration parameters possessed by the client  and the server  are updated during this initial communication. The server  and client  compare mutually held configuration parameters and update parameters that do not match. Selected parameters are selected to be \u201cclient dominant\u201d or \u201cserver dominant.\u201d Client dominant parameters are those configuration parameters in which discrepancies between the parameters of the client  and the server  are resolved in favor of the client, while discrepancies in the server dominant parameters are resolved in favor of the server. The client dominated parameters may include, but are not limited to, the software installation folder, the client time zone, the job results folder, the index cache folder, the clock skew, and the physical client ID of the virtual machine. The server parameters may include, but are not limited to, the client name and hostname entered by the administrator on the server, the server name, and the patch catch location.","Advantageously, designating certain configuration parameters to be client dominant and server dominant provides the decoupled installation process with significant robustness. These designations are designed to introduce bias into the discrepancy resolution process reflecting that the client dominated parameters are more likely to be correctly recorded in the client than in the server, while the server dominated parameters are more likely to be correctly recorded in the server than in the client. In this manner, the likelihood that the configuration parameters are correctly populated in the client and server is increased.","In another embodiment, selected configuration parameters possessed by the server and client may be verified against one another. In this context, verification refers to a condition that the configuration parameters be the same between the client  and the server . In one embodiment, the client display name, client hostname, operating system name, hardware ID, other SIM parameters (as discussed above), and installed platforms may be verified parameters.","In the event that the configuration parameters do not match between the client and server, a synchronization failure occurs. As a result, the client machine  is not registered for use with the server  and, therefore, is not authorized to participate in data storage operations.","Advantageously, this verification process inhibits fraudulent use of the data migration software. In embodiment, configuration parameters, such as the client operating system, may be verified between the client  and the server  to ensure that the data structure  recorded by the client  has not been tampered with. For example, tampering may comprise editing the client configuration parameters within the data structure  to take advantage of a cheaper license fee offered for one operating system over another. When such tampering is identified during the verification process, synchronization failure occurs and the client  is inhibited from joining in data storage operations with the server , preventing fraudulent use of the data migration software.","In step  of the method , the server may further search for a plurality of locally generated globally unique identifiers (GUIDs) on the client machine . In general, GUIDs are identifiers used by software applications to provide a reference number that is unique in the context for which it is used. For example, the GUID may be used to represent similar, but not identical, components of the data storage software. If a GUID is present, this parameter will be transmitted back to the server  and entered into the server's registry. If no GUID is present, then the server will generate a GUID and update both the server registry as well as its own registry with the GUID.","In further alternative embodiments, the configuration parameters are not discovered by the client  but are rather provided to both the client  and the server . For example, an XML file containing the client configuration parameters may pushed to both the client  and the server machines  prior to their communication with each other by an third computer which is neither the client or the server. In one embodiment, this third computer comprises an installation server .","The installation server is configured to discover both the client  and the server  machines before they are aware of each other. In one embodiment, this discovery may be enabled by an administrator of the data storage system. For example, the administrator may provide information to the installation server  which allows the installation server  to discover the client  and server , such as IP address and port information for the client  and server . In alternative embodiments, the installation server  may become aware of the client  and server  automatically, through use of listening processes.","The installation server  provides the client machine  with a data structure  containing at least the client configuration parameters and provides the server machine  with at least the IP and port information of the client  so as to facilitate communication between the client  and server . In one example, the configuration parameters may be provided in the form of a data structure, such as an XML file. In one example, the XML file may be stored on a portable data medium, such as a CD-ROM or DVD, which may be accessed by the installation server . In another embodiment, the XML file may be read from a fixed media source, such as a local or network hard disk drive accessible by the installation server . In further embodiments, the XML file may be downloaded by the installation server  from an internet storage device, such as a website or ftp server. Once the installation server  has provided the client  and server  with configuration parameters, the client-server communication may take place as discussed above with respect to step .","This mechanism of providing the configuration parameters to the client  and server  is of particular benefit in situations where many clients  and\/or servers  are concurrently configured, such as in a mass-rollout. In this manner, network and machine resources are spared the rigorous self-discovery and configuration population process discussed above, freeing these resources for other tasks, while still providing a substantially automated discovery and configuration process.","Regardless of the mechanism by which the configuration parameters are obtained by the client and server, once the method  is complete, the data storage software is installed and the client  registered for use with the server . Thus, the client  and server  machines may subsequently communicate with each other as necessary in order to perform data storage operations.","Advantageously, in the decoupled installation of the present disclosure, the provided and\/or discovered configuration parameters are substantially the same as those which would be obtained during live installation of the software on the client machine in a conventional installation. Thus, this software design allows the server  to register the client  for use with the data storage system without significant involvement by the data storage system administrator or, alternatively, a user of the client , if they are not the same, enhancing the ease of software installation.","In the following examples, circumstances in which decoupled installation may be performed are discussed. In general, the examples illustrate the wide range of software installation situations which may be managed through the use the systems and methods of decoupled installation in computer systems such as data storage systems. The examples further illustrate how the systems and methods of decoupled installation may be utilized by computer professionals to install software more quickly and easily than through conventional software installations. These examples are discussed for illustrative purposes and should not be construed to limit the embodiments of the invention.","In one embodiment, data storage software possessing decoupled installation capability may be installed on client machines when one or more server configuration parameters are unknown at the time of software installation. There are a variety of scenarios in which a client machine may be deployed before the appropriate server configuration parameters are not known. In one example, the server information may not be known because the server itself has not been deployed. In a further example, the client machine may not be currently configured for, or may not otherwise possess, network access and be unable to communicate with the server.","In a further example, the server parameters may not be known because the client machine has not been assigned to a server. As discussed above, when deployed, a client is assigned to a cell which is managed by a server, such as a storage manager, which instructs the components of the cell, including the client, to perform selected storage operations. The pairing of a selected client with a selected server may be implemented for a variety of reasons, including, but not limited to, geographic location, function of the client, network load balancing. Considerations such as these may be complex and inhibit an administrator from immediately assigning a client to a selected server when installing the data storage software. As a result, the client cannot be deployed until such an assignment is made.","In contrast with conventional software installation methods, the decoupled installation procedures disclosed herein allows the data migration software to be installed, and the client to be deployed in a data migration system, despite the lack of information regarding the server, or communication with the server. In one embodiment, a registration key is entered during installation of the software, the client configuration parameters to be entered by an administrator of the data storage system, or discovered during installation of the software, and recorded in a data structure such as an XML file.","Once the data storage software is installed on the client, the administrator of the data storage system may then configure the server using the configuration parameters. As discussed above, the configuration parameters may be obtained from the client directly, through discovery of the client by the server, through discovery of the server by the client, or from another source. Subsequently, client-server communication may take place, where selected configuration parameters are updated and verified between the client and server to complete the installation process.","In one advantage, the administrator may prepare the client machine in advance of deploying the client, since it is not necessary to specify the server. As a result, the administrator need not be present at the location where the client machine is deployed during installation of the software. For example, an administrator of the data storage system may install the software at a location of their choosing and ship the client machine to the user's location. Once on site, the client and server may discover each other and complete the registration process. Beneficially, this flexibility saves the administrator travel and logistical time in managing the data storage software, reducing the cost of ownership.","In further advantage, the administrator may prepare client machines for contingency purposes in advance of their need. For example, such needs may include replacement of deployed client machines which require removal from service because of failure, required maintenance, or installation of upgrades with pre-imaged machines. Alternatively, prepared clients may be deployed as additional capacity is required within the data storage system. Thus, the ability to prepare clients ahead of time reduces the time required to deploy these machines in service because software installation is already performed, facilitating the deployment process.","Furthermore, the decoupled installation capability makes client machines substantially interchangeable. Because the server parameters are not established during the software installation, the client may be registered with any server within the data storage system, as necessary. Thus, the client configuration parameters of the client already recorded during the software installation do not have to be input or changed when the client is placed into service. This flexibility further saves the administrator significant time when placing client machines into service.","In other examples, decoupled installation may be utilized to facilitate the client registration process. For example, when installing software possessing decoupled installation capability, the configuration parameters are stored for use, at least in part, at the time of installation. As a result, once the software is installed, the administrator of the data storage system merely needs allow the client to auto-generate its configuration parameters and wait for server auto-discovery of the unregistered client. For example, the server may ping selected ports of the unregistered clients, listen for responses, and push server configuration parameters to responding unregistered clients. In this fashion, the server may establish connections with the client machines in order to complete the registration process. Advantageously, the work for the IT professional is minimized because information regarding each client machine does not need to be gathered manually, saving time, resources, and, ultimately, operating costs of the data storage system.","In another aspect, a significant portion of the installation and registration process may be completed without connectivity between the two machines. In one aspect, the configuration parameters may be provided to the server, without communication with the client machine. For example, client machines may be provided in a uniform, \u201cstock\u201d configuration, with the data storage software already installed, as discussed below in Example 3. Thus, the configuration parameters may be known in advance of receipt of the clients, allowing the server to be prepared by the administrator in advance of the receipt of the client. This flexibility again allows IT professionals to strategically deploy their resources, performing as much advance work as possible.","In a further aspect, the decoupled installation may further streamline the client registration process. For example, the administrator may determine the client and server pairings prior to software installation and subsequently deploy the client with software installed. Once the client is provided a communications link with the server, the user may initiate client communication with the server in order to complete registration of the client during the first use of the data storage software. Thus, from the standpoint of the user of the client machine, the registration of the client machine is completed in a nearly automated fashion enhancing the ease of deployment of the client machines.","In another example, the decoupled installation capability facilitates the production of client machines installed with the data storage software by original equipment manufacturers (OEMs). In one embodiment, an OEM vendor may utilize the pre-image mode on a model or template computer which is representative of a large number of client machines. The services, registry, and binary files may be copied to the model computer, with tools subsequently used to image the disks of the model client. This disk image may then be used to generate a plurality of other clients which are shipped to customers.","In one example, the receiving customer may be the administrator of the data storage system. The administrator may arrange for the client machine to be delivered to a selected site for deployment. Advantageously, then, administrators may have the option to purchase client machines which already have the data storage software installed. In one aspect, this option may cost significantly less than it would to install the software. Furthermore, it saves the IT professional the time required to install the software. Further, these benefits are compounded as the number of client machines is increased.","This software design is also of benefit to the small business consumer. In another aspect, a small business owner may arrange to have an outside contractor administer their data storage system. The ability to purchase a client machine having pre-installed data storage software which may be registered substantially automatically with a server allows the small business owner to quickly deploy client computers without the need for an on-site IT professional. Thus, decoupled installation of the data storage software allows the small business owner to implement a data storage system at a lower cost than would otherwise be possible.","Furthermore, in certain embodiments, the systems and methods described herein can advantageously be implemented using computer software, hardware, firmware, or any combination of software, hardware and firmware. In certain embodiments, systems are implemented as a number of software modules that comprise computer executable code for performing the functions described herein. In certain embodiments, the computer-executable code is executed on one or more general purpose computers. However, a skilled artisan will appreciate, in light of this disclosure, that any module that can be implemented using software to be executed on a general purpose computer can also be implemented using a different combination of hardware, software or firmware. For example, such a module can be implemented completely in hardware using a combination of integrated circuits. Alternatively or additionally, such a module can be implemented completely or partially using specialized computers designed to perform the particular functions described herein rather than by general purpose computers.","Moreover, certain embodiments of the invention are described with reference to methods, apparatus (systems) and computer program products that can be implemented by computer program instructions. These computer program instructions can be provided to a processor of a general purpose computer, special purpose computer, or other programmable data processing apparatus to produce a machine, such that the instructions, which execute via the processor of the computer or other programmable data processing apparatus, create means for implementing the acts specified herein to transform data from a first state to a second state.","These computer program instructions can be stored in a computer-readable memory that can direct a computer or other programmable data processing apparatus to operate in a particular manner, such that the instructions stored in the computer-readable memory produce an article of manufacture including instruction means which implement the acts specified herein.","The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions that execute on the computer or other programmable apparatus provide steps for implementing the acts specified herein.","While certain embodiments of the inventions have been described, these embodiments have been presented by way of example only, and are not intended to limit the scope of the disclosure. Indeed, the novel methods and systems described herein may be embodied in a variety of other forms; furthermore, various omissions, substitutions and changes in the form of the methods and systems described herein may be made without departing from the spirit of the disclosure. The accompanying claims and their equivalents are intended to cover such forms or modifications as would fall within the scope and spirit of the disclosure."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["These and other objects and advantages will become more apparent from the following description taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3"}]},"DETDESC":[{},{}]}
