---
title: Software processing apparatus with a switching processing unit for displaying animation images in an environment operating base on type of power supply
abstract: In a software processing apparatus, an operating environment determining unit determines whether an operating environment requires power saving or not at the time of executing a process such as an animation displaying process, and a switching unit performs a simplified process of light load by making a part of the functions of software valid in the environment requiring power saving, and executes a process of heavy load in which all of the functions of the software are valid in the environment which does not require power saving.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06910139&OS=06910139&RS=06910139
owner: Fujitsu Limited
number: 06910139
owner_city: Kaswasaki
owner_country: JP
publication_date: 20010207
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["1. Field of the Invention","The present invention relates to a software processing apparatus such as a portable notebook-size personal computer driven on a battery and a recording medium on which a computer-readable program is recorded. More particularly, the invention relates to a software processing apparatus which executes processes of software with reduced power consumption at the time of operation on a battery and a recording medium.","2. Description of the Related Arts","A notebook-size personal computer as a portable personal computer generally uses a rechargeable battery as a power supply for system operation. Since the power capacity of the rechargeable battery is limited, an operation time when the personal computer is carried is limited. Generally, a longer operation time of a portable device is requested. In the notebook-size personal computer as well, in order to increase the operation time when the computer is carried, various power saving techniques are used. Power saving by automatically adjusting an operation clock frequency of a CPU (hereinbelow, simply called a \u201cCPU clock frequency\u201d) used as one of the power saving techniques is a technique which decreases power consumption by minimizing the CPU clock frequency depending on a processing amount requiring the CPU.","During the power saving carried out by the automatic adjustment of the CPU clock frequency is performed, the smaller the processing amount requiring the CPU, a higher power saving effect can be obtained by lowering the CPU clock. In other words, during the power saving carried out by the automatic adjustment of the CPU clock frequency, the power saving effect is higher on a process in which it is sufficient to perform an operation of drawing a still picture once, the power saving effect is higher. On the contrary, the power saving effect is lower on a process of repeating an operation of drawing an image in animation or the like. Software, however, always perform routine processes irrespective of an environment. In the case of one software, a process performed by the software is either a process of light load on which the power saving effect is high or a process of heavy load on which the power saving effect is low. It is not expected that power saving is attempted by software itself during power saving performed by automatic adjustment of the CPU clock frequency.","According to the invention, there are provided a software processing apparatus and method which determines whether an environment needs power saving or not and realizing an operation optimum to each environment by software, and a recording medium on which the program is stored.","A software processing apparatus of the invention is characterized by including: an operating environment determining unit which determines whether an operating environment requires power saving or not at the time of executing an application program such as a CPU meter; and a switching unit which performs a process of heavy load in a first environment which does not require power saving and performing a process of light load in a second environment requiring power saving. The operating environment determining unit determines a status where the apparatus operates on an external power supply as the first environment, and determines a status where the apparatus operates on a battery as the second environment. According to the invention, consequently, in the operating environment in which the apparatus operates on the external power supply and power saving is not therefore necessary, a normal process in which all of the functions of the software are valid is performed. In the operating environment in which the apparatus operates on a battery and power saving is necessary, the inherent functions of the software are simplified so as not to be lost to thereby reduce the load on the CPU. By the reduction in load on the CPU, the CPU clock frequency is lowered to the minimum of the process of light load by a function of automatically adjusting the CPU clock frequency in the state where the apparatus operates on the battery. Thus, the power consumption can be decreased.","In this case, the process of light load is a process obtained by simplifying the process of heavy load. The simplified process is a part of the process of heavy load. For example, software to which the invention is directed is an animation displaying program for sequentially, repeatedly drawing a plurality of images by being operated by a timer interruption every predetermined time. In this case, the switching unit executes the simplified process of light load obtained by making a part of the images of animation valid in the first environment requiring power saving, and performs the process of heavy load in which all of images in the animation are valid in the second environment which does not require power saving. In the animation, usually, the larger the number of drawing operations is, the heavier the load on the CPU becomes, and the power saving effect is reduced. In the invention, in the first environment requiring power saving, the drawing operation which displays only the last image of the animation is performed once to reduce the load on the CPU. Consequently, the power consumption can be further reduced also by the software during the power saving operation of automatically adjusting the CPU clock frequency. The simplified process may be a process of using data obtained by processing data used in the process of heavy load. The following is examples of the software.\n\n","The simplified process is another process realizing the same function as that of the process of heavy load. For example, the software is a program which displays a graphical user interface. The switching unit  executes a process of relatively light load simplified by switching a user interface to dialogue display in an environment requiring power saving.","The apparatus also includes a setting unit which sets switching between the process of heavy load and the process of light load to be valid or invalid. For example, a property of switching a software process by an operating environment determining unit  and a switching unit  to be valid or invalid is provided. The user can select either a normal software operation or a simplified software operation for power saving as necessary. The process of heavy load and the process of light load are performed by a processor, and the processor changes an operation clock frequency in accordance with load of a process.","Further, in another mode of the invention, there is provided a software processing apparatus including: an operating environment determining unit which determines an operating environment of a system; and a switching unit which performs switching between a process of heavy load on a processor and a process of light load on the processor in accordance with the operating environment.","The invention further provides a computer-readable recording medium on which a program of a software process is recorded, in which the program to be executed by the computer includes:\n\n","The above and other objects, features, and advantages of the present invention will become more apparent from the following detailed description with reference to the drawings.",{"@attributes":{"id":"p-0029","num":"0032"},"figref":"FIG. 1","b":["11","10","12","14","16","18","22","20","24","26","24","28","26","30","30","32","34","34","32","30","34","30","11","10","32","34","10","12","10","11","38","36","14","38","36","10","36","34","34","36","30","40","42","38"]},{"@attributes":{"id":"p-0030","num":"0033"},"figref":["FIG. 2","FIG. 2"],"b":["44","36","12","46","50","46","44","48","32","34","44","32","34","42","38","40","50","60","56","38","22","58","48","46","44","50","34","40","42","32","42","40","48","48","50","34","48","50","52","10","48","50","54","10"]},{"@attributes":{"id":"p-0031","num":"0034"},"figref":["FIGS. 3A","FIG. 2","FIG. 3A","FIG. 3B","FIG. 3A","FIG. 3A","FIG. 3C","FIG. 3A"],"b":["3","50","62","64","66","68","62","64","66","68","62","64","66","68","54","50","2","62","1","64","1","66","1","68","1","62","2","64","2","66","2","68","2","62","64","66","68","50","2","62","62","1","68"]},{"@attributes":{"id":"p-0032","num":"0035"},"figref":["FIG. 4","FIGS. 6A and 6B","FIGS. 6A and 6B","FIG. 4","FIG. 2","FIG. 5"],"b":["46","44","2","44","50","1","2","3","48","50","3"]},"In , the animation displaying process of the CPU meter is performed in such a manner that, first, the system power environment is obtained in step S. Specifically, the operating environment determining unit  detects whether the apparatus operates on the battery  in the power supply unit  at this time or not from the power control device driver  via the API . Subsequently, in step S, whether or not the AC adapter  is connected and the external power is supplied from the AC adapter  is checked. When the apparatus does not operate on the AC adapter , the apparatus operates on the battery . The program therefore advances to step S where the drawing flag \u201cfAlready\u201d is checked. Since the drawing flag is set to \u201cFALSE\u201d indicating that the basic images are displayed twice in step S in , not \u201cTRUE\u201d indicating that the drawing has been finished, the program advances to step S where an image of image number 0 initialized in step S in  is selected among a plurality of prepared animation images and is displayed. In step S, \u201cTRUE\u201d indicating that the drawing is finished is set to the drawing flag, and a simplified animation process performed with light load in the battery operation is finished once. Subsequently, when the process of  is started by the timer interruption after (n) seconds of the timer initialized in step S in , the processes in step S, S, and S are similarly performed. Since the drawing flag is set to \u201cTRUE\u201d by the process of the first time, the display of the image number 0 in step S is skipped, and the process is finished via step S. As a result, in the case of the system power environment where the apparatus operates on the battery, the still image of image number 0 is just displayed at the time of the animation displaying process of the CPU meter of the first time. No image is drawn at timer interruptions after that. Since it is sufficient to perform the drawing process in step S once, the burden on the CPU  in the animation displaying process is largely lessened in the operating status on the battery, so that the power consumption can be reduced. Specifically, in the operating status on the battery , the power saving process by the automatic adjustment of the CPU clock frequency is executed on the basis of a process by another application. In the power saving process by the automatic adjustment of the CPU clock frequency, the CPU clock frequency is lowered to the minimum in accordance with the processing amount requested to the CPU , thereby decreasing the power consumption. In the operating status on the battery , therefore, in the animation display process of the CPU meter in , the image drawing operation is performed only once by the timer interruption. As a result, the processing amount requested to the CPU  is reduced, and the clock frequency is lowered to the minimum by the CPU clock frequency automatic adjusting function, so that the power consumption can be reduced. On the other hand, in the case of the operating status on the AC adapter  in step S, since it is the operating environment which does not require power saving, the normal animation displaying process is executed in steps S to S. In the normal animation displaying process, in step S, an image having image number \u201ciCounter\u201d initialized in step S in  is displayed. In step S, the image number is incremented by one. In step S, a check is made to see whether the image number exceeds the predetermined maximum number or not. When the image number does not exceed the maximum number, in step S, the drawing flag is set to \u201cTRUE\u201d indicating that the drawing is finished, and the program waits for the next timer interruption in (n) seconds. By repeating the steps S, S, S to S, and S performed by the timer interruption, the images are drawn, for example, in accordance with the order as shown in , and the animation is displayed. When the image number exceeds the preset maximum number in step S during the animation displaying process, the program advances to step S where the image number is initialized again to \u201c0\u201d. By repeating the processes performed by the timer interruption with the maximum image number, the animation is displayed.",{"@attributes":{"id":"p-0034","num":"0037"},"figref":["FIGS. 6A and 6B","FIG. 4"],"b":["5","48","1","4","52","1","5","10","54","2","3","10","2","5"]},"The processes of the program list of  will be described as follows. When the routine \u201csample\u201d is called by a timer or the like, the variable #a is assured in a stack area. The system power status is stored in the variable #a by the API which executes the system power status obtaining process #b. By a decision statement #d, when the system operates on battery, the process is shifted to a decision statement #e. When the system operates on the AC adapter, the process is shifted to a decision statement #f. The decision statement #e to which the process is shifted when the system operates on the battery is a statement to determine whether no image is drawn or not. In the case of \u201cFALSE (not drawn)\u201d for the decision statement #e, the process is shifted to #e where the head image hBMP[0 ] of the animation is drawn by \u201cShowImage\u201d. On the other hand, in the case if \u201cTRUE (drawn)\u201d to the statement #e, the process shifts to #e. Since the image has been already drawn, the process shifts to #e and no drawing process is performed. When the processes are finished, the process shifts to #g. By such processes of #e to #e, although the head image of the animation is drawn for the first time, the image is not updated for the subsequent calls, and the still image is continuously displayed. On the other hand, when it is determined by the decision statement #d that the system operates on the AC adapter and the process shifts to #f, the process automatically shifts to #f. In #f, \u201cthe n-th image\u201d according to the value of the animation counter in #f is drawn. Subsequently, the process shifts to #f where the animation counter of #f is incremented by one, thereby indicating an image to be drawn next, and the animation counter value is compared with the maximum value of the animation counter of #f. When the value of the animation counter exceeds the maximum value, the process shifts to #f where 0 indicative of the head image is set in the animation counter of #f. As a result, by #f to #f in the operation on the AC adapter, images are displayed in accordance with the order of 0, 1, . . . , maximum value, 0, 1, . . . , maximum value, . . . , thereby generating animation of the images. In the last #g, \u201cTRUE\u201d is set in the drawing flag of the variable #c, and it is stored that the images are already displayed.",{"@attributes":{"id":"p-0036","num":"0039"},"figref":["FIGS. 7A","FIGS. 7A","FIG. 7A and a","FIGS. 7A"],"b":["7","1","5","6","7","70","72","70","7","70","74","1","74","5"]},{"@attributes":{"id":"p-0037","num":"0040"},"figref":["FIG. 8","FIGS. 7A","FIG. 8","FIGS. 7A","FIGS. 4"],"b":["1","4","7","74","5","7","70","72","7","32"]},"In the example, however, in order to display the image of , as an image to be displayed in the operating status on the battery in the flowchart of FIG.  and the program lists of , it is set to display the last image of the animation, which is indicated by the last array element number.",{"@attributes":{"id":"p-0039","num":"0042"},"figref":["FIGS. 9A","FIGS. 9A","FIGS. 9B and 9C","FIG. 8","FIGS. 3","FIGS. 9A","FIG. 10","FIG. 9C","FIGS. 7A","FIGS. 9A"],"b":["9","9","9","76","1","75","76","2","76","3","76","1","76","3","8","76","1","9","76","3","76","3","7","9"]},{"@attributes":{"id":"p-0040","num":"0043"},"figref":["FIG. 11","FIGS. 4 and 5","FIGS. 7A","FIG. 11"],"b":"7"},"void EcoAnimation(HWND hparent, HWND hTarget, HBITMAP hBMP, int iNumImage, UNIT uiinterval)","where,","HWND hparent: window handle of a parent window","HWND hTarget: window handle of a target window which displays animation","HBITMAP hBMP: pointer to the array of images to be displayed in animation int iNumImage: the number of images to be displayed in animation","UNIT uiInerval: animation interval (unit: ms)","In the case of storing the CPU meter initializing process in a library, the initializing process of  is executed in response to a call of the API defined as above. In the initializing process of , the image number is initialized in step S, a drawing flag is initialized in step S, and the timer is initialized in step S. The initialization in steps S to S is the same as that including the animation displaying process in FIG. . In the initializing process in the library, further, the maximum value of the image number is initialized in step S, and a target window on which an image is to be drawn is set to \u201chTarget\u201d showing an image pattern. After that, the process returns to the library. By the initializing process stored in the library, the CPU meter animation displaying process of  is started by the timer interruption every predetermined time set in the timer initialization in step S. In accordance with the parameters set in the initializing process, either a still image at the time of the operation on the battery or regular animation at the time of the operation on the AC adapter is displayed.",{"@attributes":{"id":"p-0046","num":"0049"},"figref":["FIG. 12","FIG. 12"],"b":["1","2","3"]},{"@attributes":{"id":"p-0047","num":"0050"},"figref":["FIG. 13","FIG. 12"],"b":["12","1","78","82"]},"The registry Y in step S in  is a setting information storing area on the hard disk of the OS. In the OS of the Windows series of Microsoft Corporation, generally, the setting regarding software is stored in the registry. The registry has a hierarchical structure like the file system, and specific information is identified by a registry key (corresponding to a path\/file name in the file system). The following can be used as a registry key to which the user setting of switching the property in  is stored.","HMY CURRENT","USER\u00a5Software\u00a5Fujitsu\u00a5EcoAnimation\u00a5Action","where, when the value of \u201cAction\u201d is 0, operation switching according to the environment is not performed. When the value of \u201cAction\u201d is 1, operation switching according to the environment is performed.",{"@attributes":{"id":"p-0050","num":"0053"},"figref":["FIG. 14","FIGS. 12 and 13"],"b":["0","1","9","5","0","1","6"]},"The foregoing embodiment has been described by, as an example, the switching between the process of light load on the CPU and the process of heavy load on the CPU in accordance with the system operating environment in the animation displaying process as an accessory operation in the CPU meter initializing process. The invention is not limited to the foregoing embodiment but can be applied to an appropriate apparatus and software. In the foregoing embodiment, when the system operates on the battery, the operating environment is determined as that requiring power saving. When the system operates on the external power source, the operating environment is determined as the environment which does not require power saving. The invention is not limited to the foregoing arrangement. For example, it is also possible to define the state where the remaining amount of charges in the battery is small as an operating environment requiring power saving, define the state where the remaining amount of charges in the battery is large as an operating environment which does not require power saving, determine the operating environment on the basis of the definition while the apparatus operates on the battery, and perform the switching between the process of light load and the process of heavy load on the basis of the determination result. The remaining amount of charges in the battery can be obtained by the above-described API or other known techniques.","In an apparatus having two operation modes of a normal mode and a power saving mode, irrespective of the kind of the operation power source or the remaining amount of charges in the battery, it is also possible to define the state where an operation in the normal mode is instructed as the operating environment which does not require power saving, define the state where an operation in the power saving mode is instructed as the operating environment requiring power saving, and perform the switching between the process of light load and the process of heavy load on the basis of the operation mode designated by the user. The operation mode can be obtained by known techniques. For example, it is obtained from management information of the operating system. That is, according to the invention, it is sufficient to define two relative states of a state in which power saving is necessary and a state in which power saving is unnecessary, determine whether the present state corresponds which one of the states, and switch the process to be executed according to the determination result. Software to which the invention is directed, which switches the process to be executed between the process of heavy load and the process of light load depending on whether the operating environment requires power saving for the CPU or not includes the following as examples.","(I) A program which executes floating-point operations. In the environment in which power saving is not necessary, the floating-point operation including the fractional portion is executed. On the other hand, in the environment requiring power saving, a process of relatively light load simplified by discarding the fractional portion and by using integers is executed.","(II) A moving image reproducing program. In the environment in which power saving is not necessary, a switching unit reproduces all of moving images as smooth reproduction images as in television. On the other hand, in the environment requiring power saving, a thinning process of thinning moving images so as not to be conspicuous or a process of relatively light load simplified by lowering the resolution is executed.","(III) A program which displays, for example, the \u201chelp\u201d function as a graphical user interface such as a dolphin in \u201cWord\u201d of Microsoft Corporation. In the environment in which power saving is not necessary, a switching unit displays a graphical user interface. In the environment requiring power saving, the user interface is switched to a simple user interface. For example, a process of relatively light load simplified by switching \u201chelp\u201d to an ordinary dialog display is executed.","Obviously, the invention can be adapted not only to the above but also to an appropriate process which reduces load on the CPU by switching the function in the environment in which power saving is unnecessary to a part of the function or a simplified function in the environment requiring power saving in the same application.","As an example of a computer-readable recording medium in which a program which performs the switching between a process of heavy load and a process of light load in accordance with the operating environment of the invention, the program is generated as an application program, library, or other control program which runs on a computer having the configuration of FIG. . Such a program realizing the function of the invention is stored in a portable storage medium such as CD-ROM, floppy disk, DVD, magnetooptic disk, or IC card. Alternately, the program is installed from a database or other computer system by using a modem or LAN interface via a network. The installed program of the invention is loaded to a computer system, stored in the hard disk drive (HDD), and executed by a CPU by using an RAM or the like.","According to the invention as described above, in the operating status in which the external power is supplied from the AC adapter and power saving is therefore unnecessary, a process of heavy load on the CPU as an inherent processing function, for example, display of animation is executed. In the operating status on the battery, which requires power saving, a simplified process, for example, display of only a still image is performed. Consequently, the load on the CPU is reduced in the operation time in which power saving is necessary. As a result, a period in which the CPU clock frequency is lowered by the CPU clock frequency automatic adjustment becomes longer. By the reduction in the load on the CPU in accordance with the operating environment of dynamic power saving in such software, the operating time of displaying an image of a portable device using a rechargeable battery such as a notebook-sized personal computer can be increased.","The invention includes appropriate modifications having the same object and advantages and is not limited to numerical values presented in the foregoing embodiment."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0015","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0019"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0020"},"figref":"FIGS. 3A","b":"3"},{"@attributes":{"id":"p-0018","num":"0021"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0022"},"figref":["FIG. 5","FIG. 1"]},{"@attributes":{"id":"p-0020","num":"0023"},"figref":["FIGS. 6A and 6B","FIG. 5"]},{"@attributes":{"id":"p-0021","num":"0024"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0025"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0023","num":"0026"},"figref":"FIGS. 9A","b":"9"},{"@attributes":{"id":"p-0024","num":"0027"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0025","num":"0028"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0026","num":"0029"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0027","num":"0030"},"figref":["FIG. 13","FIG. 10"]},{"@attributes":{"id":"p-0028","num":"0031"},"figref":"FIG. 14","b":"11"}]},"DETDESC":[{},{}]}
