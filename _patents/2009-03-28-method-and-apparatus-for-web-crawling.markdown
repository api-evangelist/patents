---
title: Method and apparatus for web crawling
abstract: A method and system for retrieving data from a webpage is described herein. A scheduler organizes, or rather orders, a group of webpage identifiers according to some predetermined criteria. Based upon this ordering, a fetcher may be configured to fetch data from webpages identified by the identifiers. To promote efficiency and reduce the latency between when a webpage is updated and when the fetcher retrieves data from the webpage, the scheduler may be configured to reorder the identifiers in such a manner that it causes an identifier that was less relevant, and would not have been sent to the fetcher, to become more relevant. In this way, the method and system may be particularly useful for retrieving data related to webpages that are updated frequently, such as social media webpages, for example.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08712992&OS=08712992&RS=08712992
owner: Microsoft Corporation
number: 08712992
owner_city: Redmond
owner_country: US
publication_date: 20090328
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["A web crawler (also referred to as a bot, spider, ant, etc.) is typically configured to browse the web in a methodical, automated manner with the goal of acquiring information about content posted to a webpage. The information it acquires may vary depending upon the intended purpose of the information. For example, crawlers that are used in conjunction with search engines may be designed to make a copy of the webpage being crawled so that the search engine may index the webpage. Crawlers may also be used for maintenance checks of a webpage (e.g., making sure links in the page work properly) and\/or to collect email addresses or other hyperlinks listed on a webpage.","Unfortunately, the web has more webpages than a crawler is capable of crawling. Additionally, webpages are altered so quickly (e.g., as new content is posted on existing webpages, content is deleted from existing webpages, new webpages are created, etc.) that it is difficult for crawlers to know which webpages to crawl. Therefore, web crawlers are programmed with a list of uniform resource locators (URLs) that identify which webpages the crawler is supposed to crawl. When a webpage from the list is crawled, the URL is added to a second list that contains all of the URLs that have been crawled (e.g., so that the webpage is not crawled again before other webpages are crawled). Additional URLs can be added to the list based upon the content of a crawled webpage (e.g., a URL on a crawled webpage identifies another webpage). The web crawler continuously cross checks the two lists so that the same webpage is not crawled twice. Once all of the webpages on the list have been crawled, the crawler erases the second list and repeats the process.","While current web crawlers are effective, it may be hours if not days before a crawler revisits a webpage. Content that is only relevant for a short period of time, such as content from social media webpages (e.g., social networking sites, blogs, microblogs, etc.), may not be crawled while it is relevant. Therefore, a web crawler that can crawl a large number of webpages while maintaining a low latency between the time of publication on the webpage and the time of collection would be useful.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key factors or essential features of the claimed subject matter, nor is it intended to be used to limit the scope of the claimed subject matter.","As provided herein a web crawler may be comprised of a scheduler and a fetcher. The scheduler orders a group of webpage identifiers identifying webpages(e.g., URLs) to determine which webpages the fetcher is to fetch data from. The scheduler may be configured to selectively reorder the group of webpage identifiers based upon input the scheduler receives. For example, the scheduler may reorder the webpage identifiers based upon a ping received from a webpage and\/or feedback from the fetcher. In this way, the scheduler may adjust the order in which the fetcher visits webpages to reduce the latency period when a webpage is altered and when the fetcher retrieves data related to the alteration.","The fetcher receives relevant identifiers from the scheduler and retrieves data from the webpages identified by the received identifiers. The fetcher may also generate feedback to the scheduler. For example, the fetcher may generate feedback instructing the scheduler to reorder the identifiers in such a way that an identifier identifying a webpage hosted on a host that the fetcher is already in communication with becomes relevant.","Numerous features of the crawler may allow it to crawl a large number of webpages while maintaining a low latency period. For example, the group of identifiers may be predefined so that it may be read into the memory of the scheduler, promoting efficiency. Additionally, the scheduler may order the group such that more relevant webpages and\/or the webpages with the more recent changes can be crawled before and\/or more often than other webpages, for example. In this way, the crawler may be particularly suited for crawling portions of the web that are rapidly changing, such as social media webpages.","To the accomplishment of the foregoing and related ends, the following description and annexed drawings set forth certain illustrative aspects and implementations. These are indicative of but a few of the various ways in which one or more aspects may be employed. Other aspects, advantages, and novel features of the disclosure will become apparent from the following detailed description when considered in conjunction with the annexed drawings.","The claimed subject matter is now described with reference to the drawings, wherein like reference numerals are used to refer to like elements throughout. In the following description, for purposes of explanation, numerous specific details are set forth in order to provide a thorough understanding of the claimed subject matter. It may be evident, however, that the claimed subject matter may be practiced without these specific details. In other instances, structures and devices are illustrated in block diagram form in order to facilitate describing the claimed subject matter.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1","b":["100","100","102","104"]},"It will be appreciated that since the crawler receives a predefined group, or rather a set of identifiers (e.g., that do not get updated as the crawler crawls pages), the group may be stored into memory for the crawler. Storing the group into memory for the crawler, for example, provides numerous benefits over crawlers that merely create a list of identifiers based upon previously crawled webpages and\/or crawlers that are in constant communication with a source external to the crawler that instructs the crawler where to crawl next.","At , the webpage identifiers are ordered according to predetermined criteria. It will be understood to those skilled in the art that numerous consideration for ordering webpage identifiers are contemplated. For example, the ordering may take into account how frequently the content of a webpage changes (e.g., a modification frequency), the importance of the webpage, politeness considerations of the crawler (e.g., so that a site does not feel \u201cattacked\u201d), and\/or whether the webpage has recently generated a ping. Based upon these and\/or other considerations, the webpage identifiers may be order so that the crawler, or rather a fetching portion of the crawler, can retrieve data from webpages in an orderly manner. That is, the order of the webpage identifiers may determine the order in which webpages are to be crawled. In this way a balance may be struck between the crawler's system capacity and the webpages' relative relevance (e.g., the more important webpages may be crawled before the less important webpages).","At , a first webpage identifier, positioned in a ready position, is transmitted to a fetcher. That is, the first webpage identifier is transmitted from a first portion of the crawler (e.g., a scheduler) to a second portion of the crawler (e.g., the fetcher) configured to fetch, or rather copy, data from a webpage identified by the first webpage identifier.","It will be appreciated that the terms \u201cready position\u201d are used herein in a broad sense to refer to a position in the ordered webpage identifiers that identifies, or rather signals, a webpage identifier that is ready to be transmitted to the fetcher. Generally, the webpage identifier in the ready position is an identifier that identifies a more relevant webpage relative to the webpages identified by the other webpage identifiers (e.g., a more important webpage, a webpage that is more likely to contain new content, etc.). Where the webpage identifiers are ordered in a list, for example, the webpage identifier at the top of the list may be considered to be in the ready position. However, it will be appreciated that the ready position may be any position that assists in identifying which webpage identifier is to be transmitted to the fetcher next (e.g., not necessarily the top position).","At , data from a first webpage, identified by the first identifier, is retrieved. It will be appreciated that the manner in which the data is retrieved may be similar to those manners used by other crawlers and known to those skilled in the art. The retrieved data may comprise a copy of a portion of the webpage's content (e.g., text, hyperlinks, etc.) and\/or information related to the webpage's content (e.g., when the content was altered, who posted the content, etc.).","At , the webpage identifiers are reordered such that a second identifier is positioned in the ready position based upon at least one of feedback from the fetcher and a ping from a webpage. That is, a webpage identifier that was not moved into the ready position simply because the first identifier was transmitted (e.g., a next identifier) is moved into the ready position because of communication with the fetcher and\/or a source external to the crawler (e.g., a webpage). In this way, the second identifier replaces the next identifier in the ready position (e.g., causing the second identifier, rather than the next identifier, to be transmitted to the fetcher when the fetcher has available bandwidth, or rather capacity, to retrieve data from another webpage).","The reordering of webpage identifiers based upon communication may allow the crawler to be dynamic, thus allowing it to respond to (e.g., fetch) changes in webpages quickly. That is, the communication may allow an identifier that is identifying a more relevant webpage (e.g., because the webpage was just updated) to be reordered, and positioned in the ready position, so that there is low latency between when the webpage is updated and when it is crawled.","It will be appreciated that there are numerous manners for determining when\/how to reorder the webpage identifiers. In one embodiment, a portion of the crawler (e.g., a scheduler) is configured to listen for, or rather receive, pings from webpages that are identified by identifiers of the first grouping. When the scheduler receives a ping from a webpage (e.g., indicating that the content of the webpage has changed), the scheduler may move the identifier identifying the altered webpage to the ready position.","Unfortunately, some webpages do not issue pings when their content is modified. Additionally, some webpages issue so many pings that a crawler would be unable to crawl other webpages (since the identifiers identifying webpages that have issued pings are moved to the top). Therefore, the list may be reordered according to other considerations (e.g., instead of or in conjunction with pings).","Feedback from the fetcher portion of the crawler is one of the other considerations that may cause the webpage identifiers to be reordered. For example, the fetcher may comprise a parser configured to parse the data retrieved by the fetcher, identify a characteristic of the webpage, and\/or make a prediction about the webpage based upon the data retrieved. In one example, the parser identifies the dates of previous alterations and predicts that date of the next alteration (e.g., post) based upon the dates of the previous alterations. This information may be communicated to the scheduler portion of the crawler, for example, and the scheduler may reorder the webpage identifiers in a manner consistent with the prediction (e.g., ranking the webpage identifiers according to when their respective webpages are likely to change).","The feedback from the fetcher may also, or instead, relate to politeness considerations of the fetcher. For example, the fetcher may generate a feedback instruction that instructs a scheduler portion of the crawler, for example, to reorder the grouping such that an identifier identifying a webpage that is hosted by a host that the fetcher is already operably coupled to (e.g., a first host) is moved into the ready position. In this way, the fetcher may crawl webpages faster because it does not have to reestablish a connection with the host at a later time, for example.","It will be understood to those skilled in the art that politeness considerations are currently implemented on crawlers to mitigate the impact a crawler has on a webpage's host and\/or to reduce the chances a webpage's host will mistake the crawler as an attack on its server. For example, the fetcher may be instructed to not fetch data from a webpage if the webpage is hosted by a host that the crawler has already crawled twenty times in the past five minutes. While current crawlers may take politeness into consideration when determining whether to crawl a page, current crawlers do not reorder the grouping based upon politeness considerations. That is, current crawlers to not move a webpage identifier to the ready position because the crawler is already connected to the host associated with the webpage identified by the identifier.","At , the method ends.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 2","FIG. 1"],"b":["200","100","202"]},"The system  (e.g., a crawler) comprises a scheduler  and a fetcher . The scheduler  is configured to receive a first group of webpage identifiers (e.g., URLs), identifying webpages, from a group creator  (e.g., a human operator and\/or a computer program) that creates the first group based upon predefined criteria. The first group of identifiers is then ordered by the scheduler  to create a schedule for the fetcher . In this way, the scheduler  acts as a manager that instructs the fetcher  where to go to fetch data.","It will be appreciated that once the first group is received by the scheduler  it may be unchangeable, or rather, static. That is, additional identifiers may not be added to the group (e.g., based upon webpages crawled by the crawler) and\/or identifiers may not be removed from the group until the scheduler  is synced with group creator . It will be understood to those skilled in the art that the use of a static group may be beneficial over the prior art because it simplifies the acts and increases efficiency. For example, if the group is static, it may be read into a memory storage component  operably coupled to the scheduler . Reading the identifiers into memory may allow the scheduler  to quickly review and\/or recall identifiers that the scheduler  determines are relevant.","Webpage identifiers that the scheduler  determines to be more relevant (e.g., relative to the other identifiers in the first group) are positioned by the scheduler  in the ready position (e.g., a position designated for an identifier ready to be transmitted to the fetcher ). Because relevancy changes over time, the scheduler  is also configured to selectively reorder webpage identifier based upon one or more predetermined considerations. That is, the scheduler  may remove an identifier from the ready position and replace it with a second identifier, if the scheduler  determines the second identifier has become more relevant than the identifier previously placed in the ready position but not yet transmitted to the fetcher . For example, the scheduler  may reorder the webpage identifiers based upon feedback from the fetcher , a parser  and\/or a webpage (e.g., , , etc.). It will be appreciated that several considerations that the scheduler  may take into account when determining how to order and\/or reorder the identifiers are illustrated in .","When the fetcher  has available capacity (e.g., because it has an open port), the scheduler  may be configured to issue a request related to a webpage identifier positioned in the ready position. That is, a request related to the webpage identifier that is considered to be more relevant (relative to the other identifiers in the first group), and therefore positioned in the ready position when the fetcher  has available capacity, is transmitted to the fetcher .","The fetcher  is in operable communication with the scheduler  and is configured to receive the request and fetch data from a webpage identified by the first identifier. For example, if the first identifier identifies webpage one , the fetcher  may initiate a communication channel with a host associated with webpage one  to retrieve desired data related to webpage one  (e.g., a copy of the page, hyperlinks from the page, etc.).","It will be understood to those skilled in the art that as more capacity becomes available (e.g., because the fetcher  finishes retrieving data from the webpage one ) the fetcher  may receive a second webpage identifier identifying webpage two, and the fetcher  may initialize a connection with a host associated with webpage two . In this way, the fetcher may connect with hosts associated with N number of webpages, where N is equal to the number of webpages identified by webpage identifiers in the first group of identifiers.","In one example, the fetcher  is also configured to issue feedback to the scheduler . For example, the fetcher  may notify the scheduler  when there are politeness issues (e.g., so that the scheduler  does not transmit a request that cannot be fulfilled because of politeness limitations) and\/or issue a request to the scheduler  if it determines it would increase efficiency, for example, to receive an identifier identifying a webpage that is hosted on the same host as a webpage from which data was very recently retrieved (e.g., because the connection with the host is already initialized).","In one embodiment, the system also includes a parser . The parser  may be configured to parse the retrieved data and identify a characteristic of the webpage the data is related to. For example, the parser  may be configured to predict the date of a next update to the webpage based upon the date(s) of recent updates to the webpage. It will be appreciated that once the parser identifies a characteristic, the parser may generate parsed output that may be transmitted to the scheduler  and used as a consideration for reordering the order of the webpage identifiers (e.g., where they are ordered based upon the predicted date of the next change).",{"@attributes":{"id":"p-0041","num":"0040"},"figref":["FIG. 3","FIG. 2","FIG. 2","FIG. 2"],"b":["300","204","300","302","300","208","304","306","308","212","310","312","310","312","314"]},"The scheduler  also comprises a reordering component . The reordering component  is configured to reorder the first group  based upon predetermined considerations. In the illustrated example, the reordering component  is configured to reorder the first group  based upon input received from a ping input component  (e.g. configured to receive pings from updated webpages) and input received from a parser input component  (e.g., configured to receive predictions from a parser).","Generally, the scheduler  may be configured to transmit requests to a fetcher (e.g.,  in ) based upon the order of the identifiers (e.g., the scheduler works its way down the first group  of identifiers). However, when the reordering component  receives information from the ping input component  and\/or the parser input component , the reordering component  may reorder the first group  (e.g., as illustrated by the reordered first group ) based upon the received information. Reordering the first group  may cause the scheduler  to transmit requests in a different order (e.g., because the identifiers are in a different order). It will be appreciated that the reordering component  may be configured to reorder the first group  based upon other considerations as well. For example, if the fetcher is backlogged (e.g., the fetcher cannot fetch data as quickly as pings come in), the reordering component  may consider secondary considerations, such as the value of fetching content from the webpage (e.g., based upon viewership of the respective webpages) relative to the value of other webpages, when determining the order of identifiers.","In one example, the identifiers may be reordered such that webpage D  is in the ready position  if a ping (e.g., indicating that an update was made) from a webpage identified by webpage D  was received by the ping input component . It will be appreciated that in the illustrated example, the ping caused the reordering component  to alter the expected update date  of the webpage identified by webpage D  to the current time, which in turn caused webpage D  to be moved into the ready position (e.g., because it has an earlier expected update date). However, the reordering component  may use techniques other than altering the expected update date to reorder the identifiers when a ping is received.","Webpage identifiers may also be moved further away from the ready position . In the illustrated example, webpage eight  is moved to a position further away from the ready position  because the parser input component  received information (e.g., from a parser) predicting that a webpage identified by webpage eight  would not be updated again until Aug. 21, 2009 at 12:42 . For example, if a fetcher just fetched data from a webpage identified by webpage eight  (e.g., because a ping from the webpage identified by webpage eight  was received by the ping input component  one second earlier) the reordering component  may reorder the identifiers based upon the new expected update date  of the webpage identified by webpage eight .","As illustrated in , the reordering component  is not obligated to fetch data from each of the webpages identified by identifiers on the first group  before refetching data from a webpage. For example, data from a webpage identified by webpage eight  may be fetched twice before a webpage identified by webpage C  is fetched once. In this way, the scheduler  promotes acquiring data from webpages while it is relevant rather than waiting until data from all of the webpages identified by identifiers in the first group have been acquired. It will be appreciated that waiting until data from all of the webpages has been fetched before revisiting a webpage would make it more difficult to acquire data when it is fresh, or rather, relevant.","The scheduler  may also comprise a request component  that is configured to issue request to a fetcher (e.g.,  in ) based upon an identifier in the ready position  (e.g., webpage D ). In one example, the fetcher requests another identifier from the scheduler  when it has an available port, and the request component  generates a request, or rather instruction, that instructs the fetcher which webpage to retrieve data from next (e.g., based upon the order of the identifiers).",{"@attributes":{"id":"p-0048","num":"0047"},"figref":["FIG. 4","FIG. 2","FIG. 2"],"b":["400","204","400","402","400","208","404","406","406","400","408","410","408","412","414","416","410","418","420","422"]},"The scheduler  may also comprise a reordering component  (e.g.,  in ) configured to reorder the first group  based upon predetermined considerations. In the illustrated example, the reordering component  is configured to reorder the identifiers of the first group  based upon input received from a feedback input component  (e.g., configured to receive feedback from a fetcher) and input received from a ping input component  (e.g. configured to receive pings from updated webpages).","Generally, the scheduler  is configured transmit requests to a fetcher (e.g.,  in ) based upon the order of the identifiers (e.g., the scheduler works its way down the first group  of identifiers). However, when the reordering component  receives information from the feedback input component  and\/or the ping input component , the reordering component  may reorder the first group  according to the information received (e.g., as illustrated by the reordered first group ). Reordering the first group  may cause the scheduler to transmit request in a different order (e.g., because the identifiers are in a different order).","For example, suppose data is fetched from a webpage identified by webpage one  (e.g., causing webpage one  to be moved to the bottom of the order as illustrated in the reordered first group ). Since a fetcher (e.g.,  in ) already has established a communication channel with the host  of the webpage identified by webpage one  (e.g. 168.193.56.23), the fetcher may generate feedback instructing the scheduler  to reorder the first group  such that an identifier identifying a webpage hosted on the same host  is positioned in the ready position  (e.g., and therefore may be transmitted to the fetcher). The feedback input component  may receive this feedback and relay the feedback to the reordering component  which may, in turn, determine whether there are other identifiers identifying webpages hosted on the same host . That is, the reordering component  may search the second , third , etc. groups, which group identifiers by their respective webpages' hosts, to determine whether multiple webpages are hosted on host . In the illustrated example, webpage eight  identifies a webpage hosted on the same host  as the webpage identified by webpage one , so the reordering component  may reorder the identifiers such that webpage eight  is positioned in the ready position.","The identifiers may also be reordered based upon input received by the ping input component . In the illustrated example, webpage D  was moved by the reordering component  to a second position  in the reordered first group  (e.g., so that it may be transmitted to the fetcher sooner than it would have been before the first group  was reordered) because a ping was received by the ping input component  from a webpage identified by webpage D . It will be appreciated that the reordering component  may reorder webpage one  into the ready position  and webpage D  into the second position  (e.g., rather than vice-versa) based upon secondary considerations if the feedback and a ping are received at substantially the same time. For example, the reordering component  may consider which webpage has more viewers (e.g., based upon a list comprising the viewership of each website identified by an identifier on the first group ) when determining which identifier should be placed in the ready position  (e.g., and fetched first) and which identifier should be placed in the second position .","The scheduler  may also comprise a request component  that is configured to issue request to a fetcher (e.g.,  in ) based upon an identifier in the ready position  (e.g., webpage eight ). In one example, the fetcher requests another identifier from the scheduler  when it has an available port, and the request component  generates a request, or rather instruction, that instructs the fetcher which webpage to retrieve data from next (e.g., based upon the order of the identifiers).",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 5","FIG. 2","FIG. 2"],"b":["500","206","500","502","204","500","502","504","500","514"]},"In the illustrated example, the politeness downloading verification component  makes two determinations before the fetcher  can retrieve data from the webpage . It determines whether there are already two connections with the host that is hosting the webpage identified by the identifier . If there are already two connections with the host, the request may not be fulfilled, and a feedback component  of the fetcher  may generate feedback notifying the scheduler to hold the sent request until a later time when there are not already two connections with the host.","The politeness downloading verification component  may also determine whether there has been twenty requests to the webpage's host in a current five minute cycle , for example. If twenty requests have already been made in the five minute cycle, the feedback component  may generate feedback notifying the scheduler to hold the sent request until the next cycle. In this way, the fetcher reduces that chances that a host will think that a crawler is attacking the host and ban the crawler, for example.","If the politeness downloading verification component  determines that there are not already two connections with the host  and that there have not been twenty requests to the webpage's host in the current cycle , the request may be transmitted to a retrieving component  configured to initialize a connection with the webpage's host and retrieve data from the webpage  identified by the identifier in the request. Data retrieved from the webpage may be sent to a parser, indexer, etc. for further processing.","It will be appreciated that the retrieving component  may be in operable communication with the feedback component , and the retrieving component  may be configured to notify the feedback component  to issue particular instructions to the scheduler. For example, the retrieving component  may notify the feedback component  to instructing the scheduler to reorder the identifiers in such a way that the next request sent to the fetcher  comprises a identifier identifying a webpage hosted on a host that the retrieving component  is already in communication with (e.g., so that it does not have to re-initialize a communication channel later). Issuing such feedback may allow the fetcher  to be utilized more efficiently because it may not have to spend time and resource connecting to a host that it has already connected to, for example.","Still another embodiment involves a computer-readable medium comprising processor-executable instructions configured to implement one or more of the techniques presented herein. An exemplary computer-readable medium that may be devised in these ways is illustrated in , wherein the implementation  comprises a computer-readable medium  (e.g., a CD-R, DVD-R, or a platter of a hard disk drive), on which is encoded computer-readable data . This computer-readable data  in turn comprises a set of computer instructions  configured to operate according to one or more of the principles set forth herein. In one such embodiment , the processor-executable instructions  may be configured to perform a method , such as the exemplary method  of , for example. In another such embodiment, the processor-executable instructions  may be configured to implement a system, such as the exemplary system  of , for example. Many such computer-readable media may be devised by those of ordinary skill in the art that are configured to operate in accordance with the techniques presented herein.","Although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as example forms of implementing the claims.","As used in this application, the terms \u201ccomponent,\u201d \u201cmodule,\u201d \u201csystem\u201d, \u201cinterface\u201d, and the like are generally intended to refer to a computer-related entity, either hardware, a combination of hardware and software, software, or software in execution. For example, a component may be, but is not limited to being, a process running on a processor, a processor, an object, an executable, a thread of execution, a program, and\/or a computer. By way of illustration, both an application running on a controller and the controller can be a component. One or more components may reside within a process and\/or thread of execution and a component may be localized on one computer and\/or distributed between two or more computers.","Furthermore, the claimed subject matter may be implemented as a method, apparatus, or article of manufacture using standard programming and\/or engineering techniques to produce software, firmware, hardware, or any combination thereof to control a computer to implement the disclosed subject matter. The term \u201carticle of manufacture\u201d as used herein is intended to encompass a computer program accessible from any computer-readable device, carrier, or media. Of course, those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 7","FIG. 7"]},"Although not required, embodiments are described in the general context of \u201ccomputer readable instructions\u201d being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media (discussed below). Computer readable instructions may be implemented as program modules, such as functions, objects, Application Programming Interfaces (APIs), data structures, and the like, that perform particular tasks or implement particular abstract data types. Typically, the functionality of the computer readable instructions may be combined or distributed as desired in various environments.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":["FIG. 7","FIG. 7"],"b":["710","712","712","716","718","718","714"]},"In other embodiments, device  may include additional features and\/or functionality. For example, device  may also include additional storage (e.g., removable and\/or non-removable) including, but not limited to, magnetic storage, optical storage, and the like. Such additional storage is illustrated in  by storage . In one embodiment, computer readable instructions to implement one or more embodiments provided herein may be in storage . Storage  may also store other computer readable instructions to implement an operating system, an application program, and the like. Computer readable instructions may be loaded in memory  for execution by processing unit , for example.","The term \u201ccomputer readable media\u201d as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory  and storage  are examples of computer storage media. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, Digital Versatile Disks (DVDs) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .","Device  may also include communication connection(s)  that allows device  to communicate with other devices. Communication connection(s)  may include, but is not limited to, a modem, a Network Interface Card (NIC), an integrated network interface, a radio frequency transmitter\/receiver, an infrared port, a USB connection, or other interfaces for connecting computing device  to other computing devices. Communication connection(s)  may include a wired connection or a wireless connection. Communication connection(s)  may transmit and\/or receive communication media.","The term \u201ccomputer readable media\u201d may include communication media. Communication media typically embodies computer readable instructions or other data in a \u201cmodulated data signal\u201d such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal.","Device  may include input device(s)  such as keyboard, mouse, pen, voice input device, touch input device, infrared cameras, video input devices, and\/or any other input device. Output device(s)  such as one or more displays, speakers, printers, and\/or any other output device may also be included in device . Input device(s)  and output device(s)  may be connected to device  via a wired connection, wireless connection, or any combination thereof. In one embodiment, an input device or an output device from another computing device may be used as input device(s)  or output device(s)  for computing device .","Components of computing device  may be connected by various interconnects, such as a bus. Such interconnects may include a Peripheral Component Interconnect (PCI), such as PCI Express, a Universal Serial Bus (USB), firewire (IEEE 1394), an optical bus structure, and the like. In another embodiment, components of computing device  may be interconnected by a network. For example, memory  may be comprised of multiple physical memory units located in different physical locations interconnected by a network.","Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example, a computing device  accessible via network  may store computer readable instructions to implement one or more embodiments provided herein. Computing device  may access computing device  and download a part or all of the computer readable instructions for execution. Alternatively, computing device  may download pieces of the computer readable instructions, as needed, or some instructions may be executed at computing device  and some at computing device .","Various operations of embodiments are provided herein. In one embodiment, one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media, which if executed by a computing device, will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further, it will be understood that not all operations are necessarily present in each embodiment provided herein.","Moreover, the word \u201cexemplary\u201d is used herein to mean serving as an example, instance, or illustration. Any aspect or design described herein as \u201cexemplary\u201d is not necessarily to be construed as advantageous over other aspects or designs. Rather, use of the word exemplary is intended to present concepts in a concrete fashion. As used in this application, the term \u201cor\u201d is intended to mean an inclusive \u201cor\u201d rather than an exclusive \u201cor\u201d. That is, unless specified otherwise, or clear from context, \u201cX employs A or B\u201d is intended to mean any of the natural inclusive permutations. That is, if X employs A; X employs B; or X employs both A and B, then \u201cX employs A or B\u201d is satisfied under any of the foregoing instances. In addition, the articles \u201ca\u201d and \u201can\u201d as used in this application and the appended claims may generally be construed to mean \u201cone or more\u201d unless specified otherwise or clear from context to be directed to a singular form.","Also, although the disclosure has been shown and described with respect to one or more implementations, equivalent alterations and modifications will occur to others skilled in the art based upon a reading and understanding of this specification and the annexed drawings. The disclosure includes all such modifications and alterations and is limited only by the scope of the following claims. In particular regard to the various functions performed by the above described components (e.g., elements, resources, etc.), the terms used to describe such components are intended to correspond, unless otherwise indicated, to any component which performs the specified function of the described component (e.g., that is functionally equivalent), even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary implementations of the disclosure. In addition, while a particular feature of the disclosure may have been disclosed with respect to only one of several implementations, such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application. Furthermore, to the extent that the terms \u201cincludes\u201d, \u201chaving\u201d, \u201chas\u201d, \u201cwith\u201d, or variants thereof are used in either the detailed description or the claims, such terms are intended to be inclusive in a manner similar to the term \u201ccomprising.\u201d"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
