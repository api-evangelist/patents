---
title: Passive associativity in three-dimensional (3D) modeling
abstract: A method, system, apparatus, article of manufacture, and computer-readable storage medium provide the ability to edit surface objects in a surface modeler. A dependent surface object (that is dependent on one or more input objects) having one or more properties is obtained. First user input is received that indicates that a surface associativity for the dependent surface object is off. In response to the receiving, an association between the dependent surface object and the one or more input objects is maintained. The association is used to expose the one or more properties of the dependent surface object. The properties are then displayed for editing by the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08914259&OS=08914259&RS=08914259
owner: Autodesk, Inc.
number: 08914259
owner_city: San Rafael
owner_country: US
publication_date: 20111010
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This application claims the benefit under 35 U.S.C. Section 119(e) of the following commonly-assigned U.S. provisional patent application(s), which is\/are incorporated by reference herein:","Provisional Application Ser. No. 61\/392,383, filed on Oct. 12, 2010, by Jiri Kripac, Hans-Frederick Brown, and Pei Zhan, entitled \u201cFRICTION-LESS SURFACE MODELING ENVIRONMENT\u201d.","This application is related to the following co-pending and commonly-assigned U.S. patent application(s), which is\/are incorporated by reference herein:","Utility patent application Ser. No. 13\/270,087, filed on the same date herewith, by Hans-Frederick Brown, entitled \u201cEXPANDABLE GRAPHICAL ACCORDANCES,\u201d which application claims priority to Provisional Application Ser. No. 61\/392,383, filed on Oct. 12,2010, by Jiri Kripac, Hans-Frederick Brown, and Pei Zhan, entitled \u201cFRICTION-LESS SURFACE MODELING ENVIRONMENT\u201d.","1. Field of the Invention","The present invention relates generally to computer graphics, and in particular, to a method, apparatus, and article of manufacture for three-dimensional (3D) surface modeling applications and passively associating surfaces with each other.","2. Description of the Related Art","In computer-aided design (CAD) drawing applications, parametric\/associative surface models consists of a (possibly large) collection of individual surface objects. The surface objects may depend on each other or depend on other objects or parameters. A common way a surface may become dependent on other objects is when it is created using geometry of the other objects (referred to herein as related surfaces\/geometry\/objects). An example is a blend surface that is created by selecting two edges of two other surfaces, or an offset surface that is created by offsetting another surface.","In some scenarios, it is desirable for the surfaces to keep their relations and let the system automatically preserve these relations and update all related surfaces when some surfaces are edited. In other scenarios, it is more desirable not to maintain these relations and treat the surfaces as individual unrelated surfaces, to avoid unintended change propagations. However, even if the relations between the surfaces are not maintained, it is desirable to be able to edit as many parameters of the surface as possible. For example it is desirable to be able to edit the blend surface continuity (G0-positional, G1-tangential, G2-curvature) or the offset surface distance, even if from the user's point of view the edited surface does not maintain any relation with the surfaces it has been created from. Such problems may be better understood with a description of solid modeling and the management of relations in such models.","Most traditional solid modelers are based on feature driven modeling operations where two-dimensional (2D) sketches are extruded\/revolved\/lofted and each subsequent feature is built on the previous feature. These modeling operations are usually displayed to the user in a tree structure (feature history tree) and edit operations must follow the hierarchical order of the tree. In addition, most of the parametric data is entered via dialogs during the creation process and subsequent modifications are summoned from the feature tree.","Simpler solid modelers work directly on the B-REP (boundary representation) and modeling operations are not tracked or maintained in a parametric\/history tree. These type of modelers usually let the user tweak vertex\/edge\/faces of a solid without any sort of constraints. This modeling paradigm is useful when working with imported models or complex native models. Further, such simple modelers usually let the user modify vertex\/edge\/face via either dialog or move\/rotate\/scale graphic affordances directly in the canvas.","More recently a new \u201csynchronous\u201d technology was introduced that permits one to blend the advantage of the traditional features like solid modeling with some of the direct modeling advantages. The users are also presented with a \u201cFeature Tree\u201d browser but the features are auto detected by analyzing the model itself\u2014thus providing greater flexibility and not relying on a linear succession of modeling operations. Further, in most cases, the user is presented with graphic affordances directly in the canvas that relates to the parametric property being edited or detected.","On the other hand, most surface modelers are either pure NURBS (non-uniform rational b-spline) modelers where all operations result in a NURBS surface or are solid modeling disguised as surface modelers. In the latter case surfaces are considered \u201cbodies\u201d and any of the previous modeling paradigms are used on them (e.g., feature driven, direct, synchronous, etc.).","Some of the pure NURBS modelers have implemented their own associative engines that track underlying creation geometry (e.g., 2D\/3D [three-dimensional] sketches) and some of the edit operations (e.g., trimming\/blending surfaces). The associative actions are sometimes displayed in a scene graph (i.e., similar to a history tree) and nodes have a limited editing capability. Further, most of the surface edits are made directly on the surface using various widgets\/gizmos (e.g., move\/scale\/rotate) that control the location of control vertices on the UV hull\/texture map.","In summary, with prior art 3D surface modeling, surface objects can either be related or not related to each other. If related, a surface object is associative and depends on properties of \u201cother surfaces.\u201d If the \u201cother surfaces\u201d change, the dependent surface automatically updates. Similarly, non-associative surfaces have no relation to surfaces that the non-associative surface was created from. However, because such a surface is non-associative, if the \u201cother surface\u201d is modified, the non-associative surface does not automatically update. Further, the non-associative surface does not maintain any history or knowledge base of the surfaces used to create it. Thus, the user has no option to retain an \u201cassociative\/relation\u201d knowledge base and limits the capabilities of the user to actively determine the behavior of a surface.","Embodiments of the invention overcome the problems of the prior art by enabling a passive associativity state. In this regard, the state of individual surface objects may be \u201cassociative\u201d, \u201cnon-associative\u201d or \u201cpassively associative\u201d. The \u201cpassively associative\u201d state is the innovation not present in other modeling systems.","If the state of the surface is associative, it may depend on other objects. When the other objects change, the associative surface automatically updates to maintain its relation with the objects it depends on.","If the state of the surface is non-associative, the surface does not keep any dependencies on other objects. A non-associative surface does not automatically update when the other objects change.","If the state of the surface is \u201cpassively associative\u201d, the surface behaves as a non-associative surface, i.e. it does not automatically update if the objects it depends on change. However, the surface does keep dependencies on other objects and uses this information to expose additional properties of the surface.","For example, if a blend surface is \u201cpassively associative\u201d, it exposes its continuity properties (G0, G1, G2) with the surfaces it was created from. It is possible to edit these continuity properties of the blend surface and the blend surface properly updates, honoring the continuity. The \u201cpassively associative\u201d offset surface exposes its offset distance property. It is possible to edit this offset distance property and the offset surface properly updates.","The additional surface properties are exposed only when the \u201cpassively associative\u201d surface keeps the same geometric relations with the surfaces it has been created from. If the \u201cpassively associative\u201d surface or the other surfaces change so that these geometric relations are broken, the \u201cpassively associative\u201d surface becomes non associative and loses these additional properties. For example, when the surfaces that the blend surface has been created from change shape or position so that the edges of the blend surface no longer touch edges of the other surfaces, the \u201cpassively associative\u201d blend surface becomes a regular loft surface and loses its continuity properties. When the shape of the surface the offset surface has been created from changes, the \u201cpassively associative\u201d offset surface becomes a regular generic surface, losing its offset property. However, if both the \u201cpassively associative\u201d surface and the objects it depends on are all changed the same way, such as translated, rotated, scaled or mirrored, so that the geometric relations are preserved, the \u201cpassively associative\u201d state of the surface is also preserved.","In the following description, reference is made to the accompanying drawings which form a part hereof, and which is shown, by way of illustration, several embodiments of the present invention. It is understood that other embodiments may be utilized and structural changes may be made without departing from the scope of the present invention.","Overview","Prior art solid\/surface creation\/surface modeling paradigms may exhibit one or more of the following properties:\n\n","Embodiments of this invention provide a friction-less surface modeling paradigm where the user can benefit from the associative engine and its parametric data without being limited in his surface edits. In this regard, embodiments are \u201cfriction-less\u201d because the ability to learn and utilize the new \u201cpassive-associative\u201d state of a surface object is simple, does not create deleterious effects, and does not limit the user's ability to perform surface edits.","In addition to the above, the associative engine express itself directly in the object type properties and the usage of a tree or graph system is not required.","Further, in the case where the user wants to enforce the associative relations, then visual cues may be provided to notify the user of the constraints when necessary. Visual cues may also be displayed when equations\/expressions are controlling certain parametric data.","Hardware Environment",{"@attributes":{"id":"p-0042","num":"0049"},"figref":"FIG. 1","b":["100","102","102","102","104","104","104","106","102","114","116","128","102","132"]},"In one embodiment, the computer  operates by the general purpose processor A performing instructions defined by the computer program  under control of an operating system . The computer program  and\/or the operating system  may be stored in the memory  and may interface with the user and\/or other devices to accept input and commands and, based on such input and commands and the instructions defined by the computer program  and operating system  to provide output and results.","Output\/results may be presented on the display  or provided to another device for presentation or further processing or action. In one embodiment, the display  comprises a liquid crystal display (LCD) having a plurality of separately addressable liquid crystals. Alternatively, the display  may comprise a light emitting diode (LED) display having clusters of red, green and blue diodes driven together to form full-color pixels. Each liquid crystal or pixel of the display  changes to an opaque or translucent state to form a part of the image on the display in response to the data or information generated by the processor  from the application of the instructions of the computer program  and\/or operating system  to the input and commands. The image may be provided through a graphical user interface (GUI) module A. Although the GUI module A is depicted as a separate module, the instructions performing the GUI functions can be resident or distributed in the operating system , the computer program , or implemented with special purpose memory and processors.","In one or more embodiments, the display  is integrated with\/into the computer  and comprises a multi-touch device having a touch sensing surface (e.g., track pod or touch screen) with the ability to recognize the presence of two or more points of contact with the surface. Examples of a multi-touch devices include mobile devices (e.g., iPhone\u2122, Nexus S\u2122, Droid\u2122 devices, etc.), tablet computers (e.g., iPad\u2122, HP Touchpad\u2122), portable\/handheld game\/music\/video player\/console devices (e.g., iPod Touch\u2122, MP3 players, Nintendo 3DS\u2122, PlayStation Portable\u2122, etc.), touch tables, and walls (e.g., where an image is projected through acrylic and\/or glass, and the image is then backlit with LEDs).","Some or all of the operations performed by the computer  according to the computer program  instructions may be implemented in a special purpose processor B. In this embodiment, the some or all of the computer program  instructions may be implemented via firmware instructions stored in a read only memory (ROM), a programmable read only memory (PROM) or flash memory within the special purpose processor B or in memory . The special purpose processor B may also be hardwired through circuit design to perform some or all of the operations to implement the present invention. Further, the special purpose processor B may be a hybrid processor, which includes dedicated circuitry for performing a subset of functions, and other circuits for performing more general functions such as responding to computer program instructions. In one embodiment, the special purpose processor is an application specific integrated circuit (ASIC).","The computer  may also implement a compiler  which allows an application program  written in a programming language such as COBOL, Pascal, C++, FORTRAN, or other language to be translated into processor  readable code. Alternatively, the compiler  may be an interpreter that executes instructions\/source code directly, translates source code into an intermediate representation that is executed, or that executes stored precompiled code. Such source code may be written in a variety of programming languages such as Java\u2122, Perl\u2122, Basic\u2122, etc. After completion, the application or computer program  accesses and manipulates data accepted from I\/O devices and stored in the memory  of the computer  using the relationships and logic that was generated using the compiler .","The computer  also optionally comprises an external communication device such as a modem, satellite link, Ethernet card, or other device for accepting input from and providing output to other computers .","In one embodiment, instructions implementing the operating system , the computer program , and the compiler  are tangibly embodied in a non-transient computer-readable medium, e.g., data storage device , which could include one or more fixed or removable data storage devices, such as a zip drive, floppy disc drive , hard drive, CD-ROM drive, tape drive, etc. Further, the operating system  and the computer program  are comprised of computer program instructions which, when accessed, read and executed by the computer , causes the computer  to perform the steps necessary to implement and\/or use the present invention or to load the program of instructions into a memory, thus creating a special purpose data structure causing the computer to operate as a specially programmed computer executing the method steps described herein. Computer program  and\/or operating instructions may also be tangibly embodied in memory  and\/or data communications devices , thereby making a computer program product or article of manufacture according to the invention. As such, the terms \u201carticle of manufacture,\u201d \u201cprogram storage device\u201d and \u201ccomputer program product\u201d as used herein are intended to encompass a computer program accessible from any computer readable device or media.","Of course, those skilled in the art will recognize that any combination of the above components, or any number of different components, peripherals, and other devices, may be used with the computer .",{"@attributes":{"id":"p-0051","num":"0058"},"figref":["FIG. 2","FIG. 1"],"b":["200","202","102","206","202","102","206"]},"A network  such as the Internet connects clients  to server computers . Network  may utilize ethernet, coaxial cable, wireless communications, radio frequency (RF), etc. to connect and provide the communication between clients  and servers . Clients  may execute a client application or web browser and communicate with server computers  executing web servers . Such a web browser is typically a program such as MICROSOFT INTERNET EXPLORER\u2122, MOZILLA FIREFOX\u2122, OPERA\u2122, APPLE SAFARI\u2122, etc. Further, the software executing on clients  may be downloaded from server computer  to client computers  and installed as a plug in or ACTIVEX\u2122 control of a web browser. Accordingly, clients  may utilize ACTIVEX\u2122 components\/component object model (COM) or distributed COM (DCOM) components to provide a user interface on a display of client . The web server  is typically a program such as MICROSOFT'S INTERNENT INFORMATION SERVER\u2122.","Web server  may host an Active Server Page (ASP) or Internet Server Application Programming Interface (ISAPI) application , which may be executing scripts. The scripts invoke objects that execute business logic (referred to as business objects). The business objects then manipulate data in database  through a database management system (DBMS) . Alternatively, database  may be part of or connected directly to client  instead of communicating\/obtaining the information from database  across network . When a developer encapsulates the business functionality into objects, the system may be referred to as a component object model (COM) system. Accordingly, the scripts executing on web server  (and\/or application ) invoke COM objects that implement the business logic. Further, server  may utilize MICROSOFT'S\u2122 Transaction Server (MTS) to access required data stored in database  via an interface such as ADO (Active Data Objects), OLE DB (Object Linking and Embedding DataBase), or ODBC (Open DataBase Connectivity).","Generally, these components - all comprise logic and\/or data that is embodied in\/or retrievable from device, medium, signal, or carrier, e.g., a data storage device, a data communications device, a remote computer or device coupled to the computer via a network or via another data communications device, etc. Moreover, this logic and\/or data, when read, executed, and\/or interpreted, results in the steps necessary to implement and\/or use the present invention being performed.","Although the term \u201cuser computer\u201d, \u201cclient computer\u201d, and\/or \u201cserver computer\u201d is referred to herein, it is understood that such computers  and  may include thin client devices with limited or full processing capabilities, portable devices such as cell phones, notebook computers, pocket computers, multi-touch devices, and\/or any other device with suitable processing, communication, and input\/output capability.","Of course, those skilled in the art will recognize that any combination of the above components, or any number of different components, peripherals, and other devices, may be used with computers  and .","Detailed Description of Passive-Associative Functionality","Embodiments of the invention are implemented as a software application on a client  or server computer . Such a software application may comprise a computer-aided design (CAD) application (e.g., AutoCAD\u2122 available from the assignee of the present application).","As described above, embodiments of the invention utilize a passive associative feature for surface objects. With such functionality, even if a user elects to have a surface object be non-associative, an associative engine (i.e., within the software application) may maintain the relations internally and does not convert the object into a non-associative object unless necessary. Further, properties of the surface may be exposed based on such relations.","For example, a user may view and modify additional properties of a passive associative blend surface. Such additional properties may only be shown if the geometric conditions of the passive associative blend surface and the original input surface has not been changed. For example, if the passive associative blend surface still touches the original input surface, the additional properties may be displayed by the user. However, if either surface has been moved away (i.e., the passive-associative blend surface or one of the input surfaces on which it depends), the additional properties may be removed. Once the additional properties are removed, if an input surface is moved, the blend surface (dependent upon such an input surface) may not automatically update because it doesn't touch the input surface anymore. However, if all three surfaces are moved (i.e., the blend surface and the two input surfaces), the continuity\/dependency between the passive associative blend surface and input surfaces has not been changed, and the additional properties may still be maintained.","Embodiments of the invention provide the ability for the user to state whether a surface is associative or passive associative. Thus, if the user labels a surface as associative, all updates will occur automatically without additional user input when an input surface is modified. However, with a passive associative surface, updates will not occur automatically but the additional properties may still be maintained. Prior art modeling applications do not provide the option to maintain\/expose additional properties as with the passive associative capabilities of the present invention. Instead, prior art implementations are limited to associative and non-associative surfaces. Accordingly, there is no mechanism to request input from a user to determine if the user desires to break an association between two surfaces once\/after the user has labeled a surface \u201cnon-associative\u201d and later attempts to move such a non-associative or input surface.","The properties and operation of the passive associative functionality of the present invention may be better understood with figures that illustrates the different behaviors and settings that may be provided.","A user can either create or edit surfaces with a \u201cSurface Associativity\u201d functionality On\/Off.  illustrates a toolbar that displays an icon\/button  that can be used to turn on\/off surface associativity in accordance with one or more embodiments of the invention. When a surface object is created, each creation action generates a specific surface type. Examples of some surface types that may be created include planar surface, loft surface, revolve surface, sweep surface, extruded surface, network surface, blend surface, fillet surface, chamfer surface, offset surface, and patch surface. Each of these surface objects will share the same object properties when the associative engine is \u201con\u201d or \u201coff\u201d but some of the visual cues and interaction will be different. In accordance with embodiments of the invention, if the user elects to have surface associativity off, the surface is passive associative.","Surface Types Created from 2D\/3D Profiles",{"@attributes":{"id":"p-0064","num":"0071"},"figref":["FIG. 4","FIG. 4"],"b":["402","416","402","404","416"]},"The properties dialog box  is associated with a selected surface (e.g., surface ). The properties dialog box  provides a surface associativity category  containing two fields: Maintain Associativity  and Surface Associativity . The Surface Associativity field  may also be known as \u201cShow Associativity\u201d. The surface\/show associativity field  can be set to \u201cyes\u201d or \u201cno.\u201d When show associativity  is set to \u201cyes\u201d and an associative surface is selected, the system then displays the parent surface with a special graphic representation (e.g., some form of highlighting or other visually distinguishing representation). If show associativity  is set to \u201cno,\u201d when a surface is selected, such a special graphic representation of the parent surface is not displayed and the parent is not visually distinguishable from the selected surface. Accordingly, the values for properties  and  indicate the current status of the surface associativity (e.g., active or inactive), and the status of visually representing the parent surface associated with the current selected surface respectively.","As an example, if the surface associativity button\/icon  was selected when the surface was created (and had not been changed\/broken), the property value for the maintain associativity property would indicate \u201cyes.\u201d In , properties window  is based on surface  and reflects that surface associativity is off (via property ). However, embodiments of the invention, without informing the user at the time of creation, still maintain passive associativity. Thus, the user can still select the extruded surface  and make changes to surface 's height, taper angle and can also move\/rotate the surface  in space without losing any of it properties. The ability to modify such properties is illustrated in property dialog window  via the geometry category  and further by the in-canvas manipulators\/grips  displayed on surface . This is quite different from a surface modeler in which the surface would have lost all its parametric properties once the associative engine was disabled.",{"@attributes":{"id":"p-0067","num":"0074"},"figref":["FIG. 5","FIG. 5"],"b":["500","501","410","406","410","501","502","502","406","504"]},"The object in-canvas manipulators  which control the height, taper angle and general shape of the extruded surface may be displayed differently than when the associativity is \u201coff\u201d For example, the in-canvas manipulators  may be displayed in a different color, fill pattern, etc. Embodiments of the invention may provide such a visual clue (i.e., different display of the in-canvas manipulators  and ) to inform the user that the surface  is being controlled by the associative engine.","Regardless of whether the value of the maintain associativity property  is \u201cyes\u201d or \u201cno\u201d, the user can still pick and drag any of the in-canvas manipulators  and . However, if the maintain associativity property  has a value of \u201cyes,\u201d and the user attempts to pick and drag an in-canvas manipulator , the system may inform the user that the grips  are controlled by the associative engine. At this point the user can either decide to cancel the edit operation or simply continue.  illustrates the dialog box  displayed to the user when a user attempts to modify a property that would cause a loss in associativity in accordance with one or more embodiments of the invention. As illustrated, the user can opt to continue in which case the surface will lose its associativity with the defining curve, surface, or parametric equation. Alternatively, the user can opt to cancel the operation and maintain surface associativity.",{"@attributes":{"id":"p-0070","num":"0077"},"figref":["FIG. 7","FIG. 6"],"b":["416","402","410"]},"It is also interesting to note that the original spline  that was constraining the extruded surface shape  has been exposed by modifying the once associative extruded surface.","The example of  is quite simple and each surface type exposes a particular set of object properties which interact differently depending if the surface associativity engine is constraining them.","Surface Types Created from Other Surfaces\/Edges","Some of the new surface object types depend on other surfaces to establish their continuity condition and their general shape. For example, a blend surface may be created between two existing surfaces.  illustrates a blend surface where surface associativity is set to \u201coff\u201d and the surface is selected  and not selected .","When surface associativity is \u201coff\u201d (as indicated in maintain associative property ), the user can still select the blend surface and make changes to its continuity condition (G0, G1, G2) or bulge magnitude either via the Object Property manager (i.e., property window ) or directly via the in-canvas manipulators . This is quite different from a surface modeler in which the surface would have lost all its parametric properties once the associative engine is disabled.",{"@attributes":{"id":"p-0076","num":"0083"},"figref":"FIG. 9","b":["410","410","412","902","902","904","904","906"]},{"@attributes":{"id":"p-0077","num":"0084"},"figref":"FIG. 10","b":["410","904","904","902","904","904","1002","904","1004","1006","1008","1008","904"]},"In contrast, if surface associativity is \u201con\u201d, and the user moves one of the existing surfaces that was used to generate the associative blend (i.e. an input surface), the system automatically updates the position and shape of the blend surface.  illustrates the movement of an existing input surface  (left) and the resulting updated blend surface  (right) when surface associativity is \u201con\u201d in accordance with one or more embodiments of the invention.","In contrast to , when surface associativity is \u201con\u201d, and the user attempts to move the associative blend surface  itself (rather than the input surfaces ), the dialog window  of  is displayed. The user can still pick and drag that associative blend surface , but the system will inform the user that this surface  is controlled by the associative engine. At this point, the user can either decide to cancel the edit operation or simply continue.","If the user elects to continue the move\/drag operation (via dialog window ), the blend surface is updated with the associative engine releasing the surface (as indicated at ) as illustrated in . Because the blend surface  is not \u201ctouching\u201d the originator\/input surface  the system internally copies the profile information and migrates the surface  to its closest object type; in this case a loft surface (as indicated at ). The user can still select the new surface  and make changes to its normal direction either via the object property manager  or directly via the in-canvas manipulators . The user can also edit the grips points  of the newly converted profiles and may live on the surface of surface .","In view of the above, it can be seen that regardless of the status of the associativity, the same user graphical affordances are presented and may be used to edit the model. Accordingly, the user does not need to learn two different systems of interaction. Further, embodiments of the invention may automatically convert\/translate a surface to the appropriate shape (e.g., blend surface to a loft or NURBS surface [as indicated at ]) based on which element\/object of a model is moved\/edited. Such a transition between different shape behaviors\/status provides a frictionless environment for the user who doesn't need to manually modify and change surfaces.","Associative Surface to Non-Associative Migration Path","The table below illustrates the transition\/migration path from an associative surface to a non-associative surface depending on the actions of the user, the surface object type, and the surface associativity setting. The first column illustrates the starting surface object type. The second column illustrates the affect on the surface object (i.e., the resulting surface object type) when the surface associativity is off and the surface loses connection with the defining profile or originator surface. The third column illustrates the affect on the surface object (i.e., the resulting surface object type) when the surface associativity is on and the surface is moved from its original location. As used herein \u201cnone associative\u201d means that the new resulting surface will have \u201cSurface Associativity\u201d set to \u201cno.\u201d",{"@attributes":{"id":"p-0083","num":"0090"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"84pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"91pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":[{},"SURFACE ",{}]},{"entry":[{},"ASSOCIATIVITY =","SURFACE"]},{"entry":[{},"OFF and surface ","ASSOCIATIVITY ="]},{"entry":["Surface","looses connection ","ON and surface is "]},{"entry":["Object","with defining profile","moved from original "]},{"entry":["Type","or originator surface","location"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Surface","N\/A","N\/A"]},{"entry":["(NURBS)",{},{}]},{"entry":["Surface","No impact","Surface (extrusion) "]},{"entry":["(extrusion)",{},"none associative"]},{"entry":["Surface","No impact on object ","Surface (Loft) none "]},{"entry":["(Loft)","type; profile","associative; profile coming "]},{"entry":[{},"coming from connected ","from connected surface "]},{"entry":[{},"surface will be converted ","will be converted "]},{"entry":[{},"in defining profiles","in defining profiles"]},{"entry":["Surface","No impact","Surface (Planar) "]},{"entry":["(Planar)",{},"none associative"]},{"entry":["Surface","No impact","Surface (Revolve) "]},{"entry":["(Revolve)",{},"none associative"]},{"entry":["Surface","No impact","Surface (sweep) "]},{"entry":["(sweep)",{},"none associative"]},{"entry":["Surface","Surface (loft) none ","Surface (loft) none associative;"]},{"entry":["(Blend)","associative; profile coming ","profile coming from connected"]},{"entry":[{},"from connected surfaces ","surfaces will be converted in"]},{"entry":[{},"will be converted","defining profiles"]},{"entry":[{},"in defining profiles",{}]},{"entry":["Surface","Surface (loft) none ","Surface (loft) none associative;"]},{"entry":["(network)","associative;","profile coming from connected"]},{"entry":[{},"profile coming from ","surfaces will be converted in"]},{"entry":[{},"connected surfaces ","defining profiles"]},{"entry":[{},"will be converted",{}]},{"entry":[{},"in defining profiles",{}]},{"entry":["Surface","Surface (generic) ","Surface (generic) "]},{"entry":["(Fillet)","none associative","none associative"]},{"entry":["Surface","Surface (generic) ","Surface (generic) "]},{"entry":["(Extend)","none associative","none associative"]},{"entry":["Surface","Surface (generic) ","Surface (generic) "]},{"entry":["(Offset)","none associative","none associative"]},{"entry":["Surface","Surface (generic) ","Surface (generic) "]},{"entry":["(Patch)","none associative","none associative"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},"The table below illustrates the surface properties that can be controlled via an equation or expression in accordance with one or more embodiments of the invention.",{"@attributes":{"id":"p-0085","num":"0092"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":[{},"Properties that accept expression "]},{"entry":["Surface Type","and user variable input"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Surface (NURBS)","No property"]},{"entry":["Surface (extrusion)","Height property"]},{"entry":[{},"Taper property"]},{"entry":[{},"Profile can accept constrain 2D geometry"]},{"entry":["Surface (Loft)","Bulge magnitude property for each edge"]},{"entry":[{},"Profile can accept constrain 2D geometry"]},{"entry":["Surface (Planar)","Profile can accept constrain 2D geometry"]},{"entry":["Surface (Revolve)","Revolve angle property"]},{"entry":[{},"Profile can accept constrain 2D geometry"]},{"entry":["Surface (Offset)","offset distance property"]},{"entry":["Surface (Extend)","extension distance property"]},{"entry":["Surface (sweep)","Profile can accept constrain 2D geometry"]},{"entry":["Surface (Blend)","Bulge magnitude property for each edge"]},{"entry":["Surface (network)","Bulge magnitude property for each edge"]},{"entry":[{},"Profile can accept constrain 2D geometry"]},{"entry":["Surface (Patch)","Bulge magnitude property"]},{"entry":[{},"constrain Profile can accept constrain 2D"]},{"entry":[{},"geometry"]},{"entry":["Surface (Fillet)","Fillet Radius property"]},{"entry":["Surface (Chamfer)","First distance from edge property"]},{"entry":[{},"Second distance from edge property"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0086","num":"0093"},"figref":"FIG. 13"},"At step , a dependent surface object having one or more properties is obtained. The dependent surface object is dependent on one or more input objects. Such a dependent surface object may be an extruded surface object and the properties (to be edited) and\/or the input objects may be parametric properties\/equations. Such an extruded dependent surface object may then be selected and the parametric properties\/equations may be modified without removing the association. Another example of a dependent surface object is that of a blend surface that is a blend of two or more input surface objects that serve to establish a continuity condition and a general shape of the blend surface. The blend surface may then be selected and the continuity condition can be modified (e.g., via an object property manager or directly via an in-canvas manipulator) (e.g., without removing\/affecting the association). However, if second user input modifies the blend surface in a manner that results in a loss of continuity between the blend surface and one of the input surface objects, (in response) the blend surface may be migrated into a different object type that is non-associative (e.g., a loft surface, NURBS surface, etc.).","At step , first user input indicating that a surface associativity for the dependent surface object is \u201coff\u201d is received (e.g., by selecting an icon\/button when creating or after selecting the dependent surface object).","At step , in response to the receiving of the user input, an association between the dependent surface object and the input objects is maintained. In other words, even though the user has elected to turn \u201coff\u201d the associativity, the association is still maintained.","At step , the association is used to expose the one or more properties of the dependent surface object.","At step , the one or more properties are displayed, on a display device, for editing by the user. Such utilizing and displaying at step  may include receiving second user input for a user operation modifying one of the input objects. In response, a visual clue (e.g., dialog box\/window) may be displayed indicating that the dependent surface object is controlled by an associative engine (e.g., that one or more surfaces are associated with a defining curve, surface, or a parametric equation). The visual clue may also offer an option to: (1) continue the user operation and no longer maintain the association; or (2) cancel the user operation and maintain the association. Third user input may indicate the selection of option (1) (to continue the operation) after which the input objects may be modified based on the second user input and the association may be removed.","Conclusion","This concludes the description of the preferred embodiment of the invention. The following describes some alternative embodiments for accomplishing the present invention. For example, any type of computer, such as a mainframe, minicomputer, or personal computer, or computer configuration, such as a timesharing mainframe, local area network, or standalone personal computer, could be used with the present invention.","Unique aspects of embodiments of the invention may include one or more of the following:\n\n","The foregoing description of the preferred embodiment of the invention has been presented for the purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed. Many modifications and variations are possible in light of the above teaching. It is intended that the scope of the invention be limited not by this detailed description, but rather by the claims appended hereto."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Referring now to the drawings in which like reference numbers represent corresponding parts throughout:",{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 13"}]},"DETDESC":[{},{}]}
