---
title: Memory balancing and optimization services
abstract: Memory balancing and optimization services (MBOS) control a size of a plurality of memory heaps, and a memory optimizer for allocating and de-allocating memory for a plurality of respective memory consumers. The MBOS may be instantiated within an application program such as a database management system providing services to memory consumers within the application. Alternatively, the MBOS may be instantiated within an operating system for providing services to memory consumers that are applications such as database management systems, e-commerce engines, operating systems, customer relationship management (CRM), enterprise resource planning (ERP), or supply chain management (SCM). Alternatively, an MBOS is instantiated within the operating system to provide services to applications and an MBOS is instantiated within each application to provide services to memory consumers within the application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07007150&OS=07007150&RS=07007150
owner: International Business Machines Corporation
number: 07007150
owner_city: Armonk
owner_country: US
publication_date: 20030327
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["This is the first application filed for the present invention.","1. Technical Field","The present invention relates to improved memory management in a computing environment and, in particular, to inter-application and intra-application services for memory usage balancing and optimization.","2. Background of the Invention","In a computer system, large applications use memory in many different ways. They include sorting, caching prior work, scratch pad computations, concurrency control information, data caching, etc. Any of these requirements for memory may exceed a computer system's available memory capacity. Furthermore, memory usage is not static or generally optimized. Requirements and priorities among applications that consume memory change over time. One component of an application may benefit more from available memory than another component. Similarly, one application may hoard memory or benefit more from available memory than another.","In some systems, memory usage may be controlled, to an extent, directly by a user, as, for example, taught in U.S. Pat. No. 5,809,554 to Benayon et al. The user may configure memory consumption patterns used by an application while it executes. In some systems, memory usage may also be controlled indirectly by the user. In addition, workload on the application and user configurations may alter or control the memory consumption of various application components.","Several issues remain inadequately addressed or unaddressed by prior art memory management systems, however. For example, an application may be able to benefit from using more memory if the memory were made available to the application. The application may also be required to scale back memory usage when memory is constrained on the system.","In some cases, emergency shared memory is required by one or more components of an application in order to complete a task. This indicates a requirement for memory overflow (temporary over configuration) compensation.","The requirements set out above must be solved in unison, since they are highly interdependent.","There therefore remains a need for memory balancing and optimization services that can pass memory from one memory consumer to another, and permit dynamic reconfiguration of memory allocations to improve memory usage.","It is therefore an object of the invention to provide a method and system for memory balancing and optimization services that balance memory use among memory consumers, and permit dynamic reconfiguration of memory allocations.","The invention therefore provides a system for balancing and optimizing memory allocation in a computer system that supports a plurality of memory consumers. The system includes a centralized control function, referred to as a Memory Balancing and Optimization System (MBOS). The MBOS is adapted to serve memory reconfiguration requests received from any one of: selected ones of the memory consumers, a memory optimizer, and a system administrator. Callback functions are associated with memory used by at least the selected ones of the memory consumers. The callback functions are adapted to increase or reduce memory usage by an associated memory consumer under control of the MBOS.","The invention also provides a method of balancing and optimizing memory allocation in a computer system having an operating system, system memory and a plurality of memory consumers that compete for use of the system memory. The method comprises a first computer-implemented step of issuing a request from a memory consumer when a block of system memory is required. The request is sent to an application programming interface (API) of a memory balancing and optimization services (MBOS) application instantiated on the computer system. A request is issued by the MBOS to the operating system to get the block of memory. If the request is unsuccessful, a request is issued from the MBOS to a callback function associated with a memory heap used by the memory consumer to get the block of memory. If that is unsuccessful, a request is issued from the MBOS to respective callback functions of other memory consumers in a predefined set, to determine whether a memory block can be obtained from another member of the set.","The invention also provides method comprising a first computer-implemented step of receiving, at a an application programming interface (API) of a memory balancing and optimization services (MBOS) application instantiated on the computer system, instructions to reconfigure memory usage by one of the memory consumers. On receiving the instructions, the MBOS obtains a memory grow_heap latch associated with a memory heap used by the memory consumer. The MBOS then determines whether the memory usage is being reduced or increased, and instructs the callback function associated with the memory heap to release or add memory to the memory heap in accordance with the reconfiguration instructions.","The invention further provides a memory balancing and optimization services (MBOS) system for a computer system having a system memory, an operating system that executes within the system memory and a plurality of memory consumers that compete for use of the system memory. The system comprises a callback function associated with a memory heap used by at least selected ones of the memory consumers and the MBOS that includes an application program interface (API) for accepting memory usage information and memory allocation request messages from the memory consumers, the MBOS being adapted to send memory configuration messages to the respective callback functions to control a size of the respective memory heaps.","It will be noted that throughout the appended drawings, like features are identified by like reference numerals.","The invention provides a system for balancing and optimizing memory allocation in a computer system that supports a plurality of memory consumers. The system includes a centralized control function, referred to as a Memory Balancing and Optimization System (MBOS). The MBOS is adapted to serve memory reconfiguration requests received from any one of: selected ones of the memory consumers, a memory optimizer, and a system administrator. A callback function is are associated with a memory heap used by each of the selected ones of the memory consumers. The callback function is adapted to increase or reduce memory in the memory heap associated with the memory consumer, under control of the MBOS.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1","b":["100","102","118","120","130","118","102","104","106","104","108","124","106","108","110","104","126","106","124","114","115","106","114","122","102","118","128"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 2","FIG. 1"],"b":["104","108","204","206","208","202","202","202","204","206","208","204","206","208","208","202","210","216","219"]},"For the purposes of schematic illustration, MBOS  is shown as a discrete component of the memory balancing and optimization services architecture in accordance with the invention. It should be understood, however, that the MBOS  includes an application programming interface (API)  and the callback functions \u2013 associated with the respective application components \u2013. The MBOS  may be implemented, for example, with six principal components:\n\n","The scope of the invention is therefore intended to be limited solely by the scope of the appended claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["Further features and advantages of the present invention will become apparent from the following detailed description, taken in combination with the appended drawings, in which:",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
