---
title: Methods and systems for screening input strings intended for use by web servers
abstract: Methods and systems of screening input strings that are intended for use by a Web server are described. In the described embodiment, an attack pattern is determined that can be used to attack a Web server. A search pattern is defined that can be used to detect the attack pattern. The search pattern is defined in a flexible, extensible manner that permits variability among its constituent parts. An input string that is intended for use by a Web server is received and evaluated using the search pattern to ascertain whether the attack pattern is present. If an attack pattern is found that matches the search pattern, then a remedial action is implemented.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07051368&OS=07051368&RS=07051368
owner: Microsoft Corporation
number: 07051368
owner_city: Redmond
owner_country: US
publication_date: 19991109
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This invention relates to methods and systems for screening input strings that are intended for use by Web servers. In particular, the invention pertains to methods and systems for identifying input strings that contain attack patterns that can be used to attack a Web server, and, in some instances, reacting to the attack patterns once identified.","Web servers are computers that are used to provide access to various resources, e.g. Web pages, for various client devices such as browsers. Typically, an individual uses a client device to provide an input string, such as a URL, to the Web server. The URL indicates to the Web server the location of the particular resource of interest. The Web server then locates the resource using the URL and returns the resource to the client device so that it can be displayed for the individual. Other types of input strings can be provided to the Web server by the client, e.g. input strings in the form of HTTP verb requests (e.g. POST requests) including WebDAV requests.","In the past, malicious individuals have used input strings that are intended for use by Web servers to attack the servers. These individuals will typically try to find an input string that causes the Web server or, perhaps its operating system, to perform in a manner that is inconsistent with simply processing legitimate client requests and returning authorized resources to the client. Input strings that have been used in the past to attack Web servers seem to come in an ever-changing number of varieties and formats. The various attacks that can be waged against a Web server can be categorized as disclosure attacks, integrity attacks, and denial of service attacks.","A disclosure attack takes place when an individual attacks a web site and attempts to read information that they are not authorized to read. For example, there may be some executable code at the server that an individual is not authorized to view. Yet, by providing an input string that causes the server to malfunction, the individual actually gets to view the executable code. Consider, for example, Active Server Pages. Active Server Pages can allow Web developers to use scripting languages like Visual Basic Script and JScript to pass information to various components that contain logic for accessing databases, instruct the components to perform a programmed action, and return the results of the programmed action. The individual is only authorized, and supposed to view the results of the programmed action. Yet, by using particular inappropriate input strings it may be possible for the individual to view the code that produces the results.","An integrity attack is similar to a disclosure attack in that an individual can gain access to unauthorized information. In addition to gaining access to the information, however, integrity attacks involve the manipulation of data or information that is being viewed. This is particularly problematic because the changed, now-invalid information can potentially further compromise an already-compromised Web server.","A denial of service attack is an attack that can cause a decrease in the quality of service or, ultimately, can cause the server to crash. This can adversely impact the server's ability to service other legitimate clients thereby leading to undesirable downtime and customer dissatisfaction.","Many of these types of attacks can be traced directly to the mishandling of an input string that was provided to the Web server. A need exists to deal with problematic input strings in a flexible, quick and convenient manner. Accordingly, this invention arose out of concerns associated with providing improved methods and systems for recognizing problematic input strings and dealing with them before they adversely affect the Web server.","Methods and systems of screening input strings that are intended for use by a Web server are described. In the described embodiment, an attack pattern is determined that can be used to attack a Web server. A search pattern is defined that can be used to detect the attack pattern. The search pattern is defined in a flexible, extensible manner that permits variability among its constituent parts. An input string that is intended for use by a Web server is received and evaluated using the search pattern to ascertain whether the attack pattern is present. If an attack pattern is found that matches the search pattern, then a remedial action is implemented.","Network Configuration","As a preliminary matter, the following disclosure assumes a familiarity with Internet and WWW practices, formats, and protocols. A great number of books are available on these subjects. Stout, Rick, , McGraw-Hill, 1996, is one example.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 1","b":["12","14","16","18","16","17","16","18","18","16"]},"Each of client devices  is any device such as a personal computer that might be connected to receive information from server system . Client device  has a client viewer or browser  that forms an interface to a human user or operator. Client viewer  interprets instruction and data streams provided by system  and in response presents information to the user in textual, graphical, or other forms. Client viewer  also accepts operator input, and allows the operator to select and navigate from one hypermedia document to another using hyperlinks as described above. Client viewer  is connected for data communications with server system  by a suitable communications medium such as a local or wide area network, by a modem link, or by a similar continuous or on-demand connection. Data connection can be made between server system  and client devices  through the Internet, using a standard protocol, such as HTTP (hypertext transport protocol).","An exemplary client viewer  is a conventional, off-the-shelf Internet Web browser, having features and functions such as are common to popular Web browsers. Client viewer  is not limited to any particular type of Web browser. For instance, client viewer  might be the INTERNET EXPLORER\u00ae-brand browser available from Microsoft Corporation of Redmond, Wash., or a NETSCAPE NAVIGATOR\u00ae-brand browser, available from Netscape of Mountain View, Calif. Each of these browsers supports a different feature set, and responds to different commands and command sets. In addition, the term \u201cclient viewer\u201d as used herein encompasses any software that is used by a client to interpret data obtained from server system . In the future, such software will likely comprise a variety of downloadable components and helper applications used by software other than traditional browsers to render multimedia content from the Internet or other servers.","When a user wishes to access a resource that is accessible through the information server system , a data stream or input string, e.g. a URL, is prepared by their client viewer  and sent to the information server system  via an appropriate connective network. The information server system  receives the request, processes it, and returns the requested resource to the client . The client viewer  then enables the user to view the requested resources. Other input strings can be prepared and sent from the client viewer  to the information server system . An exemplary input string is one that is associated with an HTTP verb request, such as a POST request. Of course, other input strings can be utilized.","Exemplary Computer Architecture",{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 2","b":["130","14","12"]},"Computer  includes one or more processors or processing units , a system memory , and a bus  that couples various system components including the system memory  to processors . The bus  represents one or more of any of several types of bus structures, including a memory bus or memory controller, a peripheral bus, an accelerated graphics port, and a processor or local bus using any of a variety of bus architectures. The system memory  includes read only memory (ROM)  and random access memory (RAM) . A basic input\/output system (BIOS) , containing the basic routines that help to transfer information between elements within computer , such as during start-up, is stored in ROM .","Computer  further includes a hard disk drive  for reading from and writing to a hard disk (not shown), a magnetic disk drive  for reading from and writing to a removable magnetic disk , and an optical disk drive  for reading from or writing to a removable optical disk  such as a CD ROM or other optical media. The hard disk drive , magnetic disk drive , and optical disk drive  are connected to the bus  by an SCSI interface  or some other appropriate interface. The drives and their associated computer-readable media provide nonvolatile storage of computer-readable instructions, data structures, program modules and other data for computer . Although the exemplary environment described herein employs a hard disk, a removable magnetic disk  and a removable optical disk , it should be appreciated by those skilled in the art that other types of computer-readable media which can store data that is accessible by a computer, such as magnetic cassettes, flash memory cards, digital video disks, random access memories (RAMs), read only memories (ROMs), and the like, may also be used in the exemplary operating environment.","A number of program modules may be stored on the hard disk , magnetic disk , optical disk , ROM , or RAM , including an operating system , one or more application programs , other program modules , and program data . A user may enter commands and information into computer  through input devices such as a keyboard  and a pointing device . Other input devices (not shown) may include a microphone, joystick, game pad, satellite dish, scanner, or the like. These and other input devices are connected to the processing unit  through an interface  that is coupled to the bus . A monitor  or other type of display device is also connected to the bus  via an interface, such as a video adapter . In addition to the monitor, personal computers typically include other peripheral output devices (not shown) such as speakers and printers.","Computer  commonly operates in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be another personal computer, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to computer , although only a memory storage device  has been illustrated in . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) . Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets, and the Internet.","When used in a LAN networking environment, computer  is connected to the local network  through a network interface or adapter . When used in a WAN networking environment, computer  typically includes a modem  or other means for establishing communications over the wide area network , such as the Internet. The modem , which may be internal or external, is connected to the bus  via a serial port interface . In a networked environment, program modules depicted relative to the personal computer , or portions thereof, may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.","Generally, the data processors of computer  are programmed by means of instructions stored at different times in the various computer-readable storage media of the computer. Programs and operating systems are typically distributed, for example, on floppy disks or CD-ROMs. From there, they are installed or loaded into the secondary memory of a computer. At execution, they are loaded at least partially into the computer's primary electronic memory. The invention described herein includes these and other various types of computer-readable storage media when such media contain instructions or programs for implementing the steps described below in conjunction with a microprocessor or other data processor. The invention also includes the computer itself when programmed according to the methods and techniques described below.","For purposes of illustration, programs and other executable program components such as the operating system are illustrated herein as discrete blocks, although it is recognized that such programs and components reside at various times in different storage components of the computer, and are executed by the data processor(s) of the computer.","Input String Screening","Aspects of the invention enable an input string that is provided by a client to be screened before it is processed by the Web server. An \u201cinput string\u201d is a URL or other string that is intended for use by the Web server. Screening the input strings ensures that problematic input strings are identified and handled appropriately so that the risk of adversely impacting the Web server is reduced. As an example of a problematic input string consider the following URL input string:\n\n","Assume that data that is associated with www.foo.com is stored in a directory \u201cc:wwrootstuffdata\u201d. The \u201c..\u201d that appears in the URL input string after the www.foo.com specification can cause the server to move up in the hierarchical directory from \u201cc:wwrootstuffdata\u201d by one directory. A series of \u201c..\u201d in the URL input string can cause the server to move up in the hierarchical directory a number of times until it reaches the root directory, in this case the \u201cc:\u201d directory. At this point it might be possible to get access any files in the root directory such as the specified \u201cboot.ini\u201d file. This file might constitute a file that describes how the computer is designed to boot. In this case, a user would be able to view and possibly manipulate an unauthorized file. As another example, consider the following URL input string:\n\n","In this example, it is possible that the server might not understand the \u201c::$DATA\u201d portion of this input string, but that the string portion has a special meaning to the operating system on which the server is executing. As a consequence, the operating system might cause unauthorized files to be accessible to the user.","In both of these examples, the input string can be characterized as containing a pattern that is problematic to the Web server. It is problematic because it can cause the Web server or its operating system to behave in a manner that is inconsistent with returning only authorized resources to a client. In this document, such patterns are referred to as \u201cattack patterns\u201d because they effectively enable an attack on the server. In the above two examples, the attack patterns are constituted by the \u201c..\u201d and \u201c::$\u201d portions of the input string.","In addition to these exemplary attack patterns, there are also input string characteristics that can be indicative of an attack pattern. One such characteristic is if the input string does not contain an alphabetical character at its end. Another characteristic is whether the input string contains any specific \u201coperators\u201d that are inappropriate for an input string. Examples include the operators \u201c|\u201d, \u201c<\u201d, \u201c>\u201d, and \u201c&\u201d. Any input string that is found to satisfy the characteristics that are indicative of an attack pattern are likely to be problematic for the server.","Web Server Pattern Matching",{"@attributes":{"id":"p-0034","num":"0035"},"figref":"FIG. 3","b":"200"},"With one or more attack patterns having been determined, step  defines a search pattern that can be used to detect the attack pattern. A search pattern is an expression that is compared with input strings to determine whether there is a matching search pattern in the input string. In the described embodiment, a search pattern can be formatted syntactically in a manner that allows specification of both identity and variability among constituent parts of an input string. Thus, the search pattern can include literal parts that call for an exact character-by-character match between those parts and corresponding parts of the input string, and variable parts that allow for inexact matches or no match at all between those parts  and corresponding parts of the input string. An input string is said to \u201cmatch\u201d a search pattern if the search pattern is found anywhere within the input string as specified by the search pattern. In the described embodiment, one or more search patterns are specified as regular expressions. In a regular expression, each character matches itself, unless it is one of a number of special characters that indicate variable characters in the input string. An example subset of regular expression definitions and their meanings is given below:",{"@attributes":{"id":"p-0036","num":"0037"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"273pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Pattern","Meaning"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[".","Matches an arbitrary character"]},{"entry":["( . . . )","Groups a series of pattern elements to a single element"]},{"entry":["{circumflex over (\u2009)}","Matches the beginning of the target"]},{"entry":["+","Matches the preceding pattern elements one or more times. For example, ba + c matches bac,"]},{"entry":[{},"baac, but not bc."]},{"entry":["$","Matches the end of the line. For example, 100$ matches 100 at the end of a line."]},{"entry":["[ . . . ]","Denotes a class of characters to match; [{circumflex over (\u2009)} . . . ] negates the class. For example, b[aeiou]d"]},{"entry":[{},"matches bad, bed, bid, bod, and bud (but not bead or beed); and r[eo] + d matches red, rod,"]},{"entry":[{},"reed, rood, reod, roed, reood, roeod, etc."]},{"entry":["[{circumflex over (\u2009)}]","Matches any character except those following the caret ({circumflex over (\u2009)}) character in the brackets, or any"]},{"entry":[{},"of an ASCII range of characters separated by a hyphen (\u2212). For example, x[{circumflex over (\u2009)}0\u20139] matches"]},{"entry":[{},"xa, xb, xc, and so on, but not x0, x1, x2, and so on."]},{"entry":["( . . . | . . . )","Matches one of the alternatives"]},{"entry":["?","Matches the preceding character zero or one time."]},{"entry":["*","Matches the preceding character zero or more times. For example, ba*c matches bc, bac,"]},{"entry":[{},"baac, and so on."]},{"entry":["{}","Matches any sequence of characters between the escaped braces. For example, {ju} + fruit"]},{"entry":[{},"matches jufruit, jujufruit, but not ufruit, jfruit, or ujfruit."]},{"entry":["\\","Removes the pattern match characteristics from the special characters listed above. For"]},{"entry":[{},"example, 100$ matches 100 at the end of a line, but 100\\$ matches the character string 100$"]},{"entry":[{},"anywhere on a line."]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]}}}}},"By defining search patterns as described above, flexibility and extensibility are enhanced by enabling a system administrator to define a search pattern in terms of a generalized regular pattern that reflects an attack pattern of which the system administrator has recently become aware. The definition of search patterns in this manner is timely because the search patterns can be defined almost as soon as the attack patterns are detected, without the need to hardcode specific patterns.","In the described embodiment, patterns can be collected into collections of patterns as more and more patterns are observed or determined. Accordingly, step  adds the pattern defined in step  to such a collection. The collection of patterns can be stored and maintained in memory. In the described embodiment, the collection is adapted for addition to, deletion of, or modification of the patterns that it contains. This facilitates the overall extensibility of the collection of patterns. In the described embodiment, steps \u2013 can be implemented using an administrative tool or some other suitable interface.","Step  receives an input string from the client that is intended for use by the Web server, and step  evaluates the input string using one or more of the search patterns. Step  determines whether any of the attack patterns are present in the input string. An attack pattern is present if a match is found for the search pattern in the input string. If there are no attack patterns present in the input string, then step  processes the input string or request that is associated with the input string. Where an input string comprises a URL, processing can include retrieving an appropriate resource, i.e. a Web page, and returning it to the client. If, on the other hand, there is an attack pattern that is identified to be associated with the input string (i.e. an attack pattern is found in the input string that matches the search pattern), then step  implements a remedial action. Remedial actions can be any actions that are associated with minimizing or eliminating the effect that an attack pattern can have on the Web server. In but one example, this can include denying a request that is associated with the input string. For example, in the case of an input string that is a URL, this could mean returning an error message to the client to the effect that the request could not be executed.","Input String Screening Tool",{"@attributes":{"id":"p-0041","num":"0042"},"figref":"FIG. 4","b":["300","300","300","300"]},"In the  embodiment, input string screening tool  includes a pattern matching engine  and a memory location . Memory location  contains one or more patterns that have been defined and make up a pattern collection . The patterns are stored in the memory location and are accessible to the screening tool for evaluating input strings. The pattern matching engine can retrieve one or more search patterns and use them to evaluate an input string to determine whether it likely constitutes an attack on the Web server.","Advantages of the described embodiment include the ability to flexibly define a plurality of extensible patterns that can be used to screen input strings for attack patterns that can adversely affect performance of a Web server. System administrators are given the opportunity to quickly take action by being able to quickly define generalized regular patterns on the fly. This, in turn, increases the response time so that any effects on a Web server that are associated with an attack are mitigated to the extent possible.","Although the invention has been described in language specific to structural features and\/or methodological steps, it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or steps described. Rather, the specific features and steps are disclosed as preferred forms of implementing the claimed invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
