---
title: Disambiguating a speech recognition grammar in a multimodal application
abstract: Disambiguating a speech recognition grammar in a multimodal application, the multimodal application including voice activated hyperlinks, the voice activated hyperlinks voice enabled by a speech recognition grammar characterized by ambiguous terminal grammar elements, including maintaining by the multimodal browser a record of visibility of each voice activated hyperlink, the record of visibility including current visibility and past visibility on a display of the multimodal device of each voice activated hyperlink, the record of visibility further including an ordinal indication, for each voice activated hyperlink scrolled off display, of the sequence in which each such voice activated hyperlink was scrolled off display; recognizing by the multimodal browser speech from a user matching an ambiguous terminal element of the speech recognition grammar; selecting by the multimodal browser a voice activated hyperlink for activation, the selecting carried out in dependence upon the recognized speech and the record of visibility.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07822608&OS=07822608&RS=07822608
owner: Nuance Communications, Inc.
number: 07822608
owner_city: Burlington
owner_country: US
publication_date: 20070227
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EXEMPLARY EMBODIMENTS"],"p":["1. Field of the Invention","The field of the invention is data processing, or, more specifically, methods, apparatus, and products for disambiguating a speech recognition grammar in a multimodal application.","2. Description of Related Art","User interaction with applications running on small devices through a keyboard or stylus has become increasingly limited and cumbersome as those devices have become increasingly smaller. In particular, small handheld devices like mobile phones and PDAs serve many functions and contain sufficient processing power to support user interaction through multimodal access, that is, by interaction in non-voice modes as well as voice mode. Devices which support multimodal access combine multiple user input modes or channels in the same interaction allowing a user to interact with the applications on the device simultaneously through multiple input modes or channels. The methods of input include speech recognition, keyboard, touch screen, stylus, mouse, handwriting, and others. Multimodal input often makes using a small device easier.","Multimodal applications are often formed by sets of markup documents served up by web servers for display on multimodal browsers. A \u2018multimodal browser,\u2019 as the term is used in this specification, generally means a web browser capable of receiving multimodal input and interacting with users with multimodal output, where modes of the multimodal input and output include at least a speech mode. Multimodal browsers typically render web pages written in XHTML+Voice (\u2018X+V\u2019). X+V is described in the W3C specification entitled \u201cXHTML+Voice Profile 1.2\u201d of Mar. 16, 2004, as follows:\n\n","X+V provides a markup language that enables users to interact with an multimodal application through spoken dialog in addition to traditional means of input such as keyboard strokes and mouse pointer action. Visual markup tells a multimodal browser what the user interface is look like and how it is to behave when the user types, points, or clicks. Similarly, voice markup tells a multimodal browser what to do when the user speaks to it. For visual markup, the multimodal browser uses a graphics engine; for voice markup, the multimodal browser uses a speech engine. X+V adds spoken interaction to standard web content by integrating XHTML (eXtensible Hypertext Markup Language) and speech recognition vocabularies supported by VoiceXML. For visual markup, X+V includes the XHTML standard. For voice markup, X+V includes a subset of VoiceXML. For synchronizing the VoiceXML elements with corresponding visual interface elements, X+V uses events.","XHTML includes voice modules that support speech synthesis, speech dialogs, command and control, and speech grammars. Voice handlers can be attached to XHTML elements and respond to specific events. Voice interaction features are integrated with XHTML and can consequently be used directly within XHTML content.","In addition to X+V, multimodal applications also may be implemented with Speech Application Tags (\u2018SALT\u2019). SALT is a markup language developed by the Salt Forum. Both X+V and SALT are markup languages for creating applications that use voice input\/speech recognition and voice output\/speech synthesis. Both SALT applications and X+V applications use underlying speech recognition and synthesis technologies or \u2018speech engines\u2019 to do the work of recognizing and generating human speech. As markup languages, both X+V and SALT provide markup-based programming environments for using speech engines in an application's user interface. Both languages have language elements, markup tags, that specify what the speech-recognition engine should listen for and what the synthesis engine should \u2018say.\u2019 Whereas X+V combines XHTML, VoiceXML, and the XML Events standard to create multimodal applications, SALT does not provide a standard visual markup language or eventing model. Rather, it is a low-level set of tags for specifying voice interaction that can be embedded into other environments. In addition to X+V and SALT, multimodal applications may be implemented in Java with a Java speech framework, in C++, for example, and with other technologies and in other environments as well.","Current lightweight voice solutions require a developer to build a grammar and lexicon to limit the potential number of words that an automated speech recognition (\u2018ASR\u2019) engine must recognize\u2014as a means for increasing accuracy. Pervasive devices have limited interaction and input modalities due to the form factor of the device, and kiosk devices have limited interaction and input modalities by design. In both cases the use of speaker independent voice recognition is implemented to enhance the user experience and interaction with the device. The state of the art in speaker independent recognition allows for some sophisticated voice applications to be written as long as there is a limited vocabulary associated with each potential voice command. For example, if the user is prompted to speak the name of a city the system can, with a good level of confidence, recognize the name of the city spoken.","When using a multimodal browser on a multimodal device with a display screen to access dynamic search results on the web, a user often is presented with a list of results which may contain duplicate names. For example, when searching for book stores in Seattle, a user may be presented with multiple locations of a chain book stores, Borders, Barnes & Noble, and so on. On a device with a limited screen size only a fraction of the results may be visible at a time. A search book stores in New York City, for example, may yield a list containing links to several Barnes & Noble book stores.","Speech recognition grammars to voice enable the display of such search results may be dynamically generated by a web server or a browser. Grammars generated from the results being presented on the screen may produce ambiguous results when correlating the matched utterance to the data the user sees on the display. In the Barnes & Noble example, the utterance \u201cbarnes and noble\u201d may match grammar elements that voice enable all the links to Barnes & Noble stores in the search results. If grammars are generated in the order the data appears on the display, a prior art speech engine will match the last in a set of duplicates because of the search algorithm in the automatic speech recognition engine\u2014searching from a leaf node up the branches in a grammar tree, for example. If the display has not been scrolled, then the last link to Barnes & Noble is not visible on the display, and the link activated in response to the utterance is not the one visible to user\u2014and therefore unlikely to be the one that the user thought was invoked by the utterance. When this unintended, ambiguous link is invoked, the user confusingly finds that the user is looking at information on some Barnes & Noble store other than the one intended.","Methods, apparatus, and computer program products are described for disambiguating a speech recognition grammar in a multimodal application, the multimodal application including voice activated hyperlinks, the voice activated hyperlinks voice enabled by a speech recognition grammar characterized by ambiguous terminal grammar elements, the method implemented with the multimodal application operating in a multimodal browser on a multimodal device supporting multiple modes of user interaction with the multimodal device, the modes of user interaction including a voice mode and a visual mode, the multimodal browser operatively coupled to a grammar interpreter, where the methods, apparatus, and computer program products include maintaining by the multimodal browser a record of visibility of each voice activated hyperlink, the record of visibility including current visibility and past visibility on a display of the multimodal device of each voice activated hyperlink, the record of visibility further including an ordinal indication, for each voice activated hyperlink scrolled off display, of the sequence in which each such voice activated hyperlink was scrolled off display; recognizing by the multimodal browser speech from a user matching an ambiguous terminal element of the speech recognition grammar; selecting by the multimodal browser a voice activated hyperlink for activation, the selecting carried out in dependence upon the recognized speech and the record of visibility.","The foregoing and other objects, features and advantages of the invention will be apparent from the following more particular descriptions of exemplary embodiments of the invention as illustrated in the accompanying drawings wherein like reference numbers generally represent like parts of exemplary embodiments of the invention.","Exemplary methods, apparatus, and products for disambiguating a speech recognition grammar in a multimodal application according to embodiments of the present invention are described with reference to the accompanying drawings, beginning with .  sets forth a network diagram illustrating an exemplary system for disambiguating a speech recognition grammar in a multimodal application according to embodiments of the present invention. Disambiguating a speech recognition grammar in a multimodal application in this example is implemented with a multimodal application () operating in a multimodal browser () on a multimodal device (). The system of  includes at least one speech recognition grammar () that specifies words and phrases to be recognized by an automatic speech recognition (\u2018ASR\u2019) engine () of a speech engine (, ). The multimodal application () includes voice activated hyperlinks (), and the voice activated hyperlinks are voice enabled by a speech recognition grammar (). The speech recognition grammar is characterized by ambiguous terminal grammar elements ().","The multimodal device (), the multimodal browser (), and the multimodal application () support multiple modes of user interaction with the multimodal application including a voice mode and one or more non-voice modes of user interaction with the multimodal application. The voice mode is represented here with audio output of voice prompts and responses () from the multimodal devices and audio input of speech for recognition () from a user (). Non-voice modes are represented by input\/output devices such as keyboards and display screens on the multimodal devices (). The non-voice modes include at least one visual mode in which a user may interact with the multimodal application through mouse or keyboard interaction with a graphical user interface (\u2018GUI\u2019), for example. The multimodal application is operatively coupled () to a grammar interpreter (). The grammar interpreter () uses an ASR engine () in a speech engine () for speech recognition. The operative coupling may be implemented with an application programming interface (\u2018API\u2019), a voice service module, or a VOIP connection as explained in more detail below.","The system of  operates generally to disambiguate a speech recognition grammar in a multimodal application according to embodiments of the present invention by maintaining by the multimodal browser () a record of visibility () of each voice activated hyperlink, where the record of visibility () includes current visibility and past visibility on a display of a multimodal device () of each voice activated hyperlink (). The record of visibility () also includes an ordinal indication, for each voice activated hyperlink () scrolled off display, of the sequence in which each such voice activated hyperlink was scrolled off display; recognizing by the multimodal browser () speech from a user () matching an ambiguous terminal element () of the speech recognition grammar (); and selecting by the multimodal browser (), in dependence upon the recognized speech () and the record of visibility (), a voice activated hyperlink () for activation.","A multimodal device is an automated device, that is, automated computing machinery or a computer program running on an automated device, that is capable of accepting from users more than one mode of input, keyboard, mouse, stylus, and so on, including speech input\u2014and also displaying more than one mode of output, graphic, speech, and so on. A multimodal device is generally capable of accepting speech input from a user, digitizing the speech, and providing digitized speech to a speech engine for recognition. A multimodal device may be implemented, for example, as a voice-enabled browser on a laptop, a voice browser on a telephone handset, an online game implemented with Java on a personal computer, and with other combinations of hardware and software as may occur to those of skill in the art. Because multimodal applications may be implemented in markup languages (X+V, SALT), object-oriented languages (Java, C++), procedural languages (the C programming language), and in other kinds of computer languages as may occur to those of skill in the art, this specification uses the term \u2018multimodal application\u2019 to refer to any software application, server-oriented or client-oriented, thin client or thick client, that administers more than one mode of input and more than one mode of output, typically including visual and speech modes.","The system of  includes several example multimodal devices:\n\n","Each of the example multimodal devices () in the system of  includes a microphone, an audio amplifier, a digital-to-analog converter, and a multimodal application capable of accepting from a user () speech for recognition (), digitizing the speech, and providing the digitized speech to a speech engine for recognition. The speech may be digitized according to industry standard codecs, including but not limited to those used for Distributed Speech Recognition as such. Methods for \u2018COding\/DECoding\u2019 speech are referred to as \u2018codecs.\u2019 The European Telecommunications Standards Institute (\u2018ETSI\u2019) provides several codecs for encoding speech for use in DSR, including, for example, the ETSI ES 201 108 DSR Front-end Codec, the ETSI ES 202 050 Advanced DSR Front-end Codec, the ETSI ES 202 211 Extended DSR Front-end Codec, and the ETSI ES 202 212 Extended Advanced DSR Front-end Codec. In standards such as RFC3557 entitled\n\n","As mentioned, a multimodal device according to embodiments of the present invention is capable of providing speech to a speech engine for recognition. A speech engine is a functional module, typically a software module, although it may include specialized hardware also, that does the work of recognizing and generating or \u2018synthesizing\u2019 human speech. The speech engine implements speech recognition by use of a further module referred to in this specification as a ASR engine, and the speech engine carries out speech synthesis by use of a further module referred to in this specification as a text-to-speech (\u2018TTS\u2019) engine. As shown in , a speech engine () may be installed locally in the multimodal device () itself, or a speech engine () may be installed remotely with respect to the multimodal device, across a data communications network () in a voice server (). A multimodal device that itself contains its own speech engine is said to implement a \u2018thick multimodal client\u2019 or \u2018thick client,\u2019 because the thick multimodal client device itself contains all the functionality needed to carry out speech recognition and speech synthesis\u2014through API calls to speech recognition and speech synthesis modules in the multimodal device itself with no need to send requests for speech recognition across a network and no need to receive synthesized speech across a network from a remote voice server. A multimodal device that does not contain its own speech engine is said to implement a \u2018thin multimodal client\u2019 or simply a \u2018thin client,\u2019 because the thin multimodal client itself contains only a relatively thin layer of multimodal application software that obtains speech recognition and speech synthesis services from a voice server located remotely across a network from the thin client. For ease of explanation, only one () of the multimodal devices () in the system of  is shown with a speech engine (), but readers will recognize that any multimodal device may have a speech engine according to embodiments of the present invention.","A multimodal application () in this example provides speech for recognition and text for speech synthesis to a speech engine through a VoiceXML interpreter (, ). A VoiceXML interpreter is a software module of computer program instructions that accepts voice dialog instructions from a multimodal application, typically in the form of a VoiceXML <form> element. The voice dialog instructions include one or more grammars, data input elements, event handlers, and so on, that advise the VoiceXML interpreter how to administer voice input from a user and voice prompts and responses to be presented to a user. The VoiceXML interpreter administers such dialogs by processing the dialog instructions sequentially in accordance with a VoiceXML Form Interpretation Algorithm (\u2018FIA\u2019).","As shown in , a VoiceXML interpreter () may be installed locally in the multimodal device () itself, or a VoiceXML interpreter () may be installed remotely with respect to the multimodal device, across a data communications network () in a voice server (). In a thick client architecture, a multimodal device () includes both its own speech engine () and its own VoiceXML interpreter (). The VoiceXML interpreter () exposes an API to the multimodal application () for use in providing speech recognition and speech synthesis for the multimodal application. The multimodal application provides dialog instructions, VoiceXML <form> elements, grammars, input elements, event handlers, and so on, through the API to the VoiceXML interpreter, and the VoiceXML interpreter administers the speech engine on behalf of the multimodal application. In the thick client architecture, VoiceXML dialogs are interpreted by a VoiceXML interpreter on the multimodal device. In the thin client architecture, VoiceXML dialogs are interpreted by a VoiceXML interpreter on a voice server () located remotely across a data communications network () from the multimodal device running the multimodal application ().","The VoiceXML interpreter provides grammars, speech for recognition, and text prompts for speech synthesis to the speech engine, and the VoiceXML interpreter returns to the multimodal application speech engine output in the form of recognized speech, semantic interpretation results, and digitized speech for voice prompts. In a thin client architecture, the VoiceXML interpreter () is located remotely from the multimodal client device in a voice server (), the API for the VoiceXML interpreter is still implemented in the multimodal device, with the API modified to communicate voice dialog instructions, speech for recognition, and text and voice prompts to and from the VoiceXML interpreter on the voice server. For ease of explanation, only one () of the multimodal devices () in the system of  is shown with a VoiceXML interpreter (), but readers will recognize that any multimodal device may have a VoiceXML interpreter according to embodiments of the present invention. Each of the example multimodal devices () in the system of  may be configured to carry out disambiguating a speech recognition grammar in a multimodal application by installing and running on the multimodal device a multimodal application and a multimodal browser that carries out disambiguating a speech recognition grammar according to embodiments of the present invention.","The use of these four example multimodal devices () is for explanation only, not for limitation of the invention. Any automated computing machinery capable of accepting speech from a user, providing the speech digitized to an ASR engine through a VoiceXML interpreter, and receiving and playing speech prompts and responses from the VoiceXML interpreter may be improved to function as a multimodal device for disambiguating a speech recognition grammar in a multimodal application according to embodiments of the present invention.","The system of  also includes a voice server () which is connected to data communications network () through wireline connection (). The voice server () is a computer that runs a speech engine () that provides voice recognition services for multimodal devices by accepting requests for speech recognition and returning text representing recognized speech. Voice server () also provides speech synthesis, text to speech (\u2018TTS\u2019) conversion, for voice prompts and voice responses () to user input in multimodal applications such as, for example, X+V applications, SALT applications, or Java voice applications.","The system of  includes a data communications network () that connects the multimodal devices () and the voice server () for data communications. A data communications network for disambiguating a speech recognition grammar in a multimodal application according to embodiments of the present invention is a data communications data communications network composed of a plurality of computers that function as data communications routers connected for data communications with packet switching protocols. Such a data communications network may be implemented with optical connections, wireline connections, or with wireless connections. Such a data communications network may include intranets, internets, local area data communications networks (\u2018LANs\u2019), and wide area data communications networks (\u2018WANs\u2019). Such a data communications network may implement, for example:\n\n","The system of  includes a web server () connected for data communications through wireline connection () to network () and therefore to the multimodal devices (). The web server () may be any server that provides to client devices markup documents that compose multimodal applications. The web server () typically provides such markup documents via a data communications protocol, HTTP, HDTP, WAP, or the like. That is, although the term \u2018web\u2019 is used to described the web server generally in this specification, there is no limitation of data communications between multimodal devices and the web server to HTTP alone. The markup documents also may be implemented in any markup language that supports non-speech display elements, data entry elements, and speech elements for identifying which speech to recognize and which words to speak, grammars, form elements, and the like, including, for example, X+V and SALT. A multimodal application in a multimodal device then, upon receiving from the web sever () a markup document as part of a multimodal application, may execute speech elements by use of a VoiceXML interpreter () and speech engine () in the multimodal device itself or by use of a VoiceXML interpreter () and speech engine () located remotely from the multimodal device in a voice server ().","The arrangement of the multimodal devices (), the web server (), the voice server (), and the data communications network () making up the exemplary system illustrated in  are for explanation, not for limitation. Data processing systems useful for disambiguating a speech recognition grammar in a multimodal application according to various embodiments of the present invention may include additional servers, routers, other devices, and peer-to-peer architectures, not shown in , as will occur to those of skill in the art. Data communications networks in such data processing systems may support many data communications protocols in addition to those noted above. Various embodiments of the present invention may be implemented on a variety of hardware platforms in addition to those illustrated in .","For further explanation of terminal grammar elements,  sets forth a chart illustrating an example speech recognition grammar as a tree structure. The following example is a grammar of a kind that can be disambiguated according to embodiments of the present invention that supports ordering pizza, with the grammar expressed in Java Speech Grammar Format (\u2018JSGF\u2019):",{"@attributes":{"id":"p-0041","num":"0068"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"189pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"order = [<polite_phrase>] <pizza_topping> pizza"]},{"entry":[{},"pizza_topping = cheese | pepperoni | \u201citalian sausage\u201d"]},{"entry":[{},"polite_phrase = [I][want] | [give] [me]"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The example of  maps the elements of the \u2018order\u2019 grammar into a tree structure with the \u2018order\u2019 element () at the root of the tree. The terms \u2018order,\u2019 \u2018pizza_topping,\u2019 and \u2018polite_phrase\u2019 specify rules of the grammar. Grammar elements in angled brackets < >, <polite_phrase> () and <pizza_topping> (), are references to rules of the grammar, also called non-terminals, because they represent branch nodes in the tree structure of the grammar that expand into further branch nodes or leaf nodes.","A \u2018terminal element\u2019 is a leaf node in the tree structure of the grammar. \u2018Pizza\u2019 () is a non-optional leaf node; if the \u2018order\u2019 grammar is to be matched, the word \u2018pizza\u2019 must be matched with a user utterance. The vertical bars \u2018|\u2019 designate grammar elements as alternatives, the use of any one of which will match a grammar element. In the rule <pizza_toppings>, \u2018cheese\u2019 (), \u2018pepperoni\u2019 (), and \u2018italian sausage\u2019 () are non-optional, alternative terminal elements. If the \u2018order\u2019 grammar is to be matched, the user much speak one of \u2018cheese,\u2019 \u2018pepperoni,\u2019 or \u2018italian sausage.\u2019","The grammar terms in square brackets [ ] are optional. The square brackets in [<polite_phrase>] designate the \u2018polite phrase\u2019 rule as an optional, non-terminal element, a branch node in the grammar tree. The terms of the <polite phrase> () rule in square brackets therefore are \u2018optional terminals,\u2019 leaf nodes in the grammar tree which in this example form two optional alternative phrases (, ), each of which is composed of two optional alternative terminals or leaf nodes, respectively: [I] () [want] () and [give] () [me] (). As explained in more detail below, in addition to being optional or non-optional, terminal grammar elements also may be ambiguous.","Disambiguating a speech recognition grammar in a multimodal application according to embodiments of the present invention in a thin client architecture may be implemented with one or more voice servers, computers, that is, automated computing machinery, that provide speech recognition and speech synthesis. For further explanation, therefore,  sets forth a block diagram of automated computing machinery comprising an example of a computer useful as a voice server () in disambiguating a speech recognition grammar in a multimodal application according to embodiments of the present invention. The voice server () of  includes at least one computer processor () or \u2018CPU\u2019 as well as random access memory () (\u2018RAM\u2019) which is connected through a high speed memory bus () and bus adapter () to processor () and to other components of the voice server.","Stored in RAM () is a voice server application (), a module of computer program instructions capable of operating a voice server in a system that is configured to carry out automatic speech recognition according to embodiments of the present invention. Voice server application () provides voice recognition services for multimodal devices by accepting requests for speech recognition and returning speech recognition results, including text representing recognized speech, text for use as variable values in dialogs, and text as string representations of scripts for semantic interpretation. Voice server application () also includes computer program instructions that provide text-to-speech (\u2018TTS\u2019) conversion for voice prompts and voice responses to user input in multimodal applications such as, for example, X+V applications, SALT applications, or Java Speech applications.","Voice server application () may be implemented as a web server, implemented in Java, C++, or another language, that supports X+V, SALT, VoiceXML, or other multimodal languages, by providing responses to HTTP requests from X+V clients, SALT clients, Java Speech clients, or other multimodal clients. Voice server application () may, for a further example, be implemented as a Java server that runs on a Java Virtual Machine () and supports a Java voice framework by providing responses to HTTP requests from Java client applications running on multimodal devices. And voice server applications that support automatic speech recognition may be implemented in other ways as may occur to those of skill in the art, and all such ways are well within the scope of the present invention.","The voice server () in this example includes a speech engine (). The speech engine is a functional module, typically a software module, although it may include specialized hardware also, that does the work of recognizing and generating human speech. The speech engine () includes an automated speech recognition (\u2018ASR\u2019) engine for speech recognition and a text-to-speech (\u2018TTS\u2019) engine for generating speech. The speech engine also includes a grammar (), a lexicon (), and a language-specific acoustic model (). The language-specific acoustic model () is a data structure, a table or database, for example, that associates SFVs with phonemes representing, to the extent that it is practically feasible to do so, all pronunciations of all the words in a human language. The lexicon () is an association of words in text form with phonemes representing pronunciations of each word; the lexicon effectively identifies words that are capable of recognition by an ASR engine. Also stored in RAM () is a Text To Speech (\u2018TTS\u2019) Engine (), a module of computer program instructions that accepts text as input and returns the same text in the form of digitally encoded speech, for use in providing speech as prompts for and responses to users of multimodal systems.","The grammar () communicates to the ASR engine () the words and sequences of words that currently may be recognized. For precise understanding, distinguish the purpose of the grammar and the purpose of the lexicon. The lexicon associates with phonemes all the words that the ASR engine can recognize. The grammar communicates the words currently eligible for recognition. The set of words currently eligible for recognition and the set of words capable of recognition may or may not be the same.","Grammars for use in automatic speech recognition according to embodiments of the present invention may be expressed in any format supported by any ASR engine, including, for example, the Java Speech Grammar Format (\u2018JSGF\u2019), the format of the W3C Speech Recognition Grammar Specification (\u2018SRGS\u2019), the Augmented Backus-Naur Format (\u2018ABNF\u2019) from the IETF's RFC2234, in the form of a stochastic grammar as described in the W3C's Stochastic Language Models (N-Gram) Specification, and in other grammar formats as may occur to those of skill in the art. Grammars typically operate as elements of dialogs, such as, for example, a VoiceXML <menu> or an X+V <form>. A grammar's definition may be expressed in-line in a dialog. Or the grammar may be implemented externally in a separate grammar document and referenced from with a dialog with a URI. Here is an example of a grammar expressed in JSFG:",{"@attributes":{"id":"p-0051","num":"0078"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<grammar scope=\u201cdialog\u201d ><![CDATA["]},{"entry":[{},"\u2003#JSGF V1.0;"]},{"entry":[{},"\u2003grammar command;"]},{"entry":[{},"\u2003<command> = [remind me to] call | phone | telephone <name>"]},{"entry":[{},"\u2003<when>;"]},{"entry":[{},"\u2003<name> = bob | martha | joe | pete | chris | john | artoush;"]},{"entry":[{},"\u2003<when> = today | this afternoon | tomorrow | next week;"]},{"entry":[{},"\u2003]]>"]},{"entry":[{},"<\/grammar>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"In this example, the elements named <command>, <name>, and <when> are rules of the grammar. Rules are a combination of a rulename and an expansion of a rule that advises an ASR engine or a grammar interpreter which words presently can be recognized. In this example, expansion includes conjunction and disjunction, and the vertical bars \u2018|\u2019 mean \u2018or.\u2019 An ASR engine or a grammar interpreter processes the rules in sequence, first <command>, then <name>, then <when>. The <command> rule accepts for recognition \u2018call\u2019 or \u2018phone\u2019 or \u2018telephone\u2019 plus, that is, in conjunction with, whatever is returned from the <name> rule and the <when> rule.","The <name> rule accepts \u2018bob\u2019 or \u2018martha\u2019 or \u2018joe\u2019 or \u2018pete\u2019 or \u2018chris\u2019 or \u2018john\u2019 or \u2018artoush\u2019, and the <when> rule accepts \u2018today\u2019 or \u2018this afternoon\u2019 or \u2018tomorrow\u2019 or \u2018next week.\u2019 The command grammar as a whole matches utterances like these, for example:\n\n","The voice server application () in this example is configured to receive, from a multimodal client located remotely across a network from the voice server, digitized speech for recognition from a user and pass the speech along to the ASR engine () for recognition. ASR engine () is a module of computer program instructions, also stored in RAM in this example. In carrying out automated speech recognition, the ASR engine receives speech for recognition in the form of at least one digitized word and uses frequency components of the digitized word to derive a Speech Feature Vector (\u2018SFV\u2019). An SFV may be defined, for example, by the first twelve or thirteen Fourier or frequency domain components of a sample of digitized speech. The ASR engine can use the SFV to infer phonemes for the word from the language-specific acoustic model (). The ASR engine then uses the phonemes to find the word in the lexicon ().","Also stored in RAM is a VoiceXML interpreter (), a module of computer program instructions that processes VoiceXML grammars. VoiceXML input to VoiceXML interpreter () may originate, for example, from VoiceXML clients running remotely on multimodal devices, from X+V clients running remotely on multimodal devices, from SALT clients running on multimodal devices, or from Java client applications running remotely on multimedia devices. In this example, VoiceXML interpreter () interprets and executes VoiceXML segments representing voice dialog instructions received from remote multimedia devices and provided to VoiceXML interpreter () through voice server application ().","A multimodal application () in a thin client architecture may provide voice dialog instructions, VoiceXML segments, VoiceXML <form> elements, and the like, to VoiceXML interpreter () through data communications across a network with multimodal application (). The voice dialog instructions include one or more grammars, data input elements, event handlers, and so on, that advise the VoiceXML interpreter how to administer voice input from a user and voice prompts and responses to be presented to a user. The VoiceXML interpreter administers such dialogs by processing the dialog instructions sequentially in accordance with a VoiceXML Form Interpretation Algorithm (\u2018FIA\u2019). The VoiceXML interpreter interprets VoiceXML dialogs provided to the VoiceXML interpreter by a multimodal application.","Also stored in RAM () is an operating system (). Operating systems useful in voice servers according to embodiments of the present invention include UNIX\u2122, Linux\u2122, Microsoft NT\u2122, AIX\u2122, IBM's i5\/OS\u2122, and others as will occur to those of skill in the art. Operating system (), voice server application (), VoiceXML interpreter (), ASR engine (), JVM (), and TTS Engine () in the example of  are shown in RAM (), but many components of such software typically are stored in non-volatile memory also, for example, on a disk drive ().","Voice server () of  includes bus adapter (), a computer hardware component that contains drive electronics for high speed buses, the front side bus (), the video bus (), and the memory bus (), as well as drive electronics for the slower expansion bus (). Examples of bus adapters useful in voice servers according to embodiments of the present invention include the Intel Northbridge, the Intel Memory Controller Hub, the Intel Southbridge, and the Intel I\/O Controller Hub. Examples of expansion buses useful in voice servers according to embodiments of the present invention include Industry Standard Architecture (\u2018ISA\u2019) buses and Peripheral Component Interconnect (\u2018PCI\u2019) buses.","Voice server () of  includes disk drive adapter () coupled through expansion bus () and bus adapter () to processor () and other components of the voice server (). Disk drive adapter () connects non-volatile data storage to the voice server () in the form of disk drive (). Disk drive adapters useful in voice servers include Integrated Drive Electronics (\u2018IDE\u2019) adapters, Small Computer System Interface (\u2018SCSI\u2019) adapters, and others as will occur to those of skill in the art. In addition, non-volatile computer memory may be implemented for a voice server as an optical disk drive, electrically erasable programmable read-only memory (so-called \u2018EEPROM\u2019 or \u2018Flash\u2019 memory), RAM drives, and so on, as will occur to those of skill in the art.","The example voice server of  includes one or more input\/output (\u2018I\/O\u2019) adapters (). I\/O adapters in voice servers implement user-oriented input\/output through, for example, software drivers and computer hardware for controlling output to display devices such as computer display screens, as well as user input from user input devices () such as keyboards and mice. The example voice server of  includes a video adapter (), which is an example of an I\/O adapter specially designed for graphic output to a display device () such as a display screen or computer monitor. Video adapter () is connected to processor () through a high speed video bus (), bus adapter (), and the front side bus (), which is also a high speed bus.","The exemplary voice server () of  includes a communications adapter () for data communications with other computers () and for data communications with a data communications network (). Such data communications may be carried out serially through RS-232 connections, through external buses such as a Universal Serial Bus (\u2018USB\u2019), through data communications data communications networks such as IP data communications networks, and in other ways as will occur to those of skill in the art. Communications adapters implement the hardware level of data communications through which one computer sends data communications to another computer, directly or through a data communications network. Examples of communications adapters useful for disambiguating a speech recognition grammar in a multimodal application according to embodiments of the present invention include modems for wired dial-up communications, Ethernet (IEEE 802.3) adapters for wired data communications network communications, and 802.11 adapters for wireless data communications network communications.","For further explanation,  sets forth a functional block diagram of exemplary apparatus for disambiguating a speech recognition grammar in a multimodal application in a thin client architecture according to embodiments of the present invention. The example of  includes a multimodal device () and a voice server () connected for data communication by a VOIP connection () through a data communications network (). A multimodal application () runs on the multimodal device (), and a voice server application () runs on the voice server (). The multimodal client application () may be a set or sequence of X+V or SALT documents that execute on multimodal browser (), a Java voice application that executes on the Java Virtual Machine (\u2018JVM\u2019), or a multimodal application implemented in other technologies as may occur to those of skill in the art. The multimodal application () includes voice activated hyperlinks (), and the voice activated hyperlinks are voice enabled by a speech recognition grammar (). The speech recognition grammar is characterized by ambiguous terminal grammar elements (). The example multimodal device of  also includes a sound card (), which is an example of an I\/O adapter specially designed for accepting analog audio signals from a microphone () and converting the audio analog signals to digital form for further processing by a codec ().","In addition to the multimodal sever application (), the voice server () also has installed upon it a speech engine () with an ASR engine (), a grammar (), a lexicon (), a language-specific acoustic model (), and a TTS engine (), as well as a JVM (), and a Voice XML interpreter (). VoiceXML interpreter () interprets and executes VoiceXML dialog instructions received from the multimodal application and provided to VoiceXML interpreter () through voice server application (). VoiceXML input to VoiceXML interpreter () may originate from the multimodal application () implemented as an X+V client running remotely on the multimodal device (). As noted above, the multimedia device application () also may be implemented as a Java client application running remotely on the multimedia device (), a SALT application running remotely on the multimedia device (), and in other ways as may occur to those of skill in the art.","VOIP stands for \u2018Voice Over Internet Protocol,\u2019 a generic term for routing speech over an IP-based data communications network. The speech data flows over a general-purpose packet-switched data communications network, instead of traditional dedicated, circuit-switched voice transmission lines. Protocols used to carry voice signals over the IP data communications network are commonly referred to as \u2018Voice over IP\u2019 or \u2018VOIP\u2019 protocols. VOIP traffic may be deployed on any IP data communications network, including data communications networks lacking a connection to the rest of the Internet, for instance on a private building-wide local area data communications network or \u2018LAN.\u2019","Many protocols are used to effect VOIP. The two most popular types of VOIP are effected with the IETF's Session Initiation Protocol (\u2018SIP\u2019) and the ITU's protocol known as \u2018H.323.\u2019 SIP clients use TCP and UDP port  to connect to SIP servers. SIP itself is used to set up and tear down calls for speech transmission. VOIP with SIP then uses RTP for transmitting the actual encoded speech. Similarly, H.323 is an umbrella recommendation from the standards branch of the International Telecommunications Union that defines protocols to provide audio-visual communication sessions on any packet data communications network.","The apparatus of  operates in a manner that is similar to the operation of the system of  described above. Multimodal application () is a user-level, multimodal, client-side computer program that presents a voice interface to user (), provides audio prompts and responses () and accepts input speech for recognition (). Multimodal application () provides a speech interface through which a user may provide oral speech for recognition through microphone () and have the speech digitized through an audio amplifier () and a coder\/decoder (\u2018codec\u2019) () of a sound card () and provide the digitized speech for recognition to ASR engine (). Multimodal application () then packages the digitized speech in a recognition request message according to a VOIP protocol, and transmits the speech to voice server () through the VOIP connection () on the network ().","Voice server application () provides voice recognition services for multimodal devices by accepting dialog instructions, VoiceXML segments, and returning speech recognition results, including text representing recognized speech, text for use as variable values in dialogs, and output from execution of semantic interpretation scripts as well as voice prompts. Voice server application () includes computer program instructions that provide text-to-speech (\u2018TTS\u2019) conversion for voice prompts and voice responses to user input in multimodal applications such as, for example, X+V applications, SALT applications, or Java Speech applications.","The voice server application () receives speech for recognition from a user and passes the speech through API calls to VoiceXML interpreter () which in turn uses an ASR engine () for speech recognition. The ASR engine receives digitized speech for recognition, uses frequency components of the digitized speech to derive an SFV, uses the SFV to infer phonemes for the word from the language-specific acoustic model (), and uses the phonemes to find the speech in the lexicon (). The ASR engine then compares speech found as words in the lexicon to words in a grammar () to determine whether words or phrases in speech are recognized by the ASR engine.","The system of  operates generally to disambiguate a speech recognition grammar in a multimodal application according to embodiments of the present invention by maintaining by the multimodal browser () a record of visibility () of each voice activated hyperlink, where the record of visibility () includes current visibility and past visibility on a display of a multimodal device () of each voice activated hyperlink (). The record of visibility () also includes an ordinal indication, for each voice activated hyperlink () scrolled off display, of the sequence in which each such voice activated hyperlink was scrolled off display; recognizing by the multimodal browser () speech from a user () matching an ambiguous terminal element () of the speech recognition grammar (); and selecting by the multimodal browser (), in dependence upon the recognized speech () and the record of visibility (), a voice activated hyperlink () for activation.","The multimodal browser () is operatively coupled to a grammar interpreter, in this example, a VoiceXML interpreter (). In this example, the operative coupling between the multimodal browser and the grammar interpreter () is implemented with a VOIP connection () through a voice services module (), then through the voice server application (). The voice services module () is a thin layer of functionality, a module of computer program instructions, that presents an API () for use by an application level program in providing dialog instructions and speech for recognition to a voice server application () and receiving in response voice prompts and other responses. In this example, application level programs are represented by multimodal application () and multimodal browser ().","The voice services module () provides data communications services through the VOIP connection and the voice server application () between the multimodal device () and the VoiceXML interpreter (). The API () is the same API presented to applications by a VoiceXML interpreter when the VoiceXML interpreter is installed on the multimodal device in a thick client architecture ( on ).","So from the point of view of an application calling the API (), the application is calling the VoiceXML interpreter directly. The data communications functions of the voice services module () are transparent to applications that call the API (). At the application level, calls to the API () may be issued from the multimodal browser (), which provides an execution environment for the multimodal application () when the multimodal application is implemented with X+V. And calls to the API () may be issued from a JVM (not shown), which provides an execution environment for multimodal applications implemented with Java.","Disambiguating a speech recognition grammar in a multimodal application according to embodiments of the present invention in thick client architectures is generally implemented with multimodal devices, that is, automated computing machinery or computers. In the system of , for example, all the multimodal devices () are implemented to some extent at least as computers. For further explanation, therefore,  sets forth a block diagram of automated computing machinery comprising an example of a computer useful as a multimodal device () in disambiguating a speech recognition grammar in a multimodal application according to embodiments of the present invention. In a multimodal device implementing a thick client architecture as illustrated in , the multimodal device () has no connection to a remote voice server containing a VoiceXML interpreter and a speech engine. All the components needed for speech synthesis and voice recognition in disambiguating a speech recognition grammar in a multimodal application according to embodiments of the present invention are installed or embedded in the multimodal device itself.","The example multimodal device () of  includes several components that are structured and operate similarly as do parallel components of the voice server, having the same drawing reference numbers, as described above with reference to : at least one computer processor (), frontside bus (), RAM (), high speed memory bus (), bus adapter (), video adapter (), video bus (), expansion bus (), communications adapter (), I\/O adapter (), disk drive adapter (), an operating system (), a JVM (), a VoiceXML Interpreter (), a speech engine (), and so on. As in the system of , the speech engine in the multimodal device of  includes an ASR engine (), a grammar (), a lexicon (), a language-dependent acoustic model (), and a TTS engine (). The VoiceXML interpreter () administers such dialogs by processing the dialog instructions sequentially in accordance with a VoiceXML Form Interpretation Algorithm (\u2018FIA\u2019) ().","The speech engine () in this kind of embodiment, a thick client architecture, often is implemented as an embedded module in a small form factor device such as a handheld device, a mobile phone, PDA, and the like. An example of an embedded speech engine useful for automatic speech recognition according to embodiments of the present invention is IBM's Embedded ViaVoice Enterprise. The example multimodal device of  also includes a sound card (), which is an example of an I\/O adapter specially designed for accepting analog audio signals from a microphone () and converting the audio analog signals to digital form for further processing by a codec (). The sound card () is connected to processor () through expansion bus (), bus adapter (), and front side bus ().","Also stored in RAM () in this example is a multimodal application (), a module of computer program instructions capable of operating a multimodal device as an apparatus that supports disambiguating a speech recognition grammar in a multimodal application according to embodiments of the present invention. The multimodal application () implements speech recognition by accepting speech for recognition from a user and sending the speech for recognition through API calls to the ASR engine (). The multimodal application () implements speech synthesis generally by sending words to be used as prompts for a user to the TTS engine (). As an example of thick client architecture, the multimodal application () in this example does not send speech for recognition across a network to a voice server for recognition, and the multimodal application () in this example does not receive synthesized speech, TTS prompts and responses, across a network from a voice server. All grammar processing, voice recognition, and text to speech conversion in this example is performed in an embedded fashion in the multimodal device () itself. The multimodal application () includes voice activated hyperlinks (), and the voice activated hyperlinks are voice enabled by a speech recognition grammar (). The speech recognition grammar is characterized by ambiguous terminal grammar elements ().","More particularly, multimodal application () in this example is a user-level, multimodal, client-side computer program that provides a speech interface through which a user may provide oral speech for recognition through microphone (), have the speech digitized through an audio amplifier () and a coder\/decoder (\u2018codec\u2019) () of a sound card () and provide the digitized speech for recognition to ASR engine (). The multimodal application () may be implemented as a set or sequence of X+V documents executing in a multimodal browser () or microbrowser that passes VoiceXML grammars and digitized speech by calls through an API () directly to an embedded VoiceXML interpreter () for processing. The embedded VoiceXML interpreter () may in turn issue requests for speech recognition through API calls directly to the embedded ASR engine (). Multimodal application () also can provide speech synthesis, TTS conversion, by API calls to the embedded TTS engine () for voice prompts and voice responses to user input.","In a further class of exemplary embodiments, the multimodal application () may be implemented as a Java voice application that executes on Java Virtual Machine () and issues calls through the VoiceXML API () for speech recognition and speech synthesis services. In further exemplary embodiments, the multimodal application () may be implemented as a set or sequence of SALT documents executed on a multimodal browser () or microbrowser that issues calls through the VoiceXML API () for speech recognition and speech synthesis services. In addition to X+V, SALT, and Java implementations, multimodal application () may be implemented in other technologies as will occur to those of skill in the art, and all such implementations are well within the scope of the present invention.","In the example system of , the multimodal application () and the multimodal browser disambiguate a speech recognition grammar in a multimodal application according to embodiments of the present invention by maintaining by the multimodal browser () a record of visibility () of each voice activated hyperlink, where the record of visibility () includes current visibility and past visibility on a display of a multimodal device () of each voice activated hyperlink (). The record of visibility () also includes an ordinal indication, for each voice activated hyperlink () scrolled off display, of the sequence in which each such voice activated hyperlink was scrolled off display; recognizing by the multimodal browser () speech from a user () matching an ambiguous terminal element () of the speech recognition grammar (); and selecting by the multimodal browser (), in dependence upon the recognized speech () and the record of visibility (), a voice activated hyperlink () for activation.","The multimodal application () is operatively coupled to the ASR engine (). In this example, the operative coupling between the multimodal application and the ASR engine () is implemented either JVM (), VoiceXML interpreter (), or SALT interpreter (), depending on whether the multimodal application is implemented in X+V, Java, or SALT. When the multimodal application () is implemented in X+V, the operative coupling is effected through the multimodal browser (), which provides an operating environment and an interpreter for the X+V application, and then through the VoiceXML interpreter, which passes grammars and voice utterances for recognition to the ASR engine. When the multimodal application () is implemented in Java Speech, the operative coupling is effected through the JVM (), which provides an operating environment for the Java application and passes grammars and voice utterances for recognition to the ASR engine. When the multimodal application () is implemented in SALT, the operative coupling is effected through the SALT interpreter (), which provides an operating environment and an interpreter for the X+V application and passes grammars and voice utterances for recognition to the ASR engine.","The multimodal application () in this example, running on a multimodal device () that contains its own VoiceXML interpreter () and its own speech engine () with no network or VOIP connection to a remote voice server containing a remote VoiceXML interpreter or a remote speech engine, is an example of a so-called \u2018thick client architecture,\u2019 so-called because all of the functionality for processing voice mode interactions between a user and the multimodal application\u2014as well as the functionality for disambiguating a speech recognition grammar in a multimodal application according to embodiments of the present invention\u2014is implemented on the multimodal device itself.","For further explanation,  sets forth a flow chart illustrating an exemplary method of disambiguating a speech recognition grammar in a multimodal application according to embodiments of the present invention. Disambiguating a speech recognition grammar in this example is implemented with a multimodal application () operating in a multimodal browser () on a multimodal device () supporting multiple modes of user interaction with the multimodal device. The modes of user interaction include a voice mode and a visual mode. The voice mode is represented in this example with audio output through a speaker () and audio input through a microphone (). In the visual mode, a user may interact with the multimodal device (), the multimodal browser (), and the multimodal application () through mouse or keyboard interaction () with a graphical user interface (\u2018GUI\u2019), for example, as may be displayed on the display device ().","The multimodal application () includes voice activated hyperlinks (), and the voice activated hyperlinks are voice enabled by a speech recognition grammar (). The speech recognition grammar is characterized by ambiguous terminal grammar elements (). This pseudocode segment of a multimodal application implemented with X+V, for example:",{"@attributes":{"id":"p-0084","num":"0115"},"tables":{"@attributes":{"id":"TABLE-US-00003","num":"00003"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<head>"},{"entry":"\u2003<field name=\u201cvfield\u201d>"},{"entry":"\u2003\u2003<grammar>"},{"entry":"\u2003\u2003\u2003(1 | Seattle's Best Coffee) {$=\u2018link-id-1\u2019} |"},{"entry":"\u2003\u2003\u2003(2 | Tully's Coffee Corporation) {$=\u2018link-id-2\u2019} |"},{"entry":"\u2003\u2003\u2003..."},{"entry":"\u2003\u2003\u2003(11 | Tully's Coffee Corporation) {$=\u2018link-id-11\u2019} |"},{"entry":"\u2003\u2003\u2003..."},{"entry":"\u2003\u2003<grammar>"},{"entry":"\u2003\u2003<filled>"},{"entry":"\u2003\u2003\u2003<value expr=\u201cdocument.getElementById(vField).click( )\u201d\/>"},{"entry":"\u2003\u2003\u2003..."},{"entry":"\u2003\u2003<\/filled>"},{"entry":"\u2003<\/field>"},{"entry":"<\/head>"},{"entry":"<body>"},{"entry":"\u2003<a class=\u201ctb\u201d href=\u201cdetails.jsp?n=1\u201d id=\u201clink-id-1\u201d>1. Seattle's Best"},{"entry":"\u2003\u2003Coffee<\/a><\/b>"},{"entry":"\u2003<a class=\u201ctb\u201d href=\u201cdetails.jsp?n=2\u201d id=\u201clink-id-2\u201d>2. Tully's Coffee"},{"entry":"\u2003\u2003Corporation<\/a><\/b>"},{"entry":"\u2003..."},{"entry":"\u2003<a class=\u201ctb\u201d href=\u201cdetails.jsp?n=11\u201d id=\u201clink-id-11\u201d>11. Tully's"},{"entry":"\u2003\u2003Coffee Corporation<\/a><\/b>"},{"entry":"\u2003..."},{"entry":"<\/body>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"p-0085","num":"0116"},"tables":{"@attributes":{"id":"TABLE-US-00004","num":"00004"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"35pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"182pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"(1 | Seattle's Best Coffee) {$=\u2018link-id-1\u2019} |"]},{"entry":[{},"(2 | Tully's Coffee Corporation) {$=\u2018link-id-2\u2019} |"]},{"entry":[{},"..."]},{"entry":[{},"(11 | Tully's Coffee Corporation) {$=\u2018link-id-11\u2019} |"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The speech recognition grammar set forth in the <grammar> element is characterized by ambiguous terminal grammar elements because the phrase \u201cTully's Coffee Corporation\u201d matches terminal grammar elements in more than one grammar rule. That is, the phrase matches this terminal grammar element:\n\n","The multimodal browser () is operatively coupled () to a grammar interpreter (). The operative coupling () provides a data communications path () from the multimodal browser () to the grammar interpreter for speech recognition grammars () and speech input. The operative coupling () provides a data communications path () from grammar interpreter () to the multimodal browser () for return of recognized speech () and semantic interpretation results. The grammar interpreter may be, for example, a SALT interpreter or a VoiceXML interpreter. The operative coupling may be effected, for example, with an API ( on ) into a VoiceXML interpreter ( on ) when the multimodal application is implemented in a thick client architecture. When the multimodal application is implemented in a thin client architecture, the operative coupling may include a voice services module ( on ) and a VOIP connection ( on ). When the multimodal application () is implemented in X+V, the operative coupling may include a VoiceXML interpreter ( on ). When the multimodal application is implemented in a Java speech framework, the operative coupling may include a Java speech API and a JVM. When the multimodal application is implemented in SALT, the operative coupling may include a SALT interpreter.","The method of  is explained with reference to , of course, and it is also explained with reference to  and to the computer program listing set forth at the end of this specification just before the claims.  illustrates a example display of voice activated hyperlinks to be disambiguated according to embodiments of the present invention by a multimodal browser operating a multimodal application on a multimodal device. In the example of , the multimodal device is represented as a Pocket PC\u2122, a handheld device that would typically run the Windows CE\u2122 operating system. In the example of , a user has navigated a browser to a Yahoo\u2122 search for coffee shops in Seattle, Wash. The search has returned a set of 20 descriptions of coffee shops in Seattle, Wash., each of which is displayed with a voice enabled hyperlink. At the point in the user's operation of the multimodal device illustrated in , the first seven voice enabled hyperlinks () have been scrolled vertically off the display screen of the multimodal device, the voice enabled hyperlinks numbered - () are visible on the display screen, and the voice enabled hyperlinks numbered - () are not visible on the display. The voice enabled hyperlinks numbered - () may be off display because they have never been scrolled on or because they were previously scrolled on and then scrolled back off again.","The computer program listing set forth at the end of this specification just before the claims is a pseudocode listing of a example X+V page of a multimodal application that disambiguates a speech recognition grammar according to embodiments of the present invention. The computer program listing is termed a \u2018pseudocode listing\u2019 because it is an explanation presented in the form of computer code rather than a working model of a computer program. The example X+V page is a page that may be returned from a browser query regarding coffee shops in Seattle, Wash., like the query described with reference to . The example X+V page when executed in a browser may generate a display of voice enabled hyperlinks like the one illustrated in . In this specification, therefore, the display of  and the example X+V page in the computer program listing are referred to generally as \u2018the coffee shops example.\u2019","The method of  includes maintaining () by the multimodal browser a record of visibility () of each voice activated hyperlink (). The record of visibility may be implemented as any appropriate data structure as may occur to those of skill in the art, a list, a linked list, a C structure, a C++class, an array of structures, a record in a table, and so on. In this example, the record of visibility () including current visibility and past visibility on a display of the multimodal device of each voice activated hyperlink, implemented respectively as Boolean data elements named \u2018Is-Visible\u2019 () and \u2018Was-Visible\u2019 (). The Boolean data element have a value of TRUE or FALSE. For Is-Visible, TRUE indicates that a voice activated hyperlink whose visibility is represented by a record of visibility is currently visible on a display screen of a multimodal device, and FALSE indicates that the voice activated hyperlink is not visible\u2014either because it has never been scrolled on to the display or because it was previously visible and was scrolled off the display. For the Boolean data element Was-Visible, the value TRUE indicates that a voice activated hyperlink was previously visible on the display, and FALSE indicates that a voice activated hyperlink was not previously visible on the display.","The record of visibility () also includes an ordinal indication, for each voice activated hyperlink scrolled off display, of the sequence in which each such voice activated hyperlink was scrolled off display, implemented here as an integer field named \u2018Scrolled-Off-Display\u2019 (). That is, Scrolled-Off-Display takes ordinal values, 0, 1, 2, 3, and so on, where the value zero may be taken as an indication that a voice activated hyperlink is visible. Other values may be taken from a scrolled-off-display counter indicating the sequence in which a voice activated hyperlink was scrolled off display. The record of visibility also includes a foreign key field named \u2018Link-ID\u2019 () that identifies the voice activated hyperlinks whose visibility and history are represented in the record.","In the method of  the multimodal application () includes an X+V page () that includes the voice activated hyperlinks (). That is, in this example, the multimodal application is implemented as an X+V application. The implementation with X+V is for ease of explanation, not a limitation of the invention. The multimodal application may be implemented in any technology as will occur to those of skill in the art, including, for example, Java or SALT. When the multimodal application is implemented with X+V, each voice activated hyperlink () may include an XHTML anchor element bound to a terminal element of the grammar () by a value of an identifying attribute of the anchor element, where the value of the identifying attribute is unique within an X+V page. An example of such a hyperlink from the coffee shops example is the hyperlink implemented by following anchor element:\n\n","Similarly, this hyperlink from the coffee shops example:",{"@attributes":{"id":"p-0094","num":"0129"},"tables":{"@attributes":{"id":"TABLE-US-00005","num":"00005"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<a class=\u201ctb\u201d href=\u201cdetails.jsp?n=2\u201d id=\u201clink-id-2\u201d>2. Tully's Coffee"},{"entry":"\u2003Corporation<\/a>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}},"br":{},"ul":{"@attributes":{"id":"ul0015","list-style":"none"},"li":{"@attributes":{"id":"ul0015-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0016","list-style":"none"},"li":"(2|Tully's Coffee Corporation){$=\u2018link-id-2\u2019}."}}}},"This hyperlink from the coffee shops example:\n\n","And so on\u2014throughout the coffee shops example.","The method of  also includes recognizing () by the multimodal browser () speech () from a user matching an ambiguous terminal element of the speech recognition grammar. In the coffee shops example, the utterance \u201cTully's Coffee\u201d matches an ambiguous terminal element of a speech recognition grammar because \u201cTully's Coffee\u201d matches grammar elements that voice enable both hyperlink  and hyperlink  in the coffee shops example. In the coffee shops example, the utterance \u201cStarbucks\u201d matches an ambiguous terminal element of a speech recognition grammar because \u201cStarbucks\u201d matches grammar elements that voice enable both hyperlink  and hyperlink  in the coffee shops example.","In the method of , the speech recognition process () provides () user utterances to a grammar interpreter and receives () recognized speech back in return. The return is in the form of a semantic interpretation result accessible by ECMAScript as application.lastresult$.interpretation. The semantic interpretation contains the identification of one of the voice activated hyperlinks, \u2018link-id-1,\u2019 \u2018link-id-2,\u2019 and so on, depending on which grammar element was matched in the grammar interpreter. If the identification the voice enabled hyperlink is \u2018link-id-11,\u2019 then the match is ambiguous, because the voice utterance can have been \u201cTully's Coffee,\u201d and that utterance can activate either voice activated hyperlink  or voice activated hyperlink .","In the coffee shops example, it is the multimodal application in the form of the example X+V page in the computer program listing that determines through the script identified as id=\u201cclickSelection( )\u201d that a voice activated hyperlink is voice enabled by an ambiguous terminal grammar element. The clickSelection( ) script obtains the identification of the voice enabled hyperlink identified by speech recognition from application.lastresult$.interpretation and compares the text of the recognized speech from application.lastresult$.utterance to the text of each terminal grammar element. Matches may be recorded in a temporary list. If at the end of the comparison process there are one or more entries in the temporary list, then the recognized speech has matched an ambiguous terminal grammar element.","The method of  also includes selecting () by the multimodal browser () a voice activated hyperlink () for activation, the selecting carried out in dependence upon the recognized speech and the record of visibility. The recognized speech matches a grammar with ambiguous terminal elements\u2014so that two or more voice activated hyperlinks are voice enabled by grammar elements matched by the recognized speech. Only one hyperlink can be activated; which one should it be? In the coffee shops example, the recognized speech \u201cStarbucks\u201d voice enables at least three hyperlink, numbers , , and . Only hyperlink number  is currently visible on the display of , however. So one way to select among the three ambiguous hyperlinks, when two are not visible and only one is visible, is to select the visible one. A user who speaks \u201cStarbucks\u201d apparently is looking at the display screen and may be presumed to be attempting to activate the hyperlink that the user sees rather than one of the ambiguous hyperlinks that the user cannot see. Selecting a voice activated hyperlink for activation is explained in more detail below with reference to .","For further explanation,  sets forth a flow chart illustrating an exemplary method of maintaining a record of visibility according to embodiments of the present invention, where the record of visibility includes an ordinal indication, for each voice activated hyperlink scrolled off display, of the sequence in which each such voice activated hyperlink was scrolled off display. In this example, the ordinal indication of the sequence in which voice activated hyperlinks are scrolled off display is implemented as the data element Scrolled-Off-Display () in the record of visibility (), and the value of the ordinal indication is set by use of a scrolled-off-display counter (). The method of  includes a multimodal browser's creating () the scrolled-off-display counter (), with the scrolled-off-display counter initialized to zero. The scrolled-off-display counter may be implemented, for example, as a variable stored in computer memory. The method of  also includes incrementing () the scrolled-off-display counter when a visible voice activated hyperlink is scrolled off display.","The method of  maintains a record of visibility by carrying out the following steps for each voice activated hyperlink on each scroll of the display (): If the voice activated hyperlink scrolled into visibility on the display (), recording () that the voice activated hyperlink is currently visible and recording that the voice activated hyperlink was previously visible. That is, if the voice activated hyperlink scrolled onto the display on a multimodal device, for the record of visibility identified by the hyperlink's Link-ID (), set Is-Visible () to TRUE and set Was-Visible () to true. Alternatively, in an embodiment where the value zero in the Scrolled-Off-Ordinal () is taken as an indication of visibility, set the value of Scrolled-Off-Display to zero, thereby indicating current visibility of the hyperlink on a display screen.","In the method of , if a voice activated hyperlink scrolled out of visibility off the display (), the method proceeds by recording () that the voice activated hyperlink is not visible and recording a current value of the scrolled-off-display counter as the ordinal indication of the sequence in which the voice activated hyperlink scrolled off display. Recording that the voice activated hyperlink is not visible and recording a current value of the scrolled-off-display counter as the ordinal indication of the sequence in which the voice activated hyperlink scrolled off display may be carried out in embodiments that use a zero value of Scrolled-Off-Ordinal () to indicate visibility by setting the value of Scrolled-Off-Ordinal to the current value of the scrolled-off-display counter (). The scrolled-off-display counter () is incremented every time a visible voice activated hyperlink is scrolled off display, so its value is always a unique indication of the sequence in which a hyperlink is scrolled off display. Recording that the voice activated hyperlink is not visible also may be carried out by setting Is-Visible () to FALSE, for use, for example, in embodiments that do not take a zero value of the Scrolled-Off-Display to indicate visibility. The coffee shops example uses this pseudocode script to record visibility of voice activated hyperlinks on each scroll of the display:",{"@attributes":{"id":"p-0104","num":"0142"},"tables":{"@attributes":{"id":"TABLE-US-00006","num":"00006"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<script id=\u201conScroll\u201d declare=\u201cdeclare\u201d type=\u201ctext\/javascript\u201d> \/*"},{"entry":"\u2003For each voice activated hyperlinik:"},{"entry":"\u2003Determine whether the link is visible"},{"entry":"\u2003if the link is visible, set was-visible true and clear the scrolled past field"},{"entry":"\u2003if the link is not visible:"},{"entry":"\u2003if was-visible true and, and scrolled-off-ordinal = 0"},{"entry":"\u2003set scrolled-off-ordinal = scrolled-off-display-counter"},{"entry":"\u2003increment scrolled-off-display-counter"},{"entry":"<\/script>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Other ways of recording indications of visibility and past visibility will occur to those of skill in the art, and all such ways are well within the scope of the present invention.","For further explanation,  sets forth a flow chart illustrating an exemplary method of selecting a voice activated hyperlink for activation according to embodiments of the present invention. In the method of , a multimodal browser's selecting a voice activated hyperlink for activation includes identifying () as ambiguous hyperlinks all voice activated hyperlinks that are voice enabled by grammar elements that are ambiguous with respect to the matched ambiguous terminal element of the speech recognition grammar. In the coffee shops example, when any of these grammar elements are matched:\n\n","are the matched element is ambiguous with respect to the other two. Given recognized speech of \u201cStarbucks\u201d assigned by a grammar interpreter as a match to link-id-20, the user may very well have intended to activate link-id-14, the one that is actually visible on the display screen on . These voice activated hyperlinks are voice enabled by the above ambiguous terminal grammar elements:\n\n","These hyperlinks are considered \u2018ambiguous hyperlinks\u2019 because they are voice enabled by grammar elements that are ambiguous with respect to a matched ambiguous terminal grammar element\u2014when the match is to \u201cStarbucks.\u201d","In the method of , a multimodal browser's selecting of a voice activated hyperlink for activation is carried out by selecting () for activation the only visible ambiguous hyperlink, if only one ambiguous hyperlink is visible (). In the method of , a multimodal browser's selecting a voice activated hyperlink for activation includes selecting () for activation the ambiguous hyperlink that was previously visible, if no ambiguous hyperlink is visible () and only one ambiguous hyperlink was previously visible (). In the method of , a multimodal browser's selecting a voice activated hyperlink for activation also includes selecting () for activation the most recently visible ambiguous hyperlink, if no ambiguous hyperlink is visible () and more than one ambiguous hyperlink was previously visible ().","For a further example of selecting a voice activated hyperlink for activation, the pseudocode script clickSelection( ) in the coffee shops example carries out selecting a voice activated hyperlink for activation according to embodiments of the present invention as follows:",{"@attributes":{"id":"p-0111","num":"0155"},"tables":{"@attributes":{"id":"TABLE-US-00007","num":"00007"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<script id=\u201cclickSelection( )\u201d declare=\u201cdeclare\u201d type=\u201ctext\/javascript\u201d> \/*"},{"entry":"\u2003obtain the id of the link identified by speech recognition from"},{"entry":"\u2003application.lastresult$.interpretation"},{"entry":"\u2003determine whether the returned link is ambiguous:"},{"entry":"\u2003\u2003for each terminal grammar element compare the text of the element"},{"entry":"\u2003\u2003to application.lastresult$.utterance"},{"entry":"\u2003\u2003if true, add the element to a temporary duplicate list"},{"entry":"\u2003\u2003if the returned link is not ambiguous (that is, the temporary duplicate"},{"entry":"\u2003\u2003list is empty), select it and activate it: that is, click the link identified"},{"entry":"\u2003\u2003by speech recognition"},{"entry":"\u2003\u2003if the returned link is ambiguous (that is, the temporary duplicate list"},{"entry":"\u2003\u2003is not empty):"},{"entry":"\u2003\u2003determine whether the link identified by speech recognition is"},{"entry":"\u2003\u2003currently visible to the user (on the display screen) - by calling the"},{"entry":"\u2003\u2003function isVisible(e) set forth below, for example ..."},{"entry":"\u2003\u2003if the link identified by speech recognition is visible:"},{"entry":"\u2003\u2003\u2003determine whether any other ambiguous links are visible,"},{"entry":"\u2003\u2003\u2003if no other ambiguous links are visible, select and activate the"},{"entry":"\u2003\u2003\u2003\u2003returned link, that is, that is, click it"},{"entry":"\u2003\u2003if the returned link is not visible:"},{"entry":"\u2003\u2003\u2003determine whether any other ambiguous links are visible,"},{"entry":"\u2003\u2003\u2003if yes, select and activate (click) the top one"},{"entry":"\u2003\u2003\u2003if no, look in the visibility record and select and activate (click) the"},{"entry":"\u2003\u2003\u2003last ambiguous link that was visible, that is, the link in the"},{"entry":"\u2003\u2003\u2003temporary duplicate list having the largest scrolled-off-ordinal"},{"entry":"<\/script>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"Other ways of selecting a voice activated hyperlink for activation will occur to those of skill in the art, and all such ways are well within the scope of the present invention.","Several of the example methods described in this specification make use of determinations of visibility of voice activated hyperlinks. The method of , for example, includes a determination () whether only one of the ambiguous hyperlinks () is visible. The method of  includes incrementing () a scrolled-off-display counter when a visible voice activated hyperlink is scrolled off display\u2014a method step that may include determining whether a particular voice activated hyperlink is visible and, if it is not visible, determining that the hyperlink was just scrolled off display by a scroll event because the record of visibility (, ) still records the hyperlink as visible. The method of  also includes a determination () whether a voice activated hyperlink was scrolled on display by a scroll event\u2014a method step that may include determining whether a particular hyperlink is visible and, if it is visible, determining that the hyperlink was just scrolled on display because the record of visibility (, ) still records the hyperlink as not visible. For further explanation, therefore,  sets forth a block diagram of a visible area () of a GUI window on a display screen that includes a voice activated hyperlink () that is taken for purposes of explanation as an ambiguous hyperlink according to embodiments of the present invention. An example method of determining whether a hyperlink is visible is explained with reference to  and the following ECMAScript functions, named \u201cisVisible(e)\u201d and getAbsoluteTop(e), from the coffee shops example:",{"@attributes":{"id":"p-0114","num":"0158"},"tables":{"@attributes":{"id":"TABLE-US-00008","num":"00008"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"14pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"203pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"<script language=\u201cJavascript\u201d type=\u201ctext\/javascript\u201d >"]},{"entry":[{},"\u2003function isVisible(e) {"]},{"entry":[{},"\u2003\u2003var top = getAbsoluteTop(e);"]},{"entry":[{},"\u2003\u2003if (top >= window.window.pageYOffset &&"]},{"entry":[{},"\u2003\u2003top <= window.window.pageYOffset + window.innerHeight \u2212"]},{"entry":[{},"\u2003\u2003e.height)"]},{"entry":[{},"\u2003\u2003return true;"]},{"entry":[{},"\u2003\u2003else"]},{"entry":[{},"\u2003\u2003return false;"]},{"entry":[{},"\u2003}"]},{"entry":[{},"\u2003\/\/ The offset of an element is relative to its parent"]},{"entry":[{},"\u2003\/\/ so must sum the offsets of the parent hierarchy."]},{"entry":[{},"\u2003function getAbsoluteTop( e ) {"]},{"entry":[{},"\u2003\u2003var t = e.offsetTop;"]},{"entry":[{},"\u2003\u2003var p = e.offsetParent;"]},{"entry":[{},"\u2003\u2003while (p) {"]},{"entry":[{},"\u2003\u2003\u2003t += p.offsetTop;"]},{"entry":[{},"\u2003\u2003\u2003p = p.offsetParent;"]},{"entry":[{},"\u2003\u2003}"]},{"entry":[{},"\u2003\u2003return t;"]},{"entry":[{},"\u2003}"]},{"entry":[{},"<\/script>"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]}}}}},"The example of  includes a document () portion of a multimodal application on display. Such a document may be an X+V page, for example. In the example of , a portion () of the document is visible in the window display area (), and portions (, ) of the document are not visible, either because they have never been scrolled onto the visible portion of the display or because they were previously visible and have been scrolled off display. The example of  takes as a reference the top () of the document () on display. Display locations within the document () are characterized by the Y offset () in the document of the top () of the visible area of the window, the absolute top offset () of the hyperlink () from the top of the document, and the inner height () of the visible area of the window.","The method illustrated by the isVisible(e) function includes determining absolute top offset ( on ) of the hyperlink with a call to the getAbsoluteTop(e) function. The hyperlink often is implemented with a markup element such as an anchor element of an X+V page, for example, so the script functions isVisible(e) and getAbsoluteTop(e) use \u2018e\u2019 for \u2018element\u2019 as a reference to the hyperlink. When a multimodal browser loads a document such as an X+V page, the multimodal browser creates a document object model (\u2018DOM\u2019) that includes an object representing each identified element in the document, with the objects arranged hierarchically. The browser typically then manipulates the hyperlink () as an object embedded at some location in the hierarchy. The function getAbsoluteTop(e) steps through the hierarchy of objects in the DOM and sums their offsets from the top of the document to derive the absolute top offset () of the hyperlink element with respect to the top () of the document (). The isVisible(e) function concludes that the hyperlink is visible if its absolute offset () from the top of the document is greater than the offset () of the top of the window visible area and less than the offset () of the top of the window visible area plus the inner height () of the window visible area.","Exemplary embodiments of the present invention are described largely in the context of a fully functional computer system for disambiguating a speech recognition grammar in a multimodal application. Readers of skill in the art will recognize, however, that the present invention also may be embodied in a computer program product disposed on computer-readable signal bearing media for use with any suitable data processing system. Such signal bearing media may be transmission media or recordable media for machine-readable information, including magnetic media, optical media, or other suitable media. Examples of recordable media include magnetic disks in hard drives or diskettes, compact disks for optical drives, magnetic tape, and others as will occur to those of skill in the art. Examples of transmission media include telephone networks for voice communications and digital data communications networks such as, for example, Ethernets\u2122 and networks that communicate with the Internet Protocol and the World Wide Web. Persons skilled in the art will immediately recognize that any computer system having suitable programming means will be capable of executing the steps of the method of the invention as embodied in a program product. Persons skilled in the art will recognize immediately that, although some of the exemplary embodiments described in this specification are oriented to software installed and executing on computer hardware, nevertheless, alternative embodiments implemented as firmware or as hardware are well within the scope of the present invention.","It will be understood from the foregoing description that modifications and changes may be made in various embodiments of the present invention without departing from its true spirit. The descriptions in this specification are for purposes of illustration only and are not to be construed in a limiting sense. The scope of the present invention is limited only by the language of the following claims.",{"@attributes":{"id":"p-0119","num":"0163"},"tables":{"@attributes":{"id":"TABLE-US-00009","num":"00009"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"center"}},"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}},{"entry":"COMPUTER PROGRAM LISTING"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<?xml version=\u201c1.0\u201d encoding=\u201cISO-8859-1\u201d ?>"},{"entry":"<!DOCTYPE html PUBLIC \u201c-\/\/VoiceXML Forum\/\/DTD XHTML+Voice 1.2\/\/EN\u201d"},{"entry":"\u201chttp:\/\/www.voicexml.org\/specs\/multimodal\/x+v\/12\/dtd\/xhtml+voice12.dtd\u201d>"},{"entry":"<html xmlns=\u201chttp:\/\/www.w3.org\/1999\/xhtml\u201d"},{"entry":"xmlns:vxml=\u201chttp:\/\/www.w3.org\/2001\/vxml\u201d xmlns:ev=\u201chttp:\/\/www.w3.org\/2001\/xml-"},{"entry":"events\u201d xmlns:xv=\u201chttp:\/\/www.voicexml.org\/2002\/xhtml+voice\u201d xml:lang=\u201cen-US\u201d>"},{"entry":"<head>"},{"entry":"\u2003<title>Yahoo! 411 - Results<\/title>"},{"entry":"\u2003<link rel=\u201cstylesheet\u201d type=\u201ctext\/css\u201d href=\u201cres\/cmn\/results.css\u201d\/>"},{"entry":"\u2003<form xmlns=\u201chttp:\/\/www.w3.org\/2001\/vxml\u201d id=\u201cvForm\u201d>"},{"entry":"\u2003\u2003<block>"},{"entry":"\u2003\u2003\u2003\u2003Showing 21 through 40 of 884 results."},{"entry":"\u2003\u2003<\/block>"},{"entry":"\u2003<field name=\u201cvField\u201d>"},{"entry":"\u2003\u2003<grammar>"},{"entry":"\u2003\u2003<![CDATA[#JSGF V1.0;"},{"entry":"\u2003\u2003grammar results;"},{"entry":"\u2003\u2003public <results> = [select][(go | jump) to][show [details for]][pick][number]"},{"entry":"\u2003\u2003\u2003<items> { $=$items };"},{"entry":"\u2003\u2003<items> ="},{"entry":"\u2003\u2003\u2002..."},{"entry":"\u2003\u2003Grammar rule elements that voice enable voice activated hyperlinks scrolled"},{"entry":"\u2003\u2003\u2003above the visible display screen in FIG. 7:"},{"entry":"\u2003\u2003\u2002(1 | Seattle's Best Coffee) {$=\u2018link-id-1\u2019} |"},{"entry":"\u2003\u2003\u2002(2 | Tully's Coffee Corporation) {$=\u2018linik-id-2\u2019} |"},{"entry":"\u2003\u2003\u2002(3 | All City Coffee) {$=\u2018link-id-3\u2019} |"},{"entry":"\u2003\u2003\u2002(4 | Boyd Coffee Store) {$=\u2018link-id-4\u2019} |"},{"entry":"\u2003\u2003\u2002...."},{"entry":"\u2003\u2003Some grammar rule elements that voice enable voice activated hyperlinks"},{"entry":"\u2003\u2003\u2003visible on the display screen in FIG 7:"},{"entry":"\u2003\u2003\u2002(11 | Tully's Coffee) {$=\u2018link-id-11\u2019} |"},{"entry":"\u2003\u2003\u2002(12 | Tully's Coffee) {$=\u2018link-id-12\u2019} |"},{"entry":"\u2003\u2003\u2002(13 | Peet's Coffee and Tea Incorporated) {$=\u2018link-id-13\u2019} |"},{"entry":"\u2003\u2003\u2002(14 | Starbucks) {$=\u2018link-id-14\u2019} |"},{"entry":"\u2003\u2003\u2002(18 | Caffe Ladro) {$=\u2018link-id-18\u2019} |"},{"entry":"\u2003\u2003\u2002...."},{"entry":"\u2003\u2003Some grammar rule elements that voice enable voice activated hyperlinks"},{"entry":"\u2003\u2003\u2003below the display screen on FIG 7:"},{"entry":"\u2003\u2003\u2002(19 | Starbucks) {$=\u2018link-id-19\u2019} |"},{"entry":"\u2003\u2003\u2002(20 | Starbucks) {$=\u2018link-id-20\u2019}"},{"entry":"\u2003\u2003\u2002; ]]>"},{"entry":"\u2003\u2003<\/grammar>"},{"entry":"<\/field>"},{"entry":"<filled>"},{"entry":"\u2003\u2003<value expr=\u201cclickSelection( )\u201d\/>"},{"entry":"\u2003\u2003<clear namelist=\u201cvField\u201d\/>"},{"entry":"<\/filled>"},{"entry":"<\/form>"},{"entry":"<script id=\u201conLoad\u201d declare=\u201cdeclare\u201d type=\u201ctext\/javascript\u201d> \/*"},{"entry":"\u2003\u2003\u2003Search the DOM and create a list of elements of css class \u201cvoice-links\u201d"},{"entry":"\u2003\u2003\u2003\u2003with was-visible = FALSE and scrolled-off-ordinal = 0"},{"entry":"\u2003\u2003\u2003Mark the voice activated hyperlinks that are visible by setting was-visible"},{"entry":"\u2003\u2003\u2003true"},{"entry":"\u2003\u2003\u2003Initialize global scrolled-off-display-counter to zero"},{"entry":"<\/script>"},{"entry":"<script id=\u201conScroll\u201d declare=\u201cdeclare\u201d type=\u201ctext\/javascript\u201d> \/*"},{"entry":"\u2003\u2003\u2003For each voice activated hyperlink:"},{"entry":"\u2003\u2003\u2003Determine whether the link is visible"},{"entry":"\u2003\u2003\u2003if the link is visible, set was-visible true and clear the scrolled past field"},{"entry":"\u2003\u2003\u2003if the link is not visible:"},{"entry":"\u2003\u2003\u2003if was-visible true and, and scrolled-off-ordinal = 0"},{"entry":"\u2003\u2003\u2003set scrolled-off-ordinal = scrolled-off-display-counter"},{"entry":"\u2003\u2003\u2003increment scrolled-off-display-counter"},{"entry":"<\/script>"},{"entry":"<script id=\u201cclickSelection( )\u201d declare=\u201cdeclare\u201d type=\u201ctext\/javascript\u201d> \/*"},{"entry":"\u2003\u2003\u2003obtain the id of the link identified by speech recognition from"},{"entry":"\u2003\u2003\u2003\u2003application.lastresult$.interpretation"},{"entry":"\u2003\u2003\u2003determine whether the returned link is ambiguous:"},{"entry":"\u2003\u2003\u2003\u2003for each terminal grammar element compare the text of the element"},{"entry":"\u2003\u2003\u2003\u2003to application.lastresult$.utterance"},{"entry":"\u2003\u2003\u2003\u2003if true, add the element to a temporary duplicate list"},{"entry":"\u2003\u2003\u2003if the returned link is not ambiguous (that is, the temporary duplicate list is"},{"entry":"\u2003\u2003\u2003\u2003empty), select it and activate it: that is, click the link identified by"},{"entry":"\u2003\u2003\u2003\u2003speech recognition"},{"entry":"\u2003\u2003\u2003if the returned link is ambiguous (that is, the temporary duplicate list is not"},{"entry":"\u2003\u2003\u2003\u2003empty):"},{"entry":"\u2003\u2003\u2003determine whether the link identified by speech recognition is currently"},{"entry":"\u2003\u2003\u2003\u2003visible to the user (on the display screen) - by calling the function"},{"entry":"\u2003\u2003\u2003\u2003isVisible(e) set forth below, for example ..."},{"entry":"\u2003\u2003\u2003if the link identified by speech recognition is visible:"},{"entry":"\u2003\u2003\u2003\u2003determine whether any other ambiguous links are visible,"},{"entry":"\u2003\u2003\u2003if no other ambiguous links are visible, select and activate the returned"},{"entry":"\u2003\u2003\u2003\u2003link, that is, that is, click it"},{"entry":"\u2003\u2003if the returned link is not visible:"},{"entry":"\u2003\u2003\u2003determine whether any other ambiguous links are visible,"},{"entry":"\u2003\u2003\u2003if yes, select and activate (click) the top one"},{"entry":"\u2003\u2003\u2003if no, look in the visibility record and select and activate (click) the last"},{"entry":"\u2003\u2003\u2003ambiguous link that was visible, that is, the link in the temporary"},{"entry":"\u2003\u2003\u2003duplicate list having the largest scrolled-off-ordinal"},{"entry":"\u2003<\/script>"},{"entry":"\u2003<script language=\u201cJavascript\u201d type=\u201ctext\/javascript\u201d >"},{"entry":"\u2003\u2002function isVisible(e) {"},{"entry":"\u2003\u2003\u2003var top = getAbsoluteTop(e);"},{"entry":"\u2003\u2003\u2003if (top >= window.window.pageYOffset &&"},{"entry":"\u2003\u2003\u2003top <= window.window.pageYOffset + window.innerHeight \u2212"},{"entry":"\u2003\u2003\u2003e.height)"},{"entry":"\u2003\u2003\u2003return true;"},{"entry":"\u2003\u2003\u2003else"},{"entry":"\u2003\u2003\u2003return false;"},{"entry":"\u2003\u2002}"},{"entry":"\u2003\u2002\/\/ The offset of an element is relative to its parent"},{"entry":"\u2003\u2002\/\/ so must sum the offsets of the parent hierarchy."},{"entry":"\u2003\u2002function getAbsoluteTop( e ) {"},{"entry":"\u2003\u2003\u2003var t = e.offsetTop;"},{"entry":"\u2003\u2003\u2003var p = e.offsetParent;"},{"entry":"\u2003\u2003\u2003while (p) {"},{"entry":"\u2003\u2003\u2003\u2003t += p.offsetTop;"},{"entry":"\u2003\u2003\u2003\u2003p = p.offsetParent;"},{"entry":"\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2003return t;"},{"entry":"\u2003\u2002}"},{"entry":"\u2003<\/script>"},{"entry":"\u2003<ev:listener event=\u201cload\u201d observer=\u201cbody\u201d handler=\u201c#onLoad\u201d"},{"entry":"\u2003defaultAction=\u201ccancel\u201d\/>"},{"entry":"\u2003<ev:listener event=\u201cfocus\u201d observer=\u201cbody\u201d handler=\u201c#vForm\u201d"},{"entry":"\u2003defaultAction=\u201ccancel\u201d\/>"},{"entry":"\u2003<ev:listener event=\u201cscroll\u201d observer=\u201cbody\u201d handler=\u201c#onScroll\u201d"},{"entry":"\u2003defaultAction=\u201ccancel\u201d\/>"},{"entry":"<\/head>"},{"entry":"<body id=\u201cbody\u201d >"},{"entry":"\u2003<center>"},{"entry":"\u2003<a id=\u201cnav-id-i\u201d class=\u201clogo\u201d href=\u201cindex.jsp\u201d>"},{"entry":"\u2003<img src=\u201cimg\/logo.jpg\u201d\/><\/a>"},{"entry":"\u2003<\/center><br\/>"},{"entry":"\u2003<table width=\u201c100%\u201d><tr><td class=\u201cnone\u201d><i>"},{"entry":"\u2003\u2003coffee shops in seattle, wa<\/i><\/td><\/tr><\/table>"},{"entry":"\u2003<table width=\u201c100%\u201d>"},{"entry":"\u2003<tr>"},{"entry":"\u2003\u2003<td class=\u201cnavl\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<a href=\u201cindex.jsp\u201d class=\u201cnavl\u201d>New Search<\/a>"},{"entry":"\u2003\u2003<\/td>"},{"entry":"\u2003\u2003<td bgcolor=\u201c#FFFFFF\u201d class=\u201cnav\u201d>21-40"},{"entry":"\u2003\u2003\u2003of 884 |"},{"entry":"\u2003\u2003\u2003<a id=\u201cnav-id-f\u201d href=\u201cresults?s=1\u201d>First<\/a> |"},{"entry":"\u2003\u2003\u2003<a id=\u201cnav-id-p\u201d href=\u201cresults?s=1\u201d>Previous<\/a> |"},{"entry":"\u2003\u2003\u2003<a id=\u201cnav-id-n\u201d href=\u201cresults?s=41\u201d>Next<\/a> |"},{"entry":"\u2003\u2003\u2003<a id=\u201cnav-id-l\u201d href=\u201cresults?s=865\u201d>Last<\/a>"},{"entry":"\u2003\u2003<\/td>"},{"entry":"\u2003\u2003<\/tr>"},{"entry":"\u2003<\/table>"},{"entry":"\u2003<table width=\u201c100%\u201d>"},{"entry":"\u2003...Table rows that are scolled above the visible screen"},{"entry":"\u2003<tr>"},{"entry":"\u2003\u2003<td bgcolor=\u201c#DDDDEE\u201d><b>"},{"entry":"\u2003\u2003<a class=\u201ctb\u201d href=\u201cdetails.jsp?n=1\u201d id=\u201clink-id-1\u201d>1. Seattle's Best"},{"entry":"\u2003\u2003\u2003\u2003Coffee<\/a><\/b>"},{"entry":"\u2003\u2003<a href=\u201chttp:\/\/www.starbucks.com\/\u201d id=\u201chome-id-1\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<img class=\u201cico\u201d alt=\u201cURL\u201d src=\u201cimg\/home.gif\u201d\/><\/a><br\/>"},{"entry":"\u2003\u2003<span class=\u201cinfo\u201d>1600 E Olive Way, Seattle, WA<\/span><br\/>"},{"entry":"\u2003\u2003<span class=\u201cinfo\u201d>(206) 568-5185 Distance (miles): 0.81<\/span><\/td><\/tr>"},{"entry":"\u2003<tr>"},{"entry":"\u2003\u2003<td bgcolor=\u201c#DDDDCC\u201d><b>"},{"entry":"\u2003\u2003<a class=\u201ctb\u201d href=\u201cdetails.jsp?n=2\u201d id=\u201clink-id-2\u201d>2. Tully's Coffee"},{"entry":"\u2003\u2003\u2003\u2003Corporation<\/a><\/b>"},{"entry":"\u2003\u2003<a href=\u201chttp:\/\/tullys.com\/\u201d id=\u201chome-id-2\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<img class=\u201cico\u201d alt=\u201cURL\u201d src=\u201cimg\/home.gif\u201d\/><\/a><br\/>"},{"entry":"\u2003\u2003<span class=\u201cinfo\u201d>2060 Nw Market St, Seattle, WA<\/span><br\/>"},{"entry":"\u2003\u2003<span class=\u201cinfo\u201d>(206) 781-4887 Distance (miles): 5.16<\/span><\/td><\/tr>"},{"entry":"\u2003<tr>"},{"entry":"\u2003\u2003<td bgcolor=\u201c#DDDDEE\u201d><b>"},{"entry":"\u2003\u2003<a class=\u201ctb\u201d href=\u201cdetails.jsp?n=3\u201d id=\u201clink-id-3\u201d>3. All City"},{"entry":"\u2003\u2003Coffee<\/a><\/b>"},{"entry":"\u2003\u2003<a href=\u201chttp:\/\/cloudcitycoffee.com\/\u201d id=\u201chome-id-3\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<img class=\u201cico\u201d alt=\u201cURL\u201d src=\u201cimg\/home.gif\u201d\/><\/a><br\/>"},{"entry":"\u2003\u2003<span class=\u201cinfo\u201d>8801 Roosevelt Way Ne, Seattle, WA<\/span><br\/>"},{"entry":"\u2003\u2003<span class=\u201cinfo\u201d>(206) 527-5552 Distance (miles): 5.34<\/span><\/td><\/tr>"},{"entry":"\u2003<tr>"},{"entry":"\u2003\u2003<td bgcolor=\u201c#DDDDCC\u201d><b>"},{"entry":"\u2003\u2003<a class=\u201ctb\u201d href=\u201cdetails.jsp?n=4\u201d id=\u201clink-id-4\u201d>4. Boyd Coffee Store"},{"entry":"\u2003\u2003\u2003\u2003<\/a><\/b>"},{"entry":"\u2003\u2003<a href=\u201chttp:\/\/www.boespresso.com\/\u201d id=\u201chome-id-4\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<img class=\u201cico\u201d alt=\u201cURL\u201d src=\u201cimg\/home.gif\u201d\/><\/a><br\/>"},{"entry":"\u2003\u2003<span class=\u201cinfo\u201d>204 Belmont Ave E, Seattle, WA<\/span><br\/>"},{"entry":"\u2003\u2003<span class=\u201cinfo\u201d>(206) 322-5028 Distance (miles): 0.87<\/span><\/td><\/tr>"},{"entry":"\u2003...Some table rows that are visible on the screen"},{"entry":"\u2003<tr>"},{"entry":"\u2003\u2003<td bgcolor=\u201c#DDDDEE\u201d><b>"},{"entry":"\u2003\u2003<a class=\u201ctb\u201d href=\u201cdetails.jsp?n=11\u201d id=\u201clink-id-11\u201d>11. Tully's Coffee"},{"entry":"\u2003\u2003\u2003\u2003<\/a><\/b><b\/>"},{"entry":"\u2003\u2003<span class=\u201cinfo\u201d> 1046 1st Ave, Seattle, WA<\/span><br\/>"},{"entry":"\u2003\u2003<span class=\u201cinfo\u201d>(206) 624-5402 Distance (miles): 0.50<\/span><\/td><\/tr>"},{"entry":"\u2003<tr>"},{"entry":"\u2003\u2003<td bgcolor=\u201c#DDDDCC\u201d><b>"},{"entry":"\u2003\u2003<a class=\u201ctb\u201d href=\u201cdetails.jsp?n=12\u201d id=\u201clink-id-12\u201d>12. Tully's Coffee"},{"entry":"\u2003\u2003\u2003\u2003<\/a><\/b><br\/>"},{"entry":"\u2003\u2003<span class=\u201cinfo\u201d>2000 1st Ave, Seattle, WA<\/span><br\/>"},{"entry":"\u2003\u2003<span class=\u201cinfo\u201d>(206) 726-8756 Distance (miles): 0.75<\/span><\/td><\/tr>"},{"entry":"\u2003<tr>"},{"entry":"\u2003\u2003<td bgcolor=\u201c#DDDDE\u201d><b>"},{"entry":"\u2003\u2003<a class=\u201ctb\u201d href=\u201cdetails.jsp?n=13\u201d id=\u201clink-id-13\u201d> 13. Starbucks<\/a><\/b>"},{"entry":"\u2003\u2003<a href=\u201chttp:\/\/www.perkatorycafe.com\/\u201d id=\u201chome-id-13\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<img class=\u201cico\u201d alt=\u201cURL\u201d src=\u201cimg\/home.gif\u201d\/><\/a><br\/>"},{"entry":"\u2003\u2003<span class=\u201cinfo\u201d>505 5th Ave, Seattle, WA<\/span><br\/>"},{"entry":"\u2003\u2003<span class=\u201cinfo\u201d>(206) 262-9903 Distance (miles): 0.87<\/span><\/td><\/tr>"},{"entry":"\u2003...Some table rows that are scrolled below the screen"},{"entry":"\u2003<tr>"},{"entry":"\u2003\u2003<td bgcolor=\u201c#DDDDEE\u201d><b>"},{"entry":"\u2003\u2003<a class=\u201ctb\u201d href=\u201cdetails.jsp?n=19\u201d id=\u201clink-id-19\u201d> 19. Starbucks<\/a><\/b>"},{"entry":"\u2003\u2003<a href=\u201chttp:\/\/starbucks.com\/\u201d id=\u201chome-id-19\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<img class=\u201cico\u201d alt=\u201cURL\u201d src=\u201cimg\/home.gif\u201d\/><\/a><br\/>"},{"entry":"\u2003\u2003<span class=\u201cinfo\u201d>Westlake Mall #42, Seattle, WA<\/span><br\/>"},{"entry":"\u2003\u2003<span class=\u201cinfo\u201d>(206) 283-9629 Distance (miles): 3.05<\/span><\/td><\/tr>"},{"entry":"\u2003<tr>"},{"entry":"\u2003\u2003<td bgcolor=\u201c#DDDDCC\u201d><b>"},{"entry":"\u2003\u2003<a class=\u201ctb\u201d href=\u201cdetails.jsp?n=20\u201d id=\u201clink-id-20\u201d>20. Starbucks<\/a><\/b>"},{"entry":"\u2003<a href=\u201chttp:\/\/www.tullys.com\/\u201d id=\u201chome-id-20\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<img class=\u201cico\u201d alt=\u201cURL\u201d src=\u201cimg\/home.gif\u201d\/><\/a><br\/>"},{"entry":"\u2003\u2003<span class=\u201cinfo\u201d>1600 E Olive Way, Seattle, WA<\/span><br\/>"},{"entry":"\u2003\u2003<span class=\u201cinfo\u201d>(206) 625-0600 Distance (miles): 0.44<\/span><\/td><\/tr>"},{"entry":"\u2003<\/table>"},{"entry":"\u2003<table width=\u201c100%\u201d>"},{"entry":"\u2003<tr>"},{"entry":"\u2003\u2003<td class=\u201cnavl\u201d>"},{"entry":"\u2003\u2003\u2003\u2003<a href=\u201cindex.jsp\u201d class=\u201cnavl\u201d>New Search<\/a>"},{"entry":"\u2003\u2003<\/td>"},{"entry":"\u2003\u2003<td bgcolor=\u201c#FFFFFF\u201d class=\u201cnav\u201d>21-40 of 884 |"},{"entry":"\u2003\u2003\u2003<a id=\u201cnav-id-f\u201d href=\u201cresults?s=1\u201d>First<\/a> |"},{"entry":"\u2003\u2003\u2003<a id=\u201cnav-id-p\u201d href=\u201cresults?s=1\u201d>Previous<\/a> |"},{"entry":"\u2003\u2003\u2003<a id=\u201cnav-id-n\u201d href=\u201cresults?s=41\u201d>Next<\/a> |"},{"entry":"\u2003\u2003\u2003<a id=\u201cnav-id-l\u201d href=\u201cresults?s=865\u201d>Last<\/a>"},{"entry":"\u2003\u2003<\/td>"},{"entry":"\u2003\u2003<\/tr>"},{"entry":"\u2003<\/table>"},{"entry":"<\/body>"},{"entry":"<\/html>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}]}}}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0015","num":"0015"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0016","num":"0016"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0017","num":"0017"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0020","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0021","num":"0021"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0022","num":"0022"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0023","num":"0023"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0024","num":"0024"},"figref":"FIG. 10"}]},"DETDESC":[{},{}]}
