---
title: Exchanging a compressed version of previously communicated session information in a communications system
abstract: In an embodiment, a server exchanges session data between a group of session participants during a communication session, the exchanged session data including session media and/or session signaling information. The server stores at least a subset of the exchanged session data. Later, the server establishes a connection to a given user equipment (UE) (e.g., either after or during the communication session). The server determines a UE-defined context that is indicative of a manner by which missed session data from the communication session is to be compressed for delivery to the given UE. The server selectively compresses at least a portion of the stored subset of the exchanged session data that was missed by the given UE based on the UE-defined context, and transmits the selectively compressed portion of the stored subset of the exchanged session data to the given UE.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08793389&OS=08793389&RS=08793389
owner: QUALCOMM Incorporated
number: 08793389
owner_city: San Diego
owner_country: US
publication_date: 20111220
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY","DETAILED DESCRIPTION"],"p":["1. Field of the Invention","Embodiments of the invention relate to exchanging a compressed version of previously communicated session information in a communications system.","2. Description of the Related Art","Wireless communication systems have developed through various generations, including a first-generation analog wireless phone service (1G), a second-generation (2G) digital wireless phone service (including interim 2.5G and 2.75G networks) and a third-generation (3G) high speed data\/Internet-capable wireless service. There are presently many different types of wireless communication systems in use, including Cellular and Personal Communications Service (PCS) systems. Examples of known cellular systems include the cellular Analog Advanced Mobile Phone System (AMPS), and digital cellular systems based on Code Division Multiple Access (CDMA), Frequency Division Multiple Access (FDMA), Time Division Multiple Access (TDMA), the Global System for Mobile access (GSM) variation of TDMA, and newer hybrid digital communication systems using both TDMA and CDMA technologies.","The method for providing CDMA mobile communications was standardized in the United States by the Telecommunications Industry Association\/Electronic Industries Association in TIA\/EIA\/IS-95-A entitled \u201cMobile Station-Base Station Compatibility Standard for Dual-Mode Wideband Spread Spectrum Cellular System,\u201d referred to herein as IS-95. Combined AMPS & CDMA systems are described in TIA\/EIA Standard IS-98. Other communications systems are described in the IMT-2000\/UM, or International Mobile Telecommunications System 2000\/Universal Mobile Telecommunications System, standards covering what are referred to as wideband CDMA (W-CDMA), CDMA2000 (such as CDMA2000 1xEV-DO standards, for example) or TD-SCDMA.","In W-CDMA wireless communication systems, user equipments (UEs) receive signals from fixed position Node Bs (also referred to as cell sites or cells) that support communication links or service within particular geographic regions adjacent to or surrounding the base stations. Node Bs provide entry points to an access network (AN)\/radio access network (RAN), which is generally a packet data network using standard Internet Engineering Task Force (IETF) based protocols that support methods for differentiating traffic based on Quality of Service (QoS) requirements. Therefore, the Node Bs generally interact with UEs through an over the air interface and with the RAN through Internet Protocol (IP) network data packets.","In wireless telecommunication systems, Push-to-talk (PTT) capabilities are becoming popular with service sectors and consumers. PTT can support a \u201cdispatch\u201d voice service that operates over standard commercial wireless infrastructures, such as W-CDMA, CDMA, FDMA, TDMA, GSM, etc. In a dispatch model, communication between endpoints (e.g., UEs) occurs within virtual groups, wherein the voice of one \u201ctalker\u201d is transmitted to one or more \u201clisteners.\u201d A single instance of this type of communication is commonly referred to as a dispatch call, or simply a PTT call. A PTT call is an instantiation of a group, which defines the characteristics of a call. A group in essence is defined by a member list and associated information, such as group name or group identification.","Communications between mobile users are often subject to connection failures between devices as one or more devices are not reachable due to fades or other offline reasons. Users must either reattempt the communication, or a use a store-and-forward system will capture the content for retrieval.","Therefore an efficient retrieval of missed messages in a mobile guaranteed delivery system, with a method for efficiently apprising and aligning newcomers to a group communication of current and past activity is needed.","In an embodiment, a server exchanges session data between a group of session participants during a communication session, the exchanged session data including session media and\/or session signaling information. The server stores at least a subset of the exchanged session data. Later, the server establishes a connection to a given user equipment (UE) (e.g., either after or during the communication session). The server determines a UE-defined context that is indicative of a manner by which missed session data from the communication session is to be compressed for delivery to the given UE. The server selectively compresses at least a portion of the stored subset of the exchanged session data that was missed by the given UE based on the UE-defined context, and transmits the selectively compressed portion of the stored subset of the exchanged session data to the given UE.","Aspects of the invention are disclosed in the following description and related drawings directed to specific embodiments of the invention. Alternate embodiments may be devised without departing from the scope of the invention. Additionally, well-known elements of the invention will not be described in detail or will be omitted so as not to obscure the relevant details of the invention.","The words \u201cexemplary\u201d and\/or \u201cexample\u201d are used herein to mean \u201cserving as an example, instance, or illustration.\u201d Any embodiment described herein as \u201cexemplary\u201d and\/or \u201cexample\u201d is not necessarily to be construed as preferred or advantageous over other embodiments. Likewise, the term \u201cembodiments of the invention\u201d does not require that all embodiments of the invention include the discussed feature, advantage or mode of operation.","Further, many embodiments are described in terms of sequences of actions to be performed by, for example, elements of a computing device. It will be recognized that various actions described herein can be performed by specific circuits (e.g., application specific integrated circuits (ASICs)), by program instructions being executed by one or more processors, or by a combination of both. Additionally, these sequence of actions described herein can be considered to be embodied entirely within any form of computer readable storage medium having stored therein a corresponding set of computer instructions that upon execution would cause an associated processor to perform the functionality described herein. Thus, the various aspects of the invention may be embodied in a number of different forms, all of which have been contemplated to be within the scope of the claimed subject matter. In addition, for each of the embodiments described herein, the corresponding form of any such embodiments may be described herein as, for example, \u201clogic configured to\u201d perform the described action.","A High Data Rate (HDR) subscriber station, referred to herein as user equipment (UE), may be mobile or stationary, and may communicate with one or more access points (APs), which may be referred to as Node Bs. A UE transmits and receives data packets through one or more of the Node Bs to a Radio Network Controller (RNC). The Node Bs and RNC are parts of a network called a radio access network (RAN). A radio access network can transport voice and data packets between multiple access terminals.","The radio access network may be further connected to additional networks outside the radio access network, such core network including specific carrier related servers and devices and connectivity to other networks such as a corporate intranet, the Internet, public switched telephone network (PSTN), a Serving General Packet Radio Services (GPRS) Support Node (SGSN), a Gateway GPRS Support Node (GGSN), and may transport voice and data packets between each UE and such networks. A UE that has established an active traffic channel connection with one or more Node Bs may be referred to as an active UE, and can be referred to as being in a traffic state. A UE that is in the process of establishing an active traffic channel (TCH) connection with one or more Node Bs can be referred to as being in a connection setup state. A UE may be any data device that communicates through a wireless channel or through a wired channel. A UE may further be any of a number of types of devices including but not limited to PC card, compact flash device, external or internal modem, or wireless or wireline phone. The communication link through which the UE sends signals to the Node B(s) is called an uplink channel (e.g., a reverse traffic channel, a control channel, an access channel, etc.). The communication link through which Node B(s) send signals to a UE is called a downlink channel (e.g., a paging channel, a control channel, a broadcast channel, a forward traffic channel, etc.). As used herein the term traffic channel (TCH) can refer to either an uplink\/reverse or downlink\/forward traffic channel.",{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 1","b":["100","100","102","104","120","102","126","102","108","110","112","102","108","110","112"]},"Referring back to , the components of the wireless communications system  and interrelation of the elements of the exemplary embodiments of the invention are not limited to the configuration illustrated. System  is merely exemplary and can include any system that allows remote UEs, such as wireless client computing devices , , ,  to communicate over-the-air between and among each other and\/or between and among components connected via the air interface  and RAN , including, without limitation, core network , the Internet, PSTN, SGSN, GGSN and\/or other remote servers.","The RAN  controls messages (typically sent as data packets) sent to a RNC . The RNC  is responsible for signaling, establishing, and tearing down bearer channels (i.e., data channels) between a Serving General Packet Radio Services (GPRS) Support Node (SGSN) and the UEs \/\/\/. If link layer encryption is enabled, the RNC  also encrypts the content before forwarding it over the air interface . The function of the RNC  is well-known in the art and will not be discussed further for the sake of brevity. The core network  may communicate with the RNC  by a network, the Internet and\/or a public switched telephone network (PSTN). Alternatively, the RNC  may connect directly to the Internet or external network. Typically, the network or Internet connection between the core network  and the RNC  transfers data, and the PSTN transfers voice information. The RNC  can be connected to multiple Node Bs . In a similar manner to the core network , the RNC  is typically connected to the Node Bs  by a network, the Internet and\/or PSTN for data transfer and\/or voice information. The Node Bs  can broadcast data messages wirelessly to the UEs, such as cellular telephone . The Node Bs , RNC  and other components may form the RAN , as is known in the art. However, alternate configurations may also be used and the invention is not limited to the configuration illustrated. For example, in another embodiment the functionality of the RNC  and one or more of the Node Bs  may be collapsed into a single \u201chybrid\u201d module having the functionality of both the RNC  and the Node B(s) .",{"@attributes":{"id":"p-0037","num":"0036"},"figref":["FIG. 2A","FIG. 2A","FIG. 2A"],"b":["126","126","160","165","175","175"]},"Generally, GPRS is a protocol used by Global System for Mobile communications (GSM) phones for transmitting Internet Protocol (IP) packets. The GPRS Core Network (e.g., the GGSN  and one or more SGSNs ) is the centralized part of the GPRS system and also provides support for W-CDMA based 3G networks. The GPRS core network is an integrated part of the GSM core network, provides mobility management, session management and transport for IP packet services in GSM and W-CDMA networks.","The GPRS Tunneling Protocol (GTP) is the defining IP protocol of the GPRS core network. The GTP is the protocol which allows end users (e.g., UEs) of a GSM or W-CDMA network to move from place to place while continuing to connect to the internet as if from one location at the GGSN . This is achieved transferring the subscriber's data from the subscriber's current SGSN  to the GGSN , which is handling the subscriber's session.","Three forms of GTP are used by the GPRS core network; namely, (i) GTP-U, (ii) GTP-C and (iii) GTP\u2032 (GTP Prime). GTP-U is used for transfer of user data in separated tunnels for each packet data protocol (PDP) context. GTP-C is used for control signaling (e.g., setup and deletion of PDP contexts, verification of GSN reach-ability, updates or modifications such as when a subscriber moves from one SGSN to another, etc.). GTP\u2032 is used for transfer of charging data from GSNs to a charging function.","Referring to , the GGSN  acts as an interface between the GPRS backbone network (not shown) and the external packet data network . The GGSN  extracts the packet data with associated packet data protocol (PDP) format (e.g., IP or PPP) from the GPRS packets coming from the SGSN , and sends the packets out on a corresponding packet data network. In the other direction, the incoming data packets are directed by the GGSN  to the SGSN  which manages and controls the Radio Access Bearer (RAB) of the destination UE served by the RAN . Thereby, the GGSN  stores the current SGSN address of the target UE and his\/her profile in its location register (e.g., within a PDP context). The GGSN is responsible for IP address assignment and is the default router for the connected UE. The GGSN also performs authentication and charging functions.","The SGSN  is representative of one of many SGSNs within the core network , in an example. Each SGSN is responsible for the delivery of data packets from and to the UEs within an associated geographical service area. The tasks of the SGSN  includes packet routing and transfer, mobility management (e.g., attach\/detach and location management), logical link management, and authentication and charging functions. The location register of the SGSN stores location information (e.g., current cell, current VLR) and user profiles (e.g., IMSI, PDP address(es) used in the packet data network) of all GPRS users registered with the SGSN , for example, within one or more PDP contexts for each user or UE. Thus, SGSNs are responsible for (i) de-tunneling downlink GTP packets from the GGSN , (ii) uplink tunnel IP packets toward the GGSN , (iii) carrying out mobility management as UEs move between SGSN service areas and (iv) billing mobile subscribers. As will be appreciated by one of ordinary skill in the art, aside from (i)-(iv), SGSNs configured for GSM\/EDGE networks have slightly different functionality as compared to SGSNs configured for W-CDMA networks.","The RAN  (e.g., or UTRAN, in Universal Mobile Telecommunications System (UMTS) system architecture) communicates with the SGSN  via a Radio Access Network Application Part (RANAP) protocol. RANAP operates over a Iu interface (Iu-ps), with a transmission protocol such as Frame Relay or IP. The SGSN  communicates with the GGSN  via a Gn interface, which is an IP-based interface between SGSN  and other SGSNs (not shown) and internal GGSNs, and uses the GTP protocol defined above (e.g., GTP-U, GTP-C, GTP\u2032, etc.). In the embodiment of , the Gn between the SGSN  and the GGSN  carries both the GTP-C and the GTP-U. While not shown in , the Gn interface is also used by the Domain Name System (DNS). The GGSN  is connected to a Public Data Network (PDN) (not shown), and in turn to the Internet , via a Gi interface with IP protocols either directly or through a Wireless Application Protocol (WAP) gateway.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 2B","FIG. 2B","FIG. 2A","FIG. 2B"],"b":"126"},"Direct Tunnel is an optional function in Iu mode that allows the SGSN  to establish a direct user plane tunnel, GTP-U, between RAN and GGSN within the Packet Switched (PS) domain. A direct tunnel capable SGSN, such as SGSN  in , can be configured on a per GGSN and per RNC basis whether or not the SGSN can use a direct user plane connection. The SGSN  in  handles the control plane signaling and makes the decision of when to establish Direct Tunnel. When the Radio Bearer (RAB) assigned for a PDP context is released (i.e. the PDP context is preserved) the GTP-U tunnel is established between the GGSN  and SGSN  in order to be able to handle the downlink packets.","The optional Direct Tunnel between the SGSN  and GGSN  is not typically allowed (i) in the roaming case (e.g., because the SGSN needs to know whether the GGSN is in the same or different PLMN), (ii) where the SGSN has received Customized Applications for Mobile Enhanced Logic (CAMEL) Subscription Information in the subscriber profile from a Home Location Register (HLR) and\/or (iii) where the GGSN  does not support GTP protocol version 1. With respect to the CAMEL restriction, if Direct Tunnel is established then volume reporting from SGSN  is not possible as the SGSN  no longer has visibility of the User Plane. Thus, since a CAMEL server can invoke volume reporting at anytime during the life time of a PDP Context, the use of Direct Tunnel is prohibited for a subscriber whose profile contains CAMEL Subscription Information.","The SGSN  can be operating in a Packet Mobility Management (PMM)-detached state, a PMM-idle state or a PMM-connected state. In an example, the GTP-connections shown in  for Direct Tunnel function can be established whereby the SGSN  is in the PMM-connected state and receives an Iu connection establishment request from the UE. The SGSN  ensures that the new Iu connection and the existing Iu connection are for the same UE, and if so, the SGSN  processes the new request and releases the existing Iu connection and all RABs associated with it. To ensure that the new Iu connection and the existing one are for the same UE, the SGSN  may perform security functions. If Direct Tunnel was established for the UE, the SGSN  sends an Update PDP Context Request(s) to the associated GGSN(s)  to establish the GTP tunnels between the SGSN  and GGSN(s)  in case the Iu connection establishment request is for signaling only. The SGSN  may immediately establish a new direct tunnel and send Update PDP Context Request(s) to the associated GGSN(s)  and include the RNC's Address for User Plane, a downlink Tunnel Endpoint Identifier (TEID) for data in case the Iu connection establishment request is for data transfer.","The UE also performs a Routing Area Update (RAU) procedure immediately upon entering PMM-IDLE state when the UE has received a RRC Connection Release message with cause \u201cDirected Signaling connection re-establishment\u201d even if the Routing Area has not changed since the last update. In an example, the RNC will send the RRC Connection Release message with cause \u201cDirected Signaling Connection re-establishment\u201d when it the RNC is unable to contact the Serving RNC to validate the UE due to lack of Iur connection (e.g., see TS 25.331[52]). The UE performs a subsequent service request procedure after successful completion of the RAU procedure to re-establish the radio access bearer when the UE has pending user data to send.","The PDP context is a data structure present on both the SGSN  and the GGSN  which contains a particular UE's communication session information when the UE has an active GPRS session. When a UE wishes to initiate a GPRS communication session, the UE must first attach to the SGSN  and then activate a PDP context with the GGSN . This allocates a PDP context data structure in the SGSN  that the subscriber is currently visiting and the GGSN  serving the UE's access point.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":["FIG. 2C","FIG. 1","FIG. 2C","FIG. 2C","FIG. 2C"],"b":["100","1","120","1","3","120","162","162","188","175","182","184","186","170","2","5","120","164","162","164","188","175","182","184","186","170","4","175","175"]},"Referring to , UEs ,  and  . . . N are illustrated as wireless cell-phones, UE  is illustrated as a wireless tablet-PC and UE  is illustrated as a wired desktop station. However, in other embodiments, it will be appreciated that the wireless communication system  can connect to any type of UE, and the examples illustrated in  are not intended to limit the types of UEs that may be implemented within the system. Also, while the AAA , the provisioning server , the IMS\/SIP registration server  and the application server  are each illustrated as structurally separate servers, one or more of these servers may be consolidated in at least one embodiment of the invention.","Further, referring to , the application server  is illustrated as including a plurality of media control complexes (MCCs)  . . . N B, and a plurality of regional dispatchers  . . . N A. Collectively, the regional dispatchers A and MCCs B are included within the application server , which in at least one embodiment can correspond to a distributed network of servers that collectively functions to arbitrate communication sessions (e.g., half-duplex group communication sessions via IP unicasting and\/or IP multicasting protocols) within the wireless communication system . For example, because the communication sessions arbitrated by the application server  can theoretically take place between UEs located anywhere within the system , multiple regional dispatchers A and MCCs are distributed to reduce latency for the arbitrated communication sessions (e.g., so that a MCC in North America is not relaying media back-and-forth between session participants located in China). Thus, when reference is made to the application server , it will be appreciated that the associated functionality can be enforced by one or more of the regional dispatchers A and\/or one or more of the MCCs B. The regional dispatchers A are generally responsible for any functionality related to establishing a communication session (e.g., handling signaling messages between the UEs, scheduling and\/or sending announce messages, etc.), whereas the MCCs B are responsible for hosting the communication session for the duration of the call instance, including conducting an in-call signaling and an actual exchange of media during an arbitrated communication session.","Referring to , a UE , (here a wireless device), such as a cellular telephone, has a platform  that can receive and execute software applications, data and\/or commands transmitted from the RAN  that may ultimately come from the core network , the Internet and\/or other remote servers and networks. The platform  can include a transceiver  operably coupled to an application specific integrated circuit (\u201cASIC\u201d ), or other processor, microprocessor, logic circuit, or other data processing device. The ASIC  or other processor executes the application programming interface (\u201cAPI\u2019)  layer that interfaces with any resident programs in the memory  of the wireless device. The memory  can be comprised of read-only or random-access memory (RAM and ROM), EEPROM, flash cards, or any memory common to computer platforms. The platform  also can include a local database  that can hold applications not actively used in memory . The local database  is typically a flash memory cell, but can be any secondary storage device as known in the art, such as magnetic media, EEPROM, optical media, tape, soft or hard disk, or the like. The internal platform  components can also be operably coupled to external devices such as antenna , display , push-to-talk button  and keypad  among other components, as is known in the art.","Accordingly, an embodiment of the invention can include a UE including the ability to perform the functions described herein. As will be appreciated by those skilled in the art, the various logic elements can be embodied in discrete elements, software modules executed on a processor or any combination of software and hardware to achieve the functionality disclosed herein. For example, ASIC , memory , API  and local database  may all be used cooperatively to load, store and execute the various functions disclosed herein and thus the logic to perform these functions may be distributed over various elements. Alternatively, the functionality could be incorporated into one discrete component. Therefore, the features of the UE  in  are to be considered merely illustrative and the invention is not limited to the illustrated features or arrangement.","The wireless communication between the UE  or  and the RAN  can be based on different technologies, such as code division multiple access (CDMA), W-CDMA, time division multiple access (TDMA), frequency division multiple access (FDMA), Orthogonal Frequency Division Multiplexing (OFDM), the Global System for Mobile Communications (GSM), or other protocols that may be used in a wireless communications network or a data communications network. For example, in W-CDMA, the data communication is typically between the client device , Node B(s) , and the RNC . The RNC  can be connected to multiple data networks such as the core network , PSTN, the Internet, a virtual private network, a SGSN, a GGSN and the like, thus allowing the UE  or  access to a broader communication network. As discussed in the foregoing and known in the art, voice transmission and\/or data can be transmitted to the UEs from the RAN using a variety of networks and configurations. Accordingly, the illustrations provided herein are not intended to limit the embodiments of the invention and are merely to aid in the description of aspects of embodiments of the invention.","Store-and-forward is a communications protocol in which data exchanged between session participants during a communication session is monitored and stored by a server, such as the application server . The server may mediate the exchange of the session data for the communication session, in one embodiment. In another embodiment, the server may not be directly associated with mediation and\/or arbitration functions of the communication session, and may simply be forwarded the session data to the UE.","In another embodiment, the server can retrieve, at some later time, the stored session data for delivery to a requested UE for the UE that dropped out of the communication session and thereby missed receipt of at least a portion of the session data. For example, the session participant may have dropped out of the communication session for any number of reasons, including restrictions of wireless radio range (e.g., the session participants drives into a tunnel, etc.), noise, signal fading conditions, etc.","An example of a conventional store-and-forward implementation can be direct towards an E-mail delivery procedure whereby a target of a given E-mail is not available to receive the given E-mail. In this case, an E-mail server stores the given E-mail for later delivery, which can occur via one or more periodic attempts to re-transmit the given E-mail to the target or upon request from the target (e.g., the target logs onto the E-mail server to check for any missed E-mails, etc.). Thus, at a high level, store-and-forward protocols generally store media at a network entity for subsequent delivery to a target device when the media is not capable of being delivered in real-time.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 4","FIG. 4"],"b":["170","1","400","170","1","405","170","170","410"]},"Referring to , at some point during the communication session, assume that UE  drops out of the communication session, . For example, in , the user of UE  may have determined to end his\/her participation in the communication session, UE  may have lost connectivity to the RAN , etc. However, even though UE  drops out of the communication session in , UEs  . . . N continue to exchange media during the communication session, . Accordingly, it will be appreciated that UE  misses media that is exchanged between UEs  . . . N after UE  has dropped out off, and is no longer participating in the communication session.","At some later point in time (e.g., while the communication session is on-going or after the communication session is terminated altogether), UE  re-establishes its connection to the application server , . In response to the re-connection of , the application server  retrieves the session data stored at  and forwards all of the session data that was missed by UE  following the drop-out of  to UE , .","As will be appreciated by one of ordinary skill in the art, a server that is executing a conventional store-and-forward protocol generally forwards all session data that is missed by a particular UE for a communication session. However, a user of the particular UE may only be interested in a portion of the missed session data (e.g., audio but not video, session data from a subset of the UEs participating in the session and not other UE(s), etc.). While conventional store-and-forward protocols can automatically discard or overwrite certain data (e.g., location requests, presence information, etc.) when the data becomes irrelevant (e.g., due to age, or due the data no longer being accurate), conventional store-and-forward protocols do not compress the stored session data which is missed by a given UE based on UE-defined or UE-specific criteria. Accordingly, embodiments of the invention are directed to selectively compressing session data that was missed by a given UE in accordance with a context that is specific to and\/or defined by the given UE.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":["FIG. 5A","FIG. 5A"],"b":"1"},"Referring to , the application server  sets-up a communication session between UEs  . . . N, A (e.g., where N=2 for a direct or one-to-one communication session and N>2 for a group communication session). Accordingly, the application server  begins arbitrating a communication session between UE  . . . N by exchanging session data during the communication session, A. During the communication session that is arbitrated by the application server , the application server  stores session data, such as the exchanged session media (e.g., audio, video, text, etc.) and\/or signaling information, A (e.g., indications of which UEs are floor-holders at different times, information regarding which UEs are participating in the communication session at different times, etc.). At some point during the communication session, assume that UE  drops out of the communication session, A (e.g., UE  may have lost connectivity to RAN , etc.). However, even though UE  drops out of the communication session in A, UEs  . . . N continue to exchange session data during the communication session, A. Accordingly it will be appreciated that UE  misses session data that is exchanged between UE  . . . N after UE  has dropped off and is no longer participating in the communication session. At some later point in time, but while the communication session is on-going, UE  re-establishes its connection to the application server , A. In response to the re-connection of A, the application server  retrieves the session data stored at A and determines how much of the session data was missed by UE  following the drop-out of A. Unlike  whereby the application server  simply forwards all of the missed session data to UE , the application server  then selectively compresses the stored session data that was missed by UE  in accordance with a UE-defined context for UE , A. Examples of the UE-defined context as well as different ways the stored session data can be compressed will be described in greater detail below. Generally, the UE-defined context can correspond to a context (e.g., a set of preferences, an operational state, a location, etc.) of UE  or a user of UE . For example, a determination of which applications are executing on UE  can contribute to the UE-defined context for UE . Alternatively, the user can indicate that he\/she is uninterested in video content or content from certain UEs, which can form part of the UE-defined context for UE . After the selective session data compression of A, the application server  forwards the compressed session data to UE , A. After receiving the forwarded data of A, UE  presents the compressed session data and resumes its participation in the active communication session with the UEs  . . . N, A. For example, the compressed session data can be presented as a text-translation of audio exchanged between UEs  . . . N while UE  was absent from the communication session, such that UE  can resume the communication session in conjunction with permitting its user to \u201ccatch up\u201d with the other session participants by reviewing the text-translation. Other examples of session data compression will be described in more detail below.","While  is related to the application server  provisioning UE  with a selectively compressed version of missed session data in conjunction with resuming its participation in a still-active communication session,  is directed towards the application server  provisioning UE  with a selectively compressed version of missed session data after communication session has been terminated.",{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 5B","FIG. 5B"],"b":"1"},"Referring to , the application server  sets-up a communication session between UEs  . . . N, B. Accordingly, the application server  begins arbitrating a communication session between UE  . . . N by exchanging session data during communication session, B. During the communication session that is arbitrated by the application server , the application server  stores session data, such as session media (e.g., audio, video, text, etc.) and\/or signaling information, B (e.g., indications of which UEs are floor-holders at different times, information regarding which UEs are participating in the communication session at different times, etc.). At some point during the communication session, assume that UE  drops out of the communication session, B (e.g., UE  may have lost connectivity to RAN , etc.). However, even though UE  drops out of the communication session in B, UEs  . . . N continue to exchange session data during the communication session, B. Accordingly it will be appreciated that UE  misses session data that is exchanged between UE  . . . N after UE  has dropped off, and is no longer participating in the communication session. At some later point in time, and after the session ends, B, the application server  stops storing session data, B. After the session has ended, B, UE  re-establishes its connection to the application server , B. In response to the re-connection of B, the application server  retrieves the session data stored at B and determines how much of the session data was missed by UE  following the drop-out of B. The application server  then selectively compresses the stored session data that was missed by UE  in accordance with a UE-defined context for UE , B. As noted above with respect to A of , examples related to the UE-defined context and manners in which the session data can be selectively compressed will be described in more detail below. After the session data compression of B, the application server  forwards the compressed session data to UE , B. Other examples of session data compression will be described in more detail below. After receiving the forwarded data of B, UE  presents the compressed session data to catch-up on the material from the communication session that was missed due to UE  dropping out, B. As noted above with respect to A of , other examples of session data compression will be described in more detail below.","While  and  are related to UE  being one of the original participants starting the session,  are directed towards UE  joining the communication session late and not being an original participant in the session.",{"@attributes":{"id":"p-0069","num":"0068"},"figref":["FIG. 6A","FIG. 6A"],"b":["1","1"]},"Referring to , the application server  sets-up a communication session between UEs  . . . N, A. Accordingly, the application server  begins arbitrating a communication session between UE  . . . N by exchanging session data during communication session, A. During the communication session that is arbitrated by the application server , the application server  stores session data, such as session media and\/or signaling information, A. At some point during the communication session, assume that UE , which was not an original participant, joins the communication session, A. Accordingly it will be appreciated that UE  misses session data that is exchanged between UE  . . . N before UE  has joined. In response to UE  joining the communication session, the application server  retrieves the session data stored at A and determines how much of the session data was missed by UE  before the joining of A. The application server  then selectively compresses the stored session data that was missed by UE  in accordance with a UE-defined context for UE , A. As noted above with respect to A of , examples related to the UE-defined context and manners in which the session data can be selectively compressed will be described in more detail below. After the selective session data compression of A, the application server  forwards the selectively compressed session data to UE , A. After receiving the forwarded data of A, UE  presents the compressed session data to a user to permit the user to catch-up on the material from the communication session, A. As noted above with respect to A of , other examples of session data compression will be described in more detail below. In a further example, the presentation of A can occur prior to UE  beginning active participation in the communication session in real-time with UEs  . . . N (e.g., UE  can play the missed session data in fast-forward or high-speed mode until real-time is reached, after which UE  is permitted to actively engage in the real-time communication session). In an alternative example, the presentation of A can occur contemporaneously or concurrently with UE  beginning active participation in the communication session (e.g., UE  can present a text transcript of the missed session data while also playing out live media, such as audio or video media, for the communication session in real-time).","While  is related to a late joining UE to a still-active active communication obtaining missed session data from earlier in the communication session,  is directed towards a UE obtaining missed or archived session data associated with a terminated communication session, whereby the UE was not ever actually a participant in the terminated communication session.","Referring to , B through B correspond to A through A of , and as such will not be described further for the sake of brevity. At some point after the communication session ends, B, assume that UE , which was not a participant in the communication session, requests a portion of the archived session data, B. The request of B by UE  can be active (e.g., UE  transmits a request for the portion of the archived session data to the application server ) or implicit (e.g., UE  may be some type of administrator with a preference setting to receive certain portions of communication sessions involving one or more of UEs  . . . N, such as where UE  is controlled by a manager and UEs  . . . N are controlled by employees of the manager). In response to UE 's request of the archived session data, the application server  retrieves the session data stored at B. The application server  then selectively compresses the stored session data that was missed by UE  in accordance with a UE-defined context for UE , B. As noted above with respect to A of , examples related to the UE-defined context and manners in which the session data can be selectively compressed will be described in more detail below. After the session data compression of B, the application server  forwards the compressed session data to UE , B. After receiving the forwarded data of B, UE  presents the compressed session data from the communication session that UE  requested, B.","In a further example for , UE  is invited to a review a previous communication session after the communication session has ended. In this case, instead of simply playing the whole missed communication session to UE , one or more of the UEs that actually participated in the old communication session can specify one or more \u201ccatch-up points\u201d within the communication session, prompting the application server  to compress the session data for the communication session (in B) in accordance with the one or more catch-up points. For example, the catch-up points can be used by the UEs that participated in the communication to point out or high-light the most relevant parts of the communication session (e.g., in a general manner or parts of the communication session deemed especially relative for UE  specifically). The application server  can then forward the selectively compressed session data that focuses on the above-noted catch-up point(s) to UE  in B.","In another example for , UEs  . . . N may be part of the same communication group, but UE  was \u201coffline\u201d during the communication session for the group as shown in  between UEs  . . . N. As discussed above, one or more of the online UEs (i.e., UEs  . . . N) can mark relevant positions (e.g., a \u201cread from here\u201d points or catch-up points) within the communication session, prompting the application server  to selectively compress (or sync) a subset of the missed session data based on the marked position(s).",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 6C","FIG. 6B","FIG. 6B","FIG. 6C","FIG. 6B","FIG. 6C","FIG. 6B"],"b":["1","1","600","605","600","605","1","600","605","605","610","635","610","635"]},{"@attributes":{"id":"p-0076","num":"0075"},"figref":["FIGS. 7A and 7B","FIGS. 5A","FIG. 7A","FIGS. 5A"],"b":["530","540","620","625","625","5","6","6","6","1","1","700","1","170","1","170","5","6","6","6","705","170","1"]},"Referring to , in an example, the UE-defined context can include a list of UEs that UE  is interested in monitoring. For example, UE  may be controlled by an employee that is interested in following session data that originates from his\/her manager, his\/her colleagues, and so on. Thus, in this example, A of  can add the list of UEs to the pre-configured context for UE . After UE  misses session data in any of , the application server  can then evaluate the missed portion of session data for UE  to determine whether any of the session media originated from a listed UE and\/or any signaling information associated with any listed UEs (e.g., when the listed UEs joined\/left the session, when the listed UEs held the floor, etc.). The application server  can compress the missed media in A by filtering out session media that originated from non-listed UEs and\/or signaling information associated with non-listed UEs, A, and can then send the remainder of the session data to UE  as the selectively compressed session data.","Referring to , in another example, the UE-defined context can include a set of one or more applications configured for execution on UE . For example, UE  may want to continue to execute one or more applications (e.g., such as a Web browser) in conjunction with acquiring missed session data. In this case, in A of  can add a list of the one or more applications to the pre-configured context for UE . After UE  misses session data in any of , the application server  can then evaluate the current applications executing on UE  to determine whether one or more of the currently executing applications corresponds to a listed applications. The application server  can compress the missed session data in A by modifying the missed session data to conform with operation of the currently executing applications. For example, a Web browser may be expected to consume half of a display screen of UE , such that the application server  can compress the missed session data by reducing a video resolution of a video portion of the missed session data to conform with the remaining half of the display screen of UE .","Referring to , in another example, the UE-defined context can include a set of conversations on UE . For example, UE  may want to continue to participate in one or more conversations (e.g., text conversations, voice conversations, etc.) in conjunction with acquiring missed session data. In this case, in A of  can add a list of the one or more conversations to the pre-configured context for UE . After UE  misses session data in any of , the application server  can then evaluate whether UE  is currently engaged in one of the listed conversations. If so, the application server  can compress the missed session data in A by modifying the missed session data to accommodate the current conversation at UE . For example, if UE  is engaged in a voice call, the application server  can compress the missed session data by converting an audio portion of the missed session data into text so as not to interfere with the voice call. In another example, if UE  is engaged in a text conversation and the missed session data includes text, the application server  can compress the missed session data by converting a text portion of the missed session data into audio so as not to interfere with the text conversation.","Referring to , in another example, the UE-defined context can include a bandwidth available at UE . For example, UE  may transition between different bandwidth environments (e.g., WiFi, 3G, 1x, etc.) while moving throughout the wireless communications system. In this case, in A of  can add bandwidth information to the pre-configured context for UE  and associate the bandwidth information with different compression preferences. After UE  misses session data in any of , the application server  can then evaluate whether UE  a current bandwidth for UE  and compare the current bandwidth of UE  with UE 's compression preferences to identified a given compression protocol. The application server  can compress the missed session data in A by modifying the missed session data in accordance with the identified compression protocol. For example, if UE  is in a low-bandwidth environment, the application server  can compress the missed session data by dropping a video portion and converting an audio portion to text. In another example, if UE  is in an intermediate-bandwidth environment, the application server  can compress the missed session data by reducing a resolution or data rate of a video portion.","Referring to , in another example, a user of UE  may have access to a plurality of different types of UEs that each have different device characteristics (e.g., a tablet computer, a desktop computer, a smart phone, a laptop, etc.). In this example, the UE-defined context can include a device type of the UE to which the session data is to be transmitted. The device-type of UE  can be conveyed to the application server  in a pre-configured manner so that the application server  knows the device-type in advance of the compression at A of , or alternatively the device-type can be conveyed by UE  to the application server  in conjunction with the request for the session data at B of , as will be discussed below in more detail. In either case, the application server  can compress the missed session data in A by modifying the missed session data in accordance with the identified device-type of UE . For example, if UE  is a small form-factor device (e.g., a smartphone, etc.), the application server  can compress the missed session data by reducing a video resolution. In another example, if UE  is connected to a large black-and-white display, the application server  can compress the missed session data by maintaining the video resolution but converting the color of the video to grayscale, and so on.",{"@attributes":{"id":"p-0082","num":"0081"},"figref":["FIG. 7B","FIG. 7A","FIG. 7B"]},"Referring to , after a communication session has at least started (e.g., during the communication session, after the communication session terminates, etc,), UE  connects to the application server  and requests at least a portion of missed session data while also indicating a UE-defined context for UE  by which the missed session data may be compressed, B. Then, the application server  selectively compresses the stored session data that was missed by UE  in accordance with the UE-defined context that was indicated by UE , B.","Referring to , in an example, the UE-defined context indicated in conjunction with the request for missed session data can include a list of UEs that UE  is interested in monitoring. The application server  can compress the missed media in B by filtering out session media that originated from non-listed UEs and\/or signaling information associated with non-listed UEs, and can then send the remainder of the session data to UE  as the selectively compressed session data.","Referring to , in another example, the UE-defined context indicated in conjunction with the request for missed session data can include a set of one or more applications configured for execution on UE . For example, UE  may indicate that it is actively engaged in a Web browsing session occupying half of its display screen. In this example, the application server  can compress the missed session data by reducing a video resolution of a video portion of the missed session data to conform with the remaining half of the display screen of UE .","Referring to , in another example, the UE-defined context indicated in conjunction with the request for missed session data can include a conversation in which UE  actively engaged. For example, if UE  indicates that UE  is engaged in a voice call, the application server  can compress the missed session data by converting an audio portion of the missed session data into text so as not to interfere with the voice call. In another example, if UE  indicates that UE  is engaged in a text conversation and the missed session data includes text, the application server  can compress the missed session data by converting a text portion of the missed session data into audio so as not to interfere with the text conversation.","Referring to , in an example, the UE-defined context indicated in conjunction with the request for missed session data can include a current bandwidth available at UE . The application server  can compress the missed session data in A by modifying the missed session data into a format suitable for the current bandwidth available at UE . For example, if UE  is in a low-bandwidth environment, the application server  can compress the missed session data by dropping a video portion and converting an audio portion to text. In another example, if UE  is in an intermediate-bandwidth environment, the application server  can compress the missed session data by reducing a resolution or data rate of a video portion","Referring to , in another example, UE  can become aware that session data associated with the communication session has been missed. For example, UE  may have been an earlier participant in the communication session that subsequently lost its connection, UE  may have receive a late announce message for the communication session, UE  may log onto the application server  and be notified that the communication session has already started or has terminated, and so on. In response to such a determination, UE  can be provided with a summary of file-types (e.g., audio, video, text, files from UE , files from UEs located in California, files from UEs that are social networking contacts of UE , etc.) missed by UE  during the communication session. UE  then picks and chooses the specific files from the summary files (e.g., reference to video files, audio files, conversation, and\/or other session data types) that UE  wishes to obtain, and then packages the file-type preferences into a request that forms the UE-define context, B. After receiving the file request, the application server  forwards to UE  only the files that were requested, B. Optionally, UE  can issue supplemental requests for other portions of missed session data (e.g., the original video file with full resolution).","Referring to , in another example, another UE (not UE ) can provide the UE-defined context for UE . For example, another UE can insert \u201cmarkers\u201d into the communication session that indicate points of interest for any UE or for UE  specifically (e.g., UE  may be aware that UE  is interested in spelunking and can insert a marker into the conversation to flag a portion of the session dedicated to a spelunking conversation for UE 's benefit). Thus, when UE  requests the missed session data, the compression can occur based in part on the above-noted flag, which forms part of the UE-defined context for UE .","As will be appreciated from a review of , the application server  selectively compresses the missed portion of the session data for delivery to UE . The manner in which the missed portion of the session data can be compressed can be based on a UE-defined context that is specific for UE , whereby the UE-defined context can be based upon a number of different factors or different algorithms, such as (i) an estimation of bandwidth to the UE via its new connection, or (ii) compression rules that are conveyed to the application server  via one or more of the session participants, and so on. Accordingly, instead of simply forwarding all missed data to UE  as in a conventional store-and-forward system, the application server  can be more selective in terms of how the missed data is compressed, which type of missed data is sent to the UE, and so on, while also taking into account system constraints.","Furthermore, in , the application server  can decide when to use processing power to compress the data (e.g., in advance of UE  requesting the missed session data, or in response to UE  requesting the missed session data). The application server  can create packages specific to UE  for a particular session.","Similar to ,  also illustrate example implementation of blocks A, B, A, B, and\/or C of , B, A, B and C, respectively, in accordance with embodiments of the invention. However,  focus on how the UE-defined context is acquired by the application server , and  focus on how the session data is actually compressed.","Referring to , stored session data for a given communication session is loaded by the application server  in A, in response to an implicit or explicit (i.e., active) request for the stored session data. After loading the stored session data, the application server  extracts a portion of the stored session data that was missed by UE , A. As noted above, the missed session data can correspond to all session data (e.g., if UE  never participated in the communication session) or less than all session data (e.g., if UE  participated during some portion of the communication session). Thus, A may be performed based upon information regarding which parts of the communication session UE  missed and which parts of the communication session UE  did not miss (if any). After extracting the missed session data in A, the application server  reduces (or \u201ccompresses\u201d) the extracted portion based on the UE-defined context, A, which can be acquired as discussed above in A of  and\/or B of . Examples of how the reduction or compression of A can be executed are described above with respect to  and  (e.g., reducing video resolution in low-bandwidth environments such as downsizing an 8\u00d710 picture to an equivalent resolution for viewing a 4\u00d75 picture, excluding video and\/or audio, translating an audio file by converting audio to text, etc.), and will not be described further for the sake of brevity.",{"@attributes":{"id":"p-0094","num":"0093"},"figref":["FIG. 8B","FIG. 8A","FIG. 8B","FIG. 8B"],"b":["810","1","170","1","800","170","1","1","805","1","1"]},"Further, with respect to , the session data that is excluded at A and\/or B can additionally be based upon a data-specific context (irrespective of the UE-defined context). For example, the session data can be tagged into several categories including, but not limited to: data that must always be sent (e.g., group management data, one-on-one Media, Group Media, Group Adds\/Removes, Participation Suppression); data not required to be sent after a long outage (e.g., presence data), ancillary signaling (marked as Ephemeral) and conversation management (e.g. current relevant position, pre-join \u201ccatch-up\u201d position). Accordingly, the session data reduction or exclusion of A and\/or B may be implemented in a manner that takes the data-specific context into account. For example, even if UE  did not explicitly indicate an interest or disinterest in the above-noted data in his\/her UE-defined context, this data may still be sent to UE  or blocked from transmission to UE  for reasons that are specific to the data itself (i.e., applicable to UE-defined contexts for any UE).","In the description of the embodiments provided above with respect to , B, A and\/or A, UE  misses at least a portion of session data of a communication session and later reconnects to the application server  and acquires a compressed version of the missed session data. In instances where the missed session data is not actively requested by UE , the application server  can attempt to push the compressed version of the missed session data in a smart or efficient manner (i.e., so that the compressed version of the missed session data is not simply dumped onto UE  the moment that UE  establishes its connection to the application server ), as will now be described in detail.","The application server  (or push server) may evaluate a given set of factors to determine when to push the compressed version of the missed session data to UE . The given set of factors may include (i) a priority of UE , (ii) a priority of UE(s) that originated the missed session data, (iii) a number of participants in the communication session, (iv) a type of media being exchanged via the communication session, (v) a device-type (e.g., phone, PC, etc.) of UE  and\/or UE(s) that originated the missed session data, (vi) a type of system (e.g., WiFi, 3G, etc.) over which UE  is connected and\/or (vii) a battery life expectancy of UE . By evaluating the given set of factors, the load on the application server  (or push server) at any given point in time can be reduced or maintained at a manageable level.","For example, the load on the application server  (or push server) and\/or the battery life of UE  can be controlled by conveying the compressed version of the missed session data via a series of slow-pushes (i.e., small file-size transfers). In another example, an originator of a portion of the missed session data may be a high priority user (at least, to UE ), such that media from the high priority user can be pushed ahead of media from lower-priority users among the compressed version of the missed session data. Alternatively, the compression of the missed session data can simply exclude the session data from the lower-priority UE(s).","In another example, as noted above, the given set of factors used to affect when the compressed version of the missed session data is pushed to UE  can include the size of the group participating in the communication session. For example, if the communication session is one-to-one, it is known that any session data provided by the other UE is intended for UE , such that the push of the missed session data can be prioritized. Alternatively, if the communication session includes 1000 participants, it is statistically unlikely that the user of UE  will be particularly interested in media from any one particular UE, such that pushes of media from these UEs can be conducted when convenient (i.e., not necessarily in a prioritized manner). Of course, the application server  may have specialized knowledge regarding the relevance or priority of the transmitting UE to UE  (e.g., the transmitting UE is part of UE 's server-based address book), in which case the transmitted UE's session data can be pushed to UE  in a prioritized manner even if the number of participants in the communication session is relatively high.","In another example, as noted above, the type of media being exchanged via the communication session can affect if or when the compressed version of the missed session data is pushed to UE . For example, if UE  missed a few presence updates (e.g., a few UEs joined the communication session while other UEs dropped out of the communication session while UE  was not part of the communication session), UE  can simply be expected to load up-to-date presence information when re-joining the session and need not receive the presence update via a prioritized push procedure. Presence pushes can be omitted in some instances, in other words.","In another example, as noted above, the given set of factors can include a designation (or type) of the transmitting UE and\/or the system over which the missed session data is to be transmitted. For example, the transmitting UE that provides session media while UE  is disconnected from the communication session can indicate, to the application server , that the session data should not be pushed to UE . Rather, the application server  can simply wait for UE  to request this session data. For example, the session data missed by UE  can be provided by UE  and can correspond to a voice note or memo, and a user of UE  can indicate that the voice note or memo has a relatively low priority and need not be pushed to UE  (i.e., by including a \u201cno-push\u201d flag, so that UE  is not interrupted with the voice note in \u201creal time\u201d, but rather only when UE  is requesting its missed session data). For example, the backend server may attempt to deliver the voice note or memo upon receipt from UE , but if UE  was unreachable, the application server  (or push server) can refrain from waking up UE  if UE  marked the content with a \u201cno-push\u201d flag. Alternatively, even in the absence of an explicit \u201cno-push\u201d flag from the transmitting UE or UE , the application sever  can execute its own decision logic to categorize certain session data as \u201cno-push\u201d so that UE  is not bothered with missed session data that is deemed as lower priority.",{"@attributes":{"id":"p-0102","num":"0101"},"figref":"FIG. 9","b":["900","900","102","108","110","112","200","124","122","160","165","170","186","900"]},"Referring to , the communication device  includes logic configured to receive and\/or transmit information . In an example, if the communication device  corresponds to a wireless communications device (e.g., UE , Node B , etc.), the logic configured to receive and\/or transmit information  can include a wireless communications interface (e.g., Bluetooth, WiFi, 2G, 3G, etc.) such as a wireless transceiver and associated hardware (e.g., an RF antenna, a MODEM, a modulator and\/or demodulator, etc.). In another example, the logic configured to receive and\/or transmit information  can correspond to a wired communications interface (e.g., a serial connection, a USB or Firewire connection, an Ethernet connection through which the Internet  can be accessed, etc.). Thus, if the communication device  corresponds to some type of network-based server (e.g., SGSN , GGSN , application server , etc.), the logic configured to receive and\/or transmit information  can correspond to an Ethernet card, in an example, that connects the network-based server to other communication entities via an Ethernet protocol. In a further example, the logic configured to receive and\/or transmit information  can include sensory or measurement hardware by which the communication device  can monitor its local environment (e.g., an accelerometer, a temperature sensor, a light sensor, an antenna for monitoring local RF signals, etc.). The logic configured to receive and\/or transmit information  can also include software that, when executed, permits the associated hardware of the logic configured to receive and\/or transmit information  to perform its reception and\/or transmission function(s). However, the logic configured to receive and\/or transmit information  does not correspond to software alone, and the logic configured to receive and\/or transmit information  relies at least in part upon hardware to achieve its functionality.","Referring to , the communication device  further includes logic configured to process information . In an example, the logic configured to process information  can include at least a processor. Example implementations of the type of processing that can be performed by the logic configured to process information  includes but is not limited to performing determinations, establishing connections, making selections between different information options, performing evaluations related to data, interacting with sensors coupled to the communication device  to perform measurement operations, converting information from one format to another (e.g., between different protocols such as .wmv to .avi, etc.), and so on. For example, the processor included in the logic configured to process information  can correspond to a general purpose processor, a digital signal processor (DSP), an application specific integrated circuit (ASIC), a field programmable gate array (FPGA) or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor, but in the alternative, the processor may be any conventional processor, controller, microcontroller, or state machine. A processor may also be implemented as a combination of computing devices, e.g., a combination of a DSP and a microprocessor, a plurality of microprocessors, one or more microprocessors in conjunction with a DSP core, or any other such configuration. The logic configured to process information  can also include software that, when executed, permits the associated hardware of the logic configured to process information  to perform its processing function(s). However, the logic configured to process information  does not correspond to software alone, and the logic configured to process information  relies at least in part upon hardware to achieve its functionality.","Referring to , the communication device  further includes logic configured to store information . In an example, the logic configured to store information  can include at least a non-transitory memory and associated hardware (e.g., a memory controller, etc.). For example, the non-transitory memory included in the logic configured to store information  can correspond to RAM memory, flash memory, ROM memory, EPROM memory, EEPROM memory, registers, hard disk, a removable disk, a CD-ROM, or any other form of storage medium known in the art. The logic configured to store information  can also include software that, when executed, permits the associated hardware of the logic configured to store information  to perform its storage function(s). However, the logic configured to store information  does not correspond to software alone, and the logic configured to store information  relies at least in part upon hardware to achieve its functionality.","Referring to , the communication device  further optionally includes logic configured to present information . In an example, the logic configured to present information  can include at least an output device and associated hardware. For example, the output device can include a video output device (e.g., a display screen, a port that can carry video information such as USB, HDMI, etc.), an audio output device (e.g., speakers, a port that can carry audio information such as a microphone jack, USB, HDMI, etc.), a vibration device and\/or any other device by which information can be formatted for output or actually outputted by a user or operator of the communication device . For example, if the communication device  corresponds to UE  as shown in , the logic configured to present information  can include the display . In a further example, the logic configured to present information  can be omitted for certain communication devices, such as network communication devices that do not have a local user (e.g., network switches or routers, remote servers, etc.). The logic configured to present information  can also include software that, when executed, permits the associated hardware of the logic configured to present information  to perform its presentation function(s). However, the logic configured to present information  does not correspond to software alone, and the logic configured to present information  relies at least in part upon hardware to achieve its functionality.","Referring to , the communication device  further optionally includes logic configured to receive local user input . In an example, the logic configured to receive local user input  can include at least a user input device and associated hardware. For example, the user input device can include buttons, a touch-screen display, a keyboard, a camera, an audio input device (e.g., a microphone or a port that can carry audio information such as a microphone jack, etc.), and\/or any other device by which information can be received from a user or operator of the communication device . For example, if the communication device  corresponds to UE  as shown in , the logic configured to receive local user input  can include the display  (if implemented a touch-screen), keypad , etc. In a further example, the logic configured to receive local user input  can be omitted for certain communication devices, such as network communication devices that do not have a local user (e.g., network switches or routers, remote servers, etc.). The logic configured to receive local user input  can also include software that, when executed, permits the associated hardware of the logic configured to receive local user input  to perform its input reception function(s). However, the logic configured to receive local user input  does not correspond to software alone, and the logic configured to receive local user input  relies at least in part upon hardware to achieve its functionality.","Referring to , while the configured logics of  through  are shown as separate or distinct blocks in , it will be appreciated that the hardware and\/or software by which the respective configured logic performs its functionality can overlap in part. For example, any software used to facilitate the functionality of the configured logics of  through  can be stored in the non-transitory memory associated with the logic configured to store information , such that the configured logics of  through  each performs their functionality (i.e., in this case, software execution) based in part upon the operation of software stored by the logic configured to store information . Likewise, hardware that is directly associated with one of the configured logics can be borrowed or used by other configured logics from time to time. For example, the processor of the logic configured to process information  can format data into an appropriate format before being transmitted by the logic configured to receive and\/or transmit information , such that the logic configured to receive and\/or transmit information  performs its functionality (i.e., in this case, transmission of data) based in part upon the operation of hardware (i.e., the processor) associated with the logic configured to process information . Further, the configured logics or \u201clogic configured to\u201d of  through  are not limited to specific logic gates or elements, but generally refer to the ability to perform the functionality described herein (either via hardware or a combination of hardware and software). Thus, the configured logics or \u201clogic configured to\u201d of  through  are not necessarily implemented as logic gates or logic elements despite sharing the word \u201clogic\u201d. Other interactions or cooperation between the configured logics  through  will become clear to one of ordinary skill in the art from a review of the embodiments described above.","Further, in an embodiment, \u201cmissed\u201d session data can correspond to session data that was never received by a particular UE. Alternatively, \u201cmissed\u201d session data can correspond to session data that was delivered to the particular UE but is then re-sent to the UE. For example, a user may have initially participated in a communication session via a given UE and then missed some aspect of the communication session at his\/her end, so that the user wants to review the user-missed portion of the session. Thus, \u201cmissed\u201d session data should not be construed as necessarily limited to data exchanged during a UE-outage period.","Those of skill in the art will appreciate that information and signals may be represented using any of a variety of different technologies and techniques. For example, data, instructions, commands, information, signals, bits, symbols, and chips that may be referenced throughout the above description may be represented by voltages, currents, electromagnetic waves, magnetic fields or particles, optical fields or particles, or any combination thereof.","Further, those of skill in the art will appreciate that the various illustrative logical blocks, modules, circuits, and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware, computer software, or combinations of both. To clearly illustrate this interchangeability of hardware and software, various illustrative components, blocks, modules, circuits, and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. Skilled artisans may implement the described functionality in varying ways for each particular application, but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.","The various illustrative logical blocks, modules, and circuits described in connection with the embodiments disclosed herein may be implemented or performed with a general purpose processor, a digital signal processor (DSP), an application specific integrated circuit (ASIC), a field programmable gate array (FPGA) or other programmable logic device, discrete gate or transistor logic, discrete hardware components, or any combination thereof designed to perform the functions described herein. A general purpose processor may be a microprocessor, but in the alternative, the processor may be any conventional processor, controller, microcontroller, or state machine. A processor may also be implemented as a combination of computing devices, e.g., a combination of a DSP and a microprocessor, a plurality of microprocessors, one or more microprocessors in conjunction with a DSP core, or any other such configuration.","The methods, sequences and\/or algorithms described in connection with the embodiments disclosed herein may be embodied directly in hardware, in a software module executed by a processor, or in a combination of the two. A software module may reside in RAM memory, flash memory, ROM memory, EPROM memory, EEPROM memory, registers, hard disk, a removable disk, a CD-ROM, or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from, and write information to, the storage medium. In the alternative, the storage medium may be integral to the processor. The processor and the storage medium may reside in an ASIC. The ASIC may reside in a user terminal (e.g., UE). In the alternative, the processor and the storage medium may reside as discrete components in a user terminal.","In one or more exemplary embodiments, the functions described may be implemented in hardware, software, firmware, or any combination thereof. If implemented in software, the functions may be stored on or transmitted over as one or more instructions or code on a computer-readable medium. Computer-readable media includes both computer storage media and communication media including any medium that facilitates transfer of a computer program from one place to another. A storage media may be any available media that can be accessed by a computer. By way of example, and not limitation, such computer-readable media can comprise RAM, ROM, EEPROM, CD-ROM or other optical disk storage, magnetic disk storage or other magnetic storage devices, or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a computer. Also, any connection is properly termed a computer-readable medium. For example, if the software is transmitted from a website, server, or other remote source using a coaxial cable, fiber optic cable, twisted pair, digital subscriber line (DSL), or wireless technologies such as infrared, radio, and microwave, then the coaxial cable, fiber optic cable, twisted pair, DSL, or wireless technologies such as infrared, radio, and microwave are included in the definition of medium. Disk and disc, as used herein, includes compact disc (CD), laser disc, optical disc, digital versatile disc (DVD), floppy disk and blu-ray disc where disks usually reproduce data magnetically, while discs reproduce data optically with lasers. Combinations of the above should also be included within the scope of computer-readable media.","While the foregoing disclosure shows illustrative embodiments of the invention, it should be noted that various changes and modifications could be made herein without departing from the scope of the invention as defined by the appended claims. The functions, steps and\/or actions of the method claims in accordance with the embodiments of the invention described herein need not be performed in any particular order. Furthermore, although elements of the invention may be described or claimed in the singular, the plural is contemplated unless limitation to the singular is explicitly stated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["A more complete appreciation of embodiments of the invention and many of the attendant advantages thereof will be readily obtained as the same becomes better understood by reference to the following detailed description when considered in connection with the accompanying drawings which are presented solely for illustration and not limitation of the invention, and in which:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 2A","FIG. 1"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 2B","FIG. 1"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 2C","FIG. 1"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 5A"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5B"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6A"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 6B"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 6C"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 7A"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 7B"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 8A"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 8B"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
