---
title: Executing a business process in a framework
abstract: Various embodiments of systems and methods for executing a customized business process in a business process framework are described herein. A user selection of a solution type corresponding to a business process is received from a user interface. In response to the user selection, a query is executed to retrieve application types and corresponding sub-application types from a business logic stored in a database. Configurable attributes are generated based upon the application types and the corresponding sub-application types. Based upon the application types, the sub-application types and the configurable attributes, the business process is customized to create a customized business process. Based upon a configuration information, a user input to the customized business process is captured from the user interface. The user input is validated by comparing the user input with the business logic. The customized business process that is validated is further executed in the business process framework.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09508050&OS=09508050&RS=09508050
owner: SAP SE
number: 09508050
owner_city: Walldorf
owner_country: DE
publication_date: 20131205
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["Embodiments generally relate to computer systems, and more particularly to methods and systems for executing a customized business process in a business process framework.","Enterprise content management generally relates to managing content involving digital data that may be dependent on business processes influenced by attributes such as industry, geography, lines of business, customers, product lines and the like. For instance, a multinational company having employees throughout the world and having a product portfolio that addresses multiple employee-solutions, has to provide documentation which supports easy generation of country, industry and language specific content. The content may be marketing documents, presentations, sales pitches, cost-benefit calculations, forms, tables, files and the like. While much of the content may need to be customized to the business process, there is a lot of redundant content that is repeated for each of the processes. There is a need for methods and systems for reusing as much of the available content as possible and for developing the content that is specific to the business process in order to minimize redundancy of development and maintenance efforts.","Various embodiments of systems and methods for configuring a framework to execute a business process are described herein. To customize the business process, a user selection of a solution type corresponding to a business process is received from a user interface. In response to the user selection, a query is executed to retrieve application types and corresponding sub-application types from a business logic associated with the business process. In an embodiment, the business logic is stored in a database. Configurable attributes for the solution type are generated based upon the application types and the corresponding sub-application types. The business process is customized based upon the application types, the corresponding sub-application types and the configurable attributes, to create a customized business process in a business process framework. Based upon a configuration information associated with the configurable attributes, a user input is captured from the user interface for the customized business process. The configuration information associated with the configurable attributes is stored in the business logic. The user input to the customized business process is validated to execute the customized business process in the business process framework. The validation is carried out by comparing the user input to the customized business process with the business logic associated with the business process. The customized business process that is validated is further executed in the business process framework.","In an embodiment, the validation process further includes displaying an error message on the user interface. The error message may originate due to an invalid user selection, an invalid user input to the attribute, an invalid file attached with the user input, or the like. The validity of the above user actions is determined based upon the business logic. In response to such error messages, error-correction information is generated based upon the business process. Metadata of the business process is associated with the business logic and is stored in a database along with the business logic and the business process. The metadata is use to determine the error messages and to generate the error-correction information. In an embodiment, the error messages are displayed on the user interface based upon a role of the user. Each user has an associated role that allows the user to perform certain operations on the business process. Each user may also be associated with a set of user actions for the customized business process; and based upon the validation, such user actions are sent to the user for execution. In another embodiment, the configurable attributes are configured to send an alert to the user to perform the associated user action.","In an embodiment, the user input to the customized business process, and the user actions are stored as transaction data in the database. The database is updated with the transaction data based upon the execution of the business process. The transaction data may be tracked at specific instances of the business process to provide specific status updates at the respective instances. In an embodiment, the customized business process may be invoked to update the transaction data in the database.","In an embodiment, the application types and the corresponding sub-application types are mapped based upon a hierarchy in the business process. The hierarchy in the business process may depend upon a priority of the application types and the corresponding sub-application types. The hierarchy includes a set of multiple levels of the application types and the corresponding sub-application types. Each level in the hierarchy may be associated with a set of users and corresponding user actions. A notification may be sent from the business logic to include the users at different levels in the hierarchy. The user actions may also be requested at different levels in the hierarchy.","In an embodiment, the user input to the customized business process may include configuring a set of tasks that have to be performed on the applications and sub-applications, authorizations for validating the customized business processes, fields and field-types for displaying on the user interface, field actions for the fields, visibility statuses, validity statuses and accessibility options.","In another embodiment, the business logic is configured to define generic application definitions and associated generic application types and sub-application types, dynamic screen rendering fields, associated generic application screen rendering fields, a set of values for the dynamic screen rendering fields and the associated generic application screen rendering fields. The business logic is also configured to maintain a set of generic configurable attributes for the generic application types and the corresponding generic sub-application types, along with a set of generic tasks, generic authorizations, generic fields and corresponding generic field types, generic field-actions, generic validity statuses, generic visibility statuses, and generic accessibilities. All of the contents of the business logic act as metadata to the corresponding business process.","These and other benefits and features of embodiments will be apparent upon consideration of the following detailed description of preferred embodiments thereof, presented in connection with the following drawings.","Embodiments of techniques for systems and methods for configuring a framework to execute a business process are described herein. A business process may be described as an arrangement of a collection of inter-dependent actions with a purpose of achieving an intended result. Business processes may be independently operational or supportive of other processes. A customized business process may be described as a business process that may be modified under considerations to produce an instance-specific result. Thus, the customized business process includes business information that can be used in a particular situation of the business process, having configurable attributes associated with that situation. A business process framework may be described as an adaptable collection of objects for an associated business process, which is responsible for configuring, monitoring and executing the business process.","For instance, to execute a business process of \u2018applying for a leave of absence\u2019 for \u2018user A\u2019 in an organization, the business process may be customized based upon a number of eligible leaves of absence, a set of different types of eligible leaves of absence, a validity of the eligible leaves of absence and the like. To execute such a customized business process of \u2018applying for a leave of absence\u2019, a \u2018leave-request framework\u2019 may be developed for \u2018user A\u2019 based upon a configuration information associated with \u2018user A\u2019 and the business process of \u2018applying for a leave of absence\u2019.","In the following description, numerous specific details are set forth to provide a thorough understanding of the embodiments. One skilled in the relevant art will recognize, however, that the embodiments can be practiced without one or more of the specific details, or with other methods, components, materials, etc. In other instances, well-known structures, materials, or operations are not shown or described in detail.","Reference throughout this specification to \u201cone embodiment\u201d, \u201cthis embodiment\u201d and similar phrases, means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one of the one or more embodiments. Thus, the appearances of these phrases in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in any suitable manner in one or more embodiments.",{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 1","b":["100","105","110","115","120","125","130","135","140","145","150","155","105","110","105"]},"Business process  includes an arrangement of a collection of inter-dependent solution types (for e.g., solution type ), with a purpose of achieving an intended result. In an embodiment, business process  is stored in database . Metadata of such business processes  is also stored in database . The metadata of business process  includes a set of solution types (for e.g., ), a set of associated application types (for e.g., ) and a set of corresponding sub-application types (for e.g., ). The metadata also includes a set of configurable attributes (for e.g., ) associated with the application types  and the corresponding sub-application types . The metadata includes configuration information associated with the configurable attributes. The metadata may include many other details about business process . A solution type may be described as a set of business solutions provided by an associated business process, where each solution type defines a business task in a comprehensive manner. Solution type  is described as a set of business solutions provided by associated business process . Business process  stores many such solution types , each defining a business task.","To customize business process , a user selection of solution type  is received from a user interface. A user interface may be described as a platform where a user interacts with the modules of a system (for e.g., business process , configuration module , and validation module ). A user may choose solution type  from a list of solution types associated with business process . In response to the user selection of solution type , configuration module  executes a query in database  to retrieve application types  and corresponding sub-application types  from business logic  associated with business process .","Database  is configured to store metadata of the business process , including solution type , application types  and corresponding sub-application types  associated with business process , and configuration information of configurable attributes  that are necessary for executing business process . The configuration information of configurable attributes  further include actions to be performed on application types  and corresponding sub-application types , authorizations for validating business process , fields and field types for displaying on the user interface, field-actions for the fields, validity and visibility of the fields, accessibilities for the applications types  and the sub-application types  and the like.","Business logic  associated with business process  is also stored in database . Business logic  includes a set of functional rules associated with business process  based upon which the metadata of business process  is exchanged between database  and a user interface. Business logic  illustrates functional rules for the collection of objects present in a business process framework . Business logic  regulates the interaction between application types , sub-application types , configurable attributes , solution types , the user interface, user inputs  to the user interface and the like. Business logic  implements methods by which the contents of the business logic  and the associated data in database  have to be accessed and updated. Business logic  also represents functional rules associated with one or more workflows involving business processes . Business logic  maintains the processes involved in workflows, data management of the workflows, user actions required at different stages, users' interactions with business process , and the like. Business logic  stores configuration information associated with the configurable attributes. The configuration information may include an information associated with the configurable attributes, that allows the configurable attributes to be configured in an intended manner.","An application type may be described as a set of available features for a solution type, where each application type defines a business task associated with the solution type. A sub-application type may be described as a set of available features for a corresponding application type, where each sub-application type defines a sub-task associated with the application type. Application type  provides a set of available features for solution type . Sub-application type  provides a set of available features for a selected feature of application type . For instance, a business process of \u2018applying for a leave of absence\u2019 in an organization includes a set of solution types \u2018leaves of absence in USA\u2019, \u2018leaves of absence in UK\u2019, \u2018leaves of absence in Australia\u2019 and the like.","Based upon a user's properties (for e.g., geographic location, user's eligibility, user's role in the organization) a set of solution types displays for a selected business process. If the user selection of a solution type is \u2018leaves of absence in Australia\u2019, configuration module  executes a query in database  to retrieve a set of application types \u2018illness leave\u2019, \u2018casual leave\u2019, \u2018examination leave\u2019 and the like along with corresponding set of sub-application types \u2018anticipate leave\u2019, \u2018adjust against loss of pay\u2019 \u2018adjust against compensated day\u2019 and the like. In an embodiment, the sub-application types may exist in multiple levels, where a first level sub-application type invokes a second level sub-application type. For instance, for a sub-application type of \u2018adjust against compensated day\u2019, a second level sub-application type of \u2018adjust against working on weekend\u2019, \u2018adjust against working on holiday\u2019 and the like may be invoked.","In an embodiment, application types  and corresponding sub-application types  are mapped based upon a hierarchy in business process . The hierarchy in business process  may depend upon a priority of application types  and corresponding sub-application types . For instance, a first application having a first sub-application and a second sub-application is at a higher level when compared to a second application having a third sub-application. There may be a need for the first application and the corresponding sub-applications to be executed prior to the second sub-application and the corresponding sub-applications. The mapping is done based upon a priority of occurrence of application types  and corresponding sub-application types . The hierarchy includes a set of multiple levels of application types  and corresponding sub-application types . Each level in the hierarchy may be associated with a set of users and corresponding user actions. A notification may be sent from business logic  to include the users at different levels in the hierarchy. The user actions may also be requested at different levels in the hierarchy.","Based upon the application types  and the corresponding sub-application types , configuration module  generates one or more configurable attributes  for the solution type . Configuration module  may generate configurable attributes  based upon business logic  in database . A configurable attribute defines a set of configurable parameters for a business entity, where the parameters are properties or values of the business entity. Configurable attributes  are associated with metadata of a business entity, the metadata of the business entity includes the business information of the entity, the configurable attributes  describe the properties or values of the business information. Configurable attribute  for solution type  may include configuring a set of tasks that have to be performed on the applications  and corresponding sub-applications , authorizations for validating the customized business processes , fields and field-types for displaying on the user interface, field actions for the fields, visibility statuses, validity statuses and accessibility options. Configurable attribute  is associated with the configuration describing the manner in which the configurable attribute  is configured. For instance, a configurable attribute  that includes a set of tasks may have configuration that describe the manner in which the tasks have to be performed.","Based upon the application types, the corresponding sub-application types and the configurable attributes, business process  is customized to create customized business process . The customized business process is created in business process framework . Customized business process  thus includes user selected solution type , associated application types  and corresponding sub-application types , associated configurable attributes , along with the functional rules defined by business logic  for business process .","User input  to customized business process  is captured from the user interface. User input may include assigning one or more tasks that have to be performed on application types  and corresponding sub-application types , assigning one or more authorizations for validating business process , selecting one or more fields and field types for displaying on the user interface, assigning field actions for the fields, assigning visibility statuses for the actions, assigning validity statuses and accessibility options, and the like. The fields and field types that are configured to accept user input may include a drop down menu, a checkbox, a text box, a value set, a hyper link, and the like. The user input to these fields may include selecting an option from a list of options in a drop down menu, making a selection in a checkbox, entering alpha-numeric input in a text box, clicking on a hyper link, and the like. In an embodiment, a field type may include a multiple-field table. A multiple-field table may be described as a table that includes a set of rows for different instances of the application types and corresponding sub-application types.","In an embodiment, the user input  and the user actions are stored as transaction data in the database . The database  is updated with the transaction data based upon the execution of the business process . The transaction data may be tracked at specific instances of the business process  to provide specific status updates at the respective instances. In an embodiment, the customized business process  may be invoked to update the corresponding transaction data in the database .","User input  to customized business process  is validated to configure customized business process . The validation of user input  to customized business process  is determined by comparing user input  with business logic  of business process . Based upon a result of this comparison, user input  to customized business process  is validated. The result of comparison may be described as the information discovered during the process, including a successful-comparison result if user input  to customized business process  matches the details in business logic  and an error message if the user input to customized business process  does not match the details in business logic .","In an embodiment, the error message may originate due to an invalid user selection, an invalid user input to the attribute, an invalid file attached with the user input, or the like. The validity of the user actions may be determined based upon business logic . In response to such error messages, error-correction information is generated based upon business process . The metadata of business process  is use to determine the error messages and to generate the error-correction information. In an embodiment, the error messages are displayed on the user interface based upon a role of the user. Each user has an associated role that allows the user to perform certain operations on the business process . For instance, an error-correction related to a \u2018remuneration of an employee\u2019 may be displayed only to a user with a role of a \u2018manager\u2019 and may not be available to a user with a role of a \u2018team member\u2019. A \u2018user X\u2019 may be assigned a role of an approver that allows the \u2018user X\u2019 to approve certain requests on the business process. A \u2018user Y\u2019 may be assigned a role of an employee that allows the \u2018user Y\u2019 to request certain requests on the business process.","Each user may also be associated with a set of user actions for the customized business process , and based upon the validation of the user input, such user actions are sent to the user for execution. For instance, a user with a role of a \u2018manager\u2019 may have an \u2018edit\u2019 action available to perform on customized business process , and a user with a role of a \u2018team member\u2019 may have a \u2018display\u2019 action available to perform on customized business process . The user with the role of a \u2018manager\u2019 may validate user input  to customized business object  based upon the error message by performing an \u2018edit\u2019 on customized business process . In another embodiment, the configurable attributes  are configured to send an alert to the user to perform the associated user action. The alert may be a generated at regular intervals to remind the user for performing the action. The alert may be periodic, appearing in the user's mail-box on a specific day. The alert may also be associated with a validity period before which the action specified by the alert has to be performed. Some of the many user actions include an approval user action, a rejection user action, a modification user action, a validation user action, an invalidation user action and the like.","Based upon the error-correction information, configurable attributes  may be reconfigured to customize the business process . User input  to customized business process  is validated by comparing user input  to business logic . Customized business process  is further executed in the business process framework . In an embodiment, customized business process  is invoked to update the corresponding transaction data in the database .","In an embodiment, business logic  is configured to define generic application definitions and associated generic application types and generic sub-application types. Business logic  is also configured to define dynamic screen rendering fields, associated generic application screen rendering fields, a set of values for the dynamic screen rendering fields and the associated generic application screen rendering fields. The generic elements listed above are a part of a generic application server that stores the user inputs, user selection, retrieved application types, sub-application types, generated configurable attributes and the like. The generic application server may include a generic table that stores all properties related to the generic elements. The generic application server is also responsible for maintaining a group of available business processes and the associated solution types for the available business process. The generic application server may also include metadata of the business processes and the associated solution types.","Generic application definition may be described as a generic element associated with the generic application server that stores a list of all available solution types and their association with one or more respective business processes. Once a user chooses a solution type related to a business process, a generic table in the generic element server is created and updated with the solution type. Generic application types and corresponding generic sub-application types may be described as the generic elements that store in the generic table, a list of all available application types, corresponding sub-application types, their hierarchy, their levels of priorities, alert information, and all other details associated with the application types and corresponding sub-application types. When a query is invoked to retrieve a set of application types and corresponding set of sub-application types based upon a solution type selected by a user, the generic table for the respective business process and the selected solution type is identified. Based upon the generic application types and corresponding generic sub-application types available in the table, the application types and corresponding sub-application types associated with the selected solution types are retrieved on the user interface.","Dynamic screen rendering fields may be described as a set of data fields that are invoked to be displayed in the user interface, based upon certain tasks performed by the user on the user interface. For instance, to display a set of solution types for a specific business process, the generic table in the generic application server is invoked. Based upon the generic application definition available for the specific business process, a dynamic screen is created on the user interface including the dynamic screen rendering fields containing a list of solution types and associated options of selecting the solution types.","Generic application screen rendering fields may be described as a set of data fields that are associated with the set of available generic application types and the corresponding generic application types available for the solution types of a specific business process. Based upon application types and corresponding sub-application types that are invoked by the query, the generic screen rendering fields that are associated with the application types and the sub-application types are also invoked. These generic application screen rendering fields containing the application types and the sub-application types are displayed on the user interface. The generic application screen rendering fields include one or more values that may be assigned to the application types and the corresponding sub-application types by the user. These values indicate the user's input to the application types and the corresponding sub-application types.","The generic application server is also responsible for maintaining a set of generic configurable attributes for all the application types and corresponding sub-application types for the selected solution type. Based upon the retrieved application types and the corresponding sub-application types, the configurable attributes are generated by extracting one or more relevant configurable attributes from the generic table present in the generic application server. Based upon the user inputs to the application types and corresponding sub application types, the configurable attributes are configured. Metadata required for this configuration information is also stored in the generic application table.","The generic table stored in the generic application server maintains the generic tasks and generic authorizations that are available for each business processes. Generic fields and corresponding generic field types define the fields and the field-types that may be displayed on the screen. For instance, for an application type \u2018illness leave\u2019, a generic field \u2018Illness Leave\u2019 is displayed on the user interface along with a drop-down field type, showing a list of available illness leaves in the drop-down list. There may be a generic field-action associated with the generic field and the generic field type. This generic field-action allows a user to perform an action on the generic field type. For instance, if the generic field type was a check-box, the associated generic field-action allows a user to put a \u2018check\u2019 in the respective field. The available generic fields, generic field types and generic field-actions for the business process are stored in the generic table.","The generic table also maintains generic validity statuses, generic visibility statuses and generic accessibilities that can be used during configuring the configurable attributes. Generic validity statuses represents the available validity statuses that can be assigned to the configurable attributes, such as \u2018in process\u2019, \u2018processed\u2019 \u2018awaiting approval\u2019 \u2018approved\u2019 and the like. The generic visibility statuses represent the visibility statuses that can be assigned to the configurable attributes with reference to a role of the user. For instance, for a user with a role of a \u2018manager\u2019, the visibility status may be to \u2018read and write\u2019, and for a user with a role of a \u2018team member\u2019, the visibility status may be to \u2018read only\u2019. Similarly, the generic accessibilities represent the accessibility options for particular information based upon the role of the user. For instance, a user with a role of a \u2018manager\u2019 is allowed to \u2018read and write\u2019 the remuneration information for each \u2018team member\u2019. All these information stored in the generic table of the generic application server are stored as metadata in the business logic associated with the business process.","An example for executing a customized business process of \u2018reimbursement\u2019 is described herein. The business process of \u2018reimbursement\u2019 has the associated metadata stored in business logic. Solution types associated with \u2018reimbursement\u2019 are retrieved from business logic. Solution types may include \u2018reimbursement of travel expenses\u2019, \u2018reimbursement of medical expenses\u2019, and \u2018reimbursement of education expenses\u2019. A user selection of a solution type, \u2018reimbursement of travel expenses\u2019 is selected from the user interface. Based upon \u2018reimbursement of travel expenses\u2019, configuration module  executes a query in database to retrieve a set of associated applications \u2018travel for training\u2019, \u2018business development travel\u2019, and \u2018home-leave travel\u2019, along with corresponding sub-application types \u2018length of stay\u2019, \u2018proof of expenses\u2014bills\u2019, \u2018cash payments\u2019, \u2018credit-card payments\u2019, and \u2018required approvers\u2019. Each of the application types and sub-application types may accept different types of inputs. For instance, sub-application type \u2018length of stay\u2019 may accept a user input of number of days only.","Based upon the application types and sub-application types, configuration module  generates configurable attributes \u2018number of days\u2019, \u2018attachments of bills\u2019, \u2018credit-card statements\u2019, \u2018approvals\u2019 and the like. Thus the business process of \u2018reimbursement\u2019 is customized to \u2018reimbursement of travel expenses\u2019 along with the associated application types, corresponding sub-application types and the configurable attributes. The user may choose to provide a user input of selecting \u2018business development travel\u2019 and attaching a \u2018bill for team dinner\u2019 to \u2018proof of expenses\u2014bills\u2019; select a radio-button option for \u2018cash payments\u2019; and select \u2018manager\u2019 from a drop-down menu providing a list of approvers for \u2018required approver\u2019. The user input is assigned to the customized business process. For instance, \u2018attachments of bills\u2019 is assigned \u2018bill for team dinner\u2019 along with a copy of the bill; and \u2018manager approval is assigned\u2019 \u2018manager approval\u2019.","The customized business process  of \u2018reimbursement of travel\u2019 for \u2018business development\u2019 along with \u2018bill for team dinner\u2019 that was paid by cash and requires \u2018manager approval\u2019 for reimbursement is created. This user input to the customized business process is validated by comparing it with business logic  that stores the metadata of the actual business process . Based upon a result of comparison, the process of getting a \u2018reimbursement of travel\u2019 is executed in business process framework .","An error message that may occur in such a process may be due to a mismatch between the user input to customized business process  and business logic . For instance, according to business logic  for business process , attachments of the type \u2018.pdf\u2019 (portable document format of Adobe Systems\u00ae) is the only attachment type that is accepted. If the user has attached files of any other file type, an error message is generated during validation.","Configuration module  also generates an error-correction information for such error messages based upon business logic . For instance, an error-correction message \u2018invalid attachment-file type\u2019 may appear on the user interface. Once the user changes the file type of the attachment, the attributes are reconfigured and customized business process  is validated and executed in business process framework . A \u2018manager\u2019 of the user may get an alert to approve such a reimbursement request, and based upon his approval, the customized business process  is sent to a finance department to make a reimbursement.","Another example for executing a customized business process of \u2018income tax declaration\u2019 is described herein. The business process  of \u2018income tax declaration\u2019 has the associated metadata stored in business logic . Solution types  associated with \u2018income tax declaration\u2019 are retrieved from business logic . Solution types  may include \u2018income tax declaration for Japan\u2019, \u2018income tax declaration for India\u2019, and \u2018income tax declaration for France\u2019. A user selection of a solution type, \u2018income tax declaration for India\u2019 is selected from the user interface. Based upon \u2018income tax declaration for India\u2019, configuration module  executes a query in database  to retrieve a set of associated applications  along with corresponding sub-application types  as shown in \u2018table 1\u2019. Each of the application types and sub-application types may accept different types of inputs, as shown in \u2018table 1\u2019. Based upon the application types and sub-application types, configuration module  generates configurable attributes  shown in \u2018table 1\u2019.",{"@attributes":{"id":"p-0052","num":"0051"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"140pt","align":"center"}}],"thead":{"row":{"entry":"TABLE 1"}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["Application","Corresponding sub-","Configurable attributes"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"63pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["types","application types","Type of attribute","Type of Input"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}},{"entry":["Housing","House rent","1. Rent agreement","1. Attachment (.pdf)"]},{"entry":["allowance","allowance","2. Rent receipt","2. Attachment (.pdf)"]},{"entry":[{},{},"3. Amount paid","3. Numeric"]},{"entry":["Deductions","1. Medical insurance","1. Medical bills","1. Attachment (.pdf)"]},{"entry":["under","2. Life insurance","2. Amount paid for","2. Numeric"]},{"entry":["government","3. Government","medicines","3. Drop-down menu"]},{"entry":["saving schemes","provident funds","3. Dependant status","(Mother\/Father\/Self\/"]},{"entry":[{},{},"4. Insurance payment","Spouse\/Children)"]},{"entry":[{},{},"proof","4. Attachment (.pdf)"]},{"entry":[{},{},"5. Amount of insurance","5. Numeric"]},{"entry":[{},{},"6. Provident fund proof","6. Attachment (.pdf)"]},{"entry":[{},{},"7. Amount paid","7. Numeric"]},{"entry":["Travel","Leave travel","1. Travel details","1 . Alpha-numeric"]},{"entry":["allowance","allowance","2. Travel proof","2. Attachment (.pdf)"]},{"entry":[{},"Conveyance","3. Travel expense","3. Numeric"]},{"entry":[{},"allowance"]},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"Based upon the selected solution type , associated application types , corresponding sub-application types  and configurable attributes , business process  is customized to create customized business process . The user input  to customized business process  is captured. The user may choose to provide a user input of selecting an application type \u2018deductions under government saving schemes\u2019 and attaching a \u2018medical bill\u2019 (of .pdf type) for sub-application type \u2018medical insurance\u2019 along with an amount of bill \u2018INR 2500\u2019 (numeric) and a \u2018self\u2019 (selected from a drop-down menu) status for whom the medicines were purchased. Based upon the user inputs, the customized business process is configured. For instance, \u2018medical insurance\u2019 is assigned \u2018medical bill\u2019 along with the amount \u2018INR 2500\u2019 and \u2018self\u2019 status. The customized business process  of \u2018income tax declaration\u2019 for \u2018India\u2019 along with \u2018medical bill\u2019 of an amount \u2018INR 2500\u2019 for \u2018self\u2019 is created. The user input to the customized business process is validated by comparing it with business logic  that stores the metadata of the actual business process . Based upon a result of comparison, the process of \u2018income tax declaration\u2019 is executed in business process framework .","An error message that may occur in such a process may be due to a mismatch between customized business process  and business logic . For instance, according to business logic  for business process , the amount for medical allowance according to \u2018income tax declaration in India\u2019 is only \u2018INR 2000\u2019. Since the user has declared \u2018INR 2500\u2019, an error message is generated during validation. Configuration module  also generates an error-correction information for such error messages based upon business logic . For instance, an error-correction message \u2018medical allowance limit is INR 2000\u2019 may appear on the user interface. Once the user changes the amount and the corresponding attachments, the attributes are reconfigured and the business process of \u2018income tax declaration\u2019 is customized. Customized business process  is validated and executed in business process framework .",{"@attributes":{"id":"p-0055","num":"0054"},"figref":"FIG. 2A","b":["205","210","215","220"]},{"@attributes":{"id":"p-0056","num":"0055"},"figref":["FIG. 2B","FIG. 2A"],"b":["225","230","235"]},{"@attributes":{"id":"p-0057","num":"0056"},"figref":["FIG. 3","FIG. 2A"],"b":["305","205","220","310","310","315","320","325","325","310"]},"If the result of comparison does not generate errors at decision block , the process proceeds to process block  where the customized business process is executed in the business process framework.",{"@attributes":{"id":"p-0059","num":"0058"},"figref":["FIG. 4","FIG. 2A"],"b":["405","205","220","410","410","415"]},"In process block , the result of the comparison is displayed on the user interface. In process block , a user action is received for the result of comparison. The user action may include an approval of the result of comparison, a rejection of the result of comparison and a subsequent correction in the application types, the corresponding sub-application types or the configured configurable attributes, a modification in the configured configurable attributes, a validation action or an invalidation action. Based upon the user action, the user input to the customized business process that is validated to configure the business process framework is further executed in the business process framework at process block . In an embodiment, based upon the user action received at process block , the user input to the customized business process may be re-validated and further executed. In an embodiment, an invalidation action may lead to a deletion of one or more configured configurable attributes. Based upon such a deletion, the customized business process may be re-validated and executed.",{"@attributes":{"id":"p-0061","num":"0060"},"figref":"FIG. 5","b":["500","505","510","515","520","525","530","535","505","510","530","535","510","525","515","525","530","535","515","530","535","515","515"]},"In an embodiment, user interface device  is configured to receive a user selection of a solution type associated with a business process. The business process includes an arrangement of a collection of inter-dependent actions with a purpose of achieving an intended result. Metadata of such business processes is stored in database . The metadata of the business process includes a set of solution types, a set of associated application types and a set of corresponding sub-application types. The metadata also includes a set of configurable attributes associated with the application types and the corresponding sub-application types. The metadata may also include many other details about the business process. A business process framework may be described as an adaptable collection of objects for an associated business process, which is responsible for configuring, monitoring and executing the business process. Business logic  includes a set of functional rules associated with the business process based upon which the metadata of the business process is exchanged between database  and user interface device . Business logic  includes details about the application types and corresponding sub-application types that are associated with the selected solution types. Business logic  is stored in database .","In an embodiment, business process module  is configured to execute a query in database  in response to the user selection. Based upon the query, business process module  retrieves one or more applications and corresponding one or more sub-application types from business logic  stored in database . Based upon these details, business process module  retrieves the application types and the corresponding sub-application types that are associated with the selected solution type.","In an embodiment, function module  is configured to generate configurable attributes for the solution type, based upon the application types and the corresponding sub-application types. A function module may be described as an interface for communicating between a server system and a client system. Function module  works as an interface between business logic  in database  and user interface device , where business logic  acts as a server system and user interface device  acts as a client system. Function module  facilitates business process module  to use the data present in business logic  for business transactions. In an embodiment, function module  calls a remote function call (RFC) to run an associated business process for user interface device  based upon a function-call from business logic . Function module  is used as an interface between business process module  and business logic , configuration module  and business logic , and validation module  and business logic . Based upon the application types and the corresponding sub-application types retrieved by business process module , function module  calls the remote function call to generate configurable attributes for the solution type. Configuration module  is configured to customize the business process based upon the selected solution type, the application types, the corresponding sub-application types and the configurable attributes.","Function module  is also configured to capture a user input for the customized business process from user interface device  based upon a configuration information associated with the configurable attributes. The user input may include a selection of a set of required configurable attributes from the generated set of configurable attributes.","In an embodiment, function module  configures the configurable attributes by configuring a set of tasks that have to be performed on the applications and corresponding sub-applications, authorizations for validating the customized business processes, maintaining fields and field-types for displaying on the user interface, and maintaining field actions for the fields, visibility statuses, validity statuses and accessibility options.","In an embodiment, validation module  is configured to validate the user input to the customized business process by comparing the user input to the customized business process with the business logic. The contents of the user input to the customized business process may be compared with the contents of the business process associated by business logic , and based upon a result of comparison, the customized business process is validated. Based upon this validation, the business process framework is configured by configuration module .","The user input and the user actions are stored as transaction data in database . Data management module  depicts the transaction of data between business process module , function module , configuration module  and validation module . Database  is updated with the transaction data based upon the execution of the business process. The transaction data may be tracked at specific instances of the business process in data management module , to provide specific status updates at the respective instances. In an embodiment, the customized business process may be invoked to update the transaction data in database .","In another embodiment, the result of the comparison is displayed on a user interface using user interface device . A user action may be received for the result of comparison on the user interface. This user action may include an approval of the result of comparison, a rejection of the result of comparison along with a subsequent correction, a modification in the configured configurable attributes, a validation action or an invalidation action. User interface device  communicates the user action through function module  to business logic . Based upon an associated system action corresponding to the user action, the customized business process that is validated to configure the business process framework is further executed in the business process framework.","In another embodiment, the result of comparison may generate an error message. The error message may be generated due to a mismatch in the information contained in the business process and the information contained in the user input to the customized business process. Based upon an error message generation, validation module  calls the remote function call to retrieve an error-correction information from business logic . Based upon the error-correction information, the configurable attributes may be reconfigured by configuration module . Based upon the reconfigured configurable attributes, the business process is customized by configuration module . Validation module  validates the user input to the customized business process to configure the business framework.","Some embodiments may include the above-described methods being written as one or more software components. These components, and the functionality associated with each, may be used by client, server, distributed, or peer computer systems. These components may be written in a computer language corresponding to one or more programming languages such as, functional, declarative, procedural, object-oriented, lower level languages and the like. They may be linked to other components via various application programming interfaces and then compiled into one complete application for a server or a client. Alternatively, the components maybe implemented in server and client applications. Further, these components may be linked together via various distributed programming protocols. Some example embodiments may include remote procedure calls being used to implement one or more of these components across a distributed programming environment. For example, a logic level may reside on a first computer system that is remotely located from a second computer system containing an interface level (e.g., a graphical user interface). These first and second computer systems can be configured in a server-client, peer-to-peer, or some other configuration. The clients can vary in complexity from mobile and handheld devices, to thin clients and on to thick clients or even other servers.","The above-illustrated software components are tangibly stored on a computer readable storage medium as instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include a single medium or multiple media that stores one or more sets of instructions. The term \u201ccomputer readable storage medium\u201d should be taken to include any physical article that is capable of undergoing a set of physical changes to physically store, encode, or otherwise carry a set of instructions for execution by a computer system which causes the computer system to perform any of the methods or process steps described, represented, or illustrated herein. A computer readable storage medium may be a non-transitory computer readable storage medium. Examples of a non-transitory computer readable storage media include, but are not limited to: magnetic media, such as hard disks, floppy disks, and magnetic tape; optical media such as CD-ROMs, DVDs and holographic devices; magneto-optical media; and hardware devices that are specially configured to store and execute, such as application-specific integrated circuits (\u201cASICs\u201d), programmable logic devices (\u201cPLDs\u201d) and ROM and RAM devices. Examples of computer readable instructions include machine code, such as produced by a compiler, and files containing higher-level code that are executed by a computer using an interpreter. For example, an embodiment may be implemented using Java, C++, or other object-oriented programming language and development tools. Another embodiment may be implemented in hard-wired circuitry in place of, or in combination with machine readable software instructions.",{"@attributes":{"id":"p-0073","num":"0072"},"figref":"FIG. 6","b":["600","600","605","655","605","600","640","655","610","615","610","615","615","610","615","615","605","615","600","625","630","600","625","630","600","635","600","650","650","600","645","600","620","660","660","660","650","660"]},"A data source is an information resource. Data sources include sources of data that enable data storage and retrieval. Data sources may include databases, such as, relational, transaction, hierarchical, multi-dimensional (e.g., OLAP), object oriented databases, and the like. Further data sources include tabular data (e.g., spreadsheets, delimited text files), data tagged with a markup language (e.g., XML data), transaction data, unstructured data (e.g., text files, screen scrapings), hierarchical data (e.g. data in a file system, XML data), files, a plurality of reports, and any other data source accessible through an established protocol, such as, Open Data Base Connectivity (ODBC), produced by an underlying software system (e.g., ERP system), and the like. Data sources may also include a data source where the data is not tangibly stored or otherwise ephemeral such as data streams, broadcast data, and the like. These data sources can include associated data foundations, semantic layers, management systems, security systems and so on.","In the above description, numerous specific details are set forth to provide a thorough understanding of embodiments. One skilled in the relevant art will recognize, however that the embodiments can be practiced without one or more of the specific details or with other methods, components, techniques, etc. In other instances, well-known operations or structures are not shown or described in detail.","Although the processes illustrated and described herein include series of steps, it will be appreciated that the different embodiments are not limited by the illustrated ordering of steps, as some steps may occur in different orders, some concurrently with other steps apart from that shown and described herein. In addition, not all illustrated steps may be required to implement a methodology in accordance with the one or more embodiments. Moreover, it will be appreciated that the processes may be implemented in association with the apparatus and systems illustrated and described herein as well as in association with other systems not illustrated.","The above descriptions and illustrations of embodiments, including what is described in the Abstract, is not intended to be exhaustive or to limit the one or more embodiments to the precise forms disclosed. While specific embodiments of, and examples for, the one or more embodiments are described herein for illustrative purposes, various equivalent modifications are possible within the scope, as those skilled in the relevant art will recognize. These modifications can be made in light of the above detailed description. Rather, the scope is to be determined by the following claims, which are to be interpreted in accordance with established doctrines of claim construction."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The claims set forth the embodiments with particularity. The embodiments are illustrated by way of examples and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. The embodiments, together with its advantages, may be best understood from the following detailed description taken in conjunction with the accompanying drawings.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
