---
title: System and method for designing a free form reflector using genetic algorithm
abstract: A system for designing a free form reflector includes a user input interface (), a free form reflector design unit (), and a free form reflector output unit (). The user input interface is configured for receiving various data associated with a desired free form reflector, via an input device. The free form reflector design unit is installed in a computer and configured for generating an optimum free form surface according to the input data by performing a non-uniform rational basis splines (NURBS) algorithm, a merit evaluation function, and a differential evolution (DE) algorithm. The free form reflector output module is configured for generating a free form reflector according to the optimum free form surface and outputting the free form reflector, in the form of a computer-aided design (CAD) drawing, to a display and/or a printer. A related method is also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07747550&OS=07747550&RS=07747550
owner: Hon Hai Precision Industry Co., Ltd.
number: 07747550
owner_city: Tu-Cheng, Taipei Hsien
owner_country: TW
publication_date: 20061026
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["1. Field of the Invention","The present invention generally relates to systems and methods for designing reflectors and, more particularly, to a system and method for designing a free form reflector.","2. Description of Related Art","Non-imaging reflectors are widely used in illumination and solar energy systems. In these applications, a non-imaging reflector is designed to convert the Lambertian source into a beam with a divergence of half-angle \u03b8 without loss of throughput. One direct design approach is to using algebraic methods, among which a tailored edge ray approach has made a great success. In this approach, a two-dimensional (2D) reflector is determined by reflector equations that are deduced from an edge-ray method and conservation of energy. For a three dimensional (3D) reflector design, it is common to solve the problem by reducing three dimensions to two dimensions. Thus, a 3D reflector can be generated by means of rotational or translational symmetry. The second approach is indirect, and it uses optimization-based design techniques. The analytic knowledge of the connection between the reflector structure and optical performance is not needed. Free form surfaces, such as a B\u00e9zier surface and a non-uniform rational basis splines (NURBS) surface, are appropriate to represent the shape of a reflector in these automated design approaches.","A genetic algorithm has been proven to be valuable both in imaging and non-imaging optics since Holland laid down the basic principles of genetic algorithms. A differential evolution (DE) is a variation of the genetic algorithm proposed by R. Storn and K. Price. The DE stood out in the first IEEE conference on evolutionary computation, and then it was widely applied in various fields. Compared with standard the genetic algorithm, the DE uses floating point variables. In addition, the crossover and mutation implementations are more complex. The NURBS is a powerful technique for constructing general curves and surfaces. It has many good properties, for example, the order of the surface is independent of the number of control points. Local changes to the surface shape are possible because individual control points have only local influences. The algorithm combines the global search capability of the DE with the flexibility of the shape adjustment of free form surface, which has been used in the second approach of reflector design. S. Doyle used cubic B\u00e9zier curve to represent the profile of a reflector, and thus a paraboloid and ellipse reflector can be obtained by using his algorithm.","For the design of a non-imaging reflector, what is needed is a system and method for designing a free form reflector that performs an automated free form reflector generation, which can be applied for the design of more general reflectors.","A preferred embodiment of a system for designing a free form reflector, in accordance with a preferred embodiment, includes a user input interface, a free form reflector design unit, and a free form reflector output unit. The user input interface is configured for receiving various data associated with a desired free form reflector from an input device. The free form reflector design unit is installed in a computer and configured for generating an optimum free form surface, according to the input data by performing a non-uniform rational basis splines (NURBS) algorithm, a merit evaluation function, and a differential evolution (DE) algorithm. The free form reflector output module is configured for generating a free form reflector according to the optimum free form surface and for outputting a free form reflector in the form of a computer-aided design (CAD) drawing to a display and\/or a printer.","The free form reflector design unit includes: an NURBS algorithm generating module configured for generating an NURBS algorithm, according to data received by the user input interface, and for describing a free form surface by performing the NURBS algorithm; an merit evaluation function constructing module configured for constructing a merit evaluation function in order to calculate the difference between a desired illuminance distribution and a current distribution generated by a receiver; an DE algorithm generating module configured for generating an DE algorithm to facilitate a calculation of an optimum free form surface; and a free form surface building module configured for building an optimum free form surface according to the NURBS algorithm, the merit evaluation function, and the DE algorithm.","Another preferred embodiment provides a computerized method for designing a free form reflector by utilizing the above system. The method includes the steps of: (a) receiving various data associated with a desired free form reflector; (b) generating an NURBS algorithm for describing a free form surface by performing the NURBS algorithm; (c) constructing a merit evaluation function for calculating the difference between a desired illuminance distribution and a current illuminance distribution generated by a receiver; (d) generating an DE algorithm to facilitate a calculation of an optimum free form surface; (e) building an optimum free form surface according to the NURBS algorithm, the merit evaluation function, and the DE algorithm; and (f) generating and outputting a free form reflector according to the optimum free form surface.","A reflector profile of the present system is represented by a cubic NURBS curve. The coordinates of control points are used as variables, and a merit function specific to non-imaging reflector design is presented. The DE is performed to generate the reflector. Comparing with S. Doyle's method, the present system and method uses the NURBS curve representation of a reflector profile and directly uses an illuminance value to calculate merit function value, so as to be more effective and robust.","Other advantages and novel features of the embodiments will be drawn from the following detailed description with reference to the attached drawings.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 1","b":["1","2","3"]},"The user input interface  is configured for receiving various data associated with a desired free form reflector input by a user from an input device (e.g., a keyboard). The data typically include desired dimensions, desired illuminance distributions, and searching limits of the free form reflector.","The free form reflector design unit  installed in a computer is configured for generating an optimum free form surface according to the input data by performing a non-uniform rational basis splines (NURBS) algorithm, a merit evaluation function, and a differential evolution (DE) algorithm. The free form reflector design unit  includes an NURBS algorithm generating module , a merit evaluation function constructing module , an DE algorithm generating module , and a free form surface building module .","The NURBS algorithm generating module  is configured for generating a non-uniform rational basis splines (NURBS) algorithm according to the data received by the user input interface , and for describing a free form surface by performing the NURBS algorithm. The NURBS has become an industry standard for the representation, design, and data exchange of geometric information processed by computers. The excellent mathematical and algorithmic properties, combined with successful industrial applications, have contributed to the enormous popularity of the NURBS. The mathematical expression of a NURBS curve is described as the first equation:",{"@attributes":{"id":"p-0035","num":"0034"},"maths":[{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mover":{"mi":"C","mo":"\u2192"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"u"}},"mo":"=","mfrac":{"mrow":[{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"0"},"mi":"n"},"mo":"\u2062","mrow":{"mrow":{"msub":{"mi":"N","mrow":{"mi":["i","p"],"mo":","}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"u"}},"mo":["\u2062","\u2062"],"msub":[{"mi":["w","i"]},{"mover":{"mi":"P","mo":"\u2192"},"mi":"i"}]}},{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"0"},"mi":"n"},"mo":"\u2062","mrow":{"mrow":{"msub":{"mi":"N","mrow":{"mi":["i","p"],"mo":","}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"u"}},"mo":"\u2062","msub":{"mi":["w","i"]}}}]}}}},{"@attributes":{"id":"MATH-US-00001-2","num":"00001.2"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mn":["0","1."],"mo":["\u2264","\u2264"],"mi":"u"}}}],"br":{},"sub":["i,p","i ","i "]},"The merit evaluation function constructing module  is configured for constructing a merit evaluation function in order to calculate the difference between the desired illuminance distribution and a current distribution generated by a current reflector. In the preferred embodiment, a receiver is divided to m\u00d7n mesh. The illuminance value of each bin is calculated when the merit evaluation function is defined as the second equation:",{"@attributes":{"id":"p-0037","num":"0036"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"F","mo":"=","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"i","mo":"=","mn":"1"},"mi":"m"},"mo":"\u2062","mrow":{"munderover":{"mo":"\u2211","mrow":{"mi":"j","mo":"=","mn":"1"},"mi":"n"},"mo":"\u2062","mrow":{"msup":{"mrow":{"msub":{"mi":["W","ij"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["E","ij"]},"mo":"-","msubsup":{"mi":["E","ij","\u2032"]}}}},"mn":"2"},"mo":"."}}}}}},"br":{},"sub":["ij ","ij ","ij","ij","0 "]},"The DE algorithm generating module  is configured for generating a differential evolution (DE) algorithm to facilitate a calculation of an optimum free form surface. With the merit evaluation function defined and the coordinates of the control points of a reflector profile used as variables, the DE algorithm is performed to determine the reflector shape\/contour that generates the desired illuminance distribution. Referring to the string of the numbers that characterize the reflector profile as being a chromosome and the numbers that compose the chromosome, i.e., the NURBS curve controls the point coordinates and weights, in a manner similar to genes. The DE algorithm performs the steps as follows.","Step (i), initializing population generation: randomly generating genes of an initial chromosome in a population between maximum and minimum values therefore, according to the following equation: X(0)=(X(0), X(0), . . . , X(0)). In this equation, the iterative counter t=0; the initial population is X(0); N is the population size; and X(0) is an optimum chromosome in the initial population.","Step (ii), mutation implementation: calculating a iparent chromosome, according to the third equation:",{"@attributes":{"id":"p-0041","num":"0040"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mtable":{"mtr":[{"mtd":{"mrow":{"mrow":[{"msub":{"mi":["V","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}},{"mrow":[{"msub":{"mi":["X","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}},{"mi":"\u03bb","mo":"\u2061","mrow":{"mo":["[","]"],"mrow":{"mrow":[{"msub":{"mi":["X","best"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}},{"msub":{"mi":["X","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}}],"mo":"-"}}},{"mi":"\u03b2","mo":"\u2061","mrow":{"mo":["[","]"],"mrow":{"mrow":[{"msub":{"mi":"X","mrow":{"mi":"r","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"2"}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}},{"msub":{"mi":"X","mrow":{"mi":"r","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mn":"1"}},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}}],"mo":"-"}}}],"mo":["+","+"]}],"mo":"="}}},{"mtd":{"mrow":{"mo":"=","msup":{"mrow":{"mo":["(",")"],"mrow":{"msub":[{"mover":{"mi":["V","_"]},"mn":"1"},{"mover":{"mi":["V","_"]},"mn":"2"},{"mover":{"mi":["V","_"]},"mi":"j"}],"mo":[",",",","\u2062",",",","],"mi":"\u2026","mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"mrow":{"mi":"\u2026","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}},"msub":{"mover":{"mi":["V","_"]},"mi":"M"}}}},"mi":"T"}}}}]},"mo":[",","\u2062",",",",","\u2062",","],"mstyle":[{"mtext":{}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}],"mrow":[{"mi":"i","mo":"=","mn":"1"},{"mi":"N","mo":"."}],"mn":"2","mi":"\u2026"}}},"br":{},"b":["1","2"],"o":"V","sub":"j ","sup":["th ","th "]},"Step (iii), crossover implementation: it is supposed that the ichild chromosome is U(t), which is calculated according to the following equation: U(t)=(\u016b, \u016b, . . . , \u016b), i=1, 2, . . . , N. The jgene in the ichild chromosome is obtained by utilizing the fourth equation:",{"@attributes":{"id":"p-0043","num":"0042"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msub":{"mover":{"mi":["u","_"]},"mi":"j"},"mo":"=","mrow":{"mo":"{","mrow":{"mtable":{"mtr":[{"mtd":[{"mrow":{"msub":{"mover":{"mi":["V","_"]},"mi":"j"},"mo":","}},{"mrow":{"mrow":{"msub":{"mi":["rand","ij"]},"mo":"\u2264","mrow":{"mi":["CR","or","j"],"mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}]}},"mo":"=","msub":{"mi":["Rnd","i"]}}}]},{"mtd":[{"mrow":{"msub":{"mrow":{"mo":["[","]"],"mrow":{"msub":{"mi":["X","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}}},"mi":"j"},"mo":","}},{"mi":"others"}]}]},"mo":[",","\u2062",",",",","\u2062",","],"mstyle":[{"mtext":{}},{"mspace":{"@attributes":{"width":"0.6em","height":"0.6ex"}}}],"mrow":[{"mi":"j","mo":"=","mn":"1"},{"mi":"M","mo":"."}],"mn":"2","mi":"\u2026"}}}}},"br":{},"sub":["ij ","i "]},"Step (iv), selection implementation: calculating a merit evaluation function value of the child chromosome and comparing the merit evaluation function value of the child chromosome with the merit evaluation function value of the initial chromosome. The initial chromosome is replaced with the child chromosome in the population, if the merit evaluation function value of the child chromosome is smaller than the merit evaluation function value of the initial chromosome. This selection implementation step is accomplished according to the fifth equation:",{"@attributes":{"id":"p-0045","num":"0044"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"msub":{"mi":["X","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"mi":"t","mo":"+","mn":"1"}}},{"mo":"{","mrow":{"mtable":{"mtr":[{"mtd":[{"mrow":{"msub":{"mi":["U","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}}},{"mrow":{"mrow":[{"mi":"if","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},"mrow":{"mi":"F","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["U","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}}}}},{"mi":"F","mo":"\u2061","mrow":{"mo":["(",")"],"mrow":{"msub":{"mi":["X","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}}}}],"mo":"<"}}]},{"mtd":[{"mrow":{"msub":{"mi":["X","i"]},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"t"}}},{"mi":"others"}]}]},"mo":","}}],"mo":"="}}},"br":{}},"Step (v), stop verification: the next generation of the population is X(t+1)=(X(t+1), X(t+1), . . . X(t+1)), and the best chromosome in X(t+1) is X(t+1). Step (i) to step (v) are repeated until a desired minimum merit evaluation function value has been achieved or until the evolution has attained the maximum iteration times.","The free form surface building module  is configured for building an optimum free form surface of the reflector, according to the NURBS algorithm, the merit evaluation function, and the DE algorithm.","The free form reflector output module  is configured for generating a free form reflector according to the optimum free form surface and for outputting the free form reflector, in the form of a computer-aided design (CAD) drawing, to a display and\/or a printer.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 2","FIG. 1"],"b":["21","1","22","20","1","23","21","24","22","25","23","26","3"]},"Abundant numerical experiments show that the DE algorithm is an effective global optimization algorithm. Using the DE algorithm combined with the NURBS curve representation, an automated non-imaging reflector design algorithm is proposed. In the next sections, several examples are given to illustrate the validity of the system and method described above.",{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0052","num":"0051"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mo":"{","mrow":{"mtable":{"mtr":[{"mtd":{"mrow":{"mi":"B","mo":"=","mrow":{"mrow":[{"msup":{"mi":"cos","mn":"2"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03b8"}},{"mo":["[","]"],"mrow":{"mrow":{"mi":"tan","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03b8"}},"mo":"+","mn":"1"}}],"mo":"\u2061"}}}},{"mtd":{"mrow":{"mrow":[{"mi":"\u03d5","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03b8"}},{"mi":"\u03b8","mo":"+","mrow":{"mi":"arccos","mo":["\u2062","\u2062"],"mstyle":{"mspace":{"@attributes":{"width":"0.3em","height":"0.3ex"}}},"mfrac":{"mrow":[{"msup":{"mi":"B","mn":"2"},"mo":"-","mn":"1"},{"msup":{"mi":"B","mn":"2"},"mo":"+","mn":"1"}]}}}],"mo":"="}}},{"mtd":{"mrow":{"mrow":{"mi":"R","mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03b8"}},"mo":"=","mfrac":{"mrow":[{"mo":["(",")"],"mrow":{"msup":{"mi":"B","mn":"2"},"mo":"+","mn":"1"}},{"mn":"2","mo":["\u2062","\u2062"],"mrow":{"msup":{"mi":"cos","mn":"2"},"mo":"\u2061","mrow":{"mo":["(",")"],"mi":"\u03b8"}},"mi":"B"}]}}}}]},"mo":",","mrow":{"msub":{"mi":["\u03b8","T"]},"mo":["\u2264","\u2264"],"mi":"\u03b8","mn":"0."}}}}},"br":{},"sub":["T","T ","T","T"]},"The simulation results show that the reflectors generated by R. Winston's algorithm can produce a nearly prefect uniform illuminance distribution on the receiver. Such uniform illuminance distribution could also be obtained by using R. Winston's algorithm. In the preferred embodiment, using an application programming language (such as Visual Basic) and an application programming interface (such as a LightTools API), a program is developed to perform the automated NURBS curve profile reflector design. In order to permit convenient description, the reflector generated by utilizing an edge ray method (ERM) is referred to as an ERM reflector, and the reflector generated by utilizing the program is referred to as a DE reflector.","A first example shows that both the ERM reflector and the DE reflector have uniform illuminance distributions within \u22120.513\u2266\u03b8\u22660.513. Referring to  and , the endpoint coordinates of the reflector profiles are (1, 0) and (2.01, 0.89). In the first example, the ERM reflector is generated by setting \u03b8=\u22120.513 in the sixth set of equations as described above. The ERM reflector profile in YZ plane is obtained as shown in , and the simulation result is shown in . In theory, the length of the ERM reflector and the strip source should be infinite. In the simulation, the ERM reflector and the source length are 300 mm. The limited length alters the desired irradiance distribution, thus, from , it can be seen that the uniform illuminance distribution zone is not a rectangle but a barrel shape, and the illuminance value is a little bit below the theoretical value of 50 lux. The receiver is divided into 39\u00d739 bins.","The reflector profile is represented by a cubic NURBS curve, and four control points are used to define the cubic NURBS curve. The coordinates and weights of the middle two control points are assumed as variables, so there are six variables altogether. If the endpoint coordinates of the NURBS curve coincide with those of the ERM reflector profile endpoint, then the sizes of the DE reflector and the ERM reflector are nearly the same. The coordinates of the NURBS curve endpoints in YZ plane are set to (0, 1) and (0.89, 2.01), respectively. The weights of head and the tail control points are all set to \u201c1\u201d. In order to generate a reasonable reflector profile, the lower limit and the upper limit of the Y control point coordinates are respectively set to \u201c1\u201d and \u201c3\u201d, and the lower limit and the upper limit of the Z control point coordinate are set to \u201c0\u201d and \u201c0.89\u201d, respectively. Our objective is to obtain a uniform illuminance distribution on the receiver within \u22120.513\u2266\u03b8\u22660.513 which corresponds to a 112\u00d7300 mm rectangle zone on the receiver 100 mm away. For optimization, a 112\u00d7300 mm rectangle receiver is set up and is divided into 10\u00d710 bins. The illuminance value of each bin is calculated by LightTools through tracing 10,000 rays and is used in the second equation to calculate the merit evaluation function value. In this example, all the E\u2032 in the second equation are set to 50 lux and all the Ware set to \u201c0.0004\u201d. The optimization parameters and the source and the receiver parameters are given in Table 1 as follows.",{"@attributes":{"id":"p-0056","num":"0055"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"center"}}],"thead":{"row":[{"entry":"TABLE 1"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Source and receiver parameters","DE parameters"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Source height","2","mm","Variable number","M = 6"]},{"entry":["Source length","300","mm","Population size","N = 30"]},{"entry":["Reflector length","300","mm","Desired illuminance","50 Lux"]},{"entry":[{},{},{},"value"]},{"entry":["Receiver distance","100","mm","Receiver bin weights","1\/50"]},{"entry":["Receiver size","112 \u00d7 300","mm","Mutation parameters","\u03bb = 0.55,"]},{"entry":[{},{},{},{},"\u03b2 = 0.6"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Receiver bin","10 \u00d7 10","Crossover probability","CR = 0.5"]},{"entry":"number"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"The DE reflector is obtained after fifty iterations, and the DE reflector profile in YZ plane is shown in . This optimization process costs about four hours of computing time on a computer with Pentium 2.4 GHz CPU and 2 Gbytes RAM. Both the ERM reflector and the DE reflector superficially resemble a V trough. The subtle differences between these two reflectors (the ERM reflector and the DE reflector) and a true V trough are depicted in . After optimization, 1,000,000 rays are traced and a 200\u00d7300 mm rectangle receiver is placed 100 mm away from the source. The simulation result produced by DE reflector is shown in . The receiver is divided into 39\u00d739 bins as in the ERM reflector simulation. Vertical cuts through the center of the illuminance distributions are shown in . It can be seen from the simulation results that the DE reflector can generate almost the same uniform illuminance distribution as that of the ERM reflector in \u22120.513\u2266\u03b8\u22660.513 angle range. The average illuminance difference of these 39 bins is only 3%.","A second example shows that both the ERM reflector and the DE reflector have uniform illuminance distribution within \u22120.733\u2266\u03b8\u22660.733. Referring to  and , the endpoint coordinates of the ERM reflector profiles are (1, 0) and (12.32, 10.98).","In the second example, the ERM reflector is generated by setting \u03b8=\u22120.733 in the set of sixth equation as described above. The source used is the same as in the first example. The endpoint coordinates of the ERM reflector profile are (0, 1), (12.32, 10.98) respectively, and the ERM reflector profile in YZ plane is shown in . The simulation result is shown in . As in the first example, four control points are used to represent the NURBS curve. In order to further test the validity of the present algorithm, only the head control point is fixed with coordinates as (1, 0), and a weight value thereof is assigned as \u201c1\u201d. The other three control points are all variable. The lower limit and upper limit of the Y control point coordinates are set to \u201c1\u201d and \u201c18\u201d, respectively, and the lower limit and the upper limit of the Z control point coordinates are respectively set to \u201c0\u201d and \u201c11\u201d. The control point weight ranges are \u201c0\u201d to \u201c1\u201d. Thus, there are nine variables altogether. The optimization objective is to generate a uniform illuminance distribution on the receiver within \u22120.733\u2266\u03b8\u22660.733 which corresponds to a 180\u00d7300 mm rectangle zone on the receiver from 100 mm away, so a 180\u00d7300 mm rectangle receiver is set up and is divided into 10\u00d710 bins. All the E\u2032 in the second equation are still set to 50 lux and all the Ware set to \u201c0.0004\u201d. The optimization parameters and the source and the receiver parameters are given in Table 2 as follows.",{"@attributes":{"id":"p-0060","num":"0059"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"1","colwidth":"112pt","align":"center"}},{"@attributes":{"colname":"2","colwidth":"105pt","align":"left"}}],"thead":{"row":[{"entry":"TABLE 2"},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}},{"entry":["Source and receiver parameters","DE parameters"]},{"entry":{"@attributes":{"namest":"1","nameend":"2","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"5"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"35pt","align":"right"}},{"@attributes":{"colname":"3","colwidth":"21pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"5","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Source height","2","mm","Variable number","M = 9"]},{"entry":["Source length","300","mm","Population size","N = 36"]},{"entry":["Reflector length","300","mm","Desired illuminance","50 Lux"]},{"entry":[{},{},{},"value"]},{"entry":["Receiver distance","100","mm","Receiver bin weights","1\/50"]},{"entry":["Receiver size","180 \u00d7 300","mm","Mutation parameter","\u03bb = 0.55,"]},{"entry":[{},{},{},{},"\u03b2 = 0.6"]}]}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"4"},"colspec":[{"@attributes":{"colname":"1","colwidth":"56pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"56pt","align":"center"}},{"@attributes":{"colname":"3","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"4","colwidth":"35pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Receiver bin","10 \u00d7 10","Crossover probability","CR = 0.3"]},{"entry":"number"},{"entry":{"@attributes":{"namest":"1","nameend":"4","align":"center","rowsep":"1"}}}]}}]}}},"The DE reflector is obtained after one hundred iterations, and the DE reflector profile is shown in . It costs about eight hours of computing time on a computer with Pentium 2.4 GHz and 2 Gbytes RAM. The differences between these two reflectors (the ERM reflector and the DE reflector) and a true V trough are depicted in . Because the last control point is variable unlike the first example, the obtained DE reflector is a little bit smaller than the ERM reflector. A new receiver with 200\u00d7300 mm size is placed 100 mm away from the source and 1,000,000 rays are traced to compare with the optical performance of corresponding ERM reflector after optimization. The simulation result of the DE reflector is shown in . Both receivers are divided into 39\u00d739 bins. Vertical cut through the center of the illuminance distributions are shown in . The average illuminance difference of these 39 bins is only 5%. Although there is one more variable control point in the second example compared with first example, after more iterations (100 times), a satisfying uniform illuminance distribution could also be obtained.","A third example shows a method for designing a free form reflector having a concentrated illuminance distribution. One of the greatest advantages of the NURBS algorithm is their capability of precisely representing conic sections and circles, as well as free form curves and surfaces. It can be proved that if control points are setting to {P}={(0,0), (2b,0), (2b,2a), (0,2a)}, wherein a>b, weights are",{"@attributes":{"id":"p-0063","num":"0062"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mo":["{","}"],"msub":{"mi":["w","i"]}},{"mo":["{","}"],"mrow":{"mn":["1","1"],"mo":[",",",",","],"mfrac":[{"mn":["1","3"]},{"mn":["1","3"]}]}}],"mo":"="}}},"br":{},"sub":["0 ","0"]},{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 16","FIG. 17"]},{"@attributes":{"id":"p-0065","num":"0064"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":{"mrow":{"mfrac":[{"msup":{"mi":"y","mn":"2"},"mn":"25"},{"msup":{"mrow":{"mo":["(",")"],"mrow":{"mi":"z","mo":"-","mn":"10"}},"mn":"2"},"mn":"100"}],"mo":"+"},"mo":"=","mn":"1"},"mo":","}}},"br":{},"sub":"ij","figref":["FIG. 16","FIG. 17"]},{"@attributes":{"id":"p-0066","num":"0065"},"figref":["FIG. 18","FIG. 18"]},"In conclusion, reflectors are the core components of many illumination and solar energy systems. According to the system and method for designing a free form reflector, which can automatically design various no-imaging reflectors by using the DE algorithm and the NURBS algorithm generated by the free form reflector design unit . The overall result is a simple automated non-imaging reflector design technique, and only a few data such as desired dimensions, desired illuminance distributions and searching limits associated with a desired reflector are needed to be input by user via the user input interface . The reflector profile is represented by the NURBS curve in 2D space and then is generated by translational or rotational symmetry. The coordinates of control points of the NURBS curve and weights are used as variables. Compared with the edge ray method, almost the same uniform illuminance distributions can be obtained using the DE algorithm for a given strip source. However, the process is automatic, and there is no need for user to know much theory about the non-imaging reflector design. A desired concentrated illuminance distribution can also be obtained using the DE algorithm. The above-described examples validate that a free form reflector designed by using the NURBS algorithm and the DE algorithm is not only feasible but also effective.","It should be emphasized that the above-described embodiments of the present invention, particularly, any \u201cpreferred\u201d embodiments, are merely possible examples of implementations, set forth for a clear understanding of the principles of the invention. Many variations and modifications may be made to the above-described embodiment(s) of the invention without departing substantially from the spirit and principles of the invention. All such modifications and variations are intended to be included herein within the scope of this disclosure, and the present invention is protected by the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4","sub":"T"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5","sub":"T"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6","sub":"T"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 7","sub":"T"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 10","sub":"T"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 11","sub":"T"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 12","sub":"T"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 13","sub":"T"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 14"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 15"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 16"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 17"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 18"}]},"DETDESC":[{},{}]}
