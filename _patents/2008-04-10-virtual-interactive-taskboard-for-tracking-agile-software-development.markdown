---
title: Virtual interactive taskboard for tracking agile software development
abstract: A method of managing tasks during agile software development includes detecting selection of a level in a project hierarchy. In response to said selection of the level, a table is displayed listing a plurality of assets associated with the level and showing tasks associated with respective assets of the plurality of assets. The table indicates a status of each task. A user action to update the status of a particular task is detected; in response, display of the particular task is updated to indicate an updated status of the particular task. Selection of one or more filter criteria is detected; in response, display of the table is updated based on the one or more filter criteria.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09501751&OS=09501751&RS=09501751
owner: VERSIONONE, INC.
number: 09501751
owner_city: Alpharetta
owner_country: US
publication_date: 20080410
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","SUMMARY","DESCRIPTION OF EMBODIMENTS"],"p":["The disclosed embodiments relate generally to managing agile software development, and more particularly, to tracking agile software development with a virtual interactive taskboard.","Agile software development refers to software development methodologies in which software is developed incrementally in steps referred to as iterations. Iterations typically are measured in weeks and may vary in length from one week or less to one month or more.","Examples of agile software development methodologies include Scrum, Extreme Programming (XP), Crystal, Lean Development, AgileUP, and Dynamic Systems Development Method (DSDM). Agile software development methods also have been referred to as lightweight methods. Methodologies may have their own vocabulary. For example, an iteration may be referred to as a sprint or a timebox, depending on the methodology. Agile software development is distinguishable from the \u201cwaterfall\u201d model of sequential software development.","Software for implementing agile development methodologies and for tracking and reporting on projects that use agile methodologies can help developers to realize fully the benefits, such as flexibility and rapid cycle times, offered by these methodologies. Accordingly, there is a need for robust agile development management software that is convenient to use.","In some embodiments, a method of managing tasks during agile software development includes detecting selection of a level in a project hierarchy. In response to said selection of the level, a table is displayed listing a plurality of assets associated with the level and showing tasks associated with respective assets of the plurality of assets. The table indicates a status of each task. A user action to update the status of a particular task is detected; in response, display of the particular task is updated to indicate an updated status of the particular task. Selection of one or more filter criteria is detected; in response, display of the table is updated based on the one or more filter criteria.","In some embodiments, a system for managing tasks during agile software development includes memory, a display, one or more processors, and one or more programs stored in the memory and configured for execution by the one or more processors. The one or more programs include instructions to detect selection of a level in a project hierarchy and instructions to display, in response to said selection of the level, a table listing a plurality of assets associated with the level and showing tasks associated with respective assets of the plurality of assets. The table indicates a status of each task. The one or more programs also include instructions to detect a user action to update the status of a particular task and instructions to update, in response to the user action, display of the particular task to indicate an updated status of the particular task. The one or more programs further include instructions to detect selection of one or more filter criteria and instructions to update, in response to said selection of the one or more filter criteria, display of the table based on the one or more filter criteria.","In some embodiments, a computer readable storage medium stores one or more programs configured to be executed by a computer system to manage tasks during agile software development. The one or more programs include instructions to detect selection of a level in a project hierarchy and instructions to display, in response to said selection of the level, a table listing a plurality of assets associated with the level and showing tasks associated with respective assets of the plurality of assets. The table indicates a status of each task. The one or more programs also include instructions to detect a user action to update the status of a particular task and instructions to update, in response to the user action, display of the particular task to indicate an updated status of the particular task. The one or more programs further include instructions to detect selection of one or more filter criteria and instructions to update, in response to said selection of the one or more filter criteria, display of the table based on the one or more filter criteria.","In some embodiments, a graphical user interface includes: a menu of levels in a project hierarchy, a table listing a plurality of assets associated with a level in the project hierarchy and showing tasks associated with respective assets of the plurality of assets, and one or more menus of available filter criteria. The table indicates a status of each task. The table is displayed in response to detecting selection of the level in the project hierarchy from the menu of levels. In response to detecting a user action to update the status of a particular task, display of the particular task is updated to indicate an updated status of the particular task. In response to detecting selection of one or more filter criteria from the one or more menus of available filter criteria, display of the table is updated based on the one or more filter criteria.","Like reference numerals refer to corresponding parts throughout the drawings.","Reference will now be made in detail to embodiments, examples of which are illustrated in the accompanying drawings. In the following detailed description, numerous specific details are set forth in order to provide a thorough understanding of the present invention. However, it will be apparent to one of ordinary skill in the art that the present invention may be practiced without these specific details. In other instances, well-known methods, procedures, components, and circuits have not been described in detail so as not to unnecessarily obscure aspects of the embodiments.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1","b":["100","100"]},"Work item planning () includes identifying work to be performed during the software development process. For example, features to be included in the software being developed are specified and software defects to be fixed during development are identified. Depending on the agile methodology being used, features also may be referred to as stories, backlog items, or requirements. In general, a work item is any item for which the agile development management software platform can track progress, such as time spent working on the item.","Release planning () includes assigning identified work items (e.g., features and defects) to particular planned software releases. For example, certain features may be included in an initial release, with additional features to be added in subsequent releases. Similarly, fixing various defects may be scheduled across multiple releases. More generally, release planning may include assigning identified work items to levels or nodes in a project hierarchy. The project hierarchy may include projects, sub-projects, releases, teams and other internal organizations, clients or customers, and vendors.","Iteration planning () includes assigning work items to iterations. There may be multiple iterations performed to prepare a particular software release; iteration planning thus involves specifying what work will be performed in which iterations. For example, features and defects are assigned to particular iterations. Within each iteration, tasks and tests corresponding to the features and defects are defined. A task is a unit of work performed as part of delivering a feature or fixing a defect. In some embodiments, a task is defined such that it takes no more than 3 days to perform. A test is an acceptance criterion that a feature or fixed defect must satisfy. Estimates for the time required to complete tests and tasks may be entered and a status may be associated with each task and test.","The actual time spent working on the work items (e.g., on the features and defects and their corresponding tasks and tests) during an iteration is tracked () and compared against the estimates. Progress and status reports may be displayed graphically. For example, a \u201cdashboard\u201d user interface may display multiple graphical reports. Possible graphical reports include burndown charts, velocity charts, burn-up charts, Gantt charts, parking lot reports, scope change, defect trending, test case status, and defect actuals. A burndown chart illustrates remaining work vs. time. Velocity refers to the estimated work per iteration on a project. Scope change refers to a change in requirements, such as the addition or deletion of features and defects. Parking lot reports are described below with regard to . In another example, a \u201ctaskboard\u201d user interface may display and enable updating of the status of work items, such as tasks and tests. Reports may be generated for a specified level or node in the project hierarchy (e.g., for a specified project, sub-project, release, team or other internal organization, client or customer, and\/or vendor.)","The operations in the development process flow  are presented sequentially in  for purposes of illustration. However, the operations need not be performed sequentially. For example, the planning operations , , and  may be updated dynamically throughout the agile development process. Similarly, tracking  may be performed dynamically, and may prompt subsequent planning changes. Furthermore, multiple operations may be combined into a single operation and additional operations may be added to the flow .","At a high level, the agile software development process has various assets associated with it. Nodes in the project hierarchy, such as projects, sub-projects, releases, teams, clients, and vendors, can be considered assets, as can iterations. Work items such as features and defects are assets, as are tasks and tests. Assets may be associated with other assets. In some embodiments, for example, tasks and tests are associated with (i.e., are related to) corresponding features and defects, which in turn may be associated with corresponding iterations.","An asset includes various attributes. In some embodiments, each kind of asset (e.g., project, feature, task, etc.) has a specified set of associated attributes. Types of attributes include text strings, numerical values, values calculated according to a formula (\u201csynthetic attributes\u201d), and associated assets. A first asset associated with a second asset thus is considered an attribute of the second asset. An attribute may be automatically included (e.g., hard-coded or created for a particular installation) in agile development management software or may be customized (i.e., user-defined).","Attention is now directed to user interfaces for agile development management software. In some embodiments, user interfaces are shown in a browser window. In some embodiments, user interfaces are shown by a stand-alone application.","Agile development management software can display groups of assets of a particular type. For example, groups of assets associated with work item planning, release planning, or iteration planning may be displayed.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 2A","FIG. 2A"],"b":["200","201","202","201","201","208","210","209","211"]},"The displayed assets in the group  are associated with a particular project hierarchy node , displayed for example in a project selection window .","Assets may be added to the group , for example, by selecting an \u201cadd story\u201d (i.e., add feature) link  or an \u201cadd defect\u201d link . In general, a user interface for displaying a group of assets may include multiple links or icons for adding multiple respective kinds of assets, or may include a single link or icon for adding assets. In some embodiments, selection of a link or icon for adding assets results in the display of a separate user interface for adding assets (not shown).","Assets displayed in the group  also may be edited, for example, by selecting an \u201cedit\u201d link (e.g., ) corresponding to a respective asset. In some embodiments, selection of an edit link or corresponding icon results in the display of a separate user interface for editing assets, as described below with regard to .","The displayed assets include a set of attributes selected for display, such as title , ID , owner , status , priority , estimate , and project . Some of the attributes are also assets, such as project . Some of the values for the attributes are blank: for example, no owner , status , priority , or estimate  is shown for a number of assets, including feature .","Assets to be displayed in the group  may be filtered according to one or more attributes using filters .","A subset of the displayed attributes includes user input fields to accept edits to attribute values. For example, a user may select a priority from a drop-down box  and may enter a work or size estimate (e.g., an estimate of time) in a text input box .","Upon detecting user selection of a customization link or icon, such as \u201ccustomize\u201d link , a customization user interface  is displayed that shows a group of available attributes , as illustrated in  in accordance with some embodiments. In the example of , the group  is shown as a list. The available attributes include the set of attributes selected for display and may include additional attributes that are not currently selected for display. In some embodiments, the group of available attributes may be viewed directly from the user interface , for example via a drop-down menu, instead of through the customization user interface .","The customization user interface  allows a user to select or de-select attributes for display. \u201cDisplay selection boxes\u201d (e.g.,  and ) associated with respective attributes (e.g., \u201cproject\u201d  and \u201cattachment count\u201d ) indicate which attributes are currently selected for display. For example, the checked display selection boxes in  correspond to the set of attributes displayed for the group  of assets in user interface  (). The user may select an attribute (i.e., add the attribute to the set selected for display) or de-select an attribute (i.e., remove the attribute from the set selected for display) by clicking on the corresponding display selection box (e.g., with a mouse or other selection device). For example, clicking on display selection box  deselects the \u201cproject\u201d attribute , as illustrated in . Similarly, clicking on display selection box  selects the \u201cattachment count\u201d attribute  for display. Alternate means of selecting and deselecting attributes are possible, such as clicking on a radio button associated with the attribute or clicking on the attribute itself.","Changes to the set of selected attributes may be applied by selecting an \u201capply\u201d icon  or may be canceled by selecting a \u201ccancel\u201d icon . Once the changes have been applied, the updated set of selected attributes is included in displays of groups of assets of the same type as the group . For example, when a \u201cwork item planning\u201d group  is displayed subsequent to de-selection of the \u201cproject\u201d attribute , the \u201cproject\u201d attribute  is not included in the display, as illustrated in  in accordance with some embodiments. If the \u201cattachment count\u201d attribute  had been selected, the \u201cattachment count\u201d attribute would be included in subsequent display of the group .","The customization user interface  also allows a user to specify whether to permit particular attributes to be edited. \u201cEditing selection boxes\u201d (e.g.,  and ) associated with respective attributes (e.g., \u201cstatus\u201d  and \u201cpriority\u201d ) indicate which attributes are in the subset to be displayed with user input fields. For example, the checked editing selection boxes  and  in  correspond to the subset of attributes (i.e., attributes  and ) with user input fields in user interface  (). The user may select an attribute for editing (i.e., add the attribute to the subset) or de-select an attribute for editing (i.e., remove the attribute from the subset) by clicking on the corresponding editing selection box (e.g., with a mouse or other selection device). In the example of , adding \u201cstatus\u201d  to the subset (e.g., by clicking on box ) would cause subsequently displayed work item planning groups to include user input fields for the \u201cstatus\u201d attribute . Removing \u201cpriority\u201d  from the subset (e.g., by clicking on box ) would cause subsequently displayed work item planning groups not to include user input fields for the \u201cpriority\u201d attribute .","Customized settings entered in the user interface  regarding the display of attributes and the ability to edit attributes may apply only to a particular user or may apply to multiple users. For example, a customized setting may be created as a system default for all users viewing a particular type of group of assets (e.g., a work item planning group, a release planning group, or an iteration planning group). In some embodiments, a user must have particular privileges, such as system administrator privileges, to create a system default customized setting. More generally, customized settings may be created that serve as a default for all users at or below a particular node in the project hierarchy. For example, a customized setting may serve as a default for all users on a particular team or on a group of teams, or for all users working on a particular project, sub-project, or release. In some embodiments, a user creating a particular default setting must have appropriate corresponding privileges. For example, authority to create a customized default for a particular team could be limited to the team leader.","In the user interface , the level of application of the customized setting is specified using a drop-down menu . The \u201csystem defaults\u201d level shown as selected in the drop-down menu  indicates that the customized setting applies to all users viewing groups of the corresponding type. In some embodiments, the \u201csystem defaults\u201d option will not be displayed in the drop-down menu  unless the user has already logged on as a system administrator or with other appropriate privileges.","In some embodiments, a user can override a default customized setting (e.g., a system default) by creating a user-specific customized setting, also known as a personalized setting. For example, the user may use the drop-down menu  to specify that a customized setting created via user interface  is specific to that user. This personalized setting then will control the display and ability to edit attributes for assets in a group of a particular type. If a user does not have a personalized setting, the default customized setting will control the display and ability to edit attributes associated with the group. In some embodiments, a system administrator or other user with appropriate privileges may specify, for a particular default customized setting, whether individual users are permitted to override the default. In some embodiments, individual users are permitted to override the default with regard to attributes to be displayed, but not with regard to attributes to be edited.","Attention is now directed to accessing and displaying user interfaces for viewing an asset's attributes and related assets. , like , is a schematic screenshot of a user interface displaying a group of assets associated with an agile software development process in accordance with some embodiments. Specifically, the user interface  of  displays a group  of assets associated with iteration planning, as indicated by selection of an \u201citeration planning\u201d tab . The iteration planning group  includes features (e.g., \u201cEnter RMA\u201d ) and defects (e.g., \u201cInventory Levels Off in Warehouse\u201d ), as indicated by features icons  and defects icons . The displayed assets in the group  are associated with a particular iteration . The displayed assets in the group  also are associated with a particular project hierarchy node , displayed for example in the project selection window . The project hierarchy node  corresponds to a project entitled \u201cCall Center,\u201d which includes multiple software releases (e.g., \u201cRelease 1.0\u201d and \u201cRelease 2.0\u201d) and has multiple teams (e.g., \u201cTeam A\u201d and \u201cTeam B\u201d) working on releases. Each release and each team may be selected as a project hierarchy node in the project selection window . In some embodiments, in response to selection of a particular project hierarchy node, the displayed group of assets is updated to display assets associated with the selected project hierarchy node. For example, in response to selection of a particular release or team, the displayed group  of assets is updated to display assets associated with iteration planning for the selected release or team.","Assets to be displayed in the group  may be filtered according to one or more attributes using filters . Assets may be added to the group  by, for example, selecting an \u201cadd backlog item\u201d link  or an \u201cadd defect\u201d link .","The displayed assets in the group  include a set of attributes, such as title , ID , owner , status , estimate , detail estimate , and \u201cto do\u201d . The \u201cestimate\u201d  and \u201cdetail estimate\u201d  attributes provide estimates of quantities of work associated with assets, while the \u201cto do\u201d  attribute provides estimates of quantities of work remaining to be done for assets. As discussed with regard to , some of the attributes may be assets associated with a displayed asset in the group  (i.e., may be related assets).","In some embodiments, an asset displayed in the group  may be edited by selecting a link corresponding to the asset, which results in display of a separate user interface (UI) for editing the asset. For example, selection of the \u201cplan backlog item\u201d link  for the \u201center RMA\u201d asset  results in display of a window  (). The window  displays attributes  of the \u201center RMA\u201d asset , such as ID, title, project, iteration, feature group, description, and estimate. In some embodiments, the attributes are displayed in a list.","The window  also displays related assets  associated with the \u201center RMA\u201d asset . In this example, the related assets  include tasks and tests associated with the \u201center RMA\u201d asset , which is a feature. Attributes of the related assets  (e.g., title , ID , owner , and detail estimate ) are displayed.","The related assets  may be edited by selecting a corresponding link. For example, related asset  (\u201cEnter RMA Using Order Number\u201d) may be edited by selecting an \u201cedit\u201d link . In some embodiments, in response to selection of the \u201cedit\u201d link , a UI  () for editing the related asset  is displayed in the window  along with the attributes  and related assets . The UI  includes user input fields (e.g., , , , and ) to display and receive edits to attributes of the related asset . In some embodiments, the UI  includes drop-down menus (e.g., , ) to select values for attributes of the related asset . In some embodiments, the user may enter values directly into the user input fields. Edits may be applied by selecting the \u201cOK\u201d link  or canceled by selecting the \u201ccancel\u201d link . In some embodiments, upon selection of the \u201cOK\u201d link , display of the UI  is ceased and displayed attribute values for the edited related asset  are updated in response to the edits. The user then may select another edit link associated with another related asset, resulting in display of another UI  within the window  for displaying and editing the newly selected related asset. In some embodiments, multiple UI's for displaying and editing multiple respective related assets may be open simultaneously within the window  and may be accessed simply by scrolling within the window .","In some embodiments, a new related asset may be added via the window . For example, a new task or test for the \u201center RMA\u201d asset  may be added by selecting the \u201cadd task\u201d link  or \u201cadd test\u201d link . In some embodiments, selection of the \u201cadd task\u201d link  or \u201cadd test\u201d link  results in display, within the window , of a user interface analogous to UI  for which the user input fields (e.g., , , , and ) are blank. The user may enter attribute values for the new task or test through the user input fields. In some embodiments, the user may specify attribute values via drop-down menus (e.g., , ). In some embodiments, creation of the new task or test is completed by selecting the \u201cOK\u201d icon  or canceled by selecting the \u201ccancel\u201d icon . In some embodiments, upon selection of the \u201cOK\u201d icon , display of the UI for creating the new related asset is ceased and the new related asset is displayed among the related assets .","In some embodiments, the drop-down menu  displays asset templates from which a related asset  may be created. Asset templates are discussed below with regard to .","The window  thus provides a single integrated interface through which a user may view multiple levels of information for an asset in addition to performing edits. For example, the user may view attributes of the asset itself and of related assets, and may edit or create related assets. The integrated interface allows the user to perform these tasks without having to browse through a succession of windows.","Attention is now directed to creation and use of asset templates. In some embodiments, asset templates may be defined and used to simplify creation of new assets.  is a schematic screenshot of a user interface  displaying available asset templates in accordance with some embodiments. The UI  may be accessed, for example, by selecting one or more links, icons or tabs (e.g., \u201cplanning\u201d link , \u201csetup\u201d tab , and \u201ctemplates\u201d tab ). In some embodiments, asset templates displayed in the UI  are separated by asset type: backlog item templates , for example, are listed separately from defect templates . Asset templates displayed in the UI  also may be associated with a particular project hierarchy node, such as the \u201cCall Center\u201d project hierarchy node . In the UI  one defect template  (\u201cMy High Priority Defects\u201d) and no backlog item templates have been defined for the \u201cCall Center\u201d project.","In some embodiments, an asset template includes identifying attributes such as a title  and\/or an ID , and also includes values for one or more additional attributes, such as status , priority , estimate , or project . Other examples of additional attributes include any of the attributes in the group  (). The values for these additional attributes serve as default values for assets generated from the template. For example, attributes for the template  include a \u201cHigh\u201d priority  and the \u201cCall Center\u201d project . An asset that is created from the template  will have a \u201cHigh\u201d priority  and will be associated with the \u201cCall Center\u201d project , unless otherwise edited. This template thus enables users to create \u201cHigh\u201d priority defects for the \u201cCall Center\u201d project without having to enter the priority and project for each defect.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":["FIG. 2I","FIG. 2H"],"b":["2030","2030","2018","2002","2030","2032","2032","2032","2032","2026","2030","2038","2020","2022","2026"]},"In some embodiments, an asset template includes related assets  to be associated with an asset created from the asset template. For example, a template for a feature (e.g., a backlog item) or defect may include one or more related tasks (e.g., \u201cVerify Defect\u201d ) or tests to be associated with the feature or defect created from the template. In some embodiments, the template defines values for attributes of the related assets. For example, the task  has an owner \u201cJeff\u201d . Creation of an asset from a template with a related asset results in creation of the related asset as well: the related asset specified in the template is automatically created and associated with the asset created from the template. The related asset created in this manner includes attribute values as specified in the template.","In the UI , a related asset  may be added to the template  by selecting the \u201cadd\u201d link  and may be edited by selecting a corresponding \u201cedit\u201d link . Inclusion of related assets in an asset template spares users from having to create related assets for each newly created asset.","To edit the asset template , the user selects the \u201cedit\u201d button . To cease display of the asset template , the user selects the close button .",{"@attributes":{"id":"p-0064","num":"0063"},"figref":["FIG. 2J","FIG. 2I","FIG. 2H","FIG. 2H"],"b":["2050","2026","2026","2050","2034","2016","2024","2050","2056","2058","2062","2066","2032","2060","2068","2038","2064"]},"Once all desired attribute values have been entered, the \u201csave new defect\u201d button  may be selected to create an asset having the attribute values for the template  as well as other attribute values entered through UI . In some embodiments, when creating an asset from the template , the user may edit the attribute values associated with the template. For example, the user may assign a different owner  than \u201cJeff\u201d or may assign a different priority  than \u201cHigh.\u201d","Alternatively, once all desired attribute values have been entered, the \u201csave template\u201d button  may be selected to save the attribute values associated with the template. The saved attribute values become default values for future assets created from the template.","Attention is now directed to displaying reporting data with parking lot reports. In some embodiments, parking lot reports display degrees of completion for multiple groups of assets in an agile software development project. In some embodiments, the assets are grouped by function or by various topics, which may be user-defined. For example, the assets may be features that are grouped into feature sets. Feature sets, sometimes referred to as themes, may be grouped in turn into parent feature sets, or parent themes.",{"@attributes":{"id":"p-0068","num":"0067"},"figref":"FIG. 2K","b":["2080","2080","2084","2086","2088","2080","2082","2090","2092","2098","2102","2104","2094","2096","2100","2106","2102","2092"]},"The parking lot report displays blocks  corresponding to respective groups of assets that satisfy the filter criteria. In some embodiments, a respective block  displays a title  of the respective group of assets and a graphic  showing a degree of completion of assets within the group. For example, if the group is a feature set, the graphic  shows a degree of completion of features within the feature set. The graphic  is shown as a bar chart; in other embodiments another graphic showing a degree of completion may be displayed, such as a gauge or line chart. In the example of UI , the bar charts  indicate that the \u201cEngineering\u201d group of block - is 40% complete, the \u201cFeature Enhancements\u201d group of block - is 75% complete, the \u201cPerformance\u201d group of block - is 0% complete, the \u201cStrategic Features\u201d group of block - is 80% complete, and the \u201cUsability\u201d group of block - is 0% complete.","In some embodiments, a completion percentage  is shown along with or in place of the graphic .","In some embodiments, additional information regarding a respective group is displayed in the respective block , such as an owner , a number of assets  in the group, and a count of work units  (e.g., an estimate of man-hours).","In some embodiments, in addition to or instead of displaying the graphic  or the completion percentage , each block  is displayed with a background color corresponding to a degree of completion of the respective group of assets. For example, the block  of a group that is 100% complete may be displayed in green, the block  of a group that is 0% complete may be displayed in red, and blocks  of groups that are partially complete may be displayed in other colors corresponding to ranges of completion percentages. In some embodiments, each block  is displayed with a background color corresponding to a comparison of the degree of completion to a schedule (e.g., a comparison of the degree of completion to a planned degree of completion for the group at the time when the report is generated). For example, the block  of a group that is on schedule may be displayed in green, the block  of a group that is slightly behind schedule may be displayed in yellow, and the block  of a group that is significantly behind schedule may be displayed in red. In some embodiments, a group is on schedule if its degree of completion equals or exceeds the planned degree of completion, a group is slightly behind schedule if its degree of completion is less than the planned degree of completion by no more than a specified amount, and a group is significantly behind schedule if its degree of completion is less than the planned degree of completion by more than the specified amount.","Because a user interface for specifying filter criteria is implemented into the parking lot report UI , the UI  enables on-the-fly generation of customized parking lot reports. A user may view a parking lot report for a particular project and then drill down on the report by generating subsequent parking lot reports filtered by user-specified attributes. For example, the user may generate parking lot reports for particular teams, releases, iterations, and\/or parent themes within the project. Multiple parking lot reports with distinct filter criteria may be generated in quick succession. The user also may quickly and easily generate successive parking lot reports for different projects. For example, a manager may use the UI  to review the status of multiple projects by successively selecting various projects in the project selection window .","Attention is now directed to user interfaces displaying a virtual interactive taskboard. In some embodiments, a virtual interactive taskboard is used to display and update the status of tasks associated with various assets (e.g., features and defects) for an agile software development project. While the taskboard described below with regard to  displays the status of various tasks, in some embodiments a similar user interface is implemented for displaying and updating the status of tests or other related assets.",{"@attributes":{"id":"p-0075","num":"0074"},"figref":["FIG. 3A","FIGS. 3A-3F"],"b":["300","312","300","2004","302","304","312","261","206","261","312","255","306"]},"In some embodiments a first column  in the taskboard  lists assets associated with the selected project level  and iteration . For example, the listed assets in the first column  may include features (e.g., \u201cEnter RMA\u201d ) and defects (e.g., \u201cInventory Levels Off in Warehouse\u201d ). In some embodiments, the type of a particular listed asset is indicated by an icon, such as a features icon  or a defects icon . Tasks associated with each listed asset are displayed in the row for the asset and in columns indicating the status of respective tasks. For example, tasks , , and , which are associated with the \u201cEnter RMA\u201d feature , are listed in the row  for the \u201cEnter RMA\u201d feature . Tasks  and  are displayed in the \u201cIn Progress\u201d column , indicating that work on those tasks has begun but has not been completed. Task  is displayed in the \u201cNone\u201d column , indicating that no work has begun and that the task  has not been assigned a status. No tasks are displayed in the row  for the defect , indicating that no tasks are associated with the defect . In some embodiments, tasks are displayed along with one or more task owners (e.g., ) and a work estimate for the task (e.g., ).","A user may interact with the taskboard  to move the location of a task and thereby to change the status of the task. For example, in response to a user clicking on the task  and dragging the task  from the \u201cIn Progress\u201d column  to the \u201cCompleted\u201d column , as illustrated by dashed arrow , the status of the task  is updated from \u201cIn Progress\u201d to \u201cCompleted,\u201d as illustrated in UI B (). In some embodiments, a status value stored as an attribute  in a table  () is updated in response to the user interaction  with the taskboard .","In some embodiments, display of the taskboard  may be modified by selecting one or more filter criteria. For example, in response to selecting a task owner from the \u201cHighlight Owner\u201d drop-down menu , the name of the selected task owner (\u201cTammy Coder\u201d or \u201cTC\u201d) is highlighted on the taskboard, as shown in UI C () (illustrating highlighting by displaying the name in bold with a bold border). Highlighting the name of the selected task owner allows easy identification of the owner's tasks. In response to selecting a type of asset (e.g., feature or defect) from the drop-down menu , only assets of the selected type are listed in taskboard . For example, in response to selection of \u201cfeature\u201d from the drop-down menu , only features are displayed in the taskboard , as shown in UI D ().","The status values shown for the columns in  (\u201cNone\u201d , \u201cIn Progress\u201d , \u201cCompleted\u201d , and \u201cOn Hold\u201d ) are merely examples of possible status values. In some embodiments, the names, definitions, and\/or number of status values and corresponding columns are user-configurable. For example, instead of a single \u201cIn Progress\u201d status, multiple status values corresponding to specified ranges of degrees of completion may be defined, and respective tasks will be displayed in corresponding columns based on respective degrees of completion of the tasks. In some embodiments, degree of completion corresponds to a completion percentage, which may be defined as the ratio of work done to the work estimate for the task.","In some embodiments, a \u201cSummary\u201d column  displays summary information for assets listed in the taskboard . In some embodiments, the summary information includes an indication  of test results for a particular asset. For example, the indication  may include display of a color corresponding to the test results, such as red if any tests are failing and green if all tests are passing. Alternatively, the indication  may display symbols corresponding to the test results, such as an \u201cX\u201d if any tests are failing and a check if all tests are passing. In some embodiments, the summary information includes a work estimate , such as an estimated time to completion. In some embodiments the estimated time to completion includes the estimated time to complete all tasks and tests associated with a particular asset. In some embodiments, the summary information includes one or more of a number of tasks associated with a particular asset, a number of tests associated with a particular asset, and an amount of time recorded as spent working on a particular asset.","In some embodiments, selecting an icon  () for a task results in display of a menu  (). Items in the menu  include \u201cassign\u201d , \u201ctrack\u201d , \u201cclose task\u201d , and \u201creopen task\u201d . Selection of \u201cassign\u201d  results in display of a window with text fields for assigning an owner and a status value for the task. Selection of \u201ctrack\u201d  results in display of a window with text fields for recording time spent working on the task. Selection of \u201cclose task\u201d  changes the status value of the task to \u201ccompleted,\u201d such that the task will subsequently be displayed in the \u201cCompleted\u201d column . Selection of \u201creopen task\u201d  restores the status of the task to its status value prior to selection of \u201cclose task\u201d .","In some embodiments, selecting an icon  () for a listed asset results in display of a menu  (). Items in the menu  include \u201cadd task\u201d , \u201cadd test\u201d , \u201cplan feature\u201d (or \u201cplan defect\u201d) , and \u201cclose feature\u201d (or \u201cclose defect\u201d) . Selection of \u201cadd task\u201d  or \u201cadd test\u201d  results in display of a UI (e.g. a UI analogous to UI , ) for adding a task or test associated with the listed asset. Selection of \u201cplan feature\u201d  results in display of a UI such as UI  (). In some embodiments, selection of \u201cclose feature\u201d  changes the status of each task associated with the feature to \u201ccompleted,\u201d such that the tasks will subsequently be displayed in the \u201cCompleted\u201d column .","In some embodiments, widths of columns in the taskboard  are adjustable. For example, by clicking and dragging a column separator, as illustrated by the dashed arrow  (), the width of a column may be adjusted, as shown for the \u201cIn Progress\u201d column  in UI B ().","In some embodiments, positioning a cursor on a task (e.g., , , or ) on the taskboard  results in display of a text box (not shown) containing a detailed description of the task.","In some embodiments, selection of a \u201cstandup dashboard\u201d link  results in display of UI F (), which includes the taskboard  and graphical reports (e.g., burndown chart  and trend chart ) that display status information for the selected project level  and iteration . Examples of charts that may be displayed in the UI F include burndown charts, velocity charts, burn-up charts, Gantt charts, parking lot reports, scope change, defect trending, test case status, and defect actuals.",{"@attributes":{"id":"p-0086","num":"0085"},"figref":["FIG. 3G","FIG. 3A","FIG. 3A"],"b":["3000","3000","261","3002","3004","255"]},"In response to said selection of the level, a table (e.g., taskboard , ) is displayed () listing a plurality of assets associated with the level and showing tasks (e.g., , , and ) associated with respective assets of the plurality of assets. The table indicates a status of each task. In some embodiments, the plurality of assets is associated () with the specified iteration. In some embodiments the plurality of assets includes multiple types of assets, such as features (e.g., ) and defects (e.g., ) associated with the specified iteration.","In some embodiments, respective tasks are displayed in rows (e.g.,  and , ) corresponding to the respective assets with which the respective tasks are associated and in columns (e.g., , , , and ) corresponding to the status of the respective tasks. In some embodiments, the columns have labels corresponding to status values. In some embodiments, the status values are user-definable. In some embodiments, names of task owners (e.g., ) are displayed along with the respective tasks.","In some embodiments, displaying the table includes showing summary information for at least a subset of the listed assets. In some embodiments, the summary information includes a result (e.g., indication , ) of one or more tests corresponding to a respective listed asset. In some embodiments the summary information for a respective listed asset includes one or more of an estimated time to completion (e.g., work estimate , ), a number of tasks, a number of tests, and an amount of time recorded as spent working on the asset.","A user action is detected () to update the status of a particular task. In some embodiments, a drag-and-drop action (e.g., , ) is detected ().","In response to the user action, display of the particular task is updated () to indicate an updated status of the particular task. In some embodiments, display of the particular task in a first column is ceased () and the particular task is displayed in a second column. For example, in response to the drag-and drop action  (), display of the task  in column  is ceased and the task  is displayed in column , as shown in .","Selection of one or more filter criteria is detected (). In response to said selection of one or more filter criteria, display of the table is updated () based on the one or more filter criteria.","In some embodiments the one or more filter criteria include a name of a task owner (e.g., selected from the menu , ). In some embodiments, display of the table is updated to highlight tasks owned by the task owner, as illustrated in . Alternatively, in some embodiments display of the table is updated to show only those tasks owned by the task owner.","In some embodiments the one or more filter criteria include a specified type of asset (e.g., feature or defect, as specified in the menu , ). In some embodiments, display of the table is updated to cease display of assets having types that are different from the specified type, as illustrated for features in .","In some embodiments, the method  further includes displaying a graphical report (e.g., burndown chart  or trend chart , ) in a common window (e.g., UI F) with the table. In some embodiments the graphical report displays status information associated with the selected level in the project hierarchy. In some embodiments, in response to said selection of the one or more filter criteria, display of the graphical report is updated based on the one or more filter criteria. For example, in response to selection of a task owner or a type of asset, the graphical report is updated to display data corresponding to status information associated with the selected task owner or asset type.","In some embodiments, columns in the table have user-definable widths. For example, the width of a column may be modified in response to a user action  ().","In some embodiments, the method  further includes displaying for a respective task a link (e.g., icon , ) to a menu for modifying attributes of the respective task.","While the method  includes a number of operations that appear to occur in a specific order, it should be apparent that the method  can include more or fewer operations. An order of two or more operations may be changed and two or more operations may be combined into a single operation. For example, operations  and  may be performed prior to operations  and .","The method  thus provides an efficient and intuitive user-interface for viewing and updating status information in a user-configurable manner. Instead of using layers of menus to update status information, a user may update status information for multiple tasks in a single user interface and may filter the status information as desired.",{"@attributes":{"id":"p-0100","num":"0099"},"figref":"FIG. 4","b":["400","400","404","402","406","402","406"]},"The server system  includes a server  and a database . Server  serves as a front-end for the server system . Server , sometimes called a front end server, provides an interface between the server system  and the client systems . In some embodiments, the functions of server  may be divided or allocated among two or more servers.","The server system  stores data relating to the agile development process, including asset data , asset template data , and customization data . Asset data  includes attributes for respective assets. An exemplary data structure  for asset data  is illustrated in , described below. Asset template data  includes attributes for respective asset templates. An exemplary data structure  for asset template data  is illustrated in , described below. Customization data  includes the level of the customization (e.g. system default or personalized), the type of asset group to which the customization applies, and data indicating which available assets are selected for display and for editing via user input fields. An exemplary data structure  for customization data  is illustrated in , described below.","It should be appreciated that the server system , including the server  and the database , may be implemented as a distributed system of multiple computers. However, for convenience of explanation, the server system  is described herein as being implemented on a single computer, which can be considered a single logical system.","A user interfaces with the server system  at a client system or device  (hereinafter called the client system for ease of reference). The client system  includes a computer  or computer controlled device, such as a personal digital assistant (PDA), cellular telephone or the like. The computer  typically includes one or more processors (not shown); memory, which may include volatile memory (not shown) and non-volatile memory such as a hard disk drive ; and a display . The computer  may also have input devices such as a keyboard and a mouse (not shown).","In some embodiments, a user may interact with the server system  via an agile development user interface  presented on the display . Examples of user interfaces  are illustrated in  and .","In some embodiments, the agile development user interface  may be a web-based user interface. That is, the user interface  includes one or more web pages. It is noted that a single web page can contain multiple frames, each of which may appear (when displayed by a browser application) to be a distinct web page. The web page(s) may be written in the Hypertext Markup Language (HTML), Extensible Markup Language (XML), or any other suitable language for preparing web pages, and may include one or more scripts for interfacing with the server system . For example, the web page(s) may include a JavaScript application that interfaces with the server system  via an application programming interface (API). The JavaScript application receives asset data, customization data, asset template data, and reporting data from the server system , manages the rendering of that data at the client, and also performs the client-side aspects of other tasks, such as marking attributes as selected or de-selected, updating attribute values according to data entered in user input fields or in response to user interaction with a taskboard , and transmitting user requests to the server system .","In some other embodiments, the agile development user interface  may be a part of a stand-alone application that is run on the client system . The standalone application may interface with the server system  via an application programming interface (API). Alternately, instead of using a client-sever model, the agile development management software may be installed and used on a single computer combining the functionalities of the server system  and client system .",{"@attributes":{"id":"p-0108","num":"0107"},"figref":["FIG. 5","FIG. 4"],"b":["500","402","502","506","504","514","514","500","508","510","512","504","504","504","504","502","504"],"ul":{"@attributes":{"id":"ul0001","list-style":"none"},"li":{"@attributes":{"id":"ul0001-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0002","list-style":"none"},"li":["an operating system  that includes procedures for handling various basic system services and for performing hardware dependent tasks;","a network communication module  that is used for connecting the client system  to other computers via the one or more communication network interfaces  and one or more communication networks, such as the Internet, other wide area networks, local area networks, metropolitan area networks, and so on;","an agile development management module  for handling data relating to the agile development process; and","a client application , such as a web browser."]}}}},"In some embodiments, the agile development management module  includes a local database  for storing data sent by the server (e.g., asset data, customization data, asset template data, and reporting data), an asset display module  for displaying groups of assets (e.g., via UI , ; UI , ; or UI , ) and for displaying an asset's attributes and related assets (e.g., via window , ), an asset editing module for updating attribute values (e.g., in accordance with data entered via user input fields or in response to user interaction with a taskboard ), an asset template module  for creating, displaying, and editing templates and for creating assets from templates (e.g., via UIs , , and , ), a customization module  for enabling creation of customized settings (e.g., via customization user interface , ), a reporting module  for displaying reporting (e.g., via UI ,  or UI F, ), and a server interface module  for interfacing with server computer . In some embodiments, the server interface module  includes a cache for storing data to be transmitted to the server.","In some embodiments, the agile development management module  may be a script-based module, embedded in a web page served from the server system  (). The web page may be rendered by a client application , such as a web browser, at the client computer . When the web page is rendered, the agile development management module  is executed, thereby providing a web-based interface to the server system . The script-based agile development management module may be written in JavaScript, AJAX, ECMAScript, Perl, or any other suitable scripting language.","In some other embodiments, the agile development management module  may be a standalone application stored in the memory  of the client computer .","Each of the above identified elements in  may be stored in one or more of the previously mentioned memory devices. Each of the above identified modules corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures or modules, and thus various subsets of these modules may be combined or otherwise re-arranged in various embodiments. In some embodiments, the memory  may store a subset of the modules and data structures identified above. Furthermore, the memory  may store additional modules and data structures not described above.",{"@attributes":{"id":"p-0113","num":"0116"},"figref":["FIG. 6","FIG. 4"],"b":["600","600","404","602","606","604","610","610","600","608","604","604","604","604","602","604"],"ul":{"@attributes":{"id":"ul0003","list-style":"none"},"li":{"@attributes":{"id":"ul0003-0001","num":"0000"},"ul":{"@attributes":{"id":"ul0004","list-style":"none"},"li":["an operating system  that includes procedures for handling various basic system services and for performing hardware dependent tasks;","a network communication module  that is used for connecting the server system  to other computers via the one or more communication network interfaces  and one or more communication networks, such as the Internet, other wide area networks, local area networks, metropolitan area networks, and so on;","an agile development management database  for storing data relating to the agile development process, including asset data , customization data , and asset template data ; and","an agile development management application programming interface (API)  for exchanging information with the agile development management modules  in one or more client computers ."]}}}},"In some embodiments, the application interface  includes a presentation layer  for rendering user interfaces (e.g.,  and ) accessed by a client system .","In some embodiments, the customization data  includes three levels of customization settings used by the presentation layer  to render user interfaces. A base level includes settings that are always included in the agile development management software. An installation level includes settings that are created for a particular installation of the agile development management software. For example, the installation level may include customization settings created via user interface . A user level includes personalized settings. Additional levels are possible, such as levels corresponding to a particular project hierarchy node (e.g., to a particular team). In some embodiments, settings at a given level override settings at lower levels. For example, installation settings override base settings, and user settings override both installation and base settings. In some embodiments, the presentation layer  first applies base-level settings, then overlays any installation-level overrides, and finally overlays any user-level overrides.","Each of the above identified elements in  may be stored in one or more of the previously mentioned memory devices. Each of the above identified modules corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures or modules, and thus various subsets of these modules may be combined or otherwise re-arranged in various embodiments. In some embodiments, the memory  may store a subset of the modules and data structures identified above. Furthermore, the memory  may store additional modules and data structures not described above.","Although  shows a \u201cserver computer,\u201d  is intended more as a functional description of the various features which may be present in a set of servers than as a structural schematic of the embodiments described herein. In practice, and as recognized by those of ordinary skill in the art, items shown separately could be combined and some items could be separated. For example, some items shown separately in  could be implemented on single servers and single items could be implemented by one or more servers.","The agile development management database  stores data in various tables. For example, an \u201cAsset Type\u201d table includes an entry for each kind of asset, such as feature, defect, task, or test. An \u201cAttribute Definition\u201d table defines the attributes associated with each kind of asset listed in the \u201cAsset Type\u201d table. A \u201cSynthetic Attribute\u201d table references formulas used to calculate synthetic attributes. An \u201cAttribute Security Check\u201d table contains references to operations used to determine whether a user may access or modify particular attributes. For attributes that are associated assets, a \u201cRelation Definition\u201d table defines relationships between assets. In addition, a \u201cMany to Many Relation Definition\u201d table may contain relationship information for assets in many-to-many relationship with other assets. Other tables may specify business rules for various assets.","Attribute values for particular assets are stored in asset tables , as illustrated in  in accordance with some embodiments. In some embodiments, a table  corresponds to a particular kind of asset, such as feature, defect, task, or test. The asset table  includes a row  for each respective asset stored in the table. Each row includes fields that contain values for attributes of the respective asset, as defined in the \u201cAttribute Definition\u201d table. For example, the attribute fields include title , asset ID , project , owner , and various other attributes . Other possible attribute fields include, without limitation, the attributes listed in group  (), such as status, priority, estimate, and attachment counts. The asset table  also includes fields  to specify attributes that are associated assets. For example, if a respective asset is a feature or defect, fields  may specify tasks and tests associated with the feature or defect, for example by providing the asset IDs of the tasks and tests. In another example, a field  may specify an iteration to which an asset is assigned.","In some embodiments, values for user-defined customized attributes are stored in separate tables for specific types of custom attributes. For example, numeric customized attributes are stored in a first table, text customized attributes are stored in a second table, boolean customized attributes are stored in a third table, and so on.","Customization data , such as the three levels of settings used by the presentation layer , also may be stored in tables in the database .  is a diagram illustrating a customization table  for customized settings in accordance with some embodiments. Each row  in the table  corresponds to a customized setting. Each row  includes a field  that specifies the type of asset group, such as work item planning, release planning, or iteration planning, to which the customized setting applies. Each row also includes a field  specifying the level of the customized setting, such as system default or personalized setting. In addition, each row includes fields corresponding to available attributes, such as title , asset ID , project , owner , and various other attributes . In some embodiments, a field corresponding to an available attribute includes a display flag  and an edit flag . The display flag  indicates whether the attribute is selected for display. The edit flag  indicates whether to display user input fields to permit editing of the attribute.","Tables  and  thus include information to allow the agile development management application interface  to respond to a request from a client computer  when a user seeks to display an asset group of a particular type. The interface  can query asset tables  to identify the assets in the group and can query the customization table  to determine which customized setting, if any, applies.","In some embodiments, attribute values for asset templates are stored in asset template tables , as illustrated in  in accordance with some embodiments. In some embodiments, a table  corresponds to a particular type of asset template (i.e., to templates for a particular type of asset). The asset template table  includes a row  for each respective asset template stored in the table. Each row includes fields that contain values for attributes of the respective asset template, as defined in the \u201cAttribute Definition\u201d table for the type of asset to which the template corresponds. Examples of attribute fields are described above with regard to , and may include fields  for associated (i.e., related) assets.","The foregoing description, for purpose of explanation, has been described with reference to specific embodiments. However, the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications, to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 1","b":"100"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIGS. 2A, 2D, and 2E"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIGS. 2B and 2C"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIGS. 2F and 2G"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIGS. 2H-2J"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2K"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 3A-3E"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 3F"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 3G"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIGS. 7A-7C"}]},"DETDESC":[{},{}]}
