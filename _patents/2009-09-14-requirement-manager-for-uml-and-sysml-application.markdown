---
title: Requirement manager for UML and SysML application
abstract: A system for displaying relationships between data of one of a UML or a SysML application includes a machine readable storage medium and a processor. The machine readable storage medium is configured to store a plurality of data for a project designed using one of the UML or the SysML applications. The processor is in signal communication with the machine readable storage medium. The processor is configured to search the computer readable storage medium for a first model element, identify a requirement relationship between the first model element and a second model element, and display the first model element and the second model element on a monitor such that the requirement relationship between the first model element and the second model element is identifiable to a user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08589858&OS=08589858&RS=08589858
owner: Lockheed Martin Corporation
number: 08589858
owner_city: Bethesda
owner_country: US
publication_date: 20090914
---

{"@attributes":{"id":"description"},"GOVINT":[{},{}],"heading":["GOVERNMENTAL INTEREST","FIELD OF DISCLOSURE","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This invention was made with Government support under contract No. N00024-98-C-5197 awarded by the Department of the Navy. The Government has certain rights in this invention.","The disclosed system and method relate to systems engineer modeling applications. More specifically, the disclosed system and method relate to unified modeling language (UML) and systems modeling language (SysML) applications.","Systems and software engineering is commonly used in all types of complex projects such as spacecraft design, computer chip design, robotics, software integration, bridge building, or the like. Traditionally, this effort was accomplished utilizing documents to capture the details of the system architecture and design. Today, the industry utilizes model-based systems engineering techniques to capture the details of the system architecture and design, which frequently employ applications that use unified modeling language (UML) and\/or systems modeling language (SysML). The languages enhance a designer's ability to integrate the visual and textual representation of system's design and architecture. The modeling language tools can be used to create modeling elements that are used to describe the behavior and structural characteristics of a system's design or architecture.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":"FIG. 1","b":["102","104","106","110","110","102","108","102","106"],"i":["a","e "]},"Accordingly, an improved system and method for managing requirements in a system modeling environment are desirable.","A system for displaying relationships between data of a project designed with an application utilizing one of a unified modeling language (UML) or a system modeling language (SysML). The system includes a machine readable storage medium and a processor in data communication with the computer readable storage medium. The machine readable storage medium is configured to store a plurality of data for a project designed using one of the UML or the SysML applications. The processor is configured to search the computer readable storage medium for a first model element of the project, identify a requirement relationship between the first model element and a second model element, and display the first model element and the second model element on a monitor such that the relationship between the first project requirement and the first project element is identifiable to a user.","In some embodiments, a computer readable storage medium is encoded with program code, wherein when the program code is executed by a processor, the processor performs a method. The method includes searching for a first model element, identifying a requirement relationship between the first model element and a second model element, and displaying the first model element and the second model element such that the requirement relationship between the first model element and the second model element is identifiable to a user. The project designed using one of a UML or a SysML application.","In still further embodiments, a method for displaying requirement relationships between data of one of a UML or a SysML application. The method includes searching for a first model element, identifying a requirement relationship between the first model element and a second model element, and displaying the first model element and the second model element such that the requirement relationship between the first model element and the second model element is identifiable to a user. The project designed using one of a UML or a SysML application.","The above and other features of the present disclosure will be better understood from the following detailed description of the preferred embodiments of the invention that is provided in connection with the accompanying drawings.","With reference to , a requirements management tool (RMT)  is now described. As described above, UML\/SysML applications are used to aide in the design of complex systems or other engineering projects. These UML\/SysML systems are used to develop different models each having a multitude of elements. For example, a particular project may include one or more operational models, one or more system models, and one or more component models. Many, if not all, of these models include a plurality of elements or components each having a multitude of requirements that the system or project under design may perform. Thus, as the system or project is developed and becomes increasingly more complex, an element may have hundreds or thousands of requirements all or some of which may be interrelated or dependent upon other elements in other models. Additionally, each of the models may include a set of rules and\/or guidelines that must be followed in developing the system or project under design. For example, a rule may exist that a system requirement may only be satisfied by one model element.","Advantageously, the RMT  may be fully integrated with the UML\/SysML application such that it provides a real-time view of the selected model elements and the requirement relationships between these model elements. Unlike conventional tools, such as IBM\u00ae Rational\u00ae DOORS\u00ae available from International Business Machines Corporation of Armonk, N.Y., the RMT  does not require periodic synchronization between with the UML\/SysML application. Instead, changes made in either the RMT  or the UML\/SysML application are seen as they occur, e.g., in real-time. Depending on the one or more model elements selected by a user, the RMT  will presents a user with a list of pertinent information relative to the selected model elements including the requirement relationships to other model elements and the model elements that have requirement relationships to the selected model elements. Advantageously, any type of model element may be selected or searched by the RMT . Once the model element selection has been made, the RMT mines a database including the project data of the project under design by looking at each of the selected model elements and model elements within these selected elements for requirement relationships to other model elements. Additionally, the model elements that have requirement relationships to the found model elements may also be identified and the results of the data mining presented to the user along with the metrics captured during the mining process.","In some embodiments, the requirement management tool (RMT)  may be implemented on a machine that is separate from the machine running the UML and\/or SysML application. In these embodiments, the RMT  may interface with a UML and\/or SysML application through a real-time interface such as the application programming interface (API)  of the UML or SysML system  as illustrated in , but still maintains a real-time perspective of the requirements to modeling elements. Implementing the RMT  through the UML\/SysML application's API  enables the RMT  to present the requirements information of the current system under design in real time. Alternatively and as illustrated in , the RMT  may be implemented as part of a UML\/SysML system. In some embodiments, the RMT  may be implemented using C, C#, Visual Basic, C++, Java, or other programming language.","Regardless of implementation, the RMT  may be configured to mine data of the UML\/SysML application as well as perform a variety of functions that enable one or more users -to efficiently and effectively manage the requirements of the system or project under design. Examples of the functions that may be performed by a RMT  include, but are not limited to, filtering views of one or more structural or behavioral model elements of the system, filtering attributes on requirements, managing the quality of requirements, tracing the paths of requirements, managing the requirements via the use of metrics, capturing a set of requirements allocated to a model elements, and various searching as described below.","The RMT  may be implemented in software and presented to a user on a monitor or other display device. In some embodiments, the RMT  may be presented to a user as a graphical user interface (GUI) on a display device such as a computer monitor.  illustrates one example of an architecture of a computer system  configured to implement the RMT . As illustrated in , computer system  may include one or more processors . The processor  is connected to a communication infrastructure  (e.g., a communications bus, cross-over bar, or network). Computer system  may include a display interface  that forwards graphics, text, and other data from the communication infrastructure  (or from a frame buffer not shown) for display on the display unit .","Computer system  also includes a main memory , such as a random access memory (RAM), and a secondary memory . The secondary memory  may include, for example, a hard disk drive (HDD)  and\/or removable storage drive , which may represent a floppy disk drive, a magnetic tape drive, an optical disk drive, or the like. The removable storage drive  reads from and\/or writes to a removable storage unit . Removable storage unit  may be a floppy disk, magnetic tape, optical disk, or the like. As will be understood, the removable storage unit  may include a computer readable storage medium having stored therein computer software and\/or data.","In alternative embodiments, secondary memory  may include other similar devices for allowing computer programs or other instructions to be loaded into computer system . Secondary memory  may include a removable storage unit  and a corresponding interface . Examples of such removable storage units include, but are not limited to, USB or flash drives, which allow software and data to be transferred from the removable storage unit  to computer system .","Computer system  may also include a communications interface . Communications interface  allows software and data to be transferred between computer system  and external devices. Examples of communications interface  may include a modem, Ethernet card, wireless network card, a Personal Computer Memory Card International Association (PCMCIA) slot and card, or the like. Software and data transferred via communications interface  may be in the form of signals, which may be electronic, electromagnetic, optical, or the like that are capable of being received by communications interface . These signals may be provided to communications interface  via a communications path (e.g., channel), which may be implemented using wire, cable, fiber optics, a telephone line, a cellular link, a radio frequency (RF) link and other communication channels.","In this document, the terms \u201ccomputer program medium\u201d and \u201ccomputer readable storage medium\u201d refer to media such as removable storage drive , or a hard disk installed in hard disk drive . These computer program products provide software to computer system . Computer programs (also referred to as computer control logic) are stored in main memory  and\/or secondary memory . Computer programs may also be received via communications interface . Such computer programs, when executed by a processor, enable the computer system  to perform the features of the method discussed herein. For example, main memory , secondary memory , or removable storage units  or  may be encoded with computer program code for performing the process shown in .","In an embodiment implemented using software, the software may be stored in a computer program product and loaded into computer system  using removable storage drive , hard drive , or communications interface . The software, when executed by a processor , causes the processor  to perform the functions of the method described herein. In another embodiment, the method may be implemented primarily in hardware using, for example, hardware components such as a digital signal processor comprising application specific integrated circuits (ASICs). In yet another embodiment, the method is implemented using a combination of both hardware and software.","The RMT  may be configured to enable a user to select a set of requirements related to one or more model, structural, or behavioral model elements and view them from a requirements perspective. For example, the view selection functionality of the RMT  enables a user to select one or more model elements and identify related requirements across several models. The RMT  may display the requirements to a user in a hierarchical tree in which requirements may be expanded or collapsed by a user so that the user may see, e.g., be able to identify, related requirements.","As illustrated in , a plurality of tabs - may be provided for a user to access one or more predetermined functions or views provided by the RMT . For example, a Requirements tab  may be provided that displays all of the requirements (Req) of a system under design or of a particular model element subassembly or sub-system of the system or project under design. Additionally, a predetermined function or view provided by the RMT  can include a requirements satisfaction view, a requirements traceability view, and a view revealing requirements associated with all model elements contained on one or more UML\/SysML defined diagrams.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 5A","FIG. 5A"],"b":["502","500","424","500"]},"Displaying a list and a count of all of the requirements that have or have not been satisfied enables a user to quickly and easily determine what parts of the system or project under design need to be addressed as well as to ascertain the quality and correctness of recent tasks that have been performed on the system model. Additionally, by implementing the RMT  using the application's API  advantageously enables a user to determine if a change in metrics, e.g., a requirement, or other change, has been implemented in real-time. Knowing a metrics count before and after a change is made enables a user to quickly determine if in fact the change was made in the application . One skilled in the art will understand that the metrics counts may be subdivided into a number of types of relationships to other model elements to provide a fine resolution of the total count and enabling a user to identify where there are differences in the model or system under design.","As shown in , related and\/or dependent requirements may be presented to a user in an expandable\/collapsible hierarchical view such as a browser tree or outline view. This provides the capability of initially viewing the hierarchically organized information in a simplified collapsed view allowing the user to start at a high level and selectively drill down through the hierarchical levels of specific model elements only if more detail is needed. Presenting a user with a list of requirements and other model elements that may be spread across various models enables a user to quickly view the relevant information required to evaluate the model. This evaluation can include identifying if there are any redundant or overlapping requirements as well as understanding how the models and components of the system under design are related to each other through a requirement relationship. Examples of requirement relationships include, but are not limited to, a satisfaction, a derived, a refined, a verify, a decompose, a copy, and an allocation relationship. Accordingly, RMT  enables requirement relationships between requirements to be traced. For example, a low-level model element may have a certain requirement, which may then lead to certain design or engineering decisions at a higher level based on this requirement. The RMT  may be used to trace a requirement from the top-down or from the bottom-up enabling users to identify why a decision concerning a certain design or engineering feature was made without requiring the user to manually follow a requirement through the various levels of a system.","RMT  may be configured to enable a user to add, change, or delete requirements using one of the buttons , , , to perform the add, change, or delete operation, respectively. For example, if a user wants to change a property of requirement_ as shown in , then the user may use an input device, e.g., a mouse, a keyboard, or like device, to highlight requirement_ and then click the \u201cCHANGE\u201d button . The user may then be presented with a dialogue box querying as to what type of property the user would like to change. The user may make the appropriate selection and change to the system or model under design, e.g., by storing it in database . This change is made in real-time and does not require the RMT  to be synchronized with the UML\/SysML application.",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 5C","FIG. 5C"],"b":["500","506","506","206","514","520","514","516","500","206","500","506","518","522","514","518","522"]},"Accordingly, RMT  enables quality management of the entire system under design as the various views enable a user to identify the completeness of the model. In contrast, conventional systems require a user to move up and down through various model organizations to view one requirement at a time. Accordingly, it is difficult in conventional systems for a user to view and manage a set of related requirements and associated elements across the various models.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIGS. 6A-6C","FIG. 6A","FIG. 6A"],"b":["500","500","502","524","526","502","528","530","532","534","536","528","500","206","530","500","536","536"]},{"@attributes":{"id":"p-0039","num":"0038"},"figref":["FIG. 6B","FIG. 6B","FIG. 6B"],"b":["524","524","528","536","502","524"]},{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 6C","FIG. 6C"],"b":["526","536","502","536","500"]},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 7","b":["700","500","702","500","526","404","408","704","706","500","500"]},"At block , the RMT  searches (mines) database  for the selected one or more model elements. The selected model elements are mined recursively searching through the selected model elements until all model elements are examined. All requirement relationships of the model elements are identified at block . For example, the RMT  may identify all satisfaction, derived, refined, verify, decompose, copy, and an allocation relationships for the one or more model elements. It is understood that RMT  may search for a sub-set of these model elements such as, for example, searching only for requirements or searching for requirements and use cases.","At block , the mined data are displayed to a user such that model elements having requirement relationships to other model elements may be identified by a user. This may include displaying the mined data in an expandable tree or other format in which the user may readily ascertain how requirements are related to model elements. In addition, metrics collected during the data mining performed by the RMT  may be displayed to assist the user in analyzing the collected information. The model elements and associated requirement relationships are displayed in accordance with the display options stored in the computer readable storage medium.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":"FIG. 8","b":["500","802","500","206","500","804"]},"At decision block , RMT  determines if data matching the search term has been located in database . If data matching the search term is not located by RMT , then at block  a message is displayed to a user stating that matching data was not located. If data matching the search term is found in database , then at block  the matching data, such as a model element, is displayed to the user. At this point, the user may determine if the data retrieved by the initial search is what the user was interested in locating. At decision block , the RMT  determines if the requirement relationships of the data located by the search is to be mined. The RMT  may make this determination by waiting for the user to select the Run button  or for the user to enter a different search term or terms. If the user inputs a new search term, then the RMT  proceeds to block . Alternatively, if the user selects the Run button , then the RMT  proceeds to block  and recursively searches for the model element in database .","At block , the RMT  identifies all of the requirement relationships of the searched model element. The model elements and associated requirement relationships are displayed in accordance with the display options stored in the computer readable storage medium at block . In this manner, RMT  may perform a search for data in database .","In addition to the above described embodiments, the disclosed method and apparatus may be embodied in the form of computer-implemented processes and apparatus for practicing those processes. The present disclosed method and apparatus may also be embodied in the form of computer program code embodied in tangible media, such as floppy diskettes, read only memories (ROMs), CD-ROMs, hard drives, \u201cZIP\u2122\u201d high density disk drives, DVD-ROMs, blu-ray discs, flash memory drives, or any other computer-readable storage medium, wherein, when the computer program code is loaded into and executed by a computer, the computer becomes an apparatus for practicing the disclosed method and system. The present disclosed method and apparatus may also be embodied in the form of computer program code, for example, whether stored in a storage medium, loaded into and\/or executed by a computer, wherein, when the computer program code is loaded into and executed by a computer, the computer becomes an apparatus for practicing the disclosed method and apparatus. When implemented on a general-purpose processor, the computer program code segments configure the processor to create specific logic circuits.","Although the invention has been described in terms of exemplary embodiments, it is not limited thereto. Rather, the appended claims should be construed broadly, to include other variants and embodiments of the invention, which may be made by those skilled in the art without departing from the scope and range of equivalents of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings illustrate preferred embodiments of the invention as well as other information pertinent to the disclosure.",{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIGS. 2A-2B"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIGS. 5A-5C"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIGS. 6A-6C"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 8"}]},"DETDESC":[{},{}]}
