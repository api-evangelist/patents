---
title: System and method of annotating network packets
abstract: A system and method of transmitting network packets between network processing elements through links are disclosed. One or more configuration entities may allocate one or more fixed length slots to be appended to network packets forwarded on a link between network processing elements in-band of the link.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07415024&OS=07415024&RS=07415024
owner: Intel Corporation
number: 07415024
owner_city: Santa Clara
owner_country: US
publication_date: 20020426
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["This application claims the benefit of U.S. Provisional Patent Appl. No. 60\/346,696, filed on Jan. 7, 2002, under 35 U.S.C. \u00a7 119 (e).","1. Field","The subject matter disclosed herein relates to the processing of network packets. In particular, the subject matter disclosed herein relates to processing network packets in a network processing environment.","2. Information","Network routers typically employ network processing elements to process network packets received at ingress communication ports for forwarding to egress communication ports according to one or more network policies. A router may comprise multiple network processing elements that transmits network packets through links coupling the network processing elements. For example, a first network processing element may classify a received network packet and then forward the network packet to a second network processing element. The second network processing element may then associate an egress port with the network packet. In conjunction with forwarding network packets from one network processing element to another in a router, individual network processing elements may forward control information on a per-packet basis (e.g., meta data or control information representative of a classification or egress port number).","Network processing elements\u2014such as network processors, classification, traffic management, security, and accounting co-processors, or even software modules within a single processor\u2014within a single network element (e.g., a router), typically employ some form of per-packet communication to efficiently process packets. For example, in a multi-blade chassis-based router, where each blade contains a classification co-processor and a network processor, the classification co-processors typically communicate the result of each packet's classification (e.g., a flow ID) to a corresponding network processor. The network processor typically then marks and polices the packet. Similarly, for any packet arriving on one blade and destined for a port on another blade, the ingress network processor typically communicates the outgoing port number to an egress network processor.","To communicate control information or meta data on per-packet basis, one solution is to annotate each packet with the desired information. This annotation is typically done by prepending or appending the packet with the appropriate meta data or control information. For example, in a multi-blade chassis-based router, a classifier co-processor typically prepends flow ID information on each packet before forwarding the packet to a network processor. The network processor could then extract the flow ID and subsequently prepend the outgoing port number before forwarding the packet to an egress network process across the backplane of a chassis.","Simply prepending packet annotations does not, however, address providing type identification. Two common solutions are to use either a self-identifying list of annotations or a fixed-format list of annotations. To create a self-identifying list of annotation, each annotation in the list typically contains a canonical type and a length field along with the actual value of the annotation. This so-called type-length-value (TLV) approach has the property of being self-identifying since each annotation can be fully identified by the type field. New annotations can be added because the length field allows older network processing elements to ignore unknown types. Fixed-format list of annotations typically determine a canonical position in the list for each possible type of information communication. No type or length information may be required because each of the network processing elements agrees on the single fixed-format.","TLV annotations, while flexible, are not efficient to process or transmit. TLV annotations are not efficient to process because they require a linear search of the annotation list to find the particular annotations (types) of interest. Moreover, the entire TLV list must be completely searched to find the start of the actual packet data. TLV annotations are not efficient to transmit because the type and length fields occupy bandwidth. If the representation of the actual values is small compared to the type and length fields, considerable bandwidth would be devoted to the transmission of the type and length fields.","Fixed-format annotations, while efficient to process, are not necessarily efficient to transmit and are also not flexible. With transmission of fixed-format annotations, there is the potential of transmitting unused fields. If, for example, two network processing elements only share one type of information, they still must transmit all of the fixed-format fields, including the unused fields. One solution would be to configure the communication between each pair of network processing elements with its own unique fixed-format. While this would solve the transmission inefficiency, it imposes a processing inefficiency and, worse yet, is intractable for ASIC-based networking processing elements.","Reference throughout this specification to \u201cone embodiment\u201d or \u201can embodiment\u201d means that a particular feature, structure, or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Thus, the appearances of the phrase \u201cin one embodiment\u201d or \u201can embodiment\u201d in various places throughout this specification are not necessarily all referring to the same embodiment. Furthermore, the particular features, structures, or characteristics may be combined in one or more embodiments.","\u201cMachine-readable\u201d instructions as referred to herein relates to expressions which may be understood by one or more machines for performing one or more logical operations. For example, machine-readable instructions may comprise instructions which are interpretable by a processor compiler for executing one or more operations one or more data objects. However, this is merely an example of machine-readable instructions and embodiments of the present invention are not limited in this respect.","\u201cStorage medium\u201d as referred to herein relates to media capable of maintaining expressions of data. For example, a storage medium may comprise one or more storage devices for storing data or machine-readable instructions in a particular format. Such storage devices may comprise devices capable of maintaining expressions of data in media such as, for example, magnetic, optical or semiconductor media. However, these are merely examples of storage media and embodiments of the present invention are not limited in these respect.","\u201cLogic\u201d as referred to herein relates to structure for performing one or more logical operations. For example, logic may comprise circuitry which provides one or more output signals based upon one or more input signals. Such circuitry may comprise a finite state machine which receives a digital input and provides a digital output, or circuitry which provides one or more analog output signals in response to one or more analog input signals. Also, logic may comprise machine-executable instructions stored in a memory in combination with processing circuitry to execute such instructions. However, these are merely examples of structures which may provide logic and embodiments of the present invention are not limited in these respects.","A \u201cprocessing system\u201d as discussed herein relates to a combination of hardware and software resources for accomplishing computational tasks. However, this is merely an example of a processing system and embodiments of the present invention are not limited in this respect. A \u201chost processing system\u201d relates to a processing system which may be adapted to communicate with a \u201cperipheral device.\u201d For example, a peripheral device may provide inputs to or receive outputs from an application process hosted on the host processing system. However, these are merely examples of a host processing system and a peripheral device and embodiments of the present invention are not limited in these respects.","A \u201cdata bus\u201d as referred to herein relates to circuitry for transmitting data between devices. For example, a data bus may transmit data between a host processing system and a peripheral device. However, this is merely an example of a data bus and embodiments of the present invention are not limited in this respect. A \u201cbus transaction\u201d as referred to herein relates to an interaction between devices coupled in a bus structure wherein one device transmits data addressed to the other device through the bus structure.","A \u201ctransmission medium\u201d as referred to herein relates to any media suitable for transmitting data. A transmission medium may include any one of several mediums including, for example, copper transmission media, optical transmission media or wireless transmission media. Also, a transmission medium may comprise combinations of two or more of the aforementioned media. However, these are merely examples of transmission media and embodiments of the present invention are not limited in these respects.","A \u201ccommunication port\u201d as referred to herein relates to circuitry to transmit data to or received data from a transmission medium. For example, a communication port may comprise circuitry to transmit data to or receive data from a transmission medium according to a data transmission protocol. However, this is merely an example of a communication port and embodiments of the present invention are not limited in this respect.","An \u201cingress\u201d communication port as referred to herein relates to a communication port to receive data from a transmission medium according to a data transmission protocol. For example, an ingress communication port may be associated with a network address and receive formatted data from a transmission medium associated with the network address. However, this is merely an example of an ingress communication port and embodiments of the present invention are not limited in this respect.","An \u201cegress\u201d communication port as referred to herein relates to a communication port to transmit data through a transmission medium toward a destination. For example, an egress communication port may transmit formatted data through a transmission medium toward a destination associated with a network address. However, this is merely an example of an egress port and embodiments of the present invention are not limited in this respect.","A \u201cnetwork packet\u201d as referred to herein relates to a unit of data to be transmitted to a destination according to a network protocol. A network packet may comprise a payload portion and a header portion. The payload portion may comprise data to be transmitted to a network destination. The header portion may comprise data indicative of a source or destination network address. However, these are merely examples of a network packet and embodiments of the present invention are not limited in this respect.","A \u201clink\u201d as referred to herein relates to circuitry to transmit data between devices. A link may provide point to point communication between two devices either unidirectionally or bi-directionally. A link may transmit data between the devices independently of address information. However, these are merely examples of a link and embodiments of the present invention are not limited in these respects.","A link may transmit data including network packets between devices in a transmission medium. In addition to the network packet data, a link may interleave other data to be transmitted between the devices \u201cin-band\u201d with the network packet data. For example, the transmission of such other data in the link may be time multiplexed with the transmission of network packet data between the device. However, this is merely an example of in-band data transmission and embodiments of the present invention are not limited in these respects.","A \u201cslot\u201d as referred to herein relates to a discrete resource of a link for transmitting data. For example, a slot may comprise a discrete quantity of time for transmission of data in a link. Alternatively, a slot may comprise a discrete and contiguous quantity of data to be transmitted in a link. However, these are merely examples of a slot and embodiments of the present invention are not limited in these respects.","A \u201cfixed length slot\u201d as referred to herein relates to a slot having a predetermined size according to a uniform fixed length for slots to be transmitted in a link. For example, a fixed length slot may be associated with a predetermined transmission interval in the link or a predetermined number of bits. However, these are merely examples of \u201cfixed length slots\u201d and embodiments of the present invention are not limited in these respects.","\u201cControl information\u201d or \u201cmeta data\u201d as referred to herein relates to information that may be associated with a network packet transmitted in a link. For example, meta data or control information may be appended to network packets transmitted in a link. However, this is merely an example of meta data and embodiments of the present invention are not limited in this respect.","Meta data may be associated with one or more \u201cmeta data types\u201d defining how the meta data appended to a network packet is to be interpreted. Meta data appended to a network packet may be associated with meta data types such as, for example, FlowID information, classification information or an egress port identifier. However, these are merely examples of meta data types that may be associated with meta data appended to a network packet transmitted in a link and embodiments of the present invention are not limited in these respects.","A \u201cnetwork processing element\u201d as referred to herein relates to a device to process information in, or information associated with, network packets. A network processing element may comprise programmable logic or hardwired logic to process the information in or associated with the network packets. In one application, a network processing element may draw inferences regarding network packets based upon information in or information associated with the network packets. For example, a network processing element may comprise logic to provide classification information or flow information to be associated with network packets. In other applications, a network processing element may encrypt, compress or reorder network packets that are to be forwarded to a destination. However, these are merely examples of network processing elements and embodiments of the present invention are not limited in these respects.","A \u201cconfiguration entity\u201d as referred to herein relates to a process or logic to manage communication between devices through a link. For example, a configuration entity may allocate portions of a link for transmitting meta data or control information between devices in-band of the link. The configuration entity may identify a size for the allocated portions and identify the type of meta data or control information to be transmitted in the allocated portions. However, this is merely an example of a configuration entity and embodiments of the present invention are not limited in this respect.","A network processing system may define multiple \u201cplanes\u201d of processing. A plane may associate processing objects according to their relevance in a layered processing stack (e.g., layers in a network processing system or device driver). Each plane may define an application programming interface (API) comprising routines or protocols for building software applications. For example, a network processing system may define a \u201ccontrol plane\u201d and a \u201cdata plane\u201d comprising processing objects providing one or more APIs. For example, a data plane may comprise processing objects to perform data packet classification and forwarding tasks. A control plane may comprise processing objects to perform exception handling for processing objects in the data plane. However, these are merely examples of how a network processing system may define multiple planes of processing objects and embodiments of the present invention are not limited in these respects.","Briefly, an embodiment of the present invention relates to a system and method of transmitting network packets between network processing elements through links. One or more configuration entities may allocate one or more fixed length slots to be appended to network packets forwarded on a link between network processing elements in-band of the link. In transmitting a network packet to a destination network processing element, a network processing element may append control information to the network packet in the allocated fixed length slots. However, this is merely an example embodiment and other embodiments are not limited in these respects.",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 1","b":["2","6","4","6","6","4","2","2","6","6","2"]},"The transmission medium  may comprise any one of several transmission mediums capable of transmitting information including, for example, copper or optical cabling, or wireless transmission media. However, these are merely examples of transmission media and embodiments of the present invention are not limited in these respects.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 2","FIG. 1"],"b":["100","102","114","116","118","104","102","114","108","118"]},"The ingress and egress communication ports  and  may transmit data to or receive data from a node through a transmission medium according to any one of several data link layer communication protocols. For example, such a link layer protocol may include any one of the Ethernet, SONET, ATM, frame relay, token ring or point-to-point protocols. However, these are merely examples of data link layer protocols that may be used for transmitting network packets to or receiving network packets from a communication node and embodiments of the present invention are not limited in this respect.","In the presently illustrated embodiment, the NPEs ,  and  may analyze the contents of a network packet received from the ingress communication ports  and make inferences regarding the network packet. Such an NPE may associate meta data or control information with a network packet which is representative of such an inference. For example, the NPE may associate meta data with a network packet that is representative of a packet classification, a flow identifier or an output egress communication port. Also, the NPE may associate meta data with a network packet that is based upon the origin of the packet to determine how the packet is treated (e.g., a UserID that is used to determine a priority for forwarding the packet according to a quality of service scheme). In another example, a NPE may determine that a network packet is associated with a particular data flow\/connection that requires encryption and associate meta data including an encryption key to be used to encrypt the data at a subsequent NPE. However, these are merely examples of meta data that may be associated with network packets by an NPE and embodiments of the present invention are not limited in these respects. Alternatively, an NPE may initiate an action to process a network packet based upon meta data associated with the network packet. For example, the NPE  may initiate transmission of a network packet on a particular egress communication port  for transmitting network packet based upon meta data associated with the network packet.","The NPEs ,  and  may comprise any one of several devices to provide or process meta data to be associated with network packets. For example, an NPE may comprise any one of several programmable network processor devices such as the IXP 1200 network processor sold by Intel Corporation. Alternatively, an NPE may comprise any one of several non-programmable or semi-programmable application specific integrated circuit (ASIC) devices for analyzing network packets and providing meta data to be associated with the network packets. However, these are merely examples of devices which may be used as NPEs and embodiments of the present invention are not limited in these respects.","Links  are coupled between the NPEs ,  and  to transmit network packets among the NPEs. In the presently illustrated embodiment, the links  may transmit network packets received from the ingress communication ports  from the NPE  to the NPE , and from the NPE  to the NPE . Network packets received at the NPE  from a link  may then be transmitted to a destination node through an egress communication port . The links  may comprise any one of several transmission media capable of transmitting network packets between devices according to data transmission protocol. For example, the links  may comprise a UTOPIA bus or versions of the System Packet Interface (SPI) link defined by the Optical Internetworking Forum (OIF) to transmit data between NPEs. However, these are merely examples of a link to transmit data between devices and embodiments of the present invention are not limited in these respects.","The node  may comprise separate processing blades disposed within a chassis (not shown) where each NPE resides on a blade coupled to the data bus . However, this is merely an example of how NPEs may be disposed in a node and embodiments of the present invention are not limited in this respect.","While the embodiment illustrated in  shows the node  comprising three NPEs ,  and , it should be understood that the embodiments illustrated throughout may also apply to other nodes having two, or more than three NPEs coupled in series by links to process network packets received on ingress ports to be forwarded to egress ports.","According to an embodiment, the NPEs  and  may append meta data to network packets transmitted in the links  in fixed length time slots. The number of slots and the format of each slot in a link  may be determined by a configuration entity (not shown).  illustrates an allocation of fixed length slots  and  to be appended to a network packet  transmitted in a link  between NPEs. The slots  and  may be of any pre-determined length (e.g., eight bits). The slots  may comprise meta data associated with the network packet . The configuration entity may fix the number of slots  to be appended to each network packet forwarded in a link  between NPEs. However, this is merely an example of how a configuration entity may define how slots are allocated in a link for transmitting network packets between NPEs. Alternatively, the number of slots  containing meta data may be dynamically allocated using a slot  to indicate the number of slots  being appended to each network packet forwarded in the link .","In addition to determining a number of slots to be appended to a network packet, the configuration entity may also define a type of meta data (\u201cmeta data types\u201d) for the data to be placed in each of the allocated slots. For example, the configuration entity may pre-define some allocated slots to contain classification information or an egress communication port number. However, this is merely an example of how a configuration entity may define meta data types for data to be provided within allocated slots and embodiments of the present invention are not limited in this respect.","According to an embodiment, instead of, or in addition to, indicating a number of slots being appended, information in slot  may indicate a meta data type associated with the meta data to be provided in the one or more slots . For example, slot  may contain a value 0\u00d701 to indicate that the following two slots  are to provide a sixteen bit FlowID immediately followed by the packet data . Similarly, slot  may contain a value 0\u00d702 to indicate that the following slot  provides an egress port number immediately followed by the packet data . However, these are merely examples of how an appended slot may indicate meta data types of meta data to be appended in other slots and embodiments of the present invention are not limited in these respects.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 3","b":["206","204","202","112"]},"According to an embodiment of the node illustrated with reference to , a configuration entity may comprise a process that is executed by the host processing system . Upon execution, this configuration entity may allocate fixed length slots to be appended in-band to the network packets transmitted between NPEs through the links . For example, the host processing system  may execute the configuration entity in response to a reset event to initiate one or more bus transactions on the data bus  addressed to one or more NPEs. The bus transactions may transmit data indicating a format for appending fixed length slots to network packets as illustrated in . The data provided in the bus transactions may include, for example, the size of slots, a number of allocated fixed length slots and meta data types to define meta data to be provided in the fixed length slots. Also, the configuration entity may reside as a process in a \u201ccontrol plane\u201d which controls processes residing in a \u201cdata plane\u201d residing on the NPEs. However, this is merely an example of how a configuration entity may be implemented in a node and embodiments of the present invention are not limited in these respects.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 4","FIGS. 2 and 3"],"b":["322","312","314","314"]},"The NPE  may determine FlowID information based upon other types of packet inspection. For example, the NPE  may associate FlowID information based upon network packet content. In a particular example, NPE  may associate network packets from an on-line shopper with a higher priority if the on-line shopper has made purchases in the past and is therefore likely to make purchases in the future (e.g., unlikely to be a mere browser or \u201cwindow shopper\u201d). Thus, if NPE determines (from examining the contents of a network packet) that the on-line shopper has selected an item for purchase (e.g., completed payment or added an item to a \u201cshopping cart\u201d), subsequent network packets may be forwarded with a higher priority. However, this is merely an example of how FlowID information may be based upon network packet content and embodiments of the present invention are not limited in this respect.","The NPE  may append the FlowID to the network packet  in slots  for forwarding to an NPE  for further processing. The NPE  may then determine other meta data such as an egress communication port number based upon the FlowID in the slots , and append the egress communication port number in slots  to be appended to the network packet  for forwarding to an NPE . The NPE  may then initiate transmission of the network packet on an egress communication port associated with the egress communication port number.","In the presently illustrated embodiment, a configuration entity  may determine the number of slots to be appended to the network packet in-band in each link  between NPEs, and length\/size of each individual slot. The configuration entity  may determine a maximum requirement for slots to transmit meta data with network packets in a link, and allocate a fixed number of slots for each link  that is sufficient to meet this maximum requirement. In the presently illustrated embodiment, for example, FlowID information to be appended to network packets transmitted from NPE  to NPE  provides a maximum requirement of two slots. Accordingly, the configuration entity  allocates two slots to be appended in-band when transmitting a network packet in a link  between NPE  and NPE , and between NPE  and NPE . Since an egress communication port number can be transmitted in a link  with only one slot, one of the allocated slots for transmitting network packets between NPE  and NPE  may remain unused.","In an alternative to the embodiment illustrated with reference to ,  illustrates an embodiment with two configuration entities  and . The configuration entity  may allocate slots to append FlowID information to network packets  in-band (when forwarding the network packet  from the NPE  to the NPE ) while configuration entity  may independently allocate slots to append an egress communication port number to network packets  in-band (when forwarding the network packet  from the NPE  to the NPE ). Accordingly, the configuration entity  may avoid allocation of unused slots for appending the egress communication port number to the network packets  forwarded to the NPE .","In the embodiments illustrated above with reference to , the configuration entities ,  and  may define allocated slots to be appended in-band when transmitting network packets between NPEs according to a predetermined slot allocation. Alternatively, the configuration entities ,  and  may query the NPEs, and then negotiate an allocation of slots for meta data to be appended to network packets forwarded between NPEs. The negotiated allocation of slots in a link may be selected from a plurality of allocations which are compatible with NPEs coupled by the link. For example, a configuration manager may identify potential allocation schemes which are compatible among all affected NPEs, and select the most efficient allocation among the common compatible allocation scheme. The configuration manager may then define data types for data to be provided in the allocated slots, and transmit messages to the NPEs to communicate to the affected NPEs the allocation of fixed length slots and the meta data types for data to be provided in the allocated slots. However, this is merely an example of a negotiated allocation of slots among multiple NPEs and embodiments of the present invention are not limited in this respect.",{"@attributes":{"id":"p-0060","num":"0059"},"figref":"FIG. 6","b":["500","514","516","514","508","514","510","508","508","514","516","518","520"]},"The links  and  may transmit data in fixed length slots between the NPEs  and . The master NPE  may off-load the processing of ingress network packets  by copying data from selected fields of the ingress network packets  into fixed length slots of the link . For example, the master NPE  may automatically forward a fixed number of leading bytes from each network packet to the slave NPE  on link . In response to processing information received on the link , the slave NPE  may return information to the master NPE  on the link  in fixed length slots. The information returned on the link  may include meta data such as, for example, classification information. The slave NPE  may return other meta data on the link  such as an egress port number or Ethernet destination address according to an IPv4 forwarding scheme based upon a destination IP address provided by the master NPE  on the link .","The slave NPE  may return the meta data returned in slots on the link  in association with particular ingress packets  received at the master NPE . For example, in addition to data copied from selected fields in ingress network packet , the fixed length slots may include identification data associated with the copied data. The slave NPE  may then include the identification data in slots on the link , enabling the master NPE  to associated the received meta data with particular received ingress network packets .","In the presently illustrated embodiment a configuration entity (not shown) may allocate fixed length slots on the  and  links. The configuration entity may be hosted on a host processing system  to be executed in response to a reset event. The configuration entity may initiate bus transactions on the data bus  addressed to the NPEs  and . In one embodiment, the configuration entity may define the format of slots on the links  and  according to a predetermined scheme. Alternatively, the configuration entity may query the NPEs  and , and then negotiate a slot format on the links  and  based upon responses from the NPEs  and  to the initial query.","While there has been illustrated and described what are presently considered to be example embodiments of the present invention, it will be understood by those skilled in the art that various other modifications may be made, and equivalents may be substituted, without departing from the true scope of the invention. Additionally, many modifications may be made to adapt a particular situation to the teachings of the present invention without departing from the central inventive concept described herein. Therefore, it is intended that the present invention not be limited to the particular embodiments disclosed, but that the invention include all embodiments falling within the scope of the appended claims."],"BRFSUM":[{},{}],"heading":["BACKGROUND","DETAILED DESCRIPTION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE FIGURES","p":["Non-limiting and non-exhaustive embodiments of the present invention will be described with reference to the following figures, wherein like reference numerals refer to like parts throughout the various figures unless otherwise specified.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0015","num":"0014"},"figref":["FIG. 3","FIG. 2"]},{"@attributes":{"id":"p-0016","num":"0015"},"figref":["FIG. 4","FIG. 3"]},{"@attributes":{"id":"p-0017","num":"0016"},"figref":["FIG. 5","FIG. 3"]},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
