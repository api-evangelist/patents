---
title: Java store television
abstract: A non-transitory computer readable storage medium including computer readable code that, when executed by a processor, is configured to receive, from a user network device, a first request to execute an application on the user network device. The first request includes a user identification, routing information, and requested application information, encrypted using a public key. The user network device is configured to display the application on a television display device. The code is further configured to decrypt the routing information and requested application information using a private key, send a second request for subscription information to a service provider, receive the subscription information from the service provider, and determine that a license corresponding to the application is associated with the user. The code is further configured to generate and send an application package configured to deploy the application using a Java Runtime Environment on the user network device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09626488&OS=09626488&RS=09626488
owner: Oracle America, Inc.
number: 09626488
owner_city: Redwood City
owner_country: US
publication_date: 20111014
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATIONS","BACKGROUND","SUMMARY","DETAILED DESCRIPTION"],"p":["This patent application claims priority under 35 U.S.C. \u00a7119(e) to U.S. Provisional Patent Application Ser. No. 61\/393,688 filed on Oct. 15, 2010. U.S. Provisional Patent Application Ser. No. 61\/393,688 is hereby incorporated by reference in its entirety.","Software developers are constantly creating new applications around the country, and even around the world. Software development may be accomplished using a variety of platforms, including, but by no means limited to, Java\u2122 and JavaFX\u2122 (Java\u00ae and JavaFX\u00ae are registered trademarks owned by Sun Microsystems, Inc., Mountain View, Calif.). When a new application is developed, the developer must find a way to make the application available to those users interested in the application. This may be accomplished, for example, by soliciting users who may be interested in such an application. The developer may, for example, distribute copies of the application via a removable storage device, such as a CD-ROM.","In general, in one aspect, the invention relates to a non-transitory computer readable storage medium including computer readable code that, when executed by a processor, is configured to receive, from a user network device, a first request to execute an application on the user network device, where the first request comprises a user identification, routing information, and requested application information, where the routing information and requested application information is encrypted using a public key, and where the user network device is configured to display the application on a television display device. The computer readable code is further configured to decrypt the routing information and requested application information using a private key, send a second request for subscription information corresponding to the user to a service provider, wherein the second request comprises the user identification, receive the subscription information from the service provider, and determine that a license corresponding to the application is associated with the user identification. The computer readable code is further configured to generate an application package, where the application package is configured to deploy the application using a Java Runtime Environment (JRE) on the user network device, and send the application package to the user network device.","In general, in one aspect, the invention relates to a service provider, including a processor a memory, comprising instructions, which when executed by the processor perform a method, the method comprising: receiving a first request from a user network device for a public key, generating the public key and a private key, sending the public key to the user network device, sending the private key to a warehouse, receiving a second request for subscription information from the warehouse comprising a user identification, identifying the subscription information associated with the user identification, and sending the subscription information to the warehouse. The warehouse, in response to receiving the subscription information is configured to determine that a license corresponding to an application is associated with the user identification, generate an application package, wherein the application package is configured to deploy the application using a Java Runtime Environment (JRE) on the user network device, and send the application package to the user network device.","In general, in one aspect, the invention relates to a non-transitory computer readable storage medium comprising computer readable code that, when executed by a processor, is configured to send a first request for a public key to a service provider. The service provider is configured to generate a public key and a private key, and send the private key to a warehouse. The computer readable code is further configured to receive the private key from the service provider, and send, to the warehouse, a second request to execute an application. The second request includes a user identification, routing information, and requested application information, where the routing information and requested application information is encrypted using a public key. The warehouse is configured to decrypt the routing information and requested application information using the private key, send a third request for subscription information corresponding to the user to a service provider, where the third request comprises the user identification, receives the subscription information from the service provider, determines that a license corresponding to the application is associated with the user identification, and generates an application package. The application package is configured to deploy the application using a Java Runtime Environment (JRE) on the user device. The computer readable code is further configured to receive the application package, execute the application package, and display the application on a television display device.","Specific embodiments of the invention will now be described in detail with reference to the accompanying figures. Like elements in the various figures (also referred to as Figs.) are denoted by like reference numerals for consistency.","In an embodiment of the invention, numerous specific details are set forth in order to provide a more thorough understanding of the invention. However, it will be apparent to one of ordinary skill in the art that the invention may be practiced without these specific details. In other instances, well-known features have not been described in detail to avoid obscuring the invention.","In general, embodiments of the invention relate to obtaining and executing on a user network device, applications stored in a warehouse. More specifically, embodiments of the invention relate to obtaining applications (e.g., Java or JavaFX applications) capable of executing in the Java Runtime Environment (JRE) and displaying the applications on a television display device. According to one or more embodiments of the invention, this involves verifying a user's television subscription, and generating an application package such that the application is rendered for a television display device.","In one embodiment of the invention, the applications, once complied, are in a byte-code format. The compiled applications are configured to execute on a Java Virtual Machine (JVM). In one or more embodiments of the invention, the JVM is stored in a user network device operatively connected to a service provider, such as a television service provider, and a television display device. More specifically, the JVM includes functionality to launch the execution of the JRE and allow the application to execute within the JRE. According to one or more embodiments of the invention, the user network device is any device that includes a JRE, and is operatively connected to a television display device. In one example, the user network device is a set top box. In another example, the user network device is a television that includes a JRE. Yet another example is a computer or Blu-Ray\u2122 player that includes a JRE connected to a television. (Blu-Ray\u2122 is a trademark owned by the Blu-Ray Disc Association.) The execution of the applications include reading and verifying byte-code, determining the corresponding native-platform machine code, and issuing the corresponding native-platform machine code to the client device OS and\/or hardware. In one embodiment of the invention, the JVM may implement one or more \u201csandboxes\u201d, where each sandbox is an isolated execution environment within the JRE. Applications executing within a sandbox may only interact with the JVM and other applications within the sandbox; however, the applications may interact with applications executing outside the sandbox. Further, the JVM may place further restrictions on how applications may execute within a given sandbox.",{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 1A","b":["110","120","140","145","175"]},"In one embodiment of the invention, the developers () generate, create, or otherwise provide applications (). According to one or more embodiments of the invention, the applications may be, but are not limited to, Java (any edition, version) and JavaFX applications. The developers then provide these applications () to the warehouse () for distribution. In addition, according to one or more embodiments of the invention, the developers () provide the warehouse () with application information () (i.e., data related to the application).","According to one or more embodiments of the invention, the developers () also receive data from the warehouse () regarding applications that have been submitted (i.e., Application ()). According to one or more embodiments of the invention, this data may include client usage data (), and application metrics (). According to one or more embodiments of the invention, client usage data () may correspond to data (e.g., without any personal identification information) detailing how a given application was\/is used on one or more user network device (). According to one or more embodiments of the invention, the client usage data () may include such information as how often users started and\/or stopped an application (), what pages are accessed by a user, the order in which the user navigated through the various pages in the application, how the pages were accessed, how the user interacted with the user interface (e.g., which buttons where clicked by the user, etc.) and time spent on accessing pages. In addition, the developers () may receive application metrics ().","According to one or more embodiments of the invention, application metrics () may include the number of times an application has been installed or reinstalled, the number of times the application has been viewed, the number of times the application has been removed by a user, and the number of times the application has resulted in a catastrophic error (i.e., the application \u201ccrashed\u201d). According to one or more embodiments of the invention, application metrics () are generated by the warehouse (), as described below.","In one embodiment of the invention, the warehouse () corresponds to one or more computer systems (e.g., servers) configured to interface with the developers and the user network device (). Generally, according to one or more embodiments of the invention, the warehouse () receives applications from the developer () and provides them to users by providing them to a user network device (). According to one or more embodiments of the invention, the application () is provided to the warehouse () packaged in a standard Java Archive (JAR) file. The warehouse is configured to store one or more applications (). Further, the warehouse may store different versions (e.g., version 1, version 1.1, version 2, etc.) of the same application, where each version includes different features and\/or content. For example, according to one or more embodiments of the invention, different versions of the application may be stored for various screen sizes and input capabilities (e.g., touch-screen, physical keyboard input, track ball input, etc.). In addition, the warehouse () may store multiple instances of a given version of an application, where each instance of the application is configured to be deployed on a different type of user network device () (e.g., one instance for a set top box, one instance for deployment on a smart television, etc.). Further, in one embodiment of the invention, the warehouse () includes functionality to support the embodiments described in one or more of . An embodiment of the warehouse is described in .","According to one or more embodiments of the invention, the warehouse () is configured to use the client usage data () to generate trends on how an application () is used, and subsequently send the generated trends to the developer (). Alternatively, or in addition to the above, the warehouse () may be configured to send the client usage data () to the developer (). In one embodiment of the invention, the client usage data () is an aggregation of the client usage data obtained from a number of individual user network devices executing the application. In one embodiment of the invention, application metrics () include other information tracked by the warehouse other than client usage data. For example, the application metrics () may indicate the number of times a given application was previewed (described below in ), the number of times a given application was installed on a user network device, the types of user network devices () on which the application is currently stored, etc.","The warehouse () is configured to communicate with the developers () and the user network device () over a wired network, a wireless network, or any combination thereof. Further, the warehouse () and the user network device () may communicate over a wired network, a wireless network, or any combination thereof. According to one or more embodiments of the invention, upon receiving the application () and the application information (), the warehouse () may package the application in a deployment package () that is made available to users. According to one or more embodiments of the invention, a developer () and a user of a user network device () may interact with the warehouse () using an interface displayed on the television display device ().","In one embodiment of the invention, the user network device () is configured to receive the application as a deployment package () from the warehouse (). In one embodiment of the invention, the deployment package () conforms to the Java Network Launch Protocol (JNLP) such that the application may be executed using the Web Start feature of JNLP. In one embodiment of the invention, the user network device also supports JavaFX, which is used to obtain client usage data () associated with the execution of applications in the JRE on the user network device ().","In one embodiment of the invention, a user network device () is any device upon which a JRE may execute, and which is operatively connected to a television display device (). Said another way, each user network device () includes a Java Runtime Environment (). According to one or more embodiments of the invention, a user accesses applications from the warehouse () using the user network device (). Examples of user network devices () include, but are not limited to, a set top box, a smart television, etc. According to one or more embodiments of the invention, a set top box is a device including a processor, a memory, and a persistent storage, which is used to connect to a television service provider and display television programming on a television display device (). Further, according to one or more embodiments of the invention, a smart television is a television that includes a processor, a memory, persistent storage, and includes the functionality to receive and decode broadcast signals, which are then displayed on the television display device (). Further, according to one or more embodiments of the invention, a smart television includes a direct internet connection. A smart television will be described in further detail in , below. However, according to one or more embodiments of the invention, the user network device () may be any device that includes a JRE, and is configured receive and decode broadcast signals to display on a television display device (). According to one or more embodiments of the invention, the television display device () may be a cathode ray tube (CRT) device, a light-emitting diode (LED) display, a plasma display panel (PDP), a liquid crystal display (LCD), organic light-emitting diode display (OLED), surface-conduction electron-emitter display (SED), Laser TV, a nanocrystal display, or any other display device used to display broadcast signals.","According to one or more embodiments of the invention, the user network device () is configured to connect to a service provider (). According to one or more embodiments of the invention, the service provider is a television service provider () (i.e., a provider of broadcast television). Accordingly, in order to receive broadcast television, the user network device (), must connect to the service provider (). According to one or more embodiments of the invention, the service provider () stores user information associated with the user network device (), and provides connectivity to the warehouse (). According to one or more embodiments of the invention, in order to receive an application () from the warehouse (), the warehouse () must first determine that the user network device () is authorized to receive the application () by contacting the service provider (). This is described in greater detail in .",{"@attributes":{"id":"p-0027","num":"0026"},"figref":["FIG. 1B","FIG. 1A","FIG. 1B"],"b":["120","175","180","190","120","145","180","130","190","145","140","180","180","175","120"]},{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 1C","FIG. 1A","FIG. 1C","FIG. 1B"],"b":["120","175","190","190","120","175","185","140","185","175","120"]},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 2","FIG. 1A"],"b":["200","120","200","240","240","230","200"]},"In one embodiment of the invention, the warehouse () includes a management service (), a security service (), a content delivery service (), and a digital rights management service (). Each of these services is described below.","In one embodiment of the invention, the management service () provides warehouse administration services (accessed via a universal resource locator (URL)) including configuration of the warehouse hardware and software. For example, according to one or more embodiments of the invention, the management service () is configured to track developers that are submitting content to the warehouse (). According to one or more embodiments of the invention, the management service () is configured to track the purchase transactions and\/or deployment of applications. According to one or more embodiments of the invention, the management service () is configured to manage the display of applications in the catalogue to the consumer. Finally, according to one or more embodiments of the invention, the management service () manages the state of submitted content to the warehouse () (e.g., submitted, approved, under review, published, or quarantined).","In one embodiment of the invention, the security service () includes functionality to manage security issues related to providing applications, including interacting with a service provider (i.e., service provider () of ). According to one or more embodiments of the inventions, the security service () may include a number of mappings, including a mapping between a user's identification and a private key to use to decrypt requests, a mapping between a user identification and licenses that are available to that user identification, and a mapping between subscription information and license mapping, which ensures that users with a certain subscription are allowed access to applications with certain licenses. These mappings are discussed in greater detail in .","In one embodiment of the invention, the content delivery service () provides users with a portal (accessed via a URL) to (i) view applications () in the warehouse (), (ii) package the applications for delivery to the client devices for install or preview using JNLP, (iii) manage application versions and instances, (iv) manage billing and invoicing (as necessary), (v) respond to requests to confirm that a given client device includes the latest version of a given application, (vi) to track which applications are installed by each user on their client devices (e.g., user A loaded application 1 on their mobile device), and (v) maintain user account information (e.g., username, password, etc.). According to one or more embodiments of the invention, the content delivery service () includes functionality to interact with a service provider (i.e., service provider () of ), in order to provide billing information to the service provider.","In one embodiment of the invention, the digital rights management service () includes functionality to set digital rights management (DRM) settings for a given application, a particular user, a particular client device type, or any combination thereof. For example, the DRM settings may specify, but are not limited to specifying: (i) where the application may execute (e.g., on what system the application may execute), (ii) whether a given instance of the application may be copied to multiple client devices, (iii) what features of the application the user may access, and (iv) the duration for which the application (or a given feature of the application) is available. Further, according to one or more embodiments of the invention, the DRM settings may provide the ability to track the type of license that the consumer has purchased. For example, the consumer may purchase a perpetual license, a subscription license, or a per content access license. According to one or more embodiments of the invention, certain subscriptions with a service provider may provide certain licenses that do not need to be purchased separately.","According to one or more embodiments of the invention, the digital rights management service () may include a mapping between subscription information and licenses. According to one or more embodiments of the invention, the DRM service () prohibits users from copying an application and using it on a different system without purchasing a valid license. According to one or more embodiments of the invention, the DRM management service also verifies the level of access available to a user on a particular application (e.g., if the application is a game that includes 5 levels but the user only has a license to access levels 1-3, then the DRM may enforce this restriction).","In one embodiment of the invention, the executable code for the applications (), the application information (), and the transaction logs () are stored in a data repository () in the warehouse (). In one embodiment of the invention, the data in the data repository () is managed by a file system, such as ZFS, Network File System (NTFS), Universal Disk Format (UDF), or any other file system (or combination thereof). In addition, as an alternative, one or more of the executable codes for the applications (), the application information (), and the transaction logs () may be stored in a content delivery network (i.e., a geographically distributed storage network) to facilitate efficient transmission of applications, etc. to the consumers. In such embodiments, the warehouse () includes functionality to access the content delivery network and manage the data stored in the content delivery network.","In one embodiment of the invention, the application information () is stored in the data repository () as an Extensible Mark-up Language (XML) file. Those skilled in the art will appreciate that the application information may be stored in a format other than (or in combination with) XML. According to one or more embodiments of the invention, the developers also provide the warehouse with application information related to the submitted application. According to one or more embodiments of the invention, the application information may include, but is not limited to, an application name, a subtitle, a description, a category, license requirements (e.g., perpetual, subscription, or free), and a price. However, this application information may also be provided, for example, by the service provider. According to one or more embodiments of the invention, the subtitle is a short description of the invention that accompanies the application name. According to one or more embodiments of the invention, the description may be a popup description or a full description. Further, according to one or more embodiments of the invention, the application information () could include a popup description as well as a full description. According to one or more embodiments of the invention, the popup description will appear when a user hovers over an icon associated with the application in a display. Regarding the full description, according to one or more embodiments of the invention, the full description is made available to users who request more information about an application. Regarding the category, according to one or more embodiments of the invention, a developer chooses a descriptive term from a preexisting list that describes the application (i.e., \u201cSocial Networking,\u201d \u201cSports,\u201d \u201cFinance,\u201d etc.). According to one or more embodiments of the invention, the application information may include other information, such as a help page uniform resource locator (\u201cURL\u201d), one or more icons associated with the application (), and screenshots of the application ().",{"@attributes":{"id":"p-0038","num":"0037"},"figref":["FIG. 3","FIG. 3","FIG. 3"],"b":["300","305","310"]},"According to one or more embodiments of the invention, the user network device () includes information used to identify the user of the device, as well as identifying information for the device itself and routing information. In one embodiment of the invention, the identifying information may include, for example, a user identification (). According to one or more embodiments of the invention, routing information includes an end station identification () and a network end identification (), both of which may be stored in the user network device (). According to one or more embodiments of the invention, an end state identification is a unique identifier assigned to devices such as cable boxes or set top boxes within a consumer household. According to one or more embodiments of the invention, a network end identification is a unique network identifier for each device, such as a cable box or set top box, within an internal cable distribution network. According to one or more embodiments of the invention, the network end identification may be an internet protocol (IP) address for TCP\/IP networks. Those skilled in the art will appreciate that an end station identification and a network end identification may be necessary to transmit a request to the warehouse (). Finally, the user network device () may also include a public key (), used to encrypt messages sent to the warehouse (). The public key is described in greater detail in .","According to one or more embodiments of the invention, the warehouse () may include a number of mappings. These mappings may be stored in a computer readable storage device. According to one or more embodiments of the invention, these mappings include a user identification (UID) to private key mapping (). According to one or more embodiments of the invention, user identification (UID) to private key mapping () allows the warehouse () to identify a user identification in a request and determine a private key to use to decrypt the message. The warehouse () may also include an application to license mapping (). According to one or more embodiments of the invention, application to license mapping () is used to determine licenses that are required to access a particular application stored in the warehouse. The warehouse () may also include a subscription to license mapping (). According to one or more embodiments of the invention, a user may have certain licenses that come with a subscription with the service provider () and this information is stored in the subscription to license mapping (). For example, a user's television service may come with specific applications already available. In another example, the user may have a subscription to HBO in addition to basic cable and this subscription may include applications that HBO has created to compliment their movie or show offerings. In this example, if the show is about pirates, then HBO may create a video game application based on pirates. This application may be then available as part of the HBO subscription.","Returning to the discussion of , according to one or more embodiments of the invention, the service provider () may provide numerous subscriptions to users, and each of these subscriptions may allow varied access to applications in the warehouse (). The warehouse () may also include a user identification to license mapping (). According to one or more embodiments of the invention, user identification to license mapping () is used to identify licenses that are associated with a specific user. For example, the user associated with the user identification may have purchased licenses separately from their subscription.","According to one or more embodiments of the invention, the service provider () includes a mapping between a user identification and a subscription (). Said another way, the service provider () tracks subscription information for a particular user.","According to one or more embodiments of the invention, in order to obtain access to an application, the user network device () initially sends an app request () to the warehouse (). According to one or more embodiments of the invention, the app request () includes a user identification, end station identification, network end identification, and requested application information. According to one or more embodiments of the invention, everything but the user identification is encrypted using the public key.","According to one or more embodiments of the invention, the warehouse () receives the app request (), identifies the user identification, obtains the private key associated with the user identification from the user identification private key mapping (), and decrypts the application request (). The warehouse () then sends a subscription request () to the service provider () in order to determine the subscription associated with the user.","According to one or more embodiments of the invention, the service provider () identifies the subscription information using the user identification subscription mapping (). The service provider () returns the subscription information () to the warehouse ().","According to one or more embodiments of the invention, the warehouse () determines that, based on the user's subscription information (), the user has a license for the requested application. Thus, the warehouse () generates an application package (), and sends the application package () to the user network device (). According to one or more embodiment of the invention, the warehouse () may identify a specific version of the application based on the end station identification. Further, according to one or more embodiments of the invention, the warehouse () sends the application package () to the user network device () using the routing information, such as the end station identification and the network end identification. According to one or more embodiments of the invention, the routing information may also include other device identification.",{"@attributes":{"id":"p-0047","num":"0046"},"figref":["FIG. 4","FIG. 4"]},"At ST , one or more Java Archives (JARs) for the application are obtained (generated, or created, etc) by a developer (or other third-party providing applications to the warehouse). At ST , the application information for the application is obtained. In one embodiment of the invention, the application information may be obtained (generated, or created) using any known mechanisms in the art including completing a web-based form, providing a text document, providing an XML document, etc. At ST , the JAR(s) and the corresponding application information are provided to the warehouse. According to one or more embodiments of the invention, the application and application information are provided to the warehouse by sending them across a network.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 5","FIG. 5","FIG. 4"]},"At ST , the JAR and corresponding application information are received. At ST , the content (e.g., textual, graphical, and\/or audio content) of the application is reviewed. In one embodiment of the invention, the content of the application may be reviewed by a reviewer via the application reviewer service. According to one or more embodiments of the invention, the text of the content submission is reviewed manually, and the JAR is reviewed automatically to check for viruses and to verify the code. According to one or more embodiments of the invention, the JAR and corresponding application information may be verified either manually or automatically (for example using emulators).","At ST , the access privileges for the application are determined. The access privileges may be determined, in part, from the application information. Further, the access privileges may be determined, in part, using rules specified by (or accessible to) the application reviewer service. In one embodiment of the invention, the access privileges may specify any level of granularity. For example, the access privileges may be (i) sandbox-only execution (i.e., the application may only execute within the sandbox, (ii) limited access execution outside a sandbox on a client device (i.e., the application may access a specified subset of the resources\/data\/peripherals outside of the sandbox), and (iii) full access execution on the client device.","At ST , the DRM settings for the application are set. The DRM settings may specify any type of DRM restrictions on the application. For example, according to one or more embodiments of the invention, DRM restrictions may be placed on the application that allow a user to merely access a preview of the application before the application is purchased. Another example is that DRM restrictions may be placed on an application that limit the number of times the application may be accessed, or set a time limit for how long an application is accessible. In one embodiment of the invention, the ST  may be performed by the DRM service.","At ST , the JAR(s), access privileges, and DRM settings are packaged for deployment using JNLP. In one embodiment of the invention, the warehouse includes the functionality to perform all the necessary action required at ST . Those skilled in the art will appreciate that the packaging may include creating multiple instances of the deployment package, where each instance of the deployment package is created for a specific type of user network device (e.g., one instance for deployment directly on a television system, one instance for deployment on a set top box, etc.). At ST , the application is published in the warehouse (i.e., the application may be installed or previewed by user network devices). According to one or more embodiments of the invention, a published application is accessible through the content delivery service of the warehouse. In one embodiment of the invention, ST -ST  may be performed by the content delivery service.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 6","FIG. 6"]},"At ST , a user requests a public key from the service provider. According to one or more embodiments of the invention, the public key is requested from a device such as a smart television or a set to box. According to one or more embodiments of the invention, the service provider is configured to generate public and private keys to distribute to user client devices and the warehouse. In one embodiment of the invention, the public key may be pre-loaded on the user network device prior to deploying the device to the user. Alternatively, the public key may be transferred from the service provider to the user network device using a different communication channel than the channel used to communicate the request to the service provider.","At ST , the user receives and stores the public key. According to one or more embodiments of the invention, the public key is associated with a subscription the user has with the service provider. Thus, according to one or more embodiments of the invention, regardless of how many user network devices are covered by a user's subscription, the user may use the same public key. According to one or more embodiments of the invention, the public key may also be associated with a particular device. For example, if a user has more than one user network device associated with a single subscription, the service provider may generate a separate public key for each device, according to one or more embodiments of the invention.","At ST , the service provider transmits a private key to the warehouse. According to one or more embodiments of the invention, the service provider transmits the private key along with the user identification, such that the warehouse may create a mapping between the private key and the user identification (e.g., user identification private key mapping () from ). At ST , the warehouse stores the private key. According to one or more embodiments of the invention, the private key is stored in the user identification private key mapping. Thus, the warehouse may identify the proper private key to use to decrypt a package using the user identification.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":["FIG. 7","FIG. 7"]},"At ST , a user logs into the warehouse, for example, using the content delivery service. In one embodiment of the invention, the user may access the warehouse via a web-browser (e.g., Firefox\u2122, Google Chrome\u2122, Internet Explorer\u2122, or any microbrowser, minibrowser, or wireless internet browser) and\/or via another application installed on the user network device (Firefox\u00ae is a registered trademark owned by Mozilla, Inc., Mountain View, Calif.; Google Chrome\u00ae is a trademark owned by Google, Inc., Mountain View, Calif.; and Internet Explorer\u00ae is a registered trademark owned by Microsoft Corporation, Redmond, Wash. For example, according to one or more embodiments of the invention, a user may access the warehouse using a menu provided by the service provider to browse and select available television programming.","At ST , an application is selected by the user via the user network device. At ST , a determination is made about whether the user wants to install the application or preview the application. If the application is to be installed, then method proceeds to ST . If the application is to be previewed, then the method proceeds to ST .","At ST , a request is received by the warehouse to deploy the application package. According to one or more embodiments of the invention, the request may be generated by the user using a remote control for the user network device (i.e., a television remote control or a remote control for a set top box). Those skilled in the art will appreciate that the deployment package may be requested by the user using other traditional input devices, such as a mouse or a keyboard configured to send and receive signals to and from the user network device. As described above, the request may include such information as a user identification, a set top box or other user network device identification, requested application information, and routing information, such as an end station identification and network end identification. This is described in greater detail above, in .","At ST , the subscriber (i.e., the subscription account associated with the user network device) is authenticated. This is described in greater detail in . At ST , transfer of the deployment package is initiated using JNLP. According to one or more embodiments of the invention, there may be multiple deployment packages for a particular application. The appropriate deployment package(s) may be determined using information from the request, such as the user network device identification. According to one or more embodiments of the invention, the deployment package is generated using the routing information (See ) from the request.","At ST , the deployment package is stored in persistent storage. According to one or more embodiments of the invention, the user network device includes persistent storage where the deployment package is stored. According to one or more embodiments of the invention, this allows the user to deploy the package from the persistent storage rather than requesting the package from the warehouse a second time.","Returning to ST , if the user wishes to preview an application, it is not necessary to obtain the entire deployment package, according to one or more embodiments of the invention. The flowchart continues at ST . According to one or more embodiments of the invention, a user may have portions of applications or previews of applications cached in the user network device. This may reduce the need to transmit data between the user network device, warehouse, and service provider. According to one or more embodiments of the invention, a preview of the requested application may be cached in the user network device memory. If, at ST , a determination is made that a preview is not cached, then it is necessary to obtain a preview from the warehouse, and the flowchart continues at ST .","At ST , the user network device sends a request for the preview to the warehouse. Although not shown in the flowchart, the request may include the request may include such information as a user identification, a set top box or other user network device identification, requested application information, and routing information, such as an end station identification and network end identification. The warehouse identifies the type of user network device from the request.","At ST , the warehouse renders a deployment package for the type of user network device. For example, for a specific requested application, the warehouse may have a first version to deploy on set top boxes, and a second version to deploy directly on televisions. Thus, according to one or more embodiments of the invention, the warehouse renders the deployment package based on information identified in ST .","At ST , the warehouse initiates transfer of the deployment package to the user network device using JNLP. At ST , the user network device reeves the deployment package and stores it in volatile storage. According to one or more embodiments of the invention, the deployment package is stored in the temporary storage (or in a temporary manner) on the user network device. For example, the deployment package is stored in volatile memory and is only available on the client device until the JRE is closed and\/or as specified in the DRM settings. Those skilled in the art will appreciate that the DRM settings for an application which are being previewed may be more restrictive then the DRM settings on an installed application.","Continuing from ST , ST , or, in the instance that a preview version of the application is cached at ST , the flowchart continues at ST . At ST , the application is executed in the JRE on the client in accordance with the access privileges and DRM settings. In one embodiment of the invention, when an application is previewed (e.g., following ST  or ST ), the full application may be sent for previewing or, alternatively, a version with less functionality than the full application (i.e., the \u201cpreview version) may be sent to the client device. Further, once the previewing is complete\u2014e.g., the user has used the application for a specified period of time, turns off the user network device, executes the JVM, then the application may rendered inaccessible to the user network device.","At ST , client usage data is obtained from the user network device (using, for example, JavaFX) related to the application usage on the user network device. The client usage data may include personal identification information (i.e., information which identifies the user of the client device or any other personal\/confidential information of the user of the client device). The personal identification information (or portions thereof) may be removed from the client usage data prior to sending the data to the warehouse. Alternatively, the client usage data is sent to the warehouse with the personal identification information, at which point it is removed by the warehouse prior to sending the client usage data to the developer (or other third-party, which provided the application to the warehouse). At ST , the client usage data is sent to the warehouse.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":["FIG. 8","FIG. 8","FIG. 7"],"b":"708"},"At ST , the warehouse receives a request for an application from a user with a user identification. As described above, the request may include such information as a user identification, requested application information, and routing information, such as an end station identification and network end identification. This is described in greater detail in .","At ST , the warehouse obtains a private key corresponding to the user using the user identification. According to one or more embodiments of the invention, all items in the request, except for the user identification, maybe encrypted using a user network device public key. Thus, according to one or more embodiments of the invention, the warehouse may identify the proper private key with which to decrypt the request using the user identification. For example, the proper private key may be indexed in a user identification private key mapping.","At ST , the warehouse decrypts the request using the private key to obtain routing information and requested application information. At ST , the warehouse obtains current licenses associated with the user identification. According to one or more embodiments of the invention, the warehouse uses a user identification-license mapping in order to determine which licenses a user currently has. At ST , the warehouse determines whether the license for the requested application is one of the licenses currently associated with the user identification. According to one or more embodiments of the invention, the warehouse may use a application license mapping to determine what license the application requires, as well as the current licenses associated with the user identification, as determined at ST .","At ST , a determination is made regarding whether the license for the requested application is one already associated with the user identification. If the license for the requested application is one already associated with the user identification, then the flowchart returns to ST  in . Otherwise, the flowchart continues at ST .","At ST , the warehouse sends the user identification to the service provider as a request for subscription information for the user. At ST , the service provider provides the subscription information to the warehouse. According to one or more embodiments of the invention, the service provider stores a user identification to subscription mapping.","At ST , a determination is made regarding whether the license for the application is covered by the user's subscription. According to one or more embodiments of the invention, the warehouse includes a subscription to license mapping, which details which licenses are included with which subscriptions. If it is determined that the license is covered by the user's subscription, then the flowchart continues at ST , and the license is associated with the user identification. According to one or more embodiments of the invention the warehouse stores this association as part of the user identification subscription mapping. Thus, according to one or more embodiments of the invention, if the user subsequently requests an application that uses the same subscription, the warehouse may identify the license as associated with the user identification, without communicating with the service provider.","Returning to ST , if the license is not covered by the user's subscription, then the user must acquire a license, and the flowchart continues at ST . At ST , the warehouse obtains data for the license purchase from the user. According to one or more embodiments of the invention, this may include such information as user information or financial information. At ST , the data is verified for the license purchase. For example, the warehouse may verify that the data for license purchase meets the entire cost of the license.","At ST , the license is associated with the user identification. According to one or more embodiments of the invention the warehouse stores this association as part of the user identification subscription mapping. Thus, according to one or more embodiments of the invention, if the user subsequently requests an application that uses the same subscription, the warehouse may identify the license as associated with the user identification, without communicating with the service provider. Finally, at ST , the billing information for the license purchase is sent to the service provider. According to one or more embodiments of the invention, the billing information may be included in the data for license purchase form the user. The flowchart then returns to ST  in .",{"@attributes":{"id":"p-0079","num":"0078"},"figref":["FIG. 9","FIG. 9"]},"At ST , execution of the application is initiated on the client device using any known method of initiating an application (e.g., selecting an icon corresponding to the application, entering a command line instruction, etc.). At ST , the current version of the application on the user network device is determined (or otherwise obtained). At ST , a determination is then made about whether the version of the application on the user network device is the latest version, where the latest version is available in the warehouse. If the application on the user network device is the latest version, then the method proceeds to ST ; otherwise, the method proceeds to ST . In one embodiment of the invention, a checksum is calculated for each version of the application using a checksum function (e.g., SHA1, MD5, etc.). In such embodiments, the determination in ST  is performed by comparing the checksum of the version of the application on the device with the checksum of the latest version of the application.","At ST , the deployment package (which may be user network device type specific) that includes the latest version of the application is transferred to the user network device using JNLP","At ST , the deployment package is stored in the persistent storage on the client device. At ST , the application is executed in the JRE on the client in accordance with the access privileges and DRM settings.","At ST , client usage data is obtained from the client device (using, for example, JavaFX) related to the application usage on the client device. The client usage data may include personal identification information (i.e., information which identifies the user of the client device or any other personal\/confidential information of the user of the client device). According to one or more embodiments of the invention, the client usage data may be cached locally on the client device and only transferred periodically. The personal identification information (or portions thereof) may be removed from the client usage data prior to sending the data to the warehouse. Alternatively, the client usage data is sent to the warehouse with the personal identification information, at which point it is removed by the warehouse prior to sending the client usage data to the developer (or other third-party, which provided the application to the warehouse). At ST , the client usage data is sent to the warehouse.","In one embodiment of the invention, a user may access the warehouse using different user network devices. In such cases, a user may have a common user account at the warehouse across all their user network devices and, as such, have rights to install the same application on each of the their user network devices. For example, if user A purchases and installs application 1 on their mobile phone and then subsequently accesses the warehouse from their laptop, user A may install application 1 on their desktop without purchasing an additional copy of application 1.","Embodiments of the invention may be implemented on virtually any type of computer regardless of the platform being used. For example, as shown in , a computer system () includes one or more processor(s) (), associated memory () (e.g., random access memory (RAM), cache memory, flash memory, etc.), a non-transitory computer readable storage device () (e.g., a hard disk, an optical drive such as a compact disk drive or digital video disk (DVD) drive, a flash memory stick, etc.), and numerous other elements and functionalities typical of today's computers (not shown). The computer () may also include input means, such as a keyboard (), a mouse (), or a microphone (not shown). Further, the computer () may include output means, such as a monitor () (e.g., a liquid crystal display (LCD), a plasma display, or cathode ray tube (CRT) monitor). The computer system () may be connected to a network () (e.g., a local area network (LAN), a wide area network (WAN) such as the Internet, or any other similar type of network) via a network interface connection (not shown). Those skilled in the art will appreciate that many different types of computer systems exist, and the aforementioned input and output means may take other forms. For example, the computer system () may be a server system having multiple blades. Generally speaking, the computer system () includes at least the minimal processing, input, and\/or output means necessary to practice embodiments of the invention.","Computer readable program code to perform embodiments of the invention may be stored on a non-transitory computer readable storage medium such as a compact disc (CD), a diskette, a tape, physical memory, or any other physical computer readable storage medium that includes functionality to store computer readable program code to perform embodiments of the invention. In one embodiment of the invention the computer readable program code, when executed by a processor(s), is configured to perform embodiments of the invention.","Embodiments of the invention may also be implemented on virtually any type of user network device regardless of the platform being used. For example, as shown in , a set top box () includes one or more processor(s) (), associated memory () (e.g., random access memory (RAM), cache memory, flash memory, etc.), a non-transitory computer readable storage device () (e.g., a hard disk, an optical drive such as a compact disk drive or digital video disk (DVD) drive, a flash memory stick, etc.), and numerous other elements and functionalities typical of today's set top boxes (not shown). The set top box () may also include input means, such as a television remote (). Further, the set top box () may be operatively connected to a television display device (). According to one or more embodiments of the invention, the television display device () may be a cathode ray tube (CRT) device, a light-emitting diode (LED) display, a plasma display panel (PDP), a liquid crystal display (LCD), organic light-emitting diode display (OLED), surface-conduction electron-emitter display (SED), Laser TV, carbon nanotubes, nanocrystal display, or any other display device used to display broadcast signals. The set top box () may be configured to receive television broadcast signals from a television service provider (), for example, a cable provider.","As another example, as shown in , a television system () includes one or more processor(s) (), associated memory () (e.g., random access memory (RAM), cache memory, flash memory, etc.), a non-transitory computer readable storage device () (e.g., a hard disk, an optical drive such as a compact disk drive or digital video disk (DVD) drive, a flash memory stick, etc.), and numerous other elements and functionalities typical of today's television devices (not shown). The set top box () may also include input means, such as a television remote (). Further, the set top box () may be operatively connected to a television display device (). According to one or more embodiments of the invention, the television display device () may be a cathode ray tube (CRT) device, a light-emitting diode (LED) display, a plasma display panel (PDP), a liquid crystal display (LCD), organic light-emitting diode display (OLED), surface-conduction electron-emitter display (SED), Laser TV, a nanocrystal display, or any other display device used to display broadcast signals. The television system () may be configured to receive television broadcast signals from a television service provider (), for example, a cable provider.","Computer readable program code to perform embodiments of the invention may be stored on a non-transitory computer readable storage medium such as a compact disc (CD), a diskette, a tape, physical memory, or any other physical computer readable storage medium that includes functionality to store computer readable program code to perform embodiments of the invention. In one embodiment of the invention the computer readable program code, when executed by a processor(s), is configured to perform embodiments of the invention."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIGS. 1A-1C"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIGS. 4-9"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIGS. 11A-11B"}]},"DETDESC":[{},{}]}
