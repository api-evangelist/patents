---
title: Methods, systems, and computer program products that request updated host screen information from host systems in response to notification by servers
abstract: A method of providing updated host screen information to a client application utilizing a request-response communications model includes establishing a first connection between the client application and a server application, wherein the server application provides updated host screen information to the client application in response to requests from the client application. A second connection is established between a monitor application and the server application. A notification of the availability of updated host screen information is received via the second connection at the monitor application. The updated host screen information is requested over the first connection responsive to receiving the notification. The requested updated host screen information is received at the client application and displaying utilizing the client application. Related systems and computer program products are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06880010&OS=06880010&RS=06880010
owner: International Business Machines Corporation
number: 06880010
owner_city: Armonk
owner_country: US
publication_date: 19990910
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The present invention relates to network computing in general, and more particularly, to the communication between servers and clients.","Some applications that run on legacy host systems can be accessed using a display terminal running a terminal protocol. The terminal protocol may enable communications to and from the display terminal, such as when a screen is transmitted to the display terminal and when user input is transmitted to the host system. Such protocols are sometimes referred to as \u201c2 way asynchronous\u201d communications. In such a terminal protocol, for example, updated (or new) screens generated by the host application may be transmitted to the display terminal without a request from the user. In other words, updated screens may be automatically transmitted to the display terminal.","It is also known to provide access to applications running on legacy host systems over a network, using a server running a terminal emulation program. For example, screens generated by host applications traditionally accessed using a display terminal using a terminal protocol may be reformatted by a server terminal emulation program into markup language. The markup language format may then be provided in response to a request from a web browser application. Thus, the use of a server terminal emulation program enables the legacy host system to be accessed using a browser over, for example, the World Wide Web (WWW), the internet or an intranet, rather than a display terminal over a terminal protocol.","Unfortunately, some of the communications protocols used to provide terminal emulation between browsers and legacy host systems may not provide the same communications functions provided by the terminal protocols described above. For example, the Hypertext Transport Protocol (HTTP) utilizes a synchronous \u201crequest-response communications model.\u201d In HTTP, the server typically only provided information to the browser in response to a request from the browser. In such a system, it may be difficult to provide the asynchronous communications described above. In particular, it may be difficult to provide updated screens to the browser automatically.","Some systems may allow a user to provide manual requests for updated screens to the legacy host system which may cause the server to provide an updated screen generated by the legacy host system. For example, a refresh button may be provided wherein the user may request an updated screen from the legacy host system. In addition to requiring user intervention, this type of solution to the synchronous communications problem may not provide an updated host screen because the refresh request may occur prior to the generation of an updated screen. Accordingly, there is a need for methods, systems, and computer program products that allow improved communication with legacy host applications over the WWW.","It is, therefore, an object of the present invention to allow improved communication between client applications and legacy host applications where a synchronous communication model is used.","It is a further object of the present invention to allow synchronous clients to receive asynchronous communications without requiring user intervention.","These and other objects of the present invention are provided by methods, systems, and computer program products that establish a first connection between a client application and a server application, wherein the server application provides updated host screen information to the client application in response to requests from the client application by establishing a second connection between a monitor application and the server application. A notification of the availability of updated host screen information is then received via the second connection at the monitor application and a request for updated host screen information is transmitted over the first connection responsive to receiving the notification. The requested updated host screen information is received at the client application and displayed utilizing the client application.","By utilizing an alternate or second connection to the client, the server may notify the client of the availability of host screen information and, thereby, prompt the client to request the host screen information using the first, synchronous, connection. Because client application requests the updated host screen information in response to the notification from the server, the need for the user to manually request updated host screen information may be reduced.","In one embodiment, the monitoring application which monitors the alternate connection for notifications may be relatively small notification code or an applet that is embedded in a web page description (HTML) provided to the client. When executed, the notification code establishes a notification connection to the server. When the notification code receives notification of the availability of updated host screen information, the notification code signals the client application and terminates. Accordingly, the relatively small notification code can be more readily embedded in the HTML description and may reduce the time needed to download the updated host screen information.","As will be appreciated by those of skill in the art, the present invention may be embodied as methods, systems (apparatus) and\/or computer program products.","The present invention now will be described more fully hereinafter with reference to the accompanying drawings, in which preferred embodiments of the invention are shown. This invention may, however, be embodied in many different forms and should not be construed as limited to the embodiments set forth herein; rather, these embodiments are provided so that this disclosure will be thorough and complete, and will fully convey the scope of the invention to those skilled in the art. Like numbers refer to like elements throughout.","As will be appreciated by one of skill in the art, the present invention may be embodied as methods, systems or computer program products. Accordingly, the present invention may take the form of an entirely hardware embodiment, an entirely software embodiment or an embodiment combining software and hardware aspects.","The present invention is described herein using flowchart illustrations and block diagrams. It will be understood that each block of the block diagrams or flowchart illustrations, and combinations of blocks in the block diagrams or flowchart illustrations, can be implemented by computer program instructions. These program instructions may be provided to a processor(s) within a computer system, such that the instructions which execute on the processor(s) create means for implementing the functions specified in the block diagrams or flowchart block or blocks. The computer program instructions may be executed by the processor(s) to cause a series of operational steps to be performed by the processor(s) to produce a computer implemented process such that the instructions which execute on the processor(s) provide steps for implementing the functions specified in the block diagrams or flowchart block or blocks.","Accordingly, blocks of the block diagrams or flowchart illustrations support combinations of means for performing the specified functions, combinations of steps for performing the specified functions and program instruction means for performing the specified functions. It will also be understood that each block of the block diagrams or flowchart illustrations, and combinations of blocks in the flowchart illustrations, can be implemented by special purpose hardware-based systems which perform the specified functions or steps, or combinations of special purpose hardware and computer instructions.","The clients and the servers described herein (in whole or in part) may be remote from one another or resident in the same location. The phrase \u201cclient application\u201d includes applications, such as browsers, that request information, such as host screens generated by host systems. As used herein the term \u201cterminal emulation\u201d includes any form of user or programmable access and interactions with host screens generated by host systems. Although the present invention is described with reference to terminal emulation, it will be understood that the scope of the present invention includes other systems and services.",{"@attributes":{"id":"P-00025","num":"00025"},"figref":["FIG. 1","FIG. 1"],"b":["110","115","105","105","120","121","120","110"]},"During operation, the server  receives host screen information from the host system . The host screen information can be generated responsive to a request by the server  or responsive to non-server events. For example, the host system  can transmit host screen information to the server  in response to user input or a change in the status of the host system . Accordingly, the host screen information generated by the host system  can update the host screen information previously received by the server . It will be understood that the phrase \u201cupdated host screen information\u201d includes host screen information not previously received by the server  as well as host screen information previously received by the server . For example, when the server  receives host screen information previously received by the server , the host screen information provided by the host system  represents updated host screen information.","When the server  receives updated host screen information, an Application Programming Interface (API)  generates a message which is used to notify the client application  that the server  has received updated host screen information. The notification is transmitted to the client application  over a notification connection  from a first server socket  to a first client socket . The API can be Extended High Level Language API, Host Access Class Library, Open Host Interface Objects, or the like.","The server  receives requests for updated screen information from the client application  via a request connection . It will be understood to those having skill in the art that the request connection  may be, for example, the HTTP connection and can carry information according to the response-request communication model. It will be understood that, the server can be a mid-tier WWW server that conducts terminal emulation sessions for multiple client applications  running on respective client workstations.","A connection can be provided by a communications protocol, such as Transmission Control Protocol\/Internet Protocol (TCP\/IP). A connection between applications can be accessed using sockets. For example, according to , the API  accesses the first connection  to the client application  via the first server socket . The client application  accesses the first connection  via the first client socket . The notification connection  and the request connection  can be provided over separate communications links or a single communications link, such as a modem.","An application  running on the server  formats the updated host screen information as web page descriptions using Host On Demand (HOD) functions to generate a markup language format, such as Extensible Markup Language (XML) or Hypertext Markup Language (HTML) for the updated host screen information. The formatted updated host screen information (e g, a web page description) is transmitted to the client application  over the request connection  from a second server socket  to a second client socket . HOD functions and reformatting of updated host screen information are discussed, for example, in U.S. patent application Ser. No. 09\/353,218 filed Jul. 14, 1999, entitled which is assigned to the assignee of the present application and which is incorporated herein by reference in its entirety.","The client application  displays the formatted updated host screen information as a web page . The formatted updated host information can include notification code  or application, such as a Java\u00ae applet, which can be invoked by the client application . For example, the server  can embed the notification code  in the formatted updated host information. When the formatted updated host information is received, the client application  recognizes the embedded notification code  and runs it. Alternately, the formatted updated host screen information includes a reference locator, such as a Uniform Resource Locator (URL) which can be used to locate and download the referenced notification code . The client application  can be a web browser, such as Netscape Navigator\u00ae marketed by Netscape Communications Corporation based in Mountain View, Calif.","The client application  can run on a client workstation which is not shown.","The client workstation can be an input device with a display such as a computer terminal running the client application , a personal computer, a networked computer, a smart phone, a personal digital assistant, a handheld computer, or the like.","In operation, the notification code  establishes the notification connection by initializing the first client socket  to the first connection  and waits for a notification from the server  over the notification connection . The notification from the server  indicates that the server  has received updated host screen information associated with a terminal emulation session conducted for the client application . The notification code  transmits a request for formatted updated host screen information to the server  over the request connection . According to the present invention, the request for the updated host screen information via the request connection  is responsive to the notification from the server via the notification connection .",{"@attributes":{"id":"P-00035","num":"00035"},"figref":"FIG. 2","b":["110","130","115","130","115","115","115","115","115","115","115","115","130","115"],"i":["a-c ","a-c","a-c ","a-c","a-c","a ","a","b ","b","c ","c","a-c ","a-c. "]},{"@attributes":{"id":"P-00036","num":"00036"},"figref":["FIG. 3","FIG. 3"],"b":["105","110","140","122","115","110","124","110","115"]},{"@attributes":{"id":"P-00037","num":"00037"},"figref":["FIG. 4","FIG. 4"],"b":["124","115","110","405","110","115","124","115","122","140","110","410","140","110","122"]},"The server  receives updated host screen information from the host system  and notifies the client application  of the availability of the updated host screen information via the notification connection  (block ). For example, the server  can transmit a message via the notification connection  to the notification code . Upon receiving the notification of available updated host screen information, the client application  transmits a request for the formatted updated host screen information to the server  (block ) via the request connection . The server  responds to the request by transmitting the formatted updated host screen information to the client application  via the request connection . The formatted updated host screen information is received by the client application  (block ) and displayed (block ).",{"@attributes":{"id":"P-00039","num":"00039"},"figref":["FIG. 5","FIG. 5"],"b":["110","117","122","505","110","115","124","510","140","115"]},"The notification code  initializes the first client socket , establishing the notification connection  between the server  and the notification code  and blocks on a read of the first client socket  (block ). In other words, the notification code  continues to wait for a message to be received from the server  over the notification connection .","When the server  receives updated host screen information from the host system  (block ), the server  transmits a notification message to the notification code  over the notification connection (block ). The notification code  receives the notification message and signals the client application . The notification code  may then terminate.","The client application  requests formatted updated host screen information from the server  (block ) in response to the notification message, whereupon the server  transmits the formatted updated host screen information received from the host system  (block ). The formatted updated host screen information includes another notification code  which initializes the first client socket  of the notification connection  between the server  and the client application (block ).","A detailed example of operations of the present invention will now be described in reference to . After establishing the request and notification connections ,  the host screen , including host screen information, shown in  is generated by the host system . The server  notifies the notification code  of the availability of updated hosts screen information over the notification connection .","The notification code  receives the notification and signals the client application . The client application  requests the formatted updated host screen information over the request connection . The server  formats the host screen information as fields as described in . For example, the first row of the name information can be formatted as:\n\n","The fields included in the updated host screen information are translated to HTML, as shown below, to provide the formatted updated hosts screen information. It will be understood that fields included in the updated hosts screen information that are not recognized by the application  can be ignored.\n\n","The notification code , or a reference thereto, is included in the HTML description. For example, a reference to the notification code  can be expressed as:\n\n","The HTML description of the updated host screen information is downloaded to the client application . The client application examines the HTML description, recognizes the reference to the notification code \u201cMyClass.class\u201d, accesses the notification code , runs the notification code , and renders the formatted updated host screen information as shown in FIG. . The notification code  initializes the first client socket  and waits for a new notification of available updated host screen information over the notification connection .","In the drawings and specification, there have been disclosed typical preferred embodiments of the invention and, although specific terms are employed, they are used in a generic and descriptive sense only and not for purposes of limitation, the scope of the invention being set forth in the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"P-00013","num":"00013"},"figref":"FIG. 1"},{"@attributes":{"id":"P-00014","num":"00014"},"figref":"FIG. 2"},{"@attributes":{"id":"P-00015","num":"00015"},"figref":"FIG. 3"},{"@attributes":{"id":"P-00016","num":"00016"},"figref":"FIG. 4"},{"@attributes":{"id":"P-00017","num":"00017"},"figref":"FIG. 5"},{"@attributes":{"id":"P-00018","num":"00018"},"figref":"FIG. 6"},{"@attributes":{"id":"P-00019","num":"00019"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
