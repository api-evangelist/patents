---
title: Using ecoprint for cloning of applications
abstract: Methods and systems for automating technology integrations are presented. A source application system that connects to external technologies, such as plug-ins, is ported from one computing environment or ecosystem to another and thereby integrated on the other ecosystem. The porting is facilitated by the extraction of information and code from the source environment, creating an XML “ecoprint” payload file, copying the ecoprint file to the target system, and applying an integration defined by the XML ecoprint payload file to connect and otherwise integrate the application system with external technologies in the target environment.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08473943&OS=08473943&RS=08473943
owner: Oracle International Corporation
number: 08473943
owner_city: Redwood Shores
owner_country: US
publication_date: 20090831
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCES TO RELATED APPLICATIONS","BACKGROUND OF THE INVENTION","BRIEF SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["Not Applicable","1. Field of the Invention","The present disclosure relates generally to the field of data processing and installation of software. Specifically presented are systems and methods for automating technology integrations such as porting an enterprise-level application that connects to external technologies from one environment or \u201cecosystem\u201d to another.","2. Description of the Related Art","A software application typically resides on a computer or set of computers. The computer hardware can be hooked to a network, such as an intranet or the Internet. The computer or set of computers, components, attached peripherals, and other hardware, along with their operating systems, applications, plug-ins, settings, connections, and other software, constitute what is sometimes called an \u201cecosystem.\u201d A software application that functions properly in one ecosystem (e.g., a development environment or laboratory) may not work properly in another ecosystem (e.g., a production system or customer's office network). Among other things, small differences in available components or software settings may render a part of or the whole software application inoperable.","Often, it is important that a software application developed on one ecosystem (i.e., a source ecosystem) function properly in another ecosystem (i.e., a target ecosystem). Therefore, much time, labor, and planning effort has been spent attempting to ensure that applications are integrated and tested properly on target ecosystems. Retail applications, of which thousands or millions of copied are sold, are often distributed with a specially designed installation executable that installs the retail application to a target environment (e.g., a retail customer's PC). The specially designed executables are typically self-contained (versus referring to many libraries), patched fewer times, with shorter lifespans, and tested on many different source environments before distribution; however, their one-size-fits-all approach may not be suitable for mission critical, high-end applications. High-end applications, for which fewer copies are distributed, are more heavily integrated into their ecosystem and patched with many patches over decades of use. They are often cloned or copied from a specialized source environment to a target environment and then manually integrated with their ecosystem.","In cloning an application system, sometimes called a \u201csource application system,\u201d customers either manually or through the use of tools create a copy of the file system image. The new image's configuration files are re-configured or modified so as to be able to restart the technology and application machine processes, creating a new application instance, sometimes called a \u201ctarget application system.\u201d Then, the customer hires consultants to manually re-integrate the target application system with other applications and technologies external to the source application system with which the source system was integrated. Often, the consultants will scavenge or otherwise analyze the source environment in great detail to understand how the source application system interacts with the source environment before integration. Understanding how the source application system interacts with the source environment can help determine how to integrate the application system on the target environment. This process is sometimes called an \u201cexternal integration\u201d between the source application system and its application ecosystem.","Some enterprise level applications are written to interoperate with each other and are bundled in \u2018suites.\u2019 Such applications can include enterprise resource planning, customer relationship management, and supply-chain management applications, among other software applications. These applications can further be integrated with other applications, sometimes referred to as \u201cexternal technologies.\u201d","External technologies can include plug-ins and other software that are called from, referenced to, serviced by, or otherwise directly or indirectly connected to the application.","As many applications have become mission critical for businesses, it has become more and more important to ensure those applications are thoroughly integrated and tested. Such integrations typically require experienced, skilled, and knowledgeable information systems consultants who spend time and effort to understand the source and target environments. Consequently, costs have escalated for external integrations of mission critical software applications.","Embodiments in accordance with the present disclosure relate to methods and systems for cloning or otherwise porting an application from one hardware\/software environment to another. The source application system and its connections with external technologies in a source ecosystem can be scanned to determine an \u201cecoprint\u201d of the source application in the source ecosystem. In addition, the source ecosystem can be mined to determine possibly relevant settings and code which may be relied upon by the source application. This scanning and mining can include the automated scanning of references of foreign objects and entities within the file system and the databases of the source system. From the determined ecoprint and settings, an ecoprint file can be created. This ecoprint file includes information which captures external ecosystem integration information relevant portions of the state of the source application and the source ecosystem. The ecoprint file can then be packaged into an integration payload file, along with other files. The integration payload file is then copied, moved, or otherwise transferred to a target ecosystem and extracted. The ecoprint file can then be used to integrate the application on the target system with external technologies on the target system.","An integration action, which can be called \u201cloading\u201d or \u201cstamping,\u201d can include integration to work with a new file system, a new machine name, and runtime parameters such as port numbers (e.g., a new port range). Configuration settings, called \u201cecoprint settings,\u201d cover the integration of the system.","Configuration settings or elements of an application can include integration elements and references to external technology that help delineate the behavior of the application.","The ecoprint file that includes the configuration settings is preferably an extensible markup language (xml) file. The file can include a command reference or references to code that can implement parts of an integration. The file, which can be multiple files, can be federated into a single, standard distribution file, such as a zip file (or self-extracting zip file), a tar file, a cab file, and other such archive and\/or compression and\/or data recovery file formats as known in the art.","One embodiment relates to a method of porting from one computing environment to another an application that connects to an external technology. The method includes extracting a set of information and a set of code from a source environment. The set of information includes external integration information between an application and an external technology. The method includes creating a definition file (discussed below) having a technology definition section, feasibility information section, and a configuration section using the set of information. The method further includes packaging the definition file and the set of code into an integration payload file, the set of information and the set of code defining the integration. The method can also include transferring the payload file to a target environment and applying the integration defined in the payload file to the target environment. The integration connects the application and the external technology in the target environment.","Yet other embodiments relate to systems and machine-readable tangible storage media which employ or store instructions for the methods described above.","A further understanding of the nature and the advantages of the embodiments disclosed and suggested herein may be realized by reference to the remaining portions of the specification and the attached drawings.","The figures will now be used to illustrate different embodiments in accordance with the invention. The figures are specific examples of embodiments and should not be interpreted as limiting embodiments, but rather exemplary forms and procedures.",{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 1","b":["102","102","102"]},"Source application system  is integrated on source ecosystem . Source application system  includes any number of software applications (e.g., a suite of software applications) and integrated modules, plug-ins, and other software components. Source application system  is to be moved, copied, or otherwise transferred to another system (discussed below). Source application system  has references to, references from, reliances, shared settings, or otherwise has direct or indirect external connections  to external technologies, such as external technology .","External technology  can include applications, plug-ins, dynamic-link libraries, or other computer software not in the core group of source application system  software. For example, external technology  can be any software that is not part of a default installation of source application system .","External integration information , which is part of the source ecoprint definition file, is extracted from source ecosystem  and used to create a definition file which can be packaged in a payload file or set of payload files. The payload file and its contents thus define the integration of source application system .","External integration information  includes information about external connections  as well as information about source ecosystem  or the environment in which source application system  runs. External integration information can include source code or other computer-readable instructions that help define or perform an integration. One embodiment can automatically scan source ecosystem  to gather external integration information.","Using external integration information  (i.e., part of the ecoprint of source application system ), source application system  can be integrated on another ecosystem with other external technologies.","An integration on the other ecosystem can be previewed (or reviewed) by an administrator or operator to determine which elements of an application system are to be applied. The administrator can be given a list of elements to transfer over and install to the target system, and said administrator can exercise control over which elements will be applied. For example, a list of elements to transport over and install may be given in an interactive user prompt in which the user (administrator) can select or deselect elements or components to install. The list of elements can effectively be the payload file.","The descriptions for target ecosystem , target application system , target external integration information , target external technology , and target external connections  are generally the same as for their source counterparts with the exception that they are on target ecosystem . In the exemplary embodiment, target application system  is a copy of source application system . Target external technology  is the same as external technology  but with a different version, instance identifiers, and thus slightly different characteristics.","Continuing with the explanation of the exemplary embodiment, the payload file (or set of files) is compressed into a zip format or otherwise prepared for transport into a single payload zip file. The resulting payload zip file is moved, copied, ftp'd (using file transfer protocol), or otherwise transferred to target ecosystem  where the payload zip file is uncompressed, extracted, or otherwise unpackaged for access on target ecosystem .","Using the payload zip file, the integration defined by the definition file and other contents of the payload file are applied to the target environment, thus connecting the target application system  to the target external technologies. The target external technologies, such as target external technology , are pre-installed or separately placed on target ecosystem .","An embodiment extracts target information from the target environment, target ecosystem , installs, auto-executes, or otherwise deploys a script section, and sets one or more configurations in target ecosystem .",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 2A"},"As shown in the figure, definition file  has several sections, including sections -. More sections can be included in the file as necessary to integrate the system, or sections can be omitted if they are not necessary or are unused.","Application (source system) definition section  includes names and definitions of various external technologies that are integrated with a source application system. For example, the name and globally unique identifier (GUID) of an essential add-in can be included.","Technology definition section  includes names and definitions of various external technologies that are integrated with a source application system.","Feasibility information section  includes information on what versions and deployment types the technologies must possess of an integration to be feasible. For example, a server process may have to be started in servlet mode as opposed to server mode for the integration to be feasible. As another example, feasibility information section  can include version information for a type library.","Configuration information section  includes configuration needs for the integration. For example, the type of communication protocol, such as hypertext transport protocol (HTTP) or HTTP over Secure Socket Layer (HTTPS), can be included. Other examples of configuration needs include the identifiers of the web entry host, web entry domain and port, accelerator, web entry portal, regular protocol, local protocol, and node list.","Payload definition section  includes a list of files or code that will require packaging for the integration. This can include files with connectivity code for adaptors and plug-ins.","Script section  defines functions and methods for configuration, feasibility, etc. For example, configuration methods to set up load balancing on a set of nodes as well as what actions to perform upon a failure are defined. Script section  can include code for target definitions and action names by which the code will be invoked. Payload methods can include code and\/or document references, such as readme files which instruct an installing technician on manual steps to the installation process.","A technology definition file is essentially the same format as an ecoprint file except that a technology definition file is created from an external technology's point of view. A technology definition file can be provided by a third party who manufactures the external technology.","Definition files are preferably coded in extensible markup language (xml). However, other formats besides xml are envisioned, including format in ASCII, binary, or other encodings.",{"@attributes":{"id":"p-0050","num":"0049"},"figref":"FIG. 2B","b":["232","248","240","232","248","244","246","232","248","246","246","242"]},{"@attributes":{"id":"p-0051","num":"0050"},"figref":"FIGS. 3A-3C"},{"@attributes":{"id":"p-0052","num":"0051"},"figref":"FIG. 3A"},"Source application system  may be embodied as source application system  (of ), and external technology  may be embodied as external technology  in source ecosystem .","Target application systems  and  are installed instances of the unmodified and modified, respectively, source application systems on the target environment. Likewise, target external technologies  and  are installed instances of unmodified and modified, respectively, target technologies on the target environment.","It is preferable that some steps occur at the source and some steps occur at the target. In the exemplary embodiment of , steps that occur at the source include determining the target environment and selecting from a stored extraction the matching technology in question. Preparatory actions for technology integration include registering external technology  (\u201cT\u201d) in source application  (\u201cA\u201d), packaging of a payload, and performing target technology configuration preparation. Steps that then occur on the target include stamping\/integrating and activating. Stamping or integrating can be by remote integration (RI), which can require that the target's application programming interfaces (APIs) are remotely invocable. Stamping or integration can also use a remote invocation client (RIC), which can assume that the target's client code was delivered to the source. Stamping or integrating can, of course, be performed by payload delivery and launch (PDL), which assumes that the target's client code was delivered to the source. A final step that can then occur on the source include configuring the source and activating the link.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 3B"},"As in the previously described embodiment, it is preferable that some steps occur at the source and some steps occur at the target. In the exemplary embodiment of , steps that occur at the source include determining the target environment and performing extraction of information in source A. Preparatory actions for technology integration include packaging of the payload and configuring the target technology configuration. Steps that then occur on the target include stamping in target instance A\u2032 and stamping or integrating, either by RI, RIC, or PDL as described previously.",{"@attributes":{"id":"p-0058","num":"0057"},"figref":"FIG. 3C"},"In the exemplary embodiment of , steps that occur at the source include extracting environment information into a package or payload file. The package includes required data for A\u2032 and changes for T\u2032. An administrator is interviewed to determine relevant and desirable portions of the integration, and the integration information is modified per the interview. The integration information is then used to stamp or integrate A\u2032 and T\u2032 in the target environment.","An application with multi-node dimensionality can add two subcases to the family of use cases discussed above. A first subcase will include multi-node source application extraction. A second subcase will include multi-node target application stamping.","A technology with multi-node dimensionality can add one subcase to the family of use cases. That subcase will include multi-node target technology stamping.","Although a single node is a simplifying assumption, one skilled in the art could envision multiple target nodes.",{"@attributes":{"id":"p-0063","num":"0062"},"figref":"FIG. 4","b":["402","404","406","408","410","412","414","416","418"]},"Fingerprinting, or the hash of definition files without any instance, can identify a payload with an application definition and technology definition identity. Alternatively, fingerprinting can identify a definition with just a technology definition identity. This can be used for quick comparisons of instance integrations.",{"@attributes":{"id":"p-0065","num":"0064"},"figref":"FIG. 5","b":["500","512","514","516","518","512","514","516","518","512","514","516","518","512","514","516","518","510","500"]},"In most embodiments, the system  includes some type of network . The network may can be any type of network familiar to those skilled in the art that can support data communications using any of a variety of commercially-available protocols, including without limitation TCP\/IP, SNA, IPX, AppleTalk, and the like. Merely by way of example, the network  can be a local area network (\u201cLAN\u201d), such as an Ethernet network, a Token-Ring network and\/or the like; a wide-area network; a virtual network, including without limitation a virtual private network (\u201cVPN\u201d); the Internet; an intranet; an extranet; a public switched telephone network (\u201cPSTN\u201d); an infra-red network; a wireless network (e.g., a network operating under any of the IEEE 802.11 suite of protocols, GRPS, GSM, UMTS, EDGE, 2G, 2.5G, 3G, 4G, Wimax, WiFi, CDMA 2000, WCDMA, the Bluetooth protocol known in the art, and\/or any other wireless protocol); and\/or any combination of these and\/or other networks.","The system may also include one or more server computers , ,  which can be general purpose computers, specialized server computers (including, merely by way of example, PC servers, UNIX servers, mid-range servers, mainframe computers rack-mounted servers, etc.), server farms, server clusters, or any other appropriate arrangement and\/or combination. One or more of the servers (e.g., ) may be dedicated to running applications, such as a business application, a Web server, application server, etc. Such servers may be used to process requests from user computers , , , . The applications can also include any number of applications for controlling access to resources of the servers , , .","The Web server can be running an operating system including any of those discussed above, as well as any commercially-available server operating systems. The Web server can also run any of a variety of server applications and\/or mid-tier applications, including HTTP servers, FTP servers, CGI servers, database servers, Java servers, business applications, and the like. The server(s) also may be one or more computers which can be capable of executing programs or scripts in response to the user computers , , , . As one example, a server may execute one or more Web applications. The Web application may be implemented as one or more scripts or programs written in any programming language, such as Java\u00ae, C, C# or C++, and\/or any scripting language, such as Perl, Python, or TCL, as well as combinations of any programming\/scripting languages. The server(s) may also include database servers, including without limitation those commercially available from Oracle\u00ae, Microsoft\u00ae, Sybase\u00ae, IBM\u00ae and the like, which can process requests from database clients running on a user computer , , , .","The system  may also include one or more databases . The database(s)  may reside in a variety of locations. By way of example, a database  may reside on a storage medium local to (and\/or resident in) one or more of the computers , , , , , , . Alternatively, it may be remote from any or all of the computers , , , , , , , and\/or in communication (e.g., via the network ) with one or more of these. In a particular set of embodiments, the database  may reside in a storage-area network (\u201cSAN\u201d) familiar to those skilled in the art. Similarly, any necessary files for performing the functions attributed to the computers , , , , , ,  may be stored locally on the respective computer and\/or remotely, as appropriate. In one set of embodiments, the database  may be a relational database, such as Oracle 10g, that is adapted to store, update, and retrieve data in response to SQL-formatted commands.",{"@attributes":{"id":"p-0070","num":"0069"},"figref":"FIG. 6","b":["600","600","600","624","602","604","606","600","608","608"]},"The computer system  may additionally include a computer-readable storage media reader , a communications system  (e.g., a modem, a network card (wireless or wired), an infra-red communication device, etc.), and working memory , which may include RAM and ROM devices as described above. In some embodiments, the computer system  may also include a processing acceleration unit , which can include a digital signal processor DSP, a special-purpose processor, and\/or the like.","The computer-readable storage media reader  can further be connected to a computer-readable storage medium , together (and, optionally, in combination with storage device(s) ) comprehensively representing remote, local, fixed, and\/or removable storage devices plus storage media for temporarily and\/or more permanently containing, storing, transmitting, and retrieving computer-readable information. The communications system  may permit data to be exchanged with the network and\/or any other computer described above with respect to the system .","The computer system  may also comprise software elements, shown as being currently located within a working memory , including an operating system  and\/or other code , such as an application program (which may be a client application, Web browser, mid-tier application, RDBMS, etc.). It should be appreciated that alternate embodiments of a computer system  may have numerous variations from that described above. For example, customized hardware might also be used and\/or particular elements might be implemented in hardware, software (including portable software, such as applets), or both. Further, connection to other computing devices such as network input\/output devices may be employed.","Storage media and computer readable media for containing code, or portions of code, can include any appropriate media known or used in the art, including storage media and communication media, such as but not limited to volatile and non-volatile, removable and non-removable media implemented in any method or technology for storage and\/or transmission of information such as computer readable instructions, data structures, program modules, or other data, including RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disk (DVD) or other optical storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, data signals, data transmissions, or any other medium which can be used to store or transmit the desired information and which can be accessed by the computer. Based on the disclosure and teachings provided herein, a person of ordinary skill in the art will appreciate other ways and\/or methods to implement the various embodiments.","In the foregoing specification, the invention is described with reference to specific embodiments thereof, but those skilled in the art will recognize that the invention is not limited thereto. Various features and aspects of the above-described invention may be used individually or jointly. Further, the invention can be utilized in any number of environments and applications beyond those described herein without departing from the broader spirit and scope of the specification. The specification and drawings are, accordingly, to be regarded as illustrative rather than restrictive."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 2A"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2B"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 3A"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3B"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 3C"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 6"}]},"DETDESC":[{},{}]}
