---
title: Information processing method and information processing apparatus
abstract: A first node apparatus included in a distributed data store acquires first operation information and a first timestamp corresponding to target data. The first operation information specifies a first operation to be executed on the target data. The first timestamp indicates a first receipt time of the first operation information. The first node apparatus determines whether the first receipt time is earlier than some of second receipt times on the basis of second timestamps and the acquired first timestamp. The second timestamp indicates the second receipt time of second operation information. The second operation information specifies a second operation executed on the target data. The first node apparatus re-executes the second operations together with the first operation on the target data in the order of the receipt time when it is determined that the first receipt time is earlier than some of the second receipt times.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08429136&OS=08429136&RS=08429136
owner: Fujitsu Limited
number: 08429136
owner_city: Kawasaki
owner_country: JP
publication_date: 20110527
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["CROSS-REFERENCE TO RELATED APPLICATION","FIELD","BACKGROUND","SUMMARY","DESCRIPTION OF EMBODIMENTS"],"p":["This application is based upon and claims the benefit of priority of the prior Japanese Patent Application No. 2010-123138, filed on May 28, 2010, the entire contents of which are incorporated herein by reference.","The embodiments discussed herein are related to a distributed data store.","A system configured to improve the availability or the like by holding data in a distributed state in a plurality of nodes which are connected with one another over a network has been proposed and may be called a distributed data store.",{"@attributes":{"id":"p-0005","num":"0004"},"figref":["FIG. 1","FIG. 1","FIG. 1","FIG. 1"],"b":["12","12","1","1","12","12","11","11","11","1","11","1","12","1","1"]},"In a distributed data store as mentioned above, each of the plurality of nodes may possibly receive a request for execution of a distributed transaction. Each node does not perform serialization of the transactions upon receipt of the request for execution thereof but does later in accordance with timestamps or the like.","In a distributed data store as mentioned above, the node (hereinafter, referred to as a receptor) that has received the request for execution of the distributed transaction may not always happen to be the node (hereinafter referred to as a container) that holds the data to be operated in the operation. Therefore, it may sometimes occur that operations are executed in the order different from the order in which the operations are originally to be executed, in the case that a timing at which operation information specifying a specific operation reaches the container is delayed owing to, for example, a delay in communication between nodes. In a distributed data store of the type that a plurality of nodes hold replicas of data, when a delay has occurred in timing at which each of the replicas is synchronized with the data, it may sometimes occur that an operation which is to be executed originally after the synchronization is executed before the synchronization.","When operations are executed in the order different from the original correct order of execution, the following problems may occur. For example, it is supposed that a first operation is to set \u201c2\u201d to certain specific data, a second operation is to add \u201c3\u201d to the specific data, and a third operation is to multiply \u201c4\u201d to the specific data. In the above mentioned case, when the operations are executed in the original order, \u201c20\u201d will be obtained as an ultimate execution result of the operations. However, if the first and second operations are executed in reverse order, \u201c11\u201d will be obtained as an ultimate execution result of the operations. That is, when such operations that an ultimate execution result thereof depends on the order of execution are executed on data stored in the distributed data store, a correct execution result of the operations may not be obtained in some cases. Accordingly, such a problem may arise that it is difficult to apply operations to data stored in the distributed data store unless the operations are of the type that the ultimate execution result thereof does not depend on the order of execution of the operations (for example, operations of setting an immediate value and operations of acquiring a value of data).","It is said that a theorem called the CAP theorem is true in a system which performs a process by using a plurality of nodes in a distributed state, for example, a distributed data store as mentioned above. The CAP theorem states that it is impossible for a distributed system to simultaneously provide consistency of data, availability of a system, and tolerance to network partitions. In a distributed data store as mentioned above, availability of a system and tolerance to network partitions are features to be preferentially provided and hence it may sometimes occur that a system is constructed in a state in which strictness to consistency of data is loosened. As a result, such a situation may sometimes occur that data before update is temporarily presented to a user. In many cases, there will be no problem, for example, in written contents of a large-scale bulletin board, goods explanation pages of a shopping site and the like even when such a situation as mentioned above has temporarily occurred. A way of thinking that \u201calthough consistency of data is not established at a certain point of time, all is well as long as consistency of data is finally established\u201d may be sometimes called an eventual consistency.","As a technique relating to a distributed data store, a technique as follows is proposed. Specifically, replicas of data are held in a plurality of nodes and a change in the data is reflected on the replicas in background, thereby ensuring the availability of the system. When a conflict is found in the data, a process for resolving the conflict is performed on the side of an application process upon data reading.","The thesis titled \u201cDynamo: Amazon's Highly Available Key value Store\u201d by G. DeCandia et al. discloses a related technique.","According to an aspect of the present invention, provided is an information processing method executed by a first node apparatus included in a distributed data store including a plurality of node apparatuses. Each node apparatus included in the distributed data store stores a part of data stored in the distributed data store. According to the information processing method, the first node apparatus acquires first operation information and a first timestamp corresponding to target data. The first operation information specifies a first operation to be executed on the target data. The first timestamp indicates a first receipt time of the first operation information. The first node apparatus determines whether the first receipt time is earlier than some of second receipt times on the basis of second timestamps and the acquired first timestamp. The second timestamp indicates the second receipt time of second operation information. The second operation information specifies a second operation executed on the target data. The second operation information and the second timestamps are stored in an information storage in correspondence with the target data. The first node apparatus re-executes the second operations together with the first operation on the target data in the order of the receipt time in accordance with the second operation information and the acquired first operation information when it is determined that the first receipt time is earlier than some of the second receipt times.","The object and advantages of the invention will be realized and attained by means of the elements and combinations particularly pointed out in the claims. It is to be understood that both the foregoing general discussion and the following detailed discussion are exemplary and explanatory and are not restrictive of the invention, as claimed.","A technique is not yet proposed that resolves, on the side of the distributed data store, an error in the order of operations so as to make such operations executable that the ultimate execution result thereof depends on the order of execution.","It is preferable to provide a technique for appropriately executing in a distributed data store such operations that the ultimate execution result thereof depends on the order of the operations.","The embodiments provide a technique for appropriately executing in the distributed data store such operations that the ultimate execution result thereof depends on the order of the operations.","[First Embodiment]",{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 2","FIG. 2"],"b":["1011","1013","1015","1011","1013","1015","1015"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 3","FIG. 2","FIG. 3"]},"In S, the information acquiring unit  acquires current operation information specifying a current operation to be executed on specific data and a current timestamp indicating a current receipt time of the current operation information. The information acquiring unit  outputs a result of the process to the re-executing unit .","In S, the re-executing unit  determines whether the current receipt time is earlier than some of previous receipt times, which are stored in the information storage  in correspondence with the specific data, of previous operation information specifying previous operations already executed on the specific data.","In S, when it has been determined that the current receipt time is earlier than some of the previous receipt times, the re-executing unit  re-executes the previous operations together with the current operation in the order of the receipt time.","It may become possible to obtain a correct ultimate execution result of the current and previous operations regardless of dependency of the ultimate execution result of the current and previous operations on the execution order thereof by performing processes as discussed above.","[Second Embodiment]","A second embodiment will be discussed.  illustrates an exemplary configuration of a system according to the second embodiment. Node apparatuses  to , a user terminal , and a user terminal  including an application program  are connected with a network  such as, for example, the Internet. The node apparatuses  to  are connected with one another over a network . The node apparatuses  to  are included in a distributed data store. Although  illustrates an example in which three node apparatuses and four user terminals are included, any numbers of node apparatuses and user terminals may be included.",{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 5","b":["301","302","303","304"]},"The communicating unit  receives a request for execution of a distributed transaction from the user terminal  and forwards operation information specifying an operation to a node apparatus that holds data to be operated in the operation included in the above request. When the data to be operated in the operation included in the above request is held in its own node apparatus, the communicating unit  outputs the operation information to the information managing unit . The locating unit  locates a node that holds the data to be operated in the operation, for example, by a method called consistent hashing or the like. The information managing unit  executes the operation in accordance with the operation information received from the communicating unit . In addition, the information managing unit  manages information stored in the local information storage .",{"@attributes":{"id":"p-0040","num":"0039"},"figref":["FIG. 6","FIG. 6","FIG. 6"],"b":"304"},"The \u201csuch operations that an ultimate execution result thereof depends on the order of execution\u201d in the present embodiment includes an operation using a value before update. For example, supposing that \u201cx\u201d is a value before update and \u201cy\u201d is a value after the update, operations \u201cy=11 (substitution of an immediate value)\u201d, \u201cy=x.Inc( )=x+1 (increment)\u201d, \u201cy=x.Add(2)=x+2 (addition)\u201d, \u201cy=x+2x+3\u201d, \u201cy=sin(x)\u201d and the like correspond to the above operations. In addition, decrement, subtraction, multiplication, division and the like correspond to the above operations.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 7","FIG. 7"],"b":["304","304"]},"Next, processes performed by the system illustrated in  will be discussed with reference to  to .  illustrates an exemplary processing flow of a node apparatus that functions as the receptor. Processes performed by the node apparatus that functions as the receptor will be discussed with reference to . In the following, a case in which the node apparatus  functions as the receptor will be discussed by way of example.","In S, the communicating unit  of the node apparatus  receives from the user terminal  a request for execution of a distributed transaction. The request includes operation information specifying operations to be executed. The communicating unit  stores the received request in a storage such as, for example, a main memory or the like.","In S, the communicating unit  of the node apparatus  affixes a timestamp to the request received in S. For example, the node apparatuses  to  exchange values of logical clocks in advance using the Lamport's algorithm or the like and the communicating unit  affixes the value of the logical clock as the timestamp to the received request.","In S, the communicating unit  of the node apparatus  extracts untreated operation information included in the received request. The communicating unit  then outputs the extracted operation information to the locating unit  of the node apparatus .","In S, the locating unit  of the node apparatus  locates a node apparatus (a container) that holds data to be operated in the operation by performing, for example, consistent hashing or the like on information which is used to determine the data and is included in the operation information received from the communicating unit . In the example illustrated in , it is supposed that the node apparatus  has been found to be the container. The locating unit  of the node apparatus  sends a notification notifying that the node apparatus  has been found to be the container to the communicating unit  of the node apparatus .","In S, the communicating unit  of the node apparatus  that has received the notification from the locating unit  forwards an operation request (a request for execution of an operation) including the operation information extracted in S and the timestamp affixed in S to the node apparatus  that functions as the container. When the node apparatus  itself has been found to be the container in S, the communicating unit  sends the operation request including the operation information extracted in S and the timestamp affixed in S to the information managing unit  of the node apparatus .","In S, the communicating unit  of the node apparatus  determines whether all the operation information has been treated. When some of the operation information is not yet treated (\u201cNo\u201d in S), the node apparatus  returns the process to S in order to treat the next operation information. When all the operation information has been treated (\u201cYes\u201d in S), the node apparatus  advances the process to S.","In S, the communicating unit  of the node apparatus  receives information of the execution result of the operation from the container. The communicating unit  of the node apparatus  may sometimes acquire the information of the execution result of the operation from the information managing unit  of the node apparatus .","In S, the communicating unit  of the node apparatus  generates information of an execution result of the transaction by aggregating the information of the execution results of the operations received in S to send the generated information to the user terminal . A method of aggregating the information of the execution results of the operations is different for different transaction types.","In S, the communicating unit  of the node apparatus  receives a re-execution notification (a notification notifying that re-execution of the operations concerned has occurred) from the container. The re-execution notification includes the data name of the data on which the operations concerned have been re-executed, a value of the data after the re-execution, and the application list.","In S, the communicating unit  of the node apparatus  notifies the user terminal  that is executing the application program  specified in the application list, of the data name of the data on which the operations concerned have been re-executed and the value of the data after the re-execution. The process in S may be performed, for example, by sending a message using a designated internet protocol (IP) address and port number, calling a designated web application programming interface (API), or calling back a designated function via a library for data service. As an alternative, the communicating unit  may notify the user terminal  of only the data name concerned. When the re-execution is not performed in the container, the processes in S and S are not performed. Thereafter, the node apparatus  terminates the process.","It may become possible to treat a request for execution of a distributed transaction by performing processes as discussed above. In addition, it may become possible for a person, who wants to know whether re-execution has been performed, to receive a notification of re-execution by executing an application program loaded on a terminal or the like that the person operates.","Next, processes performed by a node apparatus that functions as a container will be discussed with reference to  to . In the following, a case in which the node apparatus  functions as the container and the node apparatus  functions as the receptor will be discussed by way of example.",{"@attributes":{"id":"p-0056","num":"0055"},"figref":"FIG. 9","b":"31"},"In S, the communicating unit  of the node apparatus  receives an operation request that includes operation information and a timestamp affixed thereto from the node apparatus  that functions as the receptor. The communicating unit  of the node apparatus  outputs the request to the information managing unit  of the node apparatus .","In S, the information managing unit  of the node apparatus  determines whether the operation information received in S specifies an operation for updating the application list stored in the local information storage .","In S, when it has been determined that the operation information specifies an operation for updating the application list (\u201cYes\u201d in S), the information managing unit  of the node apparatus  updates the application list stored in the local information storage . For example, the information managing unit  changes, deletes, or adds information included in the application list. The information managing unit  generates information for notifying of a result of the update and outputs the generated information to the communicating unit  of the node apparatus .","In S, the communicating unit  of the node apparatus  sends the information for notifying the node apparatus  that functions as the receptor of the result of the update. Thereafter, the node apparatus  terminates the process.","In S, when it has been determined that the operation information does not specify an operation for updating the application list (\u201cNo\u201d in S), the information managing unit  of the node apparatus  determines whether the operation information specifies an operation (for example, an operation \u201cGet\u201d) for acquiring a value of data stored in the local information storage , that is, the operation request is a request for data acquisition. When it has been determined that the operation information does not specify an operation for acquiring a value of data stored in the local information storage  (\u201cNo\u201d in S), the node apparatus  advances the process to S.","In S, when it has been determined that the operation information specifies an operation for acquiring a value of data stored in the local information storage  (\u201cYes\u201d in S), the information managing unit  of the node apparatus  re-executes the operations requested before the receipt time of the request for data acquisition in the order of the receipt time on the basis of the timestamp received in S and the timestamps stored in the local information storage  in correspondence with the data concerned to acquire a value of the data in accordance with operation information stored in the local information storage  in correspondence with the data concerned to acquire a value of the data.","In S, the information managing unit  of the node apparatus  sends the value of the data acquired in S to the node apparatus  that functions as the receptor. Thereafter, the node apparatus  terminates the process.","In S, the information managing unit  of the node apparatus  adds the operation information and the timestamp received in S to the operation history information stored in the local information storage .","A method of adding information to the operation history information will be discussed with reference to  and .  illustrates an exemplary manner of adding information to the operation history information of operations executed on the DATA_A.","In the first state, the operation history information of the DATA_A is empty and the DATA_A has no value.","In the second state, information \u201cSet(7), t=0\u201d is stored in the operation history information and a value \u201c7\u201d is set for the DATA_A.","In the third state, information \u201cAdd(1), t=2\u201d is added to the operation history information and the value of the DATA_A is changed to \u201c8\u201d.","In the fourth state, information \u201cMul(2), t=3\u201d is added to the operation history information and the value of the DATA_A is changed to \u201c16\u201d.","In the final state, information \u201cSub(3), t=4\u201d is added to the operation history information and the value of the DATA_A is changed to \u201c13\u201d.","In the example illustrated in , since each of the timestamps affixed to newly added operations in the third to final states indicates a receipt time later than any one of the receipt times indicated by the timestamps which have been already stored, the operations are executed as they are in arriving order of the operation information. Incidentally, in the example illustrated in , it is supposed for the timestamp that a larger value of \u201ct\u201d indicates a later affixed timestamp.",{"@attributes":{"id":"p-0072","num":"0071"},"figref":["FIG. 11","FIG. 11"]},"In the second embodiment, the container takes the following actions when, as in the example illustrated in , the container receives one operation information after another operation information and the one operation information is to be originally treated before the another operation information. That is, the container inserts the one operation information and the timestamp thereof to the operation history information so as to be arranged in the order of the receipt time on the basis of the timestamps. Thereafter, the container re-executes the operations concerned on the DATA_A in accordance with the operation history information. As illustrated in , the container sets a correct value \u201c30\u201d for the DATA_A by re-executing the operations on the DATA_A in the above discussed manner. In the present embodiment, the container does not add operation information specifying an operation for acquiring a value of data to the operation history information. The reason for the above lies in that the operation executed for acquiring the value of the data has no effect on the value of the data.","In S of . The information managing unit  of the node apparatus  determines whether the timestamp received in S indicates a receipt time later than any one of receipt times indicated by the timestamps stored in the local information storage  in correspondence with the data to be operated in the operation concerned (that is, whether it is the latest timestamp).","In S, when it has been determined that it is the latest timestamp in S (\u201cYes\u201d in S), the information managing unit  of the node apparatus  executes the operation in accordance with the operation information received in S.","In S, the information managing unit  of the node apparatus  sends a result of execution of the operation to the node apparatus  that functions as the receptor.","In S, when it has been determined that it is not the latest timestamp in S (\u201cNo\u201d in S), the information managing unit  of the node apparatus  re-executes the already executed operations together with an operation specified by the operation information received in S in the order of the receipt on the basis of the timestamp received in S and the timestamps stored in the local information storage  in correspondence with the data to be operated in the operation concerned in accordance with operation information stored in the local information storage  in correspondence with the data to be operated in the operation concerned and the operation information received in S","In S, the information managing unit  of the node apparatus  generates a re-execution notification and sends the generated notification to the node apparatus  that functions as the receptor. The re-execution notification includes the data name of the data on which the operations concerned have been re-executed, a value of the data after the re-execution, and the application list. Thereafter, the node apparatus  terminates the process.","By performing processes as discussed above in the distributed data store, it may become possible to appropriately execute both an operation for acquiring a value of data and such operations that an ultimate execution result thereof depends on the order of execution.","Embodiments are not limited to those discussed above. For example, the functional configurations of the information processing apparatus and the node apparatus discussed above may not always correspond to module configurations of actual programs.","The configurations of the operation history information and the application list discussed above is mere examples and it may not be the case that each information is always configured as discussed above. Further, in the processing flows, the order in which the processes are executed may be changed as long as the result of execution of the processes is not changed. Still further, parallel execution of the processes may be possible.","Although in the above mentioned examples, a case in which the plurality of node apparatuses operate has been discussed, it may be possible to make, for example, a single apparatus start up a plurality of processing operations so as to execute processes as mentioned above.","The above discussed node apparatuses  to  may be implemented by using a computer.  illustrates an exemplary configuration of a computer. For example, as illustrated in , a computer may include a memory , a central processing unit (CPU) , a hard disk drive (HDD) , a display controller  which is connected with a display unit , a drive unit  that drives a removable disk , an input unit  and a communication controller  which is connected with a network and the above mentioned elements are connected with one another via a bus . An Operating System (OS) and an application program for performing processes in the embodiments may be stored in a storage unit such as, for example, the HDD  or the like and when the OS or the application program is executed by the CPU , it may be read out of the HDD  into the memory . The CPU  may control the display controller , the communication controller  and the drive unit  so as to perform desirable operations. Data which is being processed may be stored into the memory  and may be stored in the HDD  as desired. According to an embodiment, the application program for performing the above discussed processes may be stored in the computer readable removable disk  to be distributed and may be installed from the drive unit  into the HDD . In some cases, the application program may be installed into the HDD  over a network such as, for example, the Internet or the like and via the communication controller . In a computer as mentioned above, the hardware elements such as the above mentioned CPU , memory  and the like systematically cooperate with the OS and a desirable application program to implement various functions as discussed above. The information storage  illustrated in  may be implemented as the memory , the HDD  and the like illustrated in . The same thing also applies to the local information storage  illustrated in . The information acquiring unit  and the re-executing unit  illustrated in  may be implemented by combining the CPU  with a program, that is, by executing the program concerned by the CPU . More specifically, the CPU  may function as a function unit discussed above by performing processes in accordance with a program which is stored in the HDD  or the memory . The same thing also applies to the communicating unit , the locating unit  and the information managing unit  illustrated in .","The above discussed embodiments are summarized as follows.","An information processing method according to the embodiments is executed by one node apparatus included in an information processing system including a plurality of node apparatuses. The information processing method includes acquiring, determining, and re-executing. In the acquiring, the one node apparatus acquires first operation information (for example, information specifying an arithmetic operation, more specifically, for example, \u201cAdd\u201d indicative of addition and a value to be added) and a first time stamp corresponding to specific data. The first operation information specifies a first operation to be executed on the specific data. The first time stamp indicates a first receipt time of the first operation information. In the determining, the one node apparatus determines whether the first receipt time is earlier than some of second receipt times on the basis of second timestamps and the acquired first timestamp. The second timestamp indicates the second receipt time of second operation information specifying a second operation that has been already executed on the specific data. The second operation information and the second timestamps are stored in an information storage in correspondence with the specific data. In the re-execution, the one node apparatus re-executes the second operations together with the first operation on the specific data in the order of the receipt time in accordance with the second operation information and the acquired first operation information when it has been determined that the first receipt time is earlier than some of the second receipt times.","By executing the operations in the above mentioned manner, it may become possible to appropriately execute such operations that an ultimate execution result thereof depends on the order of execution.","The information processing method may also include executing the first operation on the specific data in accordance with the acquired first operation information when it has been determined that the first receipt time is later than any one of the second receipt times. The reason for provision of the above mentioned process lies in that a correct execution result may be obtained simply by executing only the first operation when the first operation is an operation to be executed after execution of the second operations.","The information storage may also store an application list in correspondence with the specific data. The application list specifies application programs related to the specific data. In the above mentioned situation, the information processing method may further include a generating. In the generating, the one node apparatus generates, when the re-execution has been executed, information for notifying a second node apparatus of an execution result of the re-execution. The second node apparatus is included in the information processing system. The second node apparatus is executing an application program which is specified, in correspondence with the specific data, in the application list stored in the information storage. Owing to provision of the above mentioned process, it may become possible for a person, who wants to know whether re-execution has been performed on the specific data, to receive a notification of re-execution by executing an application program loaded on a terminal or the like that the person operates.","The acquiring may include receiving the first operation information from a client terminal and acquiring the receipt time of the first operation information. Owing to provision of the above mentioned processes, it may become possible to cope with even such a situation that the one node apparatus receives operation information directly from the client terminal.","The acquiring may include receiving the first operation information and the first timestamp from another node apparatus of the plurality of node apparatuses. Owing to provision of the above mentioned process, it may become possible to cope with even such a situation that a node that functions as a receptor is different from a node that functions as a container.","A program causing a computer to perform the above mentioned method may be prepared. The prepared program may be stored in a computer readable medium or storage device such as, for example, a flexible disk, a compact disc read only memory (CD-ROM), a magneto-optical disk, a semiconductor memory, a hard disk or the like. An interim execution result of a process is temporarily stored in a storage device such as a main memory or the like.","All examples and conditional language recited herein are intended for pedagogical purposes to aid the reader in understanding the invention and the concepts contributed by the inventor to furthering the art, and are to be construed as being without limitation to such specifically recited examples and conditions, nor does the organization of such examples in the specification relate to a showing of the superiority and inferiority of the invention. Although the embodiments of the present invention have been discussed in detail, it should be understood that the various changes, substitutions, and alterations could be made hereto without departing from the spirit and scope of the invention."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 12"}]},"DETDESC":[{},{}]}
