---
title: Multimodal teleconferencing
abstract: Multimodal teleconferencing including receiving, by a multimodal teleconferencing module, a speech utterance from one of a plurality of participants in the multimodal teleconference; identifying the participant making the speech utterance as a current speaker; retrieving, by the multimodal teleconferencing module from accounts for the current speaker, content for display to the current speaker; retrieving, by the multimodal teleconferencing module from accounts for the current speaker, content for display to one or more other participants in the multimodal teleconference; providing, by the multimodal teleconferencing module to a multimodal teleconferencing client for display to the current speaker, an identification of the speaker and the content retrieved for the speaker; and providing, by the multimodal teleconferencing module to one or more of multimodal teleconferencing clients for display to the other participants, an identification of the current speaker with the content retrieved for the one or more other participants in the multimodal teleconference.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08416714&OS=08416714&RS=08416714
owner: International Business Machines Corporation
number: 08416714
owner_city: Armonk
owner_country: US
publication_date: 20090805
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF EXAMPLE EMBODIMENTS"],"p":["1. Field of the Invention","The field of the invention is data processing, or, more specifically, methods, apparatus, and products for multimodal teleconferencing.","2. Description of Related Art","User interaction with applications running on small devices through a keyboard or stylus has become increasingly limited and cumbersome as those devices have become increasingly smaller. In particular, small handheld devices like mobile phones and PDAs serve many functions and contain sufficient processing power to support user interaction through multimodal access, that is, by interaction in non-voice modes as well as voice mode. Devices which support multimodal access combine multiple user input modes or channels in the same interaction allowing a user to interact with the applications on the device simultaneously through multiple input modes or channels. The methods of input include speech recognition, keyboard, touch screen, stylus, mouse, handwriting, and others. Multimodal input often makes using a small device easier.","Multimodal applications are often formed by sets of markup documents served up by web servers for display on multimodal browsers. A \u2018multimodal browser,\u2019 as the term is used in this specification, generally means a web browser capable of receiving multimodal input and interacting with users with multimodal output, where modes of the multimodal input and output include at least a speech mode. Multimodal browsers typically render web pages written in XHTML+Voice (\u2018X+V\u2019). X+V provides a markup language that enables users to interact with an multimodal application often running on a server through spoken dialog in addition to traditional means of input such as keyboard strokes and mouse pointer action. Visual markup tells a multimodal browser what the user interface is look like and how it is to behave when the user types, points, or clicks. Similarly, voice markup tells a multimodal browser what to do when the user speaks to it. For visual markup, the multimodal browser uses a graphics engine; for voice markup, the multimodal browser uses a speech engine. X+V adds spoken interaction to standard web content by integrating XHTML (eXtensible Hypertext Markup Language) and speech recognition vocabularies supported by VoiceXML. For visual markup, X+V includes the XHTML standard. For voice markup, X+V includes a subset of VoiceXML. For synchronizing the VoiceXML elements with corresponding visual interface elements, X+V uses events. XHTML includes voice modules that support speech synthesis, speech dialogs, command and control, and speech grammars. Voice handlers can be attached to XHTML elements and respond to specific events. Voice interaction features are integrated with XHTML and can consequently be used directly within XHTML content.","In addition to X+V, multimodal applications also may be implemented with Speech Application Tags (SALT). SALT is a markup language developed by the Salt Forum. Both X+V and SALT are markup languages for creating applications that use voice input\/speech recognition and voice output\/speech synthesis. Both SALT applications and X+V applications use underlying speech recognition and synthesis technologies or \u2018speech engines\u2019 to do the work of recognizing and generating human speech. As markup languages, both X+V and SALT provide markup-based programming environments for using speech engines in an application's user interface. Both languages have language elements, markup tags, that specify what the speech-recognition engine should listen for and what the synthesis engine should \u2018say.\u2019 Whereas X+V combines XHTML, VoiceXML, and the XML Events standard to create multimodal applications, SALT does not provide a standard visual markup language or eventing model. Rather, it is a low-level set of tags for specifying voice interaction that can be embedded into other environments. In addition to X+V and SALT, multimodal applications may be implemented in Java with a Java speech framework, in C++, for example, and with other technologies and in other environments as well.","Currently teleconferences allow participants to speak to one another but teleconferencing applications do not provide the visual context of the subject matter being discussed.","Multimodal teleconferencing including receiving, by a multimodal teleconferencing module, a speech utterance from one of a plurality of participants in the multimodal teleconference; identifying the participant making the speech utterance as a current speaker; retrieving, by the multimodal teleconferencing module from accounts for the current speaker, content for display to the current speaker; retrieving, by the multimodal teleconferencing module from accounts for the current speaker, content for display to one or more other participants in the multimodal teleconference; providing, by the multimodal teleconferencing module to a multimodal teleconferencing client for display to the current speaker, an identification of the speaker and the content retrieved for the speaker; and providing, by the multimodal teleconferencing module to one or more of multimodal teleconferencing clients for display to the other participants, an identification of the current speaker with the content retrieved for the one or more other participants in the multimodal teleconference.","The foregoing and other objects, features and advantages of the invention will be apparent from the following more particular descriptions of example embodiments of the invention as illustrated in the accompanying drawings wherein like reference numbers generally represent like parts of example embodiments of the invention.","Example methods, apparatus, and products for multimodal teleconferencing are described with reference to the accompanying drawings, beginning with .  sets forth a network diagram illustrating an example system for multimodal teleconferencing according to embodiments of the present invention. A multimodal teleconference is a multi-participant communication over telephony devices that includes visual content for display on a multimodal device. Multimodal teleconferencing in this example is implemented with a multimodal teleconferencing module () running on a voice server () that supports a multimodal application () and that supports a multimodal teleconferencing client (). The multimodal teleconferencing module of  is capable generally of carrying out multimodal teleconferences according to embodiments of the present invention by receiving, by the multimodal teleconferencing module (), a speech utterance from one of a plurality of participants ( and ) in the multimodal teleconference; identifying, by the multimodal teleconferencing module (), the participant making the speech utterance as a current speaker (); retrieving, by the multimodal teleconferencing module from accounts () for the current speaker, content for display to the current speaker (); retrieving, by the multimodal teleconferencing module () from accounts () for the current speaker (), content for display to one or more other participants () in the multimodal teleconference; providing, by the multimodal teleconferencing module () to a multimodal teleconferencing client () for display to the current speaker (), an identification of the speaker and the content retrieved for the speaker; and providing, by the multimodal teleconferencing module () to one or more of multimodal teleconferencing clients for display to the other participants (), an identification of the current speaker with the content retrieved for the one or more other participants in the multimodal teleconference.","A telephony device useful in embodiments of the present invention provides telephony communications among participants of the multimodal teleconference. Telephony encompasses the general use of equipment to provide voice communication over distances. Telephony includes the use of traditional telephones through the public switched telephone network (PSTN), digital telephony devices for digital provisioning of telephone services and systems, IP telephony using the TCP\/IP protocol, and many others as will occur to those of skill in the art.","The multimodal teleconferencing client () includes a multimodal browser () for displaying content retrieved for the multimodal teleconference. The multimodal teleconferencing client () and browser support a speech engine () operating on a multimodal device () or a speech engine () residing on a voice server (). The system of  includes at least one speech recognition grammar () that specifies words and phrases to be recognized by an automatic speech recognition (\u2018ASR\u2019) engine () of a speech engine (, ). The multimodal device () supports multiple modes of user interaction with the multimodal application including a voice mode and one or more non-voice modes of user interaction with the multimodal application. The voice mode is represented here with audio output of voice prompts and responses () from the multimodal devices and audio input of speech for recognition () from a user (). Non-voice modes are represented by input\/output devices such as keyboards and display screens on the multimodal devices (). The multimodal application is operatively coupled () to an ASR engine () in a speech engine (). The operative coupling may be implemented with an application programming interface (\u2018API\u2019), a voice service module, or a VOIP connection as explained more detail below.","A multimodal device is an automated device, that is, automated computing machinery or a computer program running on an automated device, that is capable of accepting from users more than one mode of input, keyboard, mouse, stylus, and so on, including speech input\u2014and also displaying more than one mode of output, graphic, speech, and so on. A multimodal device is generally capable of accepting speech input from a user, digitizing the speech, and providing digitized speech to a speech engine for recognition. A multimodal device may be implemented, for example, as a voice-enabled browser on a laptop, a voice browser on a telephone handset, an online game implemented with Java on a personal computer, and with other combinations of hardware and software as may occur to those of skill in the art. Because multimodal applications may be implemented in markup languages (X+V, SALT), object-oriented languages (Java, C++), procedural languages (the C programming language), and in other kinds of computer languages as may occur to those of skill in the art, this specification uses the term \u2018multimodal application\u2019 to refer to any software application, server-oriented or client-oriented, thin client or thick client, that administers more than one mode of input and more than one mode of output, typically including visual and speech modes.","The system of  includes several example multimodal devices:\n\n","Each of the example multimodal devices () in the system of  includes a microphone, an audio amplifier, a digital-to-analog converter, a multimodal browser, and a multimodal application capable of accepting from a user () speech for recognition (), digitizing the speech, and providing the digitized speech to a speech engine for recognition. The speech may be digitized according to industry standard codecs, including but not limited to those used for Distributed Speech Recognition as such. Methods for \u2018COding\/DECoding\u2019 speech are referred to as \u2018codecs.\u2019 The European Telecommunications Standards Institute (\u2018ETSI\u2019) provides several codecs for encoding speech for use in DSR, including, for example, the ETSI ES 201 108 DSR Front-end Codec, the ETSI ES 202 050 Advanced DSR Front-end Codec, the ETSI ES 202 211 Extended DSR Front-end Codec, and the ETSI ES 202 212 Extended Advanced DSR Front-end Codec. In standards such as RFC3557 entitled\n\n","Furthermore, each of the multimodal devices of , personal computer (), personal digital assistant (\u2018PDA\u2019) () which is coupled for data communications to data communications network () through wireless connection (), mobile telephone (), and laptop computer (), for example, may operate as a telephony device according to embodiments of the present invention and may support a multimodal teleconferencing module () according tot embodiments of the present invention.","As mentioned, a multimodal device according to embodiments of the present invention is capable of providing speech to a speech engine for recognition. A speech engine is a functional module, typically a software module, although it may include specialized hardware also, that does the work of recognizing and generating or \u2018synthesizing\u2019 human speech. The speech engine implements speech recognition by use of a further module referred to in this specification as a ASR engine, and the speech engine carries out speech synthesis by use of a further module referred to in this specification as a text-to-speech (\u2018TTS\u2019) engine. As shown in , a speech engine () may be installed locally in the multimodal device () itself, or a speech engine () may be installed remotely with respect to the multimodal device, across a data communications network () in a voice server (). A multimodal device that itself contains its own speech engine is said to implement a \u2018thick multimodal client\u2019 or \u2018thick client,\u2019 because the thick multimodal client device itself contains all the functionality needed to carry out speech recognition and speech synthesis\u2014through API calls to speech recognition and speech synthesis modules in the multimodal device itself with no need to send requests for speech recognition across a network and no need to receive synthesized speech across a network from a remote voice server. A multimodal device that does not contain its own speech engine is said to implement a \u2018thin multimodal client\u2019 or simply a \u2018thin client,\u2019 because the thin multimodal client itself contains only a relatively thin layer of multimodal application software that obtains speech recognition and speech synthesis services from a voice server located remotely across a network from the thin client. For ease of explanation, only one () of the multimodal devices () in the system of  is shown with a speech engine (), but readers will recognize that any multimodal device may have a speech engine according to embodiments of the present invention.","A multimodal application () in this example runs in a multimodal browser (). The multimodal client application () may include a set or sequence of X+V or SALT documents that execute on the multimodal browser (). The multimodal browser () of  supports the execution of a media player () through voice modes and non-voice modes. A media player is automated computing machinery for managing and administering media content in media files such as audio files and video files. Examples of media players that may be modified for use in accordance with the present invention include Music Match\u2122, iTunes\u00ae, Songbird\u2122, and others as will occur to those of skill in the art.","A multimodal application () in this example running in a multimodal browser () provides speech for recognition and text for speech synthesis to a speech engine through a VoiceXML interpreter (, ). A VoiceXML interpreter is a software module of computer program instructions that accepts voice dialog instructions from a multimodal application, typically in the form of a VoiceXML <form> element. The voice dialog instructions include one or more grammars, data input elements, event handlers, and so on, that advise the VoiceXML interpreter how to administer voice input from a user and voice prompts and responses to be presented to a user. The VoiceXML interpreter administers such dialogs by processing the dialog instructions sequentially in accordance with a VoiceXML Form Interpretation Algorithm (\u2018FIA\u2019).","A Form Interpretation Algorithm (\u2018FIA\u2019) drives the interaction between the user and a multimodal application. The FIA is generally responsible for selecting and playing one or more speech prompts, collecting a user input, either a response that fills in one or more input items, or a throwing of some event, and interpreting actions that pertained to the newly filled in input items. The FIA also handles multimodal application initialization, grammar activation and deactivation, entering and leaving forms with matching utterances and many other tasks. The FIA also maintains an internal prompt counter that is increased with each attempt to provoke a response from a user. That is, with each failed attempt to prompt a matching speech response from a user an internal prompt counter is incremented.","As shown in , a VoiceXML interpreter () may be installed locally in the multimodal device () itself, or a VoiceXML interpreter () may be installed remotely with respect to the multimodal device, across a data communications network () in a voice server (). In a thick client architecture, a multimodal device () includes both its own speech engine () and its own VoiceXML interpreter (). The VoiceXML interpreter () exposes an API to the multimodal application () for use in providing speech recognition and speech synthesis for the multimodal application. The multimodal application provides dialog instructions, VoiceXML <form> elements, grammars, input elements, event handlers, and so on, through the API to the VoiceXML interpreter, and the VoiceXML interpreter administers the speech engine on behalf of the multimodal application. In the thick client architecture, VoiceXML dialogs are interpreted by a VoiceXML interpreter on the multimodal device. In the thin client architecture, VoiceXML dialogs are interpreted by a VoiceXML interpreter on a voice server () located remotely across a data communications network () from the multimodal device running the multimodal application ().","The VoiceXML interpreter provides grammars, speech for recognition, and text prompts for speech synthesis to the speech engine, and the VoiceXML interpreter returns to the multimodal application speech engine output in the form of recognized speech, semantic interpretation results, and digitized speech for voice prompts. In a thin client architecture, the VoiceXML interpreter () is located remotely from the multimodal client device in a voice server (), the API for the VoiceXML interpreter is still implemented in the multimodal device, with the API modified to communicate voice dialog instructions, speech for recognition, and text and voice prompts to and from the VoiceXML interpreter on the voice server. For ease of explanation, only one () of the multimodal devices () in the system of  is shown with a VoiceXML interpreter (), but readers will recognize that any multimodal device may have a VoiceXML interpreter according to embodiments of the present invention. Each of the example multimodal devices () in the system of  may be configured to carry out multimodal teleconferencing according to the present invention. The use of these four example multimodal devices () is for explanation only, not for limitation of the invention. Any automated computing machinery capable of accepting speech from a user, providing the speech digitized to an ASR engine through a VoiceXML interpreter, and receiving and playing speech prompts and responses from the VoiceXML interpreter may be improved to function as a multimodal device for improving speech capabilities of a multimodal application according to the present invention.","The system of  also includes a voice server () which is connected to data communications network () through wireline connection (). The voice server () is a computer that runs a speech engine () that provides voice recognition services for multimodal devices by accepting requests for speech recognition and returning text representing recognized speech. Voice server () also provides speech synthesis, text to speech (\u2018TTS\u2019) conversion, for voice prompts and voice responses () to user input in multimodal applications such as, for example, X+V applications, SALT applications, or Java voice applications.","The system of  includes a data communications network () that connects the multimodal devices () and the voice server () for data communications. A data communications network useful for multimodal teleconferencing in a multimodal application according to embodiments of the present invention is a data communications network that includes at least a plurality of computers that function as data communications routers connected for data communications with packet switching protocols. Such a data communications network may be implemented with optical connections, wireline connections, or with wireless connections. Such a data communications network may include intranets, internets, local area data communications networks (\u2018LANs\u2019), and wide area data communications networks (\u2018WANs\u2019). Such a data communications network may implement, for example:\n\n","The system of  includes a web server () connected for data communications through wireline connection () to network () and therefore to the multimodal devices (). The web server () may be any server that provides to client devices markup documents () that compose multimodal applications. The web server () typically provides such markup documents via a data communications protocol, HTTP, HDTP, WAP, or the like. That is, although the term \u2018web\u2019 is used to describe the web server generally in this specification, there is no limitation of data communications between multimodal devices and the web server to HTTP alone. The markup documents also may be implemented in any markup language that supports non-speech display elements, data entry elements, and speech elements for identifying which speech to recognize and which words to speak, grammars, form elements, and the like, including, for example, X+V and SALT. A multimodal application in a multimodal device then, upon receiving from the web sever () a markup document as part of a multimodal application, may execute speech elements by use of a VoiceXML interpreter () and speech engine () in the multimodal device itself or by use of a VoiceXML interpreter () and speech engine () located remotely from the multimodal device in a voice server ().","The arrangement of the multimodal devices (), the web server (), the voice server (), and the data communications network () making up the example system illustrated in  are for explanation, not for limitation. Data processing systems useful for multimodal teleconferencing according to the present invention may include additional servers, routers, other devices, and peer-to-peer architectures, not shown in , as will occur to those of skill in the art. Data communications networks in such data processing systems may support many data communications protocols in addition to those noted above. Various embodiments of the present invention may be implemented on a variety of hardware platforms in addition to those illustrated in .","Multimodal teleconferencing according to embodiments of the present invention in a thin client architecture may be implemented with one or more voice servers, computers, that is, automated computing machinery, that provide speech recognition and speech synthesis. For further explanation, therefore,  sets forth a block diagram of automated computing machinery comprising an example of a computer useful as a voice server (). The voice server () of  includes at least one computer processor () or \u2018CPU\u2019 as well as random access memory () (\u2018RAM\u2019) which is connected through a high speed memory bus () and bus adapter () to processor () and to other components of the voice server.","Stored in RAM () is a voice server application (), a module of computer program instructions capable of operating a voice server in a system that is configured for use in multimodal teleconferencing according to embodiments of the present invention. Voice server application () provides voice recognition services for multimodal devices by accepting requests for speech recognition and returning speech recognition results, including text representing recognized speech, text for use as variable values in dialogs, and text as string representations of scripts for semantic interpretation. Voice server application () also includes computer program instructions that provide text-to-speech (\u2018TTS\u2019) conversion for voice prompts and voice responses to user input in multimodal applications such as, for example, X+V applications, SALT applications, or Java Speech applications.","Voice server application () may be implemented as a web server, implemented in Java, C++, or another language, that supports X+V, SALT, VoiceXML, or other multimodal languages, by providing responses to HTTP requests from X+V clients, SALT clients, Java Speech clients, or other multimodal clients. Voice server application () may, for a further example, be implemented as a Java server that runs on a Java Virtual Machine () and supports a Java voice framework by providing responses to HTTP requests from Java client applications running on multimodal devices. And voice server applications that support embodiments of the present invention may be implemented in other ways as may occur to those of skill in the art, and all such ways are well within the scope of the present invention.","The voice server () in this example includes a speech engine (). The speech engine is a functional module, typically a software module, although it may include specialized hardware also, that does the work of recognizing and generating human speech. The speech engine () includes an automated speech recognition (\u2018ASR\u2019) engine for speech recognition and a text-to-speech (\u2018TTS\u2019) engine for generating speech. The speech engine also includes a grammar (), a lexicon (), and a language-specific acoustic model (). The language-specific acoustic model () is a data structure, a table or database, for example, that associates SFVs with phonemes representing, to the extent that it is practically feasible to do so, all pronunciations of all the words in a human language. The lexicon () is an association of words in text form with phonemes representing pronunciations of each word; the lexicon effectively identifies words that are capable of recognition by an ASR engine. Also stored in RAM () is a Text To Speech (\u2018TTS\u2019) Engine (), a module of computer program instructions that accepts text as input and returns the same text in the form of digitally encoded speech, for use in providing speech as prompts for and responses to users of multimodal systems.","The grammar () communicates to the ASR engine () the words and sequences of words that currently may be recognized. For precise understanding, distinguish the purpose of the grammar and the purpose of the lexicon. The lexicon associates with phonemes all the words that the ASR engine can recognize. The grammar communicates the words currently eligible for recognition. The set of words currently eligible for recognition and the set of words capable of recognition may or may not be the same.","Grammars may be expressed in any format supported by any ASR engine, including, for example, the Java Speech Grammar Format (\u2018JSGF\u2019), the format of the W3C Speech Recognition Grammar Specification (\u2018SRGS\u2019), the Augmented Backus-Naur Format (\u2018ABNF\u2019) from the IETF's RFC2234, in the form of a stochastic grammar as described in the W3C's Stochastic Language Models (N-Gram) Specification, and in other grammar formats as may occur to those of skill in the art. Grammars typically operate as elements of dialogs, such as, for example, a VoiceXML <menu> or an X+V<form>. A grammar's definition may be expressed in-line in a dialog. Or the grammar may be implemented externally in a separate grammar document and referenced from with a dialog with a URI. Here is an example of a grammar expressed in JSFG:",{"@attributes":{"id":"p-0043","num":"0069"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"217pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<grammar scope=\u201cdialog\u201d><![CDATA["},{"entry":"\u2003\u2003#JSGF V1.0;"},{"entry":"\u2003\u2003grammar command;"},{"entry":"\u2003\u2003<command> = [remind me to] call | phone | telephone <name>"},{"entry":"\u2003\u2003<when>; <name> = bob | martha | joe | pete | chris | john | artoush;"},{"entry":"\u2003\u2003<when> = today | this afternoon | tomorrow | next week;"},{"entry":"\u2003\u2003]]>"},{"entry":"<\/grammar>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In this example, the elements named <command>, <name>, and <when> are rules of the grammar. Rules are a combination of a rulename and an expansion of a rule that advises an ASR engine or a voice interpreter which words presently can be recognized. In this example, expansion includes conjunction and disjunction, and the vertical bars \u2018|\u2019 mean \u2018or.\u2019 An ASR engine or a voice interpreter processes the rules in sequence, first <command>, then <name>, then <when>. The <command> rule accepts for recognition \u2018call\u2019 or \u2018phone\u2019 or \u2018telephone\u2019 plus, that is, in conjunction with, whatever is returned from the <name> rule and the <when> rule. The <name> rule accepts \u2018bob\u2019 or \u2018martha\u2019 or \u2018joe\u2019 or \u2018pete\u2019 or \u2018chris\u2019 or \u2018john\u2019 or \u2018artoush\u2019, and the <when> rule accepts \u2018today\u2019 or \u2018this afternoon\u2019 or \u2018tomorrow\u2019 or \u2018next week.\u2019 The command grammar as a whole matches utterances like these, for example:\n\n","The voice server application () in this example is configured to receive, from a multimodal client located remotely across a network from the voice server, digitized speech for recognition from a user and pass the speech along to the ASR engine () for recognition. ASR engine () is a module of computer program instructions, also stored in RAM in this example. In carrying out automated speech recognition, the ASR engine receives speech for recognition in the form of at least one digitized word and uses frequency components of the digitized word to derive a Speech Feature Vector (\u2018SFV\u2019). An SFV may be defined, for example, by the first twelve or thirteen Fourier or frequency domain components of a sample of digitized speech. The ASR engine can use the SFV to infer phonemes for the word from the language-specific acoustic model (). The ASR engine then uses the phonemes to find the word in the lexicon ().","Also stored in RAM is a VoiceXML interpreter (), a module of computer program instructions that processes VoiceXML grammars. VoiceXML input to VoiceXML interpreter () may originate, for example, from VoiceXML clients running remotely on multimodal devices, from X+V clients running remotely on multimodal devices, from SALT clients running on multimodal devices, or from Java client applications running remotely on multimedia devices. In this example, VoiceXML interpreter () interprets and executes VoiceXML segments representing voice dialog instructions received from remote multimedia devices and provided to VoiceXML interpreter () through voice server application ().","A multimodal application () in a thin client architecture may provide voice dialog instructions, VoiceXML segments, VoiceXML <form> elements, and the like, to VoiceXML interpreter () through data communications across a network with multimodal application (). The voice dialog instructions include one or more grammars, data input elements, event handlers, and so on, that advise the VoiceXML interpreter how to administer voice input from a user and voice prompts and responses to be presented to a user. The VoiceXML interpreter administers such dialogs by processing the dialog instructions sequentially in accordance with a VoiceXML Form Interpretation Algorithm (\u2018FIA\u2019) (). The VoiceXML interpreter interprets VoiceXML dialogs provided to the VoiceXML interpreter by a multimodal application.","As mentioned above, a Form Interpretation Algorithm (\u2018FIA\u2019) drives the interaction between the user and a multimodal application. The FIA is generally responsible for selecting and playing one or more speech prompts, collecting a user input, either a response that fills in one or more input items, or a throwing of some event, and interpreting actions that pertained to the newly filled in input items. The FIA also handles multimodal application initialization, grammar activation and deactivation, entering and leaving forms with matching utterances and many other tasks. The FIA also maintains an internal prompt counter that is increased with each attempt to provoke a response from a user. That is, with each failed attempt to prompt a matching speech response from a user an internal prompt counter is incremented.","Also stored in RAM () is an operating system (). Operating systems useful in voice servers according to embodiments of the present invention include UNIX\u2122, Linux\u2122, Microsoft NT\u2122, AIX\u2122, IBM's i5\/OS\u2122, and others as will occur to those of skill in the art. Operating system (), voice server application (), VoiceXML interpreter (), ASR engine (), JVM (), and TTS Engine () in the example of  are shown in RAM (), but many components of such software typically are stored in non-volatile memory also, for example, on a disk drive ().","Voice server () of  includes bus adapter (), a computer hardware component that contains drive electronics for high speed buses, the front side bus (), the video bus (), and the memory bus (), as well as drive electronics for the slower expansion bus (). Examples of bus adapters useful in voice servers according to embodiments of the present invention include the Intel Northbridge, the Intel Memory Controller Hub, the Intel Southbridge, and the Intel I\/O Controller Hub. Examples of expansion buses useful in voice servers according to embodiments of the present invention include Industry Standard Architecture (\u2018ISA\u2019) buses and Peripheral Component Interconnect (\u2018PCI\u2019) buses.","Voice server () of  includes disk drive adapter () coupled through expansion bus () and bus adapter () to processor () and other components of the voice server (). Disk drive adapter () connects non-volatile data storage to the voice server () in the form of disk drive (). Disk drive adapters useful in voice servers include Integrated Drive Electronics (\u2018IDE\u2019) adapters, Small Computer System Interface (\u2018SCSI\u2019) adapters, and others as will occur to those of skill in the art. In addition, non-volatile computer memory may be implemented for a voice server as an optical disk drive, electrically erasable programmable read-only memory (so-called \u2018EEPROM\u2019 or \u2018Flash\u2019 memory), RAM drives, and so on, as will occur to those of skill in the art.","The example voice server of  includes one or more input\/output (\u2018I\/O\u2019) adapters (). I\/O adapters in voice servers implement user-oriented input\/output through, for example, software drivers and computer hardware for controlling output to display devices such as computer display screens, as well as user input from user input devices () such as keyboards and mice. The example voice server of  includes a video adapter (), which is an example of an I\/O adapter specially designed for graphic output to a display device () such as a display screen or computer monitor. Video adapter () is connected to processor () through a high speed video bus (), bus adapter (), and the front side bus (), which is also a high speed bus.","The example voice server () of  includes a communications adapter () for data communications with other computers () and for data communications with a data communications network (). Such data communications may be carried out serially through RS-232 connections, through external buses such as a Universal Serial Bus (USW), through data communications data communications networks such as IP data communications networks, and in other ways as will occur to those of skill in the art. Communications adapters implement the hardware level of data communications through which one computer sends data communications to another computer, directly or through a data communications network. Examples of communications adapters useful for embodiments of the present invention include modems for wired dial-up communications, Ethernet (IEEE 802.3) adapters for wired data communications network communications, and 802.11 adapters for wireless data communications network communications.","Voice server () of  includes a multimodal teleconferencing module (), a module of automated computing machinery for multimodal teleconferencing according to the present invention. The multimodal teleconferencing module of  includes computer program instructions for receiving a speech utterance from one of a plurality of participants in the multimodal teleconference; identifying the participant making the speech utterance as a current speaker; retrieving, from accounts for the current speaker, content for display to the current speaker; retrieving, from accounts for the current speaker, content for display to one or more other participants in the multimodal teleconference; providing, to a multimodal teleconferencing client for display to the current speaker, an identification of the speaker and the content retrieved for the speaker; and providing, to one or more of multimodal teleconferencing clients for display to the other participants, an identification of the current speaker with the content retrieved for the one or more other participants in the multimodal teleconference. The multimodal teleconferencing module of  also includes computer program instructions for receiving speech from the current speaker; creating text from the speech; and providing, to the multimodal teleconferencing clients for all participants in the multimodal teleconference, the text as a transcript of the multimodal teleconference.","The multimodal teleconferencing module () of  also includes computer program instructions for identifying, by the multimodal teleconferencing module, the participant making the speech utterance as a current speaker further by receiving speech from the current speaker; and determining whether the speech matches the voiceprint of a participant of the multimodal teleconference. The multimodal teleconferencing module of  also includes computer program instructions for identifying the caller as a valid participant in the multimodal telephone conference by receiving speech from the current speaker; identifying the telephone number of the current speaker; and determining whether the phone number of the current speaker matches a known number of a participant of the multimodal teleconference.","For further explanation,  sets forth a functional block diagram of example apparatus for multimodal teleconferencing in a thin client architecture according to embodiments of the present invention. The example of  includes a multimodal device () and a voice server () connected for data communication by a VOIP connection () through a data communications network (). A multimodal application () runs on the multimodal device (), and a voice server application () runs on the voice server (). The multimodal client application () may be a set or sequence of X+V () or SALT documents that execute on multimodal browser (), a Java voice application that executes on the Java Virtual Machine (), or a multimodal application implemented in other technologies as may occur to those of skill in the art. The example multimodal device of  also includes a sound card (), which is an example of an I\/O adapter specially designed for accepting analog audio signals from a microphone () and converting the audio analog signals to digital form for further processing by a codec ().","In addition to the multimodal sever application (), the voice server () also has installed upon it a speech engine () with an ASR engine (), a grammar (), a lexicon (), a language-specific acoustic model (), and a TTS engine (), as well as a JVM (), and a Voice XML interpreter (). VoiceXML interpreter () interprets and executes VoiceXML dialog instructions received from the multimodal application and provided to VoiceXML interpreter () through voice server application (). VoiceXML input to VoiceXML interpreter () may originate from the multimodal application () implemented as an X+V client running remotely on the multimodal device (). As noted above, the multimodal application () also may be implemented as a Java client application running remotely on the multimedia device (), a SALT application running remotely on the multimedia device (), and in other ways as may occur to those of skill in the art.","VOIP stands for \u2018Voice Over Internet Protocol,\u2019 a generic term for routing speech over an IP-based data communications network. The speech data flows over a general-purpose packet-switched data communications network, instead of traditional dedicated, circuit-switched voice transmission lines. Protocols used to carry voice signals over the IP data communications network are commonly referred to as \u2018Voice over IP\u2019 or \u2018VOIP\u2019 protocols. VOIP traffic may be deployed on any IP data communications network, including data communications networks lacking a connection to the rest of the Internet, for instance on a private building-wide local area data communications network or \u2018LAN.\u2019","Many protocols are used to effect VOIP. The two most popular types of VOIP are effected with the IETF's Session Initiation Protocol (\u2018SIP\u2019) and the ITU's protocol known as \u2018H.323.\u2019 SIP clients use TCP and UDP port 5060 to connect to SIP servers. SIP itself is used to set up and tear down calls for speech transmission. VOIP with SIP then uses RTP for transmitting the actual encoded speech. Similarly, H.323 is an umbrella recommendation from the standards branch of the International Telecommunications Union that defines protocols to provide audio-visual communication sessions on any packet data communications network.","The apparatus of  operates in a manner that is similar to the operation of the system of  described above. Multimodal application () is a user-level, multimodal, client-side computer program that presents a voice interface to user (), provides audio prompts and responses () and accepts input speech for recognition (). Multimodal application () provides a speech interface through which a user may provide oral speech for recognition through microphone () and have the speech digitized through an audio amplifier () and a coder\/decoder (\u2018codec\u2019) () of a sound card () and provide the digitized speech for recognition to ASR engine (). Multimodal application () then packages the digitized speech in a recognition request message according to a VOIP protocol, and transmits the speech to voice server () through the VOIP connection () on the network ().","Voice server application () provides voice recognition services for multimodal devices by accepting dialog instructions, VoiceXML segments, and returning speech recognition results, including text representing recognized speech, text for use as variable values in dialogs, and output from execution of semantic interpretation scripts as well as voice prompts. Voice server application () includes computer program instructions that provide text-to-speech (\u2018TTS\u2019) conversion for voice prompts and voice responses to user input in multimodal applications such as, for example, X+V applications, SALT applications, or Java Speech applications.","The voice server application () receives speech for recognition from a user and passes the speech through API calls to VoiceXML interpreter () which in turn uses an ASR engine () for speech recognition. The ASR engine receives digitized speech for recognition, uses frequency components of the digitized speech to derive an SFV, uses the SFV to infer phonemes for the word from the language-specific acoustic model (), and uses the phonemes to find the speech in the lexicon (). The ASR engine then compares speech found as words in the lexicon to words in a grammar () to determine whether words or phrases in speech are recognized by the ASR engine.","Voice server () of  includes a multimodal teleconferencing module (), a module of automated computing machinery for multimodal teleconferencing according to the present invention. The multimodal teleconferencing module of  includes computer program instructions for receiving a speech utterance from one of a plurality of participants in the multimodal teleconference; identifying the participant making the speech utterance as a current speaker; retrieving, from accounts for the current speaker, content for display to the current speaker; retrieving, from accounts for the current speaker, content for display to one or more other participants in the multimodal teleconference; providing, to a multimodal teleconferencing client () for display to the current speaker (), an identification of the speaker and the content retrieved for the speaker; and providing, to one or more of multimodal teleconferencing clients for display to the other participants (), an identification of the current speaker with the content retrieved for the one or more other participants in the multimodal teleconference. The multimodal teleconferencing module of  also includes computer program instructions for receiving speech from the current speaker; creating text from the speech; and providing, to the multimodal teleconferencing clients for all participants in the multimodal teleconference, the text as a transcript of the multimodal teleconference.","The multimodal teleconferencing module () of  also includes computer program instructions for identifying, by the multimodal teleconferencing module, the participant making the speech utterance as a current speaker further by receiving speech from the current speaker; and determining whether the speech matches the voiceprint of a participant of the multimodal teleconference. The multimodal teleconferencing module of  also includes computer program instructions for identifying the caller as a valid participant in the multimodal telephone conference by receiving speech from the current speaker; identifying the telephone number of the current speaker; and determining whether the phone number of the current speaker matches a known number of a participant of the multimodal teleconference.","A client side multimodal application (), in some embodiments of the present invention, may run in multimodal teleconferencing client () including a multimodal browser () for speech navigation of content of the multimodal teleconference. The multimodal teleconferencing client of  is capable generally of receiving content for display to the current speaker () and displaying the content during the multimodal teleconference. Similarly, multimodal teleconferencing clients are capable of receiving content for display to the other participants () and displaying the content during the multimodal teleconference. The multimodal teleconferencing client of  is also capable of receiving content for display to the current speaker () and displaying the content during the multimodal teleconference receiving a speech utterance identifying another particular participant of interest or receiving through a non-voice mode user input device an identification of another particular participant of interest; requesting, from the multimodal teleconferencing module; content of the another particular participant of interest; and displaying, by the multimodal teleconferencing client to the listening participant, the content of the another particular participant of interest.","The multimodal application () is operatively coupled to the ASR engine (). In this example, the operative coupling between the multimodal application and the ASR engine () is implemented with a VOIP connection () through a voice services module (), then through the voice server application () and either JVM (), VoiceXML interpreter (), or SALT interpreter (), depending on whether the multimodal application is implemented in X+V, Java, or SALT. The voice services module () is a thin layer of functionality, a module of computer program instructions, that presents an API () for use by an application level program in providing dialog instructions and speech for recognition to a voice server application () and receiving in response voice prompts and other responses. In this example, application level programs are represented by multimodal application (), JVM (), and multimodal browser ().","The voice services module () provides data communications services through the VOIP connection and the voice server application () between the multimodal device () and the VoiceXML interpreter (). The API () is the same API presented to applications by a VoiceXML interpreter when the VoiceXML interpreter is installed on the multimodal device in a thick client architecture ( on ). So from the point of view of an application calling the API (), the application is calling the VoiceXML interpreter directly. The data communications functions of the voice services module () are transparent to applications that call the API (). At the application level, calls to the API () may be issued from the multimodal browser (), which provides an execution environment for the multimodal application () when the multimodal application is implemented with X+V. And calls to the API () may be issued from the JVM (), which provides an execution environment for the multimodal application () when the multimodal application is implemented with Java.","Multimodal teleconferencing according to embodiments of the present invention in thick client architectures is generally implemented with multimodal devices, that is, automated computing machinery or computers. In the system of , for example, all the multimodal devices () are implemented to some extent at least as computers. For further explanation, therefore,  sets forth a block diagram of automated computing machinery comprising an example of a computer useful as a multimodal device () for multimodal teleconferencing according to embodiments of the present invention. In a multimodal device implementing a thick client architecture as illustrated in , the multimodal device () has no connection to a remote voice server for use with a VoiceXML interpreter and a speech engine. All the components needed for speech synthesis and voice recognition according to embodiments of the present invention are installed or embedded in the multimodal device itself. The device () of  does however maintain a connection with a multimodal teleconferencing module residing on a server to carry out multimodal teleconferencing according to embodiments of the present invention.","The example multimodal device () of  includes several components that are structured and operate similarly as do parallel components of the voice server, having the same drawing reference numbers, as described above with reference to : at least one computer processor (), frontside bus (), RAM (), high speed memory bus (), bus adapter (), video adapter (), video bus (), expansion bus (), communications adapter (), I\/O adapter (), disk drive adapter (), an operating system (), a JVM (), a VoiceXML Interpreter (), a speech engine (), and so on. As in the system of , the speech engine in the multimodal device of  includes an ASR engine (), a grammar (), a lexicon (), a language-dependent acoustic model (), and a TTS engine (). The VoiceXML interpreter () administers such dialogs by processing the dialog instructions sequentially in accordance with a VoiceXML Form Interpretation Algorithm (FIX) ().","The speech engine () in this kind of embodiment, a thick client architecture, often is implemented as an embedded module in a small form factor device such as a handheld device, a mobile phone, PDA, and the like. An example of an embedded speech engine useful according to embodiments of the present invention is IBM's Embedded Via Voice Enterprise. The example multimodal device of  also includes a sound card (), which is an example of an I\/O adapter specially designed for accepting analog audio signals from a microphone () and converting the audio analog signals to digital form for further processing by a codec (). The sound card () is connected to processor () through expansion bus (), bus adapter (), and front side bus ().","Also stored in RAM () in this example is a multimodal application (), a module of computer program instructions capable of operating a multimodal device as an apparatus that supports embodiments of the present invention. The multimodal application () runs with a multimodal browser () and implements speech recognition by accepting speech for recognition from a user and sending the speech for recognition through API calls to the ASR engine (). The multimodal application () and the multimodal browser () implement speech synthesis generally by sending words to be used as prompts for a user to the TTS engine (). As an example of thick client architecture, the multimodal application () in this example does not send speech for recognition across a network to a voice server for recognition, and the multimodal application () in this example does not receive synthesized speech, TTS prompts and responses, across a network from a voice server. All grammar processing, voice recognition, and text to speech conversion in this example is performed in an embedded fashion in the multimodal device () itself.","More particularly, multimodal application () in this example is a user-level, multimodal, client-side computer program that provides a speech interface through which a user may provide oral speech for recognition through microphone (), have the speech digitized through an audio amplifier () and a coder\/decoder (\u2018codec\u2019) () of a sound card () and provide the digitized speech for recognition to ASR engine (). The multimodal application () may be implemented as a set or sequence of X+V documents executing in a multimodal browser () or microbrowser that passes VoiceXML grammars and digitized speech by calls through an API () directly to an embedded VoiceXML interpreter () for processing. The embedded VoiceXML interpreter () may in turn issue requests for speech recognition through API calls directly to the embedded ASR engine (). Multimodal application () also can provide speech synthesis, TTS conversion, by API calls to the embedded TTS engine () for voice prompts and voice responses to user input.","In further example embodiments, the multimodal application () may be implemented as a set or sequence X+V documents or SALT documents executed on a multimodal browser () or microbrowser that issues calls through the VoiceXML API () for speech recognition and speech synthesis services. In addition to X+V, SALT, and Java implementations, multimodal application () may be implemented in other technologies as will occur to those of skill in the art, and all such implementations are well within the scope of the present invention.","The multimodal application () is operatively coupled to the ASR engine () through an API (). In this example, the operative coupling between the multimodal application and the ASR engine () is implemented by either JVM (), VoiceXML interpreter (), or SALT interpreter (), depending on whether the multimodal application is implemented in X+V, Java, or SALT. When the multimodal application () is implemented in X+V, the operative coupling is effected through the multimodal browser (), which provides an operating environment and an interpreter for the X+V application, and then through the VoiceXML interpreter, which passes grammars and voice utterances for recognition to the ASR engine. When the multimodal application () is implemented in Java Speech, the operative coupling is effected through the JVM (), which provides an operating environment for the Java application and passes grammars and voice utterances for recognition to the ASR engine. When the multimodal application () is implemented in SALT, the operative coupling is effected through the SALT interpreter (), which provides an operating environment and an interpreter for the X+V application and passes grammars and voice utterances for recognition to the ASR engine.","The multimodal application () in this example, running on a multimodal device () that contains its own VoiceXML interpreter () and its own speech engine () with no network or VOIP connection to a remote voice server containing a remote VoiceXML interpreter or a remote speech engine, is an example of a so-called \u2018thick client architecture,\u2019 so-called because all of the functionality for processing voice mode interactions between a user and the multimodal application\u2014as well as the functionality for speech recognition\u2014is implemented on the multimodal device itself.","At least a portion of the client side multimodal application (), in some embodiments of the present invention, may also run in multimodal teleconferencing client () including a multimodal browser () for speech navigation of content of the multimodal teleconference. The multimodal teleconferencing client of  is capable generally of receiving content for display to the current speaker () and displaying the content during the multimodal teleconference. Similarly, multimodal teleconferencing clients are capable of receiving content for display to the other participants () and displaying the content during the multimodal teleconference.","The multimodal teleconferencing client of  is capable generally of receiving content for display to the current speaker () and displaying the content during the multimodal teleconference. Similarly, multimodal teleconferencing clients are capable of receiving content for display to the other participants () and displaying the content during the multimodal teleconference. The multimodal teleconferencing client of  is also capable of receiving content for display to the current speaker () and displaying the content during the multimodal teleconference receiving a speech utterance identifying another particular participant of interest or receiving through a non-voice mode user input device an identification of another particular participant of interest; requesting, from the multimodal teleconferencing module; content of the another particular participant of interest; and displaying, by the multimodal teleconferencing client to the listening participant, the content of the another particular participant of interest.","For further explanation,  sets forth a flowchart illustrating an example method of multimodal teleconferencing according to embodiments of the present invention. The method of  is implemented with the multimodal application and a multimodal teleconferencing module, a module of automated computing machinery operating on a server supporting a voice mode including accepting speech input from participants of the multimodal teleconference through a telephony interface, digitizing the speech, and providing digitized speech to a speech engine, The method of  includes receiving (), by the multimodal teleconferencing module (), a speech utterance from one () of a plurality of participants in the multimodal teleconference. Receiving () a speech utterance from one of a plurality of participants in the multimodal teleconference is carried out through a telephony connection with the multimodal teleconferencing module and a telephony device available to each of the participants of the multimodal teleconference. As mentioned above, telephony encompasses the general use of equipment to provide voice communication over distances. A telephony call may include traditional telephones through the public switched telephone network (PSTN), digital telephony devices for digital provisioning of telephone services and systems, IP telephony using the TCP\/IP protocol, and many others as will occur to those of skill in the art.","The method of  also includes identifying (), by the multimodal teleconferencing module (), the participant () making the speech utterance as a current speaker (). Identifying (), by the multimodal teleconferencing module (), the participant () making the speech utterance as a current speaker () may be carried out by receiving speech from the current speaker and determining whether the speech matches the voiceprint of a participant of the multimodal teleconference as discussed below with reference to . Identifying the caller as a valid participant in the multimodal telephone conference may be carried out by receiving speech from the current speaker; identifying the telephone number of the current speaker; and determining whether the phone number of the current speaker matches a known number of a participant of the multimodal teleconference as discussed below with reference to .","The method of  also includes retrieving (), by the multimodal teleconferencing module () from accounts () for the current speaker (), content () for display to the current speaker (). Retrieving by the multimodal teleconferencing module from accounts for the current speaker, content for display to the current speaker may include retrieving email for the current speaker concerning the multimodal teleconference, biographical information about the current speaker, documents of the current speaker related to the multimodal teleconference, or other content as will occur to those of skill in the art. Accounts () for the current speaker () may include user accounts or group accounts to which the current speaker has authority to share content. Such accounts may include email accounts, folders containing documents or presentations, accounts with media providers, storage on servers and so on as will occur to those of skill in the art. Content for display for the current speaker may include materials that are personalized for the valid participant such as speaker notes, confidential documents and so on.","The method of  also includes retrieving (), by the multimodal teleconferencing module () from accounts for the speaker (), content () for display to one or more other participants () in the multimodal teleconference. Retrieving by the multimodal teleconferencing module from accounts for the current speaker, content for display to one or more other participants in the multimodal teleconference may include retrieving email for the current speaker concerning the multimodal teleconference, biographical information about the current speaker, documents of the current speaker related to the multimodal teleconference or other content as will occur to those of skill in the art. Content for display to the other participants may include materials that are not confidential or are less confidential than those retrieved for display to the current speaker, generic documents, or others as will occur to those of skill in the art.","The method of  also includes providing (), by the multimodal teleconferencing module () to a multimodal teleconferencing client for display to the current speaker (), an identification of the speaker and the content () retrieved for the speaker. The identification of the speaker and the content for display to the current speaker may then be displayed to the current speaker on the local multimodal teleconferencing client.","The method of  also includes providing (), by the multimodal teleconferencing module () to one or more of multimodal teleconferencing clients for display to the other participants (), an identification of the current speaker () with the content () retrieved for the one or more other participants in the multimodal teleconference. The identification of the speaker and the content for display to the other participants may then be displayed to each of the participants local multimodal teleconferencing clients.","The method of  also includes receiving (), by the multimodal teleconferencing module, speech from the current speaker (). Receiving (), by the multimodal teleconferencing module, speech from the current speaker () may be carried out using a telephony device coupled for data communications with the multimodal teleconferencing module.","The method of  also includes creating (), by the multimodal teleconferencing module (), text from the speech. Creating, by multimodal teleconferencing module, text from the speech may be carried out by calling an API in a speech engine residing on a voice server coupled for data communications with the multimodal teleconferencing module as discussed above.","The method of  also includes providing (), by the multimodal teleconferencing module () to the multimodal teleconferencing clients for all participants in the multimodal teleconference, the text as a transcript of the multimodal teleconference. The transcript may then be displayed by each of the multimodal teleconferencing clients to the participants of the multimodal teleconference.","For further explanation,  sets forth a flow chart illustrating an example method of identifying, by the multimodal teleconferencing module, the participant making the speech utterance as a current speaker. The method of  includes receiving () speech from the current speaker () and determining () whether the speech matches the voiceprint () of a participant of the multimodal teleconference. A voice print for the valid participant models the physiological characteristics of the particular participants voice and can be used to authenticate that valid participant's identity. Authentication against a voice print is based on inherent properties of the speaker's voice, so it often provides a higher level of security than prompting for a password or personal identification number. Voiceprints for all participants of the multimodal teleconference may be gathered prior to the multimodal teleconference and stored for authenticating current speakers upon receiving speech from those participants.","If a new current speaker is identified, then multimodal teleconferencing according to the present invention may proceed by retrieving content for display to the new current speaker; retrieving content for display to one or more other participants in the multimodal teleconference, and providing the content for display to the current speaker and the other participants. If a new current speaker is not identified, no new content is retrieved.","For further explanation,  sets forth a flow chart illustrating another example method of identifying the caller as a valid participant in the multimodal telephone conference according to embodiments of the present invention. The method of  includes receiving () speech from the current speaker () and identifying () the telephone number of the current speaker in response to receiving the speech. Automatic Number Identification \u2018ANI\u2019 is a feature of telephony intelligent network services that may be used by a multimodal teleconferencing module to capture the telephone numbers of calling parties. ANI has two components, information digits, which identify the class of service, and the calling party telephone number.","The method of  also includes determining whether the phone number of the current speaker matches a known number of a participant of the multimodal teleconference. A well known number for the participants are numbers previously determined to be associated with the valid participants of the multimodal teleconference. Well known numbers for all invited participants may be gathered prior to the multimodal teleconference and stored for authenticating valid participants upon receiving each call into the multimodal teleconference.","If a new current speaker is identified, then multimodal teleconferencing according to the present invention may proceed by retrieving content for display to the new current speaker; retrieving content for display to one or more other participants in the multimodal teleconference, and providing the content for display to the current speaker and the other participants. If a new current speaker is not identified, no new content is retrieved.","During a multimodal teleconference, participants may desire to view content of participants other than the current speaker. For further explanation, therefore,  sets forth a flow chart illustrating additional aspects of multimodal teleconferencing according to embodiments of the present invention. The method of  includes receiving (), by the multimodal teleconferencing client () of listening participant () other than the current speaker, a speech utterance identifying another particular participant of interest (). Another particular participant of interest. () may be an participant of the multimodal teleconference typically other than the listening participant of interest and the current speaker. In some embodiments not illustrated, the another particular participant of interest. () is the same participant as the listening participant (). That is, a participant may identify themselves and receive content for themselves for display on the multimodal teleconferencing client.","The method of  also includes requesting (), by the multimodal teleconferencing client () from the multimodal teleconferencing module (), content of the another particular participant of interest. Requesting (), by the multimodal teleconferencing client () from the multimodal teleconferencing module (), content of the another particular participant of interest may be carried out through the use of any data communications protocol supported by both the multimodal teleconferencing client () and the multimodal teleconferencing module () such as HTTP, WAP, SIP, and so on as will occur to those of skill in the art.","The method of  also includes retrieving (), by the multimodal teleconferencing module () from accounts for the another particular participant of interest, content of the another particular participant of interest ().","Retrieving (), by the multimodal teleconferencing module () from accounts for the another particular participant of interest, content of the another particular participant of interest () may include retrieving email for the another particular participant of interest () concerning the multimodal teleconference, biographical information about the another particular participant of interest (), documents of the another particular participant of interest () related to the multimodal teleconference or other content as will occur to those of skill in the art.","The method of  also includes providing (), by the multimodal teleconferencing module ()) to a multimodal teleconferencing client () for display to the listening participant (), the content of the another particular participant of interest (). Providing () the content of the another particular participant of interest () may be carried out through the use of any data communications protocol supported by both the multimodal teleconferencing client () and the multimodal teleconferencing module () such as HTTP, WAP, SIP, and so on as will occur to those of skill in the art.","The method of  also includes displaying (), by the multimodal teleconferencing client () to the listening participant (), the content of the another particular participant of interest (). Displaying (), by the multimodal teleconferencing client () to the listening participant (), the content of the another particular participant of interest () may be carried out through the use of a multimodal browser of the multimodal teleconferencing client.","Multimodal teleconferencing provides for interaction through voice modes and non-voice modes. For further explanation, therefore,  sets forth a flow chart illustrating additional aspects of multimodal teleconferencing according to embodiments of the present invention. The method of  is similar to the method of  in that the method of  includes requesting (), by the multimodal teleconferencing client () from the multimodal teleconferencing module (); content of the another particular participant of interest (); retrieving (), by the multimodal teleconferencing module from accounts () for the another particular participant of interest (), content of the another particular participant of interest (); providing (), by the multimodal teleconferencing module () to a multimodal teleconferencing client () for display to the listening participant (), the content of the another particular participant of interest; and displaying ()=, by the multimodal teleconferencing client () to the listening participant (), the content of the another particular participant of interest.","The method of  differs from the method of  in that instead of receiving, by the multimodal teleconferencing client of listening participant other than the current speaker, a speech utterance identifying another particular participant of interest, the method of  includes receiving (), by the multimodal teleconferencing client () of listening participant () other than the current speaker through a non-voice mode user input device, an identification of another particular participant of interest (). Receiving (), by the multimodal teleconferencing client () of listening participant () other than the current speaker through a non-voice mode user input device, an identification of another particular participant of interest () may be carried out though a mouse click on a GUI, keystrokes on a keyboard, invocation of a touch sensitive screen or in any other manner as will occur to those of skill in the art.","For further explanation, consider the following portion of a multimodal application for use by a multimodal teleconferencing module to carry out aspects of multimodal teleconferencing according to the present invention.",{"@attributes":{"id":"p-0101","num":"0131"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0","pgwide":"1"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"1"},"colspec":{"@attributes":{"colname":"1","colwidth":"259pt","align":"left"}},"thead":{"row":{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":"<!DOCTYPE html PUBLIC \u201c-\/\/VoiceXML Forum\/\/DTD XHTML+Voice 1.2\/\/EN\u201d"},{"entry":"\u201chttp:\/\/www.voicexml.org\/specs\/multimodal\/x+v\/12\/dtd\/xhtml+voicel2.dtd\u201d>"},{"entry":"<html xmlns=\u201chttp:\/\/www.w3.org\/1999\/xhtml\u201d"},{"entry":"\u2003\u2002xmlns:vxml=\u201chttp:\/\/www.w3.org\/2001\/vxml\u201d"},{"entry":"\u2003\u2002xmlns:ev=\u201chttp:\/\/www.w3.org\/2001\/xml-events\u201d"},{"entry":"\u2003\u2002xmlns:xv=\u201chttp:\/\/www.voicexml.org\/2002\/xhtml+voice\u201d xml:lang=\u201cen-US\u201d>"},{"entry":"\u2002<head>"},{"entry":"\u2003<title>Multimodal Teleconferencing<\/title>"},{"entry":"\u2003<script type=\u201ctext\/javascript\u201d>"},{"entry":"\u2003\u2002<![CDATA["},{"entry":"\u2003\u2002\/\/ List of valid participants"},{"entry":"\u2003\u2002var gParticipants = new array;"},{"entry":"\u2003\u2002\/\/ This is an Ajax function that causes the current speaker to be"},{"entry":"\u2003\u2002\/\/ updated asynchronously from the server."},{"entry":"\u2003\u2002function waitForNewCurrentSpeaker( )"},{"entry":"\u2003\u2002{"},{"entry":"\u2003\u2003\/\/ Create an XMLHttpRequest object with its call back funtion"},{"entry":"\u2003\u2003var xmlhttp = new XMLHttpRequest( );"},{"entry":"\u2003\u2003xmlhttp.onreadystatechange ="},{"entry":"\u2003\u2003\u2002function( )"},{"entry":"\u2003\u2003\u2002{"},{"entry":"\u2003\u2003\u2003if(xmlhttp.readyState==4)"},{"entry":"\u2003\u2003\u2003{"},{"entry":"\u2003\u2003\u2003\u2002\/\/ Triger the content to be updated with a new current speaker"},{"entry":"\u2003\u2003\u2003\u2002selectParticipant(xmlhttp.responseText);"},{"entry":"\u2003\u2003\u2003\u2002\/\/ Set up a new Ajax listener to wait for the next new speaker"},{"entry":"\u2003\u2003\u2003\u2002waitForNewCurrentSpeaker( );"},{"entry":"\u2003\u2003\u2003}"},{"entry":"\u2003\u2003\u2002}"},{"entry":"\u2003\u2003\/\/ Send a request to the web server to be notified of a new speaker"},{"entry":"\u2003\u2003xmlhttp.open(\u201cGET\u201d,\u201cnewspeaker.jsp\u201d, true);"},{"entry":"\u2003\u2003xmlhttp.send(null);"},{"entry":"\u2003\u2002}"},{"entry":"\u2003\u2002function getValidParticipants( )"},{"entry":"\u2003\u2002{"},{"entry":"\u2003\u2003\/\/ This function uses queries the conference system for the list"},{"entry":"\u2003\u2003\/\/ of valid participants and puts their names in the variable \u201cgParticipants\u201d"},{"entry":"\u2003\u2002}"},{"entry":"\u2003\u2002function updateParticipants( )"},{"entry":"\u2003\u2002{"},{"entry":"\u2003\u2003var grammar_choice = document.getElementById(\u201cchoice\u201d);"},{"entry":"\u2003\u2003var select_element = document.getElementById(\u201cparticpants\u201d);"},{"entry":"\u2003\u2003var aOption, aItem, aText;"},{"entry":"\u2003\u2003for (name in gParticipants)"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2002\/\/ Update the graphical selection list by creating <option> elements and"},{"entry":"\u2003\u2003\u2002\/\/ appending them as children to the <select> element."},{"entry":"\u2003\u2003\u2002aOption = document.createElement(\u2018option\u2019);"},{"entry":"\u2003\u2003\u2002aText = document.CreateTextNode(name);"},{"entry":"\u2003\u2003\u2002aOption.AppendChild(aText);"},{"entry":"\u2003\u2003\u2002aOption.SetAttribute(\u2018value\u2019, name);"},{"entry":"\u2003\u2003\u2002select_element.appendChild(aOption)"},{"entry":"\u2003\u2003\u2002\/\/ Update the grammar choice list by creating <item> elements and appending"},{"entry":"\u2003\u2003\u2002\/\/ them as children of the <one-of> element"},{"entry":"\u2003\u2003\u2002aItem = document.createElement(\u2018item\u2019);"},{"entry":"\u2003\u2003\u2002aText = document.CreateTextNode(name);"},{"entry":"\u2003\u2003\u2002aItem.appendChild(aText);"},{"entry":"\u2003\u2003\u2002grammar_choice.appendChild(aItem);"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2002}"},{"entry":"\u2003\u2002function selectParticipant(name)"},{"entry":"\u2003\u2002{"},{"entry":"\u2003\u2003\/\/ This function searches the select list for the index of the given name and then"},{"entry":"\u2003\u2003\/\/ sets the selectedIndex to that. Changing selectedIndex fires the list's"},{"entry":"onchange( )"},{"entry":"\u2003\u2003var list = document.getElementById(\u2018participants\u2019);"},{"entry":"\u2003\u2003for (i=0; i < list.options.length; i++)"},{"entry":"\u2003\u2003{"},{"entry":"\u2003\u2003\u2002if(list.options[i].value == name)"},{"entry":"\u2003\u2003\u2003\u2002break;"},{"entry":"\u2003\u2003}"},{"entry":"\u2003\u2003list.selectedIndex = i;"},{"entry":"\u2003\u2002}"},{"entry":"\u2003\u2002function updateCurrentSpeaker(list)"},{"entry":"\u2003\u2002{"},{"entry":"\u2003\u2003var index = list.selectedIndex;"},{"entry":"\u2003\u2003var current = document.getElementById(\u2018currentSpeaker\u2019);"},{"entry":"\u2003\u2003current.value = list.options[selIndex].value;"},{"entry":"\u2003\u2003updateCurrentSpeakerContent( );"},{"entry":"\u2003\u2002}"},{"entry":"\u2003\u2002function updateCurrentSpeakerContent( )"},{"entry":"\u2003\u2002{"},{"entry":"\u2003\u2003var name document.getElementById(\u2018currentSpeaker\u2019);"},{"entry":"\u2003\u2003\/\/ This function retrieves content for the current speaker"},{"entry":"\u2003\u2003\/\/ using well known methods like Ajax"},{"entry":"\u2003\u2002}"},{"entry":"\u2003\u2002]]>"},{"entry":"\u2003<\/script>"},{"entry":"\u2003<script id=\u201cInitParticipants\u201d type=\u201ctext\/javascript\u201d>"},{"entry":"\u2003\u2002updateParticipants( );"},{"entry":"\u2003\u2002waitForNewCurrentSpeaker( );"},{"entry":"\u2003<\/script>"},{"entry":"\u2003<!-- First prompt for the artist name -->"},{"entry":"\u2003<vxml:form id=\u201cvforml\u201d name=\u201cvforml\u201d>"},{"entry":"\u2003\u2002<vxml:field name=\u201cname\u201d>"},{"entry":"\u2003\u2003<vxml:grammar id=\u201cnamelist\u201d>"},{"entry":"\u2003\u2003\u2002<rule id=\u201cparicipant-names\u201d scope=\u201cpublic\u201d>"},{"entry":"\u2003\u2003\u2003<one-of id=\u201cchoice\u201d ><tag>$choice=$<\/tag> <\/one-of>"},{"entry":"\u2003\u2003\u2003<!-- After UpdateParticipants( ) runs the grammar will have the following"},{"entry":"choices"},{"entry":"\u2003\u2003\u2003<one-of>"},{"entry":"\u2003\u2003\u2003\u2002<item>Bill Bodin<\/item>"},{"entry":"\u2003\u2003\u2003\u2002<item>Chris Cross<\/item>"},{"entry":"\u2003\u2003\u2003\u2002<item>Ciprian Agapi<\/item>"},{"entry":"\u2003\u2003\u2003<\/one-of>"},{"entry":"\u2003\u2003\u2003-->"},{"entry":"\u2003\u2003\u2002<\/rule>"},{"entry":"\u2003\u2003<\/vxml:grammar>"},{"entry":"\u2003\u2003<vxml:filled>"},{"entry":"\u2003\u2003\u2002<!-- Trigger the content to update for the selected name -->"},{"entry":"\u2003\u2003\u2002<vxml:assign name=\u201ctemp\u201d expr=\u201cselectParticipant($choice)\u201d\/>"},{"entry":"\u2003\u2003<\/vxml:filled>"},{"entry":"\u2003\u2002<\/vxml:field>"},{"entry":"\u2003\u2002<!-- After trigerring an update of the content the we just start the voice form"},{"entry":"\u2003\u2003\u2002listening again for the next choice -->"},{"entry":"\u2003\u2002<vxml:goto nextitem=\u201cvform1\u201d\/>"},{"entry":"\u2003<\/vxml:form>"},{"entry":"\u2003<!-- When the document load it first gets the conference participants and then starts"},{"entry":"\u2003\u2003a voice form to wait for the user's choice. -->"},{"entry":"\u2003<listener event=\u201cload\u201d observer=\u201cmain\u201d target=\u201cmain\u201d"},{"entry":"handler=\u201c#InitParticipants( )\u201d\/>"},{"entry":"\u2003<listener event=\u201cload\u201d observer=\u201cmain\u201d target=\u201cmain\u201d handler=\u201c#vforml\u201d\/>"},{"entry":"\u2002<\/head>"},{"entry":"\u2002<body id=\u201cmain\u201d>"},{"entry":"\u2003<form action=\u201c\u201d>"},{"entry":"\u2003\u2002<p>Conference Participants<\/p>"},{"entry":"\u2003\u2002<select id=\u201cparticpants\u201d size=\u201c5\u201d onchange=\u201cupdateCurrentSpeaker(this)\u201d\/>"},{"entry":"\u2003\u2002<!-- After UpdateParticipants( ) runs the selection list contains the following"},{"entry":"options"},{"entry":"\u2003\u2002<select>"},{"entry":"\u2003\u2003<option value=\u201cBill Bodin\u201d>Bill Bodin<option\/>"},{"entry":"\u2003\u2003<option value=\u201cChris Cross\u201d>Chris Cross<option\/>"},{"entry":"\u2003\u2003<option value=\u201cCiprian Agapi\u201d>Ciprian Agapi<option\/>"},{"entry":"\u2003\u2002<\/select>"},{"entry":"\u2003\u2002-->"},{"entry":"\u2003\u2002<br\/>"},{"entry":"\u2003\u2002<p>Current Speaker"},{"entry":"\u2003\u2002<input type=\u2018text\u2019 id=\u2018currentSpeaker\u2019\/>"},{"entry":"\u2003\u2002<\/p>"},{"entry":"\u2003\u2002<!-- The rest of the content on the page is created dynamically"},{"entry":"\u2003\u2003\u2003by the function updateCurrentSpeakerContent( ) -->"},{"entry":"\u2003<\/form>"},{"entry":"\u2002<\/body>"},{"entry":"<\/html>"},{"entry":{"@attributes":{"namest":"1","nameend":"1","align":"center","rowsep":"1"}}}]}}}}},"In the example above, the function waitForNewCurrentSpeaker( ) is an Ajax function that waits for a new speaker to be identified and triggers content to be retrieved for display to the current speaker and the other participants of the multimodal teleconference. The waitForNewCurrentSpeaker also enables a listener to wait for another speaker to be identified.","The function xmlhttp.onreadystatechange=function( ) in the example above is a Javascript function that dynamically triggers the retrieval of new content from accounts of the current speaker for display to the current speaker and to other participants of the multimodal teleconference. The function getValidParticipants( ) in the example above queries for a list of participants in the multimodal teleconference and includes the names of the participants in a variable \u201cgParticipants.\u201d","The function updateParticipants( ) in this example updates the content for display to the participants other than the speaker and updates the elements of each page displayed to the participants of the multimodal teleconference. updateParticipants( ) also loads a grammar allowing the current speaker to navigate content displayed using speech. The function updateCurrentSpeakerContent( ) in this example retrieves content for display to the current speaker.","The voice form vforml wasst for speech of a participant to be identified as the next current speaker. The voice form does not require a prompt to identify the current speaker. Identifying a speaker the form is filled and content for display to the participants is retrieved upon receiving speech from a new speaker and the voice form is restarted to wait for another current speaker to fill the form.","The example above includes is an X+V page containing two <listener> elements that respond to the load event. The first <listener> element calls InitParticipants( ) which first executes getValidParticipants( ) querying the server for the valid participants. Next it calls updateParticipants( ) which uses dynamic HTML to build the visual list of participants and create a grammar object that will match any of the participant names uttered by the user. Comments enclosed by the elements <select id=\u201cparticpants\u201d . . . > and <one-of id=\u201cchoice\u201d> show example results of dynamically creating the content for the visual list and grammar alternatives, respectively. Finally, waitForNewCurrentSpeaker( ) is called to set up an asynchronous call back to respond to new current speaker events.","The function waitForNewCurrentSpeaker is an Ajax function that waits for a new speaker to be identified. The function object xmlhttp.onreadystatechange contained in waitForNewCurrentSpeaker in the example above is the callback function that is executed in response to satisfying the Ajax request. The response is contained in the variable xmlhttp.responseText which contains the name of the new speaker. The function calls selectParticipant with that variable as an argument to set the current speaker on the display and trigger the retrieval of content for that speaker. Finally, xmlhttp.onreadystatechange calls its parent function waitForNewCurrentSpeaker to register another Ajax call in order to respond to the next change of speaker event from the server.","The second <listener> element starts the VoiceXML form vforml in response to the load event. The VoiceXML form vforml merely listens for one of the participant names. This may be from a listening participant identifying another particular participant of interest. When matched, the <filled> element is processed which calls the function selectParticipant( ) with the recognized name passed in the variable $choice. The function selectParticipant( ) searches for the name in the visual list and then \u2018selects\u2019 that name by setting the property selectedIndex. Thus, uttering a name in the list has the same effect as if the user clicked on the name in the list.","The visual list element <select id=\u201cparticpants\u201d . . . > calls the function updateCurrentSpeaker( ) in response to its onchange event. This event may be triggered either by any of three means: 1) the user clicking on a name in the list, 2) the user uttering a name which is matched by the grammar in vforml, executing selectParticipant( ) or 3) by the server responding asynchronously to the Ajax function waitForNewCurrentSpeaker( ) which also ultimately calls selectParticipant( ).","The function updateCurrentSpeaker( ) uses the current selection of the visual list and calls the function updateCurrentSpeakerContent( ) This function retrieves content such as email, conference transcripts and other documents to update the content of the page for the current speaker.","Example embodiments of the present invention are described largely in the context of a fully functional computer system for multimodal teleconferencing. Readers of skill in the art will recognize, however, that the present invention also may be embodied in a computer program product disposed on computer-readable signal bearing media for use with any suitable data processing system. Such signal bearing media may be transmission media or recordable media for machine-readable information, including magnetic media, optical media, or other suitable media. Examples of recordable media include magnetic disks in hard drives or diskettes, compact disks for optical drives, magnetic tape, and others as will occur to those of skill in the art. Examples of transmission media include telephone networks for voice communications and digital data communications networks such as, for example, Ethernets\u2122 and networks that communicate with the Internet Protocol and the World Wide Web. Persons skilled in the art will immediately recognize that any computer system having suitable programming means will be capable of executing the steps of the method of the invention as embodied in a program product. Persons skilled in the art will recognize immediately that, although some of the example embodiments described in this specification are oriented to software installed and executing on computer hardware, nevertheless, alternative embodiments implemented as firmware or as hardware are well within the scope of the present invention.","It will be understood from the foregoing description that modifications and changes may be made in various embodiments of the present invention without departing from its true spirit. The descriptions in this specification are for purposes of illustration only and are not to be construed in a limiting sense. The scope of the present invention is limited only by the language of the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0019","num":"0018"},"figref":"FIG. 9"}]},"DETDESC":[{},{}]}
