---
title: Method and system of integrating information from multiple sources
abstract: A system and method of integrating information from multiple sources in a document centric application system. A plurality of application systems are connected through an object request broker to a central repository. The information may then be posted on a webpage. An example of an implementation of the method and system is an online procurement system.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07092948&OS=07092948&RS=07092948
owner: The Regents of the University of California
number: 07092948
owner_city: Oakland
owner_country: US
publication_date: 20000907
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"p":["Applicants claim priority to U.S. Provisional Application 60\/153,099 filed on Sep. 9, 1999 and assigned to The Regents of the University of California.","The United States Government has rights in this invention pursuant to Contract No. W-7405-ENG-48 between the United States Department of Energy and the University of California for the operation of Lawrence Livermore National Laboratory.","The invention relates generally to information systems and, more specifically, the invention relates to a system and method for integrating information from multiple source locations.","The data processing resources of large organizations are increasingly taking the form of a client\/server or distributed computing environment (DBE) in which data and processing are dispersed over a network comprising many heterogeneous and geographically remote servers and databases. Many of these servers and databases are programmed in a different variety of computing languages and cannot communicate properly.","Aspects of the invention include a system comprising a first application system containing a first set of data; a second application system containing a second set of data; a first server coupled to the first and second application system; a central repository coupled to the server and capable of integrating the first and second sets of data to form a central repository set of data; and wherein the first and second databases are programmed in a first format and the central repository is programmed in a second format.","Aspects of the invention include a method comprising: creating a first set of data in a first application system; creating a second set of data in a second application system; passing said first and second sets of data to a first server which is configured to run an object broker; passing said first and second sets of data from said first server to a central repository; and integrating said first and second sets of data in the central repository database to form a central repository set of data.","The following description will focus on embodiments which operate in a network environment executing document centric-application systems. The disclosed embodiments are not limited to any particular application or environment. Instead, those skilled in the art will find that the disclosed embodiments may be used advantageously applied to any application or environment where integration of disparate sources of document data is desirable. The description of the exemplary embodiments which follows is, therefore, for the purpose of illustration and not limitation.",{"@attributes":{"id":"p-0013","num":"0012"},"figref":["FIG. 1","FIG. 1","FIG. 2"],"b":["10","100","10","12","22","22","22","14","22","22","22"],"i":["a","a "]},"Simultaneously to forwarding the job specifications to the knowledge management module , requests for job specifications and other document attachments may be forwarded from product data management application system  throughout the network to a variety of different application systems (or data storage modules)  (e.g., engineering records center, vendor authorization center, etc.) to collect further procurement information such as drawings, etc. The job order from the requisition application system  and information from application systems  and  will be integrated in the knowledge management module  and stored in a job order record or folder in the central repository . The knowledge management module  is also configured to display the job order on a website so that it may be accessed through the network or externally over the Internet. Approved vendors  may access the central repository through the website to obtain the job order and, in return, place a quote or bid. The knowledge management module  may be configured to gather bids by vendors and forward them to the requisition application system . After a vendor is awarded the job, the vendor authorization application system  may be notified and a purchase order sent to a designated vendor. The procurement system  may be designed to allow the continuous updating of the central repository by the application systems , ,  and  as the bid process progresses in an efficient manner. Also, since the application systems , ,  and  may run separately from the knowledge management module , in the event the knowledge management module  is disabled, the application systems , ,  and  are still capable of functioning independently.",{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 2","b":["100","100","100","100","101","100","104","101","105","106","100","107","107","104","107","140","132"],"i":["a","a ","a","a "]},"First, second, third and fourth application systems (each with an accompanying database and database server) , , , and  contain information which is required by the knowledge management program which is stored on a server associated with the central repository database . Throughout the disclosure, the term server will be used to indicate hardware, software code or a combination which provide a response to requests for services from other components or applications. The databases of the application systems , ,  and  may be implemented using standard System Query Language (SQL)-type relational databases such as those provided by Oracle Corporation. The information (e.g., computer files) in the application systems , , , and  will take the form of text, graphic data (e.g., from a CAD\/CAM system), or scanned images. The knowledge management program may be a collaborative environment software product such as Livelink\u00ae from Open Text Corporation. For the purposes of this discussion, the knowledge management program will also be known as the central repository database management software. The central repository database management software will be configured to integrate the information provided by the system and method of the disclosed embodiments from the first, second, third and fourth application systems , ,  and  and supply it to vendors . Although four application systems , ,  and  are being shown in  for example purposes, it is to be understood that the system described herein is scaleable and the number of application systems might be greater (or lesser) depending on the number of disparate sources that are required to be integrated.","User interface will allow job specifications to be entered into a product data management application system . These job specifications may be forwarded from the product data management application system  through the communications network (and optionally through the central repository ) to a first application system . First application system  may be a requisition application system. A procurement agent may manually (or automatically) enter the forwarded job specifications into an online order entry system located in first application system  to create a job order. The online order entry system or requisition application system  may be a web-based application and is therefore Transmission Control Protocol\/Internet Protocol (TCP\/IP) compliant. The first application system  is designed to store the job order and any job specification updates and to provide this information to central repository server .","Second, third and fourth application systems ,  and  are configured to provide a wide variety of procurement information to central repository . For example, second application system  may be a procurement system that will provide information such as eligible vendors, predetermined vendor information, and purchase order information to central repository server . Third application system  may be an engineering records system that will provide drawings and other information to the central repository server . Fourth application system  may run a product data management software program that provides job specifications.","First, second and third command servers ,  and  are shown in the schematic of  as being located functionally between the application systems , ,  and  and the central repository server . For exemplary purposes, first command server  may be software code located on the server associated with application system , second command server  may be software code located on the server associated with application system , and third command server  may be software code located on the server associated with application system . However, it is to be understood that in alternative embodiments servers ,  and  may be separate processes running on the same machine, may be remotely located on separate machines in other parts of the enterprise communications network , or a combination of both. Further, multiple command servers may be used depending on volume demand and the location of required procurement information.","First command server  is configured to broker information requests from central repository  and other various applications on the network through a well-known computer technology called object-oriented programming (OOP) which allows a client and server to be located on different (heterogeneous) \u201cplatforms\u201d. An object is a self-contained module of data and its associated processing and a platform is a combination of the specific hardware\/software\/operating system\/communication protocol which a machine uses to do its work. OOP allows the client application program and server application program to operate on their own platforms without requiring knowledge of how the client application's work requests will be communicated and accepted by the server application. Likewise, the server does not require knowledge of how the OOP system will receive, translate and send the server application's processing results back to the requesting client application. The Object Management Group (OMG), which is an international consortium of organizations involved in various aspects of computing on client\/server computing on heterogenous platforms, has set forth published standards by which clients communicate (in OOP form) with servers. As part of these standards, an Object Request Broker (ORB\u2122) has been defined (known as the Common Object Request Broker Architecture, or CORBA\u00ae for short) which provides an object-oriented bridge between the client and the server. In the disclosed embodiments, the command servers ,  and  and administrator server  are object request brokers. CORBA\u00ae standards are discussed in CORBA: Architecture and Specification (OMG, 1998), which is hereby incorporated by reference. The interoperability of CORBA\u00ae allows an object request broker such as first command server  to exchange requests from applications and objects across the communications network ","In the embodiment disclosed herein, first, second and third command servers ,  and  and administrator server  may be programmed in an object oriented programming language such as Java\u00ae from Sun Microsystems Corporation. The Java\u00ae programming language is intended for usage in networked\/distributed environments such as communications network .","First command server  will utilize published API protocols for Java\u00ae to retrieve and supply requested data from application systems  and  to central repository . An API is a set of functions that may be called to perform an action(s). Second and third command servers  and  will retrieve and supply requested data from application systems  and , respectively. Residing in command servers ,  and  are first, second and third commands tables , , and , respectively. The commands tables , , and  are configured to initiate object requests from remote applications such as requests from the central repository . These commands tables may be programmed using database software from Oracle Corporation for example.","In operation, the procurement agent at the user interface creates a job order folder (or requisition folder) in the first application system  which will contain a record of the job order. The procurement agent may also periodically during the order process add or delete documents from the job order in the job order folder. The first application system  is configured to pass commands and parameters necessary to create and update a corresponding job order folder in central repository  to commands table . For example, commands entered into the commands table  may be instructions to create a folder, as here, and parameters entered into the commands table  may include the folder's name and a path to create a folder. The first command server  is designed to periodically poll the commands table  and to pass the commands and parameters to the central repository  to create a central repository order folder which stores the job order information. After receiving a signal from the central repository  that an order folder has been created in the central repository , the command server  will place a status indication in the commands table  and check the commands table  to determine if there are any other commands to execute. The command server  will continue to periodically poll the commands table  to determined any changes to the commands table .","First command server  is connected to the central repository  through a central repository API . As previously discussed, the disclosed embodiment implements the first command server  in the Java\u00ae programming language. The central repository API  includes a library of Java\u00ae methods which is a set of functions that may be called on to access the central repository . The central repository API  is connected directly to the central repository  and through central repository modules  and  to the central repository. Modules  and  may be programmed in the language of the central repository database management software and perform a variety of tasks. For example, central repository module  includes a graphics module which is designed to convert the drawings of the job record into several different graphical formats. Vendors  are then capable of downloading the drawings using a variety of graphic software programs from website . Central repository module  may perform a wide variety of administrative functions.","As previously discussed, first command server  is designed to continually poll commands table  for updates in the job order record by application system . Also, if the central repository  and its accompanying software are disabled, the first command server  will notify the commands table .","Second application system  is designed to update commands table  with, for example, vendor information and this information will be sent to central repository  in a similar manner as the job order record from first application system .","Second commands table  will be updated by the third application system  which may be an engineering records center application. Third application system  will supply engineering drawings, etc. to the job order folder created in central repository . Second command server  will function in a manner similarly to command server  except the number of commands available to second command server  may be a subset of those available to the commands server . Therefore, the third application system  may be designed to only have access to commands that are pertinent to its operation. For example, the third application system  may not be capable of adding or deleting predetermined information from the central repository database . Second command server  is designed to continually poll commands table  for updates. Second command server  includes the central repository API classes necessary to interface directly with central repository API  and pass information to the central repository .","Third commands table  may be updated by fourth application system  which may be a product data management program which will transfer associated product specifications to the job order folder in central depository . Third command server  also functions in a manner similar to second command server , except the range of limited commands available may be different. Third command server  continually polls commands table  for updates and passes the information to central repository .","In the disclosed embodiment, the second and third command servers  and  are located in proximity to application systems  and . However, in alternative embodiments, the functions of the command servers  and  may be incorporated into the functions of the command server . An advantage of this design would be to minimize the maintenance of remote servers such as command servers  and .","Administrator server  provides an interface to the status of the command server  and command servers  and . The administrator server  is configured to edit and rerun commands and it also supports starting and stopping the command servers ,  and . The administrator server  executes its commands through an administrator commands table  which interacts with commands tables ,  and . The administrator server  and commands table  may reside on the server associated with the first application system  or at another location in the system. The administrator server  allows the system integration to continue even if the central repository database management software or one of its components is disabled.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 3","FIG. 1"],"b":["302","112","304","112","120","306","108","120","308","140","310","140","312","140","108","126","128","314","120"]},"In step , a second application system passes vendor information in the form of commands and parameters to the first commands table . In step , the first command server  polls the first commands table  and passes the vendor information to the central repository . In step , the central repository , integrates the vendor information with the data in the job order folder. In step , a third application system passes engineering records in the form of commands and parameters to the second commands table . In step , the second command server polls the second commands table and passes the engineering records to the central repository . In step , the central repository  integrates the engineering records with the data in the job order folder. In step , a fourth application system  passes product data management information to the third commands table . In step , the third command server  polls the third commands table  and passes the product management information to the central repository . In step , the central repository  integrates the product data management information into the job order folder. In step , the central repository  creates uniform resource locators (URLs) to a bid form and OLR order folder and places URLs on the webpage server ."],"GOVINT":[{},{}],"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The accompanying drawings, which are incorporated into and form a part of the disclosure,",{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0011","num":"0010"},"figref":["FIGS. 3A\u20133C","FIG. 1"]}]},"DETDESC":[{},{}]}
