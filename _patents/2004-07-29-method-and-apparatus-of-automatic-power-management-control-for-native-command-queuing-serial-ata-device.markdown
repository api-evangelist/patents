---
title: Method and apparatus of automatic power management control for native command queuing Serial ATA device
abstract: The present invention is directed to a method and apparatus of automatic power management control for Serial ATA interface. In an exemplary aspect of the present invention, an idle or active condition of a Serial ATA interface including a NCQ Serial ATA device is automatically detected. In this step, it is determined, preferably based on a value of the FPDMA (First Party Direct Memory Access) bit in a Task File Ram of the Serial ATA interface, whether the NCQ Serial ATA device is in a FPDMA Data Phase. When the NCQ Serial ATA device is in a FPDMA Data Phase, the Serial ATA interface is active (i.e., not idle). When Serial ATA is in an idle condition, idle time of Serial ATA interface is measured using a power down counter whose frequency is determined by a programmable register based on an input clock. When a power down counter value is equal to a first value, a request for a Partial power state is asserted, and Serial ATA interface is put into a Partial power state. When a power down counter value is equal to a second value, a request for a Slumber power state is asserted, and Serial ATA interface is put into a Slumber power state.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07010711&OS=07010711&RS=07010711
owner: LSI Logic Corporation
number: 07010711
owner_city: Milpitas
owner_country: US
publication_date: 20040729
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["CROSS-REFERENCE TO RELATED DOCUMENTS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE INVENTION"],"p":["The present application is a continuation-in-part of U.S. application Ser. No. 10\/606,138, entitled , filed Jun. 25, 2003, which is herein incorporated by reference in its entirety.","The present application herein incorporates U.S. Patent Application with application Ser. No. 10\/901,518 and U.S. Patent Application with application Ser. No. 10\/901,519, both filed on Jul. 29, 2004, by reference in their entirety.","This invention relates generally to power management control, and particularly to a method and apparatus of automatic power management control for a Serial ATA device that supports Native Command Queuing.","Serial ATA (Advanced Technology Attachment) is an evolutionary replacement for the Parallel ATA physical storage interface. Serial ATA (SATA) is a computer bus primarily designed for transfer of data between a computer processor and hard disk and has at least three advantages over Parallel ATA, namely speed, cable management, and Serial ATA's ability of being hot swappable. A Native Command Queuing (NCQ) Serial ATA device is a Serial ATA device that supports NCQ. NCQ is a queuing protocol designed to make efficient use of the Serial ATA protocol and streamline the data transfer portion of queued commands. NCQ enables a Serial ATA device to accept multiple commands from a Serial ATA host controller and rearrange the completion order of these commands to maximize throughput.","There are three interface power states supported in Serial ATA: PhyReady, Partial and Slumber. In PhyReady (or power up) state, the PHY (physical) logic and main PLL (phase-locked loop) are both on and active, and the interface is synchronized and capable of receiving and sending data. Partial and Slumber are two power saving (or power down) modes. In both Partial and Slumber states, the PHY logic is powered, but is in a reduced power state. However, while the exit latency from Partial state is generally no longer than 10 \u03bcs (microseconds), the exit latency from Slumber state is generally no longer than 10 ms (milliseconds).","When a Serial ATA interface including a NCQ Serial ATA device is idle (i.e., when either a Serial ATA host controller or an attached NCQ Serial ATA device is not active) for a period of time, it is desirable to put the interface into a power saving mode. In addition to saving power while in a power saving mode, the interface lifetime may be increased.","Thus, it would be desirable to provide a method and apparatus of automatic power management control which automatically puts a NCQ Serial ATA device into power up and power down modes.","In an exemplary aspect of the present invention, a method of automatic power management control for a NCQ Serial ATA device includes steps as follows. An idle or active condition of a Serial ATA interface including a NCQ Serial ATA device is automatically detected. In this step, it is determined, preferably based on a value of the FPDMA (First Party Direct Memory Access) bit in a Task File Ram of the Serial ATA interface, whether the NCQ Serial ATA device is in a FPDMA Data Phase. When the NCQ Serial ATA device is in a FPDMA Data Phase, the Serial ATA interface is active (i.e., not idle). When Serial ATA is in an idle condition, idle time of Serial ATA interface is measured using a power down counter whose frequency is determined by a programmable register based on an input clock. When a power down counter value is equal to a first value, a request for a Partial power state is asserted, and Serial ATA interface is put into a Partial power state. When a power down counter value is equal to a second value, a request for a Slumber power state is asserted, and Serial ATA interface is put into a Slumber power state.","The present invention may put a Serial ATA interface including a NCQ Serial ATA device into power up and power down states automatically. Because the present invention automatically detects the interface idle condition and puts the interface into a power saving mode when the interface is in idle condition for a programmable period of time, the present invention may save power and increase the interface lifetime. Moreover, because the present invention controls the power state change of the Serial ATA interface by hardware, communications with high level layers of the interface is avoided, which may lead to an efficient power saving method.","It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the invention as claimed. The accompanying drawings, which are incorporated in and constitute a part of the specification, illustrate an embodiment of the invention and together with the general description, serve to explain the principles of the invention.","Reference will now be made in detail to the presently preferred embodiments of the invention, examples of which are illustrated in the accompanying drawings.","Referring first to , a method (or process)  of automatic power management control for a NCQ Serial ATA device in accordance with an exemplary embodiment of the present invention is shown. The process  starts with step , in which an idle condition of a Serial ATA interface including a NCQ Serial ATA device is detected. In the Serial ATA protocol prior to NCQ, a determination of whether or not a Serial ATA device is idle may be made by tracking the state of the BSY and DRQ bits for that device. However, to support automated power management for a Serial ATA device that supports NCQ, additional information is required to track the NCQ protocol and identify points in the NCQ protocol where the device may and may not be powered down. With the advent of NCQ, it may be preferable not to power down the device during a FPDMA (First Party Direct Memory Access) Data Phase. However, during the FPDMA Data Phase of a NCQ command, the state of the BSY and DRQ bits is not sufficient to indicate that the device is not idle. Thus, in step  it is determined whether the NCQ Serial ATA device is in a FPDMA Data Phase. Preferably, this is performed based on a value of the FPDMA (First Party Direct Memory Access) bit in the Task File Ram (also referred to as \u201cTask File Register\u201d) of the Serial ATA interface. When the the NCQ Serial ATA device is in a FPDMA Data Phase, the Serial ATA device is active (i.e., not idle). Preferably, when the FPDMA bit (also referred to as \u201cFPDMA active bit\u201d) has a value of \u201c1\u201d (one), the NCQ Serial ATA device is in a FPDMA Data Phase.",{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 2","b":["202","202","204","204","204","204","206","206","206"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 3","FIG. 2"],"b":["300","300","300","302","304","306"]},"Those of ordinary skill in the art will understand that circuits and methods for determining if a NCQ Serial ATA device is in a FPDMA Data Phase other than those shown in  may be applied without departing from the scope and spirit of the present invention.","Referring back to , idle time of the Serial ATA interface is measured . The Serial ATA interface is placed into Partial power state when the measured idle time is equal to a first value . The Serial ATA interface is placed into Slumber power state when the measured idle time is equal to a second value . In a preferred embodiment of the present invention, the second value is always greater than the first value. That way, when both power saving modes are supported and enabled, the present invention ensures that the Serial ATA interface is first placed into Partial State, followed by Slumber. It is understood that other embodiments may be contemplated by a person of ordinary skill in the art without departing from the scope and spirit of the present invention. For example, in an alternative embodiment of the steps  and , the Serial ATA interface may be placed into a power saving mode when the measured idle time is equal to a predetermined value, wherein the power saving mode is either a Partial power state or a Slumber power state.","Referring now to , a method (or process)  of automatic power management control for a Serial ATA interface including a NCQ Serial ATA device in accordance with a further exemplary embodiment of the present invention is shown. According to the present invention, there may be three programmable registers: Timer Count Reg, Partial Count Reg, and Slumber Count Reg. Timer Count Reg holds a programmable value TimerCount, which determines the frequency for a power down counter (pd_ctr). For example, based on the frequency of the input clock, Timer Count Reg may be programmed accordingly to obtain the time period such as 1 ms, 2 ms, or the like for the pd_ctr. Partial Count Reg holds a programmable non-zero value PartialCount. When a pd_ctr value is equal to PartialCount, a request for Partial state (ReqPartial) is asserted. Slumber Count Reg holds a programmable non-zero value SlumberCount. When a pd_ctr value is equal to SlumberCount, a request for Slumber state (ReqSlumber) is asserted.","According to the process , an input clock counter (clk_ctr) counts the clock (step ) and checks against TimerCount (step ) to generate the required frequency to operate the pd_ctr. In the step , when the clk_ctr value is equal to TimerCount, the process  proceeds to steps  and  simultaneously. In the step , the counter clk_ctr is reset, and the process  then returns to the step .","In the step , the interface idle\/active condition is automatically detected. According to one aspect of the present invention, the interface is active if any of the following conditions is true: (1) BSY, DRQ, ERR, or FPDMA bit of ATA task file register is ON; (2) COMWAKE or COMRESET OOB (out of band) signal is detected; and (3) firmware is forcing the interface wakeup from a power saving mode by writing a Firmware Forcing WakeUp bit in automatic power management circuitry. If none of the foregoing conditions is true, then the interface is not active (i.e., idle).","When the interface is detected to be active, the process  proceeds to step , in which any power down requests (ReqPartial and\/or ReqSlumber) are de-asserted and the pd_ctr is reset. After the step , the process  returns to the step .","When the interface is detected to be inactive, the process  proceeds to step , in which the pd_ctr starts to count the interface idle time. Next, in step , the pd_ctr value is checked against SlumberCount. If the pd_ctr value is equal to SlumberCount, then in step , Slumber Request may be received. Next, in step , ReqSlumber is ON (asserted), and ReqPartial is OFF (not asserted). Thus, the interface may be placed into Slumber state.","Following the step , if the pd_ctr value is not equal to SlumberCount, then in step , the pd_ctr value is checked against PartialCount. If the pd_ctr value is not equal to PartialCount, the process  returns to the step . If the pd_ctr value is equal to PartialCount, then in step , Partial Request may be received. Next, in step , ReqPartial is ON (asserted), and ReqSlumber is OFF (not asserted). Thus, the interface may be placed into Partial state.","In a preferred embodiment of the present invention, SlumberCount is always greater than PartialCount. That way, when both power saving modes are supported and enabled, the present invention ensures that ReqPartial is asserted first, followed by a ReqSlumber. It is understood that other embodiments may be contemplated by a person of ordinary skill in the art without departing from the scope and spirit of the present invention.",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 5","FIG. 1","FIG. 3","FIG. 4"],"b":["500","100","300","400","500","500","502","504","506","502","504","502","504","508","502","504","504"]},"In an exemplary embodiment, the automatic power management circuitry  may include a Firmware Control Reg  and three programmable registers (Timer Count Reg , Partial Count Reg , Slumber Count Reg ). In a preferred embodiment, the Firmware Control Reg  is a 32-bit register, whose Bit is a Firmware Forcing Slumber bit, Bit is a Firmware Forcing Partial bit, and Bit is a Firmware Forcing WakeUp bit. The automatic power management circuitry  detects the active\/idle condition of the Serial ATA host controller  through BSY, DRQ, ERR, and FPDMA Bits and may issue power down requests (ReqPartial and ReqSlumber) to the physical layer of the Serial ATA host controller . The automatic power management circuitry  may also issue ReqPartial and\/or ReqSlumber to the physical layer of the Serial ATA host controller  when it receives power down requests from the Serial ATA device .","It is understood that  is intended as an example of an apparatus for automatic power management control of the Serial ATA interface in accordance with the present invention and not as an architectural limitation to the present invention. Those of ordinary skill in the art will appreciate that various combinations and arrangements may be employed without departing from the scope and spirit of the present invention. For example, the Serial ATA host controller  in  may be connected to more than one Serial ATA devices. In one embodiment, a Serial ATA host controller may have two ports Port  and Port , which are connected to Serial ATA devices Drive  and Drive , respectively. In this case, according to the present invention, for each port there may be independent, identical automatic power management circuitry. If Port  of the host controller and Drive  are in idle state, then only Port  and Drive  may be put into a power saving state, but not Port  and Drive  (assuming Port  and Drive  are in active state). In addition, the Timer Count Reg , the Partial Count Reg , the Slumber Count Reg , and the Firmware Control Reg  may be physically located outside the automatic power management circuitry .",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 6","FIG. 5","FIG. 1","FIG. 4"],"b":["506","100","400","506","506","602","604","606","608","610"]},"The OR gate  receives BSY Bit, DRQ Bit, ERR Bit, and FPDMA Bit as input and outputs a value (\u201c1\u201d or \u201c0\u201d, where, preferably, \u201c1\u201d indicates a Serial ATA host controller is active, and \u201c0\u201d indicates a Serial ATA host controller is not active) to both the inverter  and the OR gate  as input. When the OR gate  outputs \u201c0\u201d, a Serial ATA host controller is not active, and the inverter  outputs \u201c1\u201d which enables the power down counter logic . When the power down counter value reaches PartialCount or SlumberCount, the power down\/up circuitry  issues a power down request to the Serial ATA Physical Layer. Consequently, a power down state of the Serial ATA host controller may result.","The OR gate  receives as input an output from the OR gate , a Firmware Forcing WakeUp Bit, and a COMWAKE or COMREST OOB signal and may output a WakeUp signal to the power down\/up circuitry , which in turn issues a power up request to the Serial ATA Physical Layer. Consequently, a power up state of the Serial ATA host controller may result.","In addition, a Firmware Forcing Partial Bit or a Firmware Forcing Slumber Bit may be directly written into the power down\/up circuitry , which then issues a power down request to the Serial ATA Physical Layer, resulting in a power down state of the Serial ATA host controller.","The present invention may place a Serial ATA interface including a NCQ Serial ATA device into power up and power down states automatically by its own. The apparatus of the present invention may automatically detect the interface idle condition and put the interface into a power saving mode when the interface is in idle condition for a programmable period of time. Thus, the present invention may save power and increase the interface lifetime. Moreover, because the present invention controls the power state change of the Serial ATA interface by hardware, communications with high level layers of the interface is avoided, which may lead to an efficient power saving method.","It is appreciated that the present invention is not limited to a Serial ATA interface. The present invention may also apply to a variety of other interfaces as may be contemplated by a person of ordinary skill in the art.","It is understood that the specific order or hierarchy of steps in the processes disclosed is an example of exemplary approaches. Based upon design preferences, it is understood that the specific order or hierarchy of steps in the processes may be rearranged while remaining within the scope of the present invention. The accompanying method claims present elements of the various steps in a sample order, and are not meant to be limited to the specific order or hierarchy presented.","It is believed that the present invention and many of its attendant advantages will be understood by the foregoing description. It is also believed that it will be apparent that various changes may be made in the form, construction and arrangement of the components thereof without departing from the scope and spirit of the invention or without sacrificing all of its material advantages. The form herein before described being merely an explanatory embodiment thereof, it is the intention of the following claims to encompass and include such changes."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The numerous advantages of the present invention may be better understood by those skilled in the art by reference to the accompanying figures in which:",{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0014","num":"0013"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0015","num":"0014"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0016","num":"0015"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0017","num":"0016"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0018","num":"0017"},"figref":["FIG. 6","FIG. 5"]}]},"DETDESC":[{},{}]}
