---
title: System for trigger-based “gated” dynamic virtual and physical system provisioning
abstract: Computing resources are dynamically provisioned to virtual and physical systems. In one embodiment, a control system manages the provisioning of computing resources for multiple client systems. A request for resource provisioning can be sent to the control system as a trigger. The control system converts the information in the trigger into a demand curve that specifies the rates at which resources are to be provided to a client system. The control system then causes the resources to be provisioned to the client system based on the demand curve and a dynamic provisioning profile. The dynamic provisioning profile can be created by a system administrator based on the amount and characteristics of the resources available for provisioning the client system. The dynamic provisioning profile can also specify one or more gate points that indicate the thresholds at which dynamic provisioning can be stopped.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08001247&OS=08001247&RS=08001247
owner: Red Hat, Inc.
number: 08001247
owner_city: Raleigh
owner_country: US
publication_date: 20090227
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND","DETAILED DESCRIPTION"],"p":["Embodiments of the present invention relate to provisioning of computing resources, and more specifically, to dynamic provisioning of computing resources that are available over a network.","Various provisioning techniques have been developed to allow a user to obtain and configure the capacity of a computing system. The computing system can be provisioned or allocated with computing resources that are available over a network. The computing resources can include hardware resources (such as central processing units (CPUs), memory and storage) and software resources (such as virtual machines and operating systems). A user can scale up or down the capacity as the computing requirements change. For example, a user can set up a server without actually owning a server machine or an operating system. Instead, the user can request, through a web interface over a network, a scalable amount of CPU processing power and the necessary software according to actual demands. The user then only pays for the amount of usage.","In some scenarios, the computing demand of a user can fluctuate rapidly over a time period. For example, an online service may receive an unprecedented amount of traffic at some point. Then all of a sudden, the online service may see a lull in the traffic and may need to quickly release the resources that have already been provisioned. Conventional techniques sometimes have problems in providing computing resources that both satisfy the user's dynamic demands and protect the user's financial interests. As a result, cloud performance and cost effectiveness can become uncoupled, resulting in either sluggish performance due to a lack of provisioned resources or high costs from a cloud provider (such as Amazon EC2) when faced with unprecedented demand upon the cloud.","Described herein is a method and system for dynamic provisioning computing resources to virtual and physical systems. In one embodiment, a control system manages the provisioning of computing resources for a plurality of client systems. A request for resource provisioning can be sent to the control system as a trigger. The control system converts the information in the trigger into a demand curve that specifies the rates at which resources are to be provided to a client system. The control system then causes the resources to be provisioned to the client system based on the demand curve and a dynamic provisioning profile. The dynamic provisioning profile can be created by a system administrator based on the amount and characteristics of the resources available for provisioning the client system. The dynamic provisioning profile can also specify one or more gate points that indicate the thresholds at which dynamic provisioning can be stopped.","In the following description, numerous details are set forth. It will be apparent, however, to one skilled in the art, that the present invention may be practiced without these specific details. In some instances, well-known structures and devices are shown in block diagram form, rather than in detail, in order to avoid obscuring the present invention.","Some portions of the detailed descriptions which follow are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here, and generally, conceived to be a self-consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually, though not necessarily, these quantities take the form of electrical or magnetic signals capable of being stored, transferred, combined, compared, and otherwise manipulated. It has proven convenient at times, principally for reasons of common usage, to refer to these signals as bits, values, elements, symbols, characters, terms, numbers, or the like.","It should be borne in mind, however, that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise, as apparent from the following discussion, it is appreciated that throughout the description, discussions utilizing terms such as \u201creceiving\u201d, \u201ccausing\u201d, \u201cconverting\u201d, \u201cnotifying\u201d, \u201cindicating\u201d, or the like, refer to the action and processes of a computer system, or similar electronic computing device, that manipulates and transforms data represented as physical (electronic) quantities within the computer system's registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage, transmission or display devices.","The present invention also relates to an apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes, or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium, such as, but not limited to, any type of disk including floppy disks, optical disks, CD-ROMs, and magnetic-optical disks, read-only memories (ROMs), random access memories (RAMs), EPROMs, EEPROMs, magnetic or optical cards, or any type of media suitable for storing electronic instructions, each coupled to a computer system bus.","The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein, or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear as set forth in the description below. In addition, the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein.","The present invention may be provided as a computer program product, or software, that may include a machine-readable medium having stored thereon instructions, which may be used to program a computer system (or other electronic devices) to perform a process according to the present invention. A machine-readable medium includes any mechanism for storing or transmitting information in a form readable by a machine (e.g., a computer). For example, a machine-readable (e.g., computer-readable) medium includes a machine (e.g., a computer) readable storage medium (e.g., read only memory (\u201cROM\u201d), random access memory (\u201cRAM\u201d), magnetic disk storage media, optical storage media, flash memory devices, etc.), a machine (e.g., computer) readable transmission medium (electrical, optical, acoustical or other form of propagated signals (e.g., carrier waves, infrared signals, digital signals, etc.)), etc.",{"@attributes":{"id":"p-0018","num":"0017"},"figref":"FIG. 1","b":["100","100","103","101","102","101","103","102","106","106","101","106","100","103","107","104","101","101"]},"The network  may be a private network (e.g., a local area network (LAN), wide area network (WAN), intranet, etc.) or a public network (e.g., the Internet).","In one embodiment, the clients  may include computing devices or systems that have a wide range of capabilities. Some of the clients  may be thin clients, which serve as access terminals for users and depend primarily on provisioned computing resources. A thin client has limited processing and memory capacities. For example, a thin client may be a laptop computer, cellular phone, personal digital assistant (PDA), a re-purposed desktop computer, etc. Some of the clients  may be thick (fat) clients, which have graphics processors, powerful CPUs and large memory. For example, a thick client may be a dual-core or multi-core computer, workstation, graphics workstation, etc. Fat clients can receive additional computing resources to cope with fluctuating computing demands. The computing resources provisioned to the clients  can be virtual machines, CPU cycles, memory, storage, etc. Any number of clients  may exist in the network architecture .","Some of the clients  may be managed by the server . For example, the server  may be a monitoring server of an organization that monitors the workload on the clients  owned by the organization. Alternatively, the server  may be a load balancer that balances the workload on the clients . In one scenario, the server  monitors the changes in the computing demand of the associated clients . When a change is detected, the server  can send a dynamic provisioning trigger (also referred to as \u201ctrigger\u201d) to the host  to request computing resources to be provisioned or de-provisioned. In another scenario, the server  can send the trigger in response to a request from the associated clients . Alternatively, the trigger can be sent directly to the host  by one of the clients , by a system administrator that has access to the host , or other input sources. The trigger can be sent via a pre-established protocol, such as an extensible markup language remote procedural call (XML RPC), or other application programming interface (API) or API-like interface. The interface can be generic by design to allow easy integration with pre-existing software, e.g., monitoring tools. The trigger can also be sent to the host  via an email, a short message service (SMS), by phone, or any per-established communication means.",{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2","b":["103","103","231","210","206","206","106","101","103","232","233","103","101","234","233","103"]},"The dynamic provisioning profile  contains available work units , which is a number indicating the amount of resources available for provisioning the clients , and one or more gate points , which are numbers (e.g., integers) indicating a limit on the work units that can be dynamically provisioned. The dynamic provisioning profile  can be specified by a user; for example, a system administrator of the host . The user specifies the available computing resources; such as the number of virtual CPUs, hard disk space, and the amount of Random Access Memory (RAM). The host  converts the total available computing resources into a number of work units using predetermined criteria (e.g., a physical system that cannot provision a virtual machine can be converted to one work unit, a hypervisor can be converted to multiple work units based on the available resources in the hypervisor, etc.). A user can specify a work unit, in terms of CPUs, memory, and hard disk space, which can map to either a virtual or a physical system. If a physical system is not a hypervisor but exists in the pool of available resources, it can only allocate 1 work unit. However, if the physical system is a hypervisor, it can allocate an integer division of its available resources by the specified work unit. The conversion result is the available work units  in the dynamic provisioning profile . The user can also specify the gate points . When the number of the currently consumed work units reaches the specified gate points, dynamic provisioning will stop. At this point, the administrator can be prompted to switch to manual provisioning or to stop any further resource provisioning. The administrator can provide input to the host  via a predetermined method of communication; such as, SMS, e-mail, telephone calls, etc.","The host  can include multiple dynamic provisioning profiles . Each profile  can be associated with a particular group of requesting entities , a particular communication protocol for sending the triggers (e.g., XML RPC, email, SMS, etc.), or other characteristics known to the host . The dynamic provisioning profile  can include additional information, such as a set of triggers associated with the profile, and a set of data (e.g., an attack rate for resource provisioning and a release rate for resource de-provisioning) used by the demand calculator  to calculate a demand curve for the associated triggers.","The trigger  received from the requesting entity  includes a trigger source , a trigger duration  and a weight , which is a number indicating the requested work units . The triggers source  specifies the identity of the requesting entity  (e.g., a monitoring back-end, a load balancer or other entities) and\/or means of communication (e.g., SMS, e-mail, XML RPC, etc.). The duration of the trigger  specifies the duration of time that the trigger lasts. Thus, multiple triggers from the same source in the specified duration will be counted as only one trigger and will not spawn a flurry of resource provision. The weight  is the amount (in work units) of new capacity requested. The weight  is converted by the demand calculator  into a demand curve that indicates how the requested work units are to be provisioned and de-provisioned. In some embodiments, the weight  is a weight function that indicates the number of work units to be provided to the requested entity  during a period of time. The weight  and the demand curve are described in greater detail in connection with .",{"@attributes":{"id":"p-0026","num":"0025"},"figref":["FIG. 3A","FIG. 3A"],"b":["310","310","310","310","310","103","232","310","320","320","310","234"]},"In one embodiment, the user-defined conversion function can include both an attack rate and a release rate, or either one of the two rates. Referring to , an attack rate and the release rate can be set such that resources are provisioned at a slow rate, but released at a fast rate. Alternatively, in , a user can specify the resources to be provisioned at a fast rate and then released at a slow rate. With the demand calculator , a user has the option to adjust the provision and de-provision rates according to the operating condition of the system.",{"@attributes":{"id":"p-0028","num":"0027"},"figref":["FIG. 4","FIG. 5","FIGS. 1 and 2"],"b":["400","400","526","400","103"]},"Referring to , at block , the host  receives a trigger from the requesting entity . At block , the information in the trigger is input to the demand calculator  to determine the rates at which the requested work units are to be provisioned and de-provisioned. The rates can be based on a user-specified attack rate and release rate (). At block , the sum of the requested work units and the currently-consumed work units is compared with a gate point specified in the dynamic provisioning profile . If the sum of the work units is greater than or equal to a specified gate point, the dynamic provisioning stops and the user is notified to review dynamic provisioning strategies at block . At this point, the user can determine to switch to manual provisioning or to terminate any further resource provisioning. At block , if the sum is less than the specified gate point, then the requested work units will be provisioned to a client system at the calculated rates. At block , the method  then terminates.","In some embodiments, a plurality of gate points may be specified in the dynamic provisioning profile . When the sum of the requested and consumed work units reaches any one of the gate points, the user will be notified to decide whether to switch to manual provisioning or stop any further provisioning. Thus, the multiple gate points represent multiple decision points. If the user decides to continue with dynamic provisioning, the dynamic provisioning process will continue until the next gate point is reached. For example, if the gates points are 80, 50 and 30, which indicates the number of remaining work units available for provisioning, a user who decides to continue dynamic provisioning at gate point=80 can have the option to switch to manual provisioning at gate point=50 or 30.",{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 5","b":"500"},"The exemplary computer system  includes a processor , a main memory  (e.g., read-only memory (ROM), flash memory, dynamic random access memory (DRAM) such as synchronous DRAM (SDRAM) or Rambus DRAM (RDRAM), etc.), a static memory  (e.g., flash memory, static random access memory (SRAM), etc.), and a secondary memory  (e.g., a data storage device), which communicate with each other via a bus .","The processor  represents one or more general-purpose processing devices such as a microprocessor, central processing unit, or the like. More particularly, the processor  may be a complex instruction set computing (CISC) microprocessor, reduced instruction set computing (RISC) microprocessor, very long instruction word (VLIW) microprocessor, processor implementing other instruction sets, or processors implementing a combination of instruction sets. The processor  may also be one or more special-purpose processing devices such as an application specific integrated circuit (ASIC), a field programmable gate array (FPGA), a digital signal processor (DSP), network processor, or the like. The processor  is configured to execute the processing logic  for performing the operations and steps discussed herein.","The computer system  may further include a network interface device . The computer system  also may include a video display unit  (e.g., a liquid crystal display (LCD) or a cathode ray tube (CRT)), an alphanumeric input device  (e.g., a keyboard), a cursor control device  (e.g., a mouse), and a signal generation device  (e.g., a speaker).","The secondary memory  may include a machine-readable storage medium (or more specifically a computer-readable storage medium)  on which is stored one or more sets of instructions (e.g., software ) embodying any one or more of the methodologies or functions described herein. The software  may also reside, completely or at least partially, within the main memory  and\/or within the processing device  during execution thereof by the computer system ; the main memory  and the processing device  also constituting machine-readable storage media. The software  may further be transmitted or received over a network  via the network interface device .","The machine-readable storage medium  may also be used to store redirection module  (). While the machine-readable storage medium  is shown in an exemplary embodiment to be a single medium, the term \u201cmachine-readable storage medium\u201d should be taken to include a single medium or multiple media (e.g., a centralized or distributed database, and\/or associated caches and servers) that store the one or more sets of instructions. The term \u201cmachine-readable storage medium\u201d shall also be taken to include any medium that is capable of storing or encoding a set of instructions for execution by the machine that cause the machine to perform any one or more of the methodologies of the present invention. The term \u201cmachine-readable storage medium\u201d shall accordingly be taken to include, but not be limited to, solid-state memories, and optical and magnetic media.","It is to be understood that the above description is intended to be illustrative, and not restrictive. Many other embodiments will be apparent to those of skill in the art upon reading and understanding the above description. Although the present invention has been described with reference to specific exemplary embodiments, it will be recognized that the invention is not limited to the embodiments described, but can be practiced with modification and alteration within the spirit and scope of the appended claims.","Accordingly, the specification and drawings are to be regarded in an illustrative sense rather than a restrictive sense. The scope of the invention should, therefore, be determined with reference to the appended claims, along with the full scope of equivalents to which such claims are entitled."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention is illustrated by way of example, and not by way of limitation, and can be more fully understood with reference to the following detailed description when considered in connection with the figures in which:",{"@attributes":{"id":"p-0006","num":"0005"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0007","num":"0006"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0008","num":"0007"},"figref":"FIGS. 3A-3C"},{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
