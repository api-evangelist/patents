---
title: Standardized natural language chunking utility
abstract: A method is disclosed for providing a chunking utility that supports robust natural language processing. A corpus is chunked in accordance with a draft chunking specification. Chunk inconsistencies in the corpus are automatically flagged for resolution, and a chunking utility is provided in which at least some of the flagged inconsistencies are resolved. The chunking utility provides a single, consistent global chunking standard, ensuring compatibility among various applications. The chunking utility is particularly advantageous for non-alphabetic languages, such as Chinese.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07672832&OS=07672832&RS=07672832
owner: Microsoft Corporation
number: 07672832
owner_city: Redmond
owner_country: US
publication_date: 20060201
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["BACKGROUND","SUMMARY","DETAILED DESCRIPTION","Chunk Types","Noun Chunk (NP)","Head of NP","Modifier of NP","Non-Interrupted Noun Sequence","Named Entities","VP","Auxiliary ()","Auxiliary Verbs ()","Oriented Verbs ()","Splittable Verbs ()","Verb Complement","ADJP","ADVP","CONJP","MP","TP","SP","INTJP","INDP (Independent Chunk)"],"p":["There is a strong need felt in industry and academia for effective natural language processing (NLP). Among the goals of natural language processing is to enable automated systems such as computers to perform functions on an input of natural human language. This would tremendously multiply the capabilities of computing environments in a broad range of applications. However, despite substantial investigation by workers in artificial intelligence and linguistics, effective natural language processing has remained elusive. Additionally, different attempted solutions have been developed and applied from one application to another, causing inconsistencies that prevent NLP interaction between applications.","Furthermore, there are special problems in trying to develop NLP systems for certain languages that use non-alphabetic writing systems. For example, one such language is Chinese, which uses a largely logographic writing system, wherein thousands of characters are used, each functioning as a logogram\u2014that is, representing a concept rather than a particular sound, as in an alphabetic writing system such as that used for English and other Western languages. A single character may represent a word, or two or more characters may together represent a single word. Additionally, the characters are traditionally written in a continuous string, without spacing separating one word from the next, as is typically in alphabetic writing systems. This adds an extra layer of ambiguity relative to languages written alphabetically: the ambiguity in the proper boundaries between words from among a continuous string of logograms, that may be one or several to a word. This ambiguity has posed a formidable additional obstacle to NLP systems in languages using logographic writing systems as opposed to those using alphabetic writing systems. Still other languages are written with a substantially syllabary writing system, in which each character represents a syllable. For example, Japanese is written with a mixture of logographic (kanji) and syllabary (hiragana and katakana) characters. The hiragana characters sometimes give hints on how to separate words and phrases, while the kanji and katakana characters likely would not, therefore also presenting an additional layer of ambiguity not encountered in NLP with Western writing systems.","Therefore, there is a persistent need for better methods and systems of natural language processing, particularly in non-alphabetic languages.","The discussion above is merely provided for general background information and is not intended to be used as an aid in determining the scope of the claimed subject matter.","A method is disclosed for providing a chunking utility that supports robust natural language processing. A corpus is chunked in accordance with a draft chunking specification. Chunk inconsistencies in the corpus are automatically flagged for resolution, and a chunking utility is provided in which at least some of the flagged inconsistencies are resolved. The chunking utility provides a single, consistent global chunking standard, ensuring compatibility among various applications. The chunking utility is particularly advantageous for non-alphabetic languages, such as Chinese.","This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter, nor is it intended to be used as an aid in determining the scope of the claimed subject matter. The claimed subject matter is not limited to implementations that solve any or all disadvantages noted in the background.","Various embodiments provide a wealth of additional and unexpected advantages, beyond the resolution of difficulties with current solutions. A variety of other variations and embodiments besides those illustrative examples specifically discussed herein are also contemplated, and may be discerned by those skilled in the art from the entirety of the present disclosure.","Natural language processing (NLP) tasks can analyze text to identify syntactic and\/or semantic information contained therein. Syntax refers generally to the rules by which the symbols or words of a language may be combined, independent of their meaning, while semantics refers generally to the meaning of a grouping of symbols or words.","Such natural language processing tasks may include word segmentation, part-of-speech tagging, text chunking, parsing, and semantic labeling. Chunking a text is an intermediate step towards full parsing of text. Chunking is a useful and relatively tractable median stage of text analysis that is to divide sentences into non-overlapping segments only based on superficial and local information. Chunking has been viewed as an intermediate step of parsing. While parsing typically involves identifying all linguistic structure of sentence, such as the head of a sentence, other components, and relationships among components, chunking is an intermediate step, involving identifying phrase boundaries of sentences. Chunking results in the syntactic structure of a text becoming identifiable, into e.g. noun phrases, verb phrases, and so forth. This also allows the relationships or dependencies between the phrases to become identifiable. For example, one noun phrase is the subject of the verb phrase, and a second noun phrase is the object of the verb phrase.","Chunking depends on a pre-defined set of chunk types, so a text can be divided into separate, non-overlapping chunks, each of which is assigned a consistent chunk type. According to one illustrative embodiment (as elaborated below), eleven chunk types are defined, one of which may appropriately cover most portions of a text (while a few sections of text are left unchunked, such as auxiliaries and conjunctions).","A chunking utility may be developed which may support additional natural language processing applications along with a variety of other kinds of applications. The chunking utility, in one illustrative embodiment, may include the definitions of the chunk types, a set of unambiguous chunking rules (such as to omit auxiliary words and conjunctions from the chunks), and a large, well-refined chunking specification that has been refined through iterative chunking consistency feedback with a training corpus.","By providing a rich characterization of the phrase types and boundaries in a text, chunking is also considerably useful in itself, in applications in addition to those that involve further natural language processing, such as voice user interface, machine translation, and search, as a few illustrative examples. Chunking a text includes dividing the text into syntactically correlated groups of words, which may be used by additional applications. This is illustrated in later sections with examples demonstrating certain embodiments that are illustrative of a broader range of methods.","Prior to discussing particular aspects of present embodiments in greater detail, a few illustrative systems and environments with which various embodiments can be used are discussed.  illustrates an example of a suitable computing system environment  on which embodiments may be implemented. The computing system environment  is only one example of a suitable computing environment and is not intended to suggest any limitation as to the scope of use or functionality of the claimed subject matter. Neither should the computing environment  be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment .","Embodiments are operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well-known computing systems, environments, and\/or configurations that may be suitable for use with various embodiments include, but are not limited to, personal computers, server computers, hand-held or laptop devices, multiprocessor systems, microprocessor-based systems, set top boxes, programmable consumer electronics, network PCs, minicomputers, mainframe computers, telephony systems, distributed computing environments that include any of the above systems or devices, and the like.","Embodiments may be described in the general context of computer-executable instructions, such as program modules, being executed by a computer. Generally, program modules include routines, programs, objects, components, data structures, etc. that perform particular tasks or implement particular abstract data types. Various embodiments may be implemented as instructions that are executable by a computing device, which can be embodied on any form of computer readable media discussed below. Various additional embodiments may be implemented as data structures or databases that may be accessed by various computing devices, and that may influence the function of such computing devices. Some embodiments are designed to be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment, program modules may be located in both local and remote computer storage media including memory storage devices.","With reference to , an exemplary system for implementing some embodiments includes a general-purpose computing device in the form of a computer . Components of computer  may include, but are not limited to, a processing unit , a system memory , and a system bus  that couples various system components including the system memory to the processing unit . The system bus  may be any of several types of bus structures including a memory bus or memory controller, a peripheral bus, and a local bus using any of a variety of bus architectures. By way of example, and not limitation, such architectures include Industry Standard Architecture (ISA) bus, Micro Channel Architecture (MCA) bus, Enhanced ISA (EISA) bus, Video Electronics Standards Association (VESA) local bus, and Peripheral Component Interconnect (PCI) bus also known as Mezzanine bus.","Computer  typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer  and includes both volatile and nonvolatile media, removable and non-removable media. By way of example, and not limitation, computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile, removable and non-removable media implemented in any method or technology for storage of information such as computer readable instructions, data structures, program modules or other data. Computer storage media includes, but is not limited to, RAM, ROM, EEPROM, flash memory or other memory technology, CD-ROM, digital versatile disks (DVD) or other optical disk storage, magnetic cassettes, magnetic tape, magnetic disk storage or other magnetic storage devices, or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions, data structures, program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term \u201cmodulated data signal\u201d means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example, and not limitation, communication media includes wired media such as a wired network or direct-wired connection, and wireless media such as acoustic, RF, infrared and other wireless media. Combinations of any of the above should also be included within the scope of computer readable media.","The system memory  includes computer storage media in the form of volatile and\/or nonvolatile memory such as read only memory (ROM)  and random access memory (RAM) . A basic input\/output system  (BIOS), containing the basic routines that help to transfer information between elements within computer , such as during start-up, is typically stored in ROM . RAM  typically contains data and\/or program modules that are immediately accessible to and\/or presently being operated on by processing unit . By way of example, and not limitation,  illustrates operating system , application programs , other program modules , and program data .","The computer  may also include other removable\/non-removable volatile\/nonvolatile computer storage media. By way of example only,  illustrates a hard disk drive  that reads from or writes to non-removable, nonvolatile magnetic media, a magnetic disk drive  that reads from or writes to a removable, nonvolatile magnetic disk , and an optical disk drive  that reads from or writes to a removable, nonvolatile optical disk  such as a CD ROM or other optical media. Other removable\/non-removable, volatile\/nonvolatile computer storage media that can be used in the exemplary operating environment include, but are not limited to, magnetic tape cassettes, flash memory cards, digital versatile disks, digital video tape, solid state RAM, solid state ROM, and the like. The hard disk drive  is typically connected to the system bus  through a non-removable memory interface such as interface , and magnetic disk drive  and optical disk drive  are typically connected to the system bus  by a removable memory interface, such as interface .","The drives and their associated computer storage media discussed above and illustrated in , provide storage of computer readable instructions, data structures, program modules and other data for the computer . In , for example, hard disk drive  is illustrated as storing operating system , application programs , other program modules , and program data . Note that these components can either be the same as or different from operating system , application programs , other program modules , and program data . Operating system , application programs , other program modules , and program data  are given different numbers here to illustrate that, at a minimum, they are different copies.","A user may enter commands and information into the computer  through input devices such as a keyboard , a microphone , and a pointing device , such as a mouse, trackball or touch pad. Other input devices (not shown) may include a joystick, game pad, satellite dish, scanner, or the like. These and other input devices are often connected to the processing unit  through a user input interface  that is coupled to the system bus, but may be connected by other interface and bus structures, such as a parallel port, game port or a universal serial bus (USB). A monitor  or other type of display device is also connected to the system bus  via an interface, such as a video interface . In addition to the monitor, computers may also include other peripheral output devices such as speakers  and printer , which may be connected through an output peripheral interface .","The computer  may be operated in a networked environment using logical connections to one or more remote computers, such as a remote computer . The remote computer  may be a personal computer, a hand-held device, a server, a router, a network PC, a peer device or other common network node, and typically includes many or all of the elements described above relative to the computer . The logical connections depicted in  include a local area network (LAN)  and a wide area network (WAN) , but may also include other networks. Such networking environments are commonplace in offices, enterprise-wide computer networks, intranets and the Internet.","When used in a LAN networking environment, the computer  is connected to the LAN  through a network interface or adapter . When used in a WAN networking environment, the computer  typically includes a modem  or other means for establishing communications over the WAN , such as the Internet. The modem , which may be internal or external, may be connected to the system bus  via the user input interface , or other appropriate mechanism. In a networked environment, program modules depicted relative to the computer , or portions thereof, may be stored in the remote memory storage device. By way of example, and not limitation,  illustrates remote application programs  as residing on remote computer . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.",{"@attributes":{"id":"p-0030","num":"0029"},"figref":"FIG. 2","b":["200","200","202","204","206","208","210"]},"Memory  is implemented as non-volatile electronic memory such as random access memory (RAM) with a battery back-up module (not shown) such that information stored in memory  is not lost when the general power to mobile device  is shut down. A portion of memory  is illustratively allocated as addressable memory for program execution, while another portion of memory  is illustratively used for storage, such as to simulate storage on a disk drive.","Memory  includes an operating system , application programs  as well as an object store . During operation, operating system  is illustratively executed by processor  from memory . Operating system , in one illustrative embodiment, is a WINDOWS\u00ae CE brand operating system commercially available from Microsoft Corporation. Operating system  is illustratively designed for mobile devices, and implements database features that can be utilized by applications  through a set of exposed application programming interfaces and methods. The objects in object store  are maintained by applications  and operating system , at least partially in response to calls to the exposed application programming interfaces and methods.","Communication interface  represents numerous devices and technologies that allow mobile device  to send and receive information. The devices include wired and wireless modems, satellite receivers and broadcast tuners to name a few. Mobile device  can also be directly connected to a computer to exchange data therewith. In such cases, communication interface  can be an infrared transceiver or a serial or parallel communication connection, all of which are capable of transmitting streaming information.","Input\/output components  include a variety of input devices such as a touch-sensitive screen, buttons, rollers, and a microphone as well as a variety of output devices including an audio generator, a vibrating device, and a display. The devices listed above are by way of example and need not all be present on mobile device . In addition, other input\/output devices may be attached to or found with mobile device .",{"@attributes":{"id":"p-0035","num":"0034"},"figref":["FIG. 3","FIG. 1","FIG. 2","FIG. 4"],"b":["300","300","110","200","300","300","300","300"]},"As an overview, method  includes step , of providing a draft chunking specification; step , of chunking one or more corpora in accordance with the draft chunking specification; step , of flagging chunk inconsistencies in the chunking of similar portions of the one or more corpora; and step , of providing a chunking utility comprising chunking assignments revised from the draft chunking specification such that the flagged inconsistencies are resolved. Method  may also include additional steps, such as step , of providing access to the chunking utility to one or more external applications, such as a natural language processing application associated with additional natural language processing tasks, or additional applications such as a voice user interface, a machine translation tool, or a search tool, among other potential applications.","Method  includes step , of providing a draft chunking specification. This may be, for example, a first iteration drafted based on computational linguistic principles. The draft chunking specification provides indications of how a text may have chunk annotations or indications associated with the elements of the text. This is elaborated in greater detail below.","Method  further includes step , of chunking one or more corpora in accordance with the draft chunking specification. For example, two similarly sized and similarly sourced training corpora (e.g., all articles from each of two separate major newspapers over the same long duration of time) may be used for chunk training at the same time based on the same draft chunking specification. The scale of each training corpus may be, for example, in excess of one million words, in one illustrative embodiment, or in excess of half a million sentences, in another embodiment. The corpora may be smaller or larger than this range in various embodiments. The chunk-assigned results from both corpora may then be compared for inconsistencies, in which similar or identical portions of text were chunked differently. The corpus or corpora used for this step may, for example, include large collections of fairly standard published examples of written text in the target language, such as a collection of all articles appearing in a major newspaper over long periods of time. For example, one prominent English corpus relies on a large collection of published material from the Wall Street Journal. A corpus in another language such as Chinese might similarly include a large collection of articles from a major Chinese-language newspaper such as the People's Daily, for example.","As the corpus is chunked in accordance with the draft chunking specification, a large amount of chunked text is accumulated and made available for mutual comparison. This in turn provides a valuable way of evaluating the performance of the chunking specification as it is used by the chunking application performing the chunking. The application performing method  continues storing chunked corpus in accordance with the chunking indications provided by the chunking specification, and as the sample of chunked corpus grows larger, chunking inconsistencies may be discovered. These chunking inconsistencies consist of identical or similar sections of text from different parts of the corpus, that have been chunked differently from each other. This indicates an inconsistent set of indications from the chunking specification. Such inconsistent indications are difficult to eradicate, because they often tend to stem from ambiguities in language that human speakers take for granted, and typically interpret from context without a second thought, but that resist bright-line logical delineations of the kind that might more easily be comprehended by a software application.","As one illustrative example in English of such easily overlooked linguistic ambiguity, the terms \u201ccon\u201d and \u201cpen\u201d can both have a variety of meanings on their own or as parts or prefixes of larger words. However, when someone says, \u201cthe con is in the pen\u201d, a human listener fluent in English does not think twice about understanding this statement to mean that \u201cthe convict is in the penitentiary\u201d. However, such real-world context as we take for granted in combining with the statement of itself to deduce the meaning, is not available to a computer application, and cannot be compensated for without a considerable complexity of different indications for how to chunk or otherwise interpret the terms \u201ccon\u201d and \u201cpen\u201d using only the knowledge of their surrounding text. So, even after significant development, it might not be surprising to find a chunking utility having provided inconsistent chunking indications between two different occurrences of the phrase \u201cthe con-\u201d in different textual contexts, perhaps between \u201cthe con is in the pen\u201d, \u201cthe convent had to be evacuated\u201d, and \u201cthe conniving became too much for her\u201d. Similarly, in Chinese, for example, a single sentence may read (as transliterated into Roman alphabetic characters in the standard pinyin), to take an egregious example, \u201cm\u0101 m{hacek over (a)} m\u00e0 ma m\u00e0 m{hacek over (a)} m\u0101 ma\u201d, which means, \u201cDid mother curse the horse or did the horse curse mother?\u201d","While the Chinese characters in the former sentence provide more substantial differences to distinguish the meaning of the words, Chinese is also noted for frequently having an identical character that may mean very different things in different contexts, a more serious obstacle for chunking Chinese text. Referring again to \u201cm{hacek over (a)}\u201d, or \u201c\u201d, this is the word for horse, when it is alone. The character also appears as one of two or more characters in literally dozens of other words. Many have to do more or less with a horse, such as words for bridle, horsepower, cart, and engine. However, they also include =m{hacek over (a)}bi{hacek over (a)}o, which means \u201cstopwatch\u201d, though  as two separate words mean \u201chorse surface\u201d; =m{hacek over (a)}f\u016b, which means \u201cgroom\u201d, while  as separate words mean \u201chorse husband\u201d; =m{hacek over (a)}hu, which means \u201ccareless\u201d, while  as separate words mean \u201chorse tiger\u201d; =m{hacek over (a)}sh\u00e0ng, which means \u201cimmediately\u201d, while  as separate words mean \u201chorse up\u201d; =m{hacek over (a)}x{grave over (l)}, which means \u201ccircus\u201d, while  as separate words mean \u201chorse play\u201d; =\u201cm{hacek over (a)}l\u00f9k{hacek over (o)}\u201d, which means \u201cintersection\u201d, while as separate words  means \u201chorse road mouth\u201d; =\u201cm{hacek over (a)}l\u00edingsh{hacek over (u)}\u201d, which means \u201cpotato\u201d, though  as separate words mean \u201chorse bell yam\u201d.","To add still additional complexity and sensitivity to context, a single character may mean completely different things, each of which is pronounced differently. For example, the character  may be pronounced hu\u00f3, hu\u00f2, h\u00e9, or h\u00e8. The word \u201chu\u00f3\u201d means soft or warm; the word \u201chu\u00f2\u201d means to mix together, to blend; the word \u201ch\u00e9\u201d may mean and, with, together with, peace, harmony, or union; and \u201ch\u00e8\u201d means to respond within a poem or to respond in singing. Despite the different pronunciations in spoken Chinese, each of these words is written as , with only context to inform the reader which meaning is intended. This is in addition to the possibilities for  to be part of a multi-character word, such as =h\u00e9feng=breeze; =h\u00e9h{hacek over (a)}o=to become reconciled; =heshang=Buddhist monk; or =h\u00e9pingzh{hacek over (u)}yi=pacifism, among a wide variety of other examples.","There are several other examples, but this provides some indication of the ambiguous sensitivity to context in Chinese, exacerbated (relative to alphabetic languages) by the lack of spaces between words to give any clear indicator of the boundaries separating one word from the next. Furthermore, Chinese involves additional characteristics that complicate chunking, such as relatively little use of function words or inflections. All of these factors make it difficult to automatically assign portions of a text to their appropriate chunks.","As is apparent, even after a substantial amount of development, a chunking utility is likely to continue to experience at least a few inconsistencies in the different chunking indications it provides to an application chunking a corpus. This leads to the next step depicted in method , the step  of flagging chunk inconsistencies in the chunking of similar or identical portions of the one or more corpora. The application performing the method  is, in the present illustrative embodiment, configured to search out and automatically flag such inconsistencies that accumulate in different sections of the chunked corpus. This may include, for example, an automated comparison of the chunking applied to similar or identical sets of characters from the one or more corpora. Flagging the chunk inconsistencies may also include automatically providing, to an output device such as monitor  of  or input\/output components  of , indications of similar sets of characters that have been chunked differently.","After they are flagged, these inconsistencies can be examined and a selection is made as to which chunking indication is more appropriate. Since identical portions of text may have legitimately different meanings in different contexts, assigning chunk indications should be done in a way that prevents or minimizes interference with the precision of the automatic chunking. It sometimes happens that a sentence appears, for example, in the form ABC, and both AB and BC can be legitimate chunked phrases, but one or the other must be selected to ensure a globally consistent chunking specification, in which case the more useful chunked phrase should be selected with care. The application then responds to this selection of chunking indications by revising the chunking utility with the additional information, thereby adding to the sophistication and complexity it is able to apply to further chunked texts. This leads into step , of providing a refined chunking utility comprising chunking assignments revised from the draft chunking specification such that the flagged inconsistencies are resolved. At some point, perhaps after a threshold of consistency is reached, as in one illustrative embodiment, the iterative learning process for refining the chunking specification may be declared finished, and the refined chunking utility, comprising the results of refining the chunking specification, may be made available. In one embodiment, a chunk training application regularly, or in response to a command, calculates the consistency ratio of the chunking utility. For example, this may be the ratio of consistently chunked text to the total amount of text chunked. This automatically calculated consistency ratio can be compared with a threshold level to determine if the chunking utility has become sufficiently refined for its purposes.","One advantageous purpose to which such a highly refined chunking utility can be applied is as a global standard for chunking later inputs in the subject language, across a wide array of different applications, platforms, or environments. The inconsistency of different, localized approaches to natural language processing have posed a significant barrier in the past to different applications interacting in ways that involve the exchange of natural language inputs. Such inconsistencies from one application to another often tend to result in unpredictable or nonsensical results. Instead, as in step  according to one embodiment of method , access to the refined chunking utility may be provided to external applications, examples of which include a voice user interface, a machine translation tool, and a search tool. These additional applications may be hosted locally on components shared on a computing device executing the chunking method , or they may be hosted remotely and communicated with via a network or communication interface, such as wide area network  or local area network  of , or via communication interface  of . With a wide variety of applications able to share in the single, highly refined, global standardized chunking utility provided according to method \u2014as opposed, for example, to two or more applications that have incorporated results from different, inconsistent chunking specifications\u2014the interactions among various natural language processing applications and a wide variety of additional applications may become smooth and seamless, with the assurance of as high a level of consistency as is desired. Some of these other applications may go on to perform functions incorporating results from the standardized chunking utility, resulting in tangibly superior performance, such as more valuable search results or more accurate responses in a voice user interface, for example.","One example is further illustrated in .  depicts a flowchart for a method  of language chunking, according to another illustrative embodiment. Method  may be executed by a natural language processing program using the global, standardized, refined chunking utility as its reference. Method  includes step , receiving an input; step , assigning chunk types to portions of the input based at least in part on the chunking utility; and step , providing an output comprising the portions of the input with the assigned chunk types. The output may be provided to a user via a user output device, or it may be provided to another application for that application to act on. Method  may include a variety of other steps in different embodiments. Method  may illustratively include step , to convert a non-text input, such as from a user's spoken word or handwriting, into a text format; and step , to segment the input into words and tag the words with parts of speech. The chunking may involve searching the refined chunking utility for chunked text portions similar to the portions of the input, and assigning the portions of the input chunk types corresponding to chunk types associated with the chunked text portions. For example, method  might include a voice user interface running on a computing device that receives a speech signal from a user, converts the speech signal to text, chunks the text by comparing it to the refined, global, standardized chunking utility, then using the syntactic structure indicated by the chunked text version of the user's spoken word input to carry out tasks indicated by the input and to respond to the user. In other applications, the non-text input may be a user's handwriting, as written with a stylus on the monitor of a handheld or notebook device or otherwise input to a computing device. This input is non-text in the sense that it is not input via a keyboard. In other applications, the user may be entering natural language text inputs; in some applications, chunked texts derived from the user input may be applied to other applications, such as a machine translation tool or a search tool, for example.","Some other additional details involved in various illustrative embodiments are provided in further details below, such as flagging chunk inconsistencies by comparing both chunking indications and tagged part-of-speech sequences of similar passages of text. Also elaborated below are some of the particular advantages provided by a chunking utility directed to chunking in a non-alphabetic writing system such as Chinese or Japanese, for example. In such a case, providing the draft chunking specification may include providing indications for word-segmenting the non-alphabetic writing system, to avoid the word boundary ambiguities particular to such non-alphabetic languages, as indicated with the \u201chorse\u201d example, above.",{"@attributes":{"id":"p-0049","num":"0048"},"figref":["FIG. 5","FIG. 2","FIGS. 3 and 4"],"b":["500","500","520","501","504","501","200","504","502","506","508","510","504","512","514","516","501","520","599","508","522","522","522","524","526","501","504","501","514","504","300","400","501","501","514","508","520","501"]},"Additional details on the chunking methods, and using a training corpus to provide iterative feedback in growing the sophistication and optimizing the consistency ratio of the chunking utility specification, are provided below.","As noted above, one factor that makes an important difference in chunking is the type of writing system of the text being chunked. Some languages, such as English and French, are associated with an alphabetic writing system, in which each character represents one sound; while still other languages are associated with a syllabary writing system, in which each character represents one syllable; while still other languages, such as Chinese, are associated with a logographic writing system, in which each character represents a concept or word; while still other languages, such as Japanese, are associated with a mixture of these writing systems. Writing systems are distinguishable from languages, in that a language can typically be represented in a writing system alien to the one with which that language is customarily associated. However, some languages have a prominent history of being written in more than one writing system; for example, the Chinese language is traditionally written in Chinese logographic characters, but can also be written in alphabetic characters. Several standards for transliterating Chinese into alphabetic writing have been developed; perhaps the most widely used is the standard known as pinyin. Other languages have a strong tradition of being written in one writing system, while a closely related language is written in a dramatically different writing system. For example, Urdu is traditionally written in a variation of the Persian alphabet, while Hindi, a language very closely related to Urdu, is traditionally written in the Devanagari script, which is an alphasyllabary writing system, a hybrid of an alphabet and a syllabary.","Whereas alphabetic writing systems typically clearly indicate the separation between adjacent words, the same is often not true of syllabary and logographic writing systems, in which characters are typically written in one long string, with boundaries between words discernible only by context. Even in some largely alphabetic writing systems, such as the alphasyllabaric Thai alphabet, the letters are typically written in one continuous stream, with spacing only between sentences, and only context to guide the reader as to the proper boundaries between words within the sentence. Such lack of clear word boundaries poses an added layer of ambiguity for natural language processing systems, and related systems, such as those involving chunking. This is of particular concern because such non-alphabetic languages include some, such as Chinese, for which demand and growth prospects for natural language processing applications are particularly high.","One embodiment directed to aspects of chunking in non-alphabetic languages is illustrated below, as applied to written Chinese texts which are used as an example. It is not necessary for the reader to understand Chinese to follow the steps and methods demonstrated, to illustrate aspects of chunking and associated natural language processing methods, in accordance with certain illustrative embodiments. And although Chinese is used extensively for illustrative examples herein, this does not imply any limitations regarding other languages and writing systems; additional embodiments use similar methods with regard to other languages and writing systems. And, while some additional examples demonstrate particular advantages as applied to non-alphabetic writing systems, this covers a wide range of writing systems; even the so-called Thai alphabet, though closer to being alphabetical than the Chinese writing system, is still actually an alphasyllabary rather than a true alphabet, and therefore non-alphabetic. Additionally, various embodiments are similarly advantageous as applied to true alphabetic writing systems.","Various embodiments of a chunking utility may be directed to any of these languages and writing systems, and provide particular advantages in providing a standardized set of rules across writing systems that are logographic, syllabic, alphabetic, and anything in between, so that the chunking annotations will be represented in a standardized way regardless of the type of underlying writing system or language. Standardized chunking utilities according to various embodiments provide substantial advantages in machine translation, as one illustrative example of the applications facilitated by such chunking utilities.","Examples of Chinese texts are therefore used below to demonstrate how Chinese texts may be, for example, parsed, chunked, and otherwise manipulated. In a few illustrative examples, these characters are provided with Roman alphabet transliterations and English translations, to aid in gaining familiarity with various methods related to chunking. In particular, these examples are provided with three representations of each character: first, the original Chinese characters themselves, in the standardized simplified form (known as ji{hacek over (a)}ntizi, i.e.  adopted by the governments of the People's Republic of China and Singapore, as well as by the Library of Congress and the American Library Association; second, in the standardized format for representing transliterated Chinese words with Roman alphabet characters, known as hanyu pinyin, or simply pinyin (h\u00e0ny{hacek over (u)} p\u012bny\u012bn, i.e. ; and third, in English translation. So, for example, a character may be provided as: (=ni\u00e1n=year)\u2014which provides, first the Chinese ji{hacek over (a)}nt{hacek over (i)}z\u00ec character (), then the pinyin representation (ni\u00e1n), and finally the English translation (year). Incidentally, Chinese also commonly uses the same Arabic numerals that are used in English and other Western writing systems.","A first sample sentence in Chinese (preceded by a reference marker, <1>, for the sentence) is used below to demonstrate, first, word-segmenting and part-of-speech tagging, and then chunking. The sample Chinese sentence reads:","<1> 1 9 9 7 ","This sentence is a sample chosen from the Jan. 1, 1998 issue of People's Daily, a major Chinese newspaper printed in the simplified ji{hacek over (a)}nt{hacek over (i)}z\u00ec script. It is a statement attributed to Boris Yeltsin, referring to the Russian economy. It reads, roughly, \u201cIn 1997 production succeeded in halting the collapse and appears to be expanding for the year.\u201d","Chunking operates on a passage of text that has already been word-segmented and part-of-speech tagged, in this embodiment. The sentence above is shown here, after being word-segmented:","<1> 1 9 9 7 ","It can be seen that the word segmenting has isolated some of the individual logograms by themselves\u2014these ones carry the meaning of a single word by themselves; while other logograms are segmented into pairs, indicating that the two concepts represented by the two separate logograms actually form part of a single word. The distinctions between such single-logogram words and such double-logogram words is not apparent from the original, unspaced string of characters, and indicates the added ambiguity in Chinese, relative to English or other Western languages (in which identifying the words of a text is relatively simpler), involved in natural language processing tasks such as chunking.","Notice, for example, that \u201c1 9 9 7 \u201d is lumped together as a \u201cword\u201d; in Chinese, the symbol , pronounced \u201cni\u00e1n\u201d, which means \u201cyear\u201d, is lumped together with (and after) the numerals, to indicate that it is not just a reference to the numner 1,987, but rather that it means \u201cthe year 1997\u201d, which represents a single concept and is treated as a single word. Notice also that the period, \u201c\u2218\u201d, is also segmented; it also conveys its own meaning separately from any of the other words, i.e. the meaning \u201c(end of sentence)\u201d, and it too is treated, and segmented, as its own separate word.","The importance of the word-segmenting can be appreciating by examining the differences between the two-character words in the sentence above, and the words that would be represented by the same characters as one-character words. The two-character words are provided with pinyin transliteration and English translation also provided for each character, in the format (Chinese character=pinyin transliteration=English translation), such as in (=ni\u00e1n=year). This is in order to aid in gaining familiarity, or as might be done to help English-language developers become familiar with Chinese texts being processed, although it is not a necessary part of a natural language processing or chunking process.","The first two-character word is =sh\u0113ngch{hacek over (a)}n=to produce, to manufacture. If interpreted as two separate words, these characters would mean =sheng=to be born, to give birth, and =ch{hacek over (a)}n=to reproduce. The next two-character word is =t\u00edngzh{hacek over (i)}=to stop, to halt, to cease; if interpreted as two separate words, this would mean =t\u00edng=to stop, to halt, and =zh{hacek over (i)}=to stop; toe. The next two-character word is =huapo=rockslide, landslip, collapse; if interpreted as two separate words, this would mean =hua=comical, cunning, slippery, smooth, and =p\u014d=slope. The next two-character word is =ch\u016bxi\u00e0n=to appear, to arise, to emerge; if interpreted as two separate words, this would mean =chu=to go out, to come out, to occur, to produce, and =xi\u00e1n=appear, present, now, existing, current. The final two-character word in the above sample sentence is =z\u0113ngzh{hacek over (a)}ng=to grow, to increase expand; if interpreted as two separate words, this would mean =z\u0113ng=to increase, to expand, to add, and =zh{hacek over (a)}ng=length, long, forever, always, constantly. In each of these cases, there is no blank space between the characters of the word, or between them and the adjacent words; and in isolation, interpreting the pairs as a single two-character word or as two separate one-character words are equally valid; only context is normally available to inform the reader of the true meaning. The word-segmenting effectively substitutes for appreciation of context for an automated chunking utility.","The same sentence is next shown after it has also been part-of-speech tagged:","<1> 1 9 9 7 \/u \/v \/c \/v \/u \/m \/q \/w","Here, each of the segmented words has been tagged, i.e. has had a tag added to it of the format \u201c\/x\u201d, with a one or two letter code (in this illustrative embodiment) indicating one of forty pre-defined parts of speech. The part-of-speech tags shown in this example are \/t, \/v, \/u, \/c, \/m, and \/w, with the \/v appearing six times and the \/u appearing twice. The \/t indicates a temporal word; \/v indicates a verb; \/u indicates an auxiliary; \/c indicates a conjunction; \/m indicates a numeral; and \/w indicates a punctuation mark.","A full list of the forty part-of-speech tags, used in one illustrative embodiment, is provided as follows (with the Chinese name for the parts of speech also listed):\n\n","The same sentence as before, now word-segmented and part-of-speech tagged, is next provided with pinyin transliteration and English translation also provided for each character, in the format (Chinese character=pinyin transliteration=English translation), such as in (=ni\u00e1n=year). This is in order to aid in gaining familiarity, or as might be done to help English-language developers become familiar with Chinese texts being processed, although it is not a necessary part of a natural language processing or chunking process, in this embodiment:","<1> (1 9 9 7 =1997 ni\u00e1n=year 1997)\/t (=ch\u00e9ng=succeed)\/v (=le={particle indicating completed action})\/u (=sh\u0113ngch{hacek over (a)}n=produce)\/v (=t\u00edngzh{hacek over (i)}=stop)\/v (=hu\u00e1p\u014d=collapse)\/v (=b\u00ecng=and)\/c (=ch\u016bxi\u00e0n=appear)\/v (=z\u0113ngzh{hacek over (a)}ng=expand)\/v (=de=of)\/u (-=y\u012b=one)\/m (=ni\u00e1n=year)\/q (\u2218={j\u00f9h\u00e0o}={period})\/w","After a chunking process, in which the text is divided into syntactically correlated parts of words, the same sentence, now chunked, appears as follows, with brackets around each chunk (first with Chinese characters only; the <2> at the beginning is just a reference marker for the sentence):","<2> [TP 1 9 9 7 \/t] [VP\/v \/u] [VP\/v] [VP\/v] [VP\/v] [CONJP \/c] [VP \/v] [VP \/v] \/u [MP \/m \/q] \/w","The chunk types, along with the chunk assignment indicators, such as \u201cTP\u201d, \u201cVP\u201d, etc. are described in more detail below. Notice that one portion of the chunked sentence, i.e., \u201c\/w\u201d- is not contained within a pair of brackets indicating a chunk. A punctuation mark, though word-segmented and part-of-speech tagged, is not included in a chunk, according to one of several rules applied in the chunking process, according to the present illustrative embodiment. The same passage is again provided next, with pinyin representation and English translation for each character:","<2> [TP (1 9 9 7 =1997 ni\u00e1n=year 1997)\/t] [VP =ch\u00e9ng=succeed)\/v (=le={particle indicating completed action})\/u] [VP (=sh\u0113ngch{hacek over (a)}n=produce)\/v] [VP (=t\u00edngzh{hacek over (i)}=stop)\/v] [VP =hu\u00e1p\u014d=collapse)\/v] [CONJP =b\u00edng=and)\/c] [VP (=ch\u016bxi\u00e0n=appear)\/v] [VP (=z\u0113ngzh{hacek over (a)}ng=expand)\/v] =de=of)\/u [MP (=y\u012b=one)\/m (=ni\u00e1n=year)\/q] (\u2218={j\u00f9h\u00e0o}={period})\/w","In the above sentence, there are six verbs (=ch\u00e9ng=succeed, =sh\u0113ngch{hacek over (a)}n=produces, =t\u00edngzh{hacek over (i)}=stops, =hu\u00e1p\u014d=collapse, =ch\u016bxian=appear, and =z\u0113ngzh{hacek over (a)}ng=expand), a conjunction (=b\u00ecg=and), and two auxiliaries (=le={particle indicating completed action} and =de=of). Hundreds of possible parses can be generated by a full parser due to structural ambiguities among these types of words. A chunking process can avoid syntactic ambiguities to provide consistency for natural language processing (NLP) tasks.","Many chunks have a modifier-head structure. However, verb-object and subject-object relations do not appear inside a chunk. In some applications, the task of chunking can be implemented by a finite state transducer (FST). For natural language processing applications such as information retrieval, information extraction and question answering, a full parsing result of a given sentence or portion of text is not required. Instead a chunking process can meet the need of most applications and also provide a solid basis for further incremental higher level syntactic and semantic analyzing of text.","When the chunking specification is being refined against the training corpus, a semi-automatic inconsistency control method may be used to evaluate and list all potential inconsistent annotations, in one illustrative embodiment. A tool is used to check mechanical errors and detect those potential inconsistent annotations with part-of-speech, and\/or lexicalized sequence. (The part-of-speech tags are as listed above.) For example, one inputs a part-of-speech sequence: \u2018n_n_n\u2019, referring to a \u2018noun_noun_noun\u2019 sequence (e.g. \u201ccomputer network provider\u201d), and an expected chunking annotation result: \u2018B-NP_I-NP_E-NP\u2019, referring to a \u2018beginning of noun phrase, intermediate part of noun phrase, end of noun phrase\u2019, and the tool will list all the consistent and inconsistent sentences in the chunk-annotated text respectively.","The chunk types defined in the present embodiment of the chunking utility specification include: NP (noun chunk), VP (verb chunk), ADJP (adjective chunk), ADVP (adverb chunk), PP (prepositional chunk), CONJP (conjunction), MP (numerical chunk), TP (temporal chunk), SP (spatial chunk), INTJP (interjection) and INDP (independent chunk).","Many examples of chunked sentences or portions of text according to one illustrative embodiment of a chunking utility, directed to chunking in the Chinese language as one particular example, are provided below, including both retained or correct chunk assignments, and rejected or incorrect chunk assignments. The following example provides additional details of one particular embodiment, to provide a better understanding of how this particular embodiment functions, and to provide a jumping-off point for understanding how a variety of other embodiments would also work by differentiation with the details of the present illustrative embodiment. A considerable breadth of variation from the particular details described below for the present illustrative embodiment may occur in other embodiments. The correctly chunked sentences according to the present illustrative embodiment of a chunking utility are indicated by being prefaced with a reference number, in the format <x>. The rejected passages are indicated by <Not recommended> or by <Incorrect>. While the \u201cnot recommended\u201d sentences may be grammatically correct in some context, they have not been able to be generalized, and are determined likely to foster ambiguity, in the present embodiment. Because different combinatations and definitions of chunk assignments may be used in various embodiments, some sentences indicated as \u201cnot recommended\u201d in the following, which is only one illustrative example, may be quite appropriate in another embodiment.","A noun chunk is a word sequence which consists of a single noun or a modifier-head structure (==d\u00ecngzh\u014dngji\u00e9g\u00f2u). Compounds formed by two or more adjacent nouns are particularly common in Chinese, for example. Typically\u2014about 77% of the time\u2014a Chinese noun phrase takes the form of a modifier-head structure, where the right-most noun in the phrase is the head, and the one or more nouns preceding on the left are modifiers of the head noun. For example, to illustrate the same structure in English (in which it is not as common as in Chinese), \u201cgalaxy cluster image\u201d and \u201cdairy farm country\u201d are examples of three-noun phrases in which the right-most noun\u2014\u201cimage\u201d and \u201ccountry\u201d respectively\u2014are the head, and the nouns preceding on the left\u2014\u201cgalaxy cluster\u201d, \u201cdairy farm\u201d\u2014modify the meaning of the head by providing details to characterize the head. \u201cGalaxy cluster\u201d and \u201cdairy farm\u201d taken by themselves are also noun phrases, in which the noun on the right is once again the head, and the noun preceding on the left modifies the head. The modifier-head structure consists of a head noun and one pre-modifier, whether the pre-modifier has one or more nouns in it. In turn, a pre-modifier consists of a sequence having one or more of the following phrase structures, and excluding an auxiliary  (=de=of): numerical phrase, adjective phrase, or noun phrase. In other words, the auxiliary  (=de=of) remains outside of any chunk according to the chunking utility. Other types of noun phrases in Chinese have different structures, for example such as coordination, in which two nouns appear next to each other with an \u201cand\u201d implied between them.","An example of a chunked sentence with noun phrases is provided as follows:","<3> [NP \/r] [VP \/d \/v] [NP \/n n] \/u [NP \/a \/vn]","The part-of-speech of the head words of NP are usually \u2018n\u2019, \u2018vn\u2019, \u2018r\u2019, \u2018an\u2019 \u2018Ng\u2019, names entities (\u2018nr\u2019, \u2018nr\u2019, \u2018nt\u2019, \u2018nz\u2019) and some nominal idioms. The part-of-speech \u2018vn\u2019 and \u2018an\u2019 should be treated as a noun only. For example:","<4> [NP \/r] [VP \/v \/u] [NP \/nr \/nr \/n] \/w","<5> [NP-\/m \/i]","<6> [VP \/v \/v] [NP \/vn] \/c [NP \/vn],\/w","<Incorrect>: [VP \/v \/v] [VP \/vn] \/c [VP \/vn],\/w","Most NPs only have one head, but for some noun coordination without conjunction, it could be annotated as a single NP. The reason is that it is almost impossible to distinguish it from a modifier-head construction. So there are more than one head in a NP when its inner structure is a noun coordination without conjunction, for example:","<7> [PP \/p] [NP \/n\/n] [VP \/v]","<Not recommended>: [PP \/p] [NP \/n] [NP \/n] [VP \/v]","<8> [NP \/ns] [VP \/v] [NP \/n \/n \/n]","<Not recommended>: [NP \/ns] [VP \/v] [NP \/n] [NP \/n] [NP \/n]","<9> [VP \/d \/d \/a \/u \/v] [NP \/n \/n] \/u [NP \/vn]","<Not recommended>: [VP \/d \/d \/a \/u \/v] [NP \/n] [NP \/n] \/u [NP \/vn]","Most NPs only have one modifier and it can be a numerical phrase, adjective phrase, or one noun. For example:","<10> [NP 2 1 8\/m \/q \/n]","<Incorrect>: [MP 2 1 8\/m \/q] [NP \/n]","<11> [NP 1\/m \/m \/q] [NP \/n],\/w","<Incorrect>: [MP 1\/m \/m \/q] [NP \/n],\/w","<12> [VP \/v] [NP \/d \/a \/n] \/w","<Incorrect>: [VP \/v] [ADJP \/d \/a ][NP \/n] \/w","<13> [MP \/m \/m \/q] [NP \/n] \/w [NP \/n]","<Incorrect>: [MP \/m \/m \/q \/n] \/w [NP \/n]","<14> [MP\/m \/q] [NP \/a \/n]","<Incorrect>: [NP\/m \/q \/a \/n]","<15> [VP \/v \/u] [MP 1 0 0\/m \/m \/q] [NP \/a \/n] [NP \/a \/n]","<Incorrect>: [NP 1 0 0\/m \/m \/q \/a \/n \/a \/n]","But there are some exceptions for the indistinguishable inner structures. If certain syntactic ambiguities exist inside a chunk and do not affect the boundary of the chunk, then those ambiguities will be left without chunk annotating.","(1) Pattern \u2018a_n_n\u2019","If the second noun is the head of the NP: a_n_n, no matter whether the a_n or the n_n form a noun phrase first, then a_n_n should be chunk annotated as a single NP. For example:","<16> [NP \/a \/n \/n]","<17> [TP \/t] [NP \/a \/n \/n] [NP \/vn] \/c [NP \/vn] [NP \/n]","<Not recommended>: [TP \/t] [NP \/a \/n] [NP\/n] [NP \/vn] \/c [NP \/vn] [NP \/n]","<Incorrect>: [TP \/t] [NP \/a \/n \/n \/vn] \/c [NP \/vn \/n]","<18> [VP \/v] \/u [NP \/a \/n \/n ] [NP \/n] [SP \/f] [VP \/v]","<Incorrect>: [VP \/v] \/u [NP \/a \/n] [NP \/n \/n] [SP \/f] [VP \/v]","<19> [PP \/p] [VP \/v] [NP \/a \/n] [NP \/n \/n] [NP \/vn] [VP \/d \/m \/v]","<Incorrect>: [PP \/p] [VP \/v] [NP \/a \/n \/n \/n \/vn] [VP \/d \/d \/v]","<20> [MP 1 0 0 0\/m \/q] [NP \/a \/n] [NP \/n \/n]","<Incorrect>: [MP 1 0 0 0\/m \/q] [NP \/a \/n \/n] [NP \/n]","[MP 1 0 0 0\/m \/q] [ADJP \/a \/n \/n \/n]","[MP 1 0 0 0\/m \/q] [NP \/a \/n \/n \/n]","If a \u2018a_n_n\u2019 sequence as a NP follows either a numeral m or a MP, then they should be chunk annotated as two chunks separately. For example:","<21> [MP \/m] [NP \/a \/vn \/n]","<Incorrect>: [NP \/m \/a \/vn \/n]","<22> [MP 5\/m\/q] [NP \/b \/vn \/n]","<Incorrect>: [NP 5\/m\/q \/b \/vn \/n]","(2) Pattern \u2018m_n_n\u2019 and \u2018m_q_n_n\u2019","If the second noun is the head of the NP: m_n_n, no matter whether the m_n or the n_n form a noun phrase first, then m_n_n should be chunk annotated as a single NP. For example:","<23> [VP \/v] [VP \/d \/v] [NP \/m \/n \/n] \/u [NP \/n]","<Not recommended>: [VP \/v] [VP \/d\/v] [NP \/m \/n] [NP \/n] \/u [NP \/n]","<Incorrect>: [VP \/v] [VP \/d \/v] [NP \/m] [NP \/n \/n] \/u [NP \/n]","<24> [NP \/m \/n \/n] [TP \/t] \/u [NP \/vn \/n]","<Not recommended>: [MP \/m] [NP\/n \/n] [TP \/t] \/u [NP \/vn \/n]","<Incorrect>: [NP \/m \/n] [NP \/n] [TP \/t] \/u [NP \/vn \/n]","25> [MP 6 0\/m \/n \/n]","<Not recommended>:: [NP 6 0\/m] [NP \/n \/n]","<Incorrect>: [NP 6 0\/m \/n] [NP \/n]","<26> [PP \/p] [NP \/m \/n] [NP \/n \/n \/vn \/n]","<Not recommended>: [PP \/p] [NP \/m \/n \/n \/n \/vn \/n]","<Incorrect>: [PP \/p] [MP \/m] [NP \/n \/n \/n \/vn \/n]","Compounds formed by more than two neighboring nouns are very common in Chinese and usually, but not always, all the nouns to the left of the head of the compound modify the head of the compound. Some compounds consist of several shorter sub-compounds. Unfortunately, sometimes it is impossible to distinguish the inner structures. In one embodiment, the noun sequence may be grouped as a single NP if its head is the last noun of the sequence. This grouping into a single larger NP is less likely to result in a noun phrase being inaccurately severed among two different chunks; the longer chunks also tend to make subsequent parsing easier. For example:","<27> [NP \/n \/n \/n]","<28> [NP \/n \/n \/n \/n]","<29> \u2033\/w [NP \/ns \/n \/n \/n \/n \/n \/vn \/n] \u2033\/w [PP \/p \/n \/f] [VP \/v] \/w","If two neighboring nouns belong to two different constituents respectively, then they should be chunk annotated as two separated chunks.","(1) Pattern \u2018v_n_n\u2019","If a v_n pattern forms a VP which in turn modifies the second noun, then these two nouns should be chunk annotated as two chunks separately. For example:","<30> [VP \/v] [NP \/n] [NP \/n] [VP \/d \/v] [NP \/n \/vn \/n \/n] \/w","<Incorrect>: [VP \/v] [NP \/n \/n] [VP \/d \/v]","<31> [NP \/j \/n],\/w [VP \/v] [NP \/n] [NP \/n] [VP \/a \/u \/v]","<Incorrect>: [VP \/v] [NP \/n \/n] [VP \/a \/u \/v]","(2) Pattern \u2018_n_n\u2019","If the first noun and the preceding -phrase (=de=of {possessive particle}) together form a noun phrase which in turn modifies the second noun, then these two nouns should be chunk annotated as two separated NPs. For example:","<32> [TP \/t] [NP \u2033\/w \/n \u2033\/w \/n \/n] \/u [NP \/n] [NP \/n] [ADJP \/d \/a]","<Incorrect>: [TP \/t] [NP \u2033\/w \/n \u2033\/w \/n \/n] \/u [NP \/n \/n] [ADJP \/d \/a]","<33> [NP \/n] [VP \/v]\/u [NP \/n] [NP \/n] [SP \/f] [VP \/v \/u]","<Incorrect>: [NP \/n] [VP \/v] \/u [NP \/n \/n] [SP \/f]","(3) Pattern \u2018n_n_\u2019","If only the second noun and (=de=of {possessive particle}) including its following words form a noun phrase, then these two nouns should be chunk annotated as two separated NPs. For example:","<34> [VP \/v] [NP \/n] [NP \/n] \/u [NP \/n]","<Incorrect>: [VP \/v] [NP \/n \/n] \/u [NP \/n]","(4) Pattern \u2018\/_n_n\u2019","If the first noun and the conjunction  or =h\u00e9=and) including its preceding words form a coordinate phrase which in turn modifies the second noun, then these two nouns should be chunk annotated as two separated NPs. For example:","<35> [NP \/n] \/c [NP \/n] [NP \/n] [pp \/p] [NP \/n \/r]","<Incorrect>: [NP \/n] \/c [NP \/n \/n] [PP \/p] [NP \/n \/r]","(5) Pattern \u2018n_n_|\u2019","If the second noun and the conjunction ( or =h\u00e9=and) including its following words form a coordinate phrase, then these two nouns should be chunk annotated as two separated NPs. For example:","<36> [NP \/n] [NP \/n] \/w [NP \/n] [NP \/n]","<Incorrect>: [NP \/n \/n] \/w [NP \/n] [NP \/n]","(6) Apposition (=t\u00f3ngw\u00e8i) should be chunk annotated as a separated noun chunk. For example:","<37> [TP \/t],\/w [NP \/nz] \/u [NP \/n] [NP \/n \/n \/n]","<Incorrect>: [TP \/t],\/w [NP \/nz] \/u [NP \/n \/n \/n \/n]","(7) Punctuation between neighboring nouns is omitted in titles of news articles or poems, in the present Chinese embodiment. But those neighboring nouns should be chunk annotated separately according to their context. For example:","<38> [NP \/ns \/n] [VP \/v] [NP \/n\/n] [NP \/n \/n] [VP \/l]","<Incorrect>: [NP \/ns \/n] [VP \/v] [NP \/n \/n\/n \/n] [VP \/l]","<39> [NP \/n] \/u [NP \/n] [NP \/n] u [NP \/n]","<Incorrect>: [NP \/n] \/u [NP \/n \/n] \/u [NP \/n]","<40> [SP \/n \/f] [VP \/v] [NP \/n] [NP \/n] [SP \/f] [ADJP \/a]","<Incorrect>: [SP \/n \/f] [VP \/v] [NP \/n \/n] [SP \/f] [ADJP \/a]","The adjoining organization-name, the professional title and the person-name should be chunk annotated as three chunks separately. But the person-name followed with his\/her title should be chunk annotated as a single NP. For example:","<41> [NP \/ns \/n \/n] [NP\/b \/n] [NP \/nr \/nr]","<Incorrect>: [NP \/ns \/n \/n \/b \/n \/nr \/nr]","[NP \/ns \/n \/n \/b \/n] [NP \/nr \/nr]","[NP \/ns \/n \/n] [NP \/b \/n \/nr \/nr]","<42> [NP \/ns \/n \/n] \/u [NP \/b \/n] [NP \/nr \/nr \/nn]","<Incorrect>: [NP \/ns \/n \/n] \/u [NP \/b \/n \/nr \/nr \/nn]","<43> [NP \/l \/n] [NP \/nr \/nr]","<Incorrect>: [NP \/l \/n \/nr \/nr]","<44> [NP \/r] [VP \/v] [NP \/ns] [NP \/n] [NP \/nr \/nr]","<Incorrect>: [NP \/r\/v \/ns \/n] [NP \/nr \/r]","[NP \/r] [VP\/v] [NP \/ns] [NP \/n \/nr \/nr]","<45> [NP \/n] [NP \/b \/n] [VP \/v] [NP \/n] [NP \/nr \/nr]","<Incorrect>: [NP \/n \/b \/n] [VP \/v] [NP \/n \/nr \/nr]","<46> [NP \/n] [NP \/nr \/nr] \/w [NP \/n \/n] [NP \/nr \/nr]","<Incorrect>: [NP \/n \/nr \/nr] \/w [NP \/n \/n \/nr \/nr]","A verb chunk is a word sequence which consists of a single verb including a verb-particles structure (refer to the morph lexicon) or a modifier-verb structure (). (Such particles consist of oriented verbs (and auxiliaries ) A modifier-verb structure is in turn formed by a head verb and a pre-modifier. We define a pre-modifier here as adverbial phrases and\/or auxiliary verbs (). (Auxiliary verbs () include (d{hacek over (e)}i); , etc.) Post-modifiers of a verb such as object ) and complement () should not be included in the verb chunk. The following is an example of VP:","<47> [CONJP \/c] [VP \/d \/d \/v \/v] [NP \/n \/n] [NP\/r] [VP\/v \/u] [NP\/ns \/n] [VP\/d \/v \/u] [NP\/vn \/\/n],\/w","In addition, particles of a verb-particle structure include auxiliaries . In general, the auxiliary =d{hacek over (e)}i=must is an indicator of a following complement. Therefore the auxiliary =d{hacek over (e)}i=must remains outside the verb chunk in most cases. One exception is the so-called complement of possible mode (). Since expressions in possible mode look like they are well-constructed, they should also be treated as verb-particle structures including the auxiliary . For example, [VP \/v \/u ], [VP \/v \/u], [VP \/v \/u \/a], [VP \/v \/d \/a]. But in most cases the auxiliary =d{hacek over (e)}i=must remains outside any chunk.","If the head verb followed by an auxiliary () should be also chunk annotated as a single VP and if it has pre-modifiers, they are grouped as a whole as a VP. For example:","<48> [VP \/vd \/v ] [VP \/Vg ] [MP \/m \/q ]","<Incorrect>: [VP \/vd] [VP \/v] [VP \/Vg] [MP \/m \/q]","<49> [VP \/d \/ad \/v \/u] [VP \/d \/v]","<Incorrect>: [ADVP \/d \/ad] [VP \/v \/u] [VP \/d \/v]","<50> [VP \/v \/u] [NP \/m \/q \/n]","A head verb with its preceding auxiliary verbs () should be grouped together as a single VP. Following is a whole list of auxiliary verbs in Chinese:\n\n","Following are examples of chunking auxiliary verbs as part of VP chunks:","<51> [MP \/m] [VP \/v] [VP \/v \/v] [NP \/n]","<Incorrect>: [MP \/m] [VP \/v] [VP \/v] [VP\/v] [NP \/n]","<52> ,\/w [VP\/v \/v] [NP \/a \/vn]","<Incorrect>: ,\/w [VP \/v] [VP\/v] [NP \/a \/vn]","Adverbials either before or after an auxiliary verb should be combined with the head verb to form a single VP. For example:","<53> [VP \/d \/d \/v \/v] \/w","<Incorrect>: [ADVP \/d \/d ] [VP \/v \/v] \/w","A head verb followed by oriented verbs () should be treated as a single VP in whole. Following is a whole list of oriented verbs in Chinese:\n\n","Following are examples of chunking oriented verbs as part of VP chunks:","<54> [ADJP \/a] \/c [VP \/v] [VP \/d \/v \/v \/u] [NP \/r] \/u","<Incorrect>: [ADJP \/a] \/c [VP \/v] [VP \/d \/v] [VP \/v \/u] [NP \/r] \/u","<55> [NP \/nr] [VP \/d \/v\/v \/u]","<Incorrect>: [NP \/nr] [VP \/d \/v] [VP \/v \/u]","Some sophisticated VP's include more than one auxiliary verbs, oriented verbs, adverbs or auxiliary particles. For example:","<56> [NP \/r] [VP \/d \/v \/v \/v] [NP \/m \/q \/n]","<57> [VP \/d \/d \/v \/d \/v ] [PP \/p] [NP \/ns]","<Incorrect>: [ADVP \/d \/d] [VP \/v \/d \/v] [PP \/p] [NP \/ns]","Verbs other than auxiliary verbs and oriented verbs in the above lists could not be grouped with a head verb to form a v_v VP, in this embodiment. For example:","<58> [VP \/v] [VP \/v] [VP \/v] [VP \/v] [NP \/n \/n]","<Incorrect>: [VP \/v \/v] [VP \/v \/v] [NP \/n \/n]","<59> [VP \/v] [VP \/v] [NP \/ns \/n \/n]","<Incorrect>: [VP \/v \/v] [NP \/ns \/n \/n]","<60> [PP \/p] [NP \/ns] [VP \/v] [VP\/v \/u] [NP \/i]","<Incorrect>: [PP \/p] [NP \/ns] [VP \/v \/v \/u] [NP\/i]","For a splittable verb, one auxiliary (:) and\/or one classifier () could be inserted into the splittable verb and form a single VP as a whole. For example:","<62> [PP \/n \/ns \/n \/f] [VP \/v \/u \/n],\/w","<Incorrect>: [PP \/n \/ns \/n \/f] [VP \/v \/u] [NP\/n],\/w","1. Preposition","A verb and its following preposition () should be chunk annotated as a VP and a PP respectively. For example:","<63> [VP \/d \/v] [PP\/p] [NP \/t \/vn \/n][NP \/n]","<Incorrect>: [VP \/d \/v \/p] [NP \/t \/vn \/n] [NP \/n]","<64> [VP \/d \/v] [PP \/p] [NP \/n] \/u","<Incorrect>: [VP \/d \/v \/p] [NP \/n ] \/u","<65> [VP \/v] [PP \/p] \/u [SP \/n \/f] [VP \/v]","<Incorrect>: [VP \/v \/v \/u] [SP \/n \/f] [VP \/v]","2. Adjective or Adverb","An adjective or adverb that acts as a post-modifier of a head verb should not be grouped with its preceding verb. For example:","<66> [VP \/v] [ADJP \/a] [NP \/n] [VP \/v] [ADJP \/a] [NP \/n]","<Incorrect>: [VP \/v \/a] [NP \/n] [VP \/v \/a] [NP \/n]","[VP \/v] [NP\/a \/n] [VP \/v] [NP \/a \/n]","<67> [VP \/ad \/v] [ADJP \/a] [NP \/n \u2033\/w \/n \u2033\/w]","Incorrect>: [VP \/ad \/v \/a] [NP \/n \u2033\/w \/n \u2033\/w]","<68> [VP \/d \/v] [ADJP \/a],\/w [VP \/v]","<Incorrect>: [VP \/d \/v \/a],\/w [VP \/v]","<69> [ADJP \/d \/a] [VP \/v] [ADJP \/a]\/w","<Incorrect>: [ADJP \/d \/a] [VP \/v \/a]\/w","<70> [NP \/a \/n] [VP \/v] [ADJP \/a] \/u","<Incorrect>: [NP \/a \/n] [VP \/v \/a] \/u","An adjective chunk is a word sequence which consists of a single adjective or a head adjective with its pre-modifiers such as an adjective\/adverb phrase. As mentioned above, if an ADJP was already included in a NP or VP as its pre-modifier like: [NP\/a \/n], then it should not be tagged as an ADJP explicitly. If an ADJP acts as the predicate of a sentence, then it should be tagged separately. For example:","<71> [NP \/r \/q \/n] [ADJP \/d \/a],\/w","An adverb chunk is a word sequence which consists of a single adverb or a head with its pre-modifiers. As mentioned above, if an ADVP is already included in a VP or ADJP as its pre-modifier, then it should not be tagged as an ADVP explicitly. An ADVP example is as follows:","<72> [ADVP \/d] [NP \/r] [VP \/v] [NP \/r \/n] \/w","Most prepositions form a PP which consists of only the preposition itself. However, certain prepositional phrases form a frame with explicit boundary such as [PP \/p . . . \/f]; [PP \/p . . . \/f], so they could be chunked as a multiple word PP without ambiguity. The length of such kinds of PP frames can be limited to four words.","A frame-like PP is formed by a p_ . . . _f pattern, in which the p and f are the left and right boundary respectively, and between these two words at most two other words could be inserted, in this embodiment. For example:","<73> [PP \/p \/n \/f ] [VP \/v \/v ]","<Incorrect>: [PP\/p] [SP \/n \/f] [VP\/v \/v ]","<74> [PP\/p \/a \/n \/f] [VP \/v]","<Incorrect>: [PP\/p] [NP \/a \/n] [SP \/f] [VP \/v]","<75> [PP\/p] [NP\/r \/a \/n] [SP \/f],\/w","<Incorrect>: [PP\/p r \/a \/n \/f],\/w","<76> [PP \/p] [SP \/j \/f] [NP \/ns \/n] [SP\/f]","<Incorrect>: [PP \/p \/j \/f] [NP \/ns \/n] [SP \/f]","<77> [NP \/r \/q \/n] [ADJP \/a] [PP\/p \/n \/f] \/w","<Incorrect>: [NP \/r \/q \/n] [ADJP \/a \/p] [NP \/n] [SP \/f]\/w","<78> [VP \/v] [PP \/p\/n \/f]","<Incorrect>: [VP \/v \/p] [SP \/n \/f]","<79>[VP \/v] [PP \/p] [SP \/n \/f] \/u [NP \/n] [SP \/f] \/w","<Incorrect>: [VP \/v] [PP \/p \/n \/f] \/u [SP \/n \/f]","<80> [PP \/p] [SP \/ns \/f] \/u [NP \/n] [SP \/f],\/w","<Incorrect>: [PP \/p] [NP \/ns] [SP \/f] \/u [SP \/n \/f],\/w","<81> [PP \/p] [SP\/f] \/w [SP \/f]","<Incorrect>: [PP \/p \/f] \/w [SP \/f]","Inside a frame-like PP a multi-word TP or MP may be treated as a single word. For example:","<82> [PP \/p 1 9 8 3 \/t \/f]","<Incorrect>: [PP \/p] [TP 1 9 8 3 \/t] [SP \/f]","<83> [PP \/p 1 9 8 3 \/t 7\/t 18\/t \/f]","<Incorrect>: [PP \/p] [TP 1 9 8 3 \/t 7\/t 18\/t] [SP \/f]","Most conjunctions, excluding =h\u00e9=and, =h\u00f9o=or, and =y{hacek over (u)}=and, form a CONJP which consists of only the single conjunction word alone. Conjunctions =h\u00e9=and, =h\u00f9o=or, and =y{hacek over (u)}=and remain out of any chunk. For example:","<84> [NP \/n] \/c [NP \/n] [NP \/n] [PP \/p] [NP \/n \/r]","(Conjunction \/c remains out of any chunk.)","<85> [CONJP\/c] [L\/ns] [PP\/p] [L\/ns]","[VP\/ad \/v]\/u [NP\/n] [VP\/v] [TP 1 9 9 8 \/t 1\/t 1\/t],\/w [CONJP \/c] [PP \/p \/r \/f],\/w [MP \/m \/n] [NP \/j \/vn] [ADVP\/d] [ADJP \/d \/a] \/w","A numerical phrase which cannot be included in a NP directly should be tagged as a MP. For example:","<86> [VP\/v] [NP\/r \/n \/n] [MP\/m \/m \/q] \/w","<87> [NP \/r \/q \/n] [NP \/n] [VP \/v \/u] [MP\/m \/q] \/w","<88> [CONJP \/c] [VP \/v] [VP \/v] \/u [MP \/m \/q] \/w","A temporal chunk consists of a temporal word (=shiji\u0101nci=\u201ctemporal word\u201d, part-of-speech tag is \u201ct\u201d) as its head. A TP always acts as a temporal adverbial constitute in a sentence. For example:","<89> [TP\/t],\/w [VP\/v] [NP\/vn \/n] \/u","<90> [VP\/ad \/v] \/u [NP\/n] [VP\/v]","[TP 1 9 9 8\/t 1\/t 1\/t],\/w","A spatial chunk consists of a localizer (=f\u0101ngw\u00e8ici=\u201cdirection position word\u201d, part-of-speech tag is \u201cf\u201d) as its head. Note that, in general, due to structural ambiguity \u201cf\u201d could not chunked with its preceding \u201cn\u201d or \u201cv\u201d directly. For example:","<91> [PP \/p] [NP \/nz] \/u [VP \/v] [NP \/n] [SP \/f],\/w","<92> [PP \/p] [VP \/v] \/u [NP\/m \/q \/m \/n] [SP \/f],\/w","those sentences, annotations like: [SP \/n \/f] and [SP \/n \/f] are incorrect.","A localizer \u2018f\u2019 could be grouped with its preceding preposition p to form a frame-like PP, as referred to above.","If the left context of a localizer is the beginning of a sentence, or a punctuation, except \u201c\u201d, and the number of words in front of the localizer is no more than three, then those words and the localizer should be grouped together as a SP. Inside a SP a multi-word TP or MP is treated as a single word. For example:","<93> [SP \/t \/t \/f] [NP\/ns] \/c","<Incorrect>: [NP \/t \/t] [SP \/f] [NP \/ns] \/c","<94> ,\/w [SP 1 9 9 6 \/t 6\/t 6\/t \/f] [PP \/p] [SP\/s]","<Incorrect>: [TP 1 9 9 6\/t 6\/t 6\/t] [SP \/f]","[PP \/p] [SP \/s]","<95> [TP \/t] [VP \/v] [SP \/f] [NP \/ns] \/c","<Incorrect>: [sP\/t \/v \/f] [NP \/ns] \/c","An interjection chunk consists of an interjection (=y{hacek over (u)}q\u00ecc\u00ed=\u201cmood word\u201d, part-of-speech tag is \u201cy\u201d). Frequently used interjections include:\n\n","All the meta-data of a document and all the descriptions inside a pair of brackets, including the opening and closing brackets, should be tagged as an INDP. For example:","<98> [INDP ()] . . .","<99> [INDP \/p \/nt \/ns 1\/t 8\/t \/n] [NP \/ns] . . .","<100> [INDP (\/n \/n \/nr \/nr \/v)]","<101> [INDP (\/w \/v \/n 1\/m \/q) \/w]","<102> [NP \u00b7\/nr] [INDP (\/w\/f \/m)\/w]","<103> [INDP (\/w \/n\/v 1 2\/m \/n)\/w]","<104> [INDP (\/v \u201c\/w \/n \/n \u201d\/w)\/w]","<105> [NP \/n \/n \/n] [INDP ( \/w \/nt)\/w]","<106> [NP \/nr \/nr] [INDP ( \/w \/j \/n \/n )\/w] . . .","<107> [NP \/l] [INDP (\/w \/n)\/w],\/w","<108> [NP \/n] [INDP (\/w \/n)\/w] [NP \/n]","<109> [MP \/l] [NP \/vn \/n] [INDP( \/w \/r \/ns \/v \/u 1 0\/m \/q )\/w],\/w [VP \/v] [NP \/n] [VP \/ad \/v],\/w","<110> . . . [NP \/b \/n] [INDP(\/w \/d 3\/m \/q 1 5\/m \/q \/n \/c 6\/m \/q 3 2\/m \/q \/l )\/w] \/u [NP \/vn] . . .","<111> . . . [INDP(\/w \/d \/v \/n \/vn \/n \/u 3 0%\/m )\/w],\/w . . .","<112> [INDP(\/w \/m)\/w] . . .","Certain inserted phrases () which do not act as syntactic constituents () in a sentence should be tagged as a INDP. Following are examples of those inserted phrases:    . . .","For example:","<113> \/w [INDP \/l],\/w [VP \/v] [NP \/n],\/w [PP \/p] [VP \/v]","<114> ,\/w [INDP \/l],\/w [VP \/d \/v] [NP \/j \/n] [VP \/v]","<115> ,\/w [INDP \/l] [VP \/v] [PP \/p] [NP \/f \/n] \/u [NP \/n]","Although Chinese was used for these illustrative examples, methods according to various embodiments are advantageously applicable to any of a wide variety of writing systems.","Similarly, although the subject matter has been described in language specific to structural features and\/or methodological acts, it is to be understood that the subject matter defined in the appended claims is not limited to the specific features or acts described above. Rather, the specific features and acts described above are disclosed as illustrative examples of ways to implement the claimed subject matter. A wide variety of implementations of the claimed subject matter is contemplated, including but not limited to implementation in stand-alone applications, portions of applications, network-based applications, server-hosted applications, wireless-delivered applications, dynamic-link libraries, objects, and a wide variety of other code, data, resources, and combinations thereof."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0009","num":"0008"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0010","num":"0009"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0011","num":"0010"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0012","num":"0011"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0013","num":"0012"},"figref":"FIG. 5"}]},"DETDESC":[{},{}]}
