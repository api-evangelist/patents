---
title: System and method for performing diagnostics using a portable device displaying diagnostic data using templates
abstract: A diagnostic tool suite is made available to technicians servicing equipment at residential and business locations using a portable device such as a PDA. The PDA runs a main engine that can execute diagnostic modules, with each diagnostic module corresponding to a particular appliance or device that requires troubleshooting, repair, diagnosis, maintenance or installation. The diagnostic modules use a limited number of templates to define possible screen layouts for each screen displayed to the technician. Additionally, the diagnostic module includes a diagnostic flow definition file wherein each record corresponds to a screen displayed to a technician. The main engine uses the template information and the diagnostic flow definition records to fully define a screen to display to a technician. In this way, an extensible, modular, non-specific diagnostic tool suite is available to a technician. To simplify creation of the diagnostic definition files, a graphical user development tool is provided that allows a non-skilled user to select a template definition, to be prompted for definitions of the fields in that template and to create the diagnostic definition file incorporating the user's input.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06862589&OS=06862589&RS=06862589
owner: Ranco Incorporated
number: 06862589
owner_city: Wilmington
owner_country: US
publication_date: 20020510
---

{"@attributes":{"id":"description"},"RELAPP":[{},{}],"heading":["RELATED APPLICATIONS","FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DESCRIPTION OF THE PREFERRED EMBODIMENT","Exemplary Environment","General Components","DB Builder","Query Engine","Exemplary DFD Record and Template","PDA Screens"],"p":["This application relates to and claims priority from U.S. Application Ser. No. 60\/289,825 filed May 10, 2001 entitled Personal Digital Assistant Diagnostic Tool, the disclosure of which is hereby incorporated in its entirety by reference.","The present invention relates to equipment diagnostic systems and, more particularly, to automated diagnostic systems for heating and cooling equipment.","The number and complexity of appliances and equipment being provisioned at residential and business locations is growing at an unprecedented rate. Furthermore, this equipment typically includes microprocessors and other programmable logic that allow interoperation and communication with other appliances as well as remote devices. Servicing and maintaining such equipment has always been a difficult task that will only become more challenging and complex in the future.","In the past, a specialized and very skilled and experienced technician was needed that understood the troubleshooting procedures and operation of a variety of appliances as well as the usefulness of different troubleshooting equipment such a volt meters, amp meters, pressure gauges and similar test equipment. This approach to maintenance and repair relies almost exclusively on the skill of the technician and is becoming more difficult as appliances are equipped with more intelligence.","Individual, specialized diagnostic devices for each piece of equipment or appliance is one possible maintenance solution. However, the costs of so many, and so specialized, diagnostic devices make such a solution too expensive and unattractive for most service personnel and companies. The variety of manufacturers and different appliances available would preclude most service personnel from being trained for and repairing or maintaining more than just a few lines of equipment.","A more general diagnostic device that can execute respective customized software for a variety of equipment or appliances would avoid some of the above-identified problems. However, there would still be a tremendous cost in developing and coding the numerous customized software applications for each appliance. Training for service personnel on each customized software application, ensuring software compatibility, and providing revisions that are forward and backward compatible are all additional problems that would need to be addressed and overcome to make such a diagnostic platform tenable.","Accordingly, there is a need for a diagnostic system that can be used by service personnel to diagnose, repair and maintain equipment and appliances that can be used with a variety of models and manufacturers of equipment, that is familiar to diagnostic manual used by many technicians, and that uses software that can be easily and quickly developed.","The present invention addresses these and other needs by providing an application environment within a portable, or remote, device that utilizes diagnostic modules that are easily created using a diagnostic database development tool.","One aspect of the present invention relates to a data-driven diagnostic apparatus for a plurality of devices. This apparatus includes a plurality of template records, each template record corresponding to a respective one of a plurality of predetermined templates, and a plurality of data records related to diagnostic information about one of the devices. Each of the data records reference on eof the templates. Also included is a query engine configured to display one of the data records, formatted according to its referenced template, on a display device.","Another aspect of the present invention relates to a method of providing a data-driven diagnostics tool for a plurality of appliances. This method includes the steps of reading one template record from a template file comprised of a plurality of template records and reading one record from a data record file, wherein the record references the one template record and the data record file is associated with one of the plurality of appliances. The method includes executing a form-generation routine to dynamically format the one record in accordance with the one template record, and then displaying the formatted one record.","An additional aspect of the present invention relates to a diagnostic database development system that is comprised of a plurality of template records, each template record corresponding to a respective one of a plurality of predetermined templates and identifying one or more entities and their respective locations on a display screen; respective device description files, each such file corresponding to an appliance from among one or more appliance; a graphical user interface tool for each of the template records, each said tool comprising a sequence of screens to gather information for customizing those entities that are configurable in order to create a record; and a database builder configured to combine any record created by each of the graphical user interface tools into a database file.","A further aspect of the present invention relates to a method for developing a diagnostic flow definition database. The method according to this aspect starts with the step of selecting an appliance that corresponds to the diagnostic flow definition database, the database comprising a plurality of nodes. The method continues by creating a respective record for each node by (a) selecting a respective template, and (b) customizing variables and data that are configurable for the respective template. Finally, the method concludes by combining the records to form the diagnostic flow definition database.","Still other objects and advantages of the present invention will become readily apparent from the following detailed description, simply by way of illustration of the best mode contemplated of carrying out the invention. As will be realized, the invention is capable of other and different embodiments and its several details are capable of modifications in various obvious respects, all without departing from the invention. Accordingly, the drawings and description are to be regarded as illustrative in nature, and not as restrictive.","While the present description focuses on an exemplary embodiment of a portable device, such as a PDA, being utilized by a service technician, the present invention also contemplates the use of a remotely-connected computing platform performing similar operations and having similar functionality. Furthermore, the described diagnostic tool and methods can be used connected to an \u201cintelligent\u201d appliance or, alternatively, can operate independently from such an appliance. In the first instance, the diagnostic tool and the appliance can communicate and exchange parameters and values helpful in the diagnoses and repair of the appliance. Possible communications protocols include, for example, RS 232, RS 485, USB, Blue Tooth, TCP\/IP, IRda, and Wireless GPS. In the independent operational mode, the diagnostic routines and procedures may be the same but the values and parameters can be manually entered by the on-site technician.",{"@attributes":{"id":"P-00027","num":"00027"},"figref":"FIG. 1","b":["102","104","106","106","102","108","106","108","104","108","106","108","112","108","112","112","110","112","104","102","108","106","104","102"]},"Service personnel have the possibility of servicing a wide variety of appliances with each serviceman having different needs. Additionally, the service equipment used by the servicemen must cover more than just a single product and, therefore, needs to be readily adaptable to the variety of day-to-day activities the serviceman may encounter. Accordingly, a modular approach has been taken that allows for a PDA, or other portable device, to have a resident \u201cengine\u201d that executes add-on diagnostic modules that are created using a database development tool. This design permits a large number of modules to be developed by one or more parties to cover the market and allows service personnel or companies to separately acquire and pay for modules only as needed. Appliances can include, for example, furnaces, hot water heaters, air conditioning systems, packaged terminal air conditioners (PTACs), heat pumps, etc.","Thus, from an overall standpoint, the software suite at the PDA consists of two elements \u2014a query engine and the diagnostic modules. The query engine is a hard coded executable written for the Palm OS, for example, or anther operating systems for other PDA-type devices. The query engine reads diagnostic information and instructions from a diagnostic database file and executes them. The diagnostic database file is in a predefined template format of which the query engine has prior knowledge. From the PDA's perspective, the query engine is, for example, a Palm executable file (i.e., .prc) that contains predefined template information. This query engine is a one-time, hard coded engine that executes as driven by a selected diagnostic module. In this instance, \u201cone-time\u201d merely means that a new query engine is not needed for each different manufacturer or product. The query engine can, of course, be revised and updated to provide additional functionality as needed.","Each diagnostic module is comprised of multiple databases that include text, variables, communication information, and flow of the different diagnostic screens related to a particular appliance. Once selected, a particular diagnostic module is loaded having associated scripts, templates, data and other information. The query engine then executes as driven by the diagnostic module. When connected to an intelligent appliance, for example, the PDA can communicate with the appliance and query the appliance for data that is displayed to the service personnel or used for automatic diagnostic purposes. To maximize use and provide flexibility, given the variation in communication protocols and applications, the diagnostic module includes a portion that defines communication strings, variable and variable attributes that are associated with that particular, product-specific, diagnostic module.","The data-driven diagnostic tool suite envisioned within the present invention, utilizing a PDA-based diagnostic engine, can be leveraged across a wide range of manufacturer specific hardware devices. The query engine will present to the technician any one of a number of diagnostic steps required to be taken in order to isolate, identify and repair a unit malfunction. It will present appropriate diagnostic flows, recommendations, part numbers and technical reference information for whatever hardware unit is being diagnosed by the technician. The query engine's execution is \u201cdata-driven\u201d in that its operation is defined by whatever Diagnostic Flow Definition (DFD) database is loaded at the time of diagnosis. This DFD database will determine what is actually seen on the PDA screen by the technician.","There will be many different diagnostic modules needed to cover all the product versions and manufacturers of appliances and equipment. The potential burden, expertise, time and cost of creating these diagnostic modules could potentially be overwhelming. However, a \u201cdatabase builder\u201d application, hereinafter referred to as DB Builder, uses the known templates to permit the creation of the database files within each diagnostic module with little if any software expertise or experience.  provides a flowchart of the operation of the DB Builder application that begins at step  with the user electing to create a new DFD file or edit an existing DFD file. When using the DB Builder application, the user first selects in step  a hardware definition file  that includes information about a specific product. The user then selects, in step , from among the available templates in order to start building the diagnostic module. Each template defines a PDA screen having pre-defined entities within it and the user then selects\/defines all variables and information on the displayed template. The user continues defining the diagnostic flow by identifying what screen is displayed next when a \u201cnext\u201d, \u201cyes\u201d, \u201chelp\u201d, \u201cno\u201d, etc. button is selected. Once complete, the diagnostic module is ready for storage  and  and use.","Elements that appear on the PDA screen and whose characteristics a user can define are known as \u201centities\u201d. In a preferred embodiment, the DB Builder supports three types of entities: text entities, button entities, and field entities. Each entity is defined by a User interface Template database which resides in the PDA and on the DB Builder workstation. A valid DFD consists of a fixed DFD preamble followed by any combination of entities. The DFD , in conjunction with the rules of operation defined by the UIT, are used by the query engine to interpret the user provided input and correctly generate the desired graphical user interface on the PDA.","Portable devices such as PDAs include a basic \u201chot-sync\u201d function that allows them to communicate with typical desktop computers and other computing platforms. Such a function can be customized within the present environment to install the query engine on the PDA, synchronize all the diagnostic modules available on the PDA, and create a directory of all the diagnostic modules available on the PDA. In certain diagnostic modes, the PDA may also acquire and store data from an appliance or equipment. This data can be uploaded from the PDA to a computer as needed using the customized hot-synch functionality as well.","Designing the diagnostic tool to be data-driven means there are databases being leveraged to accomplish various and plural tasks. Accordingly, the term \u201cdatabase\u201d becomes too generic and confusing to unambiguously refer to different parts of the present invention. Below are some specific databases that are included in, or used by, a diagnostic module.","A Query Device (QD) database is used to provide hardware specific information within a diagnostic module about a specific appliance that is to be serviced. The QD database includes at least three distinct types of information:","1) an array of descriptive strings that constitute the terms that can be queried from a target hardware device, such as Serial No., Model No., etc.; (these names can be presented to an operator when creating a DFD file for a target device)","2) the actual query strings (i.e., machine codes understood by a controller within an intelligent appliance) that are sent over a communications medium to the hardware device; and","3) parameter constraints (e.g., minimum and maximum values), if any, for valid query items.","A Diagnostics Flow Definition (DFD) database contains the data that defines the screens that the PDA presents to the technician. The entire flow, the look of the screens and the actions that are performed when certain choices are made by the technician are fully defined by this database.","A Master DFD database resides on the PDA and contains a list of all the DFD databases that are located on the PDA. This master database is used when the query engine is first launched. If it contains more than one entry, a list is presented on the PDA screen to the technician upon starting the query engine. The technician can then choose, from the list, the particular DFD wanted to perform a diagnostics task.","In a preferred embodiment, the native format of a DFD file is Microsoft Access. However, Microsoft Access may not be natively supported on the Palm OS or other PDA operating systems. Accordingly, a translation form Access to a flat database file format can be employed. A flat file is one in which table data is gathered in lines of ASCII text with values from each table delimited in some manner. The use of the flat file requires the query engine to have some knowledge of how the data is organized within the file. The DB Builder workstation or other computer will therefore provide a communications application which, in downloading the DFD database, will also translate that database into one or more flat files useful to the PDA operating system and query engine.","In order to provide flexible and simple development of the present diagnostic tool suite and system, the concept of templates is employed in the design of the DB Builder application. In a preferred embodiment, five different templates are employed that can handle almost any diagnostic screen that needs to be presented to a technician during a typical diagnosis scenario. More or fewer templates could be utilized without significantly departing from the scope and coverage of the present invention. The ability to add templates to handle new or uncommon scenarios is inherent in the modular design used in the present tool suite system.","Templates","Each graphical user interface (GUI) template defines the number of user interface entities or components, their general appearance, and the functional specifics for any given screen. The query engine, through the use of the DFD and QD databases, has predetermined knowledge regarding these templates. Such knowledge can include:","1) the particular type of template being employed for a given display screen;","2) the particular layout of each template;","3) the number of user interface components for each template; and","4) the command to execute for a given action the user takes, whether it be to proceed to a next screen or acquire data (from either the technician or the appliance itself).","The five templates within the preferred embodiment include a menu template, a yes\/no template, an instruction template, a user input template, and a cause\/correction template.","Menu Template","The menu template depicted in  is the most basic of all templates and is usually used for the first screen of a DFD file. The menu template provides the ability to define sub-choices from any given location from along a diagnostics thread.","A diagnostics thread can be thought of as a tree structure having a root node and many branches with leaf nodes. A node or node record is the incarnation of a template in database format, each such node along the diagnostics thread is realized in graphical format as a template. Thus, the menu template provides the ability to select the root node or any other node within a diagnostics thread.","The creating of a menu template allows the configuration of the number of choices  that can be made, the label assigned to each of these choices, and defining a link for each possible choice that the menu template offers.","Yes\/No Question Template","The creating of a Yes\/No template, depicted in , allows for the input of text , such as instructions or directions, and the formation of a question  that can be answered by a \u201cyes\u201d or \u201cno\u201d. The template also displays two navigation buttons  and  labeled \u201cYes\u201d and \u201cNo\u201d, each having a respective sub-node associated with a path taken if the respective button is selected.","Instruction Template","The creation of an instruction template, depicted in , allows for the inputting of text  that poses a directive to be displayed to the user and allows for the selection of only a single additional button . This button is preferably labeled \u201cOK\u201d, \u201cNext\u201d or some synonymous label. For example, this template can be used to instruct the technician to plug in an auxiliary piece of equipment before continuing. The diagnostics flow will stop until such time as the technician responds by affirmatively depressing the \u201cOK\u201d button (or until the technician selects the \u201cBack\u201d or \u201cMain\u201d buttons).","User Input Template","The creation of a user input template, depicted in , allows for the input of text  and a configuration of the number of input fields , labels  associated with each field, and the ability to query information from the hardware. A single button  selection is allowed which is labeled \u201cquery\u201d or something similar.","Cause\/Correction Template","The creation of the cause\/correction template, depicted in , allows for the input of two distinctive sections of text, one section  will be displayed under the heading \u201cCause\u201d and the other section  will be displayed under the heading \u201cCorrection\u201d.","Development Wizard","The DB Builder is a software tool resident on a workstation that provides a graphical user interface that allows a user with little, or no, programming experience to define a diagnostics flow. Such a definition includes the screens that a technician will see when running the diagnostics flow as well as where to \u201cjump\u201d and \u201cback-track\u201d within the diagnostics flow. Ancillary functions of the DB Builder include the ability to save a diagnostics flow as a DFD file and the ability to download the DFD file to a PDA for execution by the query engine. The user interface is based on a hierarchy structure analogous to a tree. Each node of the tree represents a screen to be displayed to the user. The flow from the root of the tree to a node that has no sub-nodes (i.e., an end node) is defined to be a thread. The tree can be comprised of as many threads as necessary to handle the permutations encountered in any given diagnosis scenario. The path of any given thread completely defines a diagnostics flow path.","The DB Builder opens with a screen that allows the user to create a new DFD file or to open an existing file. Creating a new file implies that a DFD file (or database) will be generated for a particular hardware appliance. The identification of the target must be made known to the DB Builder. Using this knowledge, the DB Builder is able to link to an appropriate QD database to retrieve information, such, as what items for this particular device can be queried, what command strings comprise a valid query for this device, and what are the valid ranges of data resulting form the queries. The different QD databases can be created by an equipment manufacturer, the controller manufacturer, or even a third party.","The DB Builder allows for the configuration of each node (i.e., displayed screen) using a predefined set of user interface templates; limits the number of templates to reduce the possibility of information overload, confusion, and user error; provides for the configuration of only predefined fields within the allowed templates; provides enough templates to handle the majority of diagnostic flow needs; allows for extensibility by permitting the addition of templates if necessary in the future; and provides help \u201cwizards\u201d to assist a user in customizing the screen templates.","In some instances, a hardware-independent choice may be valid to create a tutorial or training program that is not tied to a specific appliance. Under this mode, the DB Builder can prevent selection of certain templates such as the \u201cData Input\u201d template.",{"@attributes":{"id":"P-00068","num":"00068"},"figref":"FIG. 4","b":["400","402","406","404"]},"Exemplary Wizard Screen Shots",{"@attributes":{"id":"P-00070","num":"00070"},"figref":["FIGS. 5A-5D","FIG. 5A","FIG. 5B","FIG. 5C","FIG. 5C"],"b":["500","502","504","506","5","508","510","512","520","522","524","526","530","5"]},{"@attributes":{"id":"P-00071","num":"00071"},"figref":["FIGS. 6A-6D","FIG. 6A","FIG. 6B","FIG. 6C"],"b":["600","602","610","6","610","612","614","630","6"]},{"@attributes":{"id":"P-00072","num":"00072"},"figref":["FIGS. 7A-7C","FIG. 7A","FIG. 7B"],"b":["700","702","704","704","710","7"]},{"@attributes":{"id":"P-00073","num":"00073"},"figref":["FIGS. 8A-8C","FIG. 8A","FIG. 8B"],"b":["800","802","804","806","806","804","802","808","8"]},{"@attributes":{"id":"P-00074","num":"00074"},"figref":["FIGS. 9A-9F","FIG. 9A","FIG. 9B","FIG. 9C","FIG. 9D","FIG. 9E","FIG. 9F"],"b":["900","902","904","906","906","908","910","912","914","916"]},{"@attributes":{"id":"P-00075","num":"00075"},"figref":"FIG. 10","b":["1000","1000","1","1002","1004","1004","1000","1004"]},"Upon completion of the definition of each screen within a diagnostic flow, the DB Builder application creates a DFD file from all the DFD records that were created during the user's session.","Overview","The query engine is an event-driven loop that is responsible for dynamically creating user interface screens (or forms), processing user and appliance input data, querying the appliance device, retrieving data from the various database files that make-up a diagnostic module, and saving data for uploading to a remote computer application.",{"@attributes":{"id":"P-00079","num":"00079"},"figref":"FIG. 11","b":["1102","1104","1105","1106","1108","1109","1110","1111","1112","1113","1114","1106"]},"Exemplary Embodiment","The query engine can be implemented using a number of different modules and application programming interfaces, as would be recognized by a skilled computer programmer, that operate and communicate together to perform the functions of the query engine. One exemplary organization of the query engine is described below with reference to FIG. . However, it should be recognized that the query engine can be implemented in many other, functionally-equivalent, ways.","When the query engine is first activated (step ), a Dynamic GUI module will retrieve (step ) a list of all of the active DFD databases that reside on the PDA. From this list, the Dynamic GUI module will create a form that will permit the technician to select a specific appliance device. This module can also include a \u201cclean-up\u201d feature to remove any old or unused DFD files. Once the DFD database is selected, the Dynamic GUI module will retrieve (step ) the first record in the DFD database. From this record, the first form or screen associated with the appliance will be displayed on the PDA.","The Dynamic GUI module is capable of displaying information, performing data entry for field inputs, initiating communication with a specific hardware device, and saving data retrieved from the technician or hardware appliance. The Dynamic GUI is capable of branching to sub-nodes or, in other words, generating a new form dynamically according to input from the technician and the DFD database. For querying information from a hardware device, the Dynamic GUI module can call (step ) a separate Query Device module to send commands to the specific hardware device.","The Dynamic GUI module can call (step ) a Generate Form module to dynamically generate (step ) all forms for display on the PDA by specifying to the Generate Form module the record within the DFD file of the needed form. The Generate Form module will search the DFD database for the form, or record, specified. The specified record includes a template ID that identifies the type of template to use for displaying the form and the Generate Form module uses that ID to retrieve template information from the DFD record and the Template record associated with the specified form.","The routine called by the Generate Form module to retrieve template information receives the ID of the template used for the specified form. Information about each template is defined within a respective record of the User Interface Template (UIT) database, this information can include items such as the number of template objects and their respective locations and an indicator if an object can be repeated within a pre-defined screen area. Other information included in a template record can include, for example, the number of buttons, button information and labels, text information including font size, bold or underline information, field input information, and bitmap image information. Information not included in this template database is any information that is specific to the a generated form. For example, the template may specify that text appears at a location (, ); however, it is the information within the DFD record that specifies what text will actually be placed at this location. Another example is that a \u201cleft-arrow\u201d button at location (, ) can be specified by the template; however, the child node associated with a selection of that button is determined from the DFD record.","Using the information from the template record and the DFD record, the Generate Form module displays (step ) an appropriate screen to the technician. In a preferred embodiment, in addition to the template, each displayed user interface screen will have a \u201cMain\u201d button and a \u201cBack\u201d button. The main button, when selected, will propel the technician to the first screen of the diagnostics flow and the \u201cBack\u201d button will navigate the user to the previous screen in the diagnostics flow. The diagnostic flow waits (step ) for a user event (e.g., input, or button selection) to determine the next screen that the Generate Form module will display.","The query engine can use a Command Generator module to send ASCII strings, or other type strings, to a communications output port for communicating with an appliance device. If a technician selects the \u201cQuery\u201d button on a displayed form, then the Command Generator module will be called to generate an appropriate command to query a device using the communications port. Conversely, the query engine will also collect data received from the queried appliance and store it in a flat file. This flat file can be uploaded to a remote workstation for a variety of purposes such as reviewing a technicians work, for statistical data collection regarding a particular device or manufacturer, for archiving maintenance records of a specific appliance, and to document warranty work or procedures.","For example, a user input data form (that is, a form that is built using the user input data template) may contain a number of input fields and push buttons for data entry as well as a \u201cquery\u201d button. When the \u201cQuery\u201d button is pressed, or selected, data for each field within in the form is received from the external device. As the query engine receives data for each field, a new record containing the transferred data is created in a uniquely named database file. Such a unique name can be created using a date or time stamp, or possibly rely on a device ID stored in the appliance, or by other similar means. This saved user data can later be extracted from the PDA using its hot-sync functionality.","As indicated, each DFD record will reference a UIT record. The UIT record contains information about the number of entities, the sequencing of the entities, and the positioning of the entities that are defined within the DFD record. As an example, the DFD record may specify to use the menu template (e.g., UIT record # 0). As a result, the query engine will expect, in one embodiment, 4 entities which are further defined within the DFD record. In the exemplary menu template of , these entities are \u201cMenu Title (i.e., Text Header)\u201d , \u201cIntroductory Text Field\u201d , \u201cList Control for menu selection\u201d , and a \u201cHelp\u201d button . This UIT record will also specify the positioning coordinates of each of these entities. A Palm Pilot, for example as shown in , is defined as a 160\u00d7160 grid and it is this coordinate system that is used to specify the position of the entities within a template.",{"@attributes":{"id":"P-00090","num":"00090"},"figref":["FIG. 14","FIG. 14"],"b":["1402","1404","1406","1408","1410","14"]},"DFD Record:",{"@attributes":{"id":"P-d0e2115","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"119pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["FIELD NAME","TYPE","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Signature","TEXT","\u201cxyzzy\u201d"]},{"entry":["Version","Ulnt","0\u00d701000"]},{"entry":["RecordLen","Ulnt","150"]},{"entry":["UniqueID","Ulnt","1"]},{"entry":["ParentID","Ulnt","0"]},{"entry":["TemplateID","Ulnt","0"]},{"entry":["LongNodeName","TEXT","\u201cTitleMenu\u201d"]},{"entry":["ShortNodeName","TEXT","\u201cTM\u201d"]},{"entry":["HyperLink","Ulnt","0"]},{"entry":["Bitmap_File_Name","TEXT","\u201c \u201d"]},{"entry":["Audio_File_Name","TEXT","\u201c \u201d"]},{"entry":["WebURL","TEXT","\u201c \u201d"]},{"entry":["EntityText","TEXT","\u201cMy Title Based on a Menu Template\u201d"]},{"entry":["Text_Justification","eNum","JUSTIFY_CENTER"]},{"entry":["Number_Buttons","UChar","3"]},{"entry":["ChildID","Ulnt","2 (unique id of record to go to)"]},{"entry":["Entity_Button_Text","TEXT","\u201cMy Choice 1\u201d"]},{"entry":["Entity_QD_Output","Word","\u22121 (indicates no QD command)"]},{"entry":["ChildID","Ulnt","3 (unique id or record to go to)"]},{"entry":["Entity_Button_Text","TEXT","\u201cMy Choice 2\u201d"]},{"entry":["Entity_QD_Output","Ulnt","\u22121 (indicates no QD command)"]},{"entry":["ChildID","Ulnt","4 (unique id or record to go)"]},{"entry":["Entity_Button_Text","TEXT","\u201cMy Choice 3\u201d"]},{"entry":["Entity_QD_Output","Ulnt","\u22121"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}},"br":{}},{"@attributes":{"id":"P-d0e2612","num":"00002"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"1","colwidth":"91pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"3","colwidth":"84pt","align":"left"}}],"thead":{"row":[{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}},{"entry":["FIELD NAME","TYPE","DESCRIPTION"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":["Signature","TEXT","\u201cxyzzy\u201d"]},{"entry":["Version","Ulnt","0\u00d701000"]},{"entry":["RecordLen","Ulnt","33"]},{"entry":["TemplateID","Ulnt","0"]},{"entry":["Num_Template_Entities","UChar","2"]},{"entry":["EntityID","Ulnt","HEADER"]},{"entry":[{"u":"EntityType"},"Enum","ENTITY_TEXT"]},{"entry":["EntityX_UL_Loc","UChar","0,"]},{"entry":["EntityY_UL_Loc","UChar","0"]},{"entry":["EntityX_LR_Loc","UChar","160"]},{"entry":["EntityY_LR_Loc","UChar","30"]},{"entry":["Text_Justification","Enum","TEXT_JUSTIFY_LEFT"]},{"entry":["EntityID","Ulnt","BUTTON_ARROW"]},{"entry":[{"u":"EntityType"},"Enum","Entity_Button"]},{"entry":["EntityX_UL_Loc","UChar","20"]},{"entry":["EntityY_UL_Loc","UChar","30"]},{"entry":["EntityX_LR_Loc","UChar","150"]},{"entry":["EntityY_LR_Loc","UChar","120"]},{"entry":["Repeat_Indicator","UChar","1"]},{"entry":{"@attributes":{"namest":"1","nameend":"3","align":"center","rowsep":"1"}}}]}}}}},{"@attributes":{"id":"P-00093","num":"00093"},"figref":"FIGS. 15A-15D"},"In , the welcome screen of the diagnostic tool suite is shown as a menu that allows a technician to select a category of equipment to service. The query engine is running on top of the Palm OS to provide this menu. If the technician selects \u201cHeat Pump\u201d, then the query engine displays all the diagnostic modules currently in memory that correspond to a heat pump. In particular,  shows that 4 heat pump related diagnostic modules are found. These modules result in a menu of appliance name being present to the technician for selection. The technician also has the option of autodetecting devices out there. Only those items detected and having an available diagnostic module will be presented to the technician for selection. If the technician, for example, selected the Lennox HP27, they screen of  would be presented to the technician to provide a number of selectable options related to this appliance.  depicts the resulting screen if the technician selects \u201cFaults\u201d from the menu of choice in FIG. C. The Fault parameters are retrieved by the query engine from the appliance. To perform this function, the query engine must refer to the appropriate QD database to determine which parameters can be queried from an HP27 series appliance and what specific command strings sent to the appliance will result in the retrieval of the correct data values. Once this transfer of data is completed, however, the screen of  can be displayed.","A diagnostic tool suite has been described which is made available to technicians servicing equipment at residential and business locations using a portable device such as a PDA. The PDA runs a main engine that can execute diagnostic modules, with each diagnostic module corresponding to a particular appliance or device that requires troubleshooting, repair, diagnosis, maintenance or installation. The diagnostic modules use a limited number of templates to define possible screen layouts for each screen displayed to the technician. Additionally, the diagnostic module includes a diagnostic flow definition file wherein each record corresponds to a screen displayed to a technician. The main engine uses the template information and the diagnostic flow definition records to fully define a screen to display to a technician. In this way, an extensible, modular, non-specific diagnostic tool suite is available to a technician. To simplify creation of the diagnostic definition files, a graphical user development tool is provided that allows a non-skilled user to select a template definition, to be prompted for definitions of the fields in that template and to create the diagnostic definition file incorporating the user's input.","While this invention has been described in connection with what is presently considered to be the most practical and preferred embodiment, it is to be understood that the invention is not limited to the disclosed embodiment, but on the contrary, is intended to cover various modifications and equivalent arrangements included within the spirit and scope of the appended claims. The invention is capable of other and different embodiments and its several details are capable of modifications in various obvious respects, all without departing from the invention. Accordingly, the drawings and description are to be regarded as illustrative in nature, and not as restrictive."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The present invention is illustrated by way of example, and not by way of limitation, in the figures of the accompanying drawings and in which like reference numerals refer to similar elements and in which:",{"@attributes":{"id":"P-00016","num":"00016"},"figref":"FIG. 1"},{"@attributes":{"id":"P-00017","num":"00017"},"figref":"FIG. 2"},{"@attributes":{"id":"P-00018","num":"00018"},"figref":"FIGS. 3A-3E"},{"@attributes":{"id":"P-00019","num":"00019"},"figref":"FIG. 4","b":"3"},{"@attributes":{"id":"P-00020","num":"00020"},"figref":"FIGS. 5A-10"},{"@attributes":{"id":"P-00021","num":"00021"},"figref":"FIG. 11"},{"@attributes":{"id":"P-00022","num":"00022"},"figref":"FIG. 12","b":"11"},{"@attributes":{"id":"P-00023","num":"00023"},"figref":"FIG. 13"},{"@attributes":{"id":"P-00024","num":"00024"},"figref":"FIG. 14"},{"@attributes":{"id":"P-00025","num":"00025"},"figref":"FIGS. 15A-15D"}]},"DETDESC":[{},{}]}
