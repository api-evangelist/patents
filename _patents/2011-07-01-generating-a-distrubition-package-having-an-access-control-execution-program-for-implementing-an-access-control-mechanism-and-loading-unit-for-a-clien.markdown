---
title: Generating a distrubition package having an access control execution program for implementing an access control mechanism and loading unit for a client
abstract: A data distribution system, method and program for generating a distribution package for distribution data to a client. An environment of a requesting client requesting distribution data is detected. A determination is made of an access control execution program for implementing an access control mechanism and a loading unit on the requesting client. The access control execution program is adapted to the detected environment of the requesting client and control access to a resource from a process in the client. The loading unit loads the distribution data to a protected storage area of the client. A determination is made of a security policy specified for the distribution data. A distribution package is generated including the distribution data, the security policy, the loading unit, and the access control execution program adapted to the environment of the requesting client; and transmitting the generated distribution package to the requesting client.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09501628&OS=09501628&RS=09501628
owner: International Business Machines Corporation
number: 09501628
owner_city: Armonk
owner_country: US
publication_date: 20110701
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["TECHNICAL FIELD","BACKGROUND ART","CITATION LIST","Patent Literature","Non Patent Literature","SUMMARY OF INVENTION","Technical Problem","Solution to Problem","Advantageous Effects of Invention","DESCRIPTION OF EMBODIMENTS","REFERENCE SIGNS LIST"],"p":["The present invention relates to an information leakage preventive technique, and more specifically, to a data distribution apparatus, a data distribution system, a client apparatus, a data distribution method, a data reception method, a program, and a recording medium that prevent information leakage from a data distribution destination.","In recent years, due to design collaboration inside and outside companies and globalization of OEM (Original Equipment Manufacturing), overseas expansion of development\/manufacturing bases has been advanced. Furthermore, due to the widespread use of cloud computing, geographical gaps between bases and between an orderer and a contractor have been narrowed, and circulation of technical data through a network has become active more and more. Under such circumstances, the risk of unauthorized release of valuable technical data has been significantly increasing. Thus, data security measures and ensuring traceability have become more important.","In particular, in manufacturing industries in which operations for placing orders with subcontractors and sub-subcontractors frequently occur, prevention of secondary leakage of design\/manufacturing data from contractors is a major issue. Some services can be outsourced using cloud services. In areas such as three-dimensional CAD (Computer Aided Design), NC machining (Numerical Control machining), and medicine, however, many services requiring processing by local terminals still exist. Thus, in many cases, confidential data may be allowed to be saved on local terminals of contractors.","Since confidential data saved on a local terminal of a contractor is normally out of control of an orderer, it is desirable that technical preventive measures against unauthorized use or leakage should be taken. In particular, it is desirable that confidential data saved on a local terminal of a contractor should become unusable after the term of the contract expires. As the above-mentioned technical measures, for example, Japanese Unexamined Patent Application Publication No. 2009-26046 (PTL 1) refers to a technique for restricting access to a storage device by filtering a read instruction or a write instruction issued to a device driver of the storage or an input\/output interface.","PTL 1 also discloses preventive measures against secondary leakage of data, in which in order to prevent secondary leakage of data from an organization at a data distribution destination to a third party, from an execution environment construction image file dedicated to distribution data processing including an operating system and an application for constructing an execution environment dedicated to distribution data separated from an execution environment of non-distribution data by virtualization means provided in a data distribution destination computer, installation of the operating system and application is performed, and the execution environment dedicated to distribution data processing and separated from the execution environment of the non-distribution data by the virtualization means provided in the distribution destination computer is constructed.","Similarly, Japanese Unexamined Patent Application Publication No. 2009-86840 (PTL 2) discloses an information processing apparatus that includes an administrator environment including an operating system and a specific application, the operating system being for data management constructed in a manner separated from an operating system environment accessed by a user by virtualization means provided in the information processing apparatus; and means for operating the application using a method in which the operating system environment accessed by the user transmits input information of a keyboard or the like to the environment for the management and receives, as reply thereof, information of a display screen from the environment for the management.","As commercial DRM (Digital Rights Management) products, software applications implementing an access control function inside an application program are also provided. For example, RMS (Rights Management Services) by Microsoft\u00ae (NPL 1) and LiveCycle\u00ae Rights Management ES2 by Adobe\u00ae (NPL 2) are techniques in which an application itself interprets security policies including the authority to perform editing and the authority to perform printing set for individual documents and restricts various operations such as browsing, editing, copying, and printing.","PTL 1: Japanese Unexamined Patent Application Publication No. 2009-26046","PTL 2: Japanese Unexamined Patent Application Publication No. 2009-86840","NPL 1: \u201cWindows Rights Management Services\u201d, [online], [searched on Sep. 10, 2010], Internet<URL; http:\/\/www.microsoft.com\/windowsserver2003\/technologies\/rightsmgmt\/default.mspx>","NPL 2: \u201cAdobe LiveCycle Rights Management ES2\u201d, [online], [searched on Sep. 10, 2010], Internet<URL; http:\/\/www.adobe.com\/products\/livecycle\/rightsmanagement\/>","However, in the related arts disclosed in PTL 1 and PTL 2, a distribution destination computer needs to include virtualization means for constructing an execution environment dedicated to distribution data processing separated from a normal execution environment. Thus, these techniques can be used only in limited environment. Alternatively, installation of an operating system and an application is required in order to construct the execution environment dedicated to the distribution data processing separated from the normal execution environment in the distribution destination computer, which imposes a burden on the distribution destination. Furthermore, since an operator generally performs many operations including transmission and reception of electronic mails and browsing of web pages concurrently with dealing with distribution data, inconvenience of frequent use of virtual OSs is not negligible in the configuration using a virtualization technique.","Furthermore, in the techniques implementing the access control function inside an application as disclosed in NPL 1 and NPL 2, unfortunately, only limited applications can be protected. Thus, only limited types of data can be used. Therefore, all the services cannot be comprehensively controlled unless all the service applications are supported.","The present invention has been made in view of the problems of the related arts described above, and it is an object of the present invention to provide a data distribution apparatus and a data distribution system that control the information flow of various data by distributing data in the form of a distribution package including an appropriate access control mechanism executing access control for distribution data, and in addition, that are capable of preventing information leakage from a distribution destination without restricting the usage environment of the distribution destination and without placing excessive workload on the distribution destination.","It is another object of the present invention to provide a client apparatus that receives a distribution package from the data distribution apparatus, a data distribution method performed by the data distribution apparatus or the data distribution system, a data reception method performed by the client apparatus, a program for implementing the data distribution apparatus or the data distribution system, and a recording medium storing the program.","The present invention has been made in view of inconvenience of the related arts described above. The present invention provides a data distribution apparatus for providing a distribution package and a data distribution system including a plurality of computers, the apparatus and the system having characteristics described below.","A data distribution apparatus or a data distribution system according to the present invention includes a program storage unit storing an access control execution program for implementing an access control mechanism and a loading unit on a client, adapting the access control execution program to an environment of the client, the access control mechanism controlling access to a resource from a process in a manner that depends on a given policy, the loading unit loading distribution data included in a distribution package to a protected storage area. The data distribution apparatus or data distribution system detects an environment of a requesting client requesting reception of the distribution data, reads distribution data to be distributed and a security policy specified for the distribution data, transmits to the requesting client, a distribution package including the distribution data, the security policy, and the access control execution program adapting to the environment of the requesting client.","Furthermore, according to the present invention, a client apparatus that receives the distribution package can be provided. The client apparatus includes a request transmission unit transmitting a reception request for distribution data to the data distribution apparatus and an environmental information transmission unit transmitting environmental information describing an environment of the client apparatus. Furthermore, according to the present invention, a data distribution method performed by the data distribution apparatus or a data distribution system, a data reception method performed by the client apparatus, a program for implementing the data distribution apparatus or the data distribution system, and a recording medium storing the program can be provided.","With the configuration described above, a registrant of distribution data is capable of delivering the distribution data to a distribution destination while imposing a specific security policy on an operation environment of the distribution destination. The distribution data is stored under the local environment of the distribution destination. For distribution data existing under the local environment, access to a resource from a running process is controlled by the access control mechanism in accordance with a security policy, so that the range where the distribution data can be circulated can be restricted. Thus, for example, information leakage by unintentional data release after authenticated information provision to a business partner, that is, secondary leakage, can be prevented. Furthermore, with the configuration described above, compulsory introduction and setting of complicated special control software to a distribution destination is not required, and application to various data and various applications can be achieved.","Hereinafter, embodiments of the present invention will be explained. The present invention is not limited to the embodiments described below. In the embodiments described below, a data distribution server that implements a server function of packaging data to be distributed (hereinafter, referred to as distribution data) and distributing the packaged distribution data will be explained as an example of a data distribution apparatus.",{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 1","b":["10","20","30","12","20","12","12"]},"By way of exemplification, the data processing system  illustrated in  is configured as a service system for executing all the services while data transfer is performed between the client apparatuses  via the data distribution server  and local operations are performed by the individual client apparatuses . In , an orderer terminal that is used by an orderer who places an order for a service using distribution data, a primary contractor terminal , and a secondary contractor terminal are represented as the client apparatuses . The primary contractor terminal is a terminal that is used by a primary contractor who executes an undertaken service using distribution data in accordance with a request from an orderer. Meanwhile, the secondary contractor terminal is a terminal that is used by a secondary contractor who undertakes, from the primary contractor who executes the undertaken service in accordance with the request from the orderer, part of the service undertaken by the primary contractor.","In general, the client apparatuses  are configured as general-purpose computers, such as tower, desktop, laptop, or tablet personal computers, work stations, netbooks, and PDAs (Personal Data Assistances). More specifically, the client apparatuses  each include a central processing unit (CPU) such as a single core processor or a multi-core processor, a cache memory, a RAM, a network interface card (NIC), a storage device, and the like. The client apparatuses  each operate under the control of an appropriate operating system (hereinafter, referred to as an OS) such as Windows\u00ae, UNIX\u00ae, Linux\u00ae, Mac OS\u00ae, AIX\u00ae, or the like. In this embodiment, preferably, an OS based on a graphical user interface (hereinafter, referred to as a GUI) that provides a desktop environment such as a window system is loaded in the client apparatuses . The client apparatuses  according to this embodiment also each implement a web browser operating on the OS.","In general, the data distribution server  is configured as a general-purpose computer such as a personal computer, a work station, a rack-mount or blade server, a mid-range computer, a main-frame, or the like. More specifically, the data distribution server  includes a CPU such as a single core processor or a multi-core processor, a cache memory, a RAM, an NIC, a storage device, and the like. The data distribution server  operates under the control of an appropriate OS such as Windows\u00ae, UNIX\u00ae, Linux\u00ae, or the like.","When receiving a registration request for data necessary for an ordering service from the orderer terminal , the data distribution server  registers the data necessary for the service so as to be distributed to a contractor. Meanwhile, when receiving a reception request for data from the primary contractor terminal or the secondary contractor terminal operated by a contractor who undertakes an ordered service, the data distribution server  performs appropriate user authentication and distributes the data necessary for the service to the terminal Similarly, in the case where the primary contractor places an order with the secondary contractor for part of the undertaken service, the data distribution server  is capable of receiving from the primary contractor terminal distribution data or part or all of secondary data generated by processing the distribution data, and distributing the received data to the secondary contractor terminal . The data distribution server  according to this embodiment implements, for example as a web application, a function of receiving and distributing the above-described data.","Distribution data to be distributed is not particularly limited. However, distribution data to be distributed includes files in general-purpose formats, such as various files to be used by a word processor, a spreadsheet, drawing, presentation, a database management system, and various applications, such as DTP (Desktop Publishing), numerical analysis software, CAD, NC machining, CT (computed tomography), and MRI (magnetic resonance imaging), text files, document files, audio files, movie files, and the like. Furthermore, distribution data may be a file including a query result extracted by a specific query from a database connected to the data distribution server .","In accordance with a reception request for distribution data from the client apparatus , the data distribution server  distributes packaged distribution data to the requesting client apparatus . Normally, when distribution data is directly distributed as a file to the client apparatus , the distribution data can be freely circulated in an independent manner. Thus, in the case where distribution data includes confidential information, even if encoding of the distribution data can be performed, this may not be desirable from the viewpoint of data security measures. Under such circumstances, in this embodiment, as described later, the data distribution server  performs distribution by including an access control mechanism that executes access control in accordance with a specific security policy in a distribution package.","In this embodiment, the access control mechanism to be included in distribution data is located at the level between an OS and an application and is capable of executing access control in fine granularity, such as in units of processes, in units of users, and in units of files, in a flexible manner in accordance with user context. The access control mechanism according to this embodiment is capable of prohibiting access to resources, such as storing and printing of non-permitted data, copy and paste between processes through a clipboard during data operation, and screen copying using print screen. Hereinafter, data distribution processing using a distribution package including an access control mechanism according to an embodiment of the present invention will be explained in more detail.",{"@attributes":{"id":"p-0043","num":"0042"},"figref":["FIG. 2","FIG. 2"],"b":["100","20","110","120","122","124"]},"Here, a user who registers distribution data is referred to as a \u201cregistrant\u201d, and a user who receives registered distribution data is referred to as a \u201creceiver\u201d. Hereinafter, data distribution processing between the registrant and the receiver will be explained. That is, the orderer, the primary contractor, and the secondary contractor explained with reference to  each may serve as a registrant or a receiver. Furthermore, in the explanation provided below, unless otherwise particularly stated, a user of the data processing system  logs into the data processing system  by operating the client apparatus  and a specific user authentication is accomplished.","The registrant database  defines a data storage unit according to this embodiment and provides a storage area to which a user who may serve as a registrant registers distribution data. In the registrant database , for example, databases for individual users are provided.","The client apparatus  on the registrant side (hereinafter, referred to as a registrant terminal A) transmits to the data distribution server  a package registration request for distribution data. The package registration request may include distribution data, a security policy specified for the distribution data (hereinafter, a security policy specified by a registrant is referred to as a registrant specified policy), and distribution destination information describing a distribution destination to which the distribution data is permitted to be distributed.","For example, uploading of distribution data is specified through a web browser of the registrant terminal A. The distribution data is read from a local storage area of the registrant terminal A and is transmitted to the data distribution server . Similarly, for a security policy, individual items are input through a web browser. The input values of the individual items are configured, for example, as an XML (eXtensible Markup Language) file and are transmitted to the data distribution server . An upload form for an upload instruction for the distribution data and a GUI for setting a security policy are provided, for example, as a web page in such a manner that the web browser of the registrant terminal A can interpret.","More specifically, the package registration unit  includes a package registration request reception part  that receives a package registration request, a data\/policy acquisition part , and a registration processing part . The data\/policy acquisition part  acquires distribution data, a registrant specified policy, and distribution destination information regarding a package registration request. In the case where distribution data regarding the package registration request is secondary data of different distribution data (here, data that is generated by processing the distribution data), the data\/policy acquisition part  may also acquire a policy specified for the original distribution data and merge the acquired policy and the registrant specified policy together. The registration processing part  stores the acquired distribution data , registrant specified policy , and distribution destination information into the registrant database , and registers the distribution data so as to be distributed.","In the embodiment described here, since distribution data, a registrant specified policy, and distribution destination information are each transmitted from the registrant terminal A to the data distribution server , the data\/policy acquisition part  receives these data transmitted from the registrant terminal A, for example, in accordance with an HTTP protocol. However, a method for specifying distribution data, a registrant specified policy, and a distribution destination is not particularly limited.","In a different embodiment, all the distribution data, registrant specified policy, and distribution destination or any one of the distribution data, registrant specified policy, and distribution destination may be stored in advance in the data distribution server , and an identifier identifying the distribution data, the registrant specified policy, or the distribution destination information may be delivered from the registrant terminal A to the data distribution server . In this case, the data\/policy acquisition part  reads data identified by the identifier from a storage area that can be accessed by the data distribution server . In a different embodiment, all the distribution data, registrant specified policy, and distribution destination information or any one of the distribution data, registrant specified policy, and distribution destination information may be prepared as a resource on a network, and an URI (Universal Resource Identifier) in which the distribution data, the registrant specified policy, or the distribution destination information is stored may be delivered from the registrant terminal A to the data distribution server . In this case, the data\/policy acquisition part  acquires the data from a resource identified by the URI.","A security policy defines information flow control between processes in a computer and\/or between computers for distribution data included in a package. Here, information flow control defines an area in which information can be circulated between processes in a specific computer and between computers connected to each other. For example, a security policy defines prohibition or permission of reading of distribution data or secondary data of the distribution data, storing of the data into a removable medium, storing of the data into a non-protected storage area of a local drive, printing of the data, copy and paste between processes through a clipboard in a state where the data is opened, screen copying through a clipboard in a state where a window of the data is in an active state, and the like.",{"@attributes":{"id":"p-0052","num":"0051"},"figref":["FIGS. 3 and 4","FIG. 3","FIG. 3","FIG. 3"],"b":"1"},"In a portion between Subjects tags, a subject (process) to which the policy is applied is specified by Subject tags. In the example illustrated in , a process \u201cnotepad.exe\u201d is specified as a subject. In a portion between Resources tags, a policy for access to a resource by the subject (process) is described by Resource tags. In the example illustrated in , a description in provided in which access \u201cwrite\u201d to a resource \u201cclipboard\u201d, access \u201cprint instruction\u201d to a resource \u201cprinter\u201d, access \u201cwrite\u201d to a resource \u201cremovable medium\u201d by the process \u201cnotepad.exe\u201d are each prohibited. In a portion between Obligations tags, obligation to be imposed after termination of a process or during running of a process is described by Resource tags.",{"@attributes":{"id":"p-0054","num":"0053"},"figref":["FIG. 4","FIG. 4(A)","FIG. 4"]},"In the example illustrated in , a policy for copy and paste between all the desired processes is described. In a portion between Subjects tags, a policy for a desired process is described by an AnySubject tag. In a portion between Resources tags, a description is provided in which the contents of a clipboard written by a different process are prohibited from being read by a desired process. In a portion between Obligations tags, a clipboard is specified by Resource tags, and cleanup of the clipboard is obliged to be performed after termination by an Obligation tag. Obligations imposed after termination of a process or during running of a process also include compulsion of operation log recording or the like.","With the use of the security policies exemplified in , access to a resource by a process operating on the client apparatus  is controlled. As a result, circulation of data between processes is controlled. Furthermore, circulation of data from the client apparatus through a different process such as a removable medium, a non-protected folder, an FTP (File Transfer Protocol), or the like to an external computer is controlled. In addition, by describing inside a security policy, for a process of a web browser, an area of distribution data and secondary data of the distribution data that can be registered again from a distribution destination to the data distribution server , circulation of data to an external computer after direct distribution to a distribution destination through the data distribution system can also be controlled. Although the security policies used for Windows\u00ae are illustrated in  by way of example, similar description can be made for different OSs.","Distribution destination information includes information identifying the client apparatus  or a user that can be permitted as a distribution destination of distribution data. Distribution destination information may include, for example, a user ID identifying a user for whom distribution is permitted, a client ID identifying a client terminal for which distribution is permitted, a group ID identifying a group of users or clients for which distribution is permitted, a unique identifier (an OS serial number, a machine UUID (Universally Unique IDentifier), a machine serial number, etc.) uniquely allocated to the client apparatus  for which distribution is permitted, an IP address allocated to the client apparatus  for which distribution is permitted, a MAC address allocated to an NIC of the client apparatus  for which distribution is permitted, and the range of IP addresses allocated to a client group for which distribution is permitted, or a combination of some of the information mentioned above.","Referring back to , when distribution data, a registrant specified policy, and distribution destination information are registered to the registrant database , a distribution package of the distribution data enters a state in which the distribution data can be distributed. The functional block  of the data distribution server  further includes an execution module database  that stores an access control execution module to be included in a distribution package (hereinafter, may be referred to as an execution module) and a package distribution unit  that packages distribution data registered so as to be distributed and a access control execution module and distributes the packaged distribution data.","The access control execution module is a program for implementing an access control mechanism, which will be described later, on a client apparatus and for executing access control on the client apparatus in accordance with the security policy described above. The access control execution module depends on the type of an OS. Thus, the execution module database  stores the access control execution module for each type of OS. As access control execution modules for specific OSs, for example, Windows\u00ae , Linux\u00ae , MAC OS\u00ae , AIX\u00ae  are prepared. The execution module database  defines a program storage unit according to this embodiment.","The client apparatus  on a receiver side (hereinafter, referred to as a receiver terminal B) accesses the data distribution server , and transmits a package reception request as well as a distribution data ID identifying desired distribution data. Here, the distribution data ID can be transmitted from a registrant to a receiver using different means, such as, for example, electronic mail. A user is able to transmit a package reception request including the ID of desired distribution data to the data distribution server  by clicking a direct link to a web page in the electronic mail from which distribution data is to be downloaded. Alternatively, the distribution data ID may be transmitted to a receiver in such a manner that the distribution data ID is included in a web page in which distribution data that can be received by the user are listed. In this case, by selecting a desired one piece of the listed distribution data, the user is able to transmit a package reception request including a desired distribution data ID to the data distribution server .","More specifically, the package distribution unit  includes a package reception request reception part  that receives a package reception request, an environment detection part , an applied policy determination part , a packaging processing part , and a transmission processing part . The environment detection part  acquires environmental information in which the type of an OS used by the receiver terminal B serving as a requesting source is described, and detects the environment of the receiver terminal B. Here, the environment of the receiver terminal B includes the type of an OS configuring the receiver terminal B, and in a broader sense, includes the integral including the combination of software such as an OS, a browser, and an application and hardware such as a drive and individual configuration states and settings.","An OS used by the receiver terminal B may be easily determined on the basis of an identifier of a user agent reported in, for example, an HTTP request. Furthermore, in order to detect detailed environment other than the type of an OS, a program of an applet or the like to collect system information of the client apparatus  with consent of the user and transmit the system information to the data distribution server  may be provided to the receiver terminal B, and environmental information may be acquired using the program. In this case, the environment detection part  acquires from the receiver terminal B environmental information in which system information of the receiver terminal B is described.","The system information described above may include information identifying a client, such as the name of a computer, an OS serial number, a machine UUID, and a machine serial number, the volume in which the system is installed, the drive number of a different volume, drive configuration of a Windows\u00ae directory, a system directory, a program directory, or the like, the encoding attributes of a main folder, local resource information, such as a local printer name, and the like. Information identifying a client may be used, for example, when a client for which distribution is permitted is restricted or when a machine by which a distribution package can be loaded is restricted. The drive configuration is used when a path for creating a protected folder in which distribution data is loaded is determined The encoding attributes can be used when, for generation of a protected folder, it is determined whether or not encoding is to be separately performed for a file in the protected folder.","The applied policy determination part  appropriately corrects a registrant specified policy in the registrant database  in such a manner that the registrant specified policy fits the environment of the receiver terminal B detected by the environment detection part , and determines a security policy to be actually included into a distribution package (hereinafter, referred to as a receiver applied policy). As the correction to fit the environment of the receiver terminal B, the path of a folder in which the distribution data described above is loaded, the file name of a process, the policy particular to an OS are corrected. For example, since the file manager of Windows\u00ae is Windows\u00ae explorer, the file manager of MAC OS\u00ae is Finder UNIX\u00ae, and the file manager of Linux\u00ae is Dolphin or Natilus, information on a process to which a policy is applied can be corrected in accordance with the type of OS.","The packaging processing part  acquires distribution data in the registrant database , a receiver applied policy determined by the applied policy determination part , and an access control execution module that fits the environment in the execution module database . Preferably, the packaging processing part  encodes at least the distribution data and generates packaged distribution data including the distribution data, the receiver applied policy, and the access control execution module. A distribution package  is provided, for example, as a file in an execution format including distribution data , a receiver applied policy , and an access control execution module . The transmission processing part  transmits the generated distribution package  to the receiver terminal B serving as a reception requesting source for distribution data.","As an encoding key used for encoding distribution data in a distribution package, for example, a public key of the personal certificate of the receiver terminal B may be used. However, an encryption key is not particularly limited. In this embodiment, a common key exchanged between the data distribution server  and the receiver terminal B in advance or afterwards may be used. Furthermore, an encryption method is not particularly limited. Various common key encryption methods and public key encryption methods may be adopted. Furthermore, although an explanation has been provided in which distribution data is encoded when being packaged by the data distribution server  in the embodiment described here, distribution data itself may be encoded by the registrant terminal A in a different embodiment. In this case, similarly, a public key of the receiver terminal B or a common key exchanged between the registrant terminal A and the receiver terminal B in advance or afterwards may be used.","The functional block  of the data distribution server  illustrated in  is implemented by reading a program from a computer-readable recording medium such as an HDD, loading the program on a memory, executing the program, and controlling the operation of individual hardware resources.","Hereinafter, a package registration request and processing for the package reception request will be explained in more detail with reference to .  is a flowchart illustrating a package registration process performed by the package registration unit in the data distribution server according to the first embodiment of the present invention. The process illustrated in  starts in step S in response to the issuance of a package registration request from the client apparatus  to the data distribution server .","In step S, the package registration unit  receives a package registration request issued from the client apparatus . In step S, the package registration unit  acquires distribution data, a registrant specified policy, and distribution destination information regarding the request. In step S, the package registration unit  determines whether or not a policy to be inherited exists. Here, when distribution data regarding the request is found to be secondary data of different distribution data, it is determined that a policy to be inherited exists. When it is determined in step S that a policy to be inherited exists (YES), the process proceeds to step S. In step S, the package registration unit  acquires a security policy specified for distribution data serving as a parent, and merges the acquired security policy and the registrant specified policy for the registration request together. Then, the process proceeds to step S. Meanwhile, when it is determined in step S that no policy to be inherited exists (NO), the process directly proceeds to step S.","In step S, the package registration unit  stores the distribution data, the registrant specified policy, and the distribution destination information into the registrant database , and registers a distribution package so as to be distributed. In step S, the package registration unit  sends an acknowledge response to the package registration request and notifies that the package registration processing has been successfully completed.",{"@attributes":{"id":"p-0071","num":"0070"},"figref":["FIG. 6","FIG. 6"],"b":["200","30","20","201","140","30","202","140","30","30"]},"In step S, the package distribution unit  determines, by referring to distribution destination information in the registrant database  associated with distribution data regarding the reception request, whether or not distribution to the requesting source is permitted. When it is determined in step S that distribution to the requesting source is not permitted (NO), the process branches off to step S, in which the process is terminated. Here, a request from a user or a client who does not meet conditions for distribution permission inside the distribution destination information is excluded. Meanwhile, when it is determined in step S that distribution to the requesting source is permitted (YES), the process proceeds to step S.","In step S, the package distribution unit  acquires a registrant specified policy associated with the distribution data regarding the reception request, determines an access control execution module corresponding to the environment of the reception requesting source among one or more access control execution modules stored in the execution module database  in accordance with the environmental information, and determines a receiver applied policy by appropriately correcting the registrant specified policy in accordance with the environment of the reception requesting source. In step S, the package distribution unit  acquires the distribution data regarding the reception request, encodes the acquired distribution data, and packages the determined execution module, the encoded distribution data, and the determined receiver applied policy to generate a distribution package. In step S, the package distribution unit  transmits the generated distribution package to the client apparatus  serving as the reception requesting source. In step S, the process is terminated.","Hereinafter, processing performed by the client who receives a distribution package will be explained.  is a diagram illustrating the detailed functional block of a distribution package distributed to the client apparatus in the first embodiment of the present invention. The distribution package illustrated in  includes the distribution data , the receiver applied policy , and the access control execution module . More specifically, the execution module  includes program code for implementing an access control mechanism injection unit , a protected area generation unit , a data loading unit , a re-packaging unit , a protected area elimination unit , and an access control mechanism  on the client apparatus .","The access control mechanism  is configured as a library that monitors an API (Application Programming Interface) call by a process operating on the client apparatus  and executes access control. Such a library is referred to as a dynamic link library (DLL), a common library, or a shared library. The access control mechanism injection unit  injects the access control mechanism  into individual processes operating on the client apparatus  in order to cause the access control mechanism  to function. After being injected into the processes, the access control mechanism  monitors principal API calls of the processes, and controls access to resources by the processes in accordance with policies for the individual processes described in a receiver applied policy.","The protected area generation unit  generates a storage area in which distribution data is to be loaded (hereinafter, referred to as a protected area) on a local drive of the client apparatus . Here, the protected area refers to a storage area protected by encoding in such a manner that non-permitted access is excluded. Access to the protected area is, in principle, prohibited, and only a process of the access control execution module  and a process that is exceptionally permitted inside a receiver applied policy can access to the protected area in a permitted method. The protected area is implemented, for example, as a protected folder in such a manner that the same protection is applied to a sub-folder of the protected folder.","The data loading unit  decodes the distribution data  packaged in the distribution package , and loads the decoded distribution data  into the generated protected storage area, so that the permitted process can access to the distribution data . As keys to be used for decoding, a secret key of the personal certificate of the receiver terminal B can be used in the case of using a public key for an encryption key, and a key exchanged between the registrant terminal A and the receiver terminal B or between the data distribution server  and the receiver terminal B in advance or afterwards can be used in the case of using a common key.","After a local operation finishes, the re-packaging unit  encodes local data in a protected area and re-packages the encoded local data. After the local operation finishes and re-packaging is completed, the protected area elimination unit  deletes the local data in the protected area and eliminates the protected area itself. Preferably, the protected area elimination unit  is capable of completely deleting the local data in the protected area by overwriting a random value. Accordingly, after a process of the access control execution module  ends, traces of highly confidential and loaded data are deleted from the local drive of the client apparatus .",{"@attributes":{"id":"p-0079","num":"0078"},"figref":["FIG. 8","FIG. 8"],"b":["300","160","166","30"]},"In step S, the access control execution module  loads a DLL implementing the access control mechanism  into a temporary folder. In step S, the access control execution module  lists processes running on the client apparatus , and injects the DLL of the access control mechanism  for all the processes (DLL injection). Accordingly, the injected DLL of the access control mechanism  starts to monitor principal API calls by the individual processes, and the above-described access control in units of processes is executed.","In step S, the access control execution module  generates a protected area (protected folder). In step S, the execution module  loads the distribution data  in the distribution package  into the protected area, and activates an application for processing the distribution data. Until termination conditions are satisfied in step S (during the period in which the determination is NO), step S is looped through. Application software for editing the distribution data  in the package can be specified for the distribution package . During running of the applications, the access control mechanism  operates. Under the above-described access control in units of processes, information leakage is prevented. Meanwhile, when all the activated applications are terminated, it is determined that termination conditions are satisfied.","When it is determined in step S that termination conditions are satisfied (YES), the process proceeds to step S, in which the access control execution module  re-packages local data in the protected area. In step S, the local data in the protected area is deleted and the protected area is eliminated. In step S, the process is terminated. In the above-described embodiment, an explanation has been provided in which local data in a protected area is re-packaged. However, in the case of read-only distribution data or the like, loaded data may be deleted without performing re-packaging.","Hereinafter, the operation of the access control mechanism  will be explained with reference to .  is a diagram illustrating a functional block implemented on the client apparatus in which the access control execution module is activated, according to the first embodiment of the present invention. Hereinafter, an example of a functional block in the Windows\u00ae environment will be explained.","As illustrated in , DLLs of the access control mechanisms  are injected to processes , such as application programs operating on the client apparatus , in accordance with operation of the access control execution module . The DLLs of the access control mechanisms  monitor principal API calls of the processes, and control access to low-level resources, such as file , print , a clipboard , and the like in accordance with the policy.","When a policy defining information flow control for a destination subsequent to a distribution destination for data in a distribution package (for example, the range of data that can be re-ordered) is described in a security policy, the DLL of the access control mechanism  is capable of controlling, in accordance with the policy, whether or not to permit a registration request in which distribution data in the protected area or part or all of secondary data of the distribution data serves as distribution data, using the above-described mechanism for monitoring API calls. Permission or non-permission of the registration request can be controlled by permission or prohibition of an upload operation by a browser. A security policy defining the range of data that can be re-ordered may include, for example, a description in which an upload operation by a browser is prohibited in principle and reading of distribution data or part or all of secondary data of the distribution data is exceptionally permitted for an upload destination URL that satisfies specific conditions.","As the principal API, for example, a Win32API function, such as CreateFile, DeleteFile, CopyFile, StartDoc, SetClipboardData, GetClipboardData, or CreateProcess, included in DLLs to , such as GDI32.dll, User32.dll, and Kernel32.dll, provided in the secondary system  may be used in the Windows\u00ae environment. Furthermore, the access control mechanism  is capable of monitoring a method call of a specific COM (Component Object Model) interface and controlling access to a high-level resource.","The receiver applied policy  included in the distribution package  is loaded as a policy management table  on a memory, and the DLL of the access control mechanism  executes access control by referring to the policy management table . For example, the application program  calls the API of the DLL  to access data  in a protected area . The access control mechanism  determines, in accordance with entry in the policy management table, whether or not to cause the API call to pass. The policy management table may be static data. However, preferably, in order to reflect the state of a window and a process in real time, a management mechanism (not illustrated) for feeding back API and COM call records and a notification message from an OS to an application may be provided so that the policy management table  can be dynamically updated in accordance with user operation conditions.","For example, when screen copying is prohibited, the point as to whether or not a window displaying a file of an application to be protected is viewable on the screen is important. Thus, in order to determine as to the active state and viewable stat of the window, the management mechanism is capable of dynamically updating the policy management table  on a memory by monitoring a window message such as WM_CREATE, determining, in accordance with information such as a window class name, a title name, and a window attribute, which file is displayed and which file is activated, and detecting an event.","For the above-described dynamic access control mechanism according to the context of a GUI, Sanehiro Furuichi and Michiharu Kudo, \u201cGUI beesu no conpyuta ni tekishita akusesu seigyo porishi kanri houhou no teian (Access Control Policy Management for GUI-based Computer)\u201d, Journal of Information Processing Society of Japan, Vol. 49, No. 9, pp. 1-11 (September, 2008) can be referred to for more details. The above-described access control mechanism  is based on Binary Interception for a principal API and a COM interface. However, similar application may be made for OS environments different from Windows\u00ae, such as UNIX\u00ae or MAC OS\u00ae.","Hereinafter, the manner of use of a data distribution function provided by the data distribution server  according to this embodiment will be explained with reference to .  is a diagram illustrating the flow of a service performed among an orderer, a primary contractor, and a secondary contractor in the data processing system  explained with reference to . First, the orderer terminal , serving as a registrant terminal, transmits to the data distribution server  a package registration request in which a specific primary contractor is set as a distribution destination. The data distribution server  receives distribution destination information, contractor data, a contractor policy from the orderer terminal , and stores the received distribution destination information, contractor data, and contractor policy into an orderer database A. Accordingly, contractor data is registered so as to be distributed.","Meanwhile, the primary contractor terminal serving as a receiver terminal, transmits to the data distribution server  a package reception request for contractor data. The data distribution server  transmits, as response to the reception request, a primary contractor distribution package A including the contractor data, the contractor policy, and an execution module to the primary contractor terminal . Then, in the primary contractor terminal , the contractor data in the primary contractor distribution package A is loaded, and a local operation for the contractor data is performed under the control of an access control mechanism.","In the case where the primary contractor terminal places an order with a subcontractor for part of the contracted service, the primary contractor terminal serving as a registrant terminal transmits to the data distribution server  at least permitted part of the contractor data in a protected area (hereinafter, referred to as secondary contractor data) and an additional policy additionally applied to the data to be delivered from the primary contractor to the secondary contractor, and transmits a package registration request in which a distribution destination is set to a specific secondary contractor. In this case, a secondary contractor policy is configured in such a manner that a registrant specified policy for contractor data serving as the origin is inherited.","Data that can be re-ordered from a primary contractor to a secondary contractor can be described in a contractor policy that is specified by an orderer, which is the original source. For example, the contractor policy may include a description in which reading of a file that can be re-ordered is exceptionally permitted for an upload destination URL for re-ordering. As described above, in this embodiment, an orderer is able to set information flow control for contractors subsequent to the primary contractor.","The secondary contractor terminal , which undertakes part of a service of a primary contractor, serves as a receiver terminal The secondary contractor terminal transmits a package reception request for secondary contractor data to the data distribution server , acquires a secondary receiver distribution package B including secondary contractor data, a secondary contractor policy, and an execution module, and performs a local operation for the secondary contractor data.","Subsequently, when data after being operated needs to be returned to the ordering source, the secondary contractor terminal serving as the receiver terminal transmits to the data distribution server  a distribution package that is re-packaged after the operation is completed, and transmits a request to return the package to the primary contractor. The primary contractor terminal serving as a registrant terminal receives from the data distribution server  the distribution package returned from the secondary contractor. Similarly, the primary contractor terminal serving as a receiver terminal transmits to the data distribution server  a request to return the package to the orderer. The orderer terminal serving as a registrant terminal receives from the data distribution server  the distribution package returned from the primary contractor.","According to the first embodiment of the present invention described above, a registrant of distribution data imposes a specific security policy on the operation environment of a distribution destination, and the distribution data can be delivered to the distribution destination. The distribution data is stored under the local environment of the distribution destination. For distribution data existing under the local environment, access to a resource by a running process is controlled in accordance with a security policy using the access control mechanism described above, and the range where the distribution data can be circulated is restricted. Accordingly, for example, information leakage by unintentional data release after authenticated information provision to a business partner, that is, secondary leakage, can be prevented. Furthermore, after an operation in a local environment is completed, distribution data may be deleted from the local environment or may be returned after deletion.","Furthermore, since the data distribution server  detects the environment of a distribution destination and distributes a package including an appropriate access control execution module, the operation efficiency can be improved without causing a registrant to be bothered by a packaging method for the data. Furthermore, according to the embodiment described above, there is no need to compulsorily introduce and set complicated special control software to a distribution destination. Furthermore, since a method for implementing access control by injecting a library into a running process is employed, the above-described access control execution module can be applied to various data and various applications, in principle.","In the embodiment described above, furthermore, since a specific security policy can also be imposed on information flow control for that subsequent to a distribution destination, for example, the range of data that can be re-ordered can be restricted by an orderer, which is the original source. Thus, information leakage from a sub-subcontractor and a sub-sub-subcontractor can be prevented in an appropriate manner.","It is desirable that confidential information stored in a local terminal of a contractor be deleted or become unusable, in particular, after the contract period expires. Hereinafter, a second embodiment in which the term of validity is set for a distribution package and distribution data in the distribution package becomes unusable when the term of validity has expired will be explained. Since the data distribution server  according to the second embodiment has a configuration similar to that of the first embodiment, the explanation will be provided with an emphasis on points that are different from the first embodiment. Furthermore, functional units having functions similar to those in the first embodiment will be referred to with the same reference numerals.",{"@attributes":{"id":"p-0100","num":"0099"},"figref":["FIG. 11","FIG. 11"],"b":["100","20","110","120"]},"The registrant terminal A transmits to the data distribution server  a package registration request for distribution data. The package registration request includes the term of validity set for distribution data, as well as the distribution data, a registrant specified policy, and distribution destination information. The term of validity is input via a web browser, similarly to a security policy, and values of the individual input items are transmitted to the data distribution server , for example, together with the security policy. A GUI for setting the term of validity is, for example, provided as a web page in such a manner that the web browser of the registrant terminal A can interpret.","The package registration unit  receives the package registration request transmitted from the registrant terminal A, acquires the distribution data, the registrant specified policy, and the distribution destination information, and the term of validity regarding the request, and acquires a policy to be inherited in an appropriate manner. The package registration unit  according to this embodiment also acquires an encryption key used for encoding the distribution package. The encryption key is not particularly limited. However, the encryption key may be generated by the data distribution server  or may be transmitted together with the package registration request from the registrant terminal A. The package registration unit  sets the term of validity for the encryption key, stores the distribution destination information, the registrant specified policy , the distribution data , and a time-limited encryption key  into the registrant database , and registers the distribution data so as to be distributed.","The functional block  of the data distribution server  further includes the execution module database  and the package distribution unit . More specifically, the package distribution unit  according to this embodiment includes the package reception request reception part , the environment detection part , the applied policy determination part , the packaging processing part , the transmission processing part , and an encryption key distribution part .","The packaging processing part  encodes at least distribution data, and generates a packaged distribution data including the encoded distribution data, a receiver applied policy, and an access control execution module. The transmission processing part  transmits the generated distribution package  to the receiver terminal B, which is a reception requesting source for the distribution data. The encryption key distribution part  reads a corresponding time-limited encryption key from the registrant database , in response to a key acquisition request from the access control execution module  activated on the receiver terminal B, and provides the encryption key to the receiver terminal B if the term of validity has not expired. If the term of validity has expired, provision of the encryption key stops.","Hereinafter, processing by a client side that receives a distribution package according to the second embodiment will be explained.  is a diagram illustrating the detailed functional block of a distribution package distributed to a client apparatus according to the second embodiment of the present invention. Similarly to the first embodiment, the distribution package illustrated in  includes the access control execution module , the distribution data , and the receiver applied policy .","The execution module  according to the second embodiment includes program code for implementing the access control mechanism injection unit , the protected area generation unit , the data loading unit , the re-packaging unit , the protected area elimination unit , the access control mechanism , a key acquisition unit , and a loaded data deletion unit .","The key acquisition unit  is a functional unit that communicates with the data distribution server  to acquire a time-limited encryption key. The data loading unit  decodes the distribution data in the distribution package  using the acquired encryption key, and loads the decoded distribution data into the generated protected area. The loaded data deletion unit  regularly or irregularly deletes the data loaded in the protected area. In association with the deletion of the loaded data, the key acquisition unit  acquires a time-limited encryption key again from the data distribution server , and the data loading unit  decodes the data in the distribution package  again using the acquired encryption key and loads the data into the protected area. The key acquisition unit , the data loading unit , and the loaded data deletion unit  define an expiration processing unit of this embodiment.",{"@attributes":{"id":"p-0108","num":"0107"},"figref":["FIG. 13","FIG. 13"],"b":["400","160","166","30"]},"In step S, the execution module  loads a DLL implementing the access control mechanism  into a temporary folder. In step S, the execution module  lists processes running on the client apparatus , and injects the DLL of the access control mechanism  for all the processes. In step S, the execution module  generates a protected area. In step S, the execution module  communicates with the data distribution server , and tries to acquire a time-limited encryption key.","In step S, the execution module  determines whether or not acquisition of the key has succeeded. When it is determined in step S that acquisition of the key has failed (NO), the process branches off to step S, and the process is terminated. Meanwhile, when it is determined in step S that acquisition of the key has succeeded (YES), the process braches off to step S.","In step S, the execution module  loads the distribution data  in the distribution package  into the protected area, and activates an application. In step S, the execution module  determines, for example, whether or not a certain period of time has passed. When it is determined in step S that the certain period of time has not passed (NO), the process proceeds to step S, and a loop to step S is repeated until termination conditions are satisfied (during the period in which the determination in step S is NO). Meanwhile, when it is determined in step S that the certain period of time has passed (YES), the process proceeds to step S. In step S, the execution module  once deletes the data in the protected area, and the process enters a loop to step S.","Meanwhile, when it is determined in step S that the termination conditions are satisfied (YES), the process proceeds to step S, in which the execution module  re-packages the data in the protected area. In step S, the execution module  eliminates the protected area. In step S, the process is terminated.","By the loop from steps S to S described above, deletion of data within the protected area, re-acquisition of the key, and re-loading are regularly repeated, and the key cannot be acquired after the term of validity of the key has expired. Thus, after the term of validity has expired, the data in the distribution package cannot be used. In the second embodiment described above, the description has been provided in which the loaded data is deleted. However, in the case of distribution data that can be overwritten, a configuration may be provided in which a difference between the current local data within the protected area and distribution data at the time when the distribution package is being distributed is saved in a different storage area, instead of deletion of the data.","In the second embodiment described above, restriction can be made in such a manner that distribution data can not be used. Thus, for example, after the term of a contract has expired, confidential data stored in a local terminal of a contractor can be made unusable. Therefore, unauthorized use or leakage after the term of the contract has expired can be avoided.","As described above, according to the embodiments described above, data distribution is performed in the form of a distribution package including an access control mechanism executing access control for distribution data. Thus, a data distribution apparatus and a data distribution system that are capable of controlling information flow of data, and in addition, that are capable of avoiding information leakage from a distribution destination without imposing restriction on the use environment of the distribution destination and without placing excessive workload on the distribution destination can be provided. Furthermore, according to the embodiments described above, a client apparatus that receives a distribution package from the data distribution apparatus or the data distribution system, a data distribution method that is performed by the data distribution apparatus, a data reception method that is performed by the client apparatus, a program for implementing the data distribution apparatus, and a recording medium that stores the program can be provided.","In the embodiments described above, examples of the data distribution server  configured as a single computer have been explained. However, in a different embodiment, a configuration may be adopted in which the data distribution function is implemented as a cloud service on a computer system including a plurality of computers.","Furthermore, in the embodiments described above, the description has been provided in which registered distribution data is distributed as a distribution package in response to a reception request from the receiver terminal B. However, since it is assumed that subcontractors in manufacturing industries are in the environment in which connection to the Internet is not possible, it may be desirable that a method for providing a distribution package via a physical recording medium should be ensured. Thus, in a different embodiment, a registrant can acquire a packaged distribution package from the data distribution server , and the acquired distribution package can be written to a recording medium such as a CD-R, a USB flash, or an SD card. In this case, by sending such a recording medium by post or the like, a distribution package to which a security policy is applied can be provided to a desired destination. In this case, an encryption key may be transmitted by post, orally, or other means.","Furthermore, in the embodiments described above, the examples of a data processing system that performs data distribution have been explained. However, implementation as a collaboration system having various functions such as schedule management, project management, task management, workflow management, and the like may be done. Furthermore, in a different embodiment, implementation as a content management system that securely distributes an electronic document etc. may be done.","The above-mentioned functions of the present invention can be implemented by an apparatus-executable program described in a legacy programming language, an object-oriented programing language, or the like, such as assembler, C, C++, Java\u00ae, JavaBeans\u00ae, Java\u00ae Applet, JavaScript\u00ae, Perl, or Ruby, and can be stored in a recording medium, such as a a ROM, an EEPROM, an EPROM, a flash memory, a flexible disk, a CD-ROM, a CD-RW, a DVD-ROM, a DVD-RAM, a DVD-RW, a Blu-ray disc, an SD card, or an MO, which can be read by an apparatus, and distributed or can be transmitted and distributed.","The present invention has been explained by way of examples of specific embodiments and examples. However, the present invention is not limited to the specific embodiments or examples. Other embodiments and changes, such as addition, alteration, or deletion, can be made to the present invention within the scope conceivable by those skilled in the art, and any forms are included in the scope of the present invention as long as an operation and advantage of the present invention can be achieved.",{"@attributes":{"id":"p-0121","num":"0120"},"b":["10","12","20","30","100","110","112","114","116","120","122","124","126","130","132","138","140","142","144","146","148","150","152","160","162","164","166","170","172","174","176","178","180","182","190","192","194","196","200","202","204","210","220","222","230"]}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF DRAWINGS","p":[{"@attributes":{"id":"p-0021","num":"0020"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0022","num":"0021"},"figref":"FIG. 2"},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 4"},{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 5"},{"@attributes":{"id":"p-0026","num":"0025"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0027","num":"0026"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 10","FIG. 1"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0032","num":"0031"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 13"}]},"DETDESC":[{},{}]}
