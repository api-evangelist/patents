---
title: Data storage device and method for storing information using alternate information storage architectures
abstract: A computer code product comprising a data management system which supports the capability to record information on a data storage medium using alternative information storage architectures.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=06868487&OS=06868487&RS=06868487
owner: International Business Machines Corporation
number: 06868487
owner_city: Armonk
owner_country: US
publication_date: 20011001
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["FIELD OF THE INVENTION","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENTS"],"p":["Applicants' invention relates to a data storage device to record information in alternative information storage architectures on a data storage medium.","An explosion of computer data and information requires an ever increasing amount of computer readable storage space. Increasing data storage capacity requires improved storage management systems to backup and protect data sets, and migrate less active data sets to secondary storage to increase primary storage space. A data set consists of any collection or grouping of data. In certain systems, a data set may include control information used by the system to manage the data. The terms data set and file are generally equivalent and sometimes are used interchangeably. Hierarchical storage management (HSM) programs manage storage devices, such as tape libraries, to control the flow of data between primary and secondary storage facilities.","In a hierarchical storage management system, data is stored in different types of storage devices depending upon the frequency of usage of the data. For instance, a system may include multiple storage media types to store data having different usage patterns and likelihoods of access. More frequently used data may be stored on direct access storage devices (DASD) comprising high-performance rapid access storage devices, such as hard disk drives. Such readily accessible data is sometimes referred to as level zero volumes. Less frequently used data may be archived on slower and less expensive, demountable storage media, such as optical disks, magnetic tape cartridges, etc. Such archive volumes are often referred to as level two storage.","Two common functions initiated by host systems in hierarchical storage management systems include migration and recall. Migration involves the movement of data from level 0 to level 1 or to level 2 storage to make more room for more frequently accessed data on the primary level 0 storage devices. If a host system attempts to access a data set that has been migrated to level 1 or level 2 storage, then the recall function would be initiated to move the requested data sets to level 0.","International Business Machines Corporation (IBM\u00ae) provides the Data Facilities Storage Management Subsystem (DFSMS\u00ae) software which is included in the IBM MVS\/ESA\u2122, OS\/390\u00ae, and z\/OS\u00ae operating systems. This software allows host systems to perform hierarchical storage management operations, such as migration and recall. DFSMS and OS\/390 are registered trademarks of IBM, and MVS\/ESA is a trademark of IBM. The operation and implementation of the DFSMS system are described in IBM publications \u201cDFSMS\/MVS VIR3 General Information,\u201d IBM document no. GC26-490004 (IBM Copyright, 1980, 1995) and \u201cDFSMS\/MVS VIR3 DFSMShsm Storage Administration Guide,\u201d IBM document no. SH21-1076-02 (IBM Copyright 1984, 1995), which publications are incorporated herein by reference in their entirety.","Certain prior art HSM programs, tape operating systems, and data storage devices utilize a 22-bit block id format. Using a block size of 16 kilobytes, such a 22-bit block-id format can accommodate a maximum number of about 4,000,000 blocks. When this maximum number of blocks is encountered, the data storage subsystem returns a logical end-of-tape indication, and the volume, i.e. the tape, is regarded by the host computer as \u201cfilled\u201d regardless of the actual physical space still available. On the other hand, use of a 32 bit file block addressability mode allows storage of more than 4,000,000,000 blocks per volume, such as a magnetic tape.","What is needed is a data storage device and method that support the capability to switch between alternative block-id architectures, for example between a 22 bit block-id format and a 32 bit block-id format, and vice versa Applicants' invention includes such a data storage device and a such a method.","Applicant's invention includes a data storage device comprising a fixed device architecture, where that data storage device is capable of operating in a first capacity mode or in a second capacity mode, and where that data storage device is capable of switching between the first capacity mode and the second capacity mode. In certain embodiments, the first capacity mode utilizes a 22 bit block-id format and the second capacity mode utilizes a 32 bit block-id format. In other embodiments, the first capacity mode utilizes a 32 bit block-id format and the second capacity mode utilizes a 22 bit block-id format.","Applicants' invention further includes a method wherein Applicants' data storage device receives a request from a host computer to record designated information on a designated data storage media using a specified capacity mode. In response to that request, Applicants' method switches the data storage device from its default capacity mode to the specified capacity mode, and then records the designated information on the designated data storage medium using that specified capacity mode.","Applicants' invention further includes a computer code product comprising a data management system which supports the capability to switch between alternative information storage architectures, and thereby, increase the capacity utilization of data storage media. Applicants' invention further includes a data storage and retrieval system which includes one or more of Applicants' data storage devices.","Referring to the illustrations, like numerals correspond to like parts depicted in the figures. The invention will be described as embodied in an automated data storage and retrieval subsystem for use in a data processing environment. The following description of Applicant's method to record information to a movable tape medium, or to a movable tape medium disposed within a portable data storage cartridge is not meant, however, to limit Applicant's invention to either data storage and retrieval systems, or to magnetic tape applications, as the invention herein can be applied to data storage media in general.",{"@attributes":{"id":"P-00025","num":"00025"},"figref":"FIG. 3","b":["390","310","390","320","350","350"]},"In the embodiment shown in , tape subsystem  includes tape drives  and . In other embodiments of Applicants' data storage and retrieval system, tape subsystem  includes a single data storage drive. In alternative embodiments, Applicants' data storage and retrieval system  includes more than two data storage drives.","A plurality of portable data storage media  are stored within Applicants' data storage and retrieval system. In certain embodiments, plurality of data storage media  are each housed in a portable data storage cartridge , such as plurality of portable tape cartridges  (not shown in FIG. ). Each of such portable data storage cartridges may be inserted in one of tape drives, and thereafter accessed by the tape subsystem . In alternative embodiments, alternative storage media may be substituted for the tape cartridges . Any type of non-volatile storage media could be used, including optical disks, holographic units, digital video disc (DVD), compact disc-read only memory (CD-ROM), non-volatile random access memory (RAM), etc.","The tape subsystem  further includes program logic to manage tape drives  and , and plurality of tape cartridges . In alternative embodiments, tape subsystem  and host system  may be located on a single computer machine.","Host system  comprises a computer system, such as a mainframe, personal computer, workstation, etc., including an operating system such as Windows, AIX, Unix, MVS, etc. (Windows is a registered trademark of Microsoft Corporation; AIX is a registered trademark and MVS is a trademark of IBM Corporation; and UNIX is a registered trademark in the United States and other countries licensed exclusively through The Open Group.) The HSM program  in the host system  may include the functionality of HSM type programs known in the art that manage the transfer of data to a tape library, such as the IBM DFSMS implemented in the IBM MVS operating system.","The IBM DFSMS software is described in \u201cDFSMS\/MVS VIR4 General Information,\u201d IBM document no. GC26-4900-05, published by IBM (Copyright 1997, IBM), which publication is incorporated herein by reference in its entirety. In addition to including known HSM functions, such as recall and migration, the HSM program  would further include additional program instructions to perform the operations of the preferred embodiments of the present invention. The HSM program  may be implemented within the operating system of the host system  or as a separate, installed application program.","The tape subsystem  comprises a computer system, and manages a plurality of tape drives and tape cartridges. The tape drives  and  may be any suitable tape drives known in the art, e.g., the Magstar  tape drives. Tape cartridges  may be any suitable tape cartridge device known in the art, (Magstar is a registered trademark of IBM Corporation) such as ECCST, Magstar, IBM , , E,  tape cartridges, etc. The tape subsystem  may be a manual tape library in which the user must manually mount tape cartridges  into the tape drives \/, or an automated tape library (ATL) in which a robotic arm mounts tape cartridges  in the library into the tape drives \/.","For example referring now to , automated data storage and retrieval system  is shown having a first wall of storage slots  and a second wall of storage slots . Portable data storage cartridges, such as tape cartridges , are individually stored in these storage slots.","Data storage and retrieval system  includes one or more accessors, such as accessors  and . An accessor is a robotic device which accesses portable data storage media from first storage wall  or second storage wall , delivers that accessed media to data storage devices \/ for reading and\/or writing data thereon, and returns the media to the proper storage slot. Referring now to , data storage device  includes device controller . Controller  includes microprocessor  in communication with non-volatile memory . In certain embodiments, microprocessor  communicates with non-volatile memory  via communication link . In other embodiments, non-volatile memory  is integral to microprocessor . Device microcode  is stored in non-volatile memory . Device microcode comprises a computer program product which controls the operation of a data storage device, such as data storage device  (FIG. A)\/ (FIG. A)\/ (FIG. ).","Library controller  controls the operation of data storage and retrieval system . In certain embodiments, controller  is integral to host computer . In alternative embodiments, controller  is external to host . In those external controller embodiments, library controller  communicates with host computer  via communication link . Referring now to , library controller  includes microprocessor , volatile memory , and non-volatile memory . In certain embodiments, microprocessor communicates with volatile memory  via communication link . In other embodiments, volatile memory  is integral to microprocessor . Microprocessor  communicates with non-volatile memory  via communication link . Operating system  is stored in non-volatile memory . Operating system  comprises a computer program product which controls the operation of data storage and retrieval systems  (FIG. A)\/ (FIG. ), and tape subsystem  (FIG. ).","Operator input station  permits a user to communicate with Applicant's automated data storage and retrieval system . Devices  and  each comprise a Direct Access Storage Device (\u201cDASD\u201d) cache. In certain embodiments DASD cache  and  comprise a plurality of hard disk drives which are configured into one or more RAID arrays. In certain embodiments, information transferred between host computer  and data storage and retrieval system  is buffered in DASD caches  and . Import\/export station  includes access door  pivotably attached to the side of system . Portable data storage cartridges can be placed in the system, or in the alternative, removed from the system, via station \/access door .",{"@attributes":{"id":"P-00036","num":"00036"},"figref":"FIG. 2","b":["200","200","202","204","202","204","200","230","230","200","250","3"]},"System  further includes library controller . Library controller  controls the operation of assessor  and data storage device . System  further includes one or a plurality of portable data storage cartridges, such as tape cartridges  (FIG. ). Each cartridge contains a data storage media internally disposed therein, such as data storage media  (FIG. ).","Referring again to , tape subsystem , such as data storage and retrieval system \/, receives commands from the HSM program  in the host system  and performs the operations requested by the HSM program , such as migration and recall, to transfer data between the host system  and the components managed by the tape subsystem . In preferred embodiments, the tape subsystem  can simultaneously process numerous input\/output requests from the host system  and any other attached system directed toward the tape drives \/ and tape cartridges  managed by the tape subsystem . Moreover, in certain embodiments HSM program  in the host system  is capable of multi-tasking, simultaneously executing numerous input\/output operations, and simultaneously transmitting multiple I\/O requests to the tape subsystem  to execute.","In further embodiments, a plurality of host systems  may communicate with the tape subsystem  and\/or a host system  may communicate and transfer data to a plurality of tape subsystems , each subsystem providing access to a library of tape cartridges.",{"@attributes":{"id":"P-00040","num":"00040"},"figref":"FIG. 4","b":["410","130","1","140","1","230","2"]},"In certain embodiments, operating system  () includes a SETSYS TAPEUTILIZATION command, a SETSYS USERUNITTABLE command, and a USERUNITABLE. In these embodiments, the user's selected configurations for data storage devices disposed within the data storage and retrieval system are stored in the USERUNITTABLE using the SETSYS USERUNITTABLE command.","Configuring a device using the SETSYS TAPEUTILIZATION command includes specifying a CAPACITYMODE attribute for that device. This CAPACITYMODE attribute comprises part of the operating system . In certain embodiments, the CAPACITYMODE attribute has two extensions, namely COMPATIBILITY and EXTENDED.","When the user configures a device, such data storage device \/\/ using the CAPACITYMODE(EXTENDED) attribute, then that device is enabled to utilize the 32 bit block-id architecture, thereby allowing complete utilization of the physical space available on a data storage tape medium mounted therein. Information recorded on tapes using the 32 bit block-id architecture is generally only accessible to CAPACITY MODE(EXTENDED) data storage devices.","On the other hand, if the user configures a data storage device using the CAPACITYMODE(COMPATIBILITY) attribute, then that device will record information on data storage media using the 22 bit block-id architecture. Information recorded on tapes using the 22 bit block id architecture is generally accessible to both CAPACITYMODE switchable devices and devices not having CAPACITYMODE switching support.","In step , the operating system at the data storage device vary-on time, ascertains the information storage architecture capabilities of that device. By information architecture, Applicants' mean the block-id format capabilities of the data storage device. In certain embodiments, the operating system queries the device using a READ DEVICE CHARACTERISTICS (\u201cRDC\u201d) command. In these embodiments, Applicants' operating system, such as operating system  (FIG. C), includes such an RDC command.","In certain embodiments, Applicants' operating system includes a READ MEDIUM CHARACTERISTICS (\u201cRMC\u201d) command. Such a RMC command queries a data storage device to determine that device's Block Pointer Format. The data storage device's microcode includes two bits which comprise that device's Addressing Flags. If the first addressing flag bit is set, then the device is capable of using a 22 bit block-id format. If the second addressing flag bit is set, then the device is capable of using a 32 bit block-id format. If both the first addressing flag bit and the second addressing flag bit are set, then that device is capable of switching between a 22 bit block-id format and a 32 bit block-id format. At the device vary on time, the device is automatically configured to utilize the information storage architecture reported by the RMC command.","In step , the operating system, using information obtained from the RDC\/RMC command(s), ascertains if the data storage device includes CAPACITYMODE switching support. Thereafter, in step  the operating system sets a capability indicator in the data storage device's Unit Control Block extension (\u201cUCB extension\u201d) to show that 32 bit capability is available for that device.","In certain embodiments, operating system  includes a UCBCX_BLKPTR_SWITCH attribute. In these embodiments, the library controller, such as controller  (, ), indicates that CAPACITYMODE switching capability is available by setting the device's UCBCX_BLKPTR_SWITCH attribute to \u201cON.\u201d In the event in step  the library controller determines by interrogating a data storage device using the RDC\/RMC command that that device is only capable of using 32 bit block pointers, then in step  the controller sets a capability indicator in the data storage device's UCB to show only 32 bit capability is available for that device. In certain embodiments, operating system  includes a UCBCX32BIT_BLKPTR attribute. In these embodiments, in step  the controller sets the device's UCBCX32BIT_BLKPTR attribute to \u201cON\u201d to indicate that the data storage device can only use a 32 bit block-id format.",{"@attributes":{"id":"P-00049","num":"00049"},"figref":"FIG. 5","b":["390","3","510"]},"If the application determines in step  that the allocated device is 32 bit block-id format capable, and if the user has requested use of the 32 bit block-id format, then in step  the application requests use of the 32 bit block-id format when writing certain designated information to a designated data storage medium. In certain embodiments of Applicant's method and computer code product, the application, such as HSM , includes a CAPACITYMODE=XCAP command. In these embodiments, the request of step  to use a 32 bit block-id format comprises issuing a CAPACITYMODE=XCAP command.","Applications running on host computer  include an application programming interface (\u201cAPr\u201d) which describes the attributes of the data set, i.e. the file, to be recorded on the designated data storage medium. In certain embodiments of Applicants' method, this API comprises a Dataset Control Block (\u201cDCB\u201d). Such a DCB further comprises a Dataset Control Block Extension (\u201cDCBE\u201d) which includes parameters which can be manipulated independently of the application itself Moreover, such a DCBE is dynamically changeable by the application at the dataset level. In certain embodiments, Applicants' DCBE includes a DCBE_REQST_XCAP attribute. In these embodiments, issuing a CAPACITYMODE=XCAP command by the host computer application causes the DCBE_REQST_XCAP attribute to be set to \u201cON.\u201d","In the event the operating system ascertains that the host computer application is requesting use of the 32 bit block-id format, then in step  the operating system checks the allocated device's UCB to verify that the allocated data storage device, such as data storage device  (FIG. )\/ (FIG. )\/ (FIG. ), is 32 bit block-id format capable. In the event the operating system verifies such 32 bit capability, then Applicants' method transitions to step .","In certain embodiments, Applicants' operating system includes a buffered log comprising information about the various data storage media moveably disposed in Applicants' data storage and retrieval system. In these embodiments, in step  the operating system reads that buffered log to determine certain attributes of the data storage medium designated by the host computer. In the event a first bit is set in the buffered log for the designated data storage medium, then the operating system determines that the Logical End Of Volume (\u201cLEOV\u201d), but not the Physical End Of Volume (\u201cPEOV\u201d), has been reached when using a 22 bit block-id format. In such an event, the operating system determines that a data storage device using a 22 bit block-id format can read, but not write, to that designated medium.","In the event a second bit is set in that buffered log, then the operating system determines that for purposes of using a 22 bit block-id format, the PEOV has been reached. In such an event, the operating system determines that designated the medium cannot be fully read in a 22-bit addressing mode. If a third bit is set in the buffered log, then the operating system determines that the medium has been formatted with more than one partition at the time the log was generated.","In step , the designated data storage medium is mounted in the allocated data storage device. In step , the operating system issues a MEDIUM SENSE command which causes the data storage device to read certain MEDIUM FLAGS stored in the designated medium to determine the Block Pointer Format, i.e. the block-id format, previously used to write information to the designated medium. In certain embodiments, these MEDIUM FLAGS are written in the Volume Control Region (\u201cVCR\u201d) of the medium. In certain embodiments, these MEDIUM FLAGS are written in a memory device disposed in the cassette housing the designated medium. Such portable data storage cartridges are sometimes referred to as Memory In Cassette (\u201cMIC\u201d) data storage cartridges. In certain embodiments, if MEDIUM SENSE determines that the data storage device must use a 32 bit block-id format to access all the information on the designated medium, then the operating system automatically invokes a 32 bit block-id format.","In step , the data storage device determines the VOLUME MAXIMUM LOGICAL BLOCK COUNT. This VOLUME MAXIMUM LOGICAL BLOCK COUNT represents the logical block number associated with the position just prior to the first end-of-data mark disposed on the designated data storage medium. This VOLUME MAXIMUM LOGICAL BLOCK COUNT is used by the operating system to determine the readability of that medium by a host attaching a 22 bit block-id format data storage device. After determining the VOLUME MAXIMUM LOGICAL BLOCK COUNT, Applicants' method transitions to step .","In step , the operating system issues a command to switch the allocated data storage device to the 32 bit block-id format. In certain embodiments, operating system  () includes a MODE SET(X) command. In these embodiments, operating system  issues such a MODE SET(X) command to place the data storage device in the 32 bit block-id format. In step , the operating system verifies that the allocated device was successfully switched to the extended capacity mode, i.e. to the 32 bit block-id format. In the event the operating system determines in step  that the allocated drive was not successfully placed in the extended capacity mode, then the operating system issues an error message in step .","In the event the operating system determines in step  that the allocated data storage device was successfully placed in the extended capacity mode, then in step  the operating system sets a status indicator in the device's UCB extension showing that the 32 bit block-id format is now active in that device. In certain embodiments, operating system  () includes a UCBCX32BIT_INUSE attribute. In these embodiments, the UCBCX32BIT_NUSE attribute to is set to \u201cON\u201d in step .","In step , host computer  verifies operation of the allocated data storage device in the extended capacity mode by checking the allocated data storage device's UCB to determine if the UCBCX32BIT_INUSE attribute is set to \u201cON.\u201d If host computer  determines that the allocated device is operating in the 32 bit block-id format, then in step  host  sets a status indicator in the host computer application's API showing that the allocated data storage device is operating in the extended capacity mode. In certain embodiments, that API includes a DCBE32BIT-INUSE attribute. In these embodiments, in step  the DCBE32BIT-INUSE attribute associated with the allocated storage device is set to \u201cON\u201d indicating that the allocated device is operating in the extended capacity mode.","In the event subsequent volumes, such as one or more of data storage media , , , etc., are mounted for a multi-volume data set, host computer  in step  ensures that the 32 bit block-id format is maintained when writing information to those subsequent volumes. In certain embodiments, Applicants' operating system includes Device Control Pages for each available data storage device. In certain embodiments, such Device Control Pages include an APPLY MODE DEFAULTS attribute. If the APPLY MODE DEFAULTS attribute for the allocated data storage device is set to \u201cOFF,\u201d then the Block Pointer Format, i.e. the selected block-id format, is maintained for subsequent volumes. On the other hand, if the APPLY MODE DEFAULTS attribute is set to \u201cON,\u201d then the block-id format for a new volume is reset to the default setting reported by the RMC command. To ensure that a 32 bit block-id format mode is maintained for subsequent volumes, the host computer sets the APPLY MODE DEFAULTS attribute to \u201cOFF\u201d for the allocated data storage device.","During data set closing operations, the operating system in step  resets the data storage device's UCB extension to the default 22 bit setting. In addition, during data set closing the data storage device updates the VOLUME MAXIMUM LOGICAL BLOCK COUNT attribute in the designated data storage medium's VCR and\/or MIC. In addition, the buffered log for the designated data storage medium is updated.","Applicants' invention includes a data storage device comprising a computer useable medium having computer readable program code disposed therein for implementing Applicants' method to record information in alternative information storage architectures. Applicants' invention further comprises a data storage and retrieval system which includes one or more of Applicants' data storage devices.","Applicants' invention further includes a data management system comprising computer program products embodied as program code stored in one or more memory devices, such as a magnetic disk, a magnetic tape, or other non-volatile memory device disposed in Applicants' data storage device. The programming of the present invention may comprise a computer program product embodied as program code stored in a storage device, such as a magnetic disk drive or memory, etc., in a computer, or may comprise an article of manufacture, such as a CD ROM, magnetic tape, etc.","While the preferred embodiments of the present invention have been illustrated in detail, it should be apparent that modifications and adaptations to those embodiments may occur to one skilled in the art without departing from the scope of the present invention as set forth in the following claims."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":["The invention will be better understood from a reading of the following detailed description taken in conjunction with the drawings in which like reference designators are used to designate like elements, and in which:",{"@attributes":{"id":"P-00015","num":"00015"},"figref":"FIG. 1A"},{"@attributes":{"id":"P-00016","num":"00016"},"figref":"FIG. 1B"},{"@attributes":{"id":"P-00017","num":"00017"},"figref":"FIG. 1C"},{"@attributes":{"id":"P-00018","num":"00018"},"figref":"FIG. 2"},{"@attributes":{"id":"P-00019","num":"00019"},"figref":"FIG. 3"},{"@attributes":{"id":"P-00020","num":"00020"},"figref":"FIG. 4"},{"@attributes":{"id":"P-00021","num":"00021"},"figref":"FIG. 5"},{"@attributes":{"id":"P-00022","num":"00022"},"figref":"FIG. 6"},{"@attributes":{"id":"P-00023","num":"00023"},"figref":"FIG. 7"}]},"DETDESC":[{},{}]}
