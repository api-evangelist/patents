---
title: Method and system for synchronizing and selectively addressing multiple receivers in a wireless, spread spectrum communication system
abstract: A system and method for synchronizing and selectively addressing multiple receivers in a wireless communication system includes a spread spectrum transmitter and one or more spread spectrum receivers. The transmitter transmits a signal having an observable parameter which is pseudo-randomly varied. The receiver measures the relative times between recurrences of a selected value of the observable parameter being pseudo-randomly varied, and determines an initial state of the transmitter based upon the measured relative times. The receiver then synchronizes itself to the estimated current state of the transmitter using the determined initial state as a starting reference. In a frequency hopping embodiment, the spread spectrum transmitter comprises a feedback shift register, and transmits a sequence of pseudo-randomly hopped frequencies determined by the shift register. A receiver is tuned to one of the hopping frequencies, measures the relative times of arrival between consecutive transmissions, and determines the initial code word in the transmitter feedback shift register from the measured relative times of arrival by constructing and solving a set of linear equations. The receiver then matches comprises its feedback shift register to the initial code word, adjusted by an amount of time elapsed during the synchronization process. Similar techniques may also be applied both to direct sequence spread spectrum communication systems.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07386026&OS=07386026&RS=07386026
owner: Robert Gold Communication Systems, Inc.
number: 07386026
owner_city: Los Angeles
owner_country: US
publication_date: 20010409
---

{"@attributes":{"id":"description"},"GOVINT":[{},{}],"heading":["GOVERNMENT INTERESTS","BACKGROUND OF THE INVENTION","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION OF THE PREFERRED EMBODIMENT"],"p":["Pursuant to 35 U.S.C. \u00a7 202, the United States Government has a paid-up license in this invention and the right in limited circumstances to require the patent owner to license others on reasonable terms as provided for by the terms of contract nos. F33615-01-C-1800 and F33615-00-C-1645 awarded by the United States Air Force Research Laboratory.","1) Field of the Invention","The field of the present invention relates to wireless communication systems and, more particularly, to techniques for synchronizing and selectively addressing multiple receivers in a wireless, spread-spectrum communication system.","2) Background","Spread spectrum communication, a technique for transmitting and receiving signal over a bandwidth wider than the data to be transmitted, has in recent years become widely for both military and commercial applications. Its advantages include, for example, resistance to interference, low power density (and hence minimal creation of interference) over the transmission frequency band, and security of communications.","The two most common spread spectrum communication techniques are generally referred to as direct sequence spread spectrum (DSSS) communication and frequency hopping spread spectrum (FHSS) communication.","Direct sequence spread spectrum communication involves direct sequence modulation of a carrier signal, which is a known technique for generating wide-band, low power density signals which have statistical properties similar to random noise. In a direct sequence spread spectrum communication system, the data to be transmitted is generally encoded in some fashion, in a manner which causes the signal to be \u201cspread\u201d over a broader frequency range and also typically causes the signal power density to decrease as the frequency bandwidth is spread. In a common method of direct-sequence spread spectrum modulation, a pseudo-random chip sequence (also called a pseudo-noise code sequence or a PN code sequence) is used to encode data which is then placed on a carrier waveform. The chipping rate of the pseudo-random sequence is usually much higher than the data rate. The resulting encoded signal is generally spread across a bandwidth exceeding the bandwidth necessary to transmit the data, hence the term \u201cspread spectrum\u201d.","At the receiver, the signal is decoded, which causes it to be \u201cdespread\u201d and allows the original data to be recovered. The receiver produces a correlated signal in response to the received spread spectrum signal when it is able to match the chip sequence to a sufficient degree. To do so, the receiver generates the same pseudo-random chip sequence locally, synchronizes its chip sequence to the received chip sequence, and tracks the signal by maintaining synchronization during transmission and reception of data.","Frequency hopping spread spectrum communication also involves a pseudo-random (i.e., spreading) code, but the code is used to select a series of frequencies rather than as information for directly modulating a carrier, as is generally done in direct sequence spread spectrum communication. In a very broad aspect, frequency hopping spread spectrum communication may be viewed as a type of frequency shift keying, but with many more frequency choices which are selected by use of the spreading code. In what is known as \u201cfast\u201d frequency hopping, a number of frequency changes or \u201chops\u201d are carried out during the time period of sending one or more data symbols\u2014e.g., a set of data bits\u2014wherein the number of frequency changes or hops is greater than the number of data symbols to be transmitted. In \u201cslow\u201d frequency hopping, on the other hand, one or more data symbols is transmitted during each hopping interval.","In one type of frequency hopping spread spectrum communication, the frequency hopping transmitter includes a code generator and a rapid-response frequency synthesizer capable of responding to the coded output from the code generator. During each frequency hopping interval, a set of selected code bits are used to determine which frequency will be transmitted. Data may be transmitted in any way available to other communication systems, and in either analog or digital form. For example, a number of discrete data bits may be transmitted during each frequency hopping interval. Alternatively, a single data bit may be transmitted over a large number of frequency hopping intervals.","A frequency hopping receiver, like the transmitter, also typically includes a code generator and rapid-response frequency synthesizer. The received frequency hopping signal is then mixed with a locally generated replica of the transmitted signal (which may be offset by a fixed intermediate frequency) such that modulation of the received signal and the locally generated replica produces a constant difference frequency when the transmitter and receiver are in synchronism. Once the spread spectrum modulation is removed, the de-hopped signal is then processed to demodulate the transmitted information.","Both direct sequence and frequency hopping spread spectrum communication techniques may be used in the formation of a multiple access communication system. Distinct spreading codes can be used to distinguish transmissions, thereby allowing multiple simultaneous communication. Different users within a wireless communication system may, using distinct spreading codes, thereby transmit simultaneously over the same frequency without necessarily interfering with one another, particularly if the codes in use are selected to be orthogonal with respect to one another. A multiple-access communication system in which transmissions are distinguished according to the code used to encode the transmission is sometimes referred to as a code division multiple access (CDMA) communication system, which may be either a direct sequence or a frequency hopping spread spectrum system.","In either a frequency hopping or direct sequence spread spectrum communication system, the requirement of synchronization by the receiver has generally been a problem in the art. This requirement generally increases the difficulty of initially acquiring a spread spectrum signal, especially in a noisy environment, and also can cause difficulty in tracking and\/or maintaining spread spectrum communication after established. Synchronization and tracking requirements often translate into additional circuit complexity at the receiver and increased cost, and may impose operational constraints on the communication system. For example, the extra time required to achieve synchronization can degrade the efficiency of the communication system, and may be detrimental in systems requiring very rapid establishment of a communication link.","In a frequency hopping system, in the absence of synchronization, the receiver must monitor all possible frequencies due to the otherwise unpredictable nature of the frequency hopped signal, which forces the receiver to employ a large number of synthesizers or even an array of distinct receivers. For example, the receiver may need to sample all of the possible frequency inputs at once, and then to select the channel with the largest signal in a given frequency hopping interval as the correct one. In order to monitor each possible frequency, the received signal is envelope detected and then band-pass filtered at each of the possible frequencies, with the largest of the filtered signals during a frequency hopping interval being deemed the transmitted frequency at that instant. This type of receiver design, however, has the drawback of requiring a potentially large number of band pass filters, one filter for each possible frequency.","If proper synchronization is achieved, on the other hand, it is possible to use a single (typically relatively high speed) frequency synthesizer to demodulate the incoming frequency hopped signal.","One technique for attempting to acquire synchronization of a frequency hopped signal is disclosed in U.S. Pat. No. 6,148,020. According to the technique disclosed therein, a frequency hopping receiver repeatedly mixes a partial code string which is part of the spreading code sequence for frequency hopping with the received signal. The receiver then attempts to synchronize by judging the detection level of a predetermined frequency. When the partial code string to be mixed coincides with part of the original code sequence, the detection level is presumed to become sufficiently large such that the receiver is judged to be in synchronization with the transmitter.","An alternative to the above-referenced technique is to use a preamble to attempt to synchronize a frequency hopping receiver. Such a technique is disclosed, for example, in U.S. Pat. No. 6,084,905. As described therein, a frequency hopping transmitter transmits a continuous wave in a first field of a preamble field of a communication frame, then transmits a carrier which is modulated with a symbol timing signal in a second field in the preamble field, followed by transmission information. A timing recovery circuit in the receiver uses the preamble to help establish synchronization. In the particular system described in the foregoing patent, a synchronous frame is broadcast as a reference for each frequency hopping equipment in the communication system.","Besides difficulties in achieving synchronization in spread spectrum systems, it can also be challenging, particularly in multiple access communication systems, for a receiver to be aware of when a transmitter is attempting to transmit information to it. This can be particularly difficult in military and other applications in which secrecy is paramount.","In various situations it can be advantageous for a transmitter to be able to selectively transmit a broadcast transmission to only one or a few receivers from many possible receivers, and to exclude from reception those receivers to which the communication is not directed. However, few, if any, techniques exist for such selective broadcast. No known technique exists for selectively broadcasting a transmission only to one or a specified group of receivers from many possible receivers, without at least requiring participation of the receivers in the excluded group.","It would therefore be advantageous to provide a communication technique that provides improved synchronization and the capability of selectively addressing receivers, and which overcomes the drawbacks, disadvantages or limitations of conventional techniques.","The invention in one aspect provides a system and method for synchronizing and selectively addressing multiple receivers in a wireless communication system.","In one aspect, a method or system for synchronizing communication includes the steps of transmitting, from a transmitter, a signal having an observable parameter which is pseudo-randomly varied, and receiving the signal at a receiver. The receiver measures the relative times between recurrences of a selected value of the observable parameter being pseudo-randomly varied, and determines an initial state of the transmitter based upon the measured relative times. The receiver then synchronizes itself to the estimated current state of the transmitter using the determined initial state as a starting reference.","In one embodiment, a wireless, spread-spectrum communication system includes one or more spread spectrum transmitters and one or more spread spectrum receivers. A spread spectrum transmitter comprises a feedback shift register and transmits a sequence of pseudo-randomly hopped frequencies determined by the shift register. Each of the one or more spread spectrum receivers is tuned to one of the frequencies of the many over which the transmitter hops. Each spread spectrum receiver tuned to its unique predetermined frequency measures the relative times of arrival between consecutive transmissions, and determines, using the techniques of the invention, the initial code word in the transmitter feedback shift register from the measured relative times of arrival. The spread spectrum receiver comprises a receiver feedback shift register configured in the same manner as the transmitter feedback shift register, and matches the receiver feedback shift register to the initial code word, adjusted by an amount of time elapsed during the synchronization process. The receiver feedback shift register is then used to carry out synchronized communication with the spread spectrum transmitter.","In a preferred embodiment, a synchronization algorithm utilizing the measured relative times of arrival of transmissions on the predetermined frequency is employed by the receiver. The synchronization algorithm derives a number of equations upon receipt of each transmission on the predetermined frequency, based upon the knowledge of encoding at the transmitter, by relating a set of unknowns to the known encoding bits through a transition matrix. When a sufficient number of equations has been built up, the set of equations may be solved, yielding the initial codeword in the transmitter feedback shift register. The initial transmitter codeword is then advanced or otherwise adjusted to compensate for the lag between the receiver and the transmitter, and synchronized communication is carried out thereafter.","Communication techniques as described herein may be applied both to frequency hopping spread spectrum communication systems and to direct sequence spread spectrum communication systems.","Further embodiments, variations and enhancements are also disclosed herein.",{"@attributes":{"id":"p-0042","num":"0041"},"figref":["FIG. 1","FIG. 1"],"b":["100","100","105","130","105","110","112","115","125","118"]},"At the receiver , a receiver antenna  receives the spread spectrum transmission signal and conveys it to front-end processing circuitry  and to a demodulator . In a frequency-hopping spread-spectrum system, the front-end processing circuitry  preferably comprises a band pass filter tuned to a selected frequency hopping \u201ckey\u201d frequency (as further described herein) followed by an envelope detector or the equivalent. In a direct-sequence spread-spectrum system, the front-end processing circuitry  preferably comprises a despreading circuit, such as a spread-spectrum correlator for detecting spread-spectrum encoded pulses, as further described herein. The demodulator  outputs the signal to a synchronizer , which preferably operates according to techniques as described herein for detecting the proper synchronization between the receiver  and the transmitter . A timing shift circuit  is preferably employed to properly align the receiver spreading code with the transmitter spreading code, so as to allow proper demodulation of the received spread spectrum transmission signal. When the receiver feedback shift register  is properly aligned with the received code the output data signal  is obtained. The receiver feedback shift register  is preferably configured the same as the transmitter feedback shift register  (e.g., same number of delay stages, same number and location of taps, etc.), so that when both the transmitter feedback shift register  and receiver feedback shift register  have the same contents, the transmitter  and receiver  can communicate in synchronization. The receiver feedback shift register  outputs a receiver spreading code to the demodulator , which outputs a data signal  for further processing.",{"@attributes":{"id":"p-0044","num":"0043"},"figref":["FIG. 2","FIG. 1","FIG. 2","FIG. 2"],"b":["200","100","200","200","210","205","204","210","210","210","210","210","210","215"]},"This portion of the operation of the spread spectrum transmitter  may be explained in more detail with reference to , which is a diagram illustrating an example of a frequency hopping code sequence generator  having a feedback shift register  for generating a spread spectrum transmission signal. As illustrated in , the frequency hopping code sequence generator  includes a clock  which serves a purpose similar to the clock  illustrated in , connected to the tapped shift register  having feedback connections. The tapped shift register  comprises a plurality of delay stages \u2014in the example of , it has ten delay stages , but in the general case it may have N delay stages . The tapped shift register  may therefore hold up to N code elements (or \u201cchips\u201d) at a given time, one in each of the N delay stages . The tapped shift register  is configured with a plurality of taps  (e.g., six taps  in the instant example shown in , at delay stages , , ,   and ) to provide feedback for code generation. Taps  from selected delay stages  are input to an exclusive-OR logic gate  (or the equivalent in functionality) which performs a modulo-2 additive operation on the chips in delay stages  which are connected to the exclusive-OR logic gate  by the taps . An output signal  from the exclusive-OR logic gate  is fed back to the input (i.e., first delay stage ) of the tapped shift register . The tapped shift register , taps  and exclusive-OR logic gate  collectively comprise a feedback shift register . The feedback taps  of the tapped shift register  dictate the type of code that will be output. For example, if the feedback taps  correspond to a linear maximal code sequence, then the resulting code output will also be a linear maximal code sequence.","Further discussion of tapped shift registers, including their relationship to the generation of linear and nonlinear maximal code sequences, may be found, for example, in R. Dixon, (J. Wiley & Sons, 3d ed. 1994), hereby incorporated by reference as if set forth fully herein.","As further illustrated in , selected delay stages  are utilized in generating a frequency select signal  that is fed to a frequency synthesizer , for generating a frequency hopping output signal . One or more of the delay stages  may be used for the frequency select signal . If only one delay stage  is used, then only two frequencies can be available for frequency hopping. If two delay stages  are used, then up to four frequencies can be available for frequency hopping. In the general case of M delay stages  being selected (where M\u2266N), up to 2frequencies can be available for frequency hopping. In the instant example shown in , two delay stages  are used as the frequency select signal  (which essentially forms a two-bit binary word), so up to four frequencies can be available for frequency hopping.","The frequency synthesizer  receives the frequency select signal  from the selected delay stages , and outputs a sequence of frequencies in a random-like pattern based upon the progression of the frequency select signal  from clock cycle to clock cycle.  is a diagram illustrating sequences of frequencies as may be output from the frequency hopping code sequence generator  of . Shown in  is a series of time intervals , in connection with a length-31 repeating code having code elements  output from the tapped shift register  as illustrated for each time interval. The first ten code elements , that is, \u201c1101011001,\u201d match the initial codeword (i.e., initial contents, or selected code of the day) of the tapped shift register . The following code elements , that is, \u201c1011 . . . ,\u201d correspond to the output of the tapped shift register  based upon the code for which the taps  are configured. Each clocking interval, the code elements in stage- and stage- of the delay stages  are used as the frequency select signal  to select one of four different frequencies (F, F, F and F). In the example shown, the frequencies F, F, F and F are encoded so as to correspond to select signals , ,  and , respectively (for convenience, designated as frequencies a, b, c and d, respectively). The resulting sequence of frequencies  generated by the frequency select signal  taken from the tapped shift register  is illustrated in . For example, in time interval , the frequency select signal  is \u201c11\u201d or \u201cd\u201d. In time interval , the frequency select signal  is \u201c10\u201d or \u201cc\u201d. (The frequency select signal  at time interval  can either be selected to have the same value as at time interval , or else can be based upon the code element in stage- of the tapped shift register  and the previous code element, if known). The result is a frequency hopping signal that hops sequentially starting from time interval , from frequency \u201cd\u201d (F) to frequency \u201cd\u201d (F), to frequency \u201cc\u201d (F), to frequency \u201cb\u201d (F), and so on, as shown by the sequence of frequencies  in .","The frequency hopping code sequence generator  shown in  is capable of generating any of the family of thirty-two binary codes (each having 31 code elements) which appear below in Table 4-1, each of which happen to be Gold codes. However, the invention is applicable to many other types of code sequences, including various linear maximal and non-maximal codes.",{"@attributes":{"id":"p-0050","num":"0049"},"tables":{"@attributes":{"id":"TABLE-US-00001","num":"00001"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":[{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"2"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"70pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"147pt","align":"left"}}],"thead":{"row":[{"entry":[{},"TABLE 4-1"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]},{"entry":[{},"0123456789012345678901234567890"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"1","align":"center","rowsep":"1"}}]}]},"tbody":{"@attributes":{"valign":"top"},"row":{"entry":{}}}},{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"28pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"42pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"147pt","align":"left"}}],"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u2002(1)","1001101001000010101110110001111"]},{"entry":[{},"\u2002(2)","1100000011001100010000100010111"]},{"entry":[{},"\u2002(3)","1110110110001011001111101011011"]},{"entry":[{},"\u2002(4)","1011011100000101110001111000011"]},{"entry":[{},"\u2002(5)","1111101100101001111101"]},{"entry":[{},"\u2002(6)","1010000110100110011110011100101"]},{"entry":[{},"\u2002(7)","1000110011100001000001010101001"]},{"entry":[{},"\u2002(8)",{"u":"1101011001"}]},{"entry":[{},"\u2002(9)","1111000001111001010111111101110"]},{"entry":[{},"(10)","1010101011110111101001101110110"]},{"entry":[{},"(11)","1000011110110000110110100111010"]},{"entry":[{},"(12)","1101110100111110001000110100010"]},{"entry":[{},"(13)","1001000100010011011001000011100"]},{"entry":[{},"(14)","1100101110011101100111010000100"]},{"entry":[{},"(15)","1110011011011010111000011001000"]},{"entry":[{},"(16)","1011110001010100000110001010000"]},{"entry":[{},"(17)","0010111101011111010010010111111"]},{"entry":[{},"(18)","0111010111010001101100000100111"]},{"entry":[{},"(19)","0101100010010110110011001101011"]},{"entry":[{},"(20)","0000001000011000001101011110011"]},{"entry":[{},"(21)","0100111000110101011100101001101"]},{"entry":[{},"(22)","0001010010111011100010111010101"]},{"entry":[{},"(23)","0011100111111100111101110011001"]},{"entry":[{},"(24)","0110001101110010000011100000001"]},{"entry":[{},"(25)","0100010101100100101011011011110"]},{"entry":[{},"(26)","0001111111101010010101001000110"]},{"entry":[{},"(27)","0011001010101101001010000001010"]},{"entry":[{},"(28)","0110100000100011110100010010010"]},{"entry":[{},"(29)","0010010000001110100101100101100"]},{"entry":[{},"(30)","0111111010000000011011110110100"]},{"entry":[{},"(31)","0101001111000111000100111111000"]},{"entry":[{},"(32)","000010010100100111100"]},{"entry":[{},"(33)","1001001100001011010100011101111"]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}]}},"br":{},"b":["407","407","400","410"],"figref":"FIG. 4"},"In the example illustrated in , two delay stages  were used for the frequency select signal , resulting in up to four frequencies F, F, F and F being available for frequency hopping. If more delay stages  are used for the frequency select signal , more frequencies would be available for frequency hopping. The delay stages  used for the frequency select signal  need not be contiguous. It may be appreciated by those skilled in the art that the parameters of the particular frequency hopping code sequence generator  shown in  would be too small to be of practical application in many situations; nevertheless, it is useful to illustrate certain principles of the present invention.","The frequency hopping code sequence generator  of  may be incorporated in a transmitter (such as transmitter  shown in ) and used to generate a code sequence for modulating a data signal. For example, the output of the frequency synthesizer  may be used to modulate an audio signal (or other analog or digital data signal). In the example shown in , an audio signal  is output from a microphone  and fed to an analog-to-digital (A\/D) converter , which outputs a digital converted data signal  to a frequency-shift-keyed (FSK) modulator . The digital converted data signal  is mixed with the sequence of frequencies output from the frequency synthesizer , resulting in a frequency hopping transmission signal, which is transmitted via antenna  over a wireless communication link.",{"@attributes":{"id":"p-0053","num":"0052"},"figref":["FIG. 3","FIG. 1","FIG. 1","FIG. 3","FIG. 3"],"b":["300","300","130","300","310","314","380","300","340","345","350","345","352","355","355","360","365"]},"Further details will now be explained about the initial synchronization operation of the receiver  shown in . The receiver  \u201cselects\u201d (e.g., is assigned) one frequency of the available frequency hopping frequencies to monitor in order to detect and synchronize to the frequency hopping transmission signal. This selected (or assigned) frequency may be referred to as the \u201ckey\u201d frequency. The receiver  uses relative times-of-arrival of occurrence on the key frequency in order to rapidly determine the initial contents of the transmitter feedback shift register (as of the moment when the receiver  initially detected the first occurrence of the key frequency), and then to align the receiver feedback shift register to the transmitter feedback shift register. As an example, the key frequency for the receiver  may be selected or assigned to be frequency F (i.e., frequency \u201cd\u201d). The receiver  need not commence listening at the start of the code sequence output by the transmitter, but may start listening at any point in the transmission. In the example illustrated in , it is assumed that the receiver  starts observations of frequency \u201cd\u201d at the 6term  of the transmitted sequence (i.e., at the 6clock interval). By continuing to monitor only on frequency \u201cd\u201d, the receiver  will further detect transmissions at that frequency at the 10term, 13term, 14term, and so on. However, the times-of-arrival of the transmissions over frequency \u201cd\u201d are measured with respect to the first detected transmission. Therefore, the relative times-of-arrival are at clock intervals 0, 4, 7, 8, 9, 10, 11, 12 and so on. As will be shown, it is sufficient for achieving synchronization that the number of occurrences of the key frequency be equal to the number of delay stages  of feedback shift register divided by the number of stages that are tapped for input to the frequency synthesizer. Thus in the present example the number of relative times of arrival of the key frequency required would be:",{"@attributes":{"id":"p-0055","num":"0054"},"maths":{"@attributes":{"id":"MATH-US-00001","num":"00001"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mfrac":{"mrow":[{"mn":"10","mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["shift","register","stages"]},{"mn":"2","mo":["\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["tapped","stages"]}]},"mo":"=","mrow":{"mn":"5","mo":["\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062","\u2062"],"mstyle":[{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"1.1em","height":"1.1ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}},{"mspace":{"@attributes":{"width":"0.8em","height":"0.8ex"}}}],"mi":["relative","times","of","arrival","required","by","the","algorithm"]}}}}},"In order to detect transmissions at the key frequency, the receiver  preferably passes the received frequency hopping transmission signal  into a band pass filter  which is centered at the key frequency. The band-pass filtered signal is input to an envelope detector , which may be constructed according to any of a variety of techniques well known in the art. The envelope detector  includes a threshold circuit (not shown) or the equivalent decision circuitry, and when the envelope of the signal at frequency \u201cd\u201d exceeds the threshold, a detection event is declared. The detection events are conveyed to the synchronizer , which uses the time-of-arrival information to achieve initial synchronization with the transmitter.","The first detection event output from the envelope detector  enables a counter  utilized in the synchronizer . Each incidence of the key frequency in the received frequency hopping transmission signal  causes the counter  to output its value to the synchronization algorithm  (which may be programmed, for example, into a processor, not shown in ). Thus, in the example of  previously described, the output of the counter  would be: 0, 4, 7, 8, 9, 10, 11, 12, etc.","The synchronization algorithm  computes the binary word that was in the transmitter feedback shift register  at the time the transmitter generated the first occurrence of the key frequency observed by the receiver . The computed binary word is then temporarily loaded into a \u201clag\u201d feedback shift register , and advanced in time using a phase shift algorithm , which may be implemented by a phase shift circuit (preferably comprising digital logic or a programmed processor). The time-advanced binary word output from the phase shift algorithm  is loaded into the receiver feedback shift register , and used for controlling the frequency synthesizer  to effectuate demodulation of the received frequency hopping transmission signal.","The synchronization algorithm  makes use of a transition matrix of the feedback shift register  in order to facilitate determination of the initial binary word that was in the transmitter feedback shift register  at the time it first transmitted an instance of the key frequency that was detected by the receiver . The transition matrix of an N-stage feedback shift register may generally be defined as the N\u00d7N binary matrix whose product with a binary word in the shift register is that binary word which occurs in the shift register at the next clock pulse. For example, for a 10 stage shift register with feedback taps given by [a, a. . . a] where a=0 or 1 depending upon whether or not there is a feedback tap to the istage, the transition matrix from the current binary word in the shift register to the next binary word is given by:",{"@attributes":{"id":"p-0060","num":"0059"},"maths":{"@attributes":{"id":"MATH-US-00002","num":"00002"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"A","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"a","mn":"0"}}]},{"mtd":[{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"a","mn":"1"}}]},{"mtd":[{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"a","mn":"2"}}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"a","mn":"3"}}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"a","mn":"4"}}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"a","mn":"5"}}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"a","mn":"6"}}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"msub":{"mi":"a","mn":"7"}}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"msub":{"mi":"a","mn":"8"}}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"msub":{"mi":"a","mn":"9"}}]}]}}}}},"br":[{},{}],"sub":["0","1 ","9","1","2 ","10","0","1 ","9","1","2 ","10","0","1 ","9","p","p+1 ","p+9"],"b":["410","410"],"in-line-formulae":[{},{}],"i":["z",",z",". . . z","]\u00d7A","=[z",",z",". . . z"],"sup":"p"},"As a concrete example, the transition matrix for the ten-stage feedback shift register  of the example shown in  is given by:",{"@attributes":{"id":"p-0062","num":"0061"},"maths":{"@attributes":{"id":"MATH-US-00003","num":"00003"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mi":"A","mo":"=","mrow":{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"}]}]}}}}},"br":{},"sup":["p ","th "],"b":"410"},{"@attributes":{"id":"p-0063","num":"0062"},"maths":{"@attributes":{"id":"MATH-US-00004","num":"00004"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"mrow":{"mo":["[","]"],"mn":"1101011001"},"mo":"\u00d7","msup":{"mi":"A","mn":"4"}},{"mrow":[{"mo":["[","]"],"mtable":{"mtr":[{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"1"},{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"1"},{"mn":"1"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"1"},{"mn":"1"}]},{"mtd":[{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"1"},{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"},{"mn":"0"},{"mn":"1"},{"mn":"0"}]}]}},{"mo":["[","]"],"mn":"0110011011"}],"mo":"="}],"mo":"="}}}},"Using the above-described properties of the transition matrix, a system of equations may be developed to determine the binary word present in the transmitter feedback shift register when the first detected key frequency is generated. A general methodology  for such a determination is illustrated in . Application of this methodology to a concrete example with reference to the frequency hopping code sequence generator  of  and the receiver  of  is described concurrently, to illustrate application of the methodology in the context of a practical application. As illustrated in , the method  involves, in a first step , receiving a first key frequency transmission. In a next step , the counter  is enabled (or reset, or else any other means of tracking elapsed time is commenced). In a next step , the method involves assigning the code values that are used to generate the key frequency to the appropriate locations in the transmitter feedback shift register, according to the encoding of the key frequency. This assignment can be made because, when the first key frequency is received at the receiver, it is known what the contents of the tapped delay stages in the transmitter feedback shift register had to be in order to generate the key frequency. In the example of the frequency hopping code sequence generator  of , when the first key frequency is received, it is known that stage- and stage- of the delay stages  of the feedback shift register  hold the code values [1,1], because key frequency \u201cd\u201d is encoded as \u201c11\u201d. Thus, by assigning [1,1] to the first two delay stages  of the feedback shift register, the receiver can determine that the contents of the transmitter feedback shift register  are [1, 1, x, x, x, x, x, x, x, x], leaving eight unknowns.","Next in the method , a loop  is entered, in which relative arrival times of the key frequency transmissions are used in connection with further processing to eventually build up a set of equations that will allow determination of the initial contents of the binary codeword in the transmitter feedback shift register . For each received key frequency transmission (step ), the number of intervening clock pulses (i.e., code element intervals) from the initially received key frequency transmission is determined, as indicated by step . In the example illustrated in , the number of clock pulses would be 4, 7, 8, 9, etc.","In next steps  and  in the loop , for each received key frequency transmission, the transition matrix for the feedback shift register is advanced by the number of clock pulses for the particular key frequency transmission, and an equation is developed from each received key frequency transmission based upon the knowledge that the initial contents of the transmitter feedback shift register, advanced by the number of clock pulses to generate the next occurrence of the key frequency, will result in a set of code elements corresponding to the binary code for the key frequency. The result over several received key frequency transmissions is a set of equations that can be used to solve for the initial contents of the transmitter shift register.","Development of such a set of equations may be explained in more detail with reference once again to examples illustrated in . For each received key frequency transmission, the transition matrix is raised to a power equal to the number of clock pulses (i.e., code element intervals) from the initial key frequency transmission to the current key frequency transmission, and the portion of the resultant transition matrix corresponding to the locations of the tapped delay stages is then used to form a new matrix that defines the specifics of the equations to be solved. It is helpful in this regard to introduce additional notation. As used herein, the term A[q] represents a portion of the transition matrix A raised to a power equal to the number of clock pulses p, the portion being those columns associated with q taps of delay stages in the transmitter feedback shift register. For example, in relation to the frequency hopping code sequence generator  of , the expression A[2] denotes the 10\u00d72 matrix consisting of the first two columns of the 10\u00d710 matrix A. (The first two columns are chosen because the first two delay stages  are tapped and thus yield the binary frequency select signal .) Thus, where a key frequency transmission is received at time interval , a 10\u00d710 transition matrix Ais derived by advancing the matrix through four clock pulses, resulting in the following:",{"@attributes":{"id":"p-0068","num":"0067"},"maths":{"@attributes":{"id":"MATH-US-00005","num":"00005"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msup":{"mi":"A","mn":"4"},"mo":"=","mrow":{"mo":["\uf603","\uf604"],"mtable":{"mtr":[{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]}]}}}}},"br":{}},{"@attributes":{"id":"p-0069","num":"0068"},"maths":{"@attributes":{"id":"MATH-US-00006","num":"00006"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"mrow":[{"msup":{"mi":"A","mn":"4"},"mo":"\u2061","mrow":{"mo":["[","]"],"mn":"2"}},{"mo":["\uf603","\uf604"],"mtable":{"mtr":[{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]}]}}],"mo":"="}}},"br":[{},{},{}],"sub":["2","3","4","5","6","7","8","9","5","6"],"sup":"4","in-line-formulae":[{},{},{},{}]},"The next relative time of arrival of a key frequency transmission is in time interval . Using the same approach, another two equations are derived by calculating a transition matrix Abased upon advancement by 7 clock pulses, and utilizing the first two columns of the transition matrix as a 10\u00d72 matrix to set up the appropriate relationships. These steps are illustrated mathematically as follows:",{"@attributes":{"id":"p-0071","num":"0070"},"maths":{"@attributes":{"id":"MATH-US-00007","num":"00007"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msup":{"mi":"A","mn":"7"},"mo":"=","mrow":{"mo":["\uf603","\uf604"],"mtable":{"mtr":[{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]}]}}}}},"br":{},"in-line-formulae":[{},{}],"sub":["3","4","5","6","7","8","9","10"],"sup":"7"},"and the resulting equations from the foregoing relationship are as follows:\n\nx=1\n\nx=1\n","The next relative time of arrival of a key frequency transmission is in time interval , leading to the following transition matrix Aand two further equations:",{"@attributes":{"id":"p-0073","num":"0072"},"maths":{"@attributes":{"id":"MATH-US-00008","num":"00008"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msup":{"mi":"A","mn":"8"},"mo":"=","mrow":{"mo":["\uf603","\uf604"],"mtable":{"mtr":[{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]}]}}}}},"br":[{},{},{}],"in-line-formulae":[{},{},{},{},{},{}],"sub":["3","4","5","6","7","8","9","10","9","10"],"sup":"8"},"The next relative time of arrival of a key frequency transmission is in time interval , leading to the following transition matrix Aand two more equations:",{"@attributes":{"id":"p-0075","num":"0074"},"maths":{"@attributes":{"id":"MATH-US-00009","num":"00009"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msup":{"mi":"A","mn":"9"},"mo":"=","mrow":{"mo":["\uf603","\uf604"],"mtable":{"mtr":[{"mtd":[{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"1"},{"mn":"0"}]}]}}}}},"br":[{},{},{}],"in-line-formulae":[{},{},{},{},{},{}],"sub":["3","4","5","6","7","8","9","10","10","3","5","6","8"],"sup":"9","i":["x","+x","+x","+x"]},"The next relative time of arrival of a key frequency transmission is in time interval , leading to the following transition matrix Aand two more equations:",{"@attributes":{"id":"p-0077","num":"0076"},"maths":{"@attributes":{"id":"MATH-US-00010","num":"00010"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msup":{"mi":"A","mn":"10"},"mo":"=","mrow":{"mo":["\uf603","\uf604"],"mtable":{"mtr":[{"mtd":[{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"1"},{"mn":"1"}]},{"mtd":[{"mn":"1"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"1"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]}]}}}}},"br":[{},{},{}],"in-line-formulae":[{},{},{},{},{},{}],"sub":["3","4","5","6","7","8","9","10","3","5","6","8","3","4","6","7","9"],"sup":"10","i":["x","+x","++x","+x","x","+x","++x","+x","+x"]},"The next relative time of arrival of a key frequency transmission is in time interval , leading to the following transition matrix Aand two more equations:",{"@attributes":{"id":"p-0079","num":"0078"},"maths":{"@attributes":{"id":"MATH-US-00011","num":"00011"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msup":{"mi":"A","mn":"11"},"mo":"=","mrow":{"mo":["\uf603","\uf604"],"mtable":{"mtr":[{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"1"},{"mn":"1"}]},{"mtd":[{"mn":"1"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"1"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]}]}}}}},"br":[{},{},{}],"in-line-formulae":[{},{},{},{},{},{}],"sub":["3","4","5","6","7","8","9","10","3","4","6","7","9","3","4","5","7","8","10"],"sup":"11","i":["x","+x","+x","+x","+x","x","+x","+x","+x","+x","+x"]},"The next relative time of arrival of a key frequency transmission is in time interval , leading to the following transition matrix Aand two further equations:",{"@attributes":{"id":"p-0081","num":"0080"},"maths":{"@attributes":{"id":"MATH-US-00012","num":"00012"},"math":{"@attributes":{"overflow":"scroll"},"mrow":{"msup":{"mi":"A","mn":"12"},"mo":"=","mrow":{"mo":["\uf603","\uf604"],"mtable":{"mtr":[{"mtd":[{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"1"},{"mn":"1"}]},{"mtd":[{"mn":"1"},{"mn":"1"}]},{"mtd":[{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"0"}]},{"mtd":[{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"1"},{"mn":"0"}]},{"mtd":[{"mn":"0"},{"mn":"1"}]},{"mtd":[{"mn":"1"},{"mn":"0"}]}]}}}}},"br":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"in-line-formulae":[{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}],"sub":["3","4","5","6","7","8","9","10","3","4","6","7","9","3","4","9","5","6","8","9","9","10","10","3","5","6","8","3","4","6","7","9","3","4","5","7","8","10","3","4","6","7","9","3","4","9"],"sup":"12","i":["x","+x","+x","+x","+x","x","+x","+x","x","+x","+x","+x","x","+x","+x","+x","+x","x","+x","+x","+x","+x","+x","x","+x","+x","+x","+x","x","+x","+x"]},"In certain embodiments, it may be advantageous to store in computer memory in the receiver  the transition matrices (or the needed columns\/portions thereof) that are to be used in developing the equations in accordance with steps  and  of the method  of . The number of transition matrices to be stored depends upon the maximum length of time needed for enough key frequency receptions to occur by which it would be guaranteed that the initial transmitter codeword could be determined.","When a sufficient number of equations have been obtained (i.e., when the number of equations exceeds the number of unknowns), the initial binary codeword in the transmitter feedback shift register  may be determined. Thus, in a next step  in the method  shown in , the system of equations is solved. A variety of conventional computer-assisted and\/or mathematical algorithms exist for arriving at a solution for a set of unknowns from a set of equations. Generally, such algorithms may involve placing N equations with N unknowns in a matrix, thus setting up an equation in the form Ax=c, where x is a vector representing the initial transmitter codeword, and c is a vector of constant values. The matrix may then be reduced to diagonal form using conventional mathematical techniques, and the matrix inverted in order to solve for the initial transmitter codeword x. For example, the solution to the system of equations listed previously is as follows:\n\n[1,1,x,x,x,x,x,x,x,x]=[1,1,0,0,1,1,0,1,1,1]\n","Thus, [1,1,0,0,1,1,0,1,1,1] is the state of the transmitter feedback shift register  when the first occurrence of the key frequency (i.e., frequency \u201cd\u201d) is being generated\u2014i.e., the \u201cinitial state\u201d of the transmitter feedback shift register as perceived by the receiver.","In the example of , two equations are derived with each reception of a key frequency transmission, because two bits are used to select which of the available four frequencies will be transmitted by the frequency hopping code sequence generator . More generally, given y bits for selecting from among the various available transmission frequencies (i.e., the number of bits in frequency select signal), then y equations will be obtained with each reception of a key frequency. In the example of , the number of bits in the frequency select signal  is two, and so each reception of a signal transmitted at the key frequency will yield two new equations at the receiver . If the frequency hopping code sequence generator  hopped over, for example, a thousand frequencies instead of four, the receiver  could obtain up to ten equations with each received occurrence of the key frequency, rather than just two equations. As but one example, the transmitter feedback shift register may have 100 stages, with seven feedback taps (providing up to 128 hopping frequencies for selection). In such a case, seven equations would be obtained from each occurrence of a key frequency transmission. After 15 \u201chits\u201d of the key frequency, a total of 105 equations would be obtained, which is more than the number of stages which need to be solved for the transmitter feedback shift register. Thus, only 15 key frequency transmissions would be needed to solve for the contents of the transmitter feedback shift register.","It may be noted that a missed key frequency transmission will not necessarily cause a failure of the synchronization algorithm. However, it may require waiting for an additional key frequency transmission to make up for the lost information.","While the method  of  has been described with reference to an example in which frequency hopping spread spectrum communication is utilized, it will be appreciated that the same principles are applicable to direct sequence spread spectrum communication. An example of one embodiment for use in a direct sequence spread spectrum system is illustrated in . As shown therein, a spread spectrum transmitter  comprises a pseudo-noise (PN) generator  which may be implemented as, e.g., a feedback shift register as previously described herein. A single tap output  from the PN generator  is input to modulator  (e.g., a multiplier), which multiplies the spreading code output from the PN generator  with a carrier signal  output from a frequency generator , to generate a spread spectrum signal  (which may be further modulated with a data signal). The frequency domain characteristics of the spread spectrum signal  are illustrated in the accompanying graph .","In , a set of one or more taps  is also taken from the PN generator  and connected to a pulse generator . Whenever a desired bit sequence (e.g., \u201c111\u201d) on the set of taps  occurs, the pulse generator  outputs a pulse signal , which preferably takes the form of a spread spectrum code , which may be a fixed or predetermined spread spectrum code. This spread spectrum encoded pulse signal  is preferably of sufficient length so as to provide enough processing gain to allow the receiver to distinguish the encoded pulse signal  from noise or other interfering sources. Each pulse signal  is modulated by a carrier signal  at a desired key frequency. The carrier signal  may be output from a programmable oscillator , to allow the transmitter  to readily change the key frequency. An example of an output signal from multiplier , in the time domain, is illustrated by graph  in .","The receiver may be configured in a manner similar to that shown in  and described earlier herein. The receiver preferably includes a correlator for despreading the spread spectrum code on the key frequency and an envelope detector for detecting the received signal after it has been despread. Each time the spread spectrum code is recognized, the correlator outputs a correlation pulse. Many conventional types of spread spectrum correlators are known in the art. The receiver detects the relative times of arrival of the pulse signals, and applies the same algorithms as previously described herein to re-construct the initial transmitter codeword from knowledge of the relative times of arrival, as well as the transmitter feedback shift register configuration (i.e., size and location of taps), and the bit sequence (e.g., \u201c111\u201d) needed to cause the transmitter to generate the pulse signal each time.","A similar technique may be applied to a frequency hopping system in which the hopping rate is faster than the data rate (for example, 20 hops per data bit). In order to allow rapid synchronization, in one embodiment, a spread spectrum code is transmitted each frequency hop, rather than simply a brief hop. This spread spectrum code is preferably of sufficient length to provide the desired processing gain. At the receiver, a spread spectrum correlator is used to generate a correlation pulse each time a pulse signal is received. The receiver then measure the relative times of arrival of the key frequency pulse signal, as described before.","It may be seen that the method  set forth in  provides a useful and relatively rapid technique for a receiver  to derive the initial contents of the transmitter feedback shift register . The synchronization algorithm  determines the codeword initially in the transmitter feedback shift register  at the time the first instance of the key frequency was transmitted. However, the synchronization algorithm  generally utilizes a series of received key frequency transmissions over time to determine the contents of the transmitter feedback shift register, and as the subsequent key frequency transmissions are received, the transmitter will have progressed in its code sequence past the initially detected state of the transmitter feedback shift register . Moreover, the synchronization algorithm may take one or possibly more clock intervals to make its initial codeword determination, leading to further drift between the transmitter and the receiver as the transmitter feedback shift register  continues to output the code sequence. In order to synchronize the receiver  with the transmitter, the receiver  determines the current binary codeword that resides in the transmitter feedback shift register . The receiver  may make such a determination because the counter  continuously counts the number of clock pulses after the initial key frequency transmission was received (having been preferably reset upon the occurrence of the first detected key frequency transmission). With the knowledge of the time elapsed since receipt of the first key frequency transmission, and with the knowledge of the contents of the transmitter feedback shift register  at the time of receipt of the initial key frequency transmission, the receiver  may determine the current binary codeword in the transmitter feedback shift register  in a variety of different ways. The receiver  is preferably brought into synchronization with the transmitter by rapidly advancing from the initial codeword to the current state of the transmitter feedback shift register . This advancement can be accomplished in a variety of ways.","As one approach to synchronizing the receiver feedback shift register  with the transmitter feedback shift register , the receiver  may simply load the initial codeword that was determined by the synchronization algorithm  into the receiver feedback shift register , and then apply clocking signals to the receiver feedback shift register  at an accelerated rate based upon the number of counts in the counter , until the receiver feedback shift register  is caught up with the transmitter feedback shift register . Preferably, the clocking signals are applied to the receiver feedback shift register  at such a rate that the advancement of the receiver feedback shift register  is completed within a single code clock interval.","Alternatively, and in a preferred embodiment, a binary operation is performed on the initial codeword to rapidly advance it to the current state of the codeword in the transmitter feedback shift register , and to thereby synchronize the receiver feedback shift register  with the transmitter feedback shift register . This rapid time advancement is accomplished by modulo-two adding selected code elements of the initial binary codeword in various combinations to arrive at a new (i.e., the current) binary codeword. The specifics of the binary operation depend upon the particular configuration (i.e., tap locations) of the tapped shift register and the amount of time advancement that is needed.","A preferred method for time advancement of the receiver feedback shift register  may be explained with reference to the flow diagram of . As illustrated therein, a method  for time advancement of the receiver feedback shift register comprises a first step  of initializing a modular feedback shift register  corresponding to the receiver feedback shift register . A modular feedback shift register is a shift register configuration that is functionally equivalent to a tapped feedback shift register, but instead is connected in a \u201cmodular\u201d fashion with modulo-2 adders between the delay stages of the shift register, as opposed to a single modulo-2 adder that combines all of the tapped outputs into a feedback signal. An example of a modular feedback shift register  corresponding to the feedback shift register  shown in  is illustrated in . As shown therein, the modular feedback shift register  comprises a plurality of delay stages , with modulo-2 adders  interposed between selected delay stages . A feedback signal  from the last delay stage  connects as an input to each of the modulo-2 adders , and to the first delay stage . The positioning of the modulo-2 adders  is related to the configuration of the tapped shift register  to which the modular feedback shift register  corresponds. More specifically, the modulo-2 adders  are located before each delay stage  which is tapped in the tapped shift register  (with the exception of the first delay stage , which directly receives the feedback signal ). Thus, in the example illustrated in , modulo-2 adders  are located before the second, third, fifth, sixth and eighth delay stages . Obtaining a modular feedback shift register  from a tapped feedback shift register can therefore be accomplished in a straightforward manner.","Returning back to step  of the method  of , the modular feedback shift register  is initialized by loading a codeword [1, 0, 0, . . . 0] into it. In a next step , the modular feedback shift register  is clocked ahead by a number of clock pulses k equal to the measured time difference (i.e., time lag) between the receiver and the transmitter. Thus, if 12 clock pulses have elapsed from receipt of the first key frequency transmission (as measured by, e.g., the counter  in the receiver ), the modular feedback shift register  is clocked ahead by 12 clock pulses. Then, in next steps  and , the modular feedback shift register  is clocked once for each additional delay stage  in the transmitter feedback shift register  beyond the first delay stage , and the codeword at each clock pulse is recorded, for a total of N codewords. For example, with the modular feedback shift register  in , after being advanced by k clock pulses, the modular feedback shift register  would be clocked an additional nine times, once for each additional delay stage  of the transmitter feedback shift register  beyond the first delay stage , and the ten resulting codewords at each clock pulse would be stored for further use.","In the example of , the successive binary words of the modular feedback shift register  would be as follows:",{"@attributes":{"id":"p-0097","num":"0096"},"tables":{"@attributes":{"id":"TABLE-US-00002","num":"00002"},"table":{"@attributes":{"frame":"none","colsep":"0","rowsep":"0"},"tgroup":{"@attributes":{"align":"left","colsep":"0","rowsep":"0","cols":"3"},"colspec":[{"@attributes":{"colname":"offset","colwidth":"49pt","align":"left"}},{"@attributes":{"colname":"1","colwidth":"77pt","align":"left"}},{"@attributes":{"colname":"2","colwidth":"91pt","align":"left"}}],"thead":{"row":{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}},"tbody":{"@attributes":{"valign":"top"},"row":[{"entry":[{},"\u20020","1000000000"]},{"entry":[{},"\u20021","0100000000"]},{"entry":[{},"\u20022","0010000000"]},{"entry":[{},"\u20023","0001000000"]},{"entry":[{},"\u20024","0000100000"]},{"entry":[{},"\u20025","0000010000"]},{"entry":[{},"\u20026","0000001000"]},{"entry":[{},"\u20027","0000000100"]},{"entry":[{},"\u20028","0000000010"]},{"entry":[{},"\u20029","0000000001"]},{"entry":[{},"10","1110110100"]},{"entry":[{},"11","0111011010"]},{"entry":[{},"12","0011101101"]},{"entry":[{},"13","1111000010"]},{"entry":[{},"14","0111100001"]},{"entry":[{},"etc.",". . ."]},{"entry":[{},{"@attributes":{"namest":"offset","nameend":"2","align":"center","rowsep":"1"}}]}]}}}},"br":{}},"The N stored codewords define a set of inner product equations by which the current contents of the transmitter feedback shift register  can be derived. Thus, in a next step , the initial codeword that had been determined by the receiver  for the transmitter feedback shift register  is multiplied (using inner product multiplication) to arrive at the individual bits (i.e., code elements) of the current codeword of the transmitter feedback shift register . This series of operations is shown graphically in . The inner product (also referred to as \u201cdot\u201d product) is obtained according to the following operation:\n\n[+\n\nwhere all operations are carried out using modulo-2 arithmetic. The final result of each dot product is a \u201c1\u201d or \u201c0\u201d binary value.\n",{"@attributes":{"id":"p-0099","num":"0098"},"figref":["FIG. 10","FIG. 4","FIG. 10"],"b":["410","300","0","9","4","0","800","4","0","300","5","1","800","5","1","300","6","7","8","9","2","3","4","5","300"],"sup":["th ","th "]},"However, stage- of what will become the current codeword for the receiver  is derived from the contents of stage-, stage-, stage-, stage-, stage- and stage- of the initial transmitter codeword, according to the 10codeword \u201c1110110100\u201d of the sequentially advanced modular shift register . Likewise, stage-, stage- and stage- of what will become the current codeword in the receiver  are each derived from the contents of multiple stages in the initial transmitter codeword, according to codewords ,, and  of the sequentially advanced modular shift register .","In implementation, the modular feedback shift register  can take the form of a register or set of memory locations of a processor or processor-based circuitry that resides in the receiver . For example, the modular feedback shift register  may be implemented as a pre-defined variable in a software program that executes, among other things, the synchronization algorithm . In such a case, the processor may be programmed through software code to perform steps to time-advance the modular feedback shift register  by, e.g., initializing the modular feedback shift register variable, and then consecutively performing a binary operation on the modular feedback shift register a number of times necessary to obtain the ten codewords following the kcodeword (assuming ten delay stages in the receiver feedback shift register\u2014more generally, the algorithm obtains the N codewords following the kcodeword). The processor then performs N inner product multiplications, as previously described with respect to the method  of , between the determined initial transmitter codeword and each of the N codewords following the kcodeword that were obtained from the modular feedback shift register . The N inner product results are stored sequentially as the N bits (i.e., code elements) of the current codeword. The processor then may transfer the current codeword into the receiver feedback shift register , and the receiver  will thereafter operate in synchronization with the transmitter.","Alternatively, hardware registers can be used to assist in rapidly deriving a plurality of inner products. Such a configuration is illustrated in . As shown therein, the N codewords can be used to select which code elements from the initial codeword  contribute to which bits (i.e., code elements)  of what will become the current codeword in the receiver. The N codewords can be determined by a software routine run by a processor , or by, e.g., a finite state machine or other similar hardware, according to the steps previously described herein. The N codewords can be loaded by the processor  (or other such control circuitry) into individual codeword registers -. Each bit of a codeword loaded into one of the codeword registers -functions as a select signal for a multiplexer or other such selector, which either selects the corresponding code element from the initial transmitter codeword  or else selects a \u201c0\u201d value to contribute to the bit value calculation. Each bit  is formed from the calculation of the inner product of the bits in the initial transmitter codeword  and the bits of the corresponding codeword register , as implemented by, e.g., the circuitry shown in . The circuit  illustrated in  thus rapidly, and in parallel, determines all of the inner products to arrive at the time-advanced codeword  that will be fed into the receiver feedback shift register. Alternatively, a single codeword register  and single tap selection circuit  may be used, and the N codewords loaded one-by-one into the single codeword register  to separately determine each bit value of the time-advanced codeword.","Utilizing various of the aforementioned techniques, a receiver not presently in communication with a transmitter can remain dormant until detecting a recognizable series of transmissions that appear on the key frequency that is monitored by the receiver. When the receiver is first activated, it starts monitoring the key frequency. With the first detected transmission on the key frequency, the receiver attempts to establish synchronization. The receiver accumulates information about the relative times of arrival of key frequency transmissions, and from this information determines the initial contents of the transmitter feedback shift register. The receiver then advances its own feedback shift register to match the current stage of the transmitter feedback shift register, and thereafter communicates in synchronization with the transmitter.","On the chance that interference causes the receiver to misinterpret an errant signal (due to noise and\/or interference) as an occurrence of the initial key frequency transmission, then synchronization may be unsuccessful in the first instance, and this fact can be discovered either by the receiver being unable to solve the set of linear equations, or else by loading an incorrect codeword in the receiver shift register and recognizing the synchronization has not occurred because the data is not properly detectable. The receiver can then attempt to synchronize again.","The use of a single \u201cselected\u201d or key frequency as a monitoring frequency to establish initial synchronization may be advantageously employed in a multi-receiver system, to allow selective addressing of specified receivers when broadcasting signals over a region.  illustrates a multi-receiver system  in which the receivers  are \u201cgrouped\u201d according to their \u201ckey\u201d frequency\u2014that is, the frequency which each receiver  monitors in order to determine whether it should listen to whatever message is being broadcast by a particular transmitter .  illustrates one possible division of frequencies into a key frequency spectrum  and a non-key frequency spectrum , as well as a hopping pattern relating thereto. While the key frequency spectrum  and non-key frequency spectrum  are each shown as contiguous and distinct in , they need not be, and, for example, could be non-contiguous and\/or interleaved with one another. The non-key frequency spectrum  is divided into a plurality of non-key frequencies F, F, . . . F(a total of q frequencies), which are used for frequency hopping of data. The key frequency spectrum  is divided into a plurality of key frequencies F, F, . . . F(a total of r frequencies), which are assigned to receivers  as key frequencies, and are selectively utilized in the frequency hopping pattern only when attempting to communicate with the corresponding receivers .","Returning now to , operation according to one embodiment may be illustrated as follows. Suppose the transmitter  desires to communicate only with those receivers  which are assigned either key frequency F(receiver group ) or key frequency F(receiver group ). The transmitter  generates a frequency hopping pattern that, before receiver selection processing, includes all of the frequencies in the non-key frequency band  and all of the frequencies in the key frequency band . However, if it is desired that the transmitter  exclude any groups of receivers , then the transmitter  does not transmit on the key frequencies assigned to the receiver groups to be excluded. In the instant example, the transmitter  would not transmit on any of key frequencies Fthrough F. Instead, when the frequency hopping pattern calls for a transmission on any of the excluded key frequencies Fthrough F, the transmitter  may simply no transmit (i.e., leave a \u201chole\u201d), as illustrated by the example in time interval tof , or else may transmit on any of a parallel set of unused frequencies, or else may transmit on a non-key frequency.","If a receiver  fails to receive a transmission on its key frequency, then the receiver  has no way to synchronize, and it will be effectively excluded from receiving the transmitter's signal. Accordingly, the foregoing provides a technique for selectively excluding receivers from receiving a broadcast transmission from a transmitter .","While preferred embodiments of the invention have been described herein, many variations are possible which remain within the concept and scope of the invention. Such variations would become clear to one of ordinary skill in the art after inspection of the specification and the drawings. For example, certain embodiments may be used to synchronize two or more systems where any observable parameter of the system is being pseudo-randomly varied. This synchronization would be achieved by measuring the relative time between recurrences of a selected value of the parameter being varied. The invention therefore is not to be restricted except within the spirit and scope of any appended claims."],"BRFSUM":[{},{}],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"BRIEF DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0028","num":"0027"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0029","num":"0028"},"figref":["FIG. 2","FIG. 1"]},{"@attributes":{"id":"p-0030","num":"0029"},"figref":["FIG. 3","FIG. 1"]},{"@attributes":{"id":"p-0031","num":"0030"},"figref":["FIG. 4","FIG. 2"]},{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 5","FIG. 4"]},{"@attributes":{"id":"p-0033","num":"0032"},"figref":"FIG. 6"},{"@attributes":{"id":"p-0034","num":"0033"},"figref":"FIG. 7"},{"@attributes":{"id":"p-0035","num":"0034"},"figref":"FIG. 8"},{"@attributes":{"id":"p-0036","num":"0035"},"figref":"FIG. 9"},{"@attributes":{"id":"p-0037","num":"0036"},"figref":"FIG. 10"},{"@attributes":{"id":"p-0038","num":"0037"},"figref":"FIG. 11"},{"@attributes":{"id":"p-0039","num":"0038"},"figref":"FIG. 12"},{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 13"},{"@attributes":{"id":"p-0041","num":"0040"},"figref":"FIG. 14"}]},"DETDESC":[{},{}]}
