---
title: Dedicated processor for efficient processing of documents encoded in a markup language
abstract: A dedicated processor for efficient processing of documents encoded in a markup language, such as XML. The dedicated processor is capable of performing traditional parsing, transformation and manipulation processes on the document. The special purpose processor frees a general purpose processor to perform other tasks, resulting in an increase in system performance. In one embodiment, the dedicated processor includes a general purpose processor and suitable software which is provided in addition to the general purpose processor which has been traditionally used for processing. In such an embodiment, the dedicated processor may be implemented in a multi-processor system. In another embodiment, the dedicated processor is implemented in special purpose hardware, e.g. as an integrated circuit embodied in silicon in one or more chips. In either embodiment, the dedicated processor may be provided to offload processing locally or remotely.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07013424&OS=07013424&RS=07013424
owner: International Business Machines Corporation
number: 07013424
owner_city: Armonk
owner_country: US
publication_date: 20010504
---

{"@attributes":{"id":"description"},"BRFSUM":[{},{}],"heading":["RELATED APPLICATIONS","FIELD OF THE INVENTION","DESCRIPTION OF THE RELATED ART","SUMMARY OF THE INVENTION","DETAILED DESCRIPTION"],"p":["The present invention is related to U.S. Pat. No. 6,938,204, titled \u201cArray-Based Extensible Document Storage Format\u201d (application Ser. No. 09\/652,296, and U.S. Pat. No. 6,941,511, titled \u201cHigh-Performance Extensible Document Transformation\u201d (application Ser. No. 09\/653,080), and U.S. Pat. No. 6,904,562, titled \u201cMachine-Oriented Extensible Document Representation And Interchange Notation\u201d (application Ser. No. 09\/652,056), each filed Aug. 31, 2000. These related inventions are commonly assigned to International Business Machines Corporation (IBM), and are hereby incorporated herein by reference.","The present invention relates generally to documents encoded in a markup language, such as eXtensible Markup Language (XML), and particularly to processing of XML documents in XML environments, such as a communications network.","Business and consumer use of distributed computing, e.g network computing, has gained tremendous popularity in recent years. For business purposes, there are two main categories of network interactions between computing elements of distributed computing, namely, those that connect users to business processes and those that interconnect the business process elements. An example of the first is the traditional Web whereby a user may use Web browser software to interact with business data and applications at a Web server using the HyperText Markup Language (HTML) data format transported by the HyperText Transport Protocol (HTTP). An example of the second is traditional \u201cElectronic Document Interchange\u201d (EDI) whereby documents such as requisitions, purchase orders, invoice, shipping notification, etc. existing in standardized electronic formats (such as ANSI X.12 or UN\/EDIFACT) are moved between organizational processes by protocols such as X.400, SNADS, TMR, SMTP, etc. For both categories of network interactions, there is a trend toward using the HTTP Web transport protocol and a common data format known as eXtensible Markup Language (\u201cXML\u201d).","XML is a tag language, which is a language that uses specially-designated constructs referred to as \u201ctags\u201d to delimit (or \u201cmark up\u201d) information. In the general case, a tag is a keyword that identifies the data that is associated with the tag, and is typically composed of a character string enclosed in special characters, i.e., letters and numbers which are defined and reserved for use with tags so that a parser processing the data stream will recognize the tag.","The popularity of XML is due in part to its extensible and flexible syntax, which allows document developers to create tags to convey an explicit nested tree document structure (where the structure is determined from the relationship among the tags in a particular document). Document developers can define their own tags which may have application-specific semantics. Because of this extensibility, XML documents may be used to specify many different types of information, for use in a virtually unlimited number of contexts. A number of XML derivative notations have been defined, and continue to be defined, for particular purposes. \u201cVoiceXML\u201d is an example of one such derivative. References herein to \u201cXML\u201d are intended to include XML derivatives and semantically similar notations such as derivatives of the Standard Generalized Markup Language, or ASGML\u201d, from which XML was derived. Refer to ISO 8879, \u201cStandard Generalized Markup Language (SGML)\u201d, (1986) for more information on SGML. Refer to \u201cExtensible Markup Language (XML), WC Recommendation 10 Feb. 1998\u201d which is available on the World Wide Web at URL, for more information on XML.","The extensible tag syntax enables an XML document to be easily human-readable, e.g. to convey the semantic meaning of the associated data values and the overall relationship among the elements of the data. This human-friendly, well-structured format enables a human being to quickly look through an arbitrary XML document and understand the data and its meaning. However, the raw content of most XML documents will never be seen by a human: instead, what the end user sees is typically created using a rendering application (such as an XML parser within a browser) which strips out the tags and displays only the embedded data content. The added overhead of the human-friendly tag syntax makes processing, e.g. parsing, of the document burdensome to the processor. Typically, an XML document is parsed and stored internally as a Document Object Model (DOM) tree representation by an XML parser. DOM trees are physically stored in a tree representation, using objects to represent the nodes in the tree, the attributes of the nodes, the values of the nodes, etc.","Transformations, i.e. operations, are then performed (e.g. by content renderers or style sheet processors) by operating upon this tree representation. For example, a particular transformation may include deleting elements from a document by pruning subtrees from the DOM tree; or renaming elements within a document by traversing the DOM tree to find the occurrences of the element name, and substituting the new name into the appropriate nodes of the DOM tree. (DOM is published as a Recommendation of the World Wide Web Consortium (\u201cW3C\u201d), titled \u201cDocument Object Model (DOM) Level 1 Specification, Version 1.0\u201d (1998) and available on the Web at www.w3.org. \u201cDOM\u201d is a trademark of Massachusetts Institute of Technology.) The type of transformation is typically target dependent. For example, such transformation may be performed according to an intended recipient's registered preferences or according to capabilities of a target device, e.g. a Web-enabled wireless telephone. Transformations are very processor intensive and are becoming more prevalent, and thus more burdensome, as a broader range of heterogeneous devices seek to access a common set of data.","The parsing, including creation of a DOM tree, and transformation of documents is typically performed by special purpose software executed by a general purpose hardware processor. For example, these steps are typically performed by a server on an edge of a network, e.g. using a WebSphere\u00ae Transcoding Product (WTP) special purpose software manufactured and\/or distributed by International Business Machines Corporation of Armonk, N.Y., U.S.A. (\u201cIBM\u201d) and executable by a general purpose processor, such as a standard PC's microprocessor.","In some embodiments, the document tree may be manipulated to create a document array model structure, as is generally known in the art. Generally, in an array model, data is organized to represent an ordered set of values that can be accessed by supplying one or more values which uniquely identify one of the values of the set. Accordingly, human-friendly markup language tags are represented in an array model rather than a tree model. The array model simplifies and expedites processing.","In addition, XML documents can be transformed into or represented in the mXML language, a machine-oriented language similar to XML. U.S. Pat. No. 6,904,562, titled \u201cMachine-Oriented Extensible Document Representation And Interchange Notation\u201d (application Ser. No. 09\/652,056), filed Aug. 31, 2000, discloses the mXML notation. The mXML notation is more compact than the human-friendly XML notation and therefore provides performance gains in processing and transmission.","The parsing, transformation and other manipulation steps, e.g. XML document recognition, content based style sheet selection, content based routing and other traditional XML processing steps, are tremendously processor intensive, which is burdensome on the general purpose processor and other system resources. Specifically, such processing steps prevent or delay the general purpose processor from performing other tasks required of the general purpose processor.","What is needed is a special purpose, dedicated processor for processing documents encoded in a markup language such as XML which can free the general purpose processor to perform other tasks, and at least a hardware-based dedicated processor which can provide for optimization of processing steps by eliminating or reducing inefficiencies in human-friendly software code of the type heretofore known by relying on machine language characteristics.","The present invention provides a method and apparatus for efficient processing of documents using a dedicated (special purpose) processor. The dedicated processor is capable of performing traditional parsing, transformations and manipulation processes, e.g. on an XML document. Conceptually, the use of a special purpose processor for processing the document frees the general purpose processor to perform other tasks, resulting in an increase in system performance. In other words, the dedicated processor does not compete for system resources.","In one embodiment, the dedicated processor is implemented in special purpose hardware, e.g. an integrated circuit embodied in one or more silicon chips. This is particularly advantageous because it allows use of machine code and other speed-related advantages typical of hardware implementations. For example, performance can be improved by configuring the dedicated processor to process mXML documents, by first converting XML documents to mXML if necessary. This is particularly advantageous in a hardware-based embodiment. Configuring the dedicated processor to represent documents in array-based notation can also be used to enhanced performance, e.g. in mXML-based embodiments. A hardware implementation is particularly useful in a single processor computer system, e.g. as a hardwired chip in communication with the general purpose processor.","In another embodiment, the dedicated processor includes a general purpose processor and suitable software which is provided in addition to the general purpose processor which has been traditionally used for processing documents encoded in a markup language. For example, one of several general purpose processors in a multi-processor computer system may be designated as the dedicated processor.","In either embodiment, the dedicated processor may be provided remotely, e.g. in a processing device which receives and processes documents before receipt by the intended target. An arrangement is which the dedicated processor is network accessible has been found particularly advantageous because it is capable of supporting numerous devices and thereby offloading processing for numerous devices. Alternatively, in either a hardware-or software-based embodiment, the dedicated processor may be provided locally in the target device, e.g. co-located with a general purpose processor in a single device.","To achieve further performance benefits, the dedicated processor may optionally be configured to carry out XML processing using the array-based notation disclosed in U.S. Pat. No. 6,938,204, titled \u201cArray-Based Extensible Document Storage Format\u201d (application Ser. No. 09\/652,296, the transformation techniques disclosed in U.S. Pat. No. 6,941,511, titled \u201cHigh-Performance Extensible Document Transformation\u201d (application Ser. No. 09\/653,080), and the machine-oriented XML notation disclosed in U.S. Pat. No. 6,904,562, titled \u201cMachine-Oriented Extensible Document Representation And Interchange Notation\u201d (application Ser. No. 09\/652,056), each filed Aug. 31, 2000.","The present invention provides a method for efficient processing of a document encoded in a markup language, the method comprising the step of communicating an array-based data model representing the document to an application process through a bus of a printed circuit board. The present invention further provides a method for efficient processing of a document encoded in a markup language comprising the steps of receiving a document intended for delivery to a target, processing the document using a special purpose processor, and passing the processed document to the target for further processing by a general purpose processor.",{"@attributes":{"id":"p-0025","num":"0024"},"figref":"FIG. 1","b":"10"},"As shown in , the method starts with receipt of a document, e.g. an XML document, intended for delivery to a target, as shown at steps  and . As used herein, the target could be a target device or a target application process, such as a web browser, business-to-business environment process, business-to-client environment process, business logic process, back-end server process, edge server process, web service information exchange process, etc. The document is then processed using a special purpose processor in accordance with the present invention, as shown at step . This relieves a general purpose processor, which has heretofore been used to perform such processing, of the intensive processing which typically significantly burdens system resources. In other words, the processing of the document is offloaded from the general purpose processor which traditionally has performed such processing. The processed document is then passed to the target for further processing, e.g. post-processing including rendering, another transformation, routing to another application process, etc., as shown at step . Such post-processing is performed by the general purpose processor, as is well known in the art. It may be advantageous to perform such post-processing at the target. However, the most-intensive processing has been effectively offloaded to the special purpose processor. This greatly enhances system performance. The method then ends, as shown at step .","Accordingly, the special purpose processor receives as input an XML document in the form of DOM, DAM, MXML or STREAM and a style sheet. In addition, a node tree associated with the document is communicated to an application process through a bus of a printed circuit board. This occurs regardless of whether the special purpose processor is hardware or software-based (as discussed further below), or whether the special purpose processor is located locally or remotely, as discussed further below. This communication also results regardless of whether the document is transformed or otherwise manipulated after parsing, or a combination thereof.","The added overhead of the human-friendly tag syntax makes processing, e.g. parsing to create the DOM tree, of the document burdensome to the general purpose processor. This burden is unnecessary when the documents will only be \u201cseen\u201d by a computer program, such as for those documents which are formatted for interchange between computer programs for business-to-business (\u201cB2B\u201d) or business-to-consumer (\u201cB2C\u201d) use.","One way to improve processing efficiency is to abandon the human-friendly tag structure. The assignee hereof has previously developed a machine-oriented notation for use as an XML alternative. The machine-oriented notation improves processing time for arbitrarily-structured documents and reduces the storage requirements and transmission costs of data interchange while still retaining the extensibility and flexibility of XML and while conveying equivalent content and semantic information. This machine-oriented notation is referred to herein as \u201cmXML\u201d. U.S. Pat. No. 6,904,562, titled \u201cMachine-Oriented Extensible Document Representation And Interchange Notation\u201d (application Ser. No. 09\/652,056), filed Aug. 31, 2000 discloses the mXML notation, as well as a method, system, and computer program product for operating upon (e.g. parsing, and storing documents in) mXML. Accordingly, in a preferred embodiment, the dedicated processor is configured to understand and interpret mXML, thereby resulting in processing efficiencies.","Creation of a DOM tree is computationally expensive in terms of processing time and memory requirements. Using this tree-oriented DOM representation as an internal storage format requires a considerable amount of memory and\/or storage space to store the required objects. In addition, a number of computer program instructions must be executed to allocate memory and create the objects, delete objects and de-allocate memory, and traverse the tree structure to perform operations thereon. Execution of these instructions increases the processing time required for structured documents, as do the operating system-invoked instructions which are periodically executed to perform \u201cgarbage collection\u201d (whereby the space being used by objects can be reclaimed after the objects have been logically deleted or de-allocated).","Another way to improve processing efficiency is to use an array-based notation. The Xalan XSLT (Extensible Language Transformations) processor from the Apache Software Foundation reduces the number of objects used by DOM processors somewhat by providing an in-memory Document Table Model (\u201cDTM\u201d) representation of a DOM tree. An array is used instead of a set of \u201creal objects\u201d for storing the DOM tree itself. However, there are still many objects around to represent the XML data content of a document (including objects for the nodes, node values, attributes, attribute values, etc.). Array-based processing makes it easier to navigate the tree structure, e.g. for transformation purposes, etc. Accordingly, by implementing array-based processing into the dedicated processor, further performance gains are realized. In a highly preferred embodiment, the dedicated processor is configured to process a document using the array-based notation disclosed in U.S. Pat. No. 6,938,204, titled \u201cArray-Based Extensible Document Storage Format\u201d (application Ser. No. 09\/652,296).",{"@attributes":{"id":"p-0032","num":"0031"},"figref":["FIG. 2A","FIG. 1","FIG. 2A"],"b":"20"},{"@attributes":{"id":"p-0033","num":"0032"},"figref":["FIG. 3","FIG. 3","FIG. 2A","FIG. 3","FIG. 2A","FIG. 3","FIG. 2A","FIG. 2A"],"b":["346","310","310","346","310","348","310","346","310","348","346","22","346","24","346"],"i":["a ","a ","a ","a ","a "]},"Optionally, e.g. if required for the target device, the document is further processed to perform a transformation, as shown at step  of . For example, such transformations are typically performed to format content deliverable to handheld devices such as personal digital assistant (PDA) device or web-enabled wireless telephone of . For example, such transformations are now typically performed by IBM's Websphere\u00ae (Transcoding Product (WTP) software, e.g. stored on gateway server  of . Using the special purpose processor to perform such transformation provides a substantial improvement in system performance (e.g. in processing device ). The particular transformation required is typically device specific, e.g. to provide lower-resolution or no images, etc., or user-specific, e.g. according to a user-preference profile, for example, to eliminate certain types of content.","Referring again to , the processed, e.g. parsed and\/or transformed, XML document is transmitted via a communications network to the target device for post-processing by the target device's general purpose processor, as shown at step . For example, this step may be performed by the CPU of personal computer device of , e.g. to display the document via web browser software. The process then ends, as shown at step . In this manner, burdens on the general purpose processor of the target device normally associated with parsing and\/or transforming of the document are eliminated by offloading such burdens to the special purpose processor of the processing device, e.g. server .",{"@attributes":{"id":"p-0036","num":"0035"},"figref":["FIG. 2B","FIG. 1","FIG. 2B"],"b":"30"},"The networked computing environment of  can also be used to practice the invention according to the logic set forth in . For the example of , consider that server  of  is a multi-processor processing device and that a software-based special purpose processor is implemented in server  by dedicating one of the general purpose processors to the task of XML processing, by running software stored in the memory of server . For this example, consider that server  is the target, unlike the example of  discussed above in which the workstation was the target and processing was being offloaded from the workstation to the special processor of server  (a remotely provided special purpose processor example). In this example, processing is being offloaded from the general purpose processor of server  to the special purpose processor of server . A processing device in accordance with the present invention is discussed in detail below with reference to .","Referring to , the process starts with receipt of an XML document at the processing (in this case target) device, as shown at steps ,  of . The XML document is then parsed and transformed by the special purpose processor, as shown at steps  and  of . These steps are similar to steps  and  of . However, in this example, these steps are performed by the local special purpose processor  (in this example a general purpose processor which runs software stored in the memory ,  of the workstation ) of the processing device of . The parsed and\/or transformed XML document is then passed to the general purpose processor, as shown at step , e.g. for post-processing. For example, this step includes communicating a node tree representing the document to an application process running locally through a bus of a printed circuit board. Because the special processor is provided locally, this step need not include transmitting the processed document via a communications network, as in the example of .","In summary, a special processor could be provided locally in server  of  to offload processing from a general purpose processor in server  (a local embodiment) or to offload processing from a workstation, e.g. (a remote embodiment). In either of the local or remote embodiments, the special processor may be provided in either a hardware implementation (a special purpose chip or chipset) or a software implementation (an additional general purpose processor and special purpose software).","Network",{"@attributes":{"id":"p-0040","num":"0039"},"figref":"FIG. 3","b":["340","340","342","344","410","410","410"],"i":["a","b","c"]},"The networks  and  may also include mainframe computers or servers, such as a gateway computer  or application server  (which may access a data repository ). A gateway computer  serves as a point of entry into each network . The gateway computer  may be preferably coupled to another network  by means of a communications link . The gateway computer  may also be directly coupled to one or more workstations, e.g , using acommunications link , . The gateway computer  may be implemented using any appropriate processor, such as IBM's Network Processor. For example, the gateway computer  may be implemented using an IBM pSeries (RS\/6000) or xSeries (Netfinity) computer system, an Enterprise Systems Architecture\/370 available from IBM, an Enterprise Systems Architecture\/390 computer, etc. Depending on the application, a midrange computer, such as an Application System\/400 (also known as an AS\/400) may be employed. (\u201cEnterprise Systems Architecture\/370\u201d is a trademark of IBM; \u201cEnterprise Systems Architecture\/390\u201d, \u201cApplication System\/400\u201d, and \u201cAS\/400\u201d are registered trademarks of IBM.) These are merely representative types of computers with which the present invention may be used.","The gateway computer  may also be coupled  to a storage device (such as data repository ). Further, the gateway  may be directly or indirectly coupled to one or more workstations\/devices , , and servers such as application server .","Those skilled in the art will appreciate that the gateway computer  may be located a great geographic distance from the network , and similarly, the workstations\/devices may be located a substantial distance from the networks  and . For example, the network  may be located in California, while the gateway  may be located in Texas, and one or more of the workstations\/devices  may be located in New York. The workstations\/devices  may connect to the wireless network  using a networking protocol such as the Transmission Control Protocol\/Internet Protocol (\u201cTCP\/IP\u201d) over a number of alternative connection media, such as cellular phone, radio frequency networks, satellite networks, etc. The wireless network  preferably connects to the gateway  using a network connection such as TCP or UDP (User Datagram Protocol) over IP, X.25, Frame Relay, ISDN (Integrated Services Digital Network), PSTN (Public Switched Telephone Network), etc. The workstations\/devices  may alternatively connect directly to the gateway  using dial connections or . Further, the wireless network  and network  may connect to one or more other networks (not shown), in an analogous manner to that depicted in .","The present invention may be used on a client computer or server in a networking environment, or on a standalone workstation (for example, to prepare a file or to process a file which has been received over a network connection, via a removable storage medium, etc.). (Note that references herein to client and server devices are for purposes of illustration and not of limitation: the present invention may also be used advantageously with other networking models.) When used in a networking environment, the client and server devices may be connected using a \u201cwireline\u201d connection or a \u201cwireless\u201d connection. Wireline connections are those that use physical media such as cables and telephone lines, whereas wireless connections use media such as satellite links, radio frequency waves, and infrared waves. Many connection techniques can be used with these various media, such as: using the computer's modem to establish a connection over a telephone line; using a LAN card such as Token Ring or Ethernet; using a cellular modem to establish a wireless connection; etc. The workstation or client computer may be any type of computer processor, including laptop, handheld or mobile computers; vehicle-mounted devices; desktop computers; mainframe computers; etc., having processing (and, optionally, communication) capabilities. The server, similarly, can be one of any number of different types of computer which have processing and communication capabilities. These techniques are well known in the art, and the hardware devices and software which enable their use are readily available.","Processing Device",{"@attributes":{"id":"p-0045","num":"0044"},"figref":["FIG. 4","FIG. 3"],"b":["410","410","310","346"],"i":"a "},"As is well known in the art, the workstation of  includes a representative processing device, e.g. a single user computer workstation , such as a personal computer, including related peripheral devices. The workstation  includes a general purpose microprocessor  and a bus  employed to connect and enable communication between the microprocessor  and the components of the workstation  in accordance with known techniques. The workstation  typically includes a user interface adapter , which connects the microprocessor  via the bus  to one or more interface devices, such as a keyboard , mouse , and\/or other interface devices , which can be any user interface device, such as a touch sensitive screen, digitized entry pad, etc. The bus  also connects a display device , such as an LCD screen or monitor, to the microprocessor  via a display adapter . The bus  also connects the microprocessor  to memory  and long-term storage  (collectively, \u201cmemory\u201d) which can include a hard drive, diskette drive, tape drive, etc.","The workstation  may communicate with other computers or networks of computers, for example via a communications channel or modem . Alternatively, the workstation  may communicate using a wireless interface at , such as a CDPD (cellular digital packet data) card. The workstation  may be associated with such other computers in a LAN or a wide area network (WAN), or the workstation  can be a client in a client\/server arrangement with another computer, etc. All of these configurations, as well as the appropriate communications hardware and software, are known in the art.","In accordance with the present invention, a special purpose processor  is provided in communication with general purpose microprocessor , memory , long term storage device , etc. by bus . When used to offload processing from a local general purpose processor, the workstation  provides exceptional performance improvements because of the proximity and\/or priority of the special processor to the general purpose processor from which processing tasks are offloaded.","In the software-based example of , the special purpose processor  includes a dedicated general purpose microprocessor running processing software stored in the memory  and\/or storage device . In a hardware-based embodiment, the special purpose processor  includes a special purpose chip or chipset. In either embodiment, additional performance gains can be realized by configuring the special purpose processor to use array-based processing and\/or machine language based processing, e.g. mXML. Additional performance gains can be realized by optimizing the hardware-based embodiment to use such array-based processing and\/or mMXL. For example, the special purpose processor  may be implemented through a combination of special purpose hardware and microcode that may also include a general purpose processor that offloads nonrepetitive tasks from the special purpose processor, e.g. to t handle infrequent software functions such as processing style sheet updates, managing personalization or content\/data, caching, etc.","Having thus described particular embodiments of the invention, various alterations, modifications, and improvements will readily occur to those skilled in the art. Such alterations, modifications and improvements as are made obvious by this disclosure are intended to be part of this description though not expressly stated herein, and are intended to be within the spirit and scope of the invention. Accordingly, the foregoing description is by way of example only, and not limiting. The invention is limited only as defined in the following claims and equivalents thereto."],"brief-description-of-drawings":[{},{}],"description-of-drawings":{"heading":"DESCRIPTION OF THE DRAWINGS","p":[{"@attributes":{"id":"p-0020","num":"0019"},"figref":"FIG. 1"},{"@attributes":{"id":"p-0021","num":"0020"},"figref":["FIG. 2A","FIG. 1"]},{"@attributes":{"id":"p-0022","num":"0021"},"figref":["FIG. 2B","FIG. 1"]},{"@attributes":{"id":"p-0023","num":"0022"},"figref":"FIG. 3"},{"@attributes":{"id":"p-0024","num":"0023"},"figref":"FIG. 4"}]},"DETDESC":[{},{}]}
